ENTRY 1: Oct 30 2020

1.  'def' statements now accept a mandatory return type after '='
    'def' TID is no more; use 'struct' or 'enum'; disable type-renaming a la C# for now.
    - use TID 'Unit' to explicitly return void
    - remove cast statements to accomodate (3)
2.  typefuncs are now called like valfuncs, promoting orthogoality
    clear 'first'-pattern relation orthogonal to values:
    - singleton patterns: '(...)'           
        cannot be nested, LL(2) for type/value
    - destructured patterns: '{...}'
    - optional template patterns: '[...]'
        like singleton pattern, but TID-only
        never actual; inferred from other v-patterns
3.  type expressions in value contexts => type args, just like value args
    - declare with TID:ClassName rather than vid:TypeName
    - to pass [mandatory] template args, pass like value args
        let dict = newDict Text Int;
    - beware parser ambiguity in ^T, ^^T, ... and other shared unary operators
    - what about cast? remove for (1)
