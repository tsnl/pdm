# Changes:
# - templates only allowed in 'sub' blocks, here called 'macro'
# - typeclasses get their own 'sub' most of the time
#   - new 'class' keyword
# - since module fields no longer take targs,
#   - can change 'fn' syntax, remove 'fn' keyword
#   - can change postfix '[]' call in exp context; only before ':' in modules.
# - add '=' after 'mod' and 'sub'

mod Greetings = {

    sub Vector [ElementType Any] = {
        Type = {
            data  Slice[ElementType]:Type,
            count UInt64
        };
        append = (v Type, elem ElementType) -> Type {
            # TODO: implement me
        };
    };

    sub Iter [ElementType Any] = {
        sub Iterable = {
            cls Cls <IterableType StructCls> = {
                IterableType :< {
                    begin Iterator[IterableType]:Cls,
                    end   Iterator[IterableType]:Cls
                };
            };
        };
        sub Iterator [IterableType Iterable:Cls] = {
            cls Cls <IteratorType StructCls> = {
                IteratorType :< {
                    # not feasible in this language
                    # bc can't store a ref to iterable
                }
            };
        };

        sub Impl [IterableType IterableCls, IteratorType IteratorCls] = {
            cls Impl <ModuleType ModuleCls> = {
                ModuleType :< {

                };
            };
        };
    };

};
