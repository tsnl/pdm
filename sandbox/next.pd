# Changes:
# - templates only allowed in 'sub' blocks, here called 'macro'
# - typeclasses get their own 'sub' most of the time
#   - new 'class' keyword
# - since module fields no longer take targs,
#   - can change 'fn' syntax, remove 'fn' keyword
#   - can change postfix '[]' call in exp context; only before ':' in modules.
# - add '=' after 'mod' and 'sub'

Greetings module = {

    Vector submodule (ElementType Any) = {
        Type = {
            data  Slice(ElementType):Type,
            count UInt64
        };
        append = fn (v Type, elem ElementType) Type {
            # TODO: implement me
        };
    };

    Iter submodule (ElementType Any) = {
        Iterable submodule = {
            Cls contains (IterableType StructCls) if {
                IterableType :< {
                    begin Iterator(IterableType):Cls,
                    end   Iterator(IterableType):Cls
                }
            };
        };
        Iterator submodule (IterableType Iterable:Cls) = {
            Cls contains (IteratorType StructCls) if {
                IteratorType :< {
                    getter Fn (IteratorType) ElementType,
                    setter Fn (inout IteratorType, ElementType) Void
                }
            };
        };

        Impl submodule (IterableType IterableCls, IteratorType IteratorCls) = {
            Impl contains (ModuleType ModuleCls) if {
                ModuleType :< {

                };
            };
        };
    };

};
