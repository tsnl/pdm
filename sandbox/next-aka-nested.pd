mod next {
    mod ll_base {
        let LL_NODE = typeclass (NodeType STRUCT) {
            NodeType :< {
                index UInt32,
                value UInt32
            };
        };
        let NodeAllocator = {
            allocator Fn () UInt32
        };
    };

    mod linked_list [Node ll_base:LL_NODE, impl NodeImpl] {

        let add (node1 Node, node2 Node) Node = {
            index = impl.allocator(rtti[Node]:size),
            value = node1.value + node2.value
        };

        let hello = 24;
    };

    mod testing {
        let Rectangle = {Int32, Int32};

        let rectangle (dim Rectangle) Rectangle = {
            x * x
        };
    };
};
