Terminals unused in grammar

    "a HOLE (ID without any letters)"
    "'namespace'"
    "'operator'"
    "'match'"
    "'with'"
    "'return'"
    "'discard'"
    "'export'"
    "'fun'"
    "'::'"
    "':::'"
    "'$'"
    "'!'"
    "EOS"


Grammar

    0 $accept: script $end

    1 script: scriptContent

    2 scriptContent: module "';'"
    3              | scriptContent module "';'"

    4 module: "'mod'" "a VID (ID with first letter lowercase)" "'{'" moduleContent "'}'"

    5 moduleContent: moduleContentStmt "';'"
    6              | moduleContent moduleContentStmt "';'"

    7 chainPrefixStmt: letStmt
    8                | setStmt
    9                | discardStmt

   10 letStmt: "'let'" lpattern "'='" expr

   11 setStmt: "'set'" expr "'='" expr

   12 discardStmt: "'do'" expr

   13 moduleContentStmt: defStmt
   14                  | typedefStmt
   15                  | typedefStmt_enum
   16                  | moduleStmt
   17                  | importStmt
   18                  | externStmt

   19 defStmt: "'def'" vid vpattern "'->'" castExpr
   20        | "'def'" vid tpattern vpattern "'->'" castExpr

   21 typedefStmt: "'type'" tid tpattern "'='" typespec

   22 typedefStmt_enum: "'enum'" tid tpattern "'='" vstruct

   23 moduleStmt: "'module'" vid "'from'" stringl "'as'" stringl

   24 importStmt: "'import'" vid "'.'" vid
   25           | "'import'" vid "'.'" vid "'*'"

   26 externStmt: "'extern'" "'def'" vid vpattern "'->'" typespec

   27 tid: "a TID (ID with first letter uppercase)"

   28 vid: "a VID (ID with first letter lowercase)"

   29 floatl: TK_FLOAT_LIT

   30 stringl: TK_SQSTRING_LIT
   31        | TK_DQSTRING_LIT

   32 unit: "'('" "')'"

   33 expr: binaryExpr

   34 expr_cl: expr
   35        | expr_cl "','" expr

   36 expr_cl2: expr "','" expr
   37         | expr_cl2 "','" expr

   38 parenExpr: unit
   39          | vparen
   40          | vtuple
   41          | vstruct
   42          | chain

   43 primaryExpr: parenExpr
   44            | vid
   45            | TK_DINT_LIT
   46            | TK_XINT_LIT
   47            | floatl
   48            | stringl
   49            | ifThenElse

   50 vparen: "'('" expr "')'"

   51 vtuple: "'('" expr_cl2 "')'"

   52 vstruct: "'{'" vstructField_cl "'}'"

   53 ifThenElse: "'if'" parenExpr "'then'" parenExpr
   54           | "'if'" parenExpr "'then'" parenExpr "'else'" parenExpr

   55 chain: "'{'" expr "'}'"
   56      | "'{'" chainPrefix "'}'"
   57      | "'{'" chainPrefix expr "'}'"

   58 chainPrefix: chainPrefixStmt "';'"
   59            | chainPrefix chainPrefixStmt "';'"

   60 postfixExpr: primaryExpr
   61            | vtcall
   62            | vvcall
   63            | dotNmExpr
   64            | dotIxExpr
   65            | colonNmExpr

   66 vtcall: postfixExpr "'['" vtarg_cl "']'"

   67 vvcall: postfixExpr "'('" "')'"
   68       | postfixExpr "'('" expr_cl "')'"

   69 dotNmExpr: postfixExpr "'.'" "a VID (ID with first letter lowercase)"

   70 dotIxExpr: postfixExpr "'.'" TK_DINT_LIT

   71 colonNmExpr: postfixExpr "':'" "a VID (ID with first letter lowercase)"

   72 castExpr: postfixExpr
   73         | typespec parenExpr

   74 unaryExpr: castExpr
   75          | unaryOp unaryExpr

   76 unaryOp: "'+'"
   77        | "'-'"
   78        | "'*'"
   79        | "'^'"
   80        | "'not'"

   81 binaryExpr: orBinaryExpr

   82 mulBinaryOp: "'*'"
   83            | "'/'"
   84            | "'%'"

   85 mulBinaryExpr: unaryExpr
   86              | mulBinaryExpr mulBinaryOp unaryExpr

   87 addBinaryOp: "'+'"
   88            | "'-'"

   89 addBinaryExpr: mulBinaryExpr
   90              | addBinaryExpr addBinaryOp mulBinaryExpr

   91 cmpBinaryOp: "'<'"
   92            | "'<='"
   93            | "'>'"
   94            | "'>='"

   95 cmpBinaryExpr: addBinaryExpr
   96              | cmpBinaryExpr cmpBinaryOp addBinaryExpr

   97 eqBinaryOp: "'=='"
   98           | "'!='"

   99 eqBinaryExpr: cmpBinaryExpr
  100             | eqBinaryExpr eqBinaryOp cmpBinaryExpr

  101 andBinaryExpr: eqBinaryExpr
  102              | andBinaryExpr "'and'" eqBinaryExpr

  103 xorBinaryExpr: andBinaryExpr
  104              | xorBinaryExpr "'xor'" andBinaryExpr

  105 orBinaryExpr: xorBinaryExpr
  106             | orBinaryExpr "'or'" xorBinaryExpr

  107 typespec: postfixTypespec

  108 typespec_cl: typespec
  109            | typespec_cl "','" typespec

  110 primaryTypespec: tid
  111                | "'Tuple'" "'['" typespec_cl "']'"
  112                | "'Array'" "'['" typespec "','" expr "']'"

  113 postfixTypespec: primaryTypespec
  114                | postfixTypespec "'['" ttarg_cl "']'"
  115                | postfixTypespec "'^'"

  116 ttarg: typespec
  117      | expr

  118 ttarg_cl: ttarg
  119         | ttarg_cl "','" ttarg

  120 vtarg: typespec
  121      | expr

  122 vtarg_cl: vtarg
  123         | vtarg_cl "','" vtarg

  124 vstructField: vid "'='" expr

  125 vstructField_cl: vstructField
  126                | vstructField_cl "','" vstructField

  127 vpatternField: vid typespec

  128 tpatternField: tid
  129              | vpatternField

  130 lpattern: vpatternField
  131         | vpattern

  132 vpattern: "'('" vpatternField_cl "')'"
  133         | unit

  134 tpattern: "'['" tpatternField_cl "']'"

  135 vpatternField_cl: vpatternField
  136                 | vpatternField_cl "','" vpatternField

  137 tpatternField_cl: tpatternField
  138                 | tpatternField_cl "','" tpatternField


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    "a VID (ID with first letter lowercase)" <token> (258) 4 28 69 71
    "a TID (ID with first letter uppercase)" <token> (259) 27
    "a HOLE (ID without any letters)" <token> (260)
    "'namespace'" (261)
    "'mod'" (262) 4
    "'do'" (263) 12
    "'if'" (264) 53 54
    "'then'" (265) 53 54
    "'else'" (266) 54
    "'operator'" (267)
    "'match'" (268)
    "'with'" (269)
    "'return'" (270)
    "'discard'" (271)
    "'module'" (272) 23
    "'import'" (273) 24 25
    "'export'" (274)
    "'extern'" (275) 26
    "'from'" (276) 23
    "'as'" (277) 23
    "'fun'" (278)
    "'let'" (279) 10
    "'set'" (280) 11
    "'def'" (281) 19 20 26
    "'type'" (282) 21
    "'enum'" (283) 22
    "'and'" (284) 102
    "'xor'" (285) 104
    "'or'" (286) 106
    "'not'" (287) 80
    "'Tuple'" (288) 111
    "'Array'" (289) 112
    TK_DINT_LIT <token> (290) 45 70
    TK_XINT_LIT <token> (291) 46
    TK_FLOAT_LIT <token> (292) 29
    TK_DQSTRING_LIT <token> (293) 31
    TK_SQSTRING_LIT <token> (294) 30
    "'.'" (295) 24 25 69 70
    "':'" (296) 71
    "','" (297) 35 36 37 109 112 119 123 126 136 138
    "';'" (298) 2 3 5 6 58 59
    "'::'" (299)
    "':::'" (300)
    "'('" (301) 32 50 51 67 68 132
    "')'" (302) 32 50 51 67 68 132
    "'['" (303) 66 111 112 114 134
    "']'" (304) 66 111 112 114 134
    "'{'" (305) 4 52 55 56 57
    "'}'" (306) 4 52 55 56 57
    "'->'" (307) 19 20 26
    "'*'" (308) 25 78 82
    "'/'" (309) 83
    "'%'" (310) 84
    "'+'" (311) 76 87
    "'-'" (312) 77 88
    "'<'" (313) 91
    "'<='" (314) 92
    "'>'" (315) 93
    "'>='" (316) 94
    "'='" (317) 10 11 21 22 124
    "'=='" (318) 97
    "'!='" (319) 98
    "'$'" (320)
    "'^'" (321) 79 115
    "'!'" (322)
    "EOS" (323)


Nonterminals, with rules where they appear

    $accept (69)
        on left: 0
    script <nt> (70)
        on left: 1
        on right: 0
    scriptContent <ntSb> (71)
        on left: 2 3
        on right: 1 3
    module <nt> (72)
        on left: 4
        on right: 2 3
    moduleContent <ntSb> (73)
        on left: 5 6
        on right: 4 6
    chainPrefixStmt <nt> (74)
        on left: 7 8 9
        on right: 58 59
    letStmt <nt> (75)
        on left: 10
        on right: 7
    setStmt <nt> (76)
        on left: 11
        on right: 8
    discardStmt <nt> (77)
        on left: 12
        on right: 9
    moduleContentStmt <nt> (78)
        on left: 13 14 15 16 17 18
        on right: 5 6
    defStmt <nt> (79)
        on left: 19 20
        on right: 13
    typedefStmt <nt> (80)
        on left: 21
        on right: 14
    typedefStmt_enum <nt> (81)
        on left: 22
        on right: 15
    moduleStmt <nt> (82)
        on left: 23
        on right: 16
    importStmt <nt> (83)
        on left: 24 25
        on right: 17
    externStmt <nt> (84)
        on left: 26
        on right: 18
    tid <token> (85)
        on left: 27
        on right: 21 22 110 128
    vid <token> (86)
        on left: 28
        on right: 19 20 23 24 25 26 44 124 127
    floatl <token> (87)
        on left: 29
        on right: 47
    stringl <token> (88)
        on left: 30 31
        on right: 23 48
    unit <nt> (89)
        on left: 32
        on right: 38 133
    expr <nt> (90)
        on left: 33
        on right: 10 11 12 34 35 36 37 50 55 57 112 117 121 124
    expr_cl <ntSb> (91)
        on left: 34 35
        on right: 35 68
    expr_cl2 <ntSb> (92)
        on left: 36 37
        on right: 37 51
    parenExpr <nt> (93)
        on left: 38 39 40 41 42
        on right: 43 53 54 73
    primaryExpr <nt> (94)
        on left: 43 44 45 46 47 48 49
        on right: 60
    vparen <nt> (95)
        on left: 50
        on right: 39
    vtuple <nt> (96)
        on left: 51
        on right: 40
    vstruct <nt> (97)
        on left: 52
        on right: 22 41
    ifThenElse <nt> (98)
        on left: 53 54
        on right: 49
    chain <nt> (99)
        on left: 55 56 57
        on right: 42
    chainPrefix <ntSb> (100)
        on left: 58 59
        on right: 56 57 59
    postfixExpr <nt> (101)
        on left: 60 61 62 63 64 65
        on right: 66 67 68 69 70 71 72
    vtcall <nt> (102)
        on left: 66
        on right: 61
    vvcall <nt> (103)
        on left: 67 68
        on right: 62
    dotNmExpr <nt> (104)
        on left: 69
        on right: 63
    dotIxExpr <nt> (105)
        on left: 70
        on right: 64
    colonNmExpr <nt> (106)
        on left: 71
        on right: 65
    castExpr <nt> (107)
        on left: 72 73
        on right: 19 20 74
    unaryExpr <nt> (108)
        on left: 74 75
        on right: 75 85 86
    unaryOp <uop> (109)
        on left: 76 77 78 79 80
        on right: 75
    binaryExpr <nt> (110)
        on left: 81
        on right: 33
    mulBinaryOp <bop> (111)
        on left: 82 83 84
        on right: 86
    mulBinaryExpr <nt> (112)
        on left: 85 86
        on right: 86 89 90
    addBinaryOp <bop> (113)
        on left: 87 88
        on right: 90
    addBinaryExpr <nt> (114)
        on left: 89 90
        on right: 90 95 96
    cmpBinaryOp <bop> (115)
        on left: 91 92 93 94
        on right: 96
    cmpBinaryExpr <nt> (116)
        on left: 95 96
        on right: 96 99 100
    eqBinaryOp <bop> (117)
        on left: 97 98
        on right: 100
    eqBinaryExpr <nt> (118)
        on left: 99 100
        on right: 100 101 102
    andBinaryExpr <nt> (119)
        on left: 101 102
        on right: 102 103 104
    xorBinaryExpr <nt> (120)
        on left: 103 104
        on right: 104 105 106
    orBinaryExpr <nt> (121)
        on left: 105 106
        on right: 81 106
    typespec <nt> (122)
        on left: 107
        on right: 21 26 73 108 109 112 116 120 127
    typespec_cl <ntSb> (123)
        on left: 108 109
        on right: 109 111
    primaryTypespec <nt> (124)
        on left: 110 111 112
        on right: 113
    postfixTypespec <nt> (125)
        on left: 113 114 115
        on right: 107 114 115
    ttarg <nt> (126)
        on left: 116 117
        on right: 118 119
    ttarg_cl <ntSb> (127)
        on left: 118 119
        on right: 114 119
    vtarg <nt> (128)
        on left: 120 121
        on right: 122 123
    vtarg_cl <ntSb> (129)
        on left: 122 123
        on right: 66 123
    vstructField <nt> (130)
        on left: 124
        on right: 125 126
    vstructField_cl <ntSb> (131)
        on left: 125 126
        on right: 52 126
    vpatternField <nt> (132)
        on left: 127
        on right: 129 130 135 136
    tpatternField <nt> (133)
        on left: 128 129
        on right: 137 138
    lpattern <nt> (134)
        on left: 130 131
        on right: 10
    vpattern <nt> (135)
        on left: 132 133
        on right: 19 20 26 131
    tpattern <nt> (136)
        on left: 134
        on right: 20 21 22
    vpatternField_cl <ntSb> (137)
        on left: 135 136
        on right: 132 136
    tpatternField_cl <ntSb> (138)
        on left: 137 138
        on right: 134 138


State 0

    0 $accept: • script $end

    "'mod'"  shift, and go to state 1

    script         go to state 2
    scriptContent  go to state 3
    module         go to state 4


State 1

    4 module: "'mod'" • "a VID (ID with first letter lowercase)" "'{'" moduleContent "'}'"

    "a VID (ID with first letter lowercase)"  shift, and go to state 5


State 2

    0 $accept: script • $end

    $end  shift, and go to state 6


State 3

    1 script: scriptContent •
    3 scriptContent: scriptContent • module "';'"

    "'mod'"  shift, and go to state 1

    $default  reduce using rule 1 (script)

    module  go to state 7


State 4

    2 scriptContent: module • "';'"

    "';'"  shift, and go to state 8


State 5

    4 module: "'mod'" "a VID (ID with first letter lowercase)" • "'{'" moduleContent "'}'"

    "'{'"  shift, and go to state 9


State 6

    0 $accept: script $end •

    $default  accept


State 7

    3 scriptContent: scriptContent module • "';'"

    "';'"  shift, and go to state 10


State 8

    2 scriptContent: module "';'" •

    $default  reduce using rule 2 (scriptContent)


State 9

    4 module: "'mod'" "a VID (ID with first letter lowercase)" "'{'" • moduleContent "'}'"

    "'module'"  shift, and go to state 11
    "'import'"  shift, and go to state 12
    "'extern'"  shift, and go to state 13
    "'def'"     shift, and go to state 14
    "'type'"    shift, and go to state 15
    "'enum'"    shift, and go to state 16

    moduleContent      go to state 17
    moduleContentStmt  go to state 18
    defStmt            go to state 19
    typedefStmt        go to state 20
    typedefStmt_enum   go to state 21
    moduleStmt         go to state 22
    importStmt         go to state 23
    externStmt         go to state 24


State 10

    3 scriptContent: scriptContent module "';'" •

    $default  reduce using rule 3 (scriptContent)


State 11

   23 moduleStmt: "'module'" • vid "'from'" stringl "'as'" stringl

    "a VID (ID with first letter lowercase)"  shift, and go to state 25

    vid  go to state 26


State 12

   24 importStmt: "'import'" • vid "'.'" vid
   25           | "'import'" • vid "'.'" vid "'*'"

    "a VID (ID with first letter lowercase)"  shift, and go to state 25

    vid  go to state 27


State 13

   26 externStmt: "'extern'" • "'def'" vid vpattern "'->'" typespec

    "'def'"  shift, and go to state 28


State 14

   19 defStmt: "'def'" • vid vpattern "'->'" castExpr
   20        | "'def'" • vid tpattern vpattern "'->'" castExpr

    "a VID (ID with first letter lowercase)"  shift, and go to state 25

    vid  go to state 29


State 15

   21 typedefStmt: "'type'" • tid tpattern "'='" typespec

    "a TID (ID with first letter uppercase)"  shift, and go to state 30

    tid  go to state 31


State 16

   22 typedefStmt_enum: "'enum'" • tid tpattern "'='" vstruct

    "a TID (ID with first letter uppercase)"  shift, and go to state 30

    tid  go to state 32


State 17

    4 module: "'mod'" "a VID (ID with first letter lowercase)" "'{'" moduleContent • "'}'"
    6 moduleContent: moduleContent • moduleContentStmt "';'"

    "'module'"  shift, and go to state 11
    "'import'"  shift, and go to state 12
    "'extern'"  shift, and go to state 13
    "'def'"     shift, and go to state 14
    "'type'"    shift, and go to state 15
    "'enum'"    shift, and go to state 16
    "'}'"       shift, and go to state 33

    moduleContentStmt  go to state 34
    defStmt            go to state 19
    typedefStmt        go to state 20
    typedefStmt_enum   go to state 21
    moduleStmt         go to state 22
    importStmt         go to state 23
    externStmt         go to state 24


State 18

    5 moduleContent: moduleContentStmt • "';'"

    "';'"  shift, and go to state 35


State 19

   13 moduleContentStmt: defStmt •

    $default  reduce using rule 13 (moduleContentStmt)


State 20

   14 moduleContentStmt: typedefStmt •

    $default  reduce using rule 14 (moduleContentStmt)


State 21

   15 moduleContentStmt: typedefStmt_enum •

    $default  reduce using rule 15 (moduleContentStmt)


State 22

   16 moduleContentStmt: moduleStmt •

    $default  reduce using rule 16 (moduleContentStmt)


State 23

   17 moduleContentStmt: importStmt •

    $default  reduce using rule 17 (moduleContentStmt)


State 24

   18 moduleContentStmt: externStmt •

    $default  reduce using rule 18 (moduleContentStmt)


State 25

   28 vid: "a VID (ID with first letter lowercase)" •

    $default  reduce using rule 28 (vid)


State 26

   23 moduleStmt: "'module'" vid • "'from'" stringl "'as'" stringl

    "'from'"  shift, and go to state 36


State 27

   24 importStmt: "'import'" vid • "'.'" vid
   25           | "'import'" vid • "'.'" vid "'*'"

    "'.'"  shift, and go to state 37


State 28

   26 externStmt: "'extern'" "'def'" • vid vpattern "'->'" typespec

    "a VID (ID with first letter lowercase)"  shift, and go to state 25

    vid  go to state 38


State 29

   19 defStmt: "'def'" vid • vpattern "'->'" castExpr
   20        | "'def'" vid • tpattern vpattern "'->'" castExpr

    "'('"  shift, and go to state 39
    "'['"  shift, and go to state 40

    unit      go to state 41
    vpattern  go to state 42
    tpattern  go to state 43


State 30

   27 tid: "a TID (ID with first letter uppercase)" •

    $default  reduce using rule 27 (tid)


State 31

   21 typedefStmt: "'type'" tid • tpattern "'='" typespec

    "'['"  shift, and go to state 40

    tpattern  go to state 44


State 32

   22 typedefStmt_enum: "'enum'" tid • tpattern "'='" vstruct

    "'['"  shift, and go to state 40

    tpattern  go to state 45


State 33

    4 module: "'mod'" "a VID (ID with first letter lowercase)" "'{'" moduleContent "'}'" •

    $default  reduce using rule 4 (module)


State 34

    6 moduleContent: moduleContent moduleContentStmt • "';'"

    "';'"  shift, and go to state 46


State 35

    5 moduleContent: moduleContentStmt "';'" •

    $default  reduce using rule 5 (moduleContent)


State 36

   23 moduleStmt: "'module'" vid "'from'" • stringl "'as'" stringl

    TK_DQSTRING_LIT  shift, and go to state 47
    TK_SQSTRING_LIT  shift, and go to state 48

    stringl  go to state 49


State 37

   24 importStmt: "'import'" vid "'.'" • vid
   25           | "'import'" vid "'.'" • vid "'*'"

    "a VID (ID with first letter lowercase)"  shift, and go to state 25

    vid  go to state 50


State 38

   26 externStmt: "'extern'" "'def'" vid • vpattern "'->'" typespec

    "'('"  shift, and go to state 39

    unit      go to state 41
    vpattern  go to state 51


State 39

   32 unit: "'('" • "')'"
  132 vpattern: "'('" • vpatternField_cl "')'"

    "a VID (ID with first letter lowercase)"  shift, and go to state 25
    "')'"                                     shift, and go to state 52

    vid               go to state 53
    vpatternField     go to state 54
    vpatternField_cl  go to state 55


State 40

  134 tpattern: "'['" • tpatternField_cl "']'"

    "a VID (ID with first letter lowercase)"  shift, and go to state 25
    "a TID (ID with first letter uppercase)"  shift, and go to state 30

    tid               go to state 56
    vid               go to state 53
    vpatternField     go to state 57
    tpatternField     go to state 58
    tpatternField_cl  go to state 59


State 41

  133 vpattern: unit •

    $default  reduce using rule 133 (vpattern)


State 42

   19 defStmt: "'def'" vid vpattern • "'->'" castExpr

    "'->'"  shift, and go to state 60


State 43

   20 defStmt: "'def'" vid tpattern • vpattern "'->'" castExpr

    "'('"  shift, and go to state 39

    unit      go to state 41
    vpattern  go to state 61


State 44

   21 typedefStmt: "'type'" tid tpattern • "'='" typespec

    "'='"  shift, and go to state 62


State 45

   22 typedefStmt_enum: "'enum'" tid tpattern • "'='" vstruct

    "'='"  shift, and go to state 63


State 46

    6 moduleContent: moduleContent moduleContentStmt "';'" •

    $default  reduce using rule 6 (moduleContent)


State 47

   31 stringl: TK_DQSTRING_LIT •

    $default  reduce using rule 31 (stringl)


State 48

   30 stringl: TK_SQSTRING_LIT •

    $default  reduce using rule 30 (stringl)


State 49

   23 moduleStmt: "'module'" vid "'from'" stringl • "'as'" stringl

    "'as'"  shift, and go to state 64


State 50

   24 importStmt: "'import'" vid "'.'" vid •
   25           | "'import'" vid "'.'" vid • "'*'"

    "'*'"  shift, and go to state 65

    $default  reduce using rule 24 (importStmt)


State 51

   26 externStmt: "'extern'" "'def'" vid vpattern • "'->'" typespec

    "'->'"  shift, and go to state 66


State 52

   32 unit: "'('" "')'" •

    $default  reduce using rule 32 (unit)


State 53

  127 vpatternField: vid • typespec

    "a TID (ID with first letter uppercase)"  shift, and go to state 30
    "'Tuple'"                                 shift, and go to state 67
    "'Array'"                                 shift, and go to state 68

    tid              go to state 69
    typespec         go to state 70
    primaryTypespec  go to state 71
    postfixTypespec  go to state 72


State 54

  135 vpatternField_cl: vpatternField •

    $default  reduce using rule 135 (vpatternField_cl)


State 55

  132 vpattern: "'('" vpatternField_cl • "')'"
  136 vpatternField_cl: vpatternField_cl • "','" vpatternField

    "','"  shift, and go to state 73
    "')'"  shift, and go to state 74


State 56

  128 tpatternField: tid •

    $default  reduce using rule 128 (tpatternField)


State 57

  129 tpatternField: vpatternField •

    $default  reduce using rule 129 (tpatternField)


State 58

  137 tpatternField_cl: tpatternField •

    $default  reduce using rule 137 (tpatternField_cl)


State 59

  134 tpattern: "'['" tpatternField_cl • "']'"
  138 tpatternField_cl: tpatternField_cl • "','" tpatternField

    "','"  shift, and go to state 75
    "']'"  shift, and go to state 76


State 60

   19 defStmt: "'def'" vid vpattern "'->'" • castExpr

    "a VID (ID with first letter lowercase)"  shift, and go to state 25
    "a TID (ID with first letter uppercase)"  shift, and go to state 30
    "'if'"                                    shift, and go to state 77
    "'Tuple'"                                 shift, and go to state 67
    "'Array'"                                 shift, and go to state 68
    TK_DINT_LIT                               shift, and go to state 78
    TK_XINT_LIT                               shift, and go to state 79
    TK_FLOAT_LIT                              shift, and go to state 80
    TK_DQSTRING_LIT                           shift, and go to state 47
    TK_SQSTRING_LIT                           shift, and go to state 48
    "'('"                                     shift, and go to state 81
    "'{'"                                     shift, and go to state 82

    tid              go to state 69
    vid              go to state 83
    floatl           go to state 84
    stringl          go to state 85
    unit             go to state 86
    parenExpr        go to state 87
    primaryExpr      go to state 88
    vparen           go to state 89
    vtuple           go to state 90
    vstruct          go to state 91
    ifThenElse       go to state 92
    chain            go to state 93
    postfixExpr      go to state 94
    vtcall           go to state 95
    vvcall           go to state 96
    dotNmExpr        go to state 97
    dotIxExpr        go to state 98
    colonNmExpr      go to state 99
    castExpr         go to state 100
    typespec         go to state 101
    primaryTypespec  go to state 71
    postfixTypespec  go to state 72


State 61

   20 defStmt: "'def'" vid tpattern vpattern • "'->'" castExpr

    "'->'"  shift, and go to state 102


State 62

   21 typedefStmt: "'type'" tid tpattern "'='" • typespec

    "a TID (ID with first letter uppercase)"  shift, and go to state 30
    "'Tuple'"                                 shift, and go to state 67
    "'Array'"                                 shift, and go to state 68

    tid              go to state 69
    typespec         go to state 103
    primaryTypespec  go to state 71
    postfixTypespec  go to state 72


State 63

   22 typedefStmt_enum: "'enum'" tid tpattern "'='" • vstruct

    "'{'"  shift, and go to state 104

    vstruct  go to state 105


State 64

   23 moduleStmt: "'module'" vid "'from'" stringl "'as'" • stringl

    TK_DQSTRING_LIT  shift, and go to state 47
    TK_SQSTRING_LIT  shift, and go to state 48

    stringl  go to state 106


State 65

   25 importStmt: "'import'" vid "'.'" vid "'*'" •

    $default  reduce using rule 25 (importStmt)


State 66

   26 externStmt: "'extern'" "'def'" vid vpattern "'->'" • typespec

    "a TID (ID with first letter uppercase)"  shift, and go to state 30
    "'Tuple'"                                 shift, and go to state 67
    "'Array'"                                 shift, and go to state 68

    tid              go to state 69
    typespec         go to state 107
    primaryTypespec  go to state 71
    postfixTypespec  go to state 72


State 67

  111 primaryTypespec: "'Tuple'" • "'['" typespec_cl "']'"

    "'['"  shift, and go to state 108


State 68

  112 primaryTypespec: "'Array'" • "'['" typespec "','" expr "']'"

    "'['"  shift, and go to state 109


State 69

  110 primaryTypespec: tid •

    $default  reduce using rule 110 (primaryTypespec)


State 70

  127 vpatternField: vid typespec •

    $default  reduce using rule 127 (vpatternField)


State 71

  113 postfixTypespec: primaryTypespec •

    $default  reduce using rule 113 (postfixTypespec)


State 72

  107 typespec: postfixTypespec •
  114 postfixTypespec: postfixTypespec • "'['" ttarg_cl "']'"
  115                | postfixTypespec • "'^'"

    "'['"  shift, and go to state 110
    "'^'"  shift, and go to state 111

    $default  reduce using rule 107 (typespec)


State 73

  136 vpatternField_cl: vpatternField_cl "','" • vpatternField

    "a VID (ID with first letter lowercase)"  shift, and go to state 25

    vid            go to state 53
    vpatternField  go to state 112


State 74

  132 vpattern: "'('" vpatternField_cl "')'" •

    $default  reduce using rule 132 (vpattern)


State 75

  138 tpatternField_cl: tpatternField_cl "','" • tpatternField

    "a VID (ID with first letter lowercase)"  shift, and go to state 25
    "a TID (ID with first letter uppercase)"  shift, and go to state 30

    tid            go to state 56
    vid            go to state 53
    vpatternField  go to state 57
    tpatternField  go to state 113


State 76

  134 tpattern: "'['" tpatternField_cl "']'" •

    $default  reduce using rule 134 (tpattern)


State 77

   53 ifThenElse: "'if'" • parenExpr "'then'" parenExpr
   54           | "'if'" • parenExpr "'then'" parenExpr "'else'" parenExpr

    "'('"  shift, and go to state 81
    "'{'"  shift, and go to state 82

    unit       go to state 86
    parenExpr  go to state 114
    vparen     go to state 89
    vtuple     go to state 90
    vstruct    go to state 91
    chain      go to state 93


State 78

   45 primaryExpr: TK_DINT_LIT •

    $default  reduce using rule 45 (primaryExpr)


State 79

   46 primaryExpr: TK_XINT_LIT •

    $default  reduce using rule 46 (primaryExpr)


State 80

   29 floatl: TK_FLOAT_LIT •

    $default  reduce using rule 29 (floatl)


State 81

   32 unit: "'('" • "')'"
   50 vparen: "'('" • expr "')'"
   51 vtuple: "'('" • expr_cl2 "')'"

    "a VID (ID with first letter lowercase)"  shift, and go to state 25
    "a TID (ID with first letter uppercase)"  shift, and go to state 30
    "'if'"                                    shift, and go to state 77
    "'not'"                                   shift, and go to state 115
    "'Tuple'"                                 shift, and go to state 67
    "'Array'"                                 shift, and go to state 68
    TK_DINT_LIT                               shift, and go to state 78
    TK_XINT_LIT                               shift, and go to state 79
    TK_FLOAT_LIT                              shift, and go to state 80
    TK_DQSTRING_LIT                           shift, and go to state 47
    TK_SQSTRING_LIT                           shift, and go to state 48
    "'('"                                     shift, and go to state 81
    "')'"                                     shift, and go to state 52
    "'{'"                                     shift, and go to state 82
    "'*'"                                     shift, and go to state 116
    "'+'"                                     shift, and go to state 117
    "'-'"                                     shift, and go to state 118
    "'^'"                                     shift, and go to state 119

    tid              go to state 69
    vid              go to state 83
    floatl           go to state 84
    stringl          go to state 85
    unit             go to state 86
    expr             go to state 120
    expr_cl2         go to state 121
    parenExpr        go to state 87
    primaryExpr      go to state 88
    vparen           go to state 89
    vtuple           go to state 90
    vstruct          go to state 91
    ifThenElse       go to state 92
    chain            go to state 93
    postfixExpr      go to state 94
    vtcall           go to state 95
    vvcall           go to state 96
    dotNmExpr        go to state 97
    dotIxExpr        go to state 98
    colonNmExpr      go to state 99
    castExpr         go to state 122
    unaryExpr        go to state 123
    unaryOp          go to state 124
    binaryExpr       go to state 125
    mulBinaryExpr    go to state 126
    addBinaryExpr    go to state 127
    cmpBinaryExpr    go to state 128
    eqBinaryExpr     go to state 129
    andBinaryExpr    go to state 130
    xorBinaryExpr    go to state 131
    orBinaryExpr     go to state 132
    typespec         go to state 101
    primaryTypespec  go to state 71
    postfixTypespec  go to state 72


State 82

   52 vstruct: "'{'" • vstructField_cl "'}'"
   55 chain: "'{'" • expr "'}'"
   56      | "'{'" • chainPrefix "'}'"
   57      | "'{'" • chainPrefix expr "'}'"

    "a VID (ID with first letter lowercase)"  shift, and go to state 25
    "a TID (ID with first letter uppercase)"  shift, and go to state 30
    "'do'"                                    shift, and go to state 133
    "'if'"                                    shift, and go to state 77
    "'let'"                                   shift, and go to state 134
    "'set'"                                   shift, and go to state 135
    "'not'"                                   shift, and go to state 115
    "'Tuple'"                                 shift, and go to state 67
    "'Array'"                                 shift, and go to state 68
    TK_DINT_LIT                               shift, and go to state 78
    TK_XINT_LIT                               shift, and go to state 79
    TK_FLOAT_LIT                              shift, and go to state 80
    TK_DQSTRING_LIT                           shift, and go to state 47
    TK_SQSTRING_LIT                           shift, and go to state 48
    "'('"                                     shift, and go to state 81
    "'{'"                                     shift, and go to state 82
    "'*'"                                     shift, and go to state 116
    "'+'"                                     shift, and go to state 117
    "'-'"                                     shift, and go to state 118
    "'^'"                                     shift, and go to state 119

    chainPrefixStmt  go to state 136
    letStmt          go to state 137
    setStmt          go to state 138
    discardStmt      go to state 139
    tid              go to state 69
    vid              go to state 140
    floatl           go to state 84
    stringl          go to state 85
    unit             go to state 86
    expr             go to state 141
    parenExpr        go to state 87
    primaryExpr      go to state 88
    vparen           go to state 89
    vtuple           go to state 90
    vstruct          go to state 91
    ifThenElse       go to state 92
    chain            go to state 93
    chainPrefix      go to state 142
    postfixExpr      go to state 94
    vtcall           go to state 95
    vvcall           go to state 96
    dotNmExpr        go to state 97
    dotIxExpr        go to state 98
    colonNmExpr      go to state 99
    castExpr         go to state 122
    unaryExpr        go to state 123
    unaryOp          go to state 124
    binaryExpr       go to state 125
    mulBinaryExpr    go to state 126
    addBinaryExpr    go to state 127
    cmpBinaryExpr    go to state 128
    eqBinaryExpr     go to state 129
    andBinaryExpr    go to state 130
    xorBinaryExpr    go to state 131
    orBinaryExpr     go to state 132
    typespec         go to state 101
    primaryTypespec  go to state 71
    postfixTypespec  go to state 72
    vstructField     go to state 143
    vstructField_cl  go to state 144


State 83

   44 primaryExpr: vid •

    $default  reduce using rule 44 (primaryExpr)


State 84

   47 primaryExpr: floatl •

    $default  reduce using rule 47 (primaryExpr)


State 85

   48 primaryExpr: stringl •

    $default  reduce using rule 48 (primaryExpr)


State 86

   38 parenExpr: unit •

    $default  reduce using rule 38 (parenExpr)


State 87

   43 primaryExpr: parenExpr •

    $default  reduce using rule 43 (primaryExpr)


State 88

   60 postfixExpr: primaryExpr •

    $default  reduce using rule 60 (postfixExpr)


State 89

   39 parenExpr: vparen •

    $default  reduce using rule 39 (parenExpr)


State 90

   40 parenExpr: vtuple •

    $default  reduce using rule 40 (parenExpr)


State 91

   41 parenExpr: vstruct •

    $default  reduce using rule 41 (parenExpr)


State 92

   49 primaryExpr: ifThenElse •

    $default  reduce using rule 49 (primaryExpr)


State 93

   42 parenExpr: chain •

    $default  reduce using rule 42 (parenExpr)


State 94

   66 vtcall: postfixExpr • "'['" vtarg_cl "']'"
   67 vvcall: postfixExpr • "'('" "')'"
   68       | postfixExpr • "'('" expr_cl "')'"
   69 dotNmExpr: postfixExpr • "'.'" "a VID (ID with first letter lowercase)"
   70 dotIxExpr: postfixExpr • "'.'" TK_DINT_LIT
   71 colonNmExpr: postfixExpr • "':'" "a VID (ID with first letter lowercase)"
   72 castExpr: postfixExpr •

    "'.'"  shift, and go to state 145
    "':'"  shift, and go to state 146
    "'('"  shift, and go to state 147
    "'['"  shift, and go to state 148

    $default  reduce using rule 72 (castExpr)


State 95

   61 postfixExpr: vtcall •

    $default  reduce using rule 61 (postfixExpr)


State 96

   62 postfixExpr: vvcall •

    $default  reduce using rule 62 (postfixExpr)


State 97

   63 postfixExpr: dotNmExpr •

    $default  reduce using rule 63 (postfixExpr)


State 98

   64 postfixExpr: dotIxExpr •

    $default  reduce using rule 64 (postfixExpr)


State 99

   65 postfixExpr: colonNmExpr •

    $default  reduce using rule 65 (postfixExpr)


State 100

   19 defStmt: "'def'" vid vpattern "'->'" castExpr •

    $default  reduce using rule 19 (defStmt)


State 101

   73 castExpr: typespec • parenExpr

    "'('"  shift, and go to state 81
    "'{'"  shift, and go to state 82

    unit       go to state 86
    parenExpr  go to state 149
    vparen     go to state 89
    vtuple     go to state 90
    vstruct    go to state 91
    chain      go to state 93


State 102

   20 defStmt: "'def'" vid tpattern vpattern "'->'" • castExpr

    "a VID (ID with first letter lowercase)"  shift, and go to state 25
    "a TID (ID with first letter uppercase)"  shift, and go to state 30
    "'if'"                                    shift, and go to state 77
    "'Tuple'"                                 shift, and go to state 67
    "'Array'"                                 shift, and go to state 68
    TK_DINT_LIT                               shift, and go to state 78
    TK_XINT_LIT                               shift, and go to state 79
    TK_FLOAT_LIT                              shift, and go to state 80
    TK_DQSTRING_LIT                           shift, and go to state 47
    TK_SQSTRING_LIT                           shift, and go to state 48
    "'('"                                     shift, and go to state 81
    "'{'"                                     shift, and go to state 82

    tid              go to state 69
    vid              go to state 83
    floatl           go to state 84
    stringl          go to state 85
    unit             go to state 86
    parenExpr        go to state 87
    primaryExpr      go to state 88
    vparen           go to state 89
    vtuple           go to state 90
    vstruct          go to state 91
    ifThenElse       go to state 92
    chain            go to state 93
    postfixExpr      go to state 94
    vtcall           go to state 95
    vvcall           go to state 96
    dotNmExpr        go to state 97
    dotIxExpr        go to state 98
    colonNmExpr      go to state 99
    castExpr         go to state 150
    typespec         go to state 101
    primaryTypespec  go to state 71
    postfixTypespec  go to state 72


State 103

   21 typedefStmt: "'type'" tid tpattern "'='" typespec •

    $default  reduce using rule 21 (typedefStmt)


State 104

   52 vstruct: "'{'" • vstructField_cl "'}'"

    "a VID (ID with first letter lowercase)"  shift, and go to state 25

    vid              go to state 151
    vstructField     go to state 143
    vstructField_cl  go to state 144


State 105

   22 typedefStmt_enum: "'enum'" tid tpattern "'='" vstruct •

    $default  reduce using rule 22 (typedefStmt_enum)


State 106

   23 moduleStmt: "'module'" vid "'from'" stringl "'as'" stringl •

    $default  reduce using rule 23 (moduleStmt)


State 107

   26 externStmt: "'extern'" "'def'" vid vpattern "'->'" typespec •

    $default  reduce using rule 26 (externStmt)


State 108

  111 primaryTypespec: "'Tuple'" "'['" • typespec_cl "']'"

    "a TID (ID with first letter uppercase)"  shift, and go to state 30
    "'Tuple'"                                 shift, and go to state 67
    "'Array'"                                 shift, and go to state 68

    tid              go to state 69
    typespec         go to state 152
    typespec_cl      go to state 153
    primaryTypespec  go to state 71
    postfixTypespec  go to state 72


State 109

  112 primaryTypespec: "'Array'" "'['" • typespec "','" expr "']'"

    "a TID (ID with first letter uppercase)"  shift, and go to state 30
    "'Tuple'"                                 shift, and go to state 67
    "'Array'"                                 shift, and go to state 68

    tid              go to state 69
    typespec         go to state 154
    primaryTypespec  go to state 71
    postfixTypespec  go to state 72


State 110

  114 postfixTypespec: postfixTypespec "'['" • ttarg_cl "']'"

    "a VID (ID with first letter lowercase)"  shift, and go to state 25
    "a TID (ID with first letter uppercase)"  shift, and go to state 30
    "'if'"                                    shift, and go to state 77
    "'not'"                                   shift, and go to state 115
    "'Tuple'"                                 shift, and go to state 67
    "'Array'"                                 shift, and go to state 68
    TK_DINT_LIT                               shift, and go to state 78
    TK_XINT_LIT                               shift, and go to state 79
    TK_FLOAT_LIT                              shift, and go to state 80
    TK_DQSTRING_LIT                           shift, and go to state 47
    TK_SQSTRING_LIT                           shift, and go to state 48
    "'('"                                     shift, and go to state 81
    "'{'"                                     shift, and go to state 82
    "'*'"                                     shift, and go to state 116
    "'+'"                                     shift, and go to state 117
    "'-'"                                     shift, and go to state 118
    "'^'"                                     shift, and go to state 119

    tid              go to state 69
    vid              go to state 83
    floatl           go to state 84
    stringl          go to state 85
    unit             go to state 86
    expr             go to state 155
    parenExpr        go to state 87
    primaryExpr      go to state 88
    vparen           go to state 89
    vtuple           go to state 90
    vstruct          go to state 91
    ifThenElse       go to state 92
    chain            go to state 93
    postfixExpr      go to state 94
    vtcall           go to state 95
    vvcall           go to state 96
    dotNmExpr        go to state 97
    dotIxExpr        go to state 98
    colonNmExpr      go to state 99
    castExpr         go to state 122
    unaryExpr        go to state 123
    unaryOp          go to state 124
    binaryExpr       go to state 125
    mulBinaryExpr    go to state 126
    addBinaryExpr    go to state 127
    cmpBinaryExpr    go to state 128
    eqBinaryExpr     go to state 129
    andBinaryExpr    go to state 130
    xorBinaryExpr    go to state 131
    orBinaryExpr     go to state 132
    typespec         go to state 156
    primaryTypespec  go to state 71
    postfixTypespec  go to state 72
    ttarg            go to state 157
    ttarg_cl         go to state 158


State 111

  115 postfixTypespec: postfixTypespec "'^'" •

    $default  reduce using rule 115 (postfixTypespec)


State 112

  136 vpatternField_cl: vpatternField_cl "','" vpatternField •

    $default  reduce using rule 136 (vpatternField_cl)


State 113

  138 tpatternField_cl: tpatternField_cl "','" tpatternField •

    $default  reduce using rule 138 (tpatternField_cl)


State 114

   53 ifThenElse: "'if'" parenExpr • "'then'" parenExpr
   54           | "'if'" parenExpr • "'then'" parenExpr "'else'" parenExpr

    "'then'"  shift, and go to state 159


State 115

   80 unaryOp: "'not'" •

    $default  reduce using rule 80 (unaryOp)


State 116

   78 unaryOp: "'*'" •

    $default  reduce using rule 78 (unaryOp)


State 117

   76 unaryOp: "'+'" •

    $default  reduce using rule 76 (unaryOp)


State 118

   77 unaryOp: "'-'" •

    $default  reduce using rule 77 (unaryOp)


State 119

   79 unaryOp: "'^'" •

    $default  reduce using rule 79 (unaryOp)


State 120

   36 expr_cl2: expr • "','" expr
   50 vparen: "'('" expr • "')'"

    "','"  shift, and go to state 160
    "')'"  shift, and go to state 161


State 121

   37 expr_cl2: expr_cl2 • "','" expr
   51 vtuple: "'('" expr_cl2 • "')'"

    "','"  shift, and go to state 162
    "')'"  shift, and go to state 163


State 122

   74 unaryExpr: castExpr •

    $default  reduce using rule 74 (unaryExpr)


State 123

   85 mulBinaryExpr: unaryExpr •

    $default  reduce using rule 85 (mulBinaryExpr)


State 124

   75 unaryExpr: unaryOp • unaryExpr

    "a VID (ID with first letter lowercase)"  shift, and go to state 25
    "a TID (ID with first letter uppercase)"  shift, and go to state 30
    "'if'"                                    shift, and go to state 77
    "'not'"                                   shift, and go to state 115
    "'Tuple'"                                 shift, and go to state 67
    "'Array'"                                 shift, and go to state 68
    TK_DINT_LIT                               shift, and go to state 78
    TK_XINT_LIT                               shift, and go to state 79
    TK_FLOAT_LIT                              shift, and go to state 80
    TK_DQSTRING_LIT                           shift, and go to state 47
    TK_SQSTRING_LIT                           shift, and go to state 48
    "'('"                                     shift, and go to state 81
    "'{'"                                     shift, and go to state 82
    "'*'"                                     shift, and go to state 116
    "'+'"                                     shift, and go to state 117
    "'-'"                                     shift, and go to state 118
    "'^'"                                     shift, and go to state 119

    tid              go to state 69
    vid              go to state 83
    floatl           go to state 84
    stringl          go to state 85
    unit             go to state 86
    parenExpr        go to state 87
    primaryExpr      go to state 88
    vparen           go to state 89
    vtuple           go to state 90
    vstruct          go to state 91
    ifThenElse       go to state 92
    chain            go to state 93
    postfixExpr      go to state 94
    vtcall           go to state 95
    vvcall           go to state 96
    dotNmExpr        go to state 97
    dotIxExpr        go to state 98
    colonNmExpr      go to state 99
    castExpr         go to state 122
    unaryExpr        go to state 164
    unaryOp          go to state 124
    typespec         go to state 101
    primaryTypespec  go to state 71
    postfixTypespec  go to state 72


State 125

   33 expr: binaryExpr •

    $default  reduce using rule 33 (expr)


State 126

   86 mulBinaryExpr: mulBinaryExpr • mulBinaryOp unaryExpr
   89 addBinaryExpr: mulBinaryExpr •

    "'*'"  shift, and go to state 165
    "'/'"  shift, and go to state 166
    "'%'"  shift, and go to state 167

    $default  reduce using rule 89 (addBinaryExpr)

    mulBinaryOp  go to state 168


State 127

   90 addBinaryExpr: addBinaryExpr • addBinaryOp mulBinaryExpr
   95 cmpBinaryExpr: addBinaryExpr •

    "'+'"  shift, and go to state 169
    "'-'"  shift, and go to state 170

    $default  reduce using rule 95 (cmpBinaryExpr)

    addBinaryOp  go to state 171


State 128

   96 cmpBinaryExpr: cmpBinaryExpr • cmpBinaryOp addBinaryExpr
   99 eqBinaryExpr: cmpBinaryExpr •

    "'<'"   shift, and go to state 172
    "'<='"  shift, and go to state 173
    "'>'"   shift, and go to state 174
    "'>='"  shift, and go to state 175

    $default  reduce using rule 99 (eqBinaryExpr)

    cmpBinaryOp  go to state 176


State 129

  100 eqBinaryExpr: eqBinaryExpr • eqBinaryOp cmpBinaryExpr
  101 andBinaryExpr: eqBinaryExpr •

    "'=='"  shift, and go to state 177
    "'!='"  shift, and go to state 178

    $default  reduce using rule 101 (andBinaryExpr)

    eqBinaryOp  go to state 179


State 130

  102 andBinaryExpr: andBinaryExpr • "'and'" eqBinaryExpr
  103 xorBinaryExpr: andBinaryExpr •

    "'and'"  shift, and go to state 180

    $default  reduce using rule 103 (xorBinaryExpr)


State 131

  104 xorBinaryExpr: xorBinaryExpr • "'xor'" andBinaryExpr
  105 orBinaryExpr: xorBinaryExpr •

    "'xor'"  shift, and go to state 181

    $default  reduce using rule 105 (orBinaryExpr)


State 132

   81 binaryExpr: orBinaryExpr •
  106 orBinaryExpr: orBinaryExpr • "'or'" xorBinaryExpr

    "'or'"  shift, and go to state 182

    $default  reduce using rule 81 (binaryExpr)


State 133

   12 discardStmt: "'do'" • expr

    "a VID (ID with first letter lowercase)"  shift, and go to state 25
    "a TID (ID with first letter uppercase)"  shift, and go to state 30
    "'if'"                                    shift, and go to state 77
    "'not'"                                   shift, and go to state 115
    "'Tuple'"                                 shift, and go to state 67
    "'Array'"                                 shift, and go to state 68
    TK_DINT_LIT                               shift, and go to state 78
    TK_XINT_LIT                               shift, and go to state 79
    TK_FLOAT_LIT                              shift, and go to state 80
    TK_DQSTRING_LIT                           shift, and go to state 47
    TK_SQSTRING_LIT                           shift, and go to state 48
    "'('"                                     shift, and go to state 81
    "'{'"                                     shift, and go to state 82
    "'*'"                                     shift, and go to state 116
    "'+'"                                     shift, and go to state 117
    "'-'"                                     shift, and go to state 118
    "'^'"                                     shift, and go to state 119

    tid              go to state 69
    vid              go to state 83
    floatl           go to state 84
    stringl          go to state 85
    unit             go to state 86
    expr             go to state 183
    parenExpr        go to state 87
    primaryExpr      go to state 88
    vparen           go to state 89
    vtuple           go to state 90
    vstruct          go to state 91
    ifThenElse       go to state 92
    chain            go to state 93
    postfixExpr      go to state 94
    vtcall           go to state 95
    vvcall           go to state 96
    dotNmExpr        go to state 97
    dotIxExpr        go to state 98
    colonNmExpr      go to state 99
    castExpr         go to state 122
    unaryExpr        go to state 123
    unaryOp          go to state 124
    binaryExpr       go to state 125
    mulBinaryExpr    go to state 126
    addBinaryExpr    go to state 127
    cmpBinaryExpr    go to state 128
    eqBinaryExpr     go to state 129
    andBinaryExpr    go to state 130
    xorBinaryExpr    go to state 131
    orBinaryExpr     go to state 132
    typespec         go to state 101
    primaryTypespec  go to state 71
    postfixTypespec  go to state 72


State 134

   10 letStmt: "'let'" • lpattern "'='" expr

    "a VID (ID with first letter lowercase)"  shift, and go to state 25
    "'('"                                     shift, and go to state 39

    vid            go to state 53
    unit           go to state 41
    vpatternField  go to state 184
    lpattern       go to state 185
    vpattern       go to state 186


State 135

   11 setStmt: "'set'" • expr "'='" expr

    "a VID (ID with first letter lowercase)"  shift, and go to state 25
    "a TID (ID with first letter uppercase)"  shift, and go to state 30
    "'if'"                                    shift, and go to state 77
    "'not'"                                   shift, and go to state 115
    "'Tuple'"                                 shift, and go to state 67
    "'Array'"                                 shift, and go to state 68
    TK_DINT_LIT                               shift, and go to state 78
    TK_XINT_LIT                               shift, and go to state 79
    TK_FLOAT_LIT                              shift, and go to state 80
    TK_DQSTRING_LIT                           shift, and go to state 47
    TK_SQSTRING_LIT                           shift, and go to state 48
    "'('"                                     shift, and go to state 81
    "'{'"                                     shift, and go to state 82
    "'*'"                                     shift, and go to state 116
    "'+'"                                     shift, and go to state 117
    "'-'"                                     shift, and go to state 118
    "'^'"                                     shift, and go to state 119

    tid              go to state 69
    vid              go to state 83
    floatl           go to state 84
    stringl          go to state 85
    unit             go to state 86
    expr             go to state 187
    parenExpr        go to state 87
    primaryExpr      go to state 88
    vparen           go to state 89
    vtuple           go to state 90
    vstruct          go to state 91
    ifThenElse       go to state 92
    chain            go to state 93
    postfixExpr      go to state 94
    vtcall           go to state 95
    vvcall           go to state 96
    dotNmExpr        go to state 97
    dotIxExpr        go to state 98
    colonNmExpr      go to state 99
    castExpr         go to state 122
    unaryExpr        go to state 123
    unaryOp          go to state 124
    binaryExpr       go to state 125
    mulBinaryExpr    go to state 126
    addBinaryExpr    go to state 127
    cmpBinaryExpr    go to state 128
    eqBinaryExpr     go to state 129
    andBinaryExpr    go to state 130
    xorBinaryExpr    go to state 131
    orBinaryExpr     go to state 132
    typespec         go to state 101
    primaryTypespec  go to state 71
    postfixTypespec  go to state 72


State 136

   58 chainPrefix: chainPrefixStmt • "';'"

    "';'"  shift, and go to state 188


State 137

    7 chainPrefixStmt: letStmt •

    $default  reduce using rule 7 (chainPrefixStmt)


State 138

    8 chainPrefixStmt: setStmt •

    $default  reduce using rule 8 (chainPrefixStmt)


State 139

    9 chainPrefixStmt: discardStmt •

    $default  reduce using rule 9 (chainPrefixStmt)


State 140

   44 primaryExpr: vid •
  124 vstructField: vid • "'='" expr

    "'='"  shift, and go to state 189

    $default  reduce using rule 44 (primaryExpr)


State 141

   55 chain: "'{'" expr • "'}'"

    "'}'"  shift, and go to state 190


State 142

   56 chain: "'{'" chainPrefix • "'}'"
   57      | "'{'" chainPrefix • expr "'}'"
   59 chainPrefix: chainPrefix • chainPrefixStmt "';'"

    "a VID (ID with first letter lowercase)"  shift, and go to state 25
    "a TID (ID with first letter uppercase)"  shift, and go to state 30
    "'do'"                                    shift, and go to state 133
    "'if'"                                    shift, and go to state 77
    "'let'"                                   shift, and go to state 134
    "'set'"                                   shift, and go to state 135
    "'not'"                                   shift, and go to state 115
    "'Tuple'"                                 shift, and go to state 67
    "'Array'"                                 shift, and go to state 68
    TK_DINT_LIT                               shift, and go to state 78
    TK_XINT_LIT                               shift, and go to state 79
    TK_FLOAT_LIT                              shift, and go to state 80
    TK_DQSTRING_LIT                           shift, and go to state 47
    TK_SQSTRING_LIT                           shift, and go to state 48
    "'('"                                     shift, and go to state 81
    "'{'"                                     shift, and go to state 82
    "'}'"                                     shift, and go to state 191
    "'*'"                                     shift, and go to state 116
    "'+'"                                     shift, and go to state 117
    "'-'"                                     shift, and go to state 118
    "'^'"                                     shift, and go to state 119

    chainPrefixStmt  go to state 192
    letStmt          go to state 137
    setStmt          go to state 138
    discardStmt      go to state 139
    tid              go to state 69
    vid              go to state 83
    floatl           go to state 84
    stringl          go to state 85
    unit             go to state 86
    expr             go to state 193
    parenExpr        go to state 87
    primaryExpr      go to state 88
    vparen           go to state 89
    vtuple           go to state 90
    vstruct          go to state 91
    ifThenElse       go to state 92
    chain            go to state 93
    postfixExpr      go to state 94
    vtcall           go to state 95
    vvcall           go to state 96
    dotNmExpr        go to state 97
    dotIxExpr        go to state 98
    colonNmExpr      go to state 99
    castExpr         go to state 122
    unaryExpr        go to state 123
    unaryOp          go to state 124
    binaryExpr       go to state 125
    mulBinaryExpr    go to state 126
    addBinaryExpr    go to state 127
    cmpBinaryExpr    go to state 128
    eqBinaryExpr     go to state 129
    andBinaryExpr    go to state 130
    xorBinaryExpr    go to state 131
    orBinaryExpr     go to state 132
    typespec         go to state 101
    primaryTypespec  go to state 71
    postfixTypespec  go to state 72


State 143

  125 vstructField_cl: vstructField •

    $default  reduce using rule 125 (vstructField_cl)


State 144

   52 vstruct: "'{'" vstructField_cl • "'}'"
  126 vstructField_cl: vstructField_cl • "','" vstructField

    "','"  shift, and go to state 194
    "'}'"  shift, and go to state 195


State 145

   69 dotNmExpr: postfixExpr "'.'" • "a VID (ID with first letter lowercase)"
   70 dotIxExpr: postfixExpr "'.'" • TK_DINT_LIT

    "a VID (ID with first letter lowercase)"  shift, and go to state 196
    TK_DINT_LIT                               shift, and go to state 197


State 146

   71 colonNmExpr: postfixExpr "':'" • "a VID (ID with first letter lowercase)"

    "a VID (ID with first letter lowercase)"  shift, and go to state 198


State 147

   67 vvcall: postfixExpr "'('" • "')'"
   68       | postfixExpr "'('" • expr_cl "')'"

    "a VID (ID with first letter lowercase)"  shift, and go to state 25
    "a TID (ID with first letter uppercase)"  shift, and go to state 30
    "'if'"                                    shift, and go to state 77
    "'not'"                                   shift, and go to state 115
    "'Tuple'"                                 shift, and go to state 67
    "'Array'"                                 shift, and go to state 68
    TK_DINT_LIT                               shift, and go to state 78
    TK_XINT_LIT                               shift, and go to state 79
    TK_FLOAT_LIT                              shift, and go to state 80
    TK_DQSTRING_LIT                           shift, and go to state 47
    TK_SQSTRING_LIT                           shift, and go to state 48
    "'('"                                     shift, and go to state 81
    "')'"                                     shift, and go to state 199
    "'{'"                                     shift, and go to state 82
    "'*'"                                     shift, and go to state 116
    "'+'"                                     shift, and go to state 117
    "'-'"                                     shift, and go to state 118
    "'^'"                                     shift, and go to state 119

    tid              go to state 69
    vid              go to state 83
    floatl           go to state 84
    stringl          go to state 85
    unit             go to state 86
    expr             go to state 200
    expr_cl          go to state 201
    parenExpr        go to state 87
    primaryExpr      go to state 88
    vparen           go to state 89
    vtuple           go to state 90
    vstruct          go to state 91
    ifThenElse       go to state 92
    chain            go to state 93
    postfixExpr      go to state 94
    vtcall           go to state 95
    vvcall           go to state 96
    dotNmExpr        go to state 97
    dotIxExpr        go to state 98
    colonNmExpr      go to state 99
    castExpr         go to state 122
    unaryExpr        go to state 123
    unaryOp          go to state 124
    binaryExpr       go to state 125
    mulBinaryExpr    go to state 126
    addBinaryExpr    go to state 127
    cmpBinaryExpr    go to state 128
    eqBinaryExpr     go to state 129
    andBinaryExpr    go to state 130
    xorBinaryExpr    go to state 131
    orBinaryExpr     go to state 132
    typespec         go to state 101
    primaryTypespec  go to state 71
    postfixTypespec  go to state 72


State 148

   66 vtcall: postfixExpr "'['" • vtarg_cl "']'"

    "a VID (ID with first letter lowercase)"  shift, and go to state 25
    "a TID (ID with first letter uppercase)"  shift, and go to state 30
    "'if'"                                    shift, and go to state 77
    "'not'"                                   shift, and go to state 115
    "'Tuple'"                                 shift, and go to state 67
    "'Array'"                                 shift, and go to state 68
    TK_DINT_LIT                               shift, and go to state 78
    TK_XINT_LIT                               shift, and go to state 79
    TK_FLOAT_LIT                              shift, and go to state 80
    TK_DQSTRING_LIT                           shift, and go to state 47
    TK_SQSTRING_LIT                           shift, and go to state 48
    "'('"                                     shift, and go to state 81
    "'{'"                                     shift, and go to state 82
    "'*'"                                     shift, and go to state 116
    "'+'"                                     shift, and go to state 117
    "'-'"                                     shift, and go to state 118
    "'^'"                                     shift, and go to state 119

    tid              go to state 69
    vid              go to state 83
    floatl           go to state 84
    stringl          go to state 85
    unit             go to state 86
    expr             go to state 202
    parenExpr        go to state 87
    primaryExpr      go to state 88
    vparen           go to state 89
    vtuple           go to state 90
    vstruct          go to state 91
    ifThenElse       go to state 92
    chain            go to state 93
    postfixExpr      go to state 94
    vtcall           go to state 95
    vvcall           go to state 96
    dotNmExpr        go to state 97
    dotIxExpr        go to state 98
    colonNmExpr      go to state 99
    castExpr         go to state 122
    unaryExpr        go to state 123
    unaryOp          go to state 124
    binaryExpr       go to state 125
    mulBinaryExpr    go to state 126
    addBinaryExpr    go to state 127
    cmpBinaryExpr    go to state 128
    eqBinaryExpr     go to state 129
    andBinaryExpr    go to state 130
    xorBinaryExpr    go to state 131
    orBinaryExpr     go to state 132
    typespec         go to state 203
    primaryTypespec  go to state 71
    postfixTypespec  go to state 72
    vtarg            go to state 204
    vtarg_cl         go to state 205


State 149

   73 castExpr: typespec parenExpr •

    $default  reduce using rule 73 (castExpr)


State 150

   20 defStmt: "'def'" vid tpattern vpattern "'->'" castExpr •

    $default  reduce using rule 20 (defStmt)


State 151

  124 vstructField: vid • "'='" expr

    "'='"  shift, and go to state 189


State 152

  108 typespec_cl: typespec •

    $default  reduce using rule 108 (typespec_cl)


State 153

  109 typespec_cl: typespec_cl • "','" typespec
  111 primaryTypespec: "'Tuple'" "'['" typespec_cl • "']'"

    "','"  shift, and go to state 206
    "']'"  shift, and go to state 207


State 154

  112 primaryTypespec: "'Array'" "'['" typespec • "','" expr "']'"

    "','"  shift, and go to state 208


State 155

  117 ttarg: expr •

    $default  reduce using rule 117 (ttarg)


State 156

   73 castExpr: typespec • parenExpr
  116 ttarg: typespec •

    "'('"  shift, and go to state 81
    "'{'"  shift, and go to state 82

    $default  reduce using rule 116 (ttarg)

    unit       go to state 86
    parenExpr  go to state 149
    vparen     go to state 89
    vtuple     go to state 90
    vstruct    go to state 91
    chain      go to state 93


State 157

  118 ttarg_cl: ttarg •

    $default  reduce using rule 118 (ttarg_cl)


State 158

  114 postfixTypespec: postfixTypespec "'['" ttarg_cl • "']'"
  119 ttarg_cl: ttarg_cl • "','" ttarg

    "','"  shift, and go to state 209
    "']'"  shift, and go to state 210


State 159

   53 ifThenElse: "'if'" parenExpr "'then'" • parenExpr
   54           | "'if'" parenExpr "'then'" • parenExpr "'else'" parenExpr

    "'('"  shift, and go to state 81
    "'{'"  shift, and go to state 82

    unit       go to state 86
    parenExpr  go to state 211
    vparen     go to state 89
    vtuple     go to state 90
    vstruct    go to state 91
    chain      go to state 93


State 160

   36 expr_cl2: expr "','" • expr

    "a VID (ID with first letter lowercase)"  shift, and go to state 25
    "a TID (ID with first letter uppercase)"  shift, and go to state 30
    "'if'"                                    shift, and go to state 77
    "'not'"                                   shift, and go to state 115
    "'Tuple'"                                 shift, and go to state 67
    "'Array'"                                 shift, and go to state 68
    TK_DINT_LIT                               shift, and go to state 78
    TK_XINT_LIT                               shift, and go to state 79
    TK_FLOAT_LIT                              shift, and go to state 80
    TK_DQSTRING_LIT                           shift, and go to state 47
    TK_SQSTRING_LIT                           shift, and go to state 48
    "'('"                                     shift, and go to state 81
    "'{'"                                     shift, and go to state 82
    "'*'"                                     shift, and go to state 116
    "'+'"                                     shift, and go to state 117
    "'-'"                                     shift, and go to state 118
    "'^'"                                     shift, and go to state 119

    tid              go to state 69
    vid              go to state 83
    floatl           go to state 84
    stringl          go to state 85
    unit             go to state 86
    expr             go to state 212
    parenExpr        go to state 87
    primaryExpr      go to state 88
    vparen           go to state 89
    vtuple           go to state 90
    vstruct          go to state 91
    ifThenElse       go to state 92
    chain            go to state 93
    postfixExpr      go to state 94
    vtcall           go to state 95
    vvcall           go to state 96
    dotNmExpr        go to state 97
    dotIxExpr        go to state 98
    colonNmExpr      go to state 99
    castExpr         go to state 122
    unaryExpr        go to state 123
    unaryOp          go to state 124
    binaryExpr       go to state 125
    mulBinaryExpr    go to state 126
    addBinaryExpr    go to state 127
    cmpBinaryExpr    go to state 128
    eqBinaryExpr     go to state 129
    andBinaryExpr    go to state 130
    xorBinaryExpr    go to state 131
    orBinaryExpr     go to state 132
    typespec         go to state 101
    primaryTypespec  go to state 71
    postfixTypespec  go to state 72


State 161

   50 vparen: "'('" expr "')'" •

    $default  reduce using rule 50 (vparen)


State 162

   37 expr_cl2: expr_cl2 "','" • expr

    "a VID (ID with first letter lowercase)"  shift, and go to state 25
    "a TID (ID with first letter uppercase)"  shift, and go to state 30
    "'if'"                                    shift, and go to state 77
    "'not'"                                   shift, and go to state 115
    "'Tuple'"                                 shift, and go to state 67
    "'Array'"                                 shift, and go to state 68
    TK_DINT_LIT                               shift, and go to state 78
    TK_XINT_LIT                               shift, and go to state 79
    TK_FLOAT_LIT                              shift, and go to state 80
    TK_DQSTRING_LIT                           shift, and go to state 47
    TK_SQSTRING_LIT                           shift, and go to state 48
    "'('"                                     shift, and go to state 81
    "'{'"                                     shift, and go to state 82
    "'*'"                                     shift, and go to state 116
    "'+'"                                     shift, and go to state 117
    "'-'"                                     shift, and go to state 118
    "'^'"                                     shift, and go to state 119

    tid              go to state 69
    vid              go to state 83
    floatl           go to state 84
    stringl          go to state 85
    unit             go to state 86
    expr             go to state 213
    parenExpr        go to state 87
    primaryExpr      go to state 88
    vparen           go to state 89
    vtuple           go to state 90
    vstruct          go to state 91
    ifThenElse       go to state 92
    chain            go to state 93
    postfixExpr      go to state 94
    vtcall           go to state 95
    vvcall           go to state 96
    dotNmExpr        go to state 97
    dotIxExpr        go to state 98
    colonNmExpr      go to state 99
    castExpr         go to state 122
    unaryExpr        go to state 123
    unaryOp          go to state 124
    binaryExpr       go to state 125
    mulBinaryExpr    go to state 126
    addBinaryExpr    go to state 127
    cmpBinaryExpr    go to state 128
    eqBinaryExpr     go to state 129
    andBinaryExpr    go to state 130
    xorBinaryExpr    go to state 131
    orBinaryExpr     go to state 132
    typespec         go to state 101
    primaryTypespec  go to state 71
    postfixTypespec  go to state 72


State 163

   51 vtuple: "'('" expr_cl2 "')'" •

    $default  reduce using rule 51 (vtuple)


State 164

   75 unaryExpr: unaryOp unaryExpr •

    $default  reduce using rule 75 (unaryExpr)


State 165

   82 mulBinaryOp: "'*'" •

    $default  reduce using rule 82 (mulBinaryOp)


State 166

   83 mulBinaryOp: "'/'" •

    $default  reduce using rule 83 (mulBinaryOp)


State 167

   84 mulBinaryOp: "'%'" •

    $default  reduce using rule 84 (mulBinaryOp)


State 168

   86 mulBinaryExpr: mulBinaryExpr mulBinaryOp • unaryExpr

    "a VID (ID with first letter lowercase)"  shift, and go to state 25
    "a TID (ID with first letter uppercase)"  shift, and go to state 30
    "'if'"                                    shift, and go to state 77
    "'not'"                                   shift, and go to state 115
    "'Tuple'"                                 shift, and go to state 67
    "'Array'"                                 shift, and go to state 68
    TK_DINT_LIT                               shift, and go to state 78
    TK_XINT_LIT                               shift, and go to state 79
    TK_FLOAT_LIT                              shift, and go to state 80
    TK_DQSTRING_LIT                           shift, and go to state 47
    TK_SQSTRING_LIT                           shift, and go to state 48
    "'('"                                     shift, and go to state 81
    "'{'"                                     shift, and go to state 82
    "'*'"                                     shift, and go to state 116
    "'+'"                                     shift, and go to state 117
    "'-'"                                     shift, and go to state 118
    "'^'"                                     shift, and go to state 119

    tid              go to state 69
    vid              go to state 83
    floatl           go to state 84
    stringl          go to state 85
    unit             go to state 86
    parenExpr        go to state 87
    primaryExpr      go to state 88
    vparen           go to state 89
    vtuple           go to state 90
    vstruct          go to state 91
    ifThenElse       go to state 92
    chain            go to state 93
    postfixExpr      go to state 94
    vtcall           go to state 95
    vvcall           go to state 96
    dotNmExpr        go to state 97
    dotIxExpr        go to state 98
    colonNmExpr      go to state 99
    castExpr         go to state 122
    unaryExpr        go to state 214
    unaryOp          go to state 124
    typespec         go to state 101
    primaryTypespec  go to state 71
    postfixTypespec  go to state 72


State 169

   87 addBinaryOp: "'+'" •

    $default  reduce using rule 87 (addBinaryOp)


State 170

   88 addBinaryOp: "'-'" •

    $default  reduce using rule 88 (addBinaryOp)


State 171

   90 addBinaryExpr: addBinaryExpr addBinaryOp • mulBinaryExpr

    "a VID (ID with first letter lowercase)"  shift, and go to state 25
    "a TID (ID with first letter uppercase)"  shift, and go to state 30
    "'if'"                                    shift, and go to state 77
    "'not'"                                   shift, and go to state 115
    "'Tuple'"                                 shift, and go to state 67
    "'Array'"                                 shift, and go to state 68
    TK_DINT_LIT                               shift, and go to state 78
    TK_XINT_LIT                               shift, and go to state 79
    TK_FLOAT_LIT                              shift, and go to state 80
    TK_DQSTRING_LIT                           shift, and go to state 47
    TK_SQSTRING_LIT                           shift, and go to state 48
    "'('"                                     shift, and go to state 81
    "'{'"                                     shift, and go to state 82
    "'*'"                                     shift, and go to state 116
    "'+'"                                     shift, and go to state 117
    "'-'"                                     shift, and go to state 118
    "'^'"                                     shift, and go to state 119

    tid              go to state 69
    vid              go to state 83
    floatl           go to state 84
    stringl          go to state 85
    unit             go to state 86
    parenExpr        go to state 87
    primaryExpr      go to state 88
    vparen           go to state 89
    vtuple           go to state 90
    vstruct          go to state 91
    ifThenElse       go to state 92
    chain            go to state 93
    postfixExpr      go to state 94
    vtcall           go to state 95
    vvcall           go to state 96
    dotNmExpr        go to state 97
    dotIxExpr        go to state 98
    colonNmExpr      go to state 99
    castExpr         go to state 122
    unaryExpr        go to state 123
    unaryOp          go to state 124
    mulBinaryExpr    go to state 215
    typespec         go to state 101
    primaryTypespec  go to state 71
    postfixTypespec  go to state 72


State 172

   91 cmpBinaryOp: "'<'" •

    $default  reduce using rule 91 (cmpBinaryOp)


State 173

   92 cmpBinaryOp: "'<='" •

    $default  reduce using rule 92 (cmpBinaryOp)


State 174

   93 cmpBinaryOp: "'>'" •

    $default  reduce using rule 93 (cmpBinaryOp)


State 175

   94 cmpBinaryOp: "'>='" •

    $default  reduce using rule 94 (cmpBinaryOp)


State 176

   96 cmpBinaryExpr: cmpBinaryExpr cmpBinaryOp • addBinaryExpr

    "a VID (ID with first letter lowercase)"  shift, and go to state 25
    "a TID (ID with first letter uppercase)"  shift, and go to state 30
    "'if'"                                    shift, and go to state 77
    "'not'"                                   shift, and go to state 115
    "'Tuple'"                                 shift, and go to state 67
    "'Array'"                                 shift, and go to state 68
    TK_DINT_LIT                               shift, and go to state 78
    TK_XINT_LIT                               shift, and go to state 79
    TK_FLOAT_LIT                              shift, and go to state 80
    TK_DQSTRING_LIT                           shift, and go to state 47
    TK_SQSTRING_LIT                           shift, and go to state 48
    "'('"                                     shift, and go to state 81
    "'{'"                                     shift, and go to state 82
    "'*'"                                     shift, and go to state 116
    "'+'"                                     shift, and go to state 117
    "'-'"                                     shift, and go to state 118
    "'^'"                                     shift, and go to state 119

    tid              go to state 69
    vid              go to state 83
    floatl           go to state 84
    stringl          go to state 85
    unit             go to state 86
    parenExpr        go to state 87
    primaryExpr      go to state 88
    vparen           go to state 89
    vtuple           go to state 90
    vstruct          go to state 91
    ifThenElse       go to state 92
    chain            go to state 93
    postfixExpr      go to state 94
    vtcall           go to state 95
    vvcall           go to state 96
    dotNmExpr        go to state 97
    dotIxExpr        go to state 98
    colonNmExpr      go to state 99
    castExpr         go to state 122
    unaryExpr        go to state 123
    unaryOp          go to state 124
    mulBinaryExpr    go to state 126
    addBinaryExpr    go to state 216
    typespec         go to state 101
    primaryTypespec  go to state 71
    postfixTypespec  go to state 72


State 177

   97 eqBinaryOp: "'=='" •

    $default  reduce using rule 97 (eqBinaryOp)


State 178

   98 eqBinaryOp: "'!='" •

    $default  reduce using rule 98 (eqBinaryOp)


State 179

  100 eqBinaryExpr: eqBinaryExpr eqBinaryOp • cmpBinaryExpr

    "a VID (ID with first letter lowercase)"  shift, and go to state 25
    "a TID (ID with first letter uppercase)"  shift, and go to state 30
    "'if'"                                    shift, and go to state 77
    "'not'"                                   shift, and go to state 115
    "'Tuple'"                                 shift, and go to state 67
    "'Array'"                                 shift, and go to state 68
    TK_DINT_LIT                               shift, and go to state 78
    TK_XINT_LIT                               shift, and go to state 79
    TK_FLOAT_LIT                              shift, and go to state 80
    TK_DQSTRING_LIT                           shift, and go to state 47
    TK_SQSTRING_LIT                           shift, and go to state 48
    "'('"                                     shift, and go to state 81
    "'{'"                                     shift, and go to state 82
    "'*'"                                     shift, and go to state 116
    "'+'"                                     shift, and go to state 117
    "'-'"                                     shift, and go to state 118
    "'^'"                                     shift, and go to state 119

    tid              go to state 69
    vid              go to state 83
    floatl           go to state 84
    stringl          go to state 85
    unit             go to state 86
    parenExpr        go to state 87
    primaryExpr      go to state 88
    vparen           go to state 89
    vtuple           go to state 90
    vstruct          go to state 91
    ifThenElse       go to state 92
    chain            go to state 93
    postfixExpr      go to state 94
    vtcall           go to state 95
    vvcall           go to state 96
    dotNmExpr        go to state 97
    dotIxExpr        go to state 98
    colonNmExpr      go to state 99
    castExpr         go to state 122
    unaryExpr        go to state 123
    unaryOp          go to state 124
    mulBinaryExpr    go to state 126
    addBinaryExpr    go to state 127
    cmpBinaryExpr    go to state 217
    typespec         go to state 101
    primaryTypespec  go to state 71
    postfixTypespec  go to state 72


State 180

  102 andBinaryExpr: andBinaryExpr "'and'" • eqBinaryExpr

    "a VID (ID with first letter lowercase)"  shift, and go to state 25
    "a TID (ID with first letter uppercase)"  shift, and go to state 30
    "'if'"                                    shift, and go to state 77
    "'not'"                                   shift, and go to state 115
    "'Tuple'"                                 shift, and go to state 67
    "'Array'"                                 shift, and go to state 68
    TK_DINT_LIT                               shift, and go to state 78
    TK_XINT_LIT                               shift, and go to state 79
    TK_FLOAT_LIT                              shift, and go to state 80
    TK_DQSTRING_LIT                           shift, and go to state 47
    TK_SQSTRING_LIT                           shift, and go to state 48
    "'('"                                     shift, and go to state 81
    "'{'"                                     shift, and go to state 82
    "'*'"                                     shift, and go to state 116
    "'+'"                                     shift, and go to state 117
    "'-'"                                     shift, and go to state 118
    "'^'"                                     shift, and go to state 119

    tid              go to state 69
    vid              go to state 83
    floatl           go to state 84
    stringl          go to state 85
    unit             go to state 86
    parenExpr        go to state 87
    primaryExpr      go to state 88
    vparen           go to state 89
    vtuple           go to state 90
    vstruct          go to state 91
    ifThenElse       go to state 92
    chain            go to state 93
    postfixExpr      go to state 94
    vtcall           go to state 95
    vvcall           go to state 96
    dotNmExpr        go to state 97
    dotIxExpr        go to state 98
    colonNmExpr      go to state 99
    castExpr         go to state 122
    unaryExpr        go to state 123
    unaryOp          go to state 124
    mulBinaryExpr    go to state 126
    addBinaryExpr    go to state 127
    cmpBinaryExpr    go to state 128
    eqBinaryExpr     go to state 218
    typespec         go to state 101
    primaryTypespec  go to state 71
    postfixTypespec  go to state 72


State 181

  104 xorBinaryExpr: xorBinaryExpr "'xor'" • andBinaryExpr

    "a VID (ID with first letter lowercase)"  shift, and go to state 25
    "a TID (ID with first letter uppercase)"  shift, and go to state 30
    "'if'"                                    shift, and go to state 77
    "'not'"                                   shift, and go to state 115
    "'Tuple'"                                 shift, and go to state 67
    "'Array'"                                 shift, and go to state 68
    TK_DINT_LIT                               shift, and go to state 78
    TK_XINT_LIT                               shift, and go to state 79
    TK_FLOAT_LIT                              shift, and go to state 80
    TK_DQSTRING_LIT                           shift, and go to state 47
    TK_SQSTRING_LIT                           shift, and go to state 48
    "'('"                                     shift, and go to state 81
    "'{'"                                     shift, and go to state 82
    "'*'"                                     shift, and go to state 116
    "'+'"                                     shift, and go to state 117
    "'-'"                                     shift, and go to state 118
    "'^'"                                     shift, and go to state 119

    tid              go to state 69
    vid              go to state 83
    floatl           go to state 84
    stringl          go to state 85
    unit             go to state 86
    parenExpr        go to state 87
    primaryExpr      go to state 88
    vparen           go to state 89
    vtuple           go to state 90
    vstruct          go to state 91
    ifThenElse       go to state 92
    chain            go to state 93
    postfixExpr      go to state 94
    vtcall           go to state 95
    vvcall           go to state 96
    dotNmExpr        go to state 97
    dotIxExpr        go to state 98
    colonNmExpr      go to state 99
    castExpr         go to state 122
    unaryExpr        go to state 123
    unaryOp          go to state 124
    mulBinaryExpr    go to state 126
    addBinaryExpr    go to state 127
    cmpBinaryExpr    go to state 128
    eqBinaryExpr     go to state 129
    andBinaryExpr    go to state 219
    typespec         go to state 101
    primaryTypespec  go to state 71
    postfixTypespec  go to state 72


State 182

  106 orBinaryExpr: orBinaryExpr "'or'" • xorBinaryExpr

    "a VID (ID with first letter lowercase)"  shift, and go to state 25
    "a TID (ID with first letter uppercase)"  shift, and go to state 30
    "'if'"                                    shift, and go to state 77
    "'not'"                                   shift, and go to state 115
    "'Tuple'"                                 shift, and go to state 67
    "'Array'"                                 shift, and go to state 68
    TK_DINT_LIT                               shift, and go to state 78
    TK_XINT_LIT                               shift, and go to state 79
    TK_FLOAT_LIT                              shift, and go to state 80
    TK_DQSTRING_LIT                           shift, and go to state 47
    TK_SQSTRING_LIT                           shift, and go to state 48
    "'('"                                     shift, and go to state 81
    "'{'"                                     shift, and go to state 82
    "'*'"                                     shift, and go to state 116
    "'+'"                                     shift, and go to state 117
    "'-'"                                     shift, and go to state 118
    "'^'"                                     shift, and go to state 119

    tid              go to state 69
    vid              go to state 83
    floatl           go to state 84
    stringl          go to state 85
    unit             go to state 86
    parenExpr        go to state 87
    primaryExpr      go to state 88
    vparen           go to state 89
    vtuple           go to state 90
    vstruct          go to state 91
    ifThenElse       go to state 92
    chain            go to state 93
    postfixExpr      go to state 94
    vtcall           go to state 95
    vvcall           go to state 96
    dotNmExpr        go to state 97
    dotIxExpr        go to state 98
    colonNmExpr      go to state 99
    castExpr         go to state 122
    unaryExpr        go to state 123
    unaryOp          go to state 124
    mulBinaryExpr    go to state 126
    addBinaryExpr    go to state 127
    cmpBinaryExpr    go to state 128
    eqBinaryExpr     go to state 129
    andBinaryExpr    go to state 130
    xorBinaryExpr    go to state 220
    typespec         go to state 101
    primaryTypespec  go to state 71
    postfixTypespec  go to state 72


State 183

   12 discardStmt: "'do'" expr •

    $default  reduce using rule 12 (discardStmt)


State 184

  130 lpattern: vpatternField •

    $default  reduce using rule 130 (lpattern)


State 185

   10 letStmt: "'let'" lpattern • "'='" expr

    "'='"  shift, and go to state 221


State 186

  131 lpattern: vpattern •

    $default  reduce using rule 131 (lpattern)


State 187

   11 setStmt: "'set'" expr • "'='" expr

    "'='"  shift, and go to state 222


State 188

   58 chainPrefix: chainPrefixStmt "';'" •

    $default  reduce using rule 58 (chainPrefix)


State 189

  124 vstructField: vid "'='" • expr

    "a VID (ID with first letter lowercase)"  shift, and go to state 25
    "a TID (ID with first letter uppercase)"  shift, and go to state 30
    "'if'"                                    shift, and go to state 77
    "'not'"                                   shift, and go to state 115
    "'Tuple'"                                 shift, and go to state 67
    "'Array'"                                 shift, and go to state 68
    TK_DINT_LIT                               shift, and go to state 78
    TK_XINT_LIT                               shift, and go to state 79
    TK_FLOAT_LIT                              shift, and go to state 80
    TK_DQSTRING_LIT                           shift, and go to state 47
    TK_SQSTRING_LIT                           shift, and go to state 48
    "'('"                                     shift, and go to state 81
    "'{'"                                     shift, and go to state 82
    "'*'"                                     shift, and go to state 116
    "'+'"                                     shift, and go to state 117
    "'-'"                                     shift, and go to state 118
    "'^'"                                     shift, and go to state 119

    tid              go to state 69
    vid              go to state 83
    floatl           go to state 84
    stringl          go to state 85
    unit             go to state 86
    expr             go to state 223
    parenExpr        go to state 87
    primaryExpr      go to state 88
    vparen           go to state 89
    vtuple           go to state 90
    vstruct          go to state 91
    ifThenElse       go to state 92
    chain            go to state 93
    postfixExpr      go to state 94
    vtcall           go to state 95
    vvcall           go to state 96
    dotNmExpr        go to state 97
    dotIxExpr        go to state 98
    colonNmExpr      go to state 99
    castExpr         go to state 122
    unaryExpr        go to state 123
    unaryOp          go to state 124
    binaryExpr       go to state 125
    mulBinaryExpr    go to state 126
    addBinaryExpr    go to state 127
    cmpBinaryExpr    go to state 128
    eqBinaryExpr     go to state 129
    andBinaryExpr    go to state 130
    xorBinaryExpr    go to state 131
    orBinaryExpr     go to state 132
    typespec         go to state 101
    primaryTypespec  go to state 71
    postfixTypespec  go to state 72


State 190

   55 chain: "'{'" expr "'}'" •

    $default  reduce using rule 55 (chain)


State 191

   56 chain: "'{'" chainPrefix "'}'" •

    $default  reduce using rule 56 (chain)


State 192

   59 chainPrefix: chainPrefix chainPrefixStmt • "';'"

    "';'"  shift, and go to state 224


State 193

   57 chain: "'{'" chainPrefix expr • "'}'"

    "'}'"  shift, and go to state 225


State 194

  126 vstructField_cl: vstructField_cl "','" • vstructField

    "a VID (ID with first letter lowercase)"  shift, and go to state 25

    vid           go to state 151
    vstructField  go to state 226


State 195

   52 vstruct: "'{'" vstructField_cl "'}'" •

    $default  reduce using rule 52 (vstruct)


State 196

   69 dotNmExpr: postfixExpr "'.'" "a VID (ID with first letter lowercase)" •

    $default  reduce using rule 69 (dotNmExpr)


State 197

   70 dotIxExpr: postfixExpr "'.'" TK_DINT_LIT •

    $default  reduce using rule 70 (dotIxExpr)


State 198

   71 colonNmExpr: postfixExpr "':'" "a VID (ID with first letter lowercase)" •

    $default  reduce using rule 71 (colonNmExpr)


State 199

   67 vvcall: postfixExpr "'('" "')'" •

    $default  reduce using rule 67 (vvcall)


State 200

   34 expr_cl: expr •

    $default  reduce using rule 34 (expr_cl)


State 201

   35 expr_cl: expr_cl • "','" expr
   68 vvcall: postfixExpr "'('" expr_cl • "')'"

    "','"  shift, and go to state 227
    "')'"  shift, and go to state 228


State 202

  121 vtarg: expr •

    $default  reduce using rule 121 (vtarg)


State 203

   73 castExpr: typespec • parenExpr
  120 vtarg: typespec •

    "'('"  shift, and go to state 81
    "'{'"  shift, and go to state 82

    $default  reduce using rule 120 (vtarg)

    unit       go to state 86
    parenExpr  go to state 149
    vparen     go to state 89
    vtuple     go to state 90
    vstruct    go to state 91
    chain      go to state 93


State 204

  122 vtarg_cl: vtarg •

    $default  reduce using rule 122 (vtarg_cl)


State 205

   66 vtcall: postfixExpr "'['" vtarg_cl • "']'"
  123 vtarg_cl: vtarg_cl • "','" vtarg

    "','"  shift, and go to state 229
    "']'"  shift, and go to state 230


State 206

  109 typespec_cl: typespec_cl "','" • typespec

    "a TID (ID with first letter uppercase)"  shift, and go to state 30
    "'Tuple'"                                 shift, and go to state 67
    "'Array'"                                 shift, and go to state 68

    tid              go to state 69
    typespec         go to state 231
    primaryTypespec  go to state 71
    postfixTypespec  go to state 72


State 207

  111 primaryTypespec: "'Tuple'" "'['" typespec_cl "']'" •

    $default  reduce using rule 111 (primaryTypespec)


State 208

  112 primaryTypespec: "'Array'" "'['" typespec "','" • expr "']'"

    "a VID (ID with first letter lowercase)"  shift, and go to state 25
    "a TID (ID with first letter uppercase)"  shift, and go to state 30
    "'if'"                                    shift, and go to state 77
    "'not'"                                   shift, and go to state 115
    "'Tuple'"                                 shift, and go to state 67
    "'Array'"                                 shift, and go to state 68
    TK_DINT_LIT                               shift, and go to state 78
    TK_XINT_LIT                               shift, and go to state 79
    TK_FLOAT_LIT                              shift, and go to state 80
    TK_DQSTRING_LIT                           shift, and go to state 47
    TK_SQSTRING_LIT                           shift, and go to state 48
    "'('"                                     shift, and go to state 81
    "'{'"                                     shift, and go to state 82
    "'*'"                                     shift, and go to state 116
    "'+'"                                     shift, and go to state 117
    "'-'"                                     shift, and go to state 118
    "'^'"                                     shift, and go to state 119

    tid              go to state 69
    vid              go to state 83
    floatl           go to state 84
    stringl          go to state 85
    unit             go to state 86
    expr             go to state 232
    parenExpr        go to state 87
    primaryExpr      go to state 88
    vparen           go to state 89
    vtuple           go to state 90
    vstruct          go to state 91
    ifThenElse       go to state 92
    chain            go to state 93
    postfixExpr      go to state 94
    vtcall           go to state 95
    vvcall           go to state 96
    dotNmExpr        go to state 97
    dotIxExpr        go to state 98
    colonNmExpr      go to state 99
    castExpr         go to state 122
    unaryExpr        go to state 123
    unaryOp          go to state 124
    binaryExpr       go to state 125
    mulBinaryExpr    go to state 126
    addBinaryExpr    go to state 127
    cmpBinaryExpr    go to state 128
    eqBinaryExpr     go to state 129
    andBinaryExpr    go to state 130
    xorBinaryExpr    go to state 131
    orBinaryExpr     go to state 132
    typespec         go to state 101
    primaryTypespec  go to state 71
    postfixTypespec  go to state 72


State 209

  119 ttarg_cl: ttarg_cl "','" • ttarg

    "a VID (ID with first letter lowercase)"  shift, and go to state 25
    "a TID (ID with first letter uppercase)"  shift, and go to state 30
    "'if'"                                    shift, and go to state 77
    "'not'"                                   shift, and go to state 115
    "'Tuple'"                                 shift, and go to state 67
    "'Array'"                                 shift, and go to state 68
    TK_DINT_LIT                               shift, and go to state 78
    TK_XINT_LIT                               shift, and go to state 79
    TK_FLOAT_LIT                              shift, and go to state 80
    TK_DQSTRING_LIT                           shift, and go to state 47
    TK_SQSTRING_LIT                           shift, and go to state 48
    "'('"                                     shift, and go to state 81
    "'{'"                                     shift, and go to state 82
    "'*'"                                     shift, and go to state 116
    "'+'"                                     shift, and go to state 117
    "'-'"                                     shift, and go to state 118
    "'^'"                                     shift, and go to state 119

    tid              go to state 69
    vid              go to state 83
    floatl           go to state 84
    stringl          go to state 85
    unit             go to state 86
    expr             go to state 155
    parenExpr        go to state 87
    primaryExpr      go to state 88
    vparen           go to state 89
    vtuple           go to state 90
    vstruct          go to state 91
    ifThenElse       go to state 92
    chain            go to state 93
    postfixExpr      go to state 94
    vtcall           go to state 95
    vvcall           go to state 96
    dotNmExpr        go to state 97
    dotIxExpr        go to state 98
    colonNmExpr      go to state 99
    castExpr         go to state 122
    unaryExpr        go to state 123
    unaryOp          go to state 124
    binaryExpr       go to state 125
    mulBinaryExpr    go to state 126
    addBinaryExpr    go to state 127
    cmpBinaryExpr    go to state 128
    eqBinaryExpr     go to state 129
    andBinaryExpr    go to state 130
    xorBinaryExpr    go to state 131
    orBinaryExpr     go to state 132
    typespec         go to state 156
    primaryTypespec  go to state 71
    postfixTypespec  go to state 72
    ttarg            go to state 233


State 210

  114 postfixTypespec: postfixTypespec "'['" ttarg_cl "']'" •

    $default  reduce using rule 114 (postfixTypespec)


State 211

   53 ifThenElse: "'if'" parenExpr "'then'" parenExpr •
   54           | "'if'" parenExpr "'then'" parenExpr • "'else'" parenExpr

    "'else'"  shift, and go to state 234

    $default  reduce using rule 53 (ifThenElse)


State 212

   36 expr_cl2: expr "','" expr •

    $default  reduce using rule 36 (expr_cl2)


State 213

   37 expr_cl2: expr_cl2 "','" expr •

    $default  reduce using rule 37 (expr_cl2)


State 214

   86 mulBinaryExpr: mulBinaryExpr mulBinaryOp unaryExpr •

    $default  reduce using rule 86 (mulBinaryExpr)


State 215

   86 mulBinaryExpr: mulBinaryExpr • mulBinaryOp unaryExpr
   90 addBinaryExpr: addBinaryExpr addBinaryOp mulBinaryExpr •

    "'*'"  shift, and go to state 165
    "'/'"  shift, and go to state 166
    "'%'"  shift, and go to state 167

    $default  reduce using rule 90 (addBinaryExpr)

    mulBinaryOp  go to state 168


State 216

   90 addBinaryExpr: addBinaryExpr • addBinaryOp mulBinaryExpr
   96 cmpBinaryExpr: cmpBinaryExpr cmpBinaryOp addBinaryExpr •

    "'+'"  shift, and go to state 169
    "'-'"  shift, and go to state 170

    $default  reduce using rule 96 (cmpBinaryExpr)

    addBinaryOp  go to state 171


State 217

   96 cmpBinaryExpr: cmpBinaryExpr • cmpBinaryOp addBinaryExpr
  100 eqBinaryExpr: eqBinaryExpr eqBinaryOp cmpBinaryExpr •

    "'<'"   shift, and go to state 172
    "'<='"  shift, and go to state 173
    "'>'"   shift, and go to state 174
    "'>='"  shift, and go to state 175

    $default  reduce using rule 100 (eqBinaryExpr)

    cmpBinaryOp  go to state 176


State 218

  100 eqBinaryExpr: eqBinaryExpr • eqBinaryOp cmpBinaryExpr
  102 andBinaryExpr: andBinaryExpr "'and'" eqBinaryExpr •

    "'=='"  shift, and go to state 177
    "'!='"  shift, and go to state 178

    $default  reduce using rule 102 (andBinaryExpr)

    eqBinaryOp  go to state 179


State 219

  102 andBinaryExpr: andBinaryExpr • "'and'" eqBinaryExpr
  104 xorBinaryExpr: xorBinaryExpr "'xor'" andBinaryExpr •

    "'and'"  shift, and go to state 180

    $default  reduce using rule 104 (xorBinaryExpr)


State 220

  104 xorBinaryExpr: xorBinaryExpr • "'xor'" andBinaryExpr
  106 orBinaryExpr: orBinaryExpr "'or'" xorBinaryExpr •

    "'xor'"  shift, and go to state 181

    $default  reduce using rule 106 (orBinaryExpr)


State 221

   10 letStmt: "'let'" lpattern "'='" • expr

    "a VID (ID with first letter lowercase)"  shift, and go to state 25
    "a TID (ID with first letter uppercase)"  shift, and go to state 30
    "'if'"                                    shift, and go to state 77
    "'not'"                                   shift, and go to state 115
    "'Tuple'"                                 shift, and go to state 67
    "'Array'"                                 shift, and go to state 68
    TK_DINT_LIT                               shift, and go to state 78
    TK_XINT_LIT                               shift, and go to state 79
    TK_FLOAT_LIT                              shift, and go to state 80
    TK_DQSTRING_LIT                           shift, and go to state 47
    TK_SQSTRING_LIT                           shift, and go to state 48
    "'('"                                     shift, and go to state 81
    "'{'"                                     shift, and go to state 82
    "'*'"                                     shift, and go to state 116
    "'+'"                                     shift, and go to state 117
    "'-'"                                     shift, and go to state 118
    "'^'"                                     shift, and go to state 119

    tid              go to state 69
    vid              go to state 83
    floatl           go to state 84
    stringl          go to state 85
    unit             go to state 86
    expr             go to state 235
    parenExpr        go to state 87
    primaryExpr      go to state 88
    vparen           go to state 89
    vtuple           go to state 90
    vstruct          go to state 91
    ifThenElse       go to state 92
    chain            go to state 93
    postfixExpr      go to state 94
    vtcall           go to state 95
    vvcall           go to state 96
    dotNmExpr        go to state 97
    dotIxExpr        go to state 98
    colonNmExpr      go to state 99
    castExpr         go to state 122
    unaryExpr        go to state 123
    unaryOp          go to state 124
    binaryExpr       go to state 125
    mulBinaryExpr    go to state 126
    addBinaryExpr    go to state 127
    cmpBinaryExpr    go to state 128
    eqBinaryExpr     go to state 129
    andBinaryExpr    go to state 130
    xorBinaryExpr    go to state 131
    orBinaryExpr     go to state 132
    typespec         go to state 101
    primaryTypespec  go to state 71
    postfixTypespec  go to state 72


State 222

   11 setStmt: "'set'" expr "'='" • expr

    "a VID (ID with first letter lowercase)"  shift, and go to state 25
    "a TID (ID with first letter uppercase)"  shift, and go to state 30
    "'if'"                                    shift, and go to state 77
    "'not'"                                   shift, and go to state 115
    "'Tuple'"                                 shift, and go to state 67
    "'Array'"                                 shift, and go to state 68
    TK_DINT_LIT                               shift, and go to state 78
    TK_XINT_LIT                               shift, and go to state 79
    TK_FLOAT_LIT                              shift, and go to state 80
    TK_DQSTRING_LIT                           shift, and go to state 47
    TK_SQSTRING_LIT                           shift, and go to state 48
    "'('"                                     shift, and go to state 81
    "'{'"                                     shift, and go to state 82
    "'*'"                                     shift, and go to state 116
    "'+'"                                     shift, and go to state 117
    "'-'"                                     shift, and go to state 118
    "'^'"                                     shift, and go to state 119

    tid              go to state 69
    vid              go to state 83
    floatl           go to state 84
    stringl          go to state 85
    unit             go to state 86
    expr             go to state 236
    parenExpr        go to state 87
    primaryExpr      go to state 88
    vparen           go to state 89
    vtuple           go to state 90
    vstruct          go to state 91
    ifThenElse       go to state 92
    chain            go to state 93
    postfixExpr      go to state 94
    vtcall           go to state 95
    vvcall           go to state 96
    dotNmExpr        go to state 97
    dotIxExpr        go to state 98
    colonNmExpr      go to state 99
    castExpr         go to state 122
    unaryExpr        go to state 123
    unaryOp          go to state 124
    binaryExpr       go to state 125
    mulBinaryExpr    go to state 126
    addBinaryExpr    go to state 127
    cmpBinaryExpr    go to state 128
    eqBinaryExpr     go to state 129
    andBinaryExpr    go to state 130
    xorBinaryExpr    go to state 131
    orBinaryExpr     go to state 132
    typespec         go to state 101
    primaryTypespec  go to state 71
    postfixTypespec  go to state 72


State 223

  124 vstructField: vid "'='" expr •

    $default  reduce using rule 124 (vstructField)


State 224

   59 chainPrefix: chainPrefix chainPrefixStmt "';'" •

    $default  reduce using rule 59 (chainPrefix)


State 225

   57 chain: "'{'" chainPrefix expr "'}'" •

    $default  reduce using rule 57 (chain)


State 226

  126 vstructField_cl: vstructField_cl "','" vstructField •

    $default  reduce using rule 126 (vstructField_cl)


State 227

   35 expr_cl: expr_cl "','" • expr

    "a VID (ID with first letter lowercase)"  shift, and go to state 25
    "a TID (ID with first letter uppercase)"  shift, and go to state 30
    "'if'"                                    shift, and go to state 77
    "'not'"                                   shift, and go to state 115
    "'Tuple'"                                 shift, and go to state 67
    "'Array'"                                 shift, and go to state 68
    TK_DINT_LIT                               shift, and go to state 78
    TK_XINT_LIT                               shift, and go to state 79
    TK_FLOAT_LIT                              shift, and go to state 80
    TK_DQSTRING_LIT                           shift, and go to state 47
    TK_SQSTRING_LIT                           shift, and go to state 48
    "'('"                                     shift, and go to state 81
    "'{'"                                     shift, and go to state 82
    "'*'"                                     shift, and go to state 116
    "'+'"                                     shift, and go to state 117
    "'-'"                                     shift, and go to state 118
    "'^'"                                     shift, and go to state 119

    tid              go to state 69
    vid              go to state 83
    floatl           go to state 84
    stringl          go to state 85
    unit             go to state 86
    expr             go to state 237
    parenExpr        go to state 87
    primaryExpr      go to state 88
    vparen           go to state 89
    vtuple           go to state 90
    vstruct          go to state 91
    ifThenElse       go to state 92
    chain            go to state 93
    postfixExpr      go to state 94
    vtcall           go to state 95
    vvcall           go to state 96
    dotNmExpr        go to state 97
    dotIxExpr        go to state 98
    colonNmExpr      go to state 99
    castExpr         go to state 122
    unaryExpr        go to state 123
    unaryOp          go to state 124
    binaryExpr       go to state 125
    mulBinaryExpr    go to state 126
    addBinaryExpr    go to state 127
    cmpBinaryExpr    go to state 128
    eqBinaryExpr     go to state 129
    andBinaryExpr    go to state 130
    xorBinaryExpr    go to state 131
    orBinaryExpr     go to state 132
    typespec         go to state 101
    primaryTypespec  go to state 71
    postfixTypespec  go to state 72


State 228

   68 vvcall: postfixExpr "'('" expr_cl "')'" •

    $default  reduce using rule 68 (vvcall)


State 229

  123 vtarg_cl: vtarg_cl "','" • vtarg

    "a VID (ID with first letter lowercase)"  shift, and go to state 25
    "a TID (ID with first letter uppercase)"  shift, and go to state 30
    "'if'"                                    shift, and go to state 77
    "'not'"                                   shift, and go to state 115
    "'Tuple'"                                 shift, and go to state 67
    "'Array'"                                 shift, and go to state 68
    TK_DINT_LIT                               shift, and go to state 78
    TK_XINT_LIT                               shift, and go to state 79
    TK_FLOAT_LIT                              shift, and go to state 80
    TK_DQSTRING_LIT                           shift, and go to state 47
    TK_SQSTRING_LIT                           shift, and go to state 48
    "'('"                                     shift, and go to state 81
    "'{'"                                     shift, and go to state 82
    "'*'"                                     shift, and go to state 116
    "'+'"                                     shift, and go to state 117
    "'-'"                                     shift, and go to state 118
    "'^'"                                     shift, and go to state 119

    tid              go to state 69
    vid              go to state 83
    floatl           go to state 84
    stringl          go to state 85
    unit             go to state 86
    expr             go to state 202
    parenExpr        go to state 87
    primaryExpr      go to state 88
    vparen           go to state 89
    vtuple           go to state 90
    vstruct          go to state 91
    ifThenElse       go to state 92
    chain            go to state 93
    postfixExpr      go to state 94
    vtcall           go to state 95
    vvcall           go to state 96
    dotNmExpr        go to state 97
    dotIxExpr        go to state 98
    colonNmExpr      go to state 99
    castExpr         go to state 122
    unaryExpr        go to state 123
    unaryOp          go to state 124
    binaryExpr       go to state 125
    mulBinaryExpr    go to state 126
    addBinaryExpr    go to state 127
    cmpBinaryExpr    go to state 128
    eqBinaryExpr     go to state 129
    andBinaryExpr    go to state 130
    xorBinaryExpr    go to state 131
    orBinaryExpr     go to state 132
    typespec         go to state 203
    primaryTypespec  go to state 71
    postfixTypespec  go to state 72
    vtarg            go to state 238


State 230

   66 vtcall: postfixExpr "'['" vtarg_cl "']'" •

    $default  reduce using rule 66 (vtcall)


State 231

  109 typespec_cl: typespec_cl "','" typespec •

    $default  reduce using rule 109 (typespec_cl)


State 232

  112 primaryTypespec: "'Array'" "'['" typespec "','" expr • "']'"

    "']'"  shift, and go to state 239


State 233

  119 ttarg_cl: ttarg_cl "','" ttarg •

    $default  reduce using rule 119 (ttarg_cl)


State 234

   54 ifThenElse: "'if'" parenExpr "'then'" parenExpr "'else'" • parenExpr

    "'('"  shift, and go to state 81
    "'{'"  shift, and go to state 82

    unit       go to state 86
    parenExpr  go to state 240
    vparen     go to state 89
    vtuple     go to state 90
    vstruct    go to state 91
    chain      go to state 93


State 235

   10 letStmt: "'let'" lpattern "'='" expr •

    $default  reduce using rule 10 (letStmt)


State 236

   11 setStmt: "'set'" expr "'='" expr •

    $default  reduce using rule 11 (setStmt)


State 237

   35 expr_cl: expr_cl "','" expr •

    $default  reduce using rule 35 (expr_cl)


State 238

  123 vtarg_cl: vtarg_cl "','" vtarg •

    $default  reduce using rule 123 (vtarg_cl)


State 239

  112 primaryTypespec: "'Array'" "'['" typespec "','" expr "']'" •

    $default  reduce using rule 112 (primaryTypespec)


State 240

   54 ifThenElse: "'if'" parenExpr "'then'" parenExpr "'else'" parenExpr •

    $default  reduce using rule 54 (ifThenElse)
