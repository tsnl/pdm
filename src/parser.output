Terminals unused in grammar

    "a HOLE (ID without any letters)"
    "'namespace'"
    "'operator'"
    "'match'"
    "'with'"
    "'return'"
    "'discard'"
    "'export'"
    "'fun'"
    "'::'"
    "':::'"
    "'$'"
    "'!'"
    "EOS"


Grammar

    0 $accept: script $end

    1 script: scriptContent

    2 scriptContent: scriptContentStmt "';'"
    3              | scriptContent scriptContentStmt "';'"

    4 scriptContentStmt: moduleStmt
    5                  | externStmt

    6 moduleStmt: "'mod'" "a VID (ID with first letter lowercase)" "'{'" moduleContent "'}'"

    7 moduleContent: moduleContentStmt "';'"
    8              | moduleContent moduleContentStmt "';'"

    9 chainPrefixStmt: letStmt
   10                | setStmt
   11                | discardStmt

   12 letStmt: "'let'" lpattern "'='" expr

   13 setStmt: "'set'" expr "'='" expr

   14 discardStmt: "'do'" expr

   15 moduleContentStmt: defStmt
   16                  | typedefStmt
   17                  | typedefStmt_enum
   18                  | attachStmt
   19                  | importStmt
   20                  | externStmt
   21                  | moduleStmt

   22 defStmt: "'def'" vid vpattern "'->'" castExpr
   23        | "'def'" vid tpattern vpattern "'->'" castExpr

   24 typedefStmt: "'type'" tid tpattern "'='" typespec

   25 typedefStmt_enum: "'enum'" tid tpattern "'='" vstruct

   26 attachStmt: "'attach'" vid "'from'" stringl "'as'" stringl

   27 importStmt: "'import'" vid "'.'" vid
   28           | "'import'" vid "'.'" vid "'*'"

   29 externStmt: "'extern'" "'def'" vid vpattern "'->'" typespec

   30 tid: "a TID (ID with first letter uppercase)"

   31 vid: "a VID (ID with first letter lowercase)"

   32 floatl: TK_FLOAT_LIT

   33 stringl: TK_SQSTRING_LIT
   34        | TK_DQSTRING_LIT

   35 unit: "'('" "')'"

   36 expr: binaryExpr

   37 expr_cl: expr
   38        | expr_cl "','" expr

   39 expr_cl2: expr "','" expr
   40         | expr_cl2 "','" expr

   41 parenExpr: unit
   42          | vparen
   43          | vtuple
   44          | vstruct
   45          | chain

   46 primaryExpr: parenExpr
   47            | vid
   48            | TK_DINT_LIT
   49            | TK_XINT_LIT
   50            | floatl
   51            | stringl
   52            | ifThenElse

   53 vparen: "'('" expr "')'"

   54 vtuple: "'('" expr_cl2 "')'"

   55 vstruct: "'{'" vstructField_cl "'}'"

   56 ifThenElse: "'if'" parenExpr "'then'" parenExpr
   57           | "'if'" parenExpr "'then'" parenExpr "'else'" parenExpr

   58 chain: "'{'" expr "'}'"
   59      | "'{'" chainPrefix "'}'"
   60      | "'{'" chainPrefix expr "'}'"

   61 chainPrefix: chainPrefixStmt "';'"
   62            | chainPrefix chainPrefixStmt "';'"

   63 postfixExpr: primaryExpr
   64            | vtcall
   65            | vvcall
   66            | dotNmExpr
   67            | dotIxExpr
   68            | colonNmExpr

   69 vtcall: postfixExpr "'['" vtarg_cl "']'"

   70 vvcall: postfixExpr "'('" "')'"
   71       | postfixExpr "'('" expr_cl "')'"

   72 dotNmExpr: postfixExpr "'.'" "a VID (ID with first letter lowercase)"

   73 dotIxExpr: postfixExpr "'.'" TK_DINT_LIT

   74 colonNmExpr: postfixExpr "':'" "a VID (ID with first letter lowercase)"

   75 castExpr: postfixExpr
   76         | typespec parenExpr

   77 unaryExpr: castExpr
   78          | unaryOp unaryExpr

   79 unaryOp: "'+'"
   80        | "'-'"
   81        | "'*'"
   82        | "'^'"
   83        | "'not'"

   84 binaryExpr: orBinaryExpr

   85 mulBinaryOp: "'*'"
   86            | "'/'"
   87            | "'%'"

   88 mulBinaryExpr: unaryExpr
   89              | mulBinaryExpr mulBinaryOp unaryExpr

   90 addBinaryOp: "'+'"
   91            | "'-'"

   92 addBinaryExpr: mulBinaryExpr
   93              | addBinaryExpr addBinaryOp mulBinaryExpr

   94 cmpBinaryOp: "'<'"
   95            | "'<='"
   96            | "'>'"
   97            | "'>='"

   98 cmpBinaryExpr: addBinaryExpr
   99              | cmpBinaryExpr cmpBinaryOp addBinaryExpr

  100 eqBinaryOp: "'=='"
  101           | "'!='"

  102 eqBinaryExpr: cmpBinaryExpr
  103             | eqBinaryExpr eqBinaryOp cmpBinaryExpr

  104 andBinaryExpr: eqBinaryExpr
  105              | andBinaryExpr "'and'" eqBinaryExpr

  106 xorBinaryExpr: andBinaryExpr
  107              | xorBinaryExpr "'xor'" andBinaryExpr

  108 orBinaryExpr: xorBinaryExpr
  109             | orBinaryExpr "'or'" xorBinaryExpr

  110 typespec: postfixTypespec

  111 typespec_cl: typespec
  112            | typespec_cl "','" typespec

  113 primaryTypespec: tid
  114                | "'Tuple'" "'['" typespec_cl "']'"
  115                | "'Array'" "'['" typespec "','" expr "']'"

  116 postfixTypespec: primaryTypespec
  117                | postfixTypespec "'['" ttarg_cl "']'"
  118                | postfixTypespec "'^'"

  119 ttarg: typespec
  120      | expr

  121 ttarg_cl: ttarg
  122         | ttarg_cl "','" ttarg

  123 vtarg: typespec
  124      | expr

  125 vtarg_cl: vtarg
  126         | vtarg_cl "','" vtarg

  127 vstructField: vid "'='" expr

  128 vstructField_cl: vstructField
  129                | vstructField_cl "','" vstructField

  130 vpatternField: vid typespec

  131 lpatternField: vpatternField
  132              | vid

  133 tpatternField: tid
  134              | vpatternField

  135 lpattern: lpatternField
  136         | "'('" lpatternField_cl "')'"
  137         | unit

  138 vpattern: "'('" vpatternField_cl "')'"
  139         | unit

  140 tpattern: "'['" tpatternField_cl "']'"

  141 vpatternField_cl: vpatternField
  142                 | vpatternField_cl "','" vpatternField

  143 lpatternField_cl: lpatternField
  144                 | lpatternField_cl "','" lpatternField

  145 tpatternField_cl: tpatternField
  146                 | tpatternField_cl "','" tpatternField


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    "a VID (ID with first letter lowercase)" <token> (258) 6 31 72 74
    "a TID (ID with first letter uppercase)" <token> (259) 30
    "a HOLE (ID without any letters)" <token> (260)
    "'namespace'" (261)
    "'mod'" (262) 6
    "'do'" (263) 14
    "'if'" (264) 56 57
    "'then'" (265) 56 57
    "'else'" (266) 57
    "'operator'" (267)
    "'match'" (268)
    "'with'" (269)
    "'return'" (270)
    "'discard'" (271)
    "'attach'" (272) 26
    "'import'" (273) 27 28
    "'export'" (274)
    "'extern'" (275) 29
    "'from'" (276) 26
    "'as'" (277) 26
    "'fun'" (278)
    "'let'" (279) 12
    "'set'" (280) 13
    "'def'" (281) 22 23 29
    "'type'" (282) 24
    "'enum'" (283) 25
    "'and'" (284) 105
    "'xor'" (285) 107
    "'or'" (286) 109
    "'not'" (287) 83
    "'Tuple'" (288) 114
    "'Array'" (289) 115
    TK_DINT_LIT <token> (290) 48 73
    TK_XINT_LIT <token> (291) 49
    TK_FLOAT_LIT <token> (292) 32
    TK_DQSTRING_LIT <token> (293) 34
    TK_SQSTRING_LIT <token> (294) 33
    "'.'" (295) 27 28 72 73
    "':'" (296) 74
    "','" (297) 38 39 40 112 115 122 126 129 142 144 146
    "';'" (298) 2 3 7 8 61 62
    "'::'" (299)
    "':::'" (300)
    "'('" (301) 35 53 54 70 71 136 138
    "')'" (302) 35 53 54 70 71 136 138
    "'['" (303) 69 114 115 117 140
    "']'" (304) 69 114 115 117 140
    "'{'" (305) 6 55 58 59 60
    "'}'" (306) 6 55 58 59 60
    "'->'" (307) 22 23 29
    "'*'" (308) 28 81 85
    "'/'" (309) 86
    "'%'" (310) 87
    "'+'" (311) 79 90
    "'-'" (312) 80 91
    "'<'" (313) 94
    "'<='" (314) 95
    "'>'" (315) 96
    "'>='" (316) 97
    "'='" (317) 12 13 24 25 127
    "'=='" (318) 100
    "'!='" (319) 101
    "'$'" (320)
    "'^'" (321) 82 118
    "'!'" (322)
    "EOS" (323)


Nonterminals, with rules where they appear

    $accept (69)
        on left: 0
    script <nt> (70)
        on left: 1
        on right: 0
    scriptContent <ntSb> (71)
        on left: 2 3
        on right: 1 3
    scriptContentStmt <nt> (72)
        on left: 4 5
        on right: 2 3
    moduleStmt <nt> (73)
        on left: 6
        on right: 4 21
    moduleContent <ntSb> (74)
        on left: 7 8
        on right: 6 8
    chainPrefixStmt <nt> (75)
        on left: 9 10 11
        on right: 61 62
    letStmt <nt> (76)
        on left: 12
        on right: 9
    setStmt <nt> (77)
        on left: 13
        on right: 10
    discardStmt <nt> (78)
        on left: 14
        on right: 11
    moduleContentStmt <nt> (79)
        on left: 15 16 17 18 19 20 21
        on right: 7 8
    defStmt <nt> (80)
        on left: 22 23
        on right: 15
    typedefStmt <nt> (81)
        on left: 24
        on right: 16
    typedefStmt_enum <nt> (82)
        on left: 25
        on right: 17
    attachStmt <nt> (83)
        on left: 26
        on right: 18
    importStmt <nt> (84)
        on left: 27 28
        on right: 19
    externStmt <nt> (85)
        on left: 29
        on right: 5 20
    tid <token> (86)
        on left: 30
        on right: 24 25 113 133
    vid <token> (87)
        on left: 31
        on right: 22 23 26 27 28 29 47 127 130 132
    floatl <token> (88)
        on left: 32
        on right: 50
    stringl <token> (89)
        on left: 33 34
        on right: 26 51
    unit <nt> (90)
        on left: 35
        on right: 41 137 139
    expr <nt> (91)
        on left: 36
        on right: 12 13 14 37 38 39 40 53 58 60 115 120 124 127
    expr_cl <ntSb> (92)
        on left: 37 38
        on right: 38 71
    expr_cl2 <ntSb> (93)
        on left: 39 40
        on right: 40 54
    parenExpr <nt> (94)
        on left: 41 42 43 44 45
        on right: 46 56 57 76
    primaryExpr <nt> (95)
        on left: 46 47 48 49 50 51 52
        on right: 63
    vparen <nt> (96)
        on left: 53
        on right: 42
    vtuple <nt> (97)
        on left: 54
        on right: 43
    vstruct <nt> (98)
        on left: 55
        on right: 25 44
    ifThenElse <nt> (99)
        on left: 56 57
        on right: 52
    chain <nt> (100)
        on left: 58 59 60
        on right: 45
    chainPrefix <ntSb> (101)
        on left: 61 62
        on right: 59 60 62
    postfixExpr <nt> (102)
        on left: 63 64 65 66 67 68
        on right: 69 70 71 72 73 74 75
    vtcall <nt> (103)
        on left: 69
        on right: 64
    vvcall <nt> (104)
        on left: 70 71
        on right: 65
    dotNmExpr <nt> (105)
        on left: 72
        on right: 66
    dotIxExpr <nt> (106)
        on left: 73
        on right: 67
    colonNmExpr <nt> (107)
        on left: 74
        on right: 68
    castExpr <nt> (108)
        on left: 75 76
        on right: 22 23 77
    unaryExpr <nt> (109)
        on left: 77 78
        on right: 78 88 89
    unaryOp <uop> (110)
        on left: 79 80 81 82 83
        on right: 78
    binaryExpr <nt> (111)
        on left: 84
        on right: 36
    mulBinaryOp <bop> (112)
        on left: 85 86 87
        on right: 89
    mulBinaryExpr <nt> (113)
        on left: 88 89
        on right: 89 92 93
    addBinaryOp <bop> (114)
        on left: 90 91
        on right: 93
    addBinaryExpr <nt> (115)
        on left: 92 93
        on right: 93 98 99
    cmpBinaryOp <bop> (116)
        on left: 94 95 96 97
        on right: 99
    cmpBinaryExpr <nt> (117)
        on left: 98 99
        on right: 99 102 103
    eqBinaryOp <bop> (118)
        on left: 100 101
        on right: 103
    eqBinaryExpr <nt> (119)
        on left: 102 103
        on right: 103 104 105
    andBinaryExpr <nt> (120)
        on left: 104 105
        on right: 105 106 107
    xorBinaryExpr <nt> (121)
        on left: 106 107
        on right: 107 108 109
    orBinaryExpr <nt> (122)
        on left: 108 109
        on right: 84 109
    typespec <nt> (123)
        on left: 110
        on right: 24 29 76 111 112 115 119 123 130
    typespec_cl <ntSb> (124)
        on left: 111 112
        on right: 112 114
    primaryTypespec <nt> (125)
        on left: 113 114 115
        on right: 116
    postfixTypespec <nt> (126)
        on left: 116 117 118
        on right: 110 117 118
    ttarg <nt> (127)
        on left: 119 120
        on right: 121 122
    ttarg_cl <ntSb> (128)
        on left: 121 122
        on right: 117 122
    vtarg <nt> (129)
        on left: 123 124
        on right: 125 126
    vtarg_cl <ntSb> (130)
        on left: 125 126
        on right: 69 126
    vstructField <nt> (131)
        on left: 127
        on right: 128 129
    vstructField_cl <ntSb> (132)
        on left: 128 129
        on right: 55 129
    vpatternField <nt> (133)
        on left: 130
        on right: 131 134 141 142
    lpatternField <nt> (134)
        on left: 131 132
        on right: 135 143 144
    tpatternField <nt> (135)
        on left: 133 134
        on right: 145 146
    lpattern <nt> (136)
        on left: 135 136 137
        on right: 12
    vpattern <nt> (137)
        on left: 138 139
        on right: 22 23 29
    tpattern <nt> (138)
        on left: 140
        on right: 23 24 25
    vpatternField_cl <ntSb> (139)
        on left: 141 142
        on right: 138 142
    lpatternField_cl <ntSb> (140)
        on left: 143 144
        on right: 136 144
    tpatternField_cl <ntSb> (141)
        on left: 145 146
        on right: 140 146


State 0

    0 $accept: • script $end

    "'mod'"     shift, and go to state 1
    "'extern'"  shift, and go to state 2

    script             go to state 3
    scriptContent      go to state 4
    scriptContentStmt  go to state 5
    moduleStmt         go to state 6
    externStmt         go to state 7


State 1

    6 moduleStmt: "'mod'" • "a VID (ID with first letter lowercase)" "'{'" moduleContent "'}'"

    "a VID (ID with first letter lowercase)"  shift, and go to state 8


State 2

   29 externStmt: "'extern'" • "'def'" vid vpattern "'->'" typespec

    "'def'"  shift, and go to state 9


State 3

    0 $accept: script • $end

    $end  shift, and go to state 10


State 4

    1 script: scriptContent •
    3 scriptContent: scriptContent • scriptContentStmt "';'"

    "'mod'"     shift, and go to state 1
    "'extern'"  shift, and go to state 2

    $default  reduce using rule 1 (script)

    scriptContentStmt  go to state 11
    moduleStmt         go to state 6
    externStmt         go to state 7


State 5

    2 scriptContent: scriptContentStmt • "';'"

    "';'"  shift, and go to state 12


State 6

    4 scriptContentStmt: moduleStmt •

    $default  reduce using rule 4 (scriptContentStmt)


State 7

    5 scriptContentStmt: externStmt •

    $default  reduce using rule 5 (scriptContentStmt)


State 8

    6 moduleStmt: "'mod'" "a VID (ID with first letter lowercase)" • "'{'" moduleContent "'}'"

    "'{'"  shift, and go to state 13


State 9

   29 externStmt: "'extern'" "'def'" • vid vpattern "'->'" typespec

    "a VID (ID with first letter lowercase)"  shift, and go to state 14

    vid  go to state 15


State 10

    0 $accept: script $end •

    $default  accept


State 11

    3 scriptContent: scriptContent scriptContentStmt • "';'"

    "';'"  shift, and go to state 16


State 12

    2 scriptContent: scriptContentStmt "';'" •

    $default  reduce using rule 2 (scriptContent)


State 13

    6 moduleStmt: "'mod'" "a VID (ID with first letter lowercase)" "'{'" • moduleContent "'}'"

    "'mod'"     shift, and go to state 1
    "'attach'"  shift, and go to state 17
    "'import'"  shift, and go to state 18
    "'extern'"  shift, and go to state 2
    "'def'"     shift, and go to state 19
    "'type'"    shift, and go to state 20
    "'enum'"    shift, and go to state 21

    moduleStmt         go to state 22
    moduleContent      go to state 23
    moduleContentStmt  go to state 24
    defStmt            go to state 25
    typedefStmt        go to state 26
    typedefStmt_enum   go to state 27
    attachStmt         go to state 28
    importStmt         go to state 29
    externStmt         go to state 30


State 14

   31 vid: "a VID (ID with first letter lowercase)" •

    $default  reduce using rule 31 (vid)


State 15

   29 externStmt: "'extern'" "'def'" vid • vpattern "'->'" typespec

    "'('"  shift, and go to state 31

    unit      go to state 32
    vpattern  go to state 33


State 16

    3 scriptContent: scriptContent scriptContentStmt "';'" •

    $default  reduce using rule 3 (scriptContent)


State 17

   26 attachStmt: "'attach'" • vid "'from'" stringl "'as'" stringl

    "a VID (ID with first letter lowercase)"  shift, and go to state 14

    vid  go to state 34


State 18

   27 importStmt: "'import'" • vid "'.'" vid
   28           | "'import'" • vid "'.'" vid "'*'"

    "a VID (ID with first letter lowercase)"  shift, and go to state 14

    vid  go to state 35


State 19

   22 defStmt: "'def'" • vid vpattern "'->'" castExpr
   23        | "'def'" • vid tpattern vpattern "'->'" castExpr

    "a VID (ID with first letter lowercase)"  shift, and go to state 14

    vid  go to state 36


State 20

   24 typedefStmt: "'type'" • tid tpattern "'='" typespec

    "a TID (ID with first letter uppercase)"  shift, and go to state 37

    tid  go to state 38


State 21

   25 typedefStmt_enum: "'enum'" • tid tpattern "'='" vstruct

    "a TID (ID with first letter uppercase)"  shift, and go to state 37

    tid  go to state 39


State 22

   21 moduleContentStmt: moduleStmt •

    $default  reduce using rule 21 (moduleContentStmt)


State 23

    6 moduleStmt: "'mod'" "a VID (ID with first letter lowercase)" "'{'" moduleContent • "'}'"
    8 moduleContent: moduleContent • moduleContentStmt "';'"

    "'mod'"     shift, and go to state 1
    "'attach'"  shift, and go to state 17
    "'import'"  shift, and go to state 18
    "'extern'"  shift, and go to state 2
    "'def'"     shift, and go to state 19
    "'type'"    shift, and go to state 20
    "'enum'"    shift, and go to state 21
    "'}'"       shift, and go to state 40

    moduleStmt         go to state 22
    moduleContentStmt  go to state 41
    defStmt            go to state 25
    typedefStmt        go to state 26
    typedefStmt_enum   go to state 27
    attachStmt         go to state 28
    importStmt         go to state 29
    externStmt         go to state 30


State 24

    7 moduleContent: moduleContentStmt • "';'"

    "';'"  shift, and go to state 42


State 25

   15 moduleContentStmt: defStmt •

    $default  reduce using rule 15 (moduleContentStmt)


State 26

   16 moduleContentStmt: typedefStmt •

    $default  reduce using rule 16 (moduleContentStmt)


State 27

   17 moduleContentStmt: typedefStmt_enum •

    $default  reduce using rule 17 (moduleContentStmt)


State 28

   18 moduleContentStmt: attachStmt •

    $default  reduce using rule 18 (moduleContentStmt)


State 29

   19 moduleContentStmt: importStmt •

    $default  reduce using rule 19 (moduleContentStmt)


State 30

   20 moduleContentStmt: externStmt •

    $default  reduce using rule 20 (moduleContentStmt)


State 31

   35 unit: "'('" • "')'"
  138 vpattern: "'('" • vpatternField_cl "')'"

    "a VID (ID with first letter lowercase)"  shift, and go to state 14
    "')'"                                     shift, and go to state 43

    vid               go to state 44
    vpatternField     go to state 45
    vpatternField_cl  go to state 46


State 32

  139 vpattern: unit •

    $default  reduce using rule 139 (vpattern)


State 33

   29 externStmt: "'extern'" "'def'" vid vpattern • "'->'" typespec

    "'->'"  shift, and go to state 47


State 34

   26 attachStmt: "'attach'" vid • "'from'" stringl "'as'" stringl

    "'from'"  shift, and go to state 48


State 35

   27 importStmt: "'import'" vid • "'.'" vid
   28           | "'import'" vid • "'.'" vid "'*'"

    "'.'"  shift, and go to state 49


State 36

   22 defStmt: "'def'" vid • vpattern "'->'" castExpr
   23        | "'def'" vid • tpattern vpattern "'->'" castExpr

    "'('"  shift, and go to state 31
    "'['"  shift, and go to state 50

    unit      go to state 32
    vpattern  go to state 51
    tpattern  go to state 52


State 37

   30 tid: "a TID (ID with first letter uppercase)" •

    $default  reduce using rule 30 (tid)


State 38

   24 typedefStmt: "'type'" tid • tpattern "'='" typespec

    "'['"  shift, and go to state 50

    tpattern  go to state 53


State 39

   25 typedefStmt_enum: "'enum'" tid • tpattern "'='" vstruct

    "'['"  shift, and go to state 50

    tpattern  go to state 54


State 40

    6 moduleStmt: "'mod'" "a VID (ID with first letter lowercase)" "'{'" moduleContent "'}'" •

    $default  reduce using rule 6 (moduleStmt)


State 41

    8 moduleContent: moduleContent moduleContentStmt • "';'"

    "';'"  shift, and go to state 55


State 42

    7 moduleContent: moduleContentStmt "';'" •

    $default  reduce using rule 7 (moduleContent)


State 43

   35 unit: "'('" "')'" •

    $default  reduce using rule 35 (unit)


State 44

  130 vpatternField: vid • typespec

    "a TID (ID with first letter uppercase)"  shift, and go to state 37
    "'Tuple'"                                 shift, and go to state 56
    "'Array'"                                 shift, and go to state 57

    tid              go to state 58
    typespec         go to state 59
    primaryTypespec  go to state 60
    postfixTypespec  go to state 61


State 45

  141 vpatternField_cl: vpatternField •

    $default  reduce using rule 141 (vpatternField_cl)


State 46

  138 vpattern: "'('" vpatternField_cl • "')'"
  142 vpatternField_cl: vpatternField_cl • "','" vpatternField

    "','"  shift, and go to state 62
    "')'"  shift, and go to state 63


State 47

   29 externStmt: "'extern'" "'def'" vid vpattern "'->'" • typespec

    "a TID (ID with first letter uppercase)"  shift, and go to state 37
    "'Tuple'"                                 shift, and go to state 56
    "'Array'"                                 shift, and go to state 57

    tid              go to state 58
    typespec         go to state 64
    primaryTypespec  go to state 60
    postfixTypespec  go to state 61


State 48

   26 attachStmt: "'attach'" vid "'from'" • stringl "'as'" stringl

    TK_DQSTRING_LIT  shift, and go to state 65
    TK_SQSTRING_LIT  shift, and go to state 66

    stringl  go to state 67


State 49

   27 importStmt: "'import'" vid "'.'" • vid
   28           | "'import'" vid "'.'" • vid "'*'"

    "a VID (ID with first letter lowercase)"  shift, and go to state 14

    vid  go to state 68


State 50

  140 tpattern: "'['" • tpatternField_cl "']'"

    "a VID (ID with first letter lowercase)"  shift, and go to state 14
    "a TID (ID with first letter uppercase)"  shift, and go to state 37

    tid               go to state 69
    vid               go to state 44
    vpatternField     go to state 70
    tpatternField     go to state 71
    tpatternField_cl  go to state 72


State 51

   22 defStmt: "'def'" vid vpattern • "'->'" castExpr

    "'->'"  shift, and go to state 73


State 52

   23 defStmt: "'def'" vid tpattern • vpattern "'->'" castExpr

    "'('"  shift, and go to state 31

    unit      go to state 32
    vpattern  go to state 74


State 53

   24 typedefStmt: "'type'" tid tpattern • "'='" typespec

    "'='"  shift, and go to state 75


State 54

   25 typedefStmt_enum: "'enum'" tid tpattern • "'='" vstruct

    "'='"  shift, and go to state 76


State 55

    8 moduleContent: moduleContent moduleContentStmt "';'" •

    $default  reduce using rule 8 (moduleContent)


State 56

  114 primaryTypespec: "'Tuple'" • "'['" typespec_cl "']'"

    "'['"  shift, and go to state 77


State 57

  115 primaryTypespec: "'Array'" • "'['" typespec "','" expr "']'"

    "'['"  shift, and go to state 78


State 58

  113 primaryTypespec: tid •

    $default  reduce using rule 113 (primaryTypespec)


State 59

  130 vpatternField: vid typespec •

    $default  reduce using rule 130 (vpatternField)


State 60

  116 postfixTypespec: primaryTypespec •

    $default  reduce using rule 116 (postfixTypespec)


State 61

  110 typespec: postfixTypespec •
  117 postfixTypespec: postfixTypespec • "'['" ttarg_cl "']'"
  118                | postfixTypespec • "'^'"

    "'['"  shift, and go to state 79
    "'^'"  shift, and go to state 80

    $default  reduce using rule 110 (typespec)


State 62

  142 vpatternField_cl: vpatternField_cl "','" • vpatternField

    "a VID (ID with first letter lowercase)"  shift, and go to state 14

    vid            go to state 44
    vpatternField  go to state 81


State 63

  138 vpattern: "'('" vpatternField_cl "')'" •

    $default  reduce using rule 138 (vpattern)


State 64

   29 externStmt: "'extern'" "'def'" vid vpattern "'->'" typespec •

    $default  reduce using rule 29 (externStmt)


State 65

   34 stringl: TK_DQSTRING_LIT •

    $default  reduce using rule 34 (stringl)


State 66

   33 stringl: TK_SQSTRING_LIT •

    $default  reduce using rule 33 (stringl)


State 67

   26 attachStmt: "'attach'" vid "'from'" stringl • "'as'" stringl

    "'as'"  shift, and go to state 82


State 68

   27 importStmt: "'import'" vid "'.'" vid •
   28           | "'import'" vid "'.'" vid • "'*'"

    "'*'"  shift, and go to state 83

    $default  reduce using rule 27 (importStmt)


State 69

  133 tpatternField: tid •

    $default  reduce using rule 133 (tpatternField)


State 70

  134 tpatternField: vpatternField •

    $default  reduce using rule 134 (tpatternField)


State 71

  145 tpatternField_cl: tpatternField •

    $default  reduce using rule 145 (tpatternField_cl)


State 72

  140 tpattern: "'['" tpatternField_cl • "']'"
  146 tpatternField_cl: tpatternField_cl • "','" tpatternField

    "','"  shift, and go to state 84
    "']'"  shift, and go to state 85


State 73

   22 defStmt: "'def'" vid vpattern "'->'" • castExpr

    "a VID (ID with first letter lowercase)"  shift, and go to state 14
    "a TID (ID with first letter uppercase)"  shift, and go to state 37
    "'if'"                                    shift, and go to state 86
    "'Tuple'"                                 shift, and go to state 56
    "'Array'"                                 shift, and go to state 57
    TK_DINT_LIT                               shift, and go to state 87
    TK_XINT_LIT                               shift, and go to state 88
    TK_FLOAT_LIT                              shift, and go to state 89
    TK_DQSTRING_LIT                           shift, and go to state 65
    TK_SQSTRING_LIT                           shift, and go to state 66
    "'('"                                     shift, and go to state 90
    "'{'"                                     shift, and go to state 91

    tid              go to state 58
    vid              go to state 92
    floatl           go to state 93
    stringl          go to state 94
    unit             go to state 95
    parenExpr        go to state 96
    primaryExpr      go to state 97
    vparen           go to state 98
    vtuple           go to state 99
    vstruct          go to state 100
    ifThenElse       go to state 101
    chain            go to state 102
    postfixExpr      go to state 103
    vtcall           go to state 104
    vvcall           go to state 105
    dotNmExpr        go to state 106
    dotIxExpr        go to state 107
    colonNmExpr      go to state 108
    castExpr         go to state 109
    typespec         go to state 110
    primaryTypespec  go to state 60
    postfixTypespec  go to state 61


State 74

   23 defStmt: "'def'" vid tpattern vpattern • "'->'" castExpr

    "'->'"  shift, and go to state 111


State 75

   24 typedefStmt: "'type'" tid tpattern "'='" • typespec

    "a TID (ID with first letter uppercase)"  shift, and go to state 37
    "'Tuple'"                                 shift, and go to state 56
    "'Array'"                                 shift, and go to state 57

    tid              go to state 58
    typespec         go to state 112
    primaryTypespec  go to state 60
    postfixTypespec  go to state 61


State 76

   25 typedefStmt_enum: "'enum'" tid tpattern "'='" • vstruct

    "'{'"  shift, and go to state 113

    vstruct  go to state 114


State 77

  114 primaryTypespec: "'Tuple'" "'['" • typespec_cl "']'"

    "a TID (ID with first letter uppercase)"  shift, and go to state 37
    "'Tuple'"                                 shift, and go to state 56
    "'Array'"                                 shift, and go to state 57

    tid              go to state 58
    typespec         go to state 115
    typespec_cl      go to state 116
    primaryTypespec  go to state 60
    postfixTypespec  go to state 61


State 78

  115 primaryTypespec: "'Array'" "'['" • typespec "','" expr "']'"

    "a TID (ID with first letter uppercase)"  shift, and go to state 37
    "'Tuple'"                                 shift, and go to state 56
    "'Array'"                                 shift, and go to state 57

    tid              go to state 58
    typespec         go to state 117
    primaryTypespec  go to state 60
    postfixTypespec  go to state 61


State 79

  117 postfixTypespec: postfixTypespec "'['" • ttarg_cl "']'"

    "a VID (ID with first letter lowercase)"  shift, and go to state 14
    "a TID (ID with first letter uppercase)"  shift, and go to state 37
    "'if'"                                    shift, and go to state 86
    "'not'"                                   shift, and go to state 118
    "'Tuple'"                                 shift, and go to state 56
    "'Array'"                                 shift, and go to state 57
    TK_DINT_LIT                               shift, and go to state 87
    TK_XINT_LIT                               shift, and go to state 88
    TK_FLOAT_LIT                              shift, and go to state 89
    TK_DQSTRING_LIT                           shift, and go to state 65
    TK_SQSTRING_LIT                           shift, and go to state 66
    "'('"                                     shift, and go to state 90
    "'{'"                                     shift, and go to state 91
    "'*'"                                     shift, and go to state 119
    "'+'"                                     shift, and go to state 120
    "'-'"                                     shift, and go to state 121
    "'^'"                                     shift, and go to state 122

    tid              go to state 58
    vid              go to state 92
    floatl           go to state 93
    stringl          go to state 94
    unit             go to state 95
    expr             go to state 123
    parenExpr        go to state 96
    primaryExpr      go to state 97
    vparen           go to state 98
    vtuple           go to state 99
    vstruct          go to state 100
    ifThenElse       go to state 101
    chain            go to state 102
    postfixExpr      go to state 103
    vtcall           go to state 104
    vvcall           go to state 105
    dotNmExpr        go to state 106
    dotIxExpr        go to state 107
    colonNmExpr      go to state 108
    castExpr         go to state 124
    unaryExpr        go to state 125
    unaryOp          go to state 126
    binaryExpr       go to state 127
    mulBinaryExpr    go to state 128
    addBinaryExpr    go to state 129
    cmpBinaryExpr    go to state 130
    eqBinaryExpr     go to state 131
    andBinaryExpr    go to state 132
    xorBinaryExpr    go to state 133
    orBinaryExpr     go to state 134
    typespec         go to state 135
    primaryTypespec  go to state 60
    postfixTypespec  go to state 61
    ttarg            go to state 136
    ttarg_cl         go to state 137


State 80

  118 postfixTypespec: postfixTypespec "'^'" •

    $default  reduce using rule 118 (postfixTypespec)


State 81

  142 vpatternField_cl: vpatternField_cl "','" vpatternField •

    $default  reduce using rule 142 (vpatternField_cl)


State 82

   26 attachStmt: "'attach'" vid "'from'" stringl "'as'" • stringl

    TK_DQSTRING_LIT  shift, and go to state 65
    TK_SQSTRING_LIT  shift, and go to state 66

    stringl  go to state 138


State 83

   28 importStmt: "'import'" vid "'.'" vid "'*'" •

    $default  reduce using rule 28 (importStmt)


State 84

  146 tpatternField_cl: tpatternField_cl "','" • tpatternField

    "a VID (ID with first letter lowercase)"  shift, and go to state 14
    "a TID (ID with first letter uppercase)"  shift, and go to state 37

    tid            go to state 69
    vid            go to state 44
    vpatternField  go to state 70
    tpatternField  go to state 139


State 85

  140 tpattern: "'['" tpatternField_cl "']'" •

    $default  reduce using rule 140 (tpattern)


State 86

   56 ifThenElse: "'if'" • parenExpr "'then'" parenExpr
   57           | "'if'" • parenExpr "'then'" parenExpr "'else'" parenExpr

    "'('"  shift, and go to state 90
    "'{'"  shift, and go to state 91

    unit       go to state 95
    parenExpr  go to state 140
    vparen     go to state 98
    vtuple     go to state 99
    vstruct    go to state 100
    chain      go to state 102


State 87

   48 primaryExpr: TK_DINT_LIT •

    $default  reduce using rule 48 (primaryExpr)


State 88

   49 primaryExpr: TK_XINT_LIT •

    $default  reduce using rule 49 (primaryExpr)


State 89

   32 floatl: TK_FLOAT_LIT •

    $default  reduce using rule 32 (floatl)


State 90

   35 unit: "'('" • "')'"
   53 vparen: "'('" • expr "')'"
   54 vtuple: "'('" • expr_cl2 "')'"

    "a VID (ID with first letter lowercase)"  shift, and go to state 14
    "a TID (ID with first letter uppercase)"  shift, and go to state 37
    "'if'"                                    shift, and go to state 86
    "'not'"                                   shift, and go to state 118
    "'Tuple'"                                 shift, and go to state 56
    "'Array'"                                 shift, and go to state 57
    TK_DINT_LIT                               shift, and go to state 87
    TK_XINT_LIT                               shift, and go to state 88
    TK_FLOAT_LIT                              shift, and go to state 89
    TK_DQSTRING_LIT                           shift, and go to state 65
    TK_SQSTRING_LIT                           shift, and go to state 66
    "'('"                                     shift, and go to state 90
    "')'"                                     shift, and go to state 43
    "'{'"                                     shift, and go to state 91
    "'*'"                                     shift, and go to state 119
    "'+'"                                     shift, and go to state 120
    "'-'"                                     shift, and go to state 121
    "'^'"                                     shift, and go to state 122

    tid              go to state 58
    vid              go to state 92
    floatl           go to state 93
    stringl          go to state 94
    unit             go to state 95
    expr             go to state 141
    expr_cl2         go to state 142
    parenExpr        go to state 96
    primaryExpr      go to state 97
    vparen           go to state 98
    vtuple           go to state 99
    vstruct          go to state 100
    ifThenElse       go to state 101
    chain            go to state 102
    postfixExpr      go to state 103
    vtcall           go to state 104
    vvcall           go to state 105
    dotNmExpr        go to state 106
    dotIxExpr        go to state 107
    colonNmExpr      go to state 108
    castExpr         go to state 124
    unaryExpr        go to state 125
    unaryOp          go to state 126
    binaryExpr       go to state 127
    mulBinaryExpr    go to state 128
    addBinaryExpr    go to state 129
    cmpBinaryExpr    go to state 130
    eqBinaryExpr     go to state 131
    andBinaryExpr    go to state 132
    xorBinaryExpr    go to state 133
    orBinaryExpr     go to state 134
    typespec         go to state 110
    primaryTypespec  go to state 60
    postfixTypespec  go to state 61


State 91

   55 vstruct: "'{'" • vstructField_cl "'}'"
   58 chain: "'{'" • expr "'}'"
   59      | "'{'" • chainPrefix "'}'"
   60      | "'{'" • chainPrefix expr "'}'"

    "a VID (ID with first letter lowercase)"  shift, and go to state 14
    "a TID (ID with first letter uppercase)"  shift, and go to state 37
    "'do'"                                    shift, and go to state 143
    "'if'"                                    shift, and go to state 86
    "'let'"                                   shift, and go to state 144
    "'set'"                                   shift, and go to state 145
    "'not'"                                   shift, and go to state 118
    "'Tuple'"                                 shift, and go to state 56
    "'Array'"                                 shift, and go to state 57
    TK_DINT_LIT                               shift, and go to state 87
    TK_XINT_LIT                               shift, and go to state 88
    TK_FLOAT_LIT                              shift, and go to state 89
    TK_DQSTRING_LIT                           shift, and go to state 65
    TK_SQSTRING_LIT                           shift, and go to state 66
    "'('"                                     shift, and go to state 90
    "'{'"                                     shift, and go to state 91
    "'*'"                                     shift, and go to state 119
    "'+'"                                     shift, and go to state 120
    "'-'"                                     shift, and go to state 121
    "'^'"                                     shift, and go to state 122

    chainPrefixStmt  go to state 146
    letStmt          go to state 147
    setStmt          go to state 148
    discardStmt      go to state 149
    tid              go to state 58
    vid              go to state 150
    floatl           go to state 93
    stringl          go to state 94
    unit             go to state 95
    expr             go to state 151
    parenExpr        go to state 96
    primaryExpr      go to state 97
    vparen           go to state 98
    vtuple           go to state 99
    vstruct          go to state 100
    ifThenElse       go to state 101
    chain            go to state 102
    chainPrefix      go to state 152
    postfixExpr      go to state 103
    vtcall           go to state 104
    vvcall           go to state 105
    dotNmExpr        go to state 106
    dotIxExpr        go to state 107
    colonNmExpr      go to state 108
    castExpr         go to state 124
    unaryExpr        go to state 125
    unaryOp          go to state 126
    binaryExpr       go to state 127
    mulBinaryExpr    go to state 128
    addBinaryExpr    go to state 129
    cmpBinaryExpr    go to state 130
    eqBinaryExpr     go to state 131
    andBinaryExpr    go to state 132
    xorBinaryExpr    go to state 133
    orBinaryExpr     go to state 134
    typespec         go to state 110
    primaryTypespec  go to state 60
    postfixTypespec  go to state 61
    vstructField     go to state 153
    vstructField_cl  go to state 154


State 92

   47 primaryExpr: vid •

    $default  reduce using rule 47 (primaryExpr)


State 93

   50 primaryExpr: floatl •

    $default  reduce using rule 50 (primaryExpr)


State 94

   51 primaryExpr: stringl •

    $default  reduce using rule 51 (primaryExpr)


State 95

   41 parenExpr: unit •

    $default  reduce using rule 41 (parenExpr)


State 96

   46 primaryExpr: parenExpr •

    $default  reduce using rule 46 (primaryExpr)


State 97

   63 postfixExpr: primaryExpr •

    $default  reduce using rule 63 (postfixExpr)


State 98

   42 parenExpr: vparen •

    $default  reduce using rule 42 (parenExpr)


State 99

   43 parenExpr: vtuple •

    $default  reduce using rule 43 (parenExpr)


State 100

   44 parenExpr: vstruct •

    $default  reduce using rule 44 (parenExpr)


State 101

   52 primaryExpr: ifThenElse •

    $default  reduce using rule 52 (primaryExpr)


State 102

   45 parenExpr: chain •

    $default  reduce using rule 45 (parenExpr)


State 103

   69 vtcall: postfixExpr • "'['" vtarg_cl "']'"
   70 vvcall: postfixExpr • "'('" "')'"
   71       | postfixExpr • "'('" expr_cl "')'"
   72 dotNmExpr: postfixExpr • "'.'" "a VID (ID with first letter lowercase)"
   73 dotIxExpr: postfixExpr • "'.'" TK_DINT_LIT
   74 colonNmExpr: postfixExpr • "':'" "a VID (ID with first letter lowercase)"
   75 castExpr: postfixExpr •

    "'.'"  shift, and go to state 155
    "':'"  shift, and go to state 156
    "'('"  shift, and go to state 157
    "'['"  shift, and go to state 158

    $default  reduce using rule 75 (castExpr)


State 104

   64 postfixExpr: vtcall •

    $default  reduce using rule 64 (postfixExpr)


State 105

   65 postfixExpr: vvcall •

    $default  reduce using rule 65 (postfixExpr)


State 106

   66 postfixExpr: dotNmExpr •

    $default  reduce using rule 66 (postfixExpr)


State 107

   67 postfixExpr: dotIxExpr •

    $default  reduce using rule 67 (postfixExpr)


State 108

   68 postfixExpr: colonNmExpr •

    $default  reduce using rule 68 (postfixExpr)


State 109

   22 defStmt: "'def'" vid vpattern "'->'" castExpr •

    $default  reduce using rule 22 (defStmt)


State 110

   76 castExpr: typespec • parenExpr

    "'('"  shift, and go to state 90
    "'{'"  shift, and go to state 91

    unit       go to state 95
    parenExpr  go to state 159
    vparen     go to state 98
    vtuple     go to state 99
    vstruct    go to state 100
    chain      go to state 102


State 111

   23 defStmt: "'def'" vid tpattern vpattern "'->'" • castExpr

    "a VID (ID with first letter lowercase)"  shift, and go to state 14
    "a TID (ID with first letter uppercase)"  shift, and go to state 37
    "'if'"                                    shift, and go to state 86
    "'Tuple'"                                 shift, and go to state 56
    "'Array'"                                 shift, and go to state 57
    TK_DINT_LIT                               shift, and go to state 87
    TK_XINT_LIT                               shift, and go to state 88
    TK_FLOAT_LIT                              shift, and go to state 89
    TK_DQSTRING_LIT                           shift, and go to state 65
    TK_SQSTRING_LIT                           shift, and go to state 66
    "'('"                                     shift, and go to state 90
    "'{'"                                     shift, and go to state 91

    tid              go to state 58
    vid              go to state 92
    floatl           go to state 93
    stringl          go to state 94
    unit             go to state 95
    parenExpr        go to state 96
    primaryExpr      go to state 97
    vparen           go to state 98
    vtuple           go to state 99
    vstruct          go to state 100
    ifThenElse       go to state 101
    chain            go to state 102
    postfixExpr      go to state 103
    vtcall           go to state 104
    vvcall           go to state 105
    dotNmExpr        go to state 106
    dotIxExpr        go to state 107
    colonNmExpr      go to state 108
    castExpr         go to state 160
    typespec         go to state 110
    primaryTypespec  go to state 60
    postfixTypespec  go to state 61


State 112

   24 typedefStmt: "'type'" tid tpattern "'='" typespec •

    $default  reduce using rule 24 (typedefStmt)


State 113

   55 vstruct: "'{'" • vstructField_cl "'}'"

    "a VID (ID with first letter lowercase)"  shift, and go to state 14

    vid              go to state 161
    vstructField     go to state 153
    vstructField_cl  go to state 154


State 114

   25 typedefStmt_enum: "'enum'" tid tpattern "'='" vstruct •

    $default  reduce using rule 25 (typedefStmt_enum)


State 115

  111 typespec_cl: typespec •

    $default  reduce using rule 111 (typespec_cl)


State 116

  112 typespec_cl: typespec_cl • "','" typespec
  114 primaryTypespec: "'Tuple'" "'['" typespec_cl • "']'"

    "','"  shift, and go to state 162
    "']'"  shift, and go to state 163


State 117

  115 primaryTypespec: "'Array'" "'['" typespec • "','" expr "']'"

    "','"  shift, and go to state 164


State 118

   83 unaryOp: "'not'" •

    $default  reduce using rule 83 (unaryOp)


State 119

   81 unaryOp: "'*'" •

    $default  reduce using rule 81 (unaryOp)


State 120

   79 unaryOp: "'+'" •

    $default  reduce using rule 79 (unaryOp)


State 121

   80 unaryOp: "'-'" •

    $default  reduce using rule 80 (unaryOp)


State 122

   82 unaryOp: "'^'" •

    $default  reduce using rule 82 (unaryOp)


State 123

  120 ttarg: expr •

    $default  reduce using rule 120 (ttarg)


State 124

   77 unaryExpr: castExpr •

    $default  reduce using rule 77 (unaryExpr)


State 125

   88 mulBinaryExpr: unaryExpr •

    $default  reduce using rule 88 (mulBinaryExpr)


State 126

   78 unaryExpr: unaryOp • unaryExpr

    "a VID (ID with first letter lowercase)"  shift, and go to state 14
    "a TID (ID with first letter uppercase)"  shift, and go to state 37
    "'if'"                                    shift, and go to state 86
    "'not'"                                   shift, and go to state 118
    "'Tuple'"                                 shift, and go to state 56
    "'Array'"                                 shift, and go to state 57
    TK_DINT_LIT                               shift, and go to state 87
    TK_XINT_LIT                               shift, and go to state 88
    TK_FLOAT_LIT                              shift, and go to state 89
    TK_DQSTRING_LIT                           shift, and go to state 65
    TK_SQSTRING_LIT                           shift, and go to state 66
    "'('"                                     shift, and go to state 90
    "'{'"                                     shift, and go to state 91
    "'*'"                                     shift, and go to state 119
    "'+'"                                     shift, and go to state 120
    "'-'"                                     shift, and go to state 121
    "'^'"                                     shift, and go to state 122

    tid              go to state 58
    vid              go to state 92
    floatl           go to state 93
    stringl          go to state 94
    unit             go to state 95
    parenExpr        go to state 96
    primaryExpr      go to state 97
    vparen           go to state 98
    vtuple           go to state 99
    vstruct          go to state 100
    ifThenElse       go to state 101
    chain            go to state 102
    postfixExpr      go to state 103
    vtcall           go to state 104
    vvcall           go to state 105
    dotNmExpr        go to state 106
    dotIxExpr        go to state 107
    colonNmExpr      go to state 108
    castExpr         go to state 124
    unaryExpr        go to state 165
    unaryOp          go to state 126
    typespec         go to state 110
    primaryTypespec  go to state 60
    postfixTypespec  go to state 61


State 127

   36 expr: binaryExpr •

    $default  reduce using rule 36 (expr)


State 128

   89 mulBinaryExpr: mulBinaryExpr • mulBinaryOp unaryExpr
   92 addBinaryExpr: mulBinaryExpr •

    "'*'"  shift, and go to state 166
    "'/'"  shift, and go to state 167
    "'%'"  shift, and go to state 168

    $default  reduce using rule 92 (addBinaryExpr)

    mulBinaryOp  go to state 169


State 129

   93 addBinaryExpr: addBinaryExpr • addBinaryOp mulBinaryExpr
   98 cmpBinaryExpr: addBinaryExpr •

    "'+'"  shift, and go to state 170
    "'-'"  shift, and go to state 171

    $default  reduce using rule 98 (cmpBinaryExpr)

    addBinaryOp  go to state 172


State 130

   99 cmpBinaryExpr: cmpBinaryExpr • cmpBinaryOp addBinaryExpr
  102 eqBinaryExpr: cmpBinaryExpr •

    "'<'"   shift, and go to state 173
    "'<='"  shift, and go to state 174
    "'>'"   shift, and go to state 175
    "'>='"  shift, and go to state 176

    $default  reduce using rule 102 (eqBinaryExpr)

    cmpBinaryOp  go to state 177


State 131

  103 eqBinaryExpr: eqBinaryExpr • eqBinaryOp cmpBinaryExpr
  104 andBinaryExpr: eqBinaryExpr •

    "'=='"  shift, and go to state 178
    "'!='"  shift, and go to state 179

    $default  reduce using rule 104 (andBinaryExpr)

    eqBinaryOp  go to state 180


State 132

  105 andBinaryExpr: andBinaryExpr • "'and'" eqBinaryExpr
  106 xorBinaryExpr: andBinaryExpr •

    "'and'"  shift, and go to state 181

    $default  reduce using rule 106 (xorBinaryExpr)


State 133

  107 xorBinaryExpr: xorBinaryExpr • "'xor'" andBinaryExpr
  108 orBinaryExpr: xorBinaryExpr •

    "'xor'"  shift, and go to state 182

    $default  reduce using rule 108 (orBinaryExpr)


State 134

   84 binaryExpr: orBinaryExpr •
  109 orBinaryExpr: orBinaryExpr • "'or'" xorBinaryExpr

    "'or'"  shift, and go to state 183

    $default  reduce using rule 84 (binaryExpr)


State 135

   76 castExpr: typespec • parenExpr
  119 ttarg: typespec •

    "'('"  shift, and go to state 90
    "'{'"  shift, and go to state 91

    $default  reduce using rule 119 (ttarg)

    unit       go to state 95
    parenExpr  go to state 159
    vparen     go to state 98
    vtuple     go to state 99
    vstruct    go to state 100
    chain      go to state 102


State 136

  121 ttarg_cl: ttarg •

    $default  reduce using rule 121 (ttarg_cl)


State 137

  117 postfixTypespec: postfixTypespec "'['" ttarg_cl • "']'"
  122 ttarg_cl: ttarg_cl • "','" ttarg

    "','"  shift, and go to state 184
    "']'"  shift, and go to state 185


State 138

   26 attachStmt: "'attach'" vid "'from'" stringl "'as'" stringl •

    $default  reduce using rule 26 (attachStmt)


State 139

  146 tpatternField_cl: tpatternField_cl "','" tpatternField •

    $default  reduce using rule 146 (tpatternField_cl)


State 140

   56 ifThenElse: "'if'" parenExpr • "'then'" parenExpr
   57           | "'if'" parenExpr • "'then'" parenExpr "'else'" parenExpr

    "'then'"  shift, and go to state 186


State 141

   39 expr_cl2: expr • "','" expr
   53 vparen: "'('" expr • "')'"

    "','"  shift, and go to state 187
    "')'"  shift, and go to state 188


State 142

   40 expr_cl2: expr_cl2 • "','" expr
   54 vtuple: "'('" expr_cl2 • "')'"

    "','"  shift, and go to state 189
    "')'"  shift, and go to state 190


State 143

   14 discardStmt: "'do'" • expr

    "a VID (ID with first letter lowercase)"  shift, and go to state 14
    "a TID (ID with first letter uppercase)"  shift, and go to state 37
    "'if'"                                    shift, and go to state 86
    "'not'"                                   shift, and go to state 118
    "'Tuple'"                                 shift, and go to state 56
    "'Array'"                                 shift, and go to state 57
    TK_DINT_LIT                               shift, and go to state 87
    TK_XINT_LIT                               shift, and go to state 88
    TK_FLOAT_LIT                              shift, and go to state 89
    TK_DQSTRING_LIT                           shift, and go to state 65
    TK_SQSTRING_LIT                           shift, and go to state 66
    "'('"                                     shift, and go to state 90
    "'{'"                                     shift, and go to state 91
    "'*'"                                     shift, and go to state 119
    "'+'"                                     shift, and go to state 120
    "'-'"                                     shift, and go to state 121
    "'^'"                                     shift, and go to state 122

    tid              go to state 58
    vid              go to state 92
    floatl           go to state 93
    stringl          go to state 94
    unit             go to state 95
    expr             go to state 191
    parenExpr        go to state 96
    primaryExpr      go to state 97
    vparen           go to state 98
    vtuple           go to state 99
    vstruct          go to state 100
    ifThenElse       go to state 101
    chain            go to state 102
    postfixExpr      go to state 103
    vtcall           go to state 104
    vvcall           go to state 105
    dotNmExpr        go to state 106
    dotIxExpr        go to state 107
    colonNmExpr      go to state 108
    castExpr         go to state 124
    unaryExpr        go to state 125
    unaryOp          go to state 126
    binaryExpr       go to state 127
    mulBinaryExpr    go to state 128
    addBinaryExpr    go to state 129
    cmpBinaryExpr    go to state 130
    eqBinaryExpr     go to state 131
    andBinaryExpr    go to state 132
    xorBinaryExpr    go to state 133
    orBinaryExpr     go to state 134
    typespec         go to state 110
    primaryTypespec  go to state 60
    postfixTypespec  go to state 61


State 144

   12 letStmt: "'let'" • lpattern "'='" expr

    "a VID (ID with first letter lowercase)"  shift, and go to state 14
    "'('"                                     shift, and go to state 192

    vid            go to state 193
    unit           go to state 194
    vpatternField  go to state 195
    lpatternField  go to state 196
    lpattern       go to state 197


State 145

   13 setStmt: "'set'" • expr "'='" expr

    "a VID (ID with first letter lowercase)"  shift, and go to state 14
    "a TID (ID with first letter uppercase)"  shift, and go to state 37
    "'if'"                                    shift, and go to state 86
    "'not'"                                   shift, and go to state 118
    "'Tuple'"                                 shift, and go to state 56
    "'Array'"                                 shift, and go to state 57
    TK_DINT_LIT                               shift, and go to state 87
    TK_XINT_LIT                               shift, and go to state 88
    TK_FLOAT_LIT                              shift, and go to state 89
    TK_DQSTRING_LIT                           shift, and go to state 65
    TK_SQSTRING_LIT                           shift, and go to state 66
    "'('"                                     shift, and go to state 90
    "'{'"                                     shift, and go to state 91
    "'*'"                                     shift, and go to state 119
    "'+'"                                     shift, and go to state 120
    "'-'"                                     shift, and go to state 121
    "'^'"                                     shift, and go to state 122

    tid              go to state 58
    vid              go to state 92
    floatl           go to state 93
    stringl          go to state 94
    unit             go to state 95
    expr             go to state 198
    parenExpr        go to state 96
    primaryExpr      go to state 97
    vparen           go to state 98
    vtuple           go to state 99
    vstruct          go to state 100
    ifThenElse       go to state 101
    chain            go to state 102
    postfixExpr      go to state 103
    vtcall           go to state 104
    vvcall           go to state 105
    dotNmExpr        go to state 106
    dotIxExpr        go to state 107
    colonNmExpr      go to state 108
    castExpr         go to state 124
    unaryExpr        go to state 125
    unaryOp          go to state 126
    binaryExpr       go to state 127
    mulBinaryExpr    go to state 128
    addBinaryExpr    go to state 129
    cmpBinaryExpr    go to state 130
    eqBinaryExpr     go to state 131
    andBinaryExpr    go to state 132
    xorBinaryExpr    go to state 133
    orBinaryExpr     go to state 134
    typespec         go to state 110
    primaryTypespec  go to state 60
    postfixTypespec  go to state 61


State 146

   61 chainPrefix: chainPrefixStmt • "';'"

    "';'"  shift, and go to state 199


State 147

    9 chainPrefixStmt: letStmt •

    $default  reduce using rule 9 (chainPrefixStmt)


State 148

   10 chainPrefixStmt: setStmt •

    $default  reduce using rule 10 (chainPrefixStmt)


State 149

   11 chainPrefixStmt: discardStmt •

    $default  reduce using rule 11 (chainPrefixStmt)


State 150

   47 primaryExpr: vid •
  127 vstructField: vid • "'='" expr

    "'='"  shift, and go to state 200

    $default  reduce using rule 47 (primaryExpr)


State 151

   58 chain: "'{'" expr • "'}'"

    "'}'"  shift, and go to state 201


State 152

   59 chain: "'{'" chainPrefix • "'}'"
   60      | "'{'" chainPrefix • expr "'}'"
   62 chainPrefix: chainPrefix • chainPrefixStmt "';'"

    "a VID (ID with first letter lowercase)"  shift, and go to state 14
    "a TID (ID with first letter uppercase)"  shift, and go to state 37
    "'do'"                                    shift, and go to state 143
    "'if'"                                    shift, and go to state 86
    "'let'"                                   shift, and go to state 144
    "'set'"                                   shift, and go to state 145
    "'not'"                                   shift, and go to state 118
    "'Tuple'"                                 shift, and go to state 56
    "'Array'"                                 shift, and go to state 57
    TK_DINT_LIT                               shift, and go to state 87
    TK_XINT_LIT                               shift, and go to state 88
    TK_FLOAT_LIT                              shift, and go to state 89
    TK_DQSTRING_LIT                           shift, and go to state 65
    TK_SQSTRING_LIT                           shift, and go to state 66
    "'('"                                     shift, and go to state 90
    "'{'"                                     shift, and go to state 91
    "'}'"                                     shift, and go to state 202
    "'*'"                                     shift, and go to state 119
    "'+'"                                     shift, and go to state 120
    "'-'"                                     shift, and go to state 121
    "'^'"                                     shift, and go to state 122

    chainPrefixStmt  go to state 203
    letStmt          go to state 147
    setStmt          go to state 148
    discardStmt      go to state 149
    tid              go to state 58
    vid              go to state 92
    floatl           go to state 93
    stringl          go to state 94
    unit             go to state 95
    expr             go to state 204
    parenExpr        go to state 96
    primaryExpr      go to state 97
    vparen           go to state 98
    vtuple           go to state 99
    vstruct          go to state 100
    ifThenElse       go to state 101
    chain            go to state 102
    postfixExpr      go to state 103
    vtcall           go to state 104
    vvcall           go to state 105
    dotNmExpr        go to state 106
    dotIxExpr        go to state 107
    colonNmExpr      go to state 108
    castExpr         go to state 124
    unaryExpr        go to state 125
    unaryOp          go to state 126
    binaryExpr       go to state 127
    mulBinaryExpr    go to state 128
    addBinaryExpr    go to state 129
    cmpBinaryExpr    go to state 130
    eqBinaryExpr     go to state 131
    andBinaryExpr    go to state 132
    xorBinaryExpr    go to state 133
    orBinaryExpr     go to state 134
    typespec         go to state 110
    primaryTypespec  go to state 60
    postfixTypespec  go to state 61


State 153

  128 vstructField_cl: vstructField •

    $default  reduce using rule 128 (vstructField_cl)


State 154

   55 vstruct: "'{'" vstructField_cl • "'}'"
  129 vstructField_cl: vstructField_cl • "','" vstructField

    "','"  shift, and go to state 205
    "'}'"  shift, and go to state 206


State 155

   72 dotNmExpr: postfixExpr "'.'" • "a VID (ID with first letter lowercase)"
   73 dotIxExpr: postfixExpr "'.'" • TK_DINT_LIT

    "a VID (ID with first letter lowercase)"  shift, and go to state 207
    TK_DINT_LIT                               shift, and go to state 208


State 156

   74 colonNmExpr: postfixExpr "':'" • "a VID (ID with first letter lowercase)"

    "a VID (ID with first letter lowercase)"  shift, and go to state 209


State 157

   70 vvcall: postfixExpr "'('" • "')'"
   71       | postfixExpr "'('" • expr_cl "')'"

    "a VID (ID with first letter lowercase)"  shift, and go to state 14
    "a TID (ID with first letter uppercase)"  shift, and go to state 37
    "'if'"                                    shift, and go to state 86
    "'not'"                                   shift, and go to state 118
    "'Tuple'"                                 shift, and go to state 56
    "'Array'"                                 shift, and go to state 57
    TK_DINT_LIT                               shift, and go to state 87
    TK_XINT_LIT                               shift, and go to state 88
    TK_FLOAT_LIT                              shift, and go to state 89
    TK_DQSTRING_LIT                           shift, and go to state 65
    TK_SQSTRING_LIT                           shift, and go to state 66
    "'('"                                     shift, and go to state 90
    "')'"                                     shift, and go to state 210
    "'{'"                                     shift, and go to state 91
    "'*'"                                     shift, and go to state 119
    "'+'"                                     shift, and go to state 120
    "'-'"                                     shift, and go to state 121
    "'^'"                                     shift, and go to state 122

    tid              go to state 58
    vid              go to state 92
    floatl           go to state 93
    stringl          go to state 94
    unit             go to state 95
    expr             go to state 211
    expr_cl          go to state 212
    parenExpr        go to state 96
    primaryExpr      go to state 97
    vparen           go to state 98
    vtuple           go to state 99
    vstruct          go to state 100
    ifThenElse       go to state 101
    chain            go to state 102
    postfixExpr      go to state 103
    vtcall           go to state 104
    vvcall           go to state 105
    dotNmExpr        go to state 106
    dotIxExpr        go to state 107
    colonNmExpr      go to state 108
    castExpr         go to state 124
    unaryExpr        go to state 125
    unaryOp          go to state 126
    binaryExpr       go to state 127
    mulBinaryExpr    go to state 128
    addBinaryExpr    go to state 129
    cmpBinaryExpr    go to state 130
    eqBinaryExpr     go to state 131
    andBinaryExpr    go to state 132
    xorBinaryExpr    go to state 133
    orBinaryExpr     go to state 134
    typespec         go to state 110
    primaryTypespec  go to state 60
    postfixTypespec  go to state 61


State 158

   69 vtcall: postfixExpr "'['" • vtarg_cl "']'"

    "a VID (ID with first letter lowercase)"  shift, and go to state 14
    "a TID (ID with first letter uppercase)"  shift, and go to state 37
    "'if'"                                    shift, and go to state 86
    "'not'"                                   shift, and go to state 118
    "'Tuple'"                                 shift, and go to state 56
    "'Array'"                                 shift, and go to state 57
    TK_DINT_LIT                               shift, and go to state 87
    TK_XINT_LIT                               shift, and go to state 88
    TK_FLOAT_LIT                              shift, and go to state 89
    TK_DQSTRING_LIT                           shift, and go to state 65
    TK_SQSTRING_LIT                           shift, and go to state 66
    "'('"                                     shift, and go to state 90
    "'{'"                                     shift, and go to state 91
    "'*'"                                     shift, and go to state 119
    "'+'"                                     shift, and go to state 120
    "'-'"                                     shift, and go to state 121
    "'^'"                                     shift, and go to state 122

    tid              go to state 58
    vid              go to state 92
    floatl           go to state 93
    stringl          go to state 94
    unit             go to state 95
    expr             go to state 213
    parenExpr        go to state 96
    primaryExpr      go to state 97
    vparen           go to state 98
    vtuple           go to state 99
    vstruct          go to state 100
    ifThenElse       go to state 101
    chain            go to state 102
    postfixExpr      go to state 103
    vtcall           go to state 104
    vvcall           go to state 105
    dotNmExpr        go to state 106
    dotIxExpr        go to state 107
    colonNmExpr      go to state 108
    castExpr         go to state 124
    unaryExpr        go to state 125
    unaryOp          go to state 126
    binaryExpr       go to state 127
    mulBinaryExpr    go to state 128
    addBinaryExpr    go to state 129
    cmpBinaryExpr    go to state 130
    eqBinaryExpr     go to state 131
    andBinaryExpr    go to state 132
    xorBinaryExpr    go to state 133
    orBinaryExpr     go to state 134
    typespec         go to state 214
    primaryTypespec  go to state 60
    postfixTypespec  go to state 61
    vtarg            go to state 215
    vtarg_cl         go to state 216


State 159

   76 castExpr: typespec parenExpr •

    $default  reduce using rule 76 (castExpr)


State 160

   23 defStmt: "'def'" vid tpattern vpattern "'->'" castExpr •

    $default  reduce using rule 23 (defStmt)


State 161

  127 vstructField: vid • "'='" expr

    "'='"  shift, and go to state 200


State 162

  112 typespec_cl: typespec_cl "','" • typespec

    "a TID (ID with first letter uppercase)"  shift, and go to state 37
    "'Tuple'"                                 shift, and go to state 56
    "'Array'"                                 shift, and go to state 57

    tid              go to state 58
    typespec         go to state 217
    primaryTypespec  go to state 60
    postfixTypespec  go to state 61


State 163

  114 primaryTypespec: "'Tuple'" "'['" typespec_cl "']'" •

    $default  reduce using rule 114 (primaryTypespec)


State 164

  115 primaryTypespec: "'Array'" "'['" typespec "','" • expr "']'"

    "a VID (ID with first letter lowercase)"  shift, and go to state 14
    "a TID (ID with first letter uppercase)"  shift, and go to state 37
    "'if'"                                    shift, and go to state 86
    "'not'"                                   shift, and go to state 118
    "'Tuple'"                                 shift, and go to state 56
    "'Array'"                                 shift, and go to state 57
    TK_DINT_LIT                               shift, and go to state 87
    TK_XINT_LIT                               shift, and go to state 88
    TK_FLOAT_LIT                              shift, and go to state 89
    TK_DQSTRING_LIT                           shift, and go to state 65
    TK_SQSTRING_LIT                           shift, and go to state 66
    "'('"                                     shift, and go to state 90
    "'{'"                                     shift, and go to state 91
    "'*'"                                     shift, and go to state 119
    "'+'"                                     shift, and go to state 120
    "'-'"                                     shift, and go to state 121
    "'^'"                                     shift, and go to state 122

    tid              go to state 58
    vid              go to state 92
    floatl           go to state 93
    stringl          go to state 94
    unit             go to state 95
    expr             go to state 218
    parenExpr        go to state 96
    primaryExpr      go to state 97
    vparen           go to state 98
    vtuple           go to state 99
    vstruct          go to state 100
    ifThenElse       go to state 101
    chain            go to state 102
    postfixExpr      go to state 103
    vtcall           go to state 104
    vvcall           go to state 105
    dotNmExpr        go to state 106
    dotIxExpr        go to state 107
    colonNmExpr      go to state 108
    castExpr         go to state 124
    unaryExpr        go to state 125
    unaryOp          go to state 126
    binaryExpr       go to state 127
    mulBinaryExpr    go to state 128
    addBinaryExpr    go to state 129
    cmpBinaryExpr    go to state 130
    eqBinaryExpr     go to state 131
    andBinaryExpr    go to state 132
    xorBinaryExpr    go to state 133
    orBinaryExpr     go to state 134
    typespec         go to state 110
    primaryTypespec  go to state 60
    postfixTypespec  go to state 61


State 165

   78 unaryExpr: unaryOp unaryExpr •

    $default  reduce using rule 78 (unaryExpr)


State 166

   85 mulBinaryOp: "'*'" •

    $default  reduce using rule 85 (mulBinaryOp)


State 167

   86 mulBinaryOp: "'/'" •

    $default  reduce using rule 86 (mulBinaryOp)


State 168

   87 mulBinaryOp: "'%'" •

    $default  reduce using rule 87 (mulBinaryOp)


State 169

   89 mulBinaryExpr: mulBinaryExpr mulBinaryOp • unaryExpr

    "a VID (ID with first letter lowercase)"  shift, and go to state 14
    "a TID (ID with first letter uppercase)"  shift, and go to state 37
    "'if'"                                    shift, and go to state 86
    "'not'"                                   shift, and go to state 118
    "'Tuple'"                                 shift, and go to state 56
    "'Array'"                                 shift, and go to state 57
    TK_DINT_LIT                               shift, and go to state 87
    TK_XINT_LIT                               shift, and go to state 88
    TK_FLOAT_LIT                              shift, and go to state 89
    TK_DQSTRING_LIT                           shift, and go to state 65
    TK_SQSTRING_LIT                           shift, and go to state 66
    "'('"                                     shift, and go to state 90
    "'{'"                                     shift, and go to state 91
    "'*'"                                     shift, and go to state 119
    "'+'"                                     shift, and go to state 120
    "'-'"                                     shift, and go to state 121
    "'^'"                                     shift, and go to state 122

    tid              go to state 58
    vid              go to state 92
    floatl           go to state 93
    stringl          go to state 94
    unit             go to state 95
    parenExpr        go to state 96
    primaryExpr      go to state 97
    vparen           go to state 98
    vtuple           go to state 99
    vstruct          go to state 100
    ifThenElse       go to state 101
    chain            go to state 102
    postfixExpr      go to state 103
    vtcall           go to state 104
    vvcall           go to state 105
    dotNmExpr        go to state 106
    dotIxExpr        go to state 107
    colonNmExpr      go to state 108
    castExpr         go to state 124
    unaryExpr        go to state 219
    unaryOp          go to state 126
    typespec         go to state 110
    primaryTypespec  go to state 60
    postfixTypespec  go to state 61


State 170

   90 addBinaryOp: "'+'" •

    $default  reduce using rule 90 (addBinaryOp)


State 171

   91 addBinaryOp: "'-'" •

    $default  reduce using rule 91 (addBinaryOp)


State 172

   93 addBinaryExpr: addBinaryExpr addBinaryOp • mulBinaryExpr

    "a VID (ID with first letter lowercase)"  shift, and go to state 14
    "a TID (ID with first letter uppercase)"  shift, and go to state 37
    "'if'"                                    shift, and go to state 86
    "'not'"                                   shift, and go to state 118
    "'Tuple'"                                 shift, and go to state 56
    "'Array'"                                 shift, and go to state 57
    TK_DINT_LIT                               shift, and go to state 87
    TK_XINT_LIT                               shift, and go to state 88
    TK_FLOAT_LIT                              shift, and go to state 89
    TK_DQSTRING_LIT                           shift, and go to state 65
    TK_SQSTRING_LIT                           shift, and go to state 66
    "'('"                                     shift, and go to state 90
    "'{'"                                     shift, and go to state 91
    "'*'"                                     shift, and go to state 119
    "'+'"                                     shift, and go to state 120
    "'-'"                                     shift, and go to state 121
    "'^'"                                     shift, and go to state 122

    tid              go to state 58
    vid              go to state 92
    floatl           go to state 93
    stringl          go to state 94
    unit             go to state 95
    parenExpr        go to state 96
    primaryExpr      go to state 97
    vparen           go to state 98
    vtuple           go to state 99
    vstruct          go to state 100
    ifThenElse       go to state 101
    chain            go to state 102
    postfixExpr      go to state 103
    vtcall           go to state 104
    vvcall           go to state 105
    dotNmExpr        go to state 106
    dotIxExpr        go to state 107
    colonNmExpr      go to state 108
    castExpr         go to state 124
    unaryExpr        go to state 125
    unaryOp          go to state 126
    mulBinaryExpr    go to state 220
    typespec         go to state 110
    primaryTypespec  go to state 60
    postfixTypespec  go to state 61


State 173

   94 cmpBinaryOp: "'<'" •

    $default  reduce using rule 94 (cmpBinaryOp)


State 174

   95 cmpBinaryOp: "'<='" •

    $default  reduce using rule 95 (cmpBinaryOp)


State 175

   96 cmpBinaryOp: "'>'" •

    $default  reduce using rule 96 (cmpBinaryOp)


State 176

   97 cmpBinaryOp: "'>='" •

    $default  reduce using rule 97 (cmpBinaryOp)


State 177

   99 cmpBinaryExpr: cmpBinaryExpr cmpBinaryOp • addBinaryExpr

    "a VID (ID with first letter lowercase)"  shift, and go to state 14
    "a TID (ID with first letter uppercase)"  shift, and go to state 37
    "'if'"                                    shift, and go to state 86
    "'not'"                                   shift, and go to state 118
    "'Tuple'"                                 shift, and go to state 56
    "'Array'"                                 shift, and go to state 57
    TK_DINT_LIT                               shift, and go to state 87
    TK_XINT_LIT                               shift, and go to state 88
    TK_FLOAT_LIT                              shift, and go to state 89
    TK_DQSTRING_LIT                           shift, and go to state 65
    TK_SQSTRING_LIT                           shift, and go to state 66
    "'('"                                     shift, and go to state 90
    "'{'"                                     shift, and go to state 91
    "'*'"                                     shift, and go to state 119
    "'+'"                                     shift, and go to state 120
    "'-'"                                     shift, and go to state 121
    "'^'"                                     shift, and go to state 122

    tid              go to state 58
    vid              go to state 92
    floatl           go to state 93
    stringl          go to state 94
    unit             go to state 95
    parenExpr        go to state 96
    primaryExpr      go to state 97
    vparen           go to state 98
    vtuple           go to state 99
    vstruct          go to state 100
    ifThenElse       go to state 101
    chain            go to state 102
    postfixExpr      go to state 103
    vtcall           go to state 104
    vvcall           go to state 105
    dotNmExpr        go to state 106
    dotIxExpr        go to state 107
    colonNmExpr      go to state 108
    castExpr         go to state 124
    unaryExpr        go to state 125
    unaryOp          go to state 126
    mulBinaryExpr    go to state 128
    addBinaryExpr    go to state 221
    typespec         go to state 110
    primaryTypespec  go to state 60
    postfixTypespec  go to state 61


State 178

  100 eqBinaryOp: "'=='" •

    $default  reduce using rule 100 (eqBinaryOp)


State 179

  101 eqBinaryOp: "'!='" •

    $default  reduce using rule 101 (eqBinaryOp)


State 180

  103 eqBinaryExpr: eqBinaryExpr eqBinaryOp • cmpBinaryExpr

    "a VID (ID with first letter lowercase)"  shift, and go to state 14
    "a TID (ID with first letter uppercase)"  shift, and go to state 37
    "'if'"                                    shift, and go to state 86
    "'not'"                                   shift, and go to state 118
    "'Tuple'"                                 shift, and go to state 56
    "'Array'"                                 shift, and go to state 57
    TK_DINT_LIT                               shift, and go to state 87
    TK_XINT_LIT                               shift, and go to state 88
    TK_FLOAT_LIT                              shift, and go to state 89
    TK_DQSTRING_LIT                           shift, and go to state 65
    TK_SQSTRING_LIT                           shift, and go to state 66
    "'('"                                     shift, and go to state 90
    "'{'"                                     shift, and go to state 91
    "'*'"                                     shift, and go to state 119
    "'+'"                                     shift, and go to state 120
    "'-'"                                     shift, and go to state 121
    "'^'"                                     shift, and go to state 122

    tid              go to state 58
    vid              go to state 92
    floatl           go to state 93
    stringl          go to state 94
    unit             go to state 95
    parenExpr        go to state 96
    primaryExpr      go to state 97
    vparen           go to state 98
    vtuple           go to state 99
    vstruct          go to state 100
    ifThenElse       go to state 101
    chain            go to state 102
    postfixExpr      go to state 103
    vtcall           go to state 104
    vvcall           go to state 105
    dotNmExpr        go to state 106
    dotIxExpr        go to state 107
    colonNmExpr      go to state 108
    castExpr         go to state 124
    unaryExpr        go to state 125
    unaryOp          go to state 126
    mulBinaryExpr    go to state 128
    addBinaryExpr    go to state 129
    cmpBinaryExpr    go to state 222
    typespec         go to state 110
    primaryTypespec  go to state 60
    postfixTypespec  go to state 61


State 181

  105 andBinaryExpr: andBinaryExpr "'and'" • eqBinaryExpr

    "a VID (ID with first letter lowercase)"  shift, and go to state 14
    "a TID (ID with first letter uppercase)"  shift, and go to state 37
    "'if'"                                    shift, and go to state 86
    "'not'"                                   shift, and go to state 118
    "'Tuple'"                                 shift, and go to state 56
    "'Array'"                                 shift, and go to state 57
    TK_DINT_LIT                               shift, and go to state 87
    TK_XINT_LIT                               shift, and go to state 88
    TK_FLOAT_LIT                              shift, and go to state 89
    TK_DQSTRING_LIT                           shift, and go to state 65
    TK_SQSTRING_LIT                           shift, and go to state 66
    "'('"                                     shift, and go to state 90
    "'{'"                                     shift, and go to state 91
    "'*'"                                     shift, and go to state 119
    "'+'"                                     shift, and go to state 120
    "'-'"                                     shift, and go to state 121
    "'^'"                                     shift, and go to state 122

    tid              go to state 58
    vid              go to state 92
    floatl           go to state 93
    stringl          go to state 94
    unit             go to state 95
    parenExpr        go to state 96
    primaryExpr      go to state 97
    vparen           go to state 98
    vtuple           go to state 99
    vstruct          go to state 100
    ifThenElse       go to state 101
    chain            go to state 102
    postfixExpr      go to state 103
    vtcall           go to state 104
    vvcall           go to state 105
    dotNmExpr        go to state 106
    dotIxExpr        go to state 107
    colonNmExpr      go to state 108
    castExpr         go to state 124
    unaryExpr        go to state 125
    unaryOp          go to state 126
    mulBinaryExpr    go to state 128
    addBinaryExpr    go to state 129
    cmpBinaryExpr    go to state 130
    eqBinaryExpr     go to state 223
    typespec         go to state 110
    primaryTypespec  go to state 60
    postfixTypespec  go to state 61


State 182

  107 xorBinaryExpr: xorBinaryExpr "'xor'" • andBinaryExpr

    "a VID (ID with first letter lowercase)"  shift, and go to state 14
    "a TID (ID with first letter uppercase)"  shift, and go to state 37
    "'if'"                                    shift, and go to state 86
    "'not'"                                   shift, and go to state 118
    "'Tuple'"                                 shift, and go to state 56
    "'Array'"                                 shift, and go to state 57
    TK_DINT_LIT                               shift, and go to state 87
    TK_XINT_LIT                               shift, and go to state 88
    TK_FLOAT_LIT                              shift, and go to state 89
    TK_DQSTRING_LIT                           shift, and go to state 65
    TK_SQSTRING_LIT                           shift, and go to state 66
    "'('"                                     shift, and go to state 90
    "'{'"                                     shift, and go to state 91
    "'*'"                                     shift, and go to state 119
    "'+'"                                     shift, and go to state 120
    "'-'"                                     shift, and go to state 121
    "'^'"                                     shift, and go to state 122

    tid              go to state 58
    vid              go to state 92
    floatl           go to state 93
    stringl          go to state 94
    unit             go to state 95
    parenExpr        go to state 96
    primaryExpr      go to state 97
    vparen           go to state 98
    vtuple           go to state 99
    vstruct          go to state 100
    ifThenElse       go to state 101
    chain            go to state 102
    postfixExpr      go to state 103
    vtcall           go to state 104
    vvcall           go to state 105
    dotNmExpr        go to state 106
    dotIxExpr        go to state 107
    colonNmExpr      go to state 108
    castExpr         go to state 124
    unaryExpr        go to state 125
    unaryOp          go to state 126
    mulBinaryExpr    go to state 128
    addBinaryExpr    go to state 129
    cmpBinaryExpr    go to state 130
    eqBinaryExpr     go to state 131
    andBinaryExpr    go to state 224
    typespec         go to state 110
    primaryTypespec  go to state 60
    postfixTypespec  go to state 61


State 183

  109 orBinaryExpr: orBinaryExpr "'or'" • xorBinaryExpr

    "a VID (ID with first letter lowercase)"  shift, and go to state 14
    "a TID (ID with first letter uppercase)"  shift, and go to state 37
    "'if'"                                    shift, and go to state 86
    "'not'"                                   shift, and go to state 118
    "'Tuple'"                                 shift, and go to state 56
    "'Array'"                                 shift, and go to state 57
    TK_DINT_LIT                               shift, and go to state 87
    TK_XINT_LIT                               shift, and go to state 88
    TK_FLOAT_LIT                              shift, and go to state 89
    TK_DQSTRING_LIT                           shift, and go to state 65
    TK_SQSTRING_LIT                           shift, and go to state 66
    "'('"                                     shift, and go to state 90
    "'{'"                                     shift, and go to state 91
    "'*'"                                     shift, and go to state 119
    "'+'"                                     shift, and go to state 120
    "'-'"                                     shift, and go to state 121
    "'^'"                                     shift, and go to state 122

    tid              go to state 58
    vid              go to state 92
    floatl           go to state 93
    stringl          go to state 94
    unit             go to state 95
    parenExpr        go to state 96
    primaryExpr      go to state 97
    vparen           go to state 98
    vtuple           go to state 99
    vstruct          go to state 100
    ifThenElse       go to state 101
    chain            go to state 102
    postfixExpr      go to state 103
    vtcall           go to state 104
    vvcall           go to state 105
    dotNmExpr        go to state 106
    dotIxExpr        go to state 107
    colonNmExpr      go to state 108
    castExpr         go to state 124
    unaryExpr        go to state 125
    unaryOp          go to state 126
    mulBinaryExpr    go to state 128
    addBinaryExpr    go to state 129
    cmpBinaryExpr    go to state 130
    eqBinaryExpr     go to state 131
    andBinaryExpr    go to state 132
    xorBinaryExpr    go to state 225
    typespec         go to state 110
    primaryTypespec  go to state 60
    postfixTypespec  go to state 61


State 184

  122 ttarg_cl: ttarg_cl "','" • ttarg

    "a VID (ID with first letter lowercase)"  shift, and go to state 14
    "a TID (ID with first letter uppercase)"  shift, and go to state 37
    "'if'"                                    shift, and go to state 86
    "'not'"                                   shift, and go to state 118
    "'Tuple'"                                 shift, and go to state 56
    "'Array'"                                 shift, and go to state 57
    TK_DINT_LIT                               shift, and go to state 87
    TK_XINT_LIT                               shift, and go to state 88
    TK_FLOAT_LIT                              shift, and go to state 89
    TK_DQSTRING_LIT                           shift, and go to state 65
    TK_SQSTRING_LIT                           shift, and go to state 66
    "'('"                                     shift, and go to state 90
    "'{'"                                     shift, and go to state 91
    "'*'"                                     shift, and go to state 119
    "'+'"                                     shift, and go to state 120
    "'-'"                                     shift, and go to state 121
    "'^'"                                     shift, and go to state 122

    tid              go to state 58
    vid              go to state 92
    floatl           go to state 93
    stringl          go to state 94
    unit             go to state 95
    expr             go to state 123
    parenExpr        go to state 96
    primaryExpr      go to state 97
    vparen           go to state 98
    vtuple           go to state 99
    vstruct          go to state 100
    ifThenElse       go to state 101
    chain            go to state 102
    postfixExpr      go to state 103
    vtcall           go to state 104
    vvcall           go to state 105
    dotNmExpr        go to state 106
    dotIxExpr        go to state 107
    colonNmExpr      go to state 108
    castExpr         go to state 124
    unaryExpr        go to state 125
    unaryOp          go to state 126
    binaryExpr       go to state 127
    mulBinaryExpr    go to state 128
    addBinaryExpr    go to state 129
    cmpBinaryExpr    go to state 130
    eqBinaryExpr     go to state 131
    andBinaryExpr    go to state 132
    xorBinaryExpr    go to state 133
    orBinaryExpr     go to state 134
    typespec         go to state 135
    primaryTypespec  go to state 60
    postfixTypespec  go to state 61
    ttarg            go to state 226


State 185

  117 postfixTypespec: postfixTypespec "'['" ttarg_cl "']'" •

    $default  reduce using rule 117 (postfixTypespec)


State 186

   56 ifThenElse: "'if'" parenExpr "'then'" • parenExpr
   57           | "'if'" parenExpr "'then'" • parenExpr "'else'" parenExpr

    "'('"  shift, and go to state 90
    "'{'"  shift, and go to state 91

    unit       go to state 95
    parenExpr  go to state 227
    vparen     go to state 98
    vtuple     go to state 99
    vstruct    go to state 100
    chain      go to state 102


State 187

   39 expr_cl2: expr "','" • expr

    "a VID (ID with first letter lowercase)"  shift, and go to state 14
    "a TID (ID with first letter uppercase)"  shift, and go to state 37
    "'if'"                                    shift, and go to state 86
    "'not'"                                   shift, and go to state 118
    "'Tuple'"                                 shift, and go to state 56
    "'Array'"                                 shift, and go to state 57
    TK_DINT_LIT                               shift, and go to state 87
    TK_XINT_LIT                               shift, and go to state 88
    TK_FLOAT_LIT                              shift, and go to state 89
    TK_DQSTRING_LIT                           shift, and go to state 65
    TK_SQSTRING_LIT                           shift, and go to state 66
    "'('"                                     shift, and go to state 90
    "'{'"                                     shift, and go to state 91
    "'*'"                                     shift, and go to state 119
    "'+'"                                     shift, and go to state 120
    "'-'"                                     shift, and go to state 121
    "'^'"                                     shift, and go to state 122

    tid              go to state 58
    vid              go to state 92
    floatl           go to state 93
    stringl          go to state 94
    unit             go to state 95
    expr             go to state 228
    parenExpr        go to state 96
    primaryExpr      go to state 97
    vparen           go to state 98
    vtuple           go to state 99
    vstruct          go to state 100
    ifThenElse       go to state 101
    chain            go to state 102
    postfixExpr      go to state 103
    vtcall           go to state 104
    vvcall           go to state 105
    dotNmExpr        go to state 106
    dotIxExpr        go to state 107
    colonNmExpr      go to state 108
    castExpr         go to state 124
    unaryExpr        go to state 125
    unaryOp          go to state 126
    binaryExpr       go to state 127
    mulBinaryExpr    go to state 128
    addBinaryExpr    go to state 129
    cmpBinaryExpr    go to state 130
    eqBinaryExpr     go to state 131
    andBinaryExpr    go to state 132
    xorBinaryExpr    go to state 133
    orBinaryExpr     go to state 134
    typespec         go to state 110
    primaryTypespec  go to state 60
    postfixTypespec  go to state 61


State 188

   53 vparen: "'('" expr "')'" •

    $default  reduce using rule 53 (vparen)


State 189

   40 expr_cl2: expr_cl2 "','" • expr

    "a VID (ID with first letter lowercase)"  shift, and go to state 14
    "a TID (ID with first letter uppercase)"  shift, and go to state 37
    "'if'"                                    shift, and go to state 86
    "'not'"                                   shift, and go to state 118
    "'Tuple'"                                 shift, and go to state 56
    "'Array'"                                 shift, and go to state 57
    TK_DINT_LIT                               shift, and go to state 87
    TK_XINT_LIT                               shift, and go to state 88
    TK_FLOAT_LIT                              shift, and go to state 89
    TK_DQSTRING_LIT                           shift, and go to state 65
    TK_SQSTRING_LIT                           shift, and go to state 66
    "'('"                                     shift, and go to state 90
    "'{'"                                     shift, and go to state 91
    "'*'"                                     shift, and go to state 119
    "'+'"                                     shift, and go to state 120
    "'-'"                                     shift, and go to state 121
    "'^'"                                     shift, and go to state 122

    tid              go to state 58
    vid              go to state 92
    floatl           go to state 93
    stringl          go to state 94
    unit             go to state 95
    expr             go to state 229
    parenExpr        go to state 96
    primaryExpr      go to state 97
    vparen           go to state 98
    vtuple           go to state 99
    vstruct          go to state 100
    ifThenElse       go to state 101
    chain            go to state 102
    postfixExpr      go to state 103
    vtcall           go to state 104
    vvcall           go to state 105
    dotNmExpr        go to state 106
    dotIxExpr        go to state 107
    colonNmExpr      go to state 108
    castExpr         go to state 124
    unaryExpr        go to state 125
    unaryOp          go to state 126
    binaryExpr       go to state 127
    mulBinaryExpr    go to state 128
    addBinaryExpr    go to state 129
    cmpBinaryExpr    go to state 130
    eqBinaryExpr     go to state 131
    andBinaryExpr    go to state 132
    xorBinaryExpr    go to state 133
    orBinaryExpr     go to state 134
    typespec         go to state 110
    primaryTypespec  go to state 60
    postfixTypespec  go to state 61


State 190

   54 vtuple: "'('" expr_cl2 "')'" •

    $default  reduce using rule 54 (vtuple)


State 191

   14 discardStmt: "'do'" expr •

    $default  reduce using rule 14 (discardStmt)


State 192

   35 unit: "'('" • "')'"
  136 lpattern: "'('" • lpatternField_cl "')'"

    "a VID (ID with first letter lowercase)"  shift, and go to state 14
    "')'"                                     shift, and go to state 43

    vid               go to state 193
    vpatternField     go to state 195
    lpatternField     go to state 230
    lpatternField_cl  go to state 231


State 193

  130 vpatternField: vid • typespec
  132 lpatternField: vid •

    "a TID (ID with first letter uppercase)"  shift, and go to state 37
    "'Tuple'"                                 shift, and go to state 56
    "'Array'"                                 shift, and go to state 57

    $default  reduce using rule 132 (lpatternField)

    tid              go to state 58
    typespec         go to state 59
    primaryTypespec  go to state 60
    postfixTypespec  go to state 61


State 194

  137 lpattern: unit •

    $default  reduce using rule 137 (lpattern)


State 195

  131 lpatternField: vpatternField •

    $default  reduce using rule 131 (lpatternField)


State 196

  135 lpattern: lpatternField •

    $default  reduce using rule 135 (lpattern)


State 197

   12 letStmt: "'let'" lpattern • "'='" expr

    "'='"  shift, and go to state 232


State 198

   13 setStmt: "'set'" expr • "'='" expr

    "'='"  shift, and go to state 233


State 199

   61 chainPrefix: chainPrefixStmt "';'" •

    $default  reduce using rule 61 (chainPrefix)


State 200

  127 vstructField: vid "'='" • expr

    "a VID (ID with first letter lowercase)"  shift, and go to state 14
    "a TID (ID with first letter uppercase)"  shift, and go to state 37
    "'if'"                                    shift, and go to state 86
    "'not'"                                   shift, and go to state 118
    "'Tuple'"                                 shift, and go to state 56
    "'Array'"                                 shift, and go to state 57
    TK_DINT_LIT                               shift, and go to state 87
    TK_XINT_LIT                               shift, and go to state 88
    TK_FLOAT_LIT                              shift, and go to state 89
    TK_DQSTRING_LIT                           shift, and go to state 65
    TK_SQSTRING_LIT                           shift, and go to state 66
    "'('"                                     shift, and go to state 90
    "'{'"                                     shift, and go to state 91
    "'*'"                                     shift, and go to state 119
    "'+'"                                     shift, and go to state 120
    "'-'"                                     shift, and go to state 121
    "'^'"                                     shift, and go to state 122

    tid              go to state 58
    vid              go to state 92
    floatl           go to state 93
    stringl          go to state 94
    unit             go to state 95
    expr             go to state 234
    parenExpr        go to state 96
    primaryExpr      go to state 97
    vparen           go to state 98
    vtuple           go to state 99
    vstruct          go to state 100
    ifThenElse       go to state 101
    chain            go to state 102
    postfixExpr      go to state 103
    vtcall           go to state 104
    vvcall           go to state 105
    dotNmExpr        go to state 106
    dotIxExpr        go to state 107
    colonNmExpr      go to state 108
    castExpr         go to state 124
    unaryExpr        go to state 125
    unaryOp          go to state 126
    binaryExpr       go to state 127
    mulBinaryExpr    go to state 128
    addBinaryExpr    go to state 129
    cmpBinaryExpr    go to state 130
    eqBinaryExpr     go to state 131
    andBinaryExpr    go to state 132
    xorBinaryExpr    go to state 133
    orBinaryExpr     go to state 134
    typespec         go to state 110
    primaryTypespec  go to state 60
    postfixTypespec  go to state 61


State 201

   58 chain: "'{'" expr "'}'" •

    $default  reduce using rule 58 (chain)


State 202

   59 chain: "'{'" chainPrefix "'}'" •

    $default  reduce using rule 59 (chain)


State 203

   62 chainPrefix: chainPrefix chainPrefixStmt • "';'"

    "';'"  shift, and go to state 235


State 204

   60 chain: "'{'" chainPrefix expr • "'}'"

    "'}'"  shift, and go to state 236


State 205

  129 vstructField_cl: vstructField_cl "','" • vstructField

    "a VID (ID with first letter lowercase)"  shift, and go to state 14

    vid           go to state 161
    vstructField  go to state 237


State 206

   55 vstruct: "'{'" vstructField_cl "'}'" •

    $default  reduce using rule 55 (vstruct)


State 207

   72 dotNmExpr: postfixExpr "'.'" "a VID (ID with first letter lowercase)" •

    $default  reduce using rule 72 (dotNmExpr)


State 208

   73 dotIxExpr: postfixExpr "'.'" TK_DINT_LIT •

    $default  reduce using rule 73 (dotIxExpr)


State 209

   74 colonNmExpr: postfixExpr "':'" "a VID (ID with first letter lowercase)" •

    $default  reduce using rule 74 (colonNmExpr)


State 210

   70 vvcall: postfixExpr "'('" "')'" •

    $default  reduce using rule 70 (vvcall)


State 211

   37 expr_cl: expr •

    $default  reduce using rule 37 (expr_cl)


State 212

   38 expr_cl: expr_cl • "','" expr
   71 vvcall: postfixExpr "'('" expr_cl • "')'"

    "','"  shift, and go to state 238
    "')'"  shift, and go to state 239


State 213

  124 vtarg: expr •

    $default  reduce using rule 124 (vtarg)


State 214

   76 castExpr: typespec • parenExpr
  123 vtarg: typespec •

    "'('"  shift, and go to state 90
    "'{'"  shift, and go to state 91

    $default  reduce using rule 123 (vtarg)

    unit       go to state 95
    parenExpr  go to state 159
    vparen     go to state 98
    vtuple     go to state 99
    vstruct    go to state 100
    chain      go to state 102


State 215

  125 vtarg_cl: vtarg •

    $default  reduce using rule 125 (vtarg_cl)


State 216

   69 vtcall: postfixExpr "'['" vtarg_cl • "']'"
  126 vtarg_cl: vtarg_cl • "','" vtarg

    "','"  shift, and go to state 240
    "']'"  shift, and go to state 241


State 217

  112 typespec_cl: typespec_cl "','" typespec •

    $default  reduce using rule 112 (typespec_cl)


State 218

  115 primaryTypespec: "'Array'" "'['" typespec "','" expr • "']'"

    "']'"  shift, and go to state 242


State 219

   89 mulBinaryExpr: mulBinaryExpr mulBinaryOp unaryExpr •

    $default  reduce using rule 89 (mulBinaryExpr)


State 220

   89 mulBinaryExpr: mulBinaryExpr • mulBinaryOp unaryExpr
   93 addBinaryExpr: addBinaryExpr addBinaryOp mulBinaryExpr •

    "'*'"  shift, and go to state 166
    "'/'"  shift, and go to state 167
    "'%'"  shift, and go to state 168

    $default  reduce using rule 93 (addBinaryExpr)

    mulBinaryOp  go to state 169


State 221

   93 addBinaryExpr: addBinaryExpr • addBinaryOp mulBinaryExpr
   99 cmpBinaryExpr: cmpBinaryExpr cmpBinaryOp addBinaryExpr •

    "'+'"  shift, and go to state 170
    "'-'"  shift, and go to state 171

    $default  reduce using rule 99 (cmpBinaryExpr)

    addBinaryOp  go to state 172


State 222

   99 cmpBinaryExpr: cmpBinaryExpr • cmpBinaryOp addBinaryExpr
  103 eqBinaryExpr: eqBinaryExpr eqBinaryOp cmpBinaryExpr •

    "'<'"   shift, and go to state 173
    "'<='"  shift, and go to state 174
    "'>'"   shift, and go to state 175
    "'>='"  shift, and go to state 176

    $default  reduce using rule 103 (eqBinaryExpr)

    cmpBinaryOp  go to state 177


State 223

  103 eqBinaryExpr: eqBinaryExpr • eqBinaryOp cmpBinaryExpr
  105 andBinaryExpr: andBinaryExpr "'and'" eqBinaryExpr •

    "'=='"  shift, and go to state 178
    "'!='"  shift, and go to state 179

    $default  reduce using rule 105 (andBinaryExpr)

    eqBinaryOp  go to state 180


State 224

  105 andBinaryExpr: andBinaryExpr • "'and'" eqBinaryExpr
  107 xorBinaryExpr: xorBinaryExpr "'xor'" andBinaryExpr •

    "'and'"  shift, and go to state 181

    $default  reduce using rule 107 (xorBinaryExpr)


State 225

  107 xorBinaryExpr: xorBinaryExpr • "'xor'" andBinaryExpr
  109 orBinaryExpr: orBinaryExpr "'or'" xorBinaryExpr •

    "'xor'"  shift, and go to state 182

    $default  reduce using rule 109 (orBinaryExpr)


State 226

  122 ttarg_cl: ttarg_cl "','" ttarg •

    $default  reduce using rule 122 (ttarg_cl)


State 227

   56 ifThenElse: "'if'" parenExpr "'then'" parenExpr •
   57           | "'if'" parenExpr "'then'" parenExpr • "'else'" parenExpr

    "'else'"  shift, and go to state 243

    $default  reduce using rule 56 (ifThenElse)


State 228

   39 expr_cl2: expr "','" expr •

    $default  reduce using rule 39 (expr_cl2)


State 229

   40 expr_cl2: expr_cl2 "','" expr •

    $default  reduce using rule 40 (expr_cl2)


State 230

  143 lpatternField_cl: lpatternField •

    $default  reduce using rule 143 (lpatternField_cl)


State 231

  136 lpattern: "'('" lpatternField_cl • "')'"
  144 lpatternField_cl: lpatternField_cl • "','" lpatternField

    "','"  shift, and go to state 244
    "')'"  shift, and go to state 245


State 232

   12 letStmt: "'let'" lpattern "'='" • expr

    "a VID (ID with first letter lowercase)"  shift, and go to state 14
    "a TID (ID with first letter uppercase)"  shift, and go to state 37
    "'if'"                                    shift, and go to state 86
    "'not'"                                   shift, and go to state 118
    "'Tuple'"                                 shift, and go to state 56
    "'Array'"                                 shift, and go to state 57
    TK_DINT_LIT                               shift, and go to state 87
    TK_XINT_LIT                               shift, and go to state 88
    TK_FLOAT_LIT                              shift, and go to state 89
    TK_DQSTRING_LIT                           shift, and go to state 65
    TK_SQSTRING_LIT                           shift, and go to state 66
    "'('"                                     shift, and go to state 90
    "'{'"                                     shift, and go to state 91
    "'*'"                                     shift, and go to state 119
    "'+'"                                     shift, and go to state 120
    "'-'"                                     shift, and go to state 121
    "'^'"                                     shift, and go to state 122

    tid              go to state 58
    vid              go to state 92
    floatl           go to state 93
    stringl          go to state 94
    unit             go to state 95
    expr             go to state 246
    parenExpr        go to state 96
    primaryExpr      go to state 97
    vparen           go to state 98
    vtuple           go to state 99
    vstruct          go to state 100
    ifThenElse       go to state 101
    chain            go to state 102
    postfixExpr      go to state 103
    vtcall           go to state 104
    vvcall           go to state 105
    dotNmExpr        go to state 106
    dotIxExpr        go to state 107
    colonNmExpr      go to state 108
    castExpr         go to state 124
    unaryExpr        go to state 125
    unaryOp          go to state 126
    binaryExpr       go to state 127
    mulBinaryExpr    go to state 128
    addBinaryExpr    go to state 129
    cmpBinaryExpr    go to state 130
    eqBinaryExpr     go to state 131
    andBinaryExpr    go to state 132
    xorBinaryExpr    go to state 133
    orBinaryExpr     go to state 134
    typespec         go to state 110
    primaryTypespec  go to state 60
    postfixTypespec  go to state 61


State 233

   13 setStmt: "'set'" expr "'='" • expr

    "a VID (ID with first letter lowercase)"  shift, and go to state 14
    "a TID (ID with first letter uppercase)"  shift, and go to state 37
    "'if'"                                    shift, and go to state 86
    "'not'"                                   shift, and go to state 118
    "'Tuple'"                                 shift, and go to state 56
    "'Array'"                                 shift, and go to state 57
    TK_DINT_LIT                               shift, and go to state 87
    TK_XINT_LIT                               shift, and go to state 88
    TK_FLOAT_LIT                              shift, and go to state 89
    TK_DQSTRING_LIT                           shift, and go to state 65
    TK_SQSTRING_LIT                           shift, and go to state 66
    "'('"                                     shift, and go to state 90
    "'{'"                                     shift, and go to state 91
    "'*'"                                     shift, and go to state 119
    "'+'"                                     shift, and go to state 120
    "'-'"                                     shift, and go to state 121
    "'^'"                                     shift, and go to state 122

    tid              go to state 58
    vid              go to state 92
    floatl           go to state 93
    stringl          go to state 94
    unit             go to state 95
    expr             go to state 247
    parenExpr        go to state 96
    primaryExpr      go to state 97
    vparen           go to state 98
    vtuple           go to state 99
    vstruct          go to state 100
    ifThenElse       go to state 101
    chain            go to state 102
    postfixExpr      go to state 103
    vtcall           go to state 104
    vvcall           go to state 105
    dotNmExpr        go to state 106
    dotIxExpr        go to state 107
    colonNmExpr      go to state 108
    castExpr         go to state 124
    unaryExpr        go to state 125
    unaryOp          go to state 126
    binaryExpr       go to state 127
    mulBinaryExpr    go to state 128
    addBinaryExpr    go to state 129
    cmpBinaryExpr    go to state 130
    eqBinaryExpr     go to state 131
    andBinaryExpr    go to state 132
    xorBinaryExpr    go to state 133
    orBinaryExpr     go to state 134
    typespec         go to state 110
    primaryTypespec  go to state 60
    postfixTypespec  go to state 61


State 234

  127 vstructField: vid "'='" expr •

    $default  reduce using rule 127 (vstructField)


State 235

   62 chainPrefix: chainPrefix chainPrefixStmt "';'" •

    $default  reduce using rule 62 (chainPrefix)


State 236

   60 chain: "'{'" chainPrefix expr "'}'" •

    $default  reduce using rule 60 (chain)


State 237

  129 vstructField_cl: vstructField_cl "','" vstructField •

    $default  reduce using rule 129 (vstructField_cl)


State 238

   38 expr_cl: expr_cl "','" • expr

    "a VID (ID with first letter lowercase)"  shift, and go to state 14
    "a TID (ID with first letter uppercase)"  shift, and go to state 37
    "'if'"                                    shift, and go to state 86
    "'not'"                                   shift, and go to state 118
    "'Tuple'"                                 shift, and go to state 56
    "'Array'"                                 shift, and go to state 57
    TK_DINT_LIT                               shift, and go to state 87
    TK_XINT_LIT                               shift, and go to state 88
    TK_FLOAT_LIT                              shift, and go to state 89
    TK_DQSTRING_LIT                           shift, and go to state 65
    TK_SQSTRING_LIT                           shift, and go to state 66
    "'('"                                     shift, and go to state 90
    "'{'"                                     shift, and go to state 91
    "'*'"                                     shift, and go to state 119
    "'+'"                                     shift, and go to state 120
    "'-'"                                     shift, and go to state 121
    "'^'"                                     shift, and go to state 122

    tid              go to state 58
    vid              go to state 92
    floatl           go to state 93
    stringl          go to state 94
    unit             go to state 95
    expr             go to state 248
    parenExpr        go to state 96
    primaryExpr      go to state 97
    vparen           go to state 98
    vtuple           go to state 99
    vstruct          go to state 100
    ifThenElse       go to state 101
    chain            go to state 102
    postfixExpr      go to state 103
    vtcall           go to state 104
    vvcall           go to state 105
    dotNmExpr        go to state 106
    dotIxExpr        go to state 107
    colonNmExpr      go to state 108
    castExpr         go to state 124
    unaryExpr        go to state 125
    unaryOp          go to state 126
    binaryExpr       go to state 127
    mulBinaryExpr    go to state 128
    addBinaryExpr    go to state 129
    cmpBinaryExpr    go to state 130
    eqBinaryExpr     go to state 131
    andBinaryExpr    go to state 132
    xorBinaryExpr    go to state 133
    orBinaryExpr     go to state 134
    typespec         go to state 110
    primaryTypespec  go to state 60
    postfixTypespec  go to state 61


State 239

   71 vvcall: postfixExpr "'('" expr_cl "')'" •

    $default  reduce using rule 71 (vvcall)


State 240

  126 vtarg_cl: vtarg_cl "','" • vtarg

    "a VID (ID with first letter lowercase)"  shift, and go to state 14
    "a TID (ID with first letter uppercase)"  shift, and go to state 37
    "'if'"                                    shift, and go to state 86
    "'not'"                                   shift, and go to state 118
    "'Tuple'"                                 shift, and go to state 56
    "'Array'"                                 shift, and go to state 57
    TK_DINT_LIT                               shift, and go to state 87
    TK_XINT_LIT                               shift, and go to state 88
    TK_FLOAT_LIT                              shift, and go to state 89
    TK_DQSTRING_LIT                           shift, and go to state 65
    TK_SQSTRING_LIT                           shift, and go to state 66
    "'('"                                     shift, and go to state 90
    "'{'"                                     shift, and go to state 91
    "'*'"                                     shift, and go to state 119
    "'+'"                                     shift, and go to state 120
    "'-'"                                     shift, and go to state 121
    "'^'"                                     shift, and go to state 122

    tid              go to state 58
    vid              go to state 92
    floatl           go to state 93
    stringl          go to state 94
    unit             go to state 95
    expr             go to state 213
    parenExpr        go to state 96
    primaryExpr      go to state 97
    vparen           go to state 98
    vtuple           go to state 99
    vstruct          go to state 100
    ifThenElse       go to state 101
    chain            go to state 102
    postfixExpr      go to state 103
    vtcall           go to state 104
    vvcall           go to state 105
    dotNmExpr        go to state 106
    dotIxExpr        go to state 107
    colonNmExpr      go to state 108
    castExpr         go to state 124
    unaryExpr        go to state 125
    unaryOp          go to state 126
    binaryExpr       go to state 127
    mulBinaryExpr    go to state 128
    addBinaryExpr    go to state 129
    cmpBinaryExpr    go to state 130
    eqBinaryExpr     go to state 131
    andBinaryExpr    go to state 132
    xorBinaryExpr    go to state 133
    orBinaryExpr     go to state 134
    typespec         go to state 214
    primaryTypespec  go to state 60
    postfixTypespec  go to state 61
    vtarg            go to state 249


State 241

   69 vtcall: postfixExpr "'['" vtarg_cl "']'" •

    $default  reduce using rule 69 (vtcall)


State 242

  115 primaryTypespec: "'Array'" "'['" typespec "','" expr "']'" •

    $default  reduce using rule 115 (primaryTypespec)


State 243

   57 ifThenElse: "'if'" parenExpr "'then'" parenExpr "'else'" • parenExpr

    "'('"  shift, and go to state 90
    "'{'"  shift, and go to state 91

    unit       go to state 95
    parenExpr  go to state 250
    vparen     go to state 98
    vtuple     go to state 99
    vstruct    go to state 100
    chain      go to state 102


State 244

  144 lpatternField_cl: lpatternField_cl "','" • lpatternField

    "a VID (ID with first letter lowercase)"  shift, and go to state 14

    vid            go to state 193
    vpatternField  go to state 195
    lpatternField  go to state 251


State 245

  136 lpattern: "'('" lpatternField_cl "')'" •

    $default  reduce using rule 136 (lpattern)


State 246

   12 letStmt: "'let'" lpattern "'='" expr •

    $default  reduce using rule 12 (letStmt)


State 247

   13 setStmt: "'set'" expr "'='" expr •

    $default  reduce using rule 13 (setStmt)


State 248

   38 expr_cl: expr_cl "','" expr •

    $default  reduce using rule 38 (expr_cl)


State 249

  126 vtarg_cl: vtarg_cl "','" vtarg •

    $default  reduce using rule 126 (vtarg_cl)


State 250

   57 ifThenElse: "'if'" parenExpr "'then'" parenExpr "'else'" parenExpr •

    $default  reduce using rule 57 (ifThenElse)


State 251

  144 lpatternField_cl: lpatternField_cl "','" lpatternField •

    $default  reduce using rule 144 (lpatternField_cl)
