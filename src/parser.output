Terminals unused in grammar

    "a HOLE (ID without any letters)"
    "'namespace'"
    "'do'"
    "'operator'"
    "'match'"
    "'with'"
    "'return'"
    "'export'"
    "'fun'"
    "'::'"
    "':::'"
    "'$'"
    "'!'"
    "EOS"


Grammar

    0 $accept: module $end

    1 module: moduleContent

    2 moduleContent: moduleContentStmt "';'"
    3              | moduleContent moduleContentStmt "';'"

    4 chainPrefixStmt: letStmt
    5                | setStmt
    6                | discardStmt

    7 letStmt: "'let'" lpattern "'='" expr

    8 setStmt: "'set'" expr "'='" expr

    9 discardStmt: "'discard'" expr

   10 moduleContentStmt: defStmt
   11                  | typedefStmt
   12                  | typedefStmt_enum
   13                  | moduleStmt
   14                  | importStmt
   15                  | externStmt

   16 defStmt: "'def'" vid vpattern "'='" castExpr
   17        | "'def'" vid tpattern vpattern "'='" castExpr

   18 typedefStmt: "'type'" tid tpattern "'='" typespec

   19 typedefStmt_enum: "'enum'" tid tpattern "'='" vstruct

   20 moduleStmt: "'module'" vid "'from'" stringl "'as'" stringl

   21 importStmt: "'import'" vid "'.'" vid
   22           | "'import'" vid "'.'" vid "'*'"

   23 externStmt: "'extern'" "'def'" vid vpattern "'->'" typespec

   24 tid: "a TID (ID with first letter uppercase)"

   25 vid: "a VID (ID with first letter lowercase)"

   26 floatl: TK_FLOAT_LIT

   27 stringl: TK_SQSTRING_LIT
   28        | TK_DQSTRING_LIT

   29 unit: "'('" "')'"

   30 expr: binaryExpr

   31 expr_cl: expr
   32        | expr_cl "','" expr

   33 expr_cl2: expr "','" expr
   34         | expr_cl2 "','" expr

   35 parenExpr: unit
   36          | vparen
   37          | vtuple
   38          | vstruct
   39          | chain

   40 primaryExpr: parenExpr
   41            | vid
   42            | TK_DINT_LIT
   43            | TK_XINT_LIT
   44            | floatl
   45            | stringl
   46            | ifThenElse

   47 vparen: "'('" expr "')'"

   48 vtuple: "'('" expr_cl2 "')'"

   49 vstruct: "'{'" vstructField_cl "'}'"

   50 ifThenElse: "'if'" parenExpr "'then'" parenExpr
   51           | "'if'" parenExpr "'then'" parenExpr "'else'" parenExpr

   52 chain: "'{'" expr "'}'"
   53      | "'{'" chainPrefix "'}'"
   54      | "'{'" chainPrefix expr "'}'"

   55 chainPrefix: chainPrefixStmt "';'"
   56            | chainPrefix chainPrefixStmt "';'"

   57 postfixExpr: primaryExpr
   58            | vtcall
   59            | vvcall

   60 vtcall: postfixExpr "'['" vtarg_cl "']'"

   61 vvcall: postfixExpr "'('" "')'"
   62       | postfixExpr "'('" expr_cl "')'"

   63 castExpr: postfixExpr
   64         | typespec parenExpr

   65 unaryExpr: castExpr
   66          | unaryOp unaryExpr

   67 unaryOp: "'+'"
   68        | "'-'"
   69        | "'*'"
   70        | "'^'"
   71        | "'not'"

   72 binaryExpr: orBinaryExpr

   73 mulBinaryOp: "'*'"
   74            | "'/'"
   75            | "'%'"

   76 mulBinaryExpr: unaryExpr
   77              | mulBinaryExpr mulBinaryOp unaryExpr

   78 addBinaryOp: "'+'"
   79            | "'-'"

   80 addBinaryExpr: mulBinaryExpr
   81              | addBinaryExpr addBinaryOp mulBinaryExpr

   82 cmpBinaryOp: "'<'"
   83            | "'<='"
   84            | "'>'"
   85            | "'>='"

   86 cmpBinaryExpr: addBinaryExpr
   87              | cmpBinaryExpr cmpBinaryOp addBinaryExpr

   88 eqBinaryOp: "'=='"
   89           | "'!='"

   90 eqBinaryExpr: cmpBinaryExpr
   91             | eqBinaryExpr eqBinaryOp cmpBinaryExpr

   92 andBinaryExpr: eqBinaryExpr
   93              | andBinaryExpr "'and'" eqBinaryExpr

   94 xorBinaryExpr: andBinaryExpr
   95              | xorBinaryExpr "'xor'" andBinaryExpr

   96 orBinaryExpr: xorBinaryExpr
   97             | orBinaryExpr "'or'" xorBinaryExpr

   98 typespec: postfixTypespec

   99 primaryTypespec: tid

  100 postfixTypespec: primaryTypespec
  101                | postfixTypespec "'['" ttarg_cl "']'"
  102                | postfixTypespec "'^'"

  103 ttarg: typespec
  104      | expr

  105 ttarg_cl: ttarg
  106         | ttarg_cl "','" ttarg

  107 vtarg: typespec
  108      | expr

  109 vtarg_cl: vtarg
  110         | vtarg_cl "','" vtarg

  111 vstructField: vid "':'" expr

  112 vstructField_cl: vstructField
  113                | vstructField_cl "','" vstructField

  114 vpatternField: vid "':'" typespec

  115 tpatternField: tid
  116              | vpatternField

  117 lpattern: vpatternField
  118         | vpattern

  119 vpattern: "'('" vpatternField_cl "')'"
  120         | unit

  121 tpattern: "'['" tpatternField_cl "']'"

  122 vpatternField_cl: vpatternField
  123                 | vpatternField_cl "','" vpatternField

  124 tpatternField_cl: tpatternField
  125                 | tpatternField_cl "','" tpatternField


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    "a VID (ID with first letter lowercase)" <token> (258) 25
    "a TID (ID with first letter uppercase)" <token> (259) 24
    "a HOLE (ID without any letters)" <token> (260)
    "'namespace'" (261)
    "'do'" (262)
    "'if'" (263) 50 51
    "'then'" (264) 50 51
    "'else'" (265) 51
    "'operator'" (266)
    "'match'" (267)
    "'with'" (268)
    "'return'" (269)
    "'discard'" (270) 9
    "'module'" (271) 20
    "'import'" (272) 21 22
    "'export'" (273)
    "'extern'" (274) 23
    "'from'" (275) 20
    "'as'" (276) 20
    "'fun'" (277)
    "'let'" (278) 7
    "'set'" (279) 8
    "'def'" (280) 16 17 23
    "'type'" (281) 18
    "'enum'" (282) 19
    "'and'" (283) 93
    "'xor'" (284) 95
    "'or'" (285) 97
    "'not'" (286) 71
    TK_DINT_LIT <token> (287) 42
    TK_XINT_LIT <token> (288) 43
    TK_FLOAT_LIT <token> (289) 26
    TK_DQSTRING_LIT <token> (290) 28
    TK_SQSTRING_LIT <token> (291) 27
    "'.'" (292) 21 22
    "':'" (293) 111 114
    "','" (294) 32 33 34 106 110 113 123 125
    "';'" (295) 2 3 55 56
    "'::'" (296)
    "':::'" (297)
    "'('" (298) 29 47 48 61 62 119
    "')'" (299) 29 47 48 61 62 119
    "'['" (300) 60 101 121
    "']'" (301) 60 101 121
    "'{'" (302) 49 52 53 54
    "'}'" (303) 49 52 53 54
    "'->'" (304) 23
    "'*'" (305) 22 69 73
    "'/'" (306) 74
    "'%'" (307) 75
    "'+'" (308) 67 78
    "'-'" (309) 68 79
    "'<'" (310) 82
    "'<='" (311) 83
    "'>'" (312) 84
    "'>='" (313) 85
    "'='" (314) 7 8 16 17 18 19
    "'=='" (315) 88
    "'!='" (316) 89
    "'$'" (317)
    "'^'" (318) 70 102
    "'!'" (319)
    "EOS" (320)


Nonterminals, with rules where they appear

    $accept (66)
        on left: 0
    module <nt> (67)
        on left: 1
        on right: 0
    moduleContent <ntSb> (68)
        on left: 2 3
        on right: 1 3
    chainPrefixStmt <nt> (69)
        on left: 4 5 6
        on right: 55 56
    letStmt <nt> (70)
        on left: 7
        on right: 4
    setStmt <nt> (71)
        on left: 8
        on right: 5
    discardStmt <nt> (72)
        on left: 9
        on right: 6
    moduleContentStmt <nt> (73)
        on left: 10 11 12 13 14 15
        on right: 2 3
    defStmt <nt> (74)
        on left: 16 17
        on right: 10
    typedefStmt <nt> (75)
        on left: 18
        on right: 11
    typedefStmt_enum <nt> (76)
        on left: 19
        on right: 12
    moduleStmt <nt> (77)
        on left: 20
        on right: 13
    importStmt <nt> (78)
        on left: 21 22
        on right: 14
    externStmt <nt> (79)
        on left: 23
        on right: 15
    tid <token> (80)
        on left: 24
        on right: 18 19 99 115
    vid <token> (81)
        on left: 25
        on right: 16 17 20 21 22 23 41 111 114
    floatl <token> (82)
        on left: 26
        on right: 44
    stringl <token> (83)
        on left: 27 28
        on right: 20 45
    unit <nt> (84)
        on left: 29
        on right: 35 120
    expr <nt> (85)
        on left: 30
        on right: 7 8 9 31 32 33 34 47 52 54 104 108 111
    expr_cl <ntSb> (86)
        on left: 31 32
        on right: 32 62
    expr_cl2 <ntSb> (87)
        on left: 33 34
        on right: 34 48
    parenExpr <nt> (88)
        on left: 35 36 37 38 39
        on right: 40 50 51 64
    primaryExpr <nt> (89)
        on left: 40 41 42 43 44 45 46
        on right: 57
    vparen <nt> (90)
        on left: 47
        on right: 36
    vtuple <nt> (91)
        on left: 48
        on right: 37
    vstruct <nt> (92)
        on left: 49
        on right: 19 38
    ifThenElse <nt> (93)
        on left: 50 51
        on right: 46
    chain <nt> (94)
        on left: 52 53 54
        on right: 39
    chainPrefix <ntSb> (95)
        on left: 55 56
        on right: 53 54 56
    postfixExpr <nt> (96)
        on left: 57 58 59
        on right: 60 61 62 63
    vtcall <nt> (97)
        on left: 60
        on right: 58
    vvcall <nt> (98)
        on left: 61 62
        on right: 59
    castExpr <nt> (99)
        on left: 63 64
        on right: 16 17 65
    unaryExpr <nt> (100)
        on left: 65 66
        on right: 66 76 77
    unaryOp <uop> (101)
        on left: 67 68 69 70 71
        on right: 66
    binaryExpr <nt> (102)
        on left: 72
        on right: 30
    mulBinaryOp <bop> (103)
        on left: 73 74 75
        on right: 77
    mulBinaryExpr <nt> (104)
        on left: 76 77
        on right: 77 80 81
    addBinaryOp <bop> (105)
        on left: 78 79
        on right: 81
    addBinaryExpr <nt> (106)
        on left: 80 81
        on right: 81 86 87
    cmpBinaryOp <bop> (107)
        on left: 82 83 84 85
        on right: 87
    cmpBinaryExpr <nt> (108)
        on left: 86 87
        on right: 87 90 91
    eqBinaryOp <bop> (109)
        on left: 88 89
        on right: 91
    eqBinaryExpr <nt> (110)
        on left: 90 91
        on right: 91 92 93
    andBinaryExpr <nt> (111)
        on left: 92 93
        on right: 93 94 95
    xorBinaryExpr <nt> (112)
        on left: 94 95
        on right: 95 96 97
    orBinaryExpr <nt> (113)
        on left: 96 97
        on right: 72 97
    typespec <nt> (114)
        on left: 98
        on right: 18 23 64 103 107 114
    primaryTypespec <nt> (115)
        on left: 99
        on right: 100
    postfixTypespec <nt> (116)
        on left: 100 101 102
        on right: 98 101 102
    ttarg <nt> (117)
        on left: 103 104
        on right: 105 106
    ttarg_cl <ntSb> (118)
        on left: 105 106
        on right: 101 106
    vtarg <nt> (119)
        on left: 107 108
        on right: 109 110
    vtarg_cl <ntSb> (120)
        on left: 109 110
        on right: 60 110
    vstructField <nt> (121)
        on left: 111
        on right: 112 113
    vstructField_cl <ntSb> (122)
        on left: 112 113
        on right: 49 113
    vpatternField <nt> (123)
        on left: 114
        on right: 116 117 122 123
    tpatternField <nt> (124)
        on left: 115 116
        on right: 124 125
    lpattern <nt> (125)
        on left: 117 118
        on right: 7
    vpattern <nt> (126)
        on left: 119 120
        on right: 16 17 23 118
    tpattern <nt> (127)
        on left: 121
        on right: 17 18 19
    vpatternField_cl <ntSb> (128)
        on left: 122 123
        on right: 119 123
    tpatternField_cl <ntSb> (129)
        on left: 124 125
        on right: 121 125


State 0

    0 $accept: • module $end

    "'module'"  shift, and go to state 1
    "'import'"  shift, and go to state 2
    "'extern'"  shift, and go to state 3
    "'def'"     shift, and go to state 4
    "'type'"    shift, and go to state 5
    "'enum'"    shift, and go to state 6

    module             go to state 7
    moduleContent      go to state 8
    moduleContentStmt  go to state 9
    defStmt            go to state 10
    typedefStmt        go to state 11
    typedefStmt_enum   go to state 12
    moduleStmt         go to state 13
    importStmt         go to state 14
    externStmt         go to state 15


State 1

   20 moduleStmt: "'module'" • vid "'from'" stringl "'as'" stringl

    "a VID (ID with first letter lowercase)"  shift, and go to state 16

    vid  go to state 17


State 2

   21 importStmt: "'import'" • vid "'.'" vid
   22           | "'import'" • vid "'.'" vid "'*'"

    "a VID (ID with first letter lowercase)"  shift, and go to state 16

    vid  go to state 18


State 3

   23 externStmt: "'extern'" • "'def'" vid vpattern "'->'" typespec

    "'def'"  shift, and go to state 19


State 4

   16 defStmt: "'def'" • vid vpattern "'='" castExpr
   17        | "'def'" • vid tpattern vpattern "'='" castExpr

    "a VID (ID with first letter lowercase)"  shift, and go to state 16

    vid  go to state 20


State 5

   18 typedefStmt: "'type'" • tid tpattern "'='" typespec

    "a TID (ID with first letter uppercase)"  shift, and go to state 21

    tid  go to state 22


State 6

   19 typedefStmt_enum: "'enum'" • tid tpattern "'='" vstruct

    "a TID (ID with first letter uppercase)"  shift, and go to state 21

    tid  go to state 23


State 7

    0 $accept: module • $end

    $end  shift, and go to state 24


State 8

    1 module: moduleContent •
    3 moduleContent: moduleContent • moduleContentStmt "';'"

    "'module'"  shift, and go to state 1
    "'import'"  shift, and go to state 2
    "'extern'"  shift, and go to state 3
    "'def'"     shift, and go to state 4
    "'type'"    shift, and go to state 5
    "'enum'"    shift, and go to state 6

    $default  reduce using rule 1 (module)

    moduleContentStmt  go to state 25
    defStmt            go to state 10
    typedefStmt        go to state 11
    typedefStmt_enum   go to state 12
    moduleStmt         go to state 13
    importStmt         go to state 14
    externStmt         go to state 15


State 9

    2 moduleContent: moduleContentStmt • "';'"

    "';'"  shift, and go to state 26


State 10

   10 moduleContentStmt: defStmt •

    $default  reduce using rule 10 (moduleContentStmt)


State 11

   11 moduleContentStmt: typedefStmt •

    $default  reduce using rule 11 (moduleContentStmt)


State 12

   12 moduleContentStmt: typedefStmt_enum •

    $default  reduce using rule 12 (moduleContentStmt)


State 13

   13 moduleContentStmt: moduleStmt •

    $default  reduce using rule 13 (moduleContentStmt)


State 14

   14 moduleContentStmt: importStmt •

    $default  reduce using rule 14 (moduleContentStmt)


State 15

   15 moduleContentStmt: externStmt •

    $default  reduce using rule 15 (moduleContentStmt)


State 16

   25 vid: "a VID (ID with first letter lowercase)" •

    $default  reduce using rule 25 (vid)


State 17

   20 moduleStmt: "'module'" vid • "'from'" stringl "'as'" stringl

    "'from'"  shift, and go to state 27


State 18

   21 importStmt: "'import'" vid • "'.'" vid
   22           | "'import'" vid • "'.'" vid "'*'"

    "'.'"  shift, and go to state 28


State 19

   23 externStmt: "'extern'" "'def'" • vid vpattern "'->'" typespec

    "a VID (ID with first letter lowercase)"  shift, and go to state 16

    vid  go to state 29


State 20

   16 defStmt: "'def'" vid • vpattern "'='" castExpr
   17        | "'def'" vid • tpattern vpattern "'='" castExpr

    "'('"  shift, and go to state 30
    "'['"  shift, and go to state 31

    unit      go to state 32
    vpattern  go to state 33
    tpattern  go to state 34


State 21

   24 tid: "a TID (ID with first letter uppercase)" •

    $default  reduce using rule 24 (tid)


State 22

   18 typedefStmt: "'type'" tid • tpattern "'='" typespec

    "'['"  shift, and go to state 31

    tpattern  go to state 35


State 23

   19 typedefStmt_enum: "'enum'" tid • tpattern "'='" vstruct

    "'['"  shift, and go to state 31

    tpattern  go to state 36


State 24

    0 $accept: module $end •

    $default  accept


State 25

    3 moduleContent: moduleContent moduleContentStmt • "';'"

    "';'"  shift, and go to state 37


State 26

    2 moduleContent: moduleContentStmt "';'" •

    $default  reduce using rule 2 (moduleContent)


State 27

   20 moduleStmt: "'module'" vid "'from'" • stringl "'as'" stringl

    TK_DQSTRING_LIT  shift, and go to state 38
    TK_SQSTRING_LIT  shift, and go to state 39

    stringl  go to state 40


State 28

   21 importStmt: "'import'" vid "'.'" • vid
   22           | "'import'" vid "'.'" • vid "'*'"

    "a VID (ID with first letter lowercase)"  shift, and go to state 16

    vid  go to state 41


State 29

   23 externStmt: "'extern'" "'def'" vid • vpattern "'->'" typespec

    "'('"  shift, and go to state 30

    unit      go to state 32
    vpattern  go to state 42


State 30

   29 unit: "'('" • "')'"
  119 vpattern: "'('" • vpatternField_cl "')'"

    "a VID (ID with first letter lowercase)"  shift, and go to state 16
    "')'"                                     shift, and go to state 43

    vid               go to state 44
    vpatternField     go to state 45
    vpatternField_cl  go to state 46


State 31

  121 tpattern: "'['" • tpatternField_cl "']'"

    "a VID (ID with first letter lowercase)"  shift, and go to state 16
    "a TID (ID with first letter uppercase)"  shift, and go to state 21

    tid               go to state 47
    vid               go to state 44
    vpatternField     go to state 48
    tpatternField     go to state 49
    tpatternField_cl  go to state 50


State 32

  120 vpattern: unit •

    $default  reduce using rule 120 (vpattern)


State 33

   16 defStmt: "'def'" vid vpattern • "'='" castExpr

    "'='"  shift, and go to state 51


State 34

   17 defStmt: "'def'" vid tpattern • vpattern "'='" castExpr

    "'('"  shift, and go to state 30

    unit      go to state 32
    vpattern  go to state 52


State 35

   18 typedefStmt: "'type'" tid tpattern • "'='" typespec

    "'='"  shift, and go to state 53


State 36

   19 typedefStmt_enum: "'enum'" tid tpattern • "'='" vstruct

    "'='"  shift, and go to state 54


State 37

    3 moduleContent: moduleContent moduleContentStmt "';'" •

    $default  reduce using rule 3 (moduleContent)


State 38

   28 stringl: TK_DQSTRING_LIT •

    $default  reduce using rule 28 (stringl)


State 39

   27 stringl: TK_SQSTRING_LIT •

    $default  reduce using rule 27 (stringl)


State 40

   20 moduleStmt: "'module'" vid "'from'" stringl • "'as'" stringl

    "'as'"  shift, and go to state 55


State 41

   21 importStmt: "'import'" vid "'.'" vid •
   22           | "'import'" vid "'.'" vid • "'*'"

    "'*'"  shift, and go to state 56

    $default  reduce using rule 21 (importStmt)


State 42

   23 externStmt: "'extern'" "'def'" vid vpattern • "'->'" typespec

    "'->'"  shift, and go to state 57


State 43

   29 unit: "'('" "')'" •

    $default  reduce using rule 29 (unit)


State 44

  114 vpatternField: vid • "':'" typespec

    "':'"  shift, and go to state 58


State 45

  122 vpatternField_cl: vpatternField •

    $default  reduce using rule 122 (vpatternField_cl)


State 46

  119 vpattern: "'('" vpatternField_cl • "')'"
  123 vpatternField_cl: vpatternField_cl • "','" vpatternField

    "','"  shift, and go to state 59
    "')'"  shift, and go to state 60


State 47

  115 tpatternField: tid •

    $default  reduce using rule 115 (tpatternField)


State 48

  116 tpatternField: vpatternField •

    $default  reduce using rule 116 (tpatternField)


State 49

  124 tpatternField_cl: tpatternField •

    $default  reduce using rule 124 (tpatternField_cl)


State 50

  121 tpattern: "'['" tpatternField_cl • "']'"
  125 tpatternField_cl: tpatternField_cl • "','" tpatternField

    "','"  shift, and go to state 61
    "']'"  shift, and go to state 62


State 51

   16 defStmt: "'def'" vid vpattern "'='" • castExpr

    "a VID (ID with first letter lowercase)"  shift, and go to state 16
    "a TID (ID with first letter uppercase)"  shift, and go to state 21
    "'if'"                                    shift, and go to state 63
    TK_DINT_LIT                               shift, and go to state 64
    TK_XINT_LIT                               shift, and go to state 65
    TK_FLOAT_LIT                              shift, and go to state 66
    TK_DQSTRING_LIT                           shift, and go to state 38
    TK_SQSTRING_LIT                           shift, and go to state 39
    "'('"                                     shift, and go to state 67
    "'{'"                                     shift, and go to state 68

    tid              go to state 69
    vid              go to state 70
    floatl           go to state 71
    stringl          go to state 72
    unit             go to state 73
    parenExpr        go to state 74
    primaryExpr      go to state 75
    vparen           go to state 76
    vtuple           go to state 77
    vstruct          go to state 78
    ifThenElse       go to state 79
    chain            go to state 80
    postfixExpr      go to state 81
    vtcall           go to state 82
    vvcall           go to state 83
    castExpr         go to state 84
    typespec         go to state 85
    primaryTypespec  go to state 86
    postfixTypespec  go to state 87


State 52

   17 defStmt: "'def'" vid tpattern vpattern • "'='" castExpr

    "'='"  shift, and go to state 88


State 53

   18 typedefStmt: "'type'" tid tpattern "'='" • typespec

    "a TID (ID with first letter uppercase)"  shift, and go to state 21

    tid              go to state 69
    typespec         go to state 89
    primaryTypespec  go to state 86
    postfixTypespec  go to state 87


State 54

   19 typedefStmt_enum: "'enum'" tid tpattern "'='" • vstruct

    "'{'"  shift, and go to state 90

    vstruct  go to state 91


State 55

   20 moduleStmt: "'module'" vid "'from'" stringl "'as'" • stringl

    TK_DQSTRING_LIT  shift, and go to state 38
    TK_SQSTRING_LIT  shift, and go to state 39

    stringl  go to state 92


State 56

   22 importStmt: "'import'" vid "'.'" vid "'*'" •

    $default  reduce using rule 22 (importStmt)


State 57

   23 externStmt: "'extern'" "'def'" vid vpattern "'->'" • typespec

    "a TID (ID with first letter uppercase)"  shift, and go to state 21

    tid              go to state 69
    typespec         go to state 93
    primaryTypespec  go to state 86
    postfixTypespec  go to state 87


State 58

  114 vpatternField: vid "':'" • typespec

    "a TID (ID with first letter uppercase)"  shift, and go to state 21

    tid              go to state 69
    typespec         go to state 94
    primaryTypespec  go to state 86
    postfixTypespec  go to state 87


State 59

  123 vpatternField_cl: vpatternField_cl "','" • vpatternField

    "a VID (ID with first letter lowercase)"  shift, and go to state 16

    vid            go to state 44
    vpatternField  go to state 95


State 60

  119 vpattern: "'('" vpatternField_cl "')'" •

    $default  reduce using rule 119 (vpattern)


State 61

  125 tpatternField_cl: tpatternField_cl "','" • tpatternField

    "a VID (ID with first letter lowercase)"  shift, and go to state 16
    "a TID (ID with first letter uppercase)"  shift, and go to state 21

    tid            go to state 47
    vid            go to state 44
    vpatternField  go to state 48
    tpatternField  go to state 96


State 62

  121 tpattern: "'['" tpatternField_cl "']'" •

    $default  reduce using rule 121 (tpattern)


State 63

   50 ifThenElse: "'if'" • parenExpr "'then'" parenExpr
   51           | "'if'" • parenExpr "'then'" parenExpr "'else'" parenExpr

    "'('"  shift, and go to state 67
    "'{'"  shift, and go to state 68

    unit       go to state 73
    parenExpr  go to state 97
    vparen     go to state 76
    vtuple     go to state 77
    vstruct    go to state 78
    chain      go to state 80


State 64

   42 primaryExpr: TK_DINT_LIT •

    $default  reduce using rule 42 (primaryExpr)


State 65

   43 primaryExpr: TK_XINT_LIT •

    $default  reduce using rule 43 (primaryExpr)


State 66

   26 floatl: TK_FLOAT_LIT •

    $default  reduce using rule 26 (floatl)


State 67

   29 unit: "'('" • "')'"
   47 vparen: "'('" • expr "')'"
   48 vtuple: "'('" • expr_cl2 "')'"

    "a VID (ID with first letter lowercase)"  shift, and go to state 16
    "a TID (ID with first letter uppercase)"  shift, and go to state 21
    "'if'"                                    shift, and go to state 63
    "'not'"                                   shift, and go to state 98
    TK_DINT_LIT                               shift, and go to state 64
    TK_XINT_LIT                               shift, and go to state 65
    TK_FLOAT_LIT                              shift, and go to state 66
    TK_DQSTRING_LIT                           shift, and go to state 38
    TK_SQSTRING_LIT                           shift, and go to state 39
    "'('"                                     shift, and go to state 67
    "')'"                                     shift, and go to state 43
    "'{'"                                     shift, and go to state 68
    "'*'"                                     shift, and go to state 99
    "'+'"                                     shift, and go to state 100
    "'-'"                                     shift, and go to state 101
    "'^'"                                     shift, and go to state 102

    tid              go to state 69
    vid              go to state 70
    floatl           go to state 71
    stringl          go to state 72
    unit             go to state 73
    expr             go to state 103
    expr_cl2         go to state 104
    parenExpr        go to state 74
    primaryExpr      go to state 75
    vparen           go to state 76
    vtuple           go to state 77
    vstruct          go to state 78
    ifThenElse       go to state 79
    chain            go to state 80
    postfixExpr      go to state 81
    vtcall           go to state 82
    vvcall           go to state 83
    castExpr         go to state 105
    unaryExpr        go to state 106
    unaryOp          go to state 107
    binaryExpr       go to state 108
    mulBinaryExpr    go to state 109
    addBinaryExpr    go to state 110
    cmpBinaryExpr    go to state 111
    eqBinaryExpr     go to state 112
    andBinaryExpr    go to state 113
    xorBinaryExpr    go to state 114
    orBinaryExpr     go to state 115
    typespec         go to state 85
    primaryTypespec  go to state 86
    postfixTypespec  go to state 87


State 68

   49 vstruct: "'{'" • vstructField_cl "'}'"
   52 chain: "'{'" • expr "'}'"
   53      | "'{'" • chainPrefix "'}'"
   54      | "'{'" • chainPrefix expr "'}'"

    "a VID (ID with first letter lowercase)"  shift, and go to state 16
    "a TID (ID with first letter uppercase)"  shift, and go to state 21
    "'if'"                                    shift, and go to state 63
    "'discard'"                               shift, and go to state 116
    "'let'"                                   shift, and go to state 117
    "'set'"                                   shift, and go to state 118
    "'not'"                                   shift, and go to state 98
    TK_DINT_LIT                               shift, and go to state 64
    TK_XINT_LIT                               shift, and go to state 65
    TK_FLOAT_LIT                              shift, and go to state 66
    TK_DQSTRING_LIT                           shift, and go to state 38
    TK_SQSTRING_LIT                           shift, and go to state 39
    "'('"                                     shift, and go to state 67
    "'{'"                                     shift, and go to state 68
    "'*'"                                     shift, and go to state 99
    "'+'"                                     shift, and go to state 100
    "'-'"                                     shift, and go to state 101
    "'^'"                                     shift, and go to state 102

    chainPrefixStmt  go to state 119
    letStmt          go to state 120
    setStmt          go to state 121
    discardStmt      go to state 122
    tid              go to state 69
    vid              go to state 123
    floatl           go to state 71
    stringl          go to state 72
    unit             go to state 73
    expr             go to state 124
    parenExpr        go to state 74
    primaryExpr      go to state 75
    vparen           go to state 76
    vtuple           go to state 77
    vstruct          go to state 78
    ifThenElse       go to state 79
    chain            go to state 80
    chainPrefix      go to state 125
    postfixExpr      go to state 81
    vtcall           go to state 82
    vvcall           go to state 83
    castExpr         go to state 105
    unaryExpr        go to state 106
    unaryOp          go to state 107
    binaryExpr       go to state 108
    mulBinaryExpr    go to state 109
    addBinaryExpr    go to state 110
    cmpBinaryExpr    go to state 111
    eqBinaryExpr     go to state 112
    andBinaryExpr    go to state 113
    xorBinaryExpr    go to state 114
    orBinaryExpr     go to state 115
    typespec         go to state 85
    primaryTypespec  go to state 86
    postfixTypespec  go to state 87
    vstructField     go to state 126
    vstructField_cl  go to state 127


State 69

   99 primaryTypespec: tid •

    $default  reduce using rule 99 (primaryTypespec)


State 70

   41 primaryExpr: vid •

    $default  reduce using rule 41 (primaryExpr)


State 71

   44 primaryExpr: floatl •

    $default  reduce using rule 44 (primaryExpr)


State 72

   45 primaryExpr: stringl •

    $default  reduce using rule 45 (primaryExpr)


State 73

   35 parenExpr: unit •

    $default  reduce using rule 35 (parenExpr)


State 74

   40 primaryExpr: parenExpr •

    $default  reduce using rule 40 (primaryExpr)


State 75

   57 postfixExpr: primaryExpr •

    $default  reduce using rule 57 (postfixExpr)


State 76

   36 parenExpr: vparen •

    $default  reduce using rule 36 (parenExpr)


State 77

   37 parenExpr: vtuple •

    $default  reduce using rule 37 (parenExpr)


State 78

   38 parenExpr: vstruct •

    $default  reduce using rule 38 (parenExpr)


State 79

   46 primaryExpr: ifThenElse •

    $default  reduce using rule 46 (primaryExpr)


State 80

   39 parenExpr: chain •

    $default  reduce using rule 39 (parenExpr)


State 81

   60 vtcall: postfixExpr • "'['" vtarg_cl "']'"
   61 vvcall: postfixExpr • "'('" "')'"
   62       | postfixExpr • "'('" expr_cl "')'"
   63 castExpr: postfixExpr •

    "'('"  shift, and go to state 128
    "'['"  shift, and go to state 129

    $default  reduce using rule 63 (castExpr)


State 82

   58 postfixExpr: vtcall •

    $default  reduce using rule 58 (postfixExpr)


State 83

   59 postfixExpr: vvcall •

    $default  reduce using rule 59 (postfixExpr)


State 84

   16 defStmt: "'def'" vid vpattern "'='" castExpr •

    $default  reduce using rule 16 (defStmt)


State 85

   64 castExpr: typespec • parenExpr

    "'('"  shift, and go to state 67
    "'{'"  shift, and go to state 68

    unit       go to state 73
    parenExpr  go to state 130
    vparen     go to state 76
    vtuple     go to state 77
    vstruct    go to state 78
    chain      go to state 80


State 86

  100 postfixTypespec: primaryTypespec •

    $default  reduce using rule 100 (postfixTypespec)


State 87

   98 typespec: postfixTypespec •
  101 postfixTypespec: postfixTypespec • "'['" ttarg_cl "']'"
  102                | postfixTypespec • "'^'"

    "'['"  shift, and go to state 131
    "'^'"  shift, and go to state 132

    $default  reduce using rule 98 (typespec)


State 88

   17 defStmt: "'def'" vid tpattern vpattern "'='" • castExpr

    "a VID (ID with first letter lowercase)"  shift, and go to state 16
    "a TID (ID with first letter uppercase)"  shift, and go to state 21
    "'if'"                                    shift, and go to state 63
    TK_DINT_LIT                               shift, and go to state 64
    TK_XINT_LIT                               shift, and go to state 65
    TK_FLOAT_LIT                              shift, and go to state 66
    TK_DQSTRING_LIT                           shift, and go to state 38
    TK_SQSTRING_LIT                           shift, and go to state 39
    "'('"                                     shift, and go to state 67
    "'{'"                                     shift, and go to state 68

    tid              go to state 69
    vid              go to state 70
    floatl           go to state 71
    stringl          go to state 72
    unit             go to state 73
    parenExpr        go to state 74
    primaryExpr      go to state 75
    vparen           go to state 76
    vtuple           go to state 77
    vstruct          go to state 78
    ifThenElse       go to state 79
    chain            go to state 80
    postfixExpr      go to state 81
    vtcall           go to state 82
    vvcall           go to state 83
    castExpr         go to state 133
    typespec         go to state 85
    primaryTypespec  go to state 86
    postfixTypespec  go to state 87


State 89

   18 typedefStmt: "'type'" tid tpattern "'='" typespec •

    $default  reduce using rule 18 (typedefStmt)


State 90

   49 vstruct: "'{'" • vstructField_cl "'}'"

    "a VID (ID with first letter lowercase)"  shift, and go to state 16

    vid              go to state 134
    vstructField     go to state 126
    vstructField_cl  go to state 127


State 91

   19 typedefStmt_enum: "'enum'" tid tpattern "'='" vstruct •

    $default  reduce using rule 19 (typedefStmt_enum)


State 92

   20 moduleStmt: "'module'" vid "'from'" stringl "'as'" stringl •

    $default  reduce using rule 20 (moduleStmt)


State 93

   23 externStmt: "'extern'" "'def'" vid vpattern "'->'" typespec •

    $default  reduce using rule 23 (externStmt)


State 94

  114 vpatternField: vid "':'" typespec •

    $default  reduce using rule 114 (vpatternField)


State 95

  123 vpatternField_cl: vpatternField_cl "','" vpatternField •

    $default  reduce using rule 123 (vpatternField_cl)


State 96

  125 tpatternField_cl: tpatternField_cl "','" tpatternField •

    $default  reduce using rule 125 (tpatternField_cl)


State 97

   50 ifThenElse: "'if'" parenExpr • "'then'" parenExpr
   51           | "'if'" parenExpr • "'then'" parenExpr "'else'" parenExpr

    "'then'"  shift, and go to state 135


State 98

   71 unaryOp: "'not'" •

    $default  reduce using rule 71 (unaryOp)


State 99

   69 unaryOp: "'*'" •

    $default  reduce using rule 69 (unaryOp)


State 100

   67 unaryOp: "'+'" •

    $default  reduce using rule 67 (unaryOp)


State 101

   68 unaryOp: "'-'" •

    $default  reduce using rule 68 (unaryOp)


State 102

   70 unaryOp: "'^'" •

    $default  reduce using rule 70 (unaryOp)


State 103

   33 expr_cl2: expr • "','" expr
   47 vparen: "'('" expr • "')'"

    "','"  shift, and go to state 136
    "')'"  shift, and go to state 137


State 104

   34 expr_cl2: expr_cl2 • "','" expr
   48 vtuple: "'('" expr_cl2 • "')'"

    "','"  shift, and go to state 138
    "')'"  shift, and go to state 139


State 105

   65 unaryExpr: castExpr •

    $default  reduce using rule 65 (unaryExpr)


State 106

   76 mulBinaryExpr: unaryExpr •

    $default  reduce using rule 76 (mulBinaryExpr)


State 107

   66 unaryExpr: unaryOp • unaryExpr

    "a VID (ID with first letter lowercase)"  shift, and go to state 16
    "a TID (ID with first letter uppercase)"  shift, and go to state 21
    "'if'"                                    shift, and go to state 63
    "'not'"                                   shift, and go to state 98
    TK_DINT_LIT                               shift, and go to state 64
    TK_XINT_LIT                               shift, and go to state 65
    TK_FLOAT_LIT                              shift, and go to state 66
    TK_DQSTRING_LIT                           shift, and go to state 38
    TK_SQSTRING_LIT                           shift, and go to state 39
    "'('"                                     shift, and go to state 67
    "'{'"                                     shift, and go to state 68
    "'*'"                                     shift, and go to state 99
    "'+'"                                     shift, and go to state 100
    "'-'"                                     shift, and go to state 101
    "'^'"                                     shift, and go to state 102

    tid              go to state 69
    vid              go to state 70
    floatl           go to state 71
    stringl          go to state 72
    unit             go to state 73
    parenExpr        go to state 74
    primaryExpr      go to state 75
    vparen           go to state 76
    vtuple           go to state 77
    vstruct          go to state 78
    ifThenElse       go to state 79
    chain            go to state 80
    postfixExpr      go to state 81
    vtcall           go to state 82
    vvcall           go to state 83
    castExpr         go to state 105
    unaryExpr        go to state 140
    unaryOp          go to state 107
    typespec         go to state 85
    primaryTypespec  go to state 86
    postfixTypespec  go to state 87


State 108

   30 expr: binaryExpr •

    $default  reduce using rule 30 (expr)


State 109

   77 mulBinaryExpr: mulBinaryExpr • mulBinaryOp unaryExpr
   80 addBinaryExpr: mulBinaryExpr •

    "'*'"  shift, and go to state 141
    "'/'"  shift, and go to state 142
    "'%'"  shift, and go to state 143

    $default  reduce using rule 80 (addBinaryExpr)

    mulBinaryOp  go to state 144


State 110

   81 addBinaryExpr: addBinaryExpr • addBinaryOp mulBinaryExpr
   86 cmpBinaryExpr: addBinaryExpr •

    "'+'"  shift, and go to state 145
    "'-'"  shift, and go to state 146

    $default  reduce using rule 86 (cmpBinaryExpr)

    addBinaryOp  go to state 147


State 111

   87 cmpBinaryExpr: cmpBinaryExpr • cmpBinaryOp addBinaryExpr
   90 eqBinaryExpr: cmpBinaryExpr •

    "'<'"   shift, and go to state 148
    "'<='"  shift, and go to state 149
    "'>'"   shift, and go to state 150
    "'>='"  shift, and go to state 151

    $default  reduce using rule 90 (eqBinaryExpr)

    cmpBinaryOp  go to state 152


State 112

   91 eqBinaryExpr: eqBinaryExpr • eqBinaryOp cmpBinaryExpr
   92 andBinaryExpr: eqBinaryExpr •

    "'=='"  shift, and go to state 153
    "'!='"  shift, and go to state 154

    $default  reduce using rule 92 (andBinaryExpr)

    eqBinaryOp  go to state 155


State 113

   93 andBinaryExpr: andBinaryExpr • "'and'" eqBinaryExpr
   94 xorBinaryExpr: andBinaryExpr •

    "'and'"  shift, and go to state 156

    $default  reduce using rule 94 (xorBinaryExpr)


State 114

   95 xorBinaryExpr: xorBinaryExpr • "'xor'" andBinaryExpr
   96 orBinaryExpr: xorBinaryExpr •

    "'xor'"  shift, and go to state 157

    $default  reduce using rule 96 (orBinaryExpr)


State 115

   72 binaryExpr: orBinaryExpr •
   97 orBinaryExpr: orBinaryExpr • "'or'" xorBinaryExpr

    "'or'"  shift, and go to state 158

    $default  reduce using rule 72 (binaryExpr)


State 116

    9 discardStmt: "'discard'" • expr

    "a VID (ID with first letter lowercase)"  shift, and go to state 16
    "a TID (ID with first letter uppercase)"  shift, and go to state 21
    "'if'"                                    shift, and go to state 63
    "'not'"                                   shift, and go to state 98
    TK_DINT_LIT                               shift, and go to state 64
    TK_XINT_LIT                               shift, and go to state 65
    TK_FLOAT_LIT                              shift, and go to state 66
    TK_DQSTRING_LIT                           shift, and go to state 38
    TK_SQSTRING_LIT                           shift, and go to state 39
    "'('"                                     shift, and go to state 67
    "'{'"                                     shift, and go to state 68
    "'*'"                                     shift, and go to state 99
    "'+'"                                     shift, and go to state 100
    "'-'"                                     shift, and go to state 101
    "'^'"                                     shift, and go to state 102

    tid              go to state 69
    vid              go to state 70
    floatl           go to state 71
    stringl          go to state 72
    unit             go to state 73
    expr             go to state 159
    parenExpr        go to state 74
    primaryExpr      go to state 75
    vparen           go to state 76
    vtuple           go to state 77
    vstruct          go to state 78
    ifThenElse       go to state 79
    chain            go to state 80
    postfixExpr      go to state 81
    vtcall           go to state 82
    vvcall           go to state 83
    castExpr         go to state 105
    unaryExpr        go to state 106
    unaryOp          go to state 107
    binaryExpr       go to state 108
    mulBinaryExpr    go to state 109
    addBinaryExpr    go to state 110
    cmpBinaryExpr    go to state 111
    eqBinaryExpr     go to state 112
    andBinaryExpr    go to state 113
    xorBinaryExpr    go to state 114
    orBinaryExpr     go to state 115
    typespec         go to state 85
    primaryTypespec  go to state 86
    postfixTypespec  go to state 87


State 117

    7 letStmt: "'let'" • lpattern "'='" expr

    "a VID (ID with first letter lowercase)"  shift, and go to state 16
    "'('"                                     shift, and go to state 30

    vid            go to state 44
    unit           go to state 32
    vpatternField  go to state 160
    lpattern       go to state 161
    vpattern       go to state 162


State 118

    8 setStmt: "'set'" • expr "'='" expr

    "a VID (ID with first letter lowercase)"  shift, and go to state 16
    "a TID (ID with first letter uppercase)"  shift, and go to state 21
    "'if'"                                    shift, and go to state 63
    "'not'"                                   shift, and go to state 98
    TK_DINT_LIT                               shift, and go to state 64
    TK_XINT_LIT                               shift, and go to state 65
    TK_FLOAT_LIT                              shift, and go to state 66
    TK_DQSTRING_LIT                           shift, and go to state 38
    TK_SQSTRING_LIT                           shift, and go to state 39
    "'('"                                     shift, and go to state 67
    "'{'"                                     shift, and go to state 68
    "'*'"                                     shift, and go to state 99
    "'+'"                                     shift, and go to state 100
    "'-'"                                     shift, and go to state 101
    "'^'"                                     shift, and go to state 102

    tid              go to state 69
    vid              go to state 70
    floatl           go to state 71
    stringl          go to state 72
    unit             go to state 73
    expr             go to state 163
    parenExpr        go to state 74
    primaryExpr      go to state 75
    vparen           go to state 76
    vtuple           go to state 77
    vstruct          go to state 78
    ifThenElse       go to state 79
    chain            go to state 80
    postfixExpr      go to state 81
    vtcall           go to state 82
    vvcall           go to state 83
    castExpr         go to state 105
    unaryExpr        go to state 106
    unaryOp          go to state 107
    binaryExpr       go to state 108
    mulBinaryExpr    go to state 109
    addBinaryExpr    go to state 110
    cmpBinaryExpr    go to state 111
    eqBinaryExpr     go to state 112
    andBinaryExpr    go to state 113
    xorBinaryExpr    go to state 114
    orBinaryExpr     go to state 115
    typespec         go to state 85
    primaryTypespec  go to state 86
    postfixTypespec  go to state 87


State 119

   55 chainPrefix: chainPrefixStmt • "';'"

    "';'"  shift, and go to state 164


State 120

    4 chainPrefixStmt: letStmt •

    $default  reduce using rule 4 (chainPrefixStmt)


State 121

    5 chainPrefixStmt: setStmt •

    $default  reduce using rule 5 (chainPrefixStmt)


State 122

    6 chainPrefixStmt: discardStmt •

    $default  reduce using rule 6 (chainPrefixStmt)


State 123

   41 primaryExpr: vid •
  111 vstructField: vid • "':'" expr

    "':'"  shift, and go to state 165

    $default  reduce using rule 41 (primaryExpr)


State 124

   52 chain: "'{'" expr • "'}'"

    "'}'"  shift, and go to state 166


State 125

   53 chain: "'{'" chainPrefix • "'}'"
   54      | "'{'" chainPrefix • expr "'}'"
   56 chainPrefix: chainPrefix • chainPrefixStmt "';'"

    "a VID (ID with first letter lowercase)"  shift, and go to state 16
    "a TID (ID with first letter uppercase)"  shift, and go to state 21
    "'if'"                                    shift, and go to state 63
    "'discard'"                               shift, and go to state 116
    "'let'"                                   shift, and go to state 117
    "'set'"                                   shift, and go to state 118
    "'not'"                                   shift, and go to state 98
    TK_DINT_LIT                               shift, and go to state 64
    TK_XINT_LIT                               shift, and go to state 65
    TK_FLOAT_LIT                              shift, and go to state 66
    TK_DQSTRING_LIT                           shift, and go to state 38
    TK_SQSTRING_LIT                           shift, and go to state 39
    "'('"                                     shift, and go to state 67
    "'{'"                                     shift, and go to state 68
    "'}'"                                     shift, and go to state 167
    "'*'"                                     shift, and go to state 99
    "'+'"                                     shift, and go to state 100
    "'-'"                                     shift, and go to state 101
    "'^'"                                     shift, and go to state 102

    chainPrefixStmt  go to state 168
    letStmt          go to state 120
    setStmt          go to state 121
    discardStmt      go to state 122
    tid              go to state 69
    vid              go to state 70
    floatl           go to state 71
    stringl          go to state 72
    unit             go to state 73
    expr             go to state 169
    parenExpr        go to state 74
    primaryExpr      go to state 75
    vparen           go to state 76
    vtuple           go to state 77
    vstruct          go to state 78
    ifThenElse       go to state 79
    chain            go to state 80
    postfixExpr      go to state 81
    vtcall           go to state 82
    vvcall           go to state 83
    castExpr         go to state 105
    unaryExpr        go to state 106
    unaryOp          go to state 107
    binaryExpr       go to state 108
    mulBinaryExpr    go to state 109
    addBinaryExpr    go to state 110
    cmpBinaryExpr    go to state 111
    eqBinaryExpr     go to state 112
    andBinaryExpr    go to state 113
    xorBinaryExpr    go to state 114
    orBinaryExpr     go to state 115
    typespec         go to state 85
    primaryTypespec  go to state 86
    postfixTypespec  go to state 87


State 126

  112 vstructField_cl: vstructField •

    $default  reduce using rule 112 (vstructField_cl)


State 127

   49 vstruct: "'{'" vstructField_cl • "'}'"
  113 vstructField_cl: vstructField_cl • "','" vstructField

    "','"  shift, and go to state 170
    "'}'"  shift, and go to state 171


State 128

   61 vvcall: postfixExpr "'('" • "')'"
   62       | postfixExpr "'('" • expr_cl "')'"

    "a VID (ID with first letter lowercase)"  shift, and go to state 16
    "a TID (ID with first letter uppercase)"  shift, and go to state 21
    "'if'"                                    shift, and go to state 63
    "'not'"                                   shift, and go to state 98
    TK_DINT_LIT                               shift, and go to state 64
    TK_XINT_LIT                               shift, and go to state 65
    TK_FLOAT_LIT                              shift, and go to state 66
    TK_DQSTRING_LIT                           shift, and go to state 38
    TK_SQSTRING_LIT                           shift, and go to state 39
    "'('"                                     shift, and go to state 67
    "')'"                                     shift, and go to state 172
    "'{'"                                     shift, and go to state 68
    "'*'"                                     shift, and go to state 99
    "'+'"                                     shift, and go to state 100
    "'-'"                                     shift, and go to state 101
    "'^'"                                     shift, and go to state 102

    tid              go to state 69
    vid              go to state 70
    floatl           go to state 71
    stringl          go to state 72
    unit             go to state 73
    expr             go to state 173
    expr_cl          go to state 174
    parenExpr        go to state 74
    primaryExpr      go to state 75
    vparen           go to state 76
    vtuple           go to state 77
    vstruct          go to state 78
    ifThenElse       go to state 79
    chain            go to state 80
    postfixExpr      go to state 81
    vtcall           go to state 82
    vvcall           go to state 83
    castExpr         go to state 105
    unaryExpr        go to state 106
    unaryOp          go to state 107
    binaryExpr       go to state 108
    mulBinaryExpr    go to state 109
    addBinaryExpr    go to state 110
    cmpBinaryExpr    go to state 111
    eqBinaryExpr     go to state 112
    andBinaryExpr    go to state 113
    xorBinaryExpr    go to state 114
    orBinaryExpr     go to state 115
    typespec         go to state 85
    primaryTypespec  go to state 86
    postfixTypespec  go to state 87


State 129

   60 vtcall: postfixExpr "'['" • vtarg_cl "']'"

    "a VID (ID with first letter lowercase)"  shift, and go to state 16
    "a TID (ID with first letter uppercase)"  shift, and go to state 21
    "'if'"                                    shift, and go to state 63
    "'not'"                                   shift, and go to state 98
    TK_DINT_LIT                               shift, and go to state 64
    TK_XINT_LIT                               shift, and go to state 65
    TK_FLOAT_LIT                              shift, and go to state 66
    TK_DQSTRING_LIT                           shift, and go to state 38
    TK_SQSTRING_LIT                           shift, and go to state 39
    "'('"                                     shift, and go to state 67
    "'{'"                                     shift, and go to state 68
    "'*'"                                     shift, and go to state 99
    "'+'"                                     shift, and go to state 100
    "'-'"                                     shift, and go to state 101
    "'^'"                                     shift, and go to state 102

    tid              go to state 69
    vid              go to state 70
    floatl           go to state 71
    stringl          go to state 72
    unit             go to state 73
    expr             go to state 175
    parenExpr        go to state 74
    primaryExpr      go to state 75
    vparen           go to state 76
    vtuple           go to state 77
    vstruct          go to state 78
    ifThenElse       go to state 79
    chain            go to state 80
    postfixExpr      go to state 81
    vtcall           go to state 82
    vvcall           go to state 83
    castExpr         go to state 105
    unaryExpr        go to state 106
    unaryOp          go to state 107
    binaryExpr       go to state 108
    mulBinaryExpr    go to state 109
    addBinaryExpr    go to state 110
    cmpBinaryExpr    go to state 111
    eqBinaryExpr     go to state 112
    andBinaryExpr    go to state 113
    xorBinaryExpr    go to state 114
    orBinaryExpr     go to state 115
    typespec         go to state 176
    primaryTypespec  go to state 86
    postfixTypespec  go to state 87
    vtarg            go to state 177
    vtarg_cl         go to state 178


State 130

   64 castExpr: typespec parenExpr •

    $default  reduce using rule 64 (castExpr)


State 131

  101 postfixTypespec: postfixTypespec "'['" • ttarg_cl "']'"

    "a VID (ID with first letter lowercase)"  shift, and go to state 16
    "a TID (ID with first letter uppercase)"  shift, and go to state 21
    "'if'"                                    shift, and go to state 63
    "'not'"                                   shift, and go to state 98
    TK_DINT_LIT                               shift, and go to state 64
    TK_XINT_LIT                               shift, and go to state 65
    TK_FLOAT_LIT                              shift, and go to state 66
    TK_DQSTRING_LIT                           shift, and go to state 38
    TK_SQSTRING_LIT                           shift, and go to state 39
    "'('"                                     shift, and go to state 67
    "'{'"                                     shift, and go to state 68
    "'*'"                                     shift, and go to state 99
    "'+'"                                     shift, and go to state 100
    "'-'"                                     shift, and go to state 101
    "'^'"                                     shift, and go to state 102

    tid              go to state 69
    vid              go to state 70
    floatl           go to state 71
    stringl          go to state 72
    unit             go to state 73
    expr             go to state 179
    parenExpr        go to state 74
    primaryExpr      go to state 75
    vparen           go to state 76
    vtuple           go to state 77
    vstruct          go to state 78
    ifThenElse       go to state 79
    chain            go to state 80
    postfixExpr      go to state 81
    vtcall           go to state 82
    vvcall           go to state 83
    castExpr         go to state 105
    unaryExpr        go to state 106
    unaryOp          go to state 107
    binaryExpr       go to state 108
    mulBinaryExpr    go to state 109
    addBinaryExpr    go to state 110
    cmpBinaryExpr    go to state 111
    eqBinaryExpr     go to state 112
    andBinaryExpr    go to state 113
    xorBinaryExpr    go to state 114
    orBinaryExpr     go to state 115
    typespec         go to state 180
    primaryTypespec  go to state 86
    postfixTypespec  go to state 87
    ttarg            go to state 181
    ttarg_cl         go to state 182


State 132

  102 postfixTypespec: postfixTypespec "'^'" •

    $default  reduce using rule 102 (postfixTypespec)


State 133

   17 defStmt: "'def'" vid tpattern vpattern "'='" castExpr •

    $default  reduce using rule 17 (defStmt)


State 134

  111 vstructField: vid • "':'" expr

    "':'"  shift, and go to state 165


State 135

   50 ifThenElse: "'if'" parenExpr "'then'" • parenExpr
   51           | "'if'" parenExpr "'then'" • parenExpr "'else'" parenExpr

    "'('"  shift, and go to state 67
    "'{'"  shift, and go to state 68

    unit       go to state 73
    parenExpr  go to state 183
    vparen     go to state 76
    vtuple     go to state 77
    vstruct    go to state 78
    chain      go to state 80


State 136

   33 expr_cl2: expr "','" • expr

    "a VID (ID with first letter lowercase)"  shift, and go to state 16
    "a TID (ID with first letter uppercase)"  shift, and go to state 21
    "'if'"                                    shift, and go to state 63
    "'not'"                                   shift, and go to state 98
    TK_DINT_LIT                               shift, and go to state 64
    TK_XINT_LIT                               shift, and go to state 65
    TK_FLOAT_LIT                              shift, and go to state 66
    TK_DQSTRING_LIT                           shift, and go to state 38
    TK_SQSTRING_LIT                           shift, and go to state 39
    "'('"                                     shift, and go to state 67
    "'{'"                                     shift, and go to state 68
    "'*'"                                     shift, and go to state 99
    "'+'"                                     shift, and go to state 100
    "'-'"                                     shift, and go to state 101
    "'^'"                                     shift, and go to state 102

    tid              go to state 69
    vid              go to state 70
    floatl           go to state 71
    stringl          go to state 72
    unit             go to state 73
    expr             go to state 184
    parenExpr        go to state 74
    primaryExpr      go to state 75
    vparen           go to state 76
    vtuple           go to state 77
    vstruct          go to state 78
    ifThenElse       go to state 79
    chain            go to state 80
    postfixExpr      go to state 81
    vtcall           go to state 82
    vvcall           go to state 83
    castExpr         go to state 105
    unaryExpr        go to state 106
    unaryOp          go to state 107
    binaryExpr       go to state 108
    mulBinaryExpr    go to state 109
    addBinaryExpr    go to state 110
    cmpBinaryExpr    go to state 111
    eqBinaryExpr     go to state 112
    andBinaryExpr    go to state 113
    xorBinaryExpr    go to state 114
    orBinaryExpr     go to state 115
    typespec         go to state 85
    primaryTypespec  go to state 86
    postfixTypespec  go to state 87


State 137

   47 vparen: "'('" expr "')'" •

    $default  reduce using rule 47 (vparen)


State 138

   34 expr_cl2: expr_cl2 "','" • expr

    "a VID (ID with first letter lowercase)"  shift, and go to state 16
    "a TID (ID with first letter uppercase)"  shift, and go to state 21
    "'if'"                                    shift, and go to state 63
    "'not'"                                   shift, and go to state 98
    TK_DINT_LIT                               shift, and go to state 64
    TK_XINT_LIT                               shift, and go to state 65
    TK_FLOAT_LIT                              shift, and go to state 66
    TK_DQSTRING_LIT                           shift, and go to state 38
    TK_SQSTRING_LIT                           shift, and go to state 39
    "'('"                                     shift, and go to state 67
    "'{'"                                     shift, and go to state 68
    "'*'"                                     shift, and go to state 99
    "'+'"                                     shift, and go to state 100
    "'-'"                                     shift, and go to state 101
    "'^'"                                     shift, and go to state 102

    tid              go to state 69
    vid              go to state 70
    floatl           go to state 71
    stringl          go to state 72
    unit             go to state 73
    expr             go to state 185
    parenExpr        go to state 74
    primaryExpr      go to state 75
    vparen           go to state 76
    vtuple           go to state 77
    vstruct          go to state 78
    ifThenElse       go to state 79
    chain            go to state 80
    postfixExpr      go to state 81
    vtcall           go to state 82
    vvcall           go to state 83
    castExpr         go to state 105
    unaryExpr        go to state 106
    unaryOp          go to state 107
    binaryExpr       go to state 108
    mulBinaryExpr    go to state 109
    addBinaryExpr    go to state 110
    cmpBinaryExpr    go to state 111
    eqBinaryExpr     go to state 112
    andBinaryExpr    go to state 113
    xorBinaryExpr    go to state 114
    orBinaryExpr     go to state 115
    typespec         go to state 85
    primaryTypespec  go to state 86
    postfixTypespec  go to state 87


State 139

   48 vtuple: "'('" expr_cl2 "')'" •

    $default  reduce using rule 48 (vtuple)


State 140

   66 unaryExpr: unaryOp unaryExpr •

    $default  reduce using rule 66 (unaryExpr)


State 141

   73 mulBinaryOp: "'*'" •

    $default  reduce using rule 73 (mulBinaryOp)


State 142

   74 mulBinaryOp: "'/'" •

    $default  reduce using rule 74 (mulBinaryOp)


State 143

   75 mulBinaryOp: "'%'" •

    $default  reduce using rule 75 (mulBinaryOp)


State 144

   77 mulBinaryExpr: mulBinaryExpr mulBinaryOp • unaryExpr

    "a VID (ID with first letter lowercase)"  shift, and go to state 16
    "a TID (ID with first letter uppercase)"  shift, and go to state 21
    "'if'"                                    shift, and go to state 63
    "'not'"                                   shift, and go to state 98
    TK_DINT_LIT                               shift, and go to state 64
    TK_XINT_LIT                               shift, and go to state 65
    TK_FLOAT_LIT                              shift, and go to state 66
    TK_DQSTRING_LIT                           shift, and go to state 38
    TK_SQSTRING_LIT                           shift, and go to state 39
    "'('"                                     shift, and go to state 67
    "'{'"                                     shift, and go to state 68
    "'*'"                                     shift, and go to state 99
    "'+'"                                     shift, and go to state 100
    "'-'"                                     shift, and go to state 101
    "'^'"                                     shift, and go to state 102

    tid              go to state 69
    vid              go to state 70
    floatl           go to state 71
    stringl          go to state 72
    unit             go to state 73
    parenExpr        go to state 74
    primaryExpr      go to state 75
    vparen           go to state 76
    vtuple           go to state 77
    vstruct          go to state 78
    ifThenElse       go to state 79
    chain            go to state 80
    postfixExpr      go to state 81
    vtcall           go to state 82
    vvcall           go to state 83
    castExpr         go to state 105
    unaryExpr        go to state 186
    unaryOp          go to state 107
    typespec         go to state 85
    primaryTypespec  go to state 86
    postfixTypespec  go to state 87


State 145

   78 addBinaryOp: "'+'" •

    $default  reduce using rule 78 (addBinaryOp)


State 146

   79 addBinaryOp: "'-'" •

    $default  reduce using rule 79 (addBinaryOp)


State 147

   81 addBinaryExpr: addBinaryExpr addBinaryOp • mulBinaryExpr

    "a VID (ID with first letter lowercase)"  shift, and go to state 16
    "a TID (ID with first letter uppercase)"  shift, and go to state 21
    "'if'"                                    shift, and go to state 63
    "'not'"                                   shift, and go to state 98
    TK_DINT_LIT                               shift, and go to state 64
    TK_XINT_LIT                               shift, and go to state 65
    TK_FLOAT_LIT                              shift, and go to state 66
    TK_DQSTRING_LIT                           shift, and go to state 38
    TK_SQSTRING_LIT                           shift, and go to state 39
    "'('"                                     shift, and go to state 67
    "'{'"                                     shift, and go to state 68
    "'*'"                                     shift, and go to state 99
    "'+'"                                     shift, and go to state 100
    "'-'"                                     shift, and go to state 101
    "'^'"                                     shift, and go to state 102

    tid              go to state 69
    vid              go to state 70
    floatl           go to state 71
    stringl          go to state 72
    unit             go to state 73
    parenExpr        go to state 74
    primaryExpr      go to state 75
    vparen           go to state 76
    vtuple           go to state 77
    vstruct          go to state 78
    ifThenElse       go to state 79
    chain            go to state 80
    postfixExpr      go to state 81
    vtcall           go to state 82
    vvcall           go to state 83
    castExpr         go to state 105
    unaryExpr        go to state 106
    unaryOp          go to state 107
    mulBinaryExpr    go to state 187
    typespec         go to state 85
    primaryTypespec  go to state 86
    postfixTypespec  go to state 87


State 148

   82 cmpBinaryOp: "'<'" •

    $default  reduce using rule 82 (cmpBinaryOp)


State 149

   83 cmpBinaryOp: "'<='" •

    $default  reduce using rule 83 (cmpBinaryOp)


State 150

   84 cmpBinaryOp: "'>'" •

    $default  reduce using rule 84 (cmpBinaryOp)


State 151

   85 cmpBinaryOp: "'>='" •

    $default  reduce using rule 85 (cmpBinaryOp)


State 152

   87 cmpBinaryExpr: cmpBinaryExpr cmpBinaryOp • addBinaryExpr

    "a VID (ID with first letter lowercase)"  shift, and go to state 16
    "a TID (ID with first letter uppercase)"  shift, and go to state 21
    "'if'"                                    shift, and go to state 63
    "'not'"                                   shift, and go to state 98
    TK_DINT_LIT                               shift, and go to state 64
    TK_XINT_LIT                               shift, and go to state 65
    TK_FLOAT_LIT                              shift, and go to state 66
    TK_DQSTRING_LIT                           shift, and go to state 38
    TK_SQSTRING_LIT                           shift, and go to state 39
    "'('"                                     shift, and go to state 67
    "'{'"                                     shift, and go to state 68
    "'*'"                                     shift, and go to state 99
    "'+'"                                     shift, and go to state 100
    "'-'"                                     shift, and go to state 101
    "'^'"                                     shift, and go to state 102

    tid              go to state 69
    vid              go to state 70
    floatl           go to state 71
    stringl          go to state 72
    unit             go to state 73
    parenExpr        go to state 74
    primaryExpr      go to state 75
    vparen           go to state 76
    vtuple           go to state 77
    vstruct          go to state 78
    ifThenElse       go to state 79
    chain            go to state 80
    postfixExpr      go to state 81
    vtcall           go to state 82
    vvcall           go to state 83
    castExpr         go to state 105
    unaryExpr        go to state 106
    unaryOp          go to state 107
    mulBinaryExpr    go to state 109
    addBinaryExpr    go to state 188
    typespec         go to state 85
    primaryTypespec  go to state 86
    postfixTypespec  go to state 87


State 153

   88 eqBinaryOp: "'=='" •

    $default  reduce using rule 88 (eqBinaryOp)


State 154

   89 eqBinaryOp: "'!='" •

    $default  reduce using rule 89 (eqBinaryOp)


State 155

   91 eqBinaryExpr: eqBinaryExpr eqBinaryOp • cmpBinaryExpr

    "a VID (ID with first letter lowercase)"  shift, and go to state 16
    "a TID (ID with first letter uppercase)"  shift, and go to state 21
    "'if'"                                    shift, and go to state 63
    "'not'"                                   shift, and go to state 98
    TK_DINT_LIT                               shift, and go to state 64
    TK_XINT_LIT                               shift, and go to state 65
    TK_FLOAT_LIT                              shift, and go to state 66
    TK_DQSTRING_LIT                           shift, and go to state 38
    TK_SQSTRING_LIT                           shift, and go to state 39
    "'('"                                     shift, and go to state 67
    "'{'"                                     shift, and go to state 68
    "'*'"                                     shift, and go to state 99
    "'+'"                                     shift, and go to state 100
    "'-'"                                     shift, and go to state 101
    "'^'"                                     shift, and go to state 102

    tid              go to state 69
    vid              go to state 70
    floatl           go to state 71
    stringl          go to state 72
    unit             go to state 73
    parenExpr        go to state 74
    primaryExpr      go to state 75
    vparen           go to state 76
    vtuple           go to state 77
    vstruct          go to state 78
    ifThenElse       go to state 79
    chain            go to state 80
    postfixExpr      go to state 81
    vtcall           go to state 82
    vvcall           go to state 83
    castExpr         go to state 105
    unaryExpr        go to state 106
    unaryOp          go to state 107
    mulBinaryExpr    go to state 109
    addBinaryExpr    go to state 110
    cmpBinaryExpr    go to state 189
    typespec         go to state 85
    primaryTypespec  go to state 86
    postfixTypespec  go to state 87


State 156

   93 andBinaryExpr: andBinaryExpr "'and'" • eqBinaryExpr

    "a VID (ID with first letter lowercase)"  shift, and go to state 16
    "a TID (ID with first letter uppercase)"  shift, and go to state 21
    "'if'"                                    shift, and go to state 63
    "'not'"                                   shift, and go to state 98
    TK_DINT_LIT                               shift, and go to state 64
    TK_XINT_LIT                               shift, and go to state 65
    TK_FLOAT_LIT                              shift, and go to state 66
    TK_DQSTRING_LIT                           shift, and go to state 38
    TK_SQSTRING_LIT                           shift, and go to state 39
    "'('"                                     shift, and go to state 67
    "'{'"                                     shift, and go to state 68
    "'*'"                                     shift, and go to state 99
    "'+'"                                     shift, and go to state 100
    "'-'"                                     shift, and go to state 101
    "'^'"                                     shift, and go to state 102

    tid              go to state 69
    vid              go to state 70
    floatl           go to state 71
    stringl          go to state 72
    unit             go to state 73
    parenExpr        go to state 74
    primaryExpr      go to state 75
    vparen           go to state 76
    vtuple           go to state 77
    vstruct          go to state 78
    ifThenElse       go to state 79
    chain            go to state 80
    postfixExpr      go to state 81
    vtcall           go to state 82
    vvcall           go to state 83
    castExpr         go to state 105
    unaryExpr        go to state 106
    unaryOp          go to state 107
    mulBinaryExpr    go to state 109
    addBinaryExpr    go to state 110
    cmpBinaryExpr    go to state 111
    eqBinaryExpr     go to state 190
    typespec         go to state 85
    primaryTypespec  go to state 86
    postfixTypespec  go to state 87


State 157

   95 xorBinaryExpr: xorBinaryExpr "'xor'" • andBinaryExpr

    "a VID (ID with first letter lowercase)"  shift, and go to state 16
    "a TID (ID with first letter uppercase)"  shift, and go to state 21
    "'if'"                                    shift, and go to state 63
    "'not'"                                   shift, and go to state 98
    TK_DINT_LIT                               shift, and go to state 64
    TK_XINT_LIT                               shift, and go to state 65
    TK_FLOAT_LIT                              shift, and go to state 66
    TK_DQSTRING_LIT                           shift, and go to state 38
    TK_SQSTRING_LIT                           shift, and go to state 39
    "'('"                                     shift, and go to state 67
    "'{'"                                     shift, and go to state 68
    "'*'"                                     shift, and go to state 99
    "'+'"                                     shift, and go to state 100
    "'-'"                                     shift, and go to state 101
    "'^'"                                     shift, and go to state 102

    tid              go to state 69
    vid              go to state 70
    floatl           go to state 71
    stringl          go to state 72
    unit             go to state 73
    parenExpr        go to state 74
    primaryExpr      go to state 75
    vparen           go to state 76
    vtuple           go to state 77
    vstruct          go to state 78
    ifThenElse       go to state 79
    chain            go to state 80
    postfixExpr      go to state 81
    vtcall           go to state 82
    vvcall           go to state 83
    castExpr         go to state 105
    unaryExpr        go to state 106
    unaryOp          go to state 107
    mulBinaryExpr    go to state 109
    addBinaryExpr    go to state 110
    cmpBinaryExpr    go to state 111
    eqBinaryExpr     go to state 112
    andBinaryExpr    go to state 191
    typespec         go to state 85
    primaryTypespec  go to state 86
    postfixTypespec  go to state 87


State 158

   97 orBinaryExpr: orBinaryExpr "'or'" • xorBinaryExpr

    "a VID (ID with first letter lowercase)"  shift, and go to state 16
    "a TID (ID with first letter uppercase)"  shift, and go to state 21
    "'if'"                                    shift, and go to state 63
    "'not'"                                   shift, and go to state 98
    TK_DINT_LIT                               shift, and go to state 64
    TK_XINT_LIT                               shift, and go to state 65
    TK_FLOAT_LIT                              shift, and go to state 66
    TK_DQSTRING_LIT                           shift, and go to state 38
    TK_SQSTRING_LIT                           shift, and go to state 39
    "'('"                                     shift, and go to state 67
    "'{'"                                     shift, and go to state 68
    "'*'"                                     shift, and go to state 99
    "'+'"                                     shift, and go to state 100
    "'-'"                                     shift, and go to state 101
    "'^'"                                     shift, and go to state 102

    tid              go to state 69
    vid              go to state 70
    floatl           go to state 71
    stringl          go to state 72
    unit             go to state 73
    parenExpr        go to state 74
    primaryExpr      go to state 75
    vparen           go to state 76
    vtuple           go to state 77
    vstruct          go to state 78
    ifThenElse       go to state 79
    chain            go to state 80
    postfixExpr      go to state 81
    vtcall           go to state 82
    vvcall           go to state 83
    castExpr         go to state 105
    unaryExpr        go to state 106
    unaryOp          go to state 107
    mulBinaryExpr    go to state 109
    addBinaryExpr    go to state 110
    cmpBinaryExpr    go to state 111
    eqBinaryExpr     go to state 112
    andBinaryExpr    go to state 113
    xorBinaryExpr    go to state 192
    typespec         go to state 85
    primaryTypespec  go to state 86
    postfixTypespec  go to state 87


State 159

    9 discardStmt: "'discard'" expr •

    $default  reduce using rule 9 (discardStmt)


State 160

  117 lpattern: vpatternField •

    $default  reduce using rule 117 (lpattern)


State 161

    7 letStmt: "'let'" lpattern • "'='" expr

    "'='"  shift, and go to state 193


State 162

  118 lpattern: vpattern •

    $default  reduce using rule 118 (lpattern)


State 163

    8 setStmt: "'set'" expr • "'='" expr

    "'='"  shift, and go to state 194


State 164

   55 chainPrefix: chainPrefixStmt "';'" •

    $default  reduce using rule 55 (chainPrefix)


State 165

  111 vstructField: vid "':'" • expr

    "a VID (ID with first letter lowercase)"  shift, and go to state 16
    "a TID (ID with first letter uppercase)"  shift, and go to state 21
    "'if'"                                    shift, and go to state 63
    "'not'"                                   shift, and go to state 98
    TK_DINT_LIT                               shift, and go to state 64
    TK_XINT_LIT                               shift, and go to state 65
    TK_FLOAT_LIT                              shift, and go to state 66
    TK_DQSTRING_LIT                           shift, and go to state 38
    TK_SQSTRING_LIT                           shift, and go to state 39
    "'('"                                     shift, and go to state 67
    "'{'"                                     shift, and go to state 68
    "'*'"                                     shift, and go to state 99
    "'+'"                                     shift, and go to state 100
    "'-'"                                     shift, and go to state 101
    "'^'"                                     shift, and go to state 102

    tid              go to state 69
    vid              go to state 70
    floatl           go to state 71
    stringl          go to state 72
    unit             go to state 73
    expr             go to state 195
    parenExpr        go to state 74
    primaryExpr      go to state 75
    vparen           go to state 76
    vtuple           go to state 77
    vstruct          go to state 78
    ifThenElse       go to state 79
    chain            go to state 80
    postfixExpr      go to state 81
    vtcall           go to state 82
    vvcall           go to state 83
    castExpr         go to state 105
    unaryExpr        go to state 106
    unaryOp          go to state 107
    binaryExpr       go to state 108
    mulBinaryExpr    go to state 109
    addBinaryExpr    go to state 110
    cmpBinaryExpr    go to state 111
    eqBinaryExpr     go to state 112
    andBinaryExpr    go to state 113
    xorBinaryExpr    go to state 114
    orBinaryExpr     go to state 115
    typespec         go to state 85
    primaryTypespec  go to state 86
    postfixTypespec  go to state 87


State 166

   52 chain: "'{'" expr "'}'" •

    $default  reduce using rule 52 (chain)


State 167

   53 chain: "'{'" chainPrefix "'}'" •

    $default  reduce using rule 53 (chain)


State 168

   56 chainPrefix: chainPrefix chainPrefixStmt • "';'"

    "';'"  shift, and go to state 196


State 169

   54 chain: "'{'" chainPrefix expr • "'}'"

    "'}'"  shift, and go to state 197


State 170

  113 vstructField_cl: vstructField_cl "','" • vstructField

    "a VID (ID with first letter lowercase)"  shift, and go to state 16

    vid           go to state 134
    vstructField  go to state 198


State 171

   49 vstruct: "'{'" vstructField_cl "'}'" •

    $default  reduce using rule 49 (vstruct)


State 172

   61 vvcall: postfixExpr "'('" "')'" •

    $default  reduce using rule 61 (vvcall)


State 173

   31 expr_cl: expr •

    $default  reduce using rule 31 (expr_cl)


State 174

   32 expr_cl: expr_cl • "','" expr
   62 vvcall: postfixExpr "'('" expr_cl • "')'"

    "','"  shift, and go to state 199
    "')'"  shift, and go to state 200


State 175

  108 vtarg: expr •

    $default  reduce using rule 108 (vtarg)


State 176

   64 castExpr: typespec • parenExpr
  107 vtarg: typespec •

    "'('"  shift, and go to state 67
    "'{'"  shift, and go to state 68

    $default  reduce using rule 107 (vtarg)

    unit       go to state 73
    parenExpr  go to state 130
    vparen     go to state 76
    vtuple     go to state 77
    vstruct    go to state 78
    chain      go to state 80


State 177

  109 vtarg_cl: vtarg •

    $default  reduce using rule 109 (vtarg_cl)


State 178

   60 vtcall: postfixExpr "'['" vtarg_cl • "']'"
  110 vtarg_cl: vtarg_cl • "','" vtarg

    "','"  shift, and go to state 201
    "']'"  shift, and go to state 202


State 179

  104 ttarg: expr •

    $default  reduce using rule 104 (ttarg)


State 180

   64 castExpr: typespec • parenExpr
  103 ttarg: typespec •

    "'('"  shift, and go to state 67
    "'{'"  shift, and go to state 68

    $default  reduce using rule 103 (ttarg)

    unit       go to state 73
    parenExpr  go to state 130
    vparen     go to state 76
    vtuple     go to state 77
    vstruct    go to state 78
    chain      go to state 80


State 181

  105 ttarg_cl: ttarg •

    $default  reduce using rule 105 (ttarg_cl)


State 182

  101 postfixTypespec: postfixTypespec "'['" ttarg_cl • "']'"
  106 ttarg_cl: ttarg_cl • "','" ttarg

    "','"  shift, and go to state 203
    "']'"  shift, and go to state 204


State 183

   50 ifThenElse: "'if'" parenExpr "'then'" parenExpr •
   51           | "'if'" parenExpr "'then'" parenExpr • "'else'" parenExpr

    "'else'"  shift, and go to state 205

    $default  reduce using rule 50 (ifThenElse)


State 184

   33 expr_cl2: expr "','" expr •

    $default  reduce using rule 33 (expr_cl2)


State 185

   34 expr_cl2: expr_cl2 "','" expr •

    $default  reduce using rule 34 (expr_cl2)


State 186

   77 mulBinaryExpr: mulBinaryExpr mulBinaryOp unaryExpr •

    $default  reduce using rule 77 (mulBinaryExpr)


State 187

   77 mulBinaryExpr: mulBinaryExpr • mulBinaryOp unaryExpr
   81 addBinaryExpr: addBinaryExpr addBinaryOp mulBinaryExpr •

    "'*'"  shift, and go to state 141
    "'/'"  shift, and go to state 142
    "'%'"  shift, and go to state 143

    $default  reduce using rule 81 (addBinaryExpr)

    mulBinaryOp  go to state 144


State 188

   81 addBinaryExpr: addBinaryExpr • addBinaryOp mulBinaryExpr
   87 cmpBinaryExpr: cmpBinaryExpr cmpBinaryOp addBinaryExpr •

    "'+'"  shift, and go to state 145
    "'-'"  shift, and go to state 146

    $default  reduce using rule 87 (cmpBinaryExpr)

    addBinaryOp  go to state 147


State 189

   87 cmpBinaryExpr: cmpBinaryExpr • cmpBinaryOp addBinaryExpr
   91 eqBinaryExpr: eqBinaryExpr eqBinaryOp cmpBinaryExpr •

    "'<'"   shift, and go to state 148
    "'<='"  shift, and go to state 149
    "'>'"   shift, and go to state 150
    "'>='"  shift, and go to state 151

    $default  reduce using rule 91 (eqBinaryExpr)

    cmpBinaryOp  go to state 152


State 190

   91 eqBinaryExpr: eqBinaryExpr • eqBinaryOp cmpBinaryExpr
   93 andBinaryExpr: andBinaryExpr "'and'" eqBinaryExpr •

    "'=='"  shift, and go to state 153
    "'!='"  shift, and go to state 154

    $default  reduce using rule 93 (andBinaryExpr)

    eqBinaryOp  go to state 155


State 191

   93 andBinaryExpr: andBinaryExpr • "'and'" eqBinaryExpr
   95 xorBinaryExpr: xorBinaryExpr "'xor'" andBinaryExpr •

    "'and'"  shift, and go to state 156

    $default  reduce using rule 95 (xorBinaryExpr)


State 192

   95 xorBinaryExpr: xorBinaryExpr • "'xor'" andBinaryExpr
   97 orBinaryExpr: orBinaryExpr "'or'" xorBinaryExpr •

    "'xor'"  shift, and go to state 157

    $default  reduce using rule 97 (orBinaryExpr)


State 193

    7 letStmt: "'let'" lpattern "'='" • expr

    "a VID (ID with first letter lowercase)"  shift, and go to state 16
    "a TID (ID with first letter uppercase)"  shift, and go to state 21
    "'if'"                                    shift, and go to state 63
    "'not'"                                   shift, and go to state 98
    TK_DINT_LIT                               shift, and go to state 64
    TK_XINT_LIT                               shift, and go to state 65
    TK_FLOAT_LIT                              shift, and go to state 66
    TK_DQSTRING_LIT                           shift, and go to state 38
    TK_SQSTRING_LIT                           shift, and go to state 39
    "'('"                                     shift, and go to state 67
    "'{'"                                     shift, and go to state 68
    "'*'"                                     shift, and go to state 99
    "'+'"                                     shift, and go to state 100
    "'-'"                                     shift, and go to state 101
    "'^'"                                     shift, and go to state 102

    tid              go to state 69
    vid              go to state 70
    floatl           go to state 71
    stringl          go to state 72
    unit             go to state 73
    expr             go to state 206
    parenExpr        go to state 74
    primaryExpr      go to state 75
    vparen           go to state 76
    vtuple           go to state 77
    vstruct          go to state 78
    ifThenElse       go to state 79
    chain            go to state 80
    postfixExpr      go to state 81
    vtcall           go to state 82
    vvcall           go to state 83
    castExpr         go to state 105
    unaryExpr        go to state 106
    unaryOp          go to state 107
    binaryExpr       go to state 108
    mulBinaryExpr    go to state 109
    addBinaryExpr    go to state 110
    cmpBinaryExpr    go to state 111
    eqBinaryExpr     go to state 112
    andBinaryExpr    go to state 113
    xorBinaryExpr    go to state 114
    orBinaryExpr     go to state 115
    typespec         go to state 85
    primaryTypespec  go to state 86
    postfixTypespec  go to state 87


State 194

    8 setStmt: "'set'" expr "'='" • expr

    "a VID (ID with first letter lowercase)"  shift, and go to state 16
    "a TID (ID with first letter uppercase)"  shift, and go to state 21
    "'if'"                                    shift, and go to state 63
    "'not'"                                   shift, and go to state 98
    TK_DINT_LIT                               shift, and go to state 64
    TK_XINT_LIT                               shift, and go to state 65
    TK_FLOAT_LIT                              shift, and go to state 66
    TK_DQSTRING_LIT                           shift, and go to state 38
    TK_SQSTRING_LIT                           shift, and go to state 39
    "'('"                                     shift, and go to state 67
    "'{'"                                     shift, and go to state 68
    "'*'"                                     shift, and go to state 99
    "'+'"                                     shift, and go to state 100
    "'-'"                                     shift, and go to state 101
    "'^'"                                     shift, and go to state 102

    tid              go to state 69
    vid              go to state 70
    floatl           go to state 71
    stringl          go to state 72
    unit             go to state 73
    expr             go to state 207
    parenExpr        go to state 74
    primaryExpr      go to state 75
    vparen           go to state 76
    vtuple           go to state 77
    vstruct          go to state 78
    ifThenElse       go to state 79
    chain            go to state 80
    postfixExpr      go to state 81
    vtcall           go to state 82
    vvcall           go to state 83
    castExpr         go to state 105
    unaryExpr        go to state 106
    unaryOp          go to state 107
    binaryExpr       go to state 108
    mulBinaryExpr    go to state 109
    addBinaryExpr    go to state 110
    cmpBinaryExpr    go to state 111
    eqBinaryExpr     go to state 112
    andBinaryExpr    go to state 113
    xorBinaryExpr    go to state 114
    orBinaryExpr     go to state 115
    typespec         go to state 85
    primaryTypespec  go to state 86
    postfixTypespec  go to state 87


State 195

  111 vstructField: vid "':'" expr •

    $default  reduce using rule 111 (vstructField)


State 196

   56 chainPrefix: chainPrefix chainPrefixStmt "';'" •

    $default  reduce using rule 56 (chainPrefix)


State 197

   54 chain: "'{'" chainPrefix expr "'}'" •

    $default  reduce using rule 54 (chain)


State 198

  113 vstructField_cl: vstructField_cl "','" vstructField •

    $default  reduce using rule 113 (vstructField_cl)


State 199

   32 expr_cl: expr_cl "','" • expr

    "a VID (ID with first letter lowercase)"  shift, and go to state 16
    "a TID (ID with first letter uppercase)"  shift, and go to state 21
    "'if'"                                    shift, and go to state 63
    "'not'"                                   shift, and go to state 98
    TK_DINT_LIT                               shift, and go to state 64
    TK_XINT_LIT                               shift, and go to state 65
    TK_FLOAT_LIT                              shift, and go to state 66
    TK_DQSTRING_LIT                           shift, and go to state 38
    TK_SQSTRING_LIT                           shift, and go to state 39
    "'('"                                     shift, and go to state 67
    "'{'"                                     shift, and go to state 68
    "'*'"                                     shift, and go to state 99
    "'+'"                                     shift, and go to state 100
    "'-'"                                     shift, and go to state 101
    "'^'"                                     shift, and go to state 102

    tid              go to state 69
    vid              go to state 70
    floatl           go to state 71
    stringl          go to state 72
    unit             go to state 73
    expr             go to state 208
    parenExpr        go to state 74
    primaryExpr      go to state 75
    vparen           go to state 76
    vtuple           go to state 77
    vstruct          go to state 78
    ifThenElse       go to state 79
    chain            go to state 80
    postfixExpr      go to state 81
    vtcall           go to state 82
    vvcall           go to state 83
    castExpr         go to state 105
    unaryExpr        go to state 106
    unaryOp          go to state 107
    binaryExpr       go to state 108
    mulBinaryExpr    go to state 109
    addBinaryExpr    go to state 110
    cmpBinaryExpr    go to state 111
    eqBinaryExpr     go to state 112
    andBinaryExpr    go to state 113
    xorBinaryExpr    go to state 114
    orBinaryExpr     go to state 115
    typespec         go to state 85
    primaryTypespec  go to state 86
    postfixTypespec  go to state 87


State 200

   62 vvcall: postfixExpr "'('" expr_cl "')'" •

    $default  reduce using rule 62 (vvcall)


State 201

  110 vtarg_cl: vtarg_cl "','" • vtarg

    "a VID (ID with first letter lowercase)"  shift, and go to state 16
    "a TID (ID with first letter uppercase)"  shift, and go to state 21
    "'if'"                                    shift, and go to state 63
    "'not'"                                   shift, and go to state 98
    TK_DINT_LIT                               shift, and go to state 64
    TK_XINT_LIT                               shift, and go to state 65
    TK_FLOAT_LIT                              shift, and go to state 66
    TK_DQSTRING_LIT                           shift, and go to state 38
    TK_SQSTRING_LIT                           shift, and go to state 39
    "'('"                                     shift, and go to state 67
    "'{'"                                     shift, and go to state 68
    "'*'"                                     shift, and go to state 99
    "'+'"                                     shift, and go to state 100
    "'-'"                                     shift, and go to state 101
    "'^'"                                     shift, and go to state 102

    tid              go to state 69
    vid              go to state 70
    floatl           go to state 71
    stringl          go to state 72
    unit             go to state 73
    expr             go to state 175
    parenExpr        go to state 74
    primaryExpr      go to state 75
    vparen           go to state 76
    vtuple           go to state 77
    vstruct          go to state 78
    ifThenElse       go to state 79
    chain            go to state 80
    postfixExpr      go to state 81
    vtcall           go to state 82
    vvcall           go to state 83
    castExpr         go to state 105
    unaryExpr        go to state 106
    unaryOp          go to state 107
    binaryExpr       go to state 108
    mulBinaryExpr    go to state 109
    addBinaryExpr    go to state 110
    cmpBinaryExpr    go to state 111
    eqBinaryExpr     go to state 112
    andBinaryExpr    go to state 113
    xorBinaryExpr    go to state 114
    orBinaryExpr     go to state 115
    typespec         go to state 176
    primaryTypespec  go to state 86
    postfixTypespec  go to state 87
    vtarg            go to state 209


State 202

   60 vtcall: postfixExpr "'['" vtarg_cl "']'" •

    $default  reduce using rule 60 (vtcall)


State 203

  106 ttarg_cl: ttarg_cl "','" • ttarg

    "a VID (ID with first letter lowercase)"  shift, and go to state 16
    "a TID (ID with first letter uppercase)"  shift, and go to state 21
    "'if'"                                    shift, and go to state 63
    "'not'"                                   shift, and go to state 98
    TK_DINT_LIT                               shift, and go to state 64
    TK_XINT_LIT                               shift, and go to state 65
    TK_FLOAT_LIT                              shift, and go to state 66
    TK_DQSTRING_LIT                           shift, and go to state 38
    TK_SQSTRING_LIT                           shift, and go to state 39
    "'('"                                     shift, and go to state 67
    "'{'"                                     shift, and go to state 68
    "'*'"                                     shift, and go to state 99
    "'+'"                                     shift, and go to state 100
    "'-'"                                     shift, and go to state 101
    "'^'"                                     shift, and go to state 102

    tid              go to state 69
    vid              go to state 70
    floatl           go to state 71
    stringl          go to state 72
    unit             go to state 73
    expr             go to state 179
    parenExpr        go to state 74
    primaryExpr      go to state 75
    vparen           go to state 76
    vtuple           go to state 77
    vstruct          go to state 78
    ifThenElse       go to state 79
    chain            go to state 80
    postfixExpr      go to state 81
    vtcall           go to state 82
    vvcall           go to state 83
    castExpr         go to state 105
    unaryExpr        go to state 106
    unaryOp          go to state 107
    binaryExpr       go to state 108
    mulBinaryExpr    go to state 109
    addBinaryExpr    go to state 110
    cmpBinaryExpr    go to state 111
    eqBinaryExpr     go to state 112
    andBinaryExpr    go to state 113
    xorBinaryExpr    go to state 114
    orBinaryExpr     go to state 115
    typespec         go to state 180
    primaryTypespec  go to state 86
    postfixTypespec  go to state 87
    ttarg            go to state 210


State 204

  101 postfixTypespec: postfixTypespec "'['" ttarg_cl "']'" •

    $default  reduce using rule 101 (postfixTypespec)


State 205

   51 ifThenElse: "'if'" parenExpr "'then'" parenExpr "'else'" • parenExpr

    "'('"  shift, and go to state 67
    "'{'"  shift, and go to state 68

    unit       go to state 73
    parenExpr  go to state 211
    vparen     go to state 76
    vtuple     go to state 77
    vstruct    go to state 78
    chain      go to state 80


State 206

    7 letStmt: "'let'" lpattern "'='" expr •

    $default  reduce using rule 7 (letStmt)


State 207

    8 setStmt: "'set'" expr "'='" expr •

    $default  reduce using rule 8 (setStmt)


State 208

   32 expr_cl: expr_cl "','" expr •

    $default  reduce using rule 32 (expr_cl)


State 209

  110 vtarg_cl: vtarg_cl "','" vtarg •

    $default  reduce using rule 110 (vtarg_cl)


State 210

  106 ttarg_cl: ttarg_cl "','" ttarg •

    $default  reduce using rule 106 (ttarg_cl)


State 211

   51 ifThenElse: "'if'" parenExpr "'then'" parenExpr "'else'" parenExpr •

    $default  reduce using rule 51 (ifThenElse)
