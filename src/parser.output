Terminals unused in grammar

    "a HOLE (ID without any letters)"
    "'namespace'"
    "'do'"
    "'operator'"
    "'match'"
    "'with'"
    "'return'"
    "'discard'"
    "'require'"
    "'export'"
    "'fun'"
    "'::'"
    "':::'"
    "'$'"
    "'!'"
    "EOS"


Grammar

    0 $accept: script $end

    1 script: scriptContent

    2 scriptContent: scriptContentStmt "';'"
    3              | scriptContent scriptContentStmt "';'"

    4 scriptContentStmt: moduleStmt

    5 moduleStmt: "'mod'" "a VID (ID with first letter lowercase)" "'{'" moduleContent "'}'"

    6 moduleContent: moduleContentStmt "';'"
    7              | moduleContent moduleContentStmt "';'"

    8 chainPrefixStmt: letStmt
    9                | setStmt
   10                | discardStmt

   11 letStmt: "'let'" lpattern "'='" expr

   12 setStmt: "'set'" expr "'='" expr

   13 discardStmt: expr

   14 moduleContentStmt: defStmt
   15                  | typedefStmt
   16                  | typedefStmt_enum
   17                  | importStmt
   18                  | linkStmt
   19                  | moduleStmt

   20 defStmt: "'def'" vid vpattern "'->'" castExpr
   21        | "'def'" vid tpattern vpattern "'->'" castExpr

   22 typedefStmt: "'type'" tid tpattern "'='" typespec

   23 typedefStmt_enum: "'enum'" tid tpattern "'='" vstruct

   24 importStmt: "'import'" vid "'from'" stringl "'as'" stringl

   25 linkStmt: "'link'" stringl "'{'" linkStmtContent "'}'"

   26 linkStmtItem: vid vpattern "'->'" typespec "'from'" stringl

   27 linkStmtContent: linkStmtItem "';'"
   28                | linkStmtContent linkStmtItem "';'"

   29 tid: "a TID (ID with first letter uppercase)"

   30 vid: "a VID (ID with first letter lowercase)"

   31 floatl: TK_FLOAT_LIT

   32 stringl: TK_SQSTRING_LIT
   33        | TK_DQSTRING_LIT

   34 unit: "'('" "')'"

   35 expr: binaryExpr

   36 expr_cl: expr
   37        | expr_cl "','" expr

   38 expr_cl2: expr "','" expr
   39         | expr_cl2 "','" expr

   40 parenExpr: unit
   41          | vparen
   42          | vtuple
   43          | vstruct
   44          | chain

   45 primaryExpr: parenExpr
   46            | vid
   47            | TK_DINT_LIT
   48            | TK_XINT_LIT
   49            | floatl
   50            | stringl
   51            | ifThenElse

   52 vparen: "'('" expr "')'"

   53 vtuple: "'('" expr_cl2 "')'"

   54 vstruct: "'{'" vstructField_cl "'}'"

   55 ifThenElse: "'if'" parenExpr "'then'" parenExpr
   56           | "'if'" parenExpr "'then'" parenExpr "'else'" parenExpr

   57 chain: "'{'" expr "'}'"
   58      | "'{'" chainPrefix "'}'"
   59      | "'{'" chainPrefix expr "'}'"

   60 chainPrefix: chainPrefixStmt "';'"
   61            | chainPrefix chainPrefixStmt "';'"

   62 postfixExpr: primaryExpr
   63            | vtcall
   64            | vvcall
   65            | dotNmExpr
   66            | dotIxExpr
   67            | colonNmExpr

   68 vtcall: postfixExpr "'['" vtarg_cl "']'"

   69 vvcall: postfixExpr "'('" "')'"
   70       | postfixExpr "'('" expr_cl "')'"

   71 dotNmExpr: postfixExpr "'.'" "a VID (ID with first letter lowercase)"

   72 dotIxExpr: postfixExpr "'.'" TK_DINT_LIT

   73 colonNmExpr: postfixExpr "':'" "a VID (ID with first letter lowercase)"

   74 castExpr: postfixExpr
   75         | typespec parenExpr

   76 unaryExpr: castExpr
   77          | unaryOp unaryExpr

   78 unaryOp: "'+'"
   79        | "'-'"
   80        | "'*'"
   81        | "'^'"
   82        | "'not'"

   83 binaryExpr: orBinaryExpr

   84 mulBinaryOp: "'*'"
   85            | "'/'"
   86            | "'%'"

   87 mulBinaryExpr: unaryExpr
   88              | mulBinaryExpr mulBinaryOp unaryExpr

   89 addBinaryOp: "'+'"
   90            | "'-'"

   91 addBinaryExpr: mulBinaryExpr
   92              | addBinaryExpr addBinaryOp mulBinaryExpr

   93 cmpBinaryOp: "'<'"
   94            | "'<='"
   95            | "'>'"
   96            | "'>='"

   97 cmpBinaryExpr: addBinaryExpr
   98              | cmpBinaryExpr cmpBinaryOp addBinaryExpr

   99 eqBinaryOp: "'=='"
  100           | "'!='"

  101 eqBinaryExpr: cmpBinaryExpr
  102             | eqBinaryExpr eqBinaryOp cmpBinaryExpr

  103 andBinaryExpr: eqBinaryExpr
  104              | andBinaryExpr "'and'" eqBinaryExpr

  105 xorBinaryExpr: andBinaryExpr
  106              | xorBinaryExpr "'xor'" andBinaryExpr

  107 orBinaryExpr: xorBinaryExpr
  108             | orBinaryExpr "'or'" xorBinaryExpr

  109 typespec: postfixTypespec

  110 typespec_cl: typespec
  111            | typespec_cl "','" typespec

  112 primaryTypespec: tid
  113                | "'Tuple'" "'['" typespec_cl "']'"
  114                | "'Array'" "'['" typespec "','" expr "']'"

  115 postfixTypespec: primaryTypespec
  116                | postfixTypespec "'['" ttarg_cl "']'"
  117                | postfixTypespec "'^'"

  118 ttarg: typespec
  119      | expr

  120 ttarg_cl: ttarg
  121         | ttarg_cl "','" ttarg

  122 vtarg: typespec
  123      | expr

  124 vtarg_cl: vtarg
  125         | vtarg_cl "','" vtarg

  126 vstructField: vid "'='" expr

  127 vstructField_cl: vstructField
  128                | vstructField_cl "','" vstructField

  129 vpatternField: vid typespec

  130 lpatternField: vpatternField
  131              | vid

  132 tpatternField: tid
  133              | vpatternField

  134 lpattern: lpatternField
  135         | "'('" lpatternField_cl "')'"
  136         | unit

  137 vpattern: "'('" vpatternField_cl "')'"
  138         | unit

  139 tpattern: "'['" tpatternField_cl "']'"

  140 vpatternField_cl: vpatternField
  141                 | vpatternField_cl "','" vpatternField

  142 lpatternField_cl: lpatternField
  143                 | lpatternField_cl "','" lpatternField

  144 tpatternField_cl: tpatternField
  145                 | tpatternField_cl "','" tpatternField


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    "a VID (ID with first letter lowercase)" <token> (258) 5 30 71 73
    "a TID (ID with first letter uppercase)" <token> (259) 29
    "a HOLE (ID without any letters)" <token> (260)
    "'namespace'" (261)
    "'mod'" (262) 5
    "'do'" (263)
    "'if'" (264) 55 56
    "'then'" (265) 55 56
    "'else'" (266) 56
    "'operator'" (267)
    "'match'" (268)
    "'with'" (269)
    "'return'" (270)
    "'discard'" (271)
    "'require'" (272)
    "'import'" (273) 24
    "'export'" (274)
    "'link'" (275) 25
    "'from'" (276) 24 26
    "'as'" (277) 24
    "'fun'" (278)
    "'let'" (279) 11
    "'set'" (280) 12
    "'def'" (281) 20 21
    "'type'" (282) 22
    "'enum'" (283) 23
    "'and'" (284) 104
    "'xor'" (285) 106
    "'or'" (286) 108
    "'not'" (287) 82
    "'Tuple'" (288) 113
    "'Array'" (289) 114
    TK_DINT_LIT <token> (290) 47 72
    TK_XINT_LIT <token> (291) 48
    TK_FLOAT_LIT <token> (292) 31
    TK_DQSTRING_LIT <token> (293) 33
    TK_SQSTRING_LIT <token> (294) 32
    "'.'" (295) 71 72
    "':'" (296) 73
    "','" (297) 37 38 39 111 114 121 125 128 141 143 145
    "';'" (298) 2 3 6 7 27 28 60 61
    "'::'" (299)
    "':::'" (300)
    "'('" (301) 34 52 53 69 70 135 137
    "')'" (302) 34 52 53 69 70 135 137
    "'['" (303) 68 113 114 116 139
    "']'" (304) 68 113 114 116 139
    "'{'" (305) 5 25 54 57 58 59
    "'}'" (306) 5 25 54 57 58 59
    "'->'" (307) 20 21 26
    "'*'" (308) 80 84
    "'/'" (309) 85
    "'%'" (310) 86
    "'+'" (311) 78 89
    "'-'" (312) 79 90
    "'<'" (313) 93
    "'<='" (314) 94
    "'>'" (315) 95
    "'>='" (316) 96
    "'='" (317) 11 12 22 23 126
    "'=='" (318) 99
    "'!='" (319) 100
    "'$'" (320)
    "'^'" (321) 81 117
    "'!'" (322)
    "EOS" (323)


Nonterminals, with rules where they appear

    $accept (69)
        on left: 0
    script <nt> (70)
        on left: 1
        on right: 0
    scriptContent <ntSb> (71)
        on left: 2 3
        on right: 1 3
    scriptContentStmt <nt> (72)
        on left: 4
        on right: 2 3
    moduleStmt <nt> (73)
        on left: 5
        on right: 4 19
    moduleContent <ntSb> (74)
        on left: 6 7
        on right: 5 7
    chainPrefixStmt <nt> (75)
        on left: 8 9 10
        on right: 60 61
    letStmt <nt> (76)
        on left: 11
        on right: 8
    setStmt <nt> (77)
        on left: 12
        on right: 9
    discardStmt <nt> (78)
        on left: 13
        on right: 10
    moduleContentStmt <nt> (79)
        on left: 14 15 16 17 18 19
        on right: 6 7
    defStmt <nt> (80)
        on left: 20 21
        on right: 14
    typedefStmt <nt> (81)
        on left: 22
        on right: 15
    typedefStmt_enum <nt> (82)
        on left: 23
        on right: 16
    importStmt <nt> (83)
        on left: 24
        on right: 17
    linkStmt <nt> (84)
        on left: 25
        on right: 18
    linkStmtItem <nt> (85)
        on left: 26
        on right: 27 28
    linkStmtContent <ntSb> (86)
        on left: 27 28
        on right: 25 28
    tid <token> (87)
        on left: 29
        on right: 22 23 112 132
    vid <token> (88)
        on left: 30
        on right: 20 21 24 26 46 126 129 131
    floatl <token> (89)
        on left: 31
        on right: 49
    stringl <token> (90)
        on left: 32 33
        on right: 24 25 26 50
    unit <nt> (91)
        on left: 34
        on right: 40 136 138
    expr <nt> (92)
        on left: 35
        on right: 11 12 13 36 37 38 39 52 57 59 114 119 123 126
    expr_cl <ntSb> (93)
        on left: 36 37
        on right: 37 70
    expr_cl2 <ntSb> (94)
        on left: 38 39
        on right: 39 53
    parenExpr <nt> (95)
        on left: 40 41 42 43 44
        on right: 45 55 56 75
    primaryExpr <nt> (96)
        on left: 45 46 47 48 49 50 51
        on right: 62
    vparen <nt> (97)
        on left: 52
        on right: 41
    vtuple <nt> (98)
        on left: 53
        on right: 42
    vstruct <nt> (99)
        on left: 54
        on right: 23 43
    ifThenElse <nt> (100)
        on left: 55 56
        on right: 51
    chain <nt> (101)
        on left: 57 58 59
        on right: 44
    chainPrefix <ntSb> (102)
        on left: 60 61
        on right: 58 59 61
    postfixExpr <nt> (103)
        on left: 62 63 64 65 66 67
        on right: 68 69 70 71 72 73 74
    vtcall <nt> (104)
        on left: 68
        on right: 63
    vvcall <nt> (105)
        on left: 69 70
        on right: 64
    dotNmExpr <nt> (106)
        on left: 71
        on right: 65
    dotIxExpr <nt> (107)
        on left: 72
        on right: 66
    colonNmExpr <nt> (108)
        on left: 73
        on right: 67
    castExpr <nt> (109)
        on left: 74 75
        on right: 20 21 76
    unaryExpr <nt> (110)
        on left: 76 77
        on right: 77 87 88
    unaryOp <uop> (111)
        on left: 78 79 80 81 82
        on right: 77
    binaryExpr <nt> (112)
        on left: 83
        on right: 35
    mulBinaryOp <bop> (113)
        on left: 84 85 86
        on right: 88
    mulBinaryExpr <nt> (114)
        on left: 87 88
        on right: 88 91 92
    addBinaryOp <bop> (115)
        on left: 89 90
        on right: 92
    addBinaryExpr <nt> (116)
        on left: 91 92
        on right: 92 97 98
    cmpBinaryOp <bop> (117)
        on left: 93 94 95 96
        on right: 98
    cmpBinaryExpr <nt> (118)
        on left: 97 98
        on right: 98 101 102
    eqBinaryOp <bop> (119)
        on left: 99 100
        on right: 102
    eqBinaryExpr <nt> (120)
        on left: 101 102
        on right: 102 103 104
    andBinaryExpr <nt> (121)
        on left: 103 104
        on right: 104 105 106
    xorBinaryExpr <nt> (122)
        on left: 105 106
        on right: 106 107 108
    orBinaryExpr <nt> (123)
        on left: 107 108
        on right: 83 108
    typespec <nt> (124)
        on left: 109
        on right: 22 26 75 110 111 114 118 122 129
    typespec_cl <ntSb> (125)
        on left: 110 111
        on right: 111 113
    primaryTypespec <nt> (126)
        on left: 112 113 114
        on right: 115
    postfixTypespec <nt> (127)
        on left: 115 116 117
        on right: 109 116 117
    ttarg <nt> (128)
        on left: 118 119
        on right: 120 121
    ttarg_cl <ntSb> (129)
        on left: 120 121
        on right: 116 121
    vtarg <nt> (130)
        on left: 122 123
        on right: 124 125
    vtarg_cl <ntSb> (131)
        on left: 124 125
        on right: 68 125
    vstructField <nt> (132)
        on left: 126
        on right: 127 128
    vstructField_cl <ntSb> (133)
        on left: 127 128
        on right: 54 128
    vpatternField <nt> (134)
        on left: 129
        on right: 130 133 140 141
    lpatternField <nt> (135)
        on left: 130 131
        on right: 134 142 143
    tpatternField <nt> (136)
        on left: 132 133
        on right: 144 145
    lpattern <nt> (137)
        on left: 134 135 136
        on right: 11
    vpattern <nt> (138)
        on left: 137 138
        on right: 20 21 26
    tpattern <nt> (139)
        on left: 139
        on right: 21 22 23
    vpatternField_cl <ntSb> (140)
        on left: 140 141
        on right: 137 141
    lpatternField_cl <ntSb> (141)
        on left: 142 143
        on right: 135 143
    tpatternField_cl <ntSb> (142)
        on left: 144 145
        on right: 139 145


State 0

    0 $accept: • script $end

    "'mod'"  shift, and go to state 1

    script             go to state 2
    scriptContent      go to state 3
    scriptContentStmt  go to state 4
    moduleStmt         go to state 5


State 1

    5 moduleStmt: "'mod'" • "a VID (ID with first letter lowercase)" "'{'" moduleContent "'}'"

    "a VID (ID with first letter lowercase)"  shift, and go to state 6


State 2

    0 $accept: script • $end

    $end  shift, and go to state 7


State 3

    1 script: scriptContent •
    3 scriptContent: scriptContent • scriptContentStmt "';'"

    "'mod'"  shift, and go to state 1

    $default  reduce using rule 1 (script)

    scriptContentStmt  go to state 8
    moduleStmt         go to state 5


State 4

    2 scriptContent: scriptContentStmt • "';'"

    "';'"  shift, and go to state 9


State 5

    4 scriptContentStmt: moduleStmt •

    $default  reduce using rule 4 (scriptContentStmt)


State 6

    5 moduleStmt: "'mod'" "a VID (ID with first letter lowercase)" • "'{'" moduleContent "'}'"

    "'{'"  shift, and go to state 10


State 7

    0 $accept: script $end •

    $default  accept


State 8

    3 scriptContent: scriptContent scriptContentStmt • "';'"

    "';'"  shift, and go to state 11


State 9

    2 scriptContent: scriptContentStmt "';'" •

    $default  reduce using rule 2 (scriptContent)


State 10

    5 moduleStmt: "'mod'" "a VID (ID with first letter lowercase)" "'{'" • moduleContent "'}'"

    "'mod'"     shift, and go to state 1
    "'import'"  shift, and go to state 12
    "'link'"    shift, and go to state 13
    "'def'"     shift, and go to state 14
    "'type'"    shift, and go to state 15
    "'enum'"    shift, and go to state 16

    moduleStmt         go to state 17
    moduleContent      go to state 18
    moduleContentStmt  go to state 19
    defStmt            go to state 20
    typedefStmt        go to state 21
    typedefStmt_enum   go to state 22
    importStmt         go to state 23
    linkStmt           go to state 24


State 11

    3 scriptContent: scriptContent scriptContentStmt "';'" •

    $default  reduce using rule 3 (scriptContent)


State 12

   24 importStmt: "'import'" • vid "'from'" stringl "'as'" stringl

    "a VID (ID with first letter lowercase)"  shift, and go to state 25

    vid  go to state 26


State 13

   25 linkStmt: "'link'" • stringl "'{'" linkStmtContent "'}'"

    TK_DQSTRING_LIT  shift, and go to state 27
    TK_SQSTRING_LIT  shift, and go to state 28

    stringl  go to state 29


State 14

   20 defStmt: "'def'" • vid vpattern "'->'" castExpr
   21        | "'def'" • vid tpattern vpattern "'->'" castExpr

    "a VID (ID with first letter lowercase)"  shift, and go to state 25

    vid  go to state 30


State 15

   22 typedefStmt: "'type'" • tid tpattern "'='" typespec

    "a TID (ID with first letter uppercase)"  shift, and go to state 31

    tid  go to state 32


State 16

   23 typedefStmt_enum: "'enum'" • tid tpattern "'='" vstruct

    "a TID (ID with first letter uppercase)"  shift, and go to state 31

    tid  go to state 33


State 17

   19 moduleContentStmt: moduleStmt •

    $default  reduce using rule 19 (moduleContentStmt)


State 18

    5 moduleStmt: "'mod'" "a VID (ID with first letter lowercase)" "'{'" moduleContent • "'}'"
    7 moduleContent: moduleContent • moduleContentStmt "';'"

    "'mod'"     shift, and go to state 1
    "'import'"  shift, and go to state 12
    "'link'"    shift, and go to state 13
    "'def'"     shift, and go to state 14
    "'type'"    shift, and go to state 15
    "'enum'"    shift, and go to state 16
    "'}'"       shift, and go to state 34

    moduleStmt         go to state 17
    moduleContentStmt  go to state 35
    defStmt            go to state 20
    typedefStmt        go to state 21
    typedefStmt_enum   go to state 22
    importStmt         go to state 23
    linkStmt           go to state 24


State 19

    6 moduleContent: moduleContentStmt • "';'"

    "';'"  shift, and go to state 36


State 20

   14 moduleContentStmt: defStmt •

    $default  reduce using rule 14 (moduleContentStmt)


State 21

   15 moduleContentStmt: typedefStmt •

    $default  reduce using rule 15 (moduleContentStmt)


State 22

   16 moduleContentStmt: typedefStmt_enum •

    $default  reduce using rule 16 (moduleContentStmt)


State 23

   17 moduleContentStmt: importStmt •

    $default  reduce using rule 17 (moduleContentStmt)


State 24

   18 moduleContentStmt: linkStmt •

    $default  reduce using rule 18 (moduleContentStmt)


State 25

   30 vid: "a VID (ID with first letter lowercase)" •

    $default  reduce using rule 30 (vid)


State 26

   24 importStmt: "'import'" vid • "'from'" stringl "'as'" stringl

    "'from'"  shift, and go to state 37


State 27

   33 stringl: TK_DQSTRING_LIT •

    $default  reduce using rule 33 (stringl)


State 28

   32 stringl: TK_SQSTRING_LIT •

    $default  reduce using rule 32 (stringl)


State 29

   25 linkStmt: "'link'" stringl • "'{'" linkStmtContent "'}'"

    "'{'"  shift, and go to state 38


State 30

   20 defStmt: "'def'" vid • vpattern "'->'" castExpr
   21        | "'def'" vid • tpattern vpattern "'->'" castExpr

    "'('"  shift, and go to state 39
    "'['"  shift, and go to state 40

    unit      go to state 41
    vpattern  go to state 42
    tpattern  go to state 43


State 31

   29 tid: "a TID (ID with first letter uppercase)" •

    $default  reduce using rule 29 (tid)


State 32

   22 typedefStmt: "'type'" tid • tpattern "'='" typespec

    "'['"  shift, and go to state 40

    tpattern  go to state 44


State 33

   23 typedefStmt_enum: "'enum'" tid • tpattern "'='" vstruct

    "'['"  shift, and go to state 40

    tpattern  go to state 45


State 34

    5 moduleStmt: "'mod'" "a VID (ID with first letter lowercase)" "'{'" moduleContent "'}'" •

    $default  reduce using rule 5 (moduleStmt)


State 35

    7 moduleContent: moduleContent moduleContentStmt • "';'"

    "';'"  shift, and go to state 46


State 36

    6 moduleContent: moduleContentStmt "';'" •

    $default  reduce using rule 6 (moduleContent)


State 37

   24 importStmt: "'import'" vid "'from'" • stringl "'as'" stringl

    TK_DQSTRING_LIT  shift, and go to state 27
    TK_SQSTRING_LIT  shift, and go to state 28

    stringl  go to state 47


State 38

   25 linkStmt: "'link'" stringl "'{'" • linkStmtContent "'}'"

    "a VID (ID with first letter lowercase)"  shift, and go to state 25

    linkStmtItem     go to state 48
    linkStmtContent  go to state 49
    vid              go to state 50


State 39

   34 unit: "'('" • "')'"
  137 vpattern: "'('" • vpatternField_cl "')'"

    "a VID (ID with first letter lowercase)"  shift, and go to state 25
    "')'"                                     shift, and go to state 51

    vid               go to state 52
    vpatternField     go to state 53
    vpatternField_cl  go to state 54


State 40

  139 tpattern: "'['" • tpatternField_cl "']'"

    "a VID (ID with first letter lowercase)"  shift, and go to state 25
    "a TID (ID with first letter uppercase)"  shift, and go to state 31

    tid               go to state 55
    vid               go to state 52
    vpatternField     go to state 56
    tpatternField     go to state 57
    tpatternField_cl  go to state 58


State 41

  138 vpattern: unit •

    $default  reduce using rule 138 (vpattern)


State 42

   20 defStmt: "'def'" vid vpattern • "'->'" castExpr

    "'->'"  shift, and go to state 59


State 43

   21 defStmt: "'def'" vid tpattern • vpattern "'->'" castExpr

    "'('"  shift, and go to state 39

    unit      go to state 41
    vpattern  go to state 60


State 44

   22 typedefStmt: "'type'" tid tpattern • "'='" typespec

    "'='"  shift, and go to state 61


State 45

   23 typedefStmt_enum: "'enum'" tid tpattern • "'='" vstruct

    "'='"  shift, and go to state 62


State 46

    7 moduleContent: moduleContent moduleContentStmt "';'" •

    $default  reduce using rule 7 (moduleContent)


State 47

   24 importStmt: "'import'" vid "'from'" stringl • "'as'" stringl

    "'as'"  shift, and go to state 63


State 48

   27 linkStmtContent: linkStmtItem • "';'"

    "';'"  shift, and go to state 64


State 49

   25 linkStmt: "'link'" stringl "'{'" linkStmtContent • "'}'"
   28 linkStmtContent: linkStmtContent • linkStmtItem "';'"

    "a VID (ID with first letter lowercase)"  shift, and go to state 25
    "'}'"                                     shift, and go to state 65

    linkStmtItem  go to state 66
    vid           go to state 50


State 50

   26 linkStmtItem: vid • vpattern "'->'" typespec "'from'" stringl

    "'('"  shift, and go to state 39

    unit      go to state 41
    vpattern  go to state 67


State 51

   34 unit: "'('" "')'" •

    $default  reduce using rule 34 (unit)


State 52

  129 vpatternField: vid • typespec

    "a TID (ID with first letter uppercase)"  shift, and go to state 31
    "'Tuple'"                                 shift, and go to state 68
    "'Array'"                                 shift, and go to state 69

    tid              go to state 70
    typespec         go to state 71
    primaryTypespec  go to state 72
    postfixTypespec  go to state 73


State 53

  140 vpatternField_cl: vpatternField •

    $default  reduce using rule 140 (vpatternField_cl)


State 54

  137 vpattern: "'('" vpatternField_cl • "')'"
  141 vpatternField_cl: vpatternField_cl • "','" vpatternField

    "','"  shift, and go to state 74
    "')'"  shift, and go to state 75


State 55

  132 tpatternField: tid •

    $default  reduce using rule 132 (tpatternField)


State 56

  133 tpatternField: vpatternField •

    $default  reduce using rule 133 (tpatternField)


State 57

  144 tpatternField_cl: tpatternField •

    $default  reduce using rule 144 (tpatternField_cl)


State 58

  139 tpattern: "'['" tpatternField_cl • "']'"
  145 tpatternField_cl: tpatternField_cl • "','" tpatternField

    "','"  shift, and go to state 76
    "']'"  shift, and go to state 77


State 59

   20 defStmt: "'def'" vid vpattern "'->'" • castExpr

    "a VID (ID with first letter lowercase)"  shift, and go to state 25
    "a TID (ID with first letter uppercase)"  shift, and go to state 31
    "'if'"                                    shift, and go to state 78
    "'Tuple'"                                 shift, and go to state 68
    "'Array'"                                 shift, and go to state 69
    TK_DINT_LIT                               shift, and go to state 79
    TK_XINT_LIT                               shift, and go to state 80
    TK_FLOAT_LIT                              shift, and go to state 81
    TK_DQSTRING_LIT                           shift, and go to state 27
    TK_SQSTRING_LIT                           shift, and go to state 28
    "'('"                                     shift, and go to state 82
    "'{'"                                     shift, and go to state 83

    tid              go to state 70
    vid              go to state 84
    floatl           go to state 85
    stringl          go to state 86
    unit             go to state 87
    parenExpr        go to state 88
    primaryExpr      go to state 89
    vparen           go to state 90
    vtuple           go to state 91
    vstruct          go to state 92
    ifThenElse       go to state 93
    chain            go to state 94
    postfixExpr      go to state 95
    vtcall           go to state 96
    vvcall           go to state 97
    dotNmExpr        go to state 98
    dotIxExpr        go to state 99
    colonNmExpr      go to state 100
    castExpr         go to state 101
    typespec         go to state 102
    primaryTypespec  go to state 72
    postfixTypespec  go to state 73


State 60

   21 defStmt: "'def'" vid tpattern vpattern • "'->'" castExpr

    "'->'"  shift, and go to state 103


State 61

   22 typedefStmt: "'type'" tid tpattern "'='" • typespec

    "a TID (ID with first letter uppercase)"  shift, and go to state 31
    "'Tuple'"                                 shift, and go to state 68
    "'Array'"                                 shift, and go to state 69

    tid              go to state 70
    typespec         go to state 104
    primaryTypespec  go to state 72
    postfixTypespec  go to state 73


State 62

   23 typedefStmt_enum: "'enum'" tid tpattern "'='" • vstruct

    "'{'"  shift, and go to state 105

    vstruct  go to state 106


State 63

   24 importStmt: "'import'" vid "'from'" stringl "'as'" • stringl

    TK_DQSTRING_LIT  shift, and go to state 27
    TK_SQSTRING_LIT  shift, and go to state 28

    stringl  go to state 107


State 64

   27 linkStmtContent: linkStmtItem "';'" •

    $default  reduce using rule 27 (linkStmtContent)


State 65

   25 linkStmt: "'link'" stringl "'{'" linkStmtContent "'}'" •

    $default  reduce using rule 25 (linkStmt)


State 66

   28 linkStmtContent: linkStmtContent linkStmtItem • "';'"

    "';'"  shift, and go to state 108


State 67

   26 linkStmtItem: vid vpattern • "'->'" typespec "'from'" stringl

    "'->'"  shift, and go to state 109


State 68

  113 primaryTypespec: "'Tuple'" • "'['" typespec_cl "']'"

    "'['"  shift, and go to state 110


State 69

  114 primaryTypespec: "'Array'" • "'['" typespec "','" expr "']'"

    "'['"  shift, and go to state 111


State 70

  112 primaryTypespec: tid •

    $default  reduce using rule 112 (primaryTypespec)


State 71

  129 vpatternField: vid typespec •

    $default  reduce using rule 129 (vpatternField)


State 72

  115 postfixTypespec: primaryTypespec •

    $default  reduce using rule 115 (postfixTypespec)


State 73

  109 typespec: postfixTypespec •
  116 postfixTypespec: postfixTypespec • "'['" ttarg_cl "']'"
  117                | postfixTypespec • "'^'"

    "'['"  shift, and go to state 112
    "'^'"  shift, and go to state 113

    $default  reduce using rule 109 (typespec)


State 74

  141 vpatternField_cl: vpatternField_cl "','" • vpatternField

    "a VID (ID with first letter lowercase)"  shift, and go to state 25

    vid            go to state 52
    vpatternField  go to state 114


State 75

  137 vpattern: "'('" vpatternField_cl "')'" •

    $default  reduce using rule 137 (vpattern)


State 76

  145 tpatternField_cl: tpatternField_cl "','" • tpatternField

    "a VID (ID with first letter lowercase)"  shift, and go to state 25
    "a TID (ID with first letter uppercase)"  shift, and go to state 31

    tid            go to state 55
    vid            go to state 52
    vpatternField  go to state 56
    tpatternField  go to state 115


State 77

  139 tpattern: "'['" tpatternField_cl "']'" •

    $default  reduce using rule 139 (tpattern)


State 78

   55 ifThenElse: "'if'" • parenExpr "'then'" parenExpr
   56           | "'if'" • parenExpr "'then'" parenExpr "'else'" parenExpr

    "'('"  shift, and go to state 82
    "'{'"  shift, and go to state 83

    unit       go to state 87
    parenExpr  go to state 116
    vparen     go to state 90
    vtuple     go to state 91
    vstruct    go to state 92
    chain      go to state 94


State 79

   47 primaryExpr: TK_DINT_LIT •

    $default  reduce using rule 47 (primaryExpr)


State 80

   48 primaryExpr: TK_XINT_LIT •

    $default  reduce using rule 48 (primaryExpr)


State 81

   31 floatl: TK_FLOAT_LIT •

    $default  reduce using rule 31 (floatl)


State 82

   34 unit: "'('" • "')'"
   52 vparen: "'('" • expr "')'"
   53 vtuple: "'('" • expr_cl2 "')'"

    "a VID (ID with first letter lowercase)"  shift, and go to state 25
    "a TID (ID with first letter uppercase)"  shift, and go to state 31
    "'if'"                                    shift, and go to state 78
    "'not'"                                   shift, and go to state 117
    "'Tuple'"                                 shift, and go to state 68
    "'Array'"                                 shift, and go to state 69
    TK_DINT_LIT                               shift, and go to state 79
    TK_XINT_LIT                               shift, and go to state 80
    TK_FLOAT_LIT                              shift, and go to state 81
    TK_DQSTRING_LIT                           shift, and go to state 27
    TK_SQSTRING_LIT                           shift, and go to state 28
    "'('"                                     shift, and go to state 82
    "')'"                                     shift, and go to state 51
    "'{'"                                     shift, and go to state 83
    "'*'"                                     shift, and go to state 118
    "'+'"                                     shift, and go to state 119
    "'-'"                                     shift, and go to state 120
    "'^'"                                     shift, and go to state 121

    tid              go to state 70
    vid              go to state 84
    floatl           go to state 85
    stringl          go to state 86
    unit             go to state 87
    expr             go to state 122
    expr_cl2         go to state 123
    parenExpr        go to state 88
    primaryExpr      go to state 89
    vparen           go to state 90
    vtuple           go to state 91
    vstruct          go to state 92
    ifThenElse       go to state 93
    chain            go to state 94
    postfixExpr      go to state 95
    vtcall           go to state 96
    vvcall           go to state 97
    dotNmExpr        go to state 98
    dotIxExpr        go to state 99
    colonNmExpr      go to state 100
    castExpr         go to state 124
    unaryExpr        go to state 125
    unaryOp          go to state 126
    binaryExpr       go to state 127
    mulBinaryExpr    go to state 128
    addBinaryExpr    go to state 129
    cmpBinaryExpr    go to state 130
    eqBinaryExpr     go to state 131
    andBinaryExpr    go to state 132
    xorBinaryExpr    go to state 133
    orBinaryExpr     go to state 134
    typespec         go to state 102
    primaryTypespec  go to state 72
    postfixTypespec  go to state 73


State 83

   54 vstruct: "'{'" • vstructField_cl "'}'"
   57 chain: "'{'" • expr "'}'"
   58      | "'{'" • chainPrefix "'}'"
   59      | "'{'" • chainPrefix expr "'}'"

    "a VID (ID with first letter lowercase)"  shift, and go to state 25
    "a TID (ID with first letter uppercase)"  shift, and go to state 31
    "'if'"                                    shift, and go to state 78
    "'let'"                                   shift, and go to state 135
    "'set'"                                   shift, and go to state 136
    "'not'"                                   shift, and go to state 117
    "'Tuple'"                                 shift, and go to state 68
    "'Array'"                                 shift, and go to state 69
    TK_DINT_LIT                               shift, and go to state 79
    TK_XINT_LIT                               shift, and go to state 80
    TK_FLOAT_LIT                              shift, and go to state 81
    TK_DQSTRING_LIT                           shift, and go to state 27
    TK_SQSTRING_LIT                           shift, and go to state 28
    "'('"                                     shift, and go to state 82
    "'{'"                                     shift, and go to state 83
    "'*'"                                     shift, and go to state 118
    "'+'"                                     shift, and go to state 119
    "'-'"                                     shift, and go to state 120
    "'^'"                                     shift, and go to state 121

    chainPrefixStmt  go to state 137
    letStmt          go to state 138
    setStmt          go to state 139
    discardStmt      go to state 140
    tid              go to state 70
    vid              go to state 141
    floatl           go to state 85
    stringl          go to state 86
    unit             go to state 87
    expr             go to state 142
    parenExpr        go to state 88
    primaryExpr      go to state 89
    vparen           go to state 90
    vtuple           go to state 91
    vstruct          go to state 92
    ifThenElse       go to state 93
    chain            go to state 94
    chainPrefix      go to state 143
    postfixExpr      go to state 95
    vtcall           go to state 96
    vvcall           go to state 97
    dotNmExpr        go to state 98
    dotIxExpr        go to state 99
    colonNmExpr      go to state 100
    castExpr         go to state 124
    unaryExpr        go to state 125
    unaryOp          go to state 126
    binaryExpr       go to state 127
    mulBinaryExpr    go to state 128
    addBinaryExpr    go to state 129
    cmpBinaryExpr    go to state 130
    eqBinaryExpr     go to state 131
    andBinaryExpr    go to state 132
    xorBinaryExpr    go to state 133
    orBinaryExpr     go to state 134
    typespec         go to state 102
    primaryTypespec  go to state 72
    postfixTypespec  go to state 73
    vstructField     go to state 144
    vstructField_cl  go to state 145


State 84

   46 primaryExpr: vid •

    $default  reduce using rule 46 (primaryExpr)


State 85

   49 primaryExpr: floatl •

    $default  reduce using rule 49 (primaryExpr)


State 86

   50 primaryExpr: stringl •

    $default  reduce using rule 50 (primaryExpr)


State 87

   40 parenExpr: unit •

    $default  reduce using rule 40 (parenExpr)


State 88

   45 primaryExpr: parenExpr •

    $default  reduce using rule 45 (primaryExpr)


State 89

   62 postfixExpr: primaryExpr •

    $default  reduce using rule 62 (postfixExpr)


State 90

   41 parenExpr: vparen •

    $default  reduce using rule 41 (parenExpr)


State 91

   42 parenExpr: vtuple •

    $default  reduce using rule 42 (parenExpr)


State 92

   43 parenExpr: vstruct •

    $default  reduce using rule 43 (parenExpr)


State 93

   51 primaryExpr: ifThenElse •

    $default  reduce using rule 51 (primaryExpr)


State 94

   44 parenExpr: chain •

    $default  reduce using rule 44 (parenExpr)


State 95

   68 vtcall: postfixExpr • "'['" vtarg_cl "']'"
   69 vvcall: postfixExpr • "'('" "')'"
   70       | postfixExpr • "'('" expr_cl "')'"
   71 dotNmExpr: postfixExpr • "'.'" "a VID (ID with first letter lowercase)"
   72 dotIxExpr: postfixExpr • "'.'" TK_DINT_LIT
   73 colonNmExpr: postfixExpr • "':'" "a VID (ID with first letter lowercase)"
   74 castExpr: postfixExpr •

    "'.'"  shift, and go to state 146
    "':'"  shift, and go to state 147
    "'('"  shift, and go to state 148
    "'['"  shift, and go to state 149

    $default  reduce using rule 74 (castExpr)


State 96

   63 postfixExpr: vtcall •

    $default  reduce using rule 63 (postfixExpr)


State 97

   64 postfixExpr: vvcall •

    $default  reduce using rule 64 (postfixExpr)


State 98

   65 postfixExpr: dotNmExpr •

    $default  reduce using rule 65 (postfixExpr)


State 99

   66 postfixExpr: dotIxExpr •

    $default  reduce using rule 66 (postfixExpr)


State 100

   67 postfixExpr: colonNmExpr •

    $default  reduce using rule 67 (postfixExpr)


State 101

   20 defStmt: "'def'" vid vpattern "'->'" castExpr •

    $default  reduce using rule 20 (defStmt)


State 102

   75 castExpr: typespec • parenExpr

    "'('"  shift, and go to state 82
    "'{'"  shift, and go to state 83

    unit       go to state 87
    parenExpr  go to state 150
    vparen     go to state 90
    vtuple     go to state 91
    vstruct    go to state 92
    chain      go to state 94


State 103

   21 defStmt: "'def'" vid tpattern vpattern "'->'" • castExpr

    "a VID (ID with first letter lowercase)"  shift, and go to state 25
    "a TID (ID with first letter uppercase)"  shift, and go to state 31
    "'if'"                                    shift, and go to state 78
    "'Tuple'"                                 shift, and go to state 68
    "'Array'"                                 shift, and go to state 69
    TK_DINT_LIT                               shift, and go to state 79
    TK_XINT_LIT                               shift, and go to state 80
    TK_FLOAT_LIT                              shift, and go to state 81
    TK_DQSTRING_LIT                           shift, and go to state 27
    TK_SQSTRING_LIT                           shift, and go to state 28
    "'('"                                     shift, and go to state 82
    "'{'"                                     shift, and go to state 83

    tid              go to state 70
    vid              go to state 84
    floatl           go to state 85
    stringl          go to state 86
    unit             go to state 87
    parenExpr        go to state 88
    primaryExpr      go to state 89
    vparen           go to state 90
    vtuple           go to state 91
    vstruct          go to state 92
    ifThenElse       go to state 93
    chain            go to state 94
    postfixExpr      go to state 95
    vtcall           go to state 96
    vvcall           go to state 97
    dotNmExpr        go to state 98
    dotIxExpr        go to state 99
    colonNmExpr      go to state 100
    castExpr         go to state 151
    typespec         go to state 102
    primaryTypespec  go to state 72
    postfixTypespec  go to state 73


State 104

   22 typedefStmt: "'type'" tid tpattern "'='" typespec •

    $default  reduce using rule 22 (typedefStmt)


State 105

   54 vstruct: "'{'" • vstructField_cl "'}'"

    "a VID (ID with first letter lowercase)"  shift, and go to state 25

    vid              go to state 152
    vstructField     go to state 144
    vstructField_cl  go to state 145


State 106

   23 typedefStmt_enum: "'enum'" tid tpattern "'='" vstruct •

    $default  reduce using rule 23 (typedefStmt_enum)


State 107

   24 importStmt: "'import'" vid "'from'" stringl "'as'" stringl •

    $default  reduce using rule 24 (importStmt)


State 108

   28 linkStmtContent: linkStmtContent linkStmtItem "';'" •

    $default  reduce using rule 28 (linkStmtContent)


State 109

   26 linkStmtItem: vid vpattern "'->'" • typespec "'from'" stringl

    "a TID (ID with first letter uppercase)"  shift, and go to state 31
    "'Tuple'"                                 shift, and go to state 68
    "'Array'"                                 shift, and go to state 69

    tid              go to state 70
    typespec         go to state 153
    primaryTypespec  go to state 72
    postfixTypespec  go to state 73


State 110

  113 primaryTypespec: "'Tuple'" "'['" • typespec_cl "']'"

    "a TID (ID with first letter uppercase)"  shift, and go to state 31
    "'Tuple'"                                 shift, and go to state 68
    "'Array'"                                 shift, and go to state 69

    tid              go to state 70
    typespec         go to state 154
    typespec_cl      go to state 155
    primaryTypespec  go to state 72
    postfixTypespec  go to state 73


State 111

  114 primaryTypespec: "'Array'" "'['" • typespec "','" expr "']'"

    "a TID (ID with first letter uppercase)"  shift, and go to state 31
    "'Tuple'"                                 shift, and go to state 68
    "'Array'"                                 shift, and go to state 69

    tid              go to state 70
    typespec         go to state 156
    primaryTypespec  go to state 72
    postfixTypespec  go to state 73


State 112

  116 postfixTypespec: postfixTypespec "'['" • ttarg_cl "']'"

    "a VID (ID with first letter lowercase)"  shift, and go to state 25
    "a TID (ID with first letter uppercase)"  shift, and go to state 31
    "'if'"                                    shift, and go to state 78
    "'not'"                                   shift, and go to state 117
    "'Tuple'"                                 shift, and go to state 68
    "'Array'"                                 shift, and go to state 69
    TK_DINT_LIT                               shift, and go to state 79
    TK_XINT_LIT                               shift, and go to state 80
    TK_FLOAT_LIT                              shift, and go to state 81
    TK_DQSTRING_LIT                           shift, and go to state 27
    TK_SQSTRING_LIT                           shift, and go to state 28
    "'('"                                     shift, and go to state 82
    "'{'"                                     shift, and go to state 83
    "'*'"                                     shift, and go to state 118
    "'+'"                                     shift, and go to state 119
    "'-'"                                     shift, and go to state 120
    "'^'"                                     shift, and go to state 121

    tid              go to state 70
    vid              go to state 84
    floatl           go to state 85
    stringl          go to state 86
    unit             go to state 87
    expr             go to state 157
    parenExpr        go to state 88
    primaryExpr      go to state 89
    vparen           go to state 90
    vtuple           go to state 91
    vstruct          go to state 92
    ifThenElse       go to state 93
    chain            go to state 94
    postfixExpr      go to state 95
    vtcall           go to state 96
    vvcall           go to state 97
    dotNmExpr        go to state 98
    dotIxExpr        go to state 99
    colonNmExpr      go to state 100
    castExpr         go to state 124
    unaryExpr        go to state 125
    unaryOp          go to state 126
    binaryExpr       go to state 127
    mulBinaryExpr    go to state 128
    addBinaryExpr    go to state 129
    cmpBinaryExpr    go to state 130
    eqBinaryExpr     go to state 131
    andBinaryExpr    go to state 132
    xorBinaryExpr    go to state 133
    orBinaryExpr     go to state 134
    typespec         go to state 158
    primaryTypespec  go to state 72
    postfixTypespec  go to state 73
    ttarg            go to state 159
    ttarg_cl         go to state 160


State 113

  117 postfixTypespec: postfixTypespec "'^'" •

    $default  reduce using rule 117 (postfixTypespec)


State 114

  141 vpatternField_cl: vpatternField_cl "','" vpatternField •

    $default  reduce using rule 141 (vpatternField_cl)


State 115

  145 tpatternField_cl: tpatternField_cl "','" tpatternField •

    $default  reduce using rule 145 (tpatternField_cl)


State 116

   55 ifThenElse: "'if'" parenExpr • "'then'" parenExpr
   56           | "'if'" parenExpr • "'then'" parenExpr "'else'" parenExpr

    "'then'"  shift, and go to state 161


State 117

   82 unaryOp: "'not'" •

    $default  reduce using rule 82 (unaryOp)


State 118

   80 unaryOp: "'*'" •

    $default  reduce using rule 80 (unaryOp)


State 119

   78 unaryOp: "'+'" •

    $default  reduce using rule 78 (unaryOp)


State 120

   79 unaryOp: "'-'" •

    $default  reduce using rule 79 (unaryOp)


State 121

   81 unaryOp: "'^'" •

    $default  reduce using rule 81 (unaryOp)


State 122

   38 expr_cl2: expr • "','" expr
   52 vparen: "'('" expr • "')'"

    "','"  shift, and go to state 162
    "')'"  shift, and go to state 163


State 123

   39 expr_cl2: expr_cl2 • "','" expr
   53 vtuple: "'('" expr_cl2 • "')'"

    "','"  shift, and go to state 164
    "')'"  shift, and go to state 165


State 124

   76 unaryExpr: castExpr •

    $default  reduce using rule 76 (unaryExpr)


State 125

   87 mulBinaryExpr: unaryExpr •

    $default  reduce using rule 87 (mulBinaryExpr)


State 126

   77 unaryExpr: unaryOp • unaryExpr

    "a VID (ID with first letter lowercase)"  shift, and go to state 25
    "a TID (ID with first letter uppercase)"  shift, and go to state 31
    "'if'"                                    shift, and go to state 78
    "'not'"                                   shift, and go to state 117
    "'Tuple'"                                 shift, and go to state 68
    "'Array'"                                 shift, and go to state 69
    TK_DINT_LIT                               shift, and go to state 79
    TK_XINT_LIT                               shift, and go to state 80
    TK_FLOAT_LIT                              shift, and go to state 81
    TK_DQSTRING_LIT                           shift, and go to state 27
    TK_SQSTRING_LIT                           shift, and go to state 28
    "'('"                                     shift, and go to state 82
    "'{'"                                     shift, and go to state 83
    "'*'"                                     shift, and go to state 118
    "'+'"                                     shift, and go to state 119
    "'-'"                                     shift, and go to state 120
    "'^'"                                     shift, and go to state 121

    tid              go to state 70
    vid              go to state 84
    floatl           go to state 85
    stringl          go to state 86
    unit             go to state 87
    parenExpr        go to state 88
    primaryExpr      go to state 89
    vparen           go to state 90
    vtuple           go to state 91
    vstruct          go to state 92
    ifThenElse       go to state 93
    chain            go to state 94
    postfixExpr      go to state 95
    vtcall           go to state 96
    vvcall           go to state 97
    dotNmExpr        go to state 98
    dotIxExpr        go to state 99
    colonNmExpr      go to state 100
    castExpr         go to state 124
    unaryExpr        go to state 166
    unaryOp          go to state 126
    typespec         go to state 102
    primaryTypespec  go to state 72
    postfixTypespec  go to state 73


State 127

   35 expr: binaryExpr •

    $default  reduce using rule 35 (expr)


State 128

   88 mulBinaryExpr: mulBinaryExpr • mulBinaryOp unaryExpr
   91 addBinaryExpr: mulBinaryExpr •

    "'*'"  shift, and go to state 167
    "'/'"  shift, and go to state 168
    "'%'"  shift, and go to state 169

    $default  reduce using rule 91 (addBinaryExpr)

    mulBinaryOp  go to state 170


State 129

   92 addBinaryExpr: addBinaryExpr • addBinaryOp mulBinaryExpr
   97 cmpBinaryExpr: addBinaryExpr •

    "'+'"  shift, and go to state 171
    "'-'"  shift, and go to state 172

    $default  reduce using rule 97 (cmpBinaryExpr)

    addBinaryOp  go to state 173


State 130

   98 cmpBinaryExpr: cmpBinaryExpr • cmpBinaryOp addBinaryExpr
  101 eqBinaryExpr: cmpBinaryExpr •

    "'<'"   shift, and go to state 174
    "'<='"  shift, and go to state 175
    "'>'"   shift, and go to state 176
    "'>='"  shift, and go to state 177

    $default  reduce using rule 101 (eqBinaryExpr)

    cmpBinaryOp  go to state 178


State 131

  102 eqBinaryExpr: eqBinaryExpr • eqBinaryOp cmpBinaryExpr
  103 andBinaryExpr: eqBinaryExpr •

    "'=='"  shift, and go to state 179
    "'!='"  shift, and go to state 180

    $default  reduce using rule 103 (andBinaryExpr)

    eqBinaryOp  go to state 181


State 132

  104 andBinaryExpr: andBinaryExpr • "'and'" eqBinaryExpr
  105 xorBinaryExpr: andBinaryExpr •

    "'and'"  shift, and go to state 182

    $default  reduce using rule 105 (xorBinaryExpr)


State 133

  106 xorBinaryExpr: xorBinaryExpr • "'xor'" andBinaryExpr
  107 orBinaryExpr: xorBinaryExpr •

    "'xor'"  shift, and go to state 183

    $default  reduce using rule 107 (orBinaryExpr)


State 134

   83 binaryExpr: orBinaryExpr •
  108 orBinaryExpr: orBinaryExpr • "'or'" xorBinaryExpr

    "'or'"  shift, and go to state 184

    $default  reduce using rule 83 (binaryExpr)


State 135

   11 letStmt: "'let'" • lpattern "'='" expr

    "a VID (ID with first letter lowercase)"  shift, and go to state 25
    "'('"                                     shift, and go to state 185

    vid            go to state 186
    unit           go to state 187
    vpatternField  go to state 188
    lpatternField  go to state 189
    lpattern       go to state 190


State 136

   12 setStmt: "'set'" • expr "'='" expr

    "a VID (ID with first letter lowercase)"  shift, and go to state 25
    "a TID (ID with first letter uppercase)"  shift, and go to state 31
    "'if'"                                    shift, and go to state 78
    "'not'"                                   shift, and go to state 117
    "'Tuple'"                                 shift, and go to state 68
    "'Array'"                                 shift, and go to state 69
    TK_DINT_LIT                               shift, and go to state 79
    TK_XINT_LIT                               shift, and go to state 80
    TK_FLOAT_LIT                              shift, and go to state 81
    TK_DQSTRING_LIT                           shift, and go to state 27
    TK_SQSTRING_LIT                           shift, and go to state 28
    "'('"                                     shift, and go to state 82
    "'{'"                                     shift, and go to state 83
    "'*'"                                     shift, and go to state 118
    "'+'"                                     shift, and go to state 119
    "'-'"                                     shift, and go to state 120
    "'^'"                                     shift, and go to state 121

    tid              go to state 70
    vid              go to state 84
    floatl           go to state 85
    stringl          go to state 86
    unit             go to state 87
    expr             go to state 191
    parenExpr        go to state 88
    primaryExpr      go to state 89
    vparen           go to state 90
    vtuple           go to state 91
    vstruct          go to state 92
    ifThenElse       go to state 93
    chain            go to state 94
    postfixExpr      go to state 95
    vtcall           go to state 96
    vvcall           go to state 97
    dotNmExpr        go to state 98
    dotIxExpr        go to state 99
    colonNmExpr      go to state 100
    castExpr         go to state 124
    unaryExpr        go to state 125
    unaryOp          go to state 126
    binaryExpr       go to state 127
    mulBinaryExpr    go to state 128
    addBinaryExpr    go to state 129
    cmpBinaryExpr    go to state 130
    eqBinaryExpr     go to state 131
    andBinaryExpr    go to state 132
    xorBinaryExpr    go to state 133
    orBinaryExpr     go to state 134
    typespec         go to state 102
    primaryTypespec  go to state 72
    postfixTypespec  go to state 73


State 137

   60 chainPrefix: chainPrefixStmt • "';'"

    "';'"  shift, and go to state 192


State 138

    8 chainPrefixStmt: letStmt •

    $default  reduce using rule 8 (chainPrefixStmt)


State 139

    9 chainPrefixStmt: setStmt •

    $default  reduce using rule 9 (chainPrefixStmt)


State 140

   10 chainPrefixStmt: discardStmt •

    $default  reduce using rule 10 (chainPrefixStmt)


State 141

   46 primaryExpr: vid •
  126 vstructField: vid • "'='" expr

    "'='"  shift, and go to state 193

    $default  reduce using rule 46 (primaryExpr)


State 142

   13 discardStmt: expr •
   57 chain: "'{'" expr • "'}'"

    "'}'"  shift, and go to state 194

    $default  reduce using rule 13 (discardStmt)


State 143

   58 chain: "'{'" chainPrefix • "'}'"
   59      | "'{'" chainPrefix • expr "'}'"
   61 chainPrefix: chainPrefix • chainPrefixStmt "';'"

    "a VID (ID with first letter lowercase)"  shift, and go to state 25
    "a TID (ID with first letter uppercase)"  shift, and go to state 31
    "'if'"                                    shift, and go to state 78
    "'let'"                                   shift, and go to state 135
    "'set'"                                   shift, and go to state 136
    "'not'"                                   shift, and go to state 117
    "'Tuple'"                                 shift, and go to state 68
    "'Array'"                                 shift, and go to state 69
    TK_DINT_LIT                               shift, and go to state 79
    TK_XINT_LIT                               shift, and go to state 80
    TK_FLOAT_LIT                              shift, and go to state 81
    TK_DQSTRING_LIT                           shift, and go to state 27
    TK_SQSTRING_LIT                           shift, and go to state 28
    "'('"                                     shift, and go to state 82
    "'{'"                                     shift, and go to state 83
    "'}'"                                     shift, and go to state 195
    "'*'"                                     shift, and go to state 118
    "'+'"                                     shift, and go to state 119
    "'-'"                                     shift, and go to state 120
    "'^'"                                     shift, and go to state 121

    chainPrefixStmt  go to state 196
    letStmt          go to state 138
    setStmt          go to state 139
    discardStmt      go to state 140
    tid              go to state 70
    vid              go to state 84
    floatl           go to state 85
    stringl          go to state 86
    unit             go to state 87
    expr             go to state 197
    parenExpr        go to state 88
    primaryExpr      go to state 89
    vparen           go to state 90
    vtuple           go to state 91
    vstruct          go to state 92
    ifThenElse       go to state 93
    chain            go to state 94
    postfixExpr      go to state 95
    vtcall           go to state 96
    vvcall           go to state 97
    dotNmExpr        go to state 98
    dotIxExpr        go to state 99
    colonNmExpr      go to state 100
    castExpr         go to state 124
    unaryExpr        go to state 125
    unaryOp          go to state 126
    binaryExpr       go to state 127
    mulBinaryExpr    go to state 128
    addBinaryExpr    go to state 129
    cmpBinaryExpr    go to state 130
    eqBinaryExpr     go to state 131
    andBinaryExpr    go to state 132
    xorBinaryExpr    go to state 133
    orBinaryExpr     go to state 134
    typespec         go to state 102
    primaryTypespec  go to state 72
    postfixTypespec  go to state 73


State 144

  127 vstructField_cl: vstructField •

    $default  reduce using rule 127 (vstructField_cl)


State 145

   54 vstruct: "'{'" vstructField_cl • "'}'"
  128 vstructField_cl: vstructField_cl • "','" vstructField

    "','"  shift, and go to state 198
    "'}'"  shift, and go to state 199


State 146

   71 dotNmExpr: postfixExpr "'.'" • "a VID (ID with first letter lowercase)"
   72 dotIxExpr: postfixExpr "'.'" • TK_DINT_LIT

    "a VID (ID with first letter lowercase)"  shift, and go to state 200
    TK_DINT_LIT                               shift, and go to state 201


State 147

   73 colonNmExpr: postfixExpr "':'" • "a VID (ID with first letter lowercase)"

    "a VID (ID with first letter lowercase)"  shift, and go to state 202


State 148

   69 vvcall: postfixExpr "'('" • "')'"
   70       | postfixExpr "'('" • expr_cl "')'"

    "a VID (ID with first letter lowercase)"  shift, and go to state 25
    "a TID (ID with first letter uppercase)"  shift, and go to state 31
    "'if'"                                    shift, and go to state 78
    "'not'"                                   shift, and go to state 117
    "'Tuple'"                                 shift, and go to state 68
    "'Array'"                                 shift, and go to state 69
    TK_DINT_LIT                               shift, and go to state 79
    TK_XINT_LIT                               shift, and go to state 80
    TK_FLOAT_LIT                              shift, and go to state 81
    TK_DQSTRING_LIT                           shift, and go to state 27
    TK_SQSTRING_LIT                           shift, and go to state 28
    "'('"                                     shift, and go to state 82
    "')'"                                     shift, and go to state 203
    "'{'"                                     shift, and go to state 83
    "'*'"                                     shift, and go to state 118
    "'+'"                                     shift, and go to state 119
    "'-'"                                     shift, and go to state 120
    "'^'"                                     shift, and go to state 121

    tid              go to state 70
    vid              go to state 84
    floatl           go to state 85
    stringl          go to state 86
    unit             go to state 87
    expr             go to state 204
    expr_cl          go to state 205
    parenExpr        go to state 88
    primaryExpr      go to state 89
    vparen           go to state 90
    vtuple           go to state 91
    vstruct          go to state 92
    ifThenElse       go to state 93
    chain            go to state 94
    postfixExpr      go to state 95
    vtcall           go to state 96
    vvcall           go to state 97
    dotNmExpr        go to state 98
    dotIxExpr        go to state 99
    colonNmExpr      go to state 100
    castExpr         go to state 124
    unaryExpr        go to state 125
    unaryOp          go to state 126
    binaryExpr       go to state 127
    mulBinaryExpr    go to state 128
    addBinaryExpr    go to state 129
    cmpBinaryExpr    go to state 130
    eqBinaryExpr     go to state 131
    andBinaryExpr    go to state 132
    xorBinaryExpr    go to state 133
    orBinaryExpr     go to state 134
    typespec         go to state 102
    primaryTypespec  go to state 72
    postfixTypespec  go to state 73


State 149

   68 vtcall: postfixExpr "'['" • vtarg_cl "']'"

    "a VID (ID with first letter lowercase)"  shift, and go to state 25
    "a TID (ID with first letter uppercase)"  shift, and go to state 31
    "'if'"                                    shift, and go to state 78
    "'not'"                                   shift, and go to state 117
    "'Tuple'"                                 shift, and go to state 68
    "'Array'"                                 shift, and go to state 69
    TK_DINT_LIT                               shift, and go to state 79
    TK_XINT_LIT                               shift, and go to state 80
    TK_FLOAT_LIT                              shift, and go to state 81
    TK_DQSTRING_LIT                           shift, and go to state 27
    TK_SQSTRING_LIT                           shift, and go to state 28
    "'('"                                     shift, and go to state 82
    "'{'"                                     shift, and go to state 83
    "'*'"                                     shift, and go to state 118
    "'+'"                                     shift, and go to state 119
    "'-'"                                     shift, and go to state 120
    "'^'"                                     shift, and go to state 121

    tid              go to state 70
    vid              go to state 84
    floatl           go to state 85
    stringl          go to state 86
    unit             go to state 87
    expr             go to state 206
    parenExpr        go to state 88
    primaryExpr      go to state 89
    vparen           go to state 90
    vtuple           go to state 91
    vstruct          go to state 92
    ifThenElse       go to state 93
    chain            go to state 94
    postfixExpr      go to state 95
    vtcall           go to state 96
    vvcall           go to state 97
    dotNmExpr        go to state 98
    dotIxExpr        go to state 99
    colonNmExpr      go to state 100
    castExpr         go to state 124
    unaryExpr        go to state 125
    unaryOp          go to state 126
    binaryExpr       go to state 127
    mulBinaryExpr    go to state 128
    addBinaryExpr    go to state 129
    cmpBinaryExpr    go to state 130
    eqBinaryExpr     go to state 131
    andBinaryExpr    go to state 132
    xorBinaryExpr    go to state 133
    orBinaryExpr     go to state 134
    typespec         go to state 207
    primaryTypespec  go to state 72
    postfixTypespec  go to state 73
    vtarg            go to state 208
    vtarg_cl         go to state 209


State 150

   75 castExpr: typespec parenExpr •

    $default  reduce using rule 75 (castExpr)


State 151

   21 defStmt: "'def'" vid tpattern vpattern "'->'" castExpr •

    $default  reduce using rule 21 (defStmt)


State 152

  126 vstructField: vid • "'='" expr

    "'='"  shift, and go to state 193


State 153

   26 linkStmtItem: vid vpattern "'->'" typespec • "'from'" stringl

    "'from'"  shift, and go to state 210


State 154

  110 typespec_cl: typespec •

    $default  reduce using rule 110 (typespec_cl)


State 155

  111 typespec_cl: typespec_cl • "','" typespec
  113 primaryTypespec: "'Tuple'" "'['" typespec_cl • "']'"

    "','"  shift, and go to state 211
    "']'"  shift, and go to state 212


State 156

  114 primaryTypespec: "'Array'" "'['" typespec • "','" expr "']'"

    "','"  shift, and go to state 213


State 157

  119 ttarg: expr •

    $default  reduce using rule 119 (ttarg)


State 158

   75 castExpr: typespec • parenExpr
  118 ttarg: typespec •

    "'('"  shift, and go to state 82
    "'{'"  shift, and go to state 83

    $default  reduce using rule 118 (ttarg)

    unit       go to state 87
    parenExpr  go to state 150
    vparen     go to state 90
    vtuple     go to state 91
    vstruct    go to state 92
    chain      go to state 94


State 159

  120 ttarg_cl: ttarg •

    $default  reduce using rule 120 (ttarg_cl)


State 160

  116 postfixTypespec: postfixTypespec "'['" ttarg_cl • "']'"
  121 ttarg_cl: ttarg_cl • "','" ttarg

    "','"  shift, and go to state 214
    "']'"  shift, and go to state 215


State 161

   55 ifThenElse: "'if'" parenExpr "'then'" • parenExpr
   56           | "'if'" parenExpr "'then'" • parenExpr "'else'" parenExpr

    "'('"  shift, and go to state 82
    "'{'"  shift, and go to state 83

    unit       go to state 87
    parenExpr  go to state 216
    vparen     go to state 90
    vtuple     go to state 91
    vstruct    go to state 92
    chain      go to state 94


State 162

   38 expr_cl2: expr "','" • expr

    "a VID (ID with first letter lowercase)"  shift, and go to state 25
    "a TID (ID with first letter uppercase)"  shift, and go to state 31
    "'if'"                                    shift, and go to state 78
    "'not'"                                   shift, and go to state 117
    "'Tuple'"                                 shift, and go to state 68
    "'Array'"                                 shift, and go to state 69
    TK_DINT_LIT                               shift, and go to state 79
    TK_XINT_LIT                               shift, and go to state 80
    TK_FLOAT_LIT                              shift, and go to state 81
    TK_DQSTRING_LIT                           shift, and go to state 27
    TK_SQSTRING_LIT                           shift, and go to state 28
    "'('"                                     shift, and go to state 82
    "'{'"                                     shift, and go to state 83
    "'*'"                                     shift, and go to state 118
    "'+'"                                     shift, and go to state 119
    "'-'"                                     shift, and go to state 120
    "'^'"                                     shift, and go to state 121

    tid              go to state 70
    vid              go to state 84
    floatl           go to state 85
    stringl          go to state 86
    unit             go to state 87
    expr             go to state 217
    parenExpr        go to state 88
    primaryExpr      go to state 89
    vparen           go to state 90
    vtuple           go to state 91
    vstruct          go to state 92
    ifThenElse       go to state 93
    chain            go to state 94
    postfixExpr      go to state 95
    vtcall           go to state 96
    vvcall           go to state 97
    dotNmExpr        go to state 98
    dotIxExpr        go to state 99
    colonNmExpr      go to state 100
    castExpr         go to state 124
    unaryExpr        go to state 125
    unaryOp          go to state 126
    binaryExpr       go to state 127
    mulBinaryExpr    go to state 128
    addBinaryExpr    go to state 129
    cmpBinaryExpr    go to state 130
    eqBinaryExpr     go to state 131
    andBinaryExpr    go to state 132
    xorBinaryExpr    go to state 133
    orBinaryExpr     go to state 134
    typespec         go to state 102
    primaryTypespec  go to state 72
    postfixTypespec  go to state 73


State 163

   52 vparen: "'('" expr "')'" •

    $default  reduce using rule 52 (vparen)


State 164

   39 expr_cl2: expr_cl2 "','" • expr

    "a VID (ID with first letter lowercase)"  shift, and go to state 25
    "a TID (ID with first letter uppercase)"  shift, and go to state 31
    "'if'"                                    shift, and go to state 78
    "'not'"                                   shift, and go to state 117
    "'Tuple'"                                 shift, and go to state 68
    "'Array'"                                 shift, and go to state 69
    TK_DINT_LIT                               shift, and go to state 79
    TK_XINT_LIT                               shift, and go to state 80
    TK_FLOAT_LIT                              shift, and go to state 81
    TK_DQSTRING_LIT                           shift, and go to state 27
    TK_SQSTRING_LIT                           shift, and go to state 28
    "'('"                                     shift, and go to state 82
    "'{'"                                     shift, and go to state 83
    "'*'"                                     shift, and go to state 118
    "'+'"                                     shift, and go to state 119
    "'-'"                                     shift, and go to state 120
    "'^'"                                     shift, and go to state 121

    tid              go to state 70
    vid              go to state 84
    floatl           go to state 85
    stringl          go to state 86
    unit             go to state 87
    expr             go to state 218
    parenExpr        go to state 88
    primaryExpr      go to state 89
    vparen           go to state 90
    vtuple           go to state 91
    vstruct          go to state 92
    ifThenElse       go to state 93
    chain            go to state 94
    postfixExpr      go to state 95
    vtcall           go to state 96
    vvcall           go to state 97
    dotNmExpr        go to state 98
    dotIxExpr        go to state 99
    colonNmExpr      go to state 100
    castExpr         go to state 124
    unaryExpr        go to state 125
    unaryOp          go to state 126
    binaryExpr       go to state 127
    mulBinaryExpr    go to state 128
    addBinaryExpr    go to state 129
    cmpBinaryExpr    go to state 130
    eqBinaryExpr     go to state 131
    andBinaryExpr    go to state 132
    xorBinaryExpr    go to state 133
    orBinaryExpr     go to state 134
    typespec         go to state 102
    primaryTypespec  go to state 72
    postfixTypespec  go to state 73


State 165

   53 vtuple: "'('" expr_cl2 "')'" •

    $default  reduce using rule 53 (vtuple)


State 166

   77 unaryExpr: unaryOp unaryExpr •

    $default  reduce using rule 77 (unaryExpr)


State 167

   84 mulBinaryOp: "'*'" •

    $default  reduce using rule 84 (mulBinaryOp)


State 168

   85 mulBinaryOp: "'/'" •

    $default  reduce using rule 85 (mulBinaryOp)


State 169

   86 mulBinaryOp: "'%'" •

    $default  reduce using rule 86 (mulBinaryOp)


State 170

   88 mulBinaryExpr: mulBinaryExpr mulBinaryOp • unaryExpr

    "a VID (ID with first letter lowercase)"  shift, and go to state 25
    "a TID (ID with first letter uppercase)"  shift, and go to state 31
    "'if'"                                    shift, and go to state 78
    "'not'"                                   shift, and go to state 117
    "'Tuple'"                                 shift, and go to state 68
    "'Array'"                                 shift, and go to state 69
    TK_DINT_LIT                               shift, and go to state 79
    TK_XINT_LIT                               shift, and go to state 80
    TK_FLOAT_LIT                              shift, and go to state 81
    TK_DQSTRING_LIT                           shift, and go to state 27
    TK_SQSTRING_LIT                           shift, and go to state 28
    "'('"                                     shift, and go to state 82
    "'{'"                                     shift, and go to state 83
    "'*'"                                     shift, and go to state 118
    "'+'"                                     shift, and go to state 119
    "'-'"                                     shift, and go to state 120
    "'^'"                                     shift, and go to state 121

    tid              go to state 70
    vid              go to state 84
    floatl           go to state 85
    stringl          go to state 86
    unit             go to state 87
    parenExpr        go to state 88
    primaryExpr      go to state 89
    vparen           go to state 90
    vtuple           go to state 91
    vstruct          go to state 92
    ifThenElse       go to state 93
    chain            go to state 94
    postfixExpr      go to state 95
    vtcall           go to state 96
    vvcall           go to state 97
    dotNmExpr        go to state 98
    dotIxExpr        go to state 99
    colonNmExpr      go to state 100
    castExpr         go to state 124
    unaryExpr        go to state 219
    unaryOp          go to state 126
    typespec         go to state 102
    primaryTypespec  go to state 72
    postfixTypespec  go to state 73


State 171

   89 addBinaryOp: "'+'" •

    $default  reduce using rule 89 (addBinaryOp)


State 172

   90 addBinaryOp: "'-'" •

    $default  reduce using rule 90 (addBinaryOp)


State 173

   92 addBinaryExpr: addBinaryExpr addBinaryOp • mulBinaryExpr

    "a VID (ID with first letter lowercase)"  shift, and go to state 25
    "a TID (ID with first letter uppercase)"  shift, and go to state 31
    "'if'"                                    shift, and go to state 78
    "'not'"                                   shift, and go to state 117
    "'Tuple'"                                 shift, and go to state 68
    "'Array'"                                 shift, and go to state 69
    TK_DINT_LIT                               shift, and go to state 79
    TK_XINT_LIT                               shift, and go to state 80
    TK_FLOAT_LIT                              shift, and go to state 81
    TK_DQSTRING_LIT                           shift, and go to state 27
    TK_SQSTRING_LIT                           shift, and go to state 28
    "'('"                                     shift, and go to state 82
    "'{'"                                     shift, and go to state 83
    "'*'"                                     shift, and go to state 118
    "'+'"                                     shift, and go to state 119
    "'-'"                                     shift, and go to state 120
    "'^'"                                     shift, and go to state 121

    tid              go to state 70
    vid              go to state 84
    floatl           go to state 85
    stringl          go to state 86
    unit             go to state 87
    parenExpr        go to state 88
    primaryExpr      go to state 89
    vparen           go to state 90
    vtuple           go to state 91
    vstruct          go to state 92
    ifThenElse       go to state 93
    chain            go to state 94
    postfixExpr      go to state 95
    vtcall           go to state 96
    vvcall           go to state 97
    dotNmExpr        go to state 98
    dotIxExpr        go to state 99
    colonNmExpr      go to state 100
    castExpr         go to state 124
    unaryExpr        go to state 125
    unaryOp          go to state 126
    mulBinaryExpr    go to state 220
    typespec         go to state 102
    primaryTypespec  go to state 72
    postfixTypespec  go to state 73


State 174

   93 cmpBinaryOp: "'<'" •

    $default  reduce using rule 93 (cmpBinaryOp)


State 175

   94 cmpBinaryOp: "'<='" •

    $default  reduce using rule 94 (cmpBinaryOp)


State 176

   95 cmpBinaryOp: "'>'" •

    $default  reduce using rule 95 (cmpBinaryOp)


State 177

   96 cmpBinaryOp: "'>='" •

    $default  reduce using rule 96 (cmpBinaryOp)


State 178

   98 cmpBinaryExpr: cmpBinaryExpr cmpBinaryOp • addBinaryExpr

    "a VID (ID with first letter lowercase)"  shift, and go to state 25
    "a TID (ID with first letter uppercase)"  shift, and go to state 31
    "'if'"                                    shift, and go to state 78
    "'not'"                                   shift, and go to state 117
    "'Tuple'"                                 shift, and go to state 68
    "'Array'"                                 shift, and go to state 69
    TK_DINT_LIT                               shift, and go to state 79
    TK_XINT_LIT                               shift, and go to state 80
    TK_FLOAT_LIT                              shift, and go to state 81
    TK_DQSTRING_LIT                           shift, and go to state 27
    TK_SQSTRING_LIT                           shift, and go to state 28
    "'('"                                     shift, and go to state 82
    "'{'"                                     shift, and go to state 83
    "'*'"                                     shift, and go to state 118
    "'+'"                                     shift, and go to state 119
    "'-'"                                     shift, and go to state 120
    "'^'"                                     shift, and go to state 121

    tid              go to state 70
    vid              go to state 84
    floatl           go to state 85
    stringl          go to state 86
    unit             go to state 87
    parenExpr        go to state 88
    primaryExpr      go to state 89
    vparen           go to state 90
    vtuple           go to state 91
    vstruct          go to state 92
    ifThenElse       go to state 93
    chain            go to state 94
    postfixExpr      go to state 95
    vtcall           go to state 96
    vvcall           go to state 97
    dotNmExpr        go to state 98
    dotIxExpr        go to state 99
    colonNmExpr      go to state 100
    castExpr         go to state 124
    unaryExpr        go to state 125
    unaryOp          go to state 126
    mulBinaryExpr    go to state 128
    addBinaryExpr    go to state 221
    typespec         go to state 102
    primaryTypespec  go to state 72
    postfixTypespec  go to state 73


State 179

   99 eqBinaryOp: "'=='" •

    $default  reduce using rule 99 (eqBinaryOp)


State 180

  100 eqBinaryOp: "'!='" •

    $default  reduce using rule 100 (eqBinaryOp)


State 181

  102 eqBinaryExpr: eqBinaryExpr eqBinaryOp • cmpBinaryExpr

    "a VID (ID with first letter lowercase)"  shift, and go to state 25
    "a TID (ID with first letter uppercase)"  shift, and go to state 31
    "'if'"                                    shift, and go to state 78
    "'not'"                                   shift, and go to state 117
    "'Tuple'"                                 shift, and go to state 68
    "'Array'"                                 shift, and go to state 69
    TK_DINT_LIT                               shift, and go to state 79
    TK_XINT_LIT                               shift, and go to state 80
    TK_FLOAT_LIT                              shift, and go to state 81
    TK_DQSTRING_LIT                           shift, and go to state 27
    TK_SQSTRING_LIT                           shift, and go to state 28
    "'('"                                     shift, and go to state 82
    "'{'"                                     shift, and go to state 83
    "'*'"                                     shift, and go to state 118
    "'+'"                                     shift, and go to state 119
    "'-'"                                     shift, and go to state 120
    "'^'"                                     shift, and go to state 121

    tid              go to state 70
    vid              go to state 84
    floatl           go to state 85
    stringl          go to state 86
    unit             go to state 87
    parenExpr        go to state 88
    primaryExpr      go to state 89
    vparen           go to state 90
    vtuple           go to state 91
    vstruct          go to state 92
    ifThenElse       go to state 93
    chain            go to state 94
    postfixExpr      go to state 95
    vtcall           go to state 96
    vvcall           go to state 97
    dotNmExpr        go to state 98
    dotIxExpr        go to state 99
    colonNmExpr      go to state 100
    castExpr         go to state 124
    unaryExpr        go to state 125
    unaryOp          go to state 126
    mulBinaryExpr    go to state 128
    addBinaryExpr    go to state 129
    cmpBinaryExpr    go to state 222
    typespec         go to state 102
    primaryTypespec  go to state 72
    postfixTypespec  go to state 73


State 182

  104 andBinaryExpr: andBinaryExpr "'and'" • eqBinaryExpr

    "a VID (ID with first letter lowercase)"  shift, and go to state 25
    "a TID (ID with first letter uppercase)"  shift, and go to state 31
    "'if'"                                    shift, and go to state 78
    "'not'"                                   shift, and go to state 117
    "'Tuple'"                                 shift, and go to state 68
    "'Array'"                                 shift, and go to state 69
    TK_DINT_LIT                               shift, and go to state 79
    TK_XINT_LIT                               shift, and go to state 80
    TK_FLOAT_LIT                              shift, and go to state 81
    TK_DQSTRING_LIT                           shift, and go to state 27
    TK_SQSTRING_LIT                           shift, and go to state 28
    "'('"                                     shift, and go to state 82
    "'{'"                                     shift, and go to state 83
    "'*'"                                     shift, and go to state 118
    "'+'"                                     shift, and go to state 119
    "'-'"                                     shift, and go to state 120
    "'^'"                                     shift, and go to state 121

    tid              go to state 70
    vid              go to state 84
    floatl           go to state 85
    stringl          go to state 86
    unit             go to state 87
    parenExpr        go to state 88
    primaryExpr      go to state 89
    vparen           go to state 90
    vtuple           go to state 91
    vstruct          go to state 92
    ifThenElse       go to state 93
    chain            go to state 94
    postfixExpr      go to state 95
    vtcall           go to state 96
    vvcall           go to state 97
    dotNmExpr        go to state 98
    dotIxExpr        go to state 99
    colonNmExpr      go to state 100
    castExpr         go to state 124
    unaryExpr        go to state 125
    unaryOp          go to state 126
    mulBinaryExpr    go to state 128
    addBinaryExpr    go to state 129
    cmpBinaryExpr    go to state 130
    eqBinaryExpr     go to state 223
    typespec         go to state 102
    primaryTypespec  go to state 72
    postfixTypespec  go to state 73


State 183

  106 xorBinaryExpr: xorBinaryExpr "'xor'" • andBinaryExpr

    "a VID (ID with first letter lowercase)"  shift, and go to state 25
    "a TID (ID with first letter uppercase)"  shift, and go to state 31
    "'if'"                                    shift, and go to state 78
    "'not'"                                   shift, and go to state 117
    "'Tuple'"                                 shift, and go to state 68
    "'Array'"                                 shift, and go to state 69
    TK_DINT_LIT                               shift, and go to state 79
    TK_XINT_LIT                               shift, and go to state 80
    TK_FLOAT_LIT                              shift, and go to state 81
    TK_DQSTRING_LIT                           shift, and go to state 27
    TK_SQSTRING_LIT                           shift, and go to state 28
    "'('"                                     shift, and go to state 82
    "'{'"                                     shift, and go to state 83
    "'*'"                                     shift, and go to state 118
    "'+'"                                     shift, and go to state 119
    "'-'"                                     shift, and go to state 120
    "'^'"                                     shift, and go to state 121

    tid              go to state 70
    vid              go to state 84
    floatl           go to state 85
    stringl          go to state 86
    unit             go to state 87
    parenExpr        go to state 88
    primaryExpr      go to state 89
    vparen           go to state 90
    vtuple           go to state 91
    vstruct          go to state 92
    ifThenElse       go to state 93
    chain            go to state 94
    postfixExpr      go to state 95
    vtcall           go to state 96
    vvcall           go to state 97
    dotNmExpr        go to state 98
    dotIxExpr        go to state 99
    colonNmExpr      go to state 100
    castExpr         go to state 124
    unaryExpr        go to state 125
    unaryOp          go to state 126
    mulBinaryExpr    go to state 128
    addBinaryExpr    go to state 129
    cmpBinaryExpr    go to state 130
    eqBinaryExpr     go to state 131
    andBinaryExpr    go to state 224
    typespec         go to state 102
    primaryTypespec  go to state 72
    postfixTypespec  go to state 73


State 184

  108 orBinaryExpr: orBinaryExpr "'or'" • xorBinaryExpr

    "a VID (ID with first letter lowercase)"  shift, and go to state 25
    "a TID (ID with first letter uppercase)"  shift, and go to state 31
    "'if'"                                    shift, and go to state 78
    "'not'"                                   shift, and go to state 117
    "'Tuple'"                                 shift, and go to state 68
    "'Array'"                                 shift, and go to state 69
    TK_DINT_LIT                               shift, and go to state 79
    TK_XINT_LIT                               shift, and go to state 80
    TK_FLOAT_LIT                              shift, and go to state 81
    TK_DQSTRING_LIT                           shift, and go to state 27
    TK_SQSTRING_LIT                           shift, and go to state 28
    "'('"                                     shift, and go to state 82
    "'{'"                                     shift, and go to state 83
    "'*'"                                     shift, and go to state 118
    "'+'"                                     shift, and go to state 119
    "'-'"                                     shift, and go to state 120
    "'^'"                                     shift, and go to state 121

    tid              go to state 70
    vid              go to state 84
    floatl           go to state 85
    stringl          go to state 86
    unit             go to state 87
    parenExpr        go to state 88
    primaryExpr      go to state 89
    vparen           go to state 90
    vtuple           go to state 91
    vstruct          go to state 92
    ifThenElse       go to state 93
    chain            go to state 94
    postfixExpr      go to state 95
    vtcall           go to state 96
    vvcall           go to state 97
    dotNmExpr        go to state 98
    dotIxExpr        go to state 99
    colonNmExpr      go to state 100
    castExpr         go to state 124
    unaryExpr        go to state 125
    unaryOp          go to state 126
    mulBinaryExpr    go to state 128
    addBinaryExpr    go to state 129
    cmpBinaryExpr    go to state 130
    eqBinaryExpr     go to state 131
    andBinaryExpr    go to state 132
    xorBinaryExpr    go to state 225
    typespec         go to state 102
    primaryTypespec  go to state 72
    postfixTypespec  go to state 73


State 185

   34 unit: "'('" • "')'"
  135 lpattern: "'('" • lpatternField_cl "')'"

    "a VID (ID with first letter lowercase)"  shift, and go to state 25
    "')'"                                     shift, and go to state 51

    vid               go to state 186
    vpatternField     go to state 188
    lpatternField     go to state 226
    lpatternField_cl  go to state 227


State 186

  129 vpatternField: vid • typespec
  131 lpatternField: vid •

    "a TID (ID with first letter uppercase)"  shift, and go to state 31
    "'Tuple'"                                 shift, and go to state 68
    "'Array'"                                 shift, and go to state 69

    $default  reduce using rule 131 (lpatternField)

    tid              go to state 70
    typespec         go to state 71
    primaryTypespec  go to state 72
    postfixTypespec  go to state 73


State 187

  136 lpattern: unit •

    $default  reduce using rule 136 (lpattern)


State 188

  130 lpatternField: vpatternField •

    $default  reduce using rule 130 (lpatternField)


State 189

  134 lpattern: lpatternField •

    $default  reduce using rule 134 (lpattern)


State 190

   11 letStmt: "'let'" lpattern • "'='" expr

    "'='"  shift, and go to state 228


State 191

   12 setStmt: "'set'" expr • "'='" expr

    "'='"  shift, and go to state 229


State 192

   60 chainPrefix: chainPrefixStmt "';'" •

    $default  reduce using rule 60 (chainPrefix)


State 193

  126 vstructField: vid "'='" • expr

    "a VID (ID with first letter lowercase)"  shift, and go to state 25
    "a TID (ID with first letter uppercase)"  shift, and go to state 31
    "'if'"                                    shift, and go to state 78
    "'not'"                                   shift, and go to state 117
    "'Tuple'"                                 shift, and go to state 68
    "'Array'"                                 shift, and go to state 69
    TK_DINT_LIT                               shift, and go to state 79
    TK_XINT_LIT                               shift, and go to state 80
    TK_FLOAT_LIT                              shift, and go to state 81
    TK_DQSTRING_LIT                           shift, and go to state 27
    TK_SQSTRING_LIT                           shift, and go to state 28
    "'('"                                     shift, and go to state 82
    "'{'"                                     shift, and go to state 83
    "'*'"                                     shift, and go to state 118
    "'+'"                                     shift, and go to state 119
    "'-'"                                     shift, and go to state 120
    "'^'"                                     shift, and go to state 121

    tid              go to state 70
    vid              go to state 84
    floatl           go to state 85
    stringl          go to state 86
    unit             go to state 87
    expr             go to state 230
    parenExpr        go to state 88
    primaryExpr      go to state 89
    vparen           go to state 90
    vtuple           go to state 91
    vstruct          go to state 92
    ifThenElse       go to state 93
    chain            go to state 94
    postfixExpr      go to state 95
    vtcall           go to state 96
    vvcall           go to state 97
    dotNmExpr        go to state 98
    dotIxExpr        go to state 99
    colonNmExpr      go to state 100
    castExpr         go to state 124
    unaryExpr        go to state 125
    unaryOp          go to state 126
    binaryExpr       go to state 127
    mulBinaryExpr    go to state 128
    addBinaryExpr    go to state 129
    cmpBinaryExpr    go to state 130
    eqBinaryExpr     go to state 131
    andBinaryExpr    go to state 132
    xorBinaryExpr    go to state 133
    orBinaryExpr     go to state 134
    typespec         go to state 102
    primaryTypespec  go to state 72
    postfixTypespec  go to state 73


State 194

   57 chain: "'{'" expr "'}'" •

    $default  reduce using rule 57 (chain)


State 195

   58 chain: "'{'" chainPrefix "'}'" •

    $default  reduce using rule 58 (chain)


State 196

   61 chainPrefix: chainPrefix chainPrefixStmt • "';'"

    "';'"  shift, and go to state 231


State 197

   13 discardStmt: expr •
   59 chain: "'{'" chainPrefix expr • "'}'"

    "'}'"  shift, and go to state 232

    $default  reduce using rule 13 (discardStmt)


State 198

  128 vstructField_cl: vstructField_cl "','" • vstructField

    "a VID (ID with first letter lowercase)"  shift, and go to state 25

    vid           go to state 152
    vstructField  go to state 233


State 199

   54 vstruct: "'{'" vstructField_cl "'}'" •

    $default  reduce using rule 54 (vstruct)


State 200

   71 dotNmExpr: postfixExpr "'.'" "a VID (ID with first letter lowercase)" •

    $default  reduce using rule 71 (dotNmExpr)


State 201

   72 dotIxExpr: postfixExpr "'.'" TK_DINT_LIT •

    $default  reduce using rule 72 (dotIxExpr)


State 202

   73 colonNmExpr: postfixExpr "':'" "a VID (ID with first letter lowercase)" •

    $default  reduce using rule 73 (colonNmExpr)


State 203

   69 vvcall: postfixExpr "'('" "')'" •

    $default  reduce using rule 69 (vvcall)


State 204

   36 expr_cl: expr •

    $default  reduce using rule 36 (expr_cl)


State 205

   37 expr_cl: expr_cl • "','" expr
   70 vvcall: postfixExpr "'('" expr_cl • "')'"

    "','"  shift, and go to state 234
    "')'"  shift, and go to state 235


State 206

  123 vtarg: expr •

    $default  reduce using rule 123 (vtarg)


State 207

   75 castExpr: typespec • parenExpr
  122 vtarg: typespec •

    "'('"  shift, and go to state 82
    "'{'"  shift, and go to state 83

    $default  reduce using rule 122 (vtarg)

    unit       go to state 87
    parenExpr  go to state 150
    vparen     go to state 90
    vtuple     go to state 91
    vstruct    go to state 92
    chain      go to state 94


State 208

  124 vtarg_cl: vtarg •

    $default  reduce using rule 124 (vtarg_cl)


State 209

   68 vtcall: postfixExpr "'['" vtarg_cl • "']'"
  125 vtarg_cl: vtarg_cl • "','" vtarg

    "','"  shift, and go to state 236
    "']'"  shift, and go to state 237


State 210

   26 linkStmtItem: vid vpattern "'->'" typespec "'from'" • stringl

    TK_DQSTRING_LIT  shift, and go to state 27
    TK_SQSTRING_LIT  shift, and go to state 28

    stringl  go to state 238


State 211

  111 typespec_cl: typespec_cl "','" • typespec

    "a TID (ID with first letter uppercase)"  shift, and go to state 31
    "'Tuple'"                                 shift, and go to state 68
    "'Array'"                                 shift, and go to state 69

    tid              go to state 70
    typespec         go to state 239
    primaryTypespec  go to state 72
    postfixTypespec  go to state 73


State 212

  113 primaryTypespec: "'Tuple'" "'['" typespec_cl "']'" •

    $default  reduce using rule 113 (primaryTypespec)


State 213

  114 primaryTypespec: "'Array'" "'['" typespec "','" • expr "']'"

    "a VID (ID with first letter lowercase)"  shift, and go to state 25
    "a TID (ID with first letter uppercase)"  shift, and go to state 31
    "'if'"                                    shift, and go to state 78
    "'not'"                                   shift, and go to state 117
    "'Tuple'"                                 shift, and go to state 68
    "'Array'"                                 shift, and go to state 69
    TK_DINT_LIT                               shift, and go to state 79
    TK_XINT_LIT                               shift, and go to state 80
    TK_FLOAT_LIT                              shift, and go to state 81
    TK_DQSTRING_LIT                           shift, and go to state 27
    TK_SQSTRING_LIT                           shift, and go to state 28
    "'('"                                     shift, and go to state 82
    "'{'"                                     shift, and go to state 83
    "'*'"                                     shift, and go to state 118
    "'+'"                                     shift, and go to state 119
    "'-'"                                     shift, and go to state 120
    "'^'"                                     shift, and go to state 121

    tid              go to state 70
    vid              go to state 84
    floatl           go to state 85
    stringl          go to state 86
    unit             go to state 87
    expr             go to state 240
    parenExpr        go to state 88
    primaryExpr      go to state 89
    vparen           go to state 90
    vtuple           go to state 91
    vstruct          go to state 92
    ifThenElse       go to state 93
    chain            go to state 94
    postfixExpr      go to state 95
    vtcall           go to state 96
    vvcall           go to state 97
    dotNmExpr        go to state 98
    dotIxExpr        go to state 99
    colonNmExpr      go to state 100
    castExpr         go to state 124
    unaryExpr        go to state 125
    unaryOp          go to state 126
    binaryExpr       go to state 127
    mulBinaryExpr    go to state 128
    addBinaryExpr    go to state 129
    cmpBinaryExpr    go to state 130
    eqBinaryExpr     go to state 131
    andBinaryExpr    go to state 132
    xorBinaryExpr    go to state 133
    orBinaryExpr     go to state 134
    typespec         go to state 102
    primaryTypespec  go to state 72
    postfixTypespec  go to state 73


State 214

  121 ttarg_cl: ttarg_cl "','" • ttarg

    "a VID (ID with first letter lowercase)"  shift, and go to state 25
    "a TID (ID with first letter uppercase)"  shift, and go to state 31
    "'if'"                                    shift, and go to state 78
    "'not'"                                   shift, and go to state 117
    "'Tuple'"                                 shift, and go to state 68
    "'Array'"                                 shift, and go to state 69
    TK_DINT_LIT                               shift, and go to state 79
    TK_XINT_LIT                               shift, and go to state 80
    TK_FLOAT_LIT                              shift, and go to state 81
    TK_DQSTRING_LIT                           shift, and go to state 27
    TK_SQSTRING_LIT                           shift, and go to state 28
    "'('"                                     shift, and go to state 82
    "'{'"                                     shift, and go to state 83
    "'*'"                                     shift, and go to state 118
    "'+'"                                     shift, and go to state 119
    "'-'"                                     shift, and go to state 120
    "'^'"                                     shift, and go to state 121

    tid              go to state 70
    vid              go to state 84
    floatl           go to state 85
    stringl          go to state 86
    unit             go to state 87
    expr             go to state 157
    parenExpr        go to state 88
    primaryExpr      go to state 89
    vparen           go to state 90
    vtuple           go to state 91
    vstruct          go to state 92
    ifThenElse       go to state 93
    chain            go to state 94
    postfixExpr      go to state 95
    vtcall           go to state 96
    vvcall           go to state 97
    dotNmExpr        go to state 98
    dotIxExpr        go to state 99
    colonNmExpr      go to state 100
    castExpr         go to state 124
    unaryExpr        go to state 125
    unaryOp          go to state 126
    binaryExpr       go to state 127
    mulBinaryExpr    go to state 128
    addBinaryExpr    go to state 129
    cmpBinaryExpr    go to state 130
    eqBinaryExpr     go to state 131
    andBinaryExpr    go to state 132
    xorBinaryExpr    go to state 133
    orBinaryExpr     go to state 134
    typespec         go to state 158
    primaryTypespec  go to state 72
    postfixTypespec  go to state 73
    ttarg            go to state 241


State 215

  116 postfixTypespec: postfixTypespec "'['" ttarg_cl "']'" •

    $default  reduce using rule 116 (postfixTypespec)


State 216

   55 ifThenElse: "'if'" parenExpr "'then'" parenExpr •
   56           | "'if'" parenExpr "'then'" parenExpr • "'else'" parenExpr

    "'else'"  shift, and go to state 242

    $default  reduce using rule 55 (ifThenElse)


State 217

   38 expr_cl2: expr "','" expr •

    $default  reduce using rule 38 (expr_cl2)


State 218

   39 expr_cl2: expr_cl2 "','" expr •

    $default  reduce using rule 39 (expr_cl2)


State 219

   88 mulBinaryExpr: mulBinaryExpr mulBinaryOp unaryExpr •

    $default  reduce using rule 88 (mulBinaryExpr)


State 220

   88 mulBinaryExpr: mulBinaryExpr • mulBinaryOp unaryExpr
   92 addBinaryExpr: addBinaryExpr addBinaryOp mulBinaryExpr •

    "'*'"  shift, and go to state 167
    "'/'"  shift, and go to state 168
    "'%'"  shift, and go to state 169

    $default  reduce using rule 92 (addBinaryExpr)

    mulBinaryOp  go to state 170


State 221

   92 addBinaryExpr: addBinaryExpr • addBinaryOp mulBinaryExpr
   98 cmpBinaryExpr: cmpBinaryExpr cmpBinaryOp addBinaryExpr •

    "'+'"  shift, and go to state 171
    "'-'"  shift, and go to state 172

    $default  reduce using rule 98 (cmpBinaryExpr)

    addBinaryOp  go to state 173


State 222

   98 cmpBinaryExpr: cmpBinaryExpr • cmpBinaryOp addBinaryExpr
  102 eqBinaryExpr: eqBinaryExpr eqBinaryOp cmpBinaryExpr •

    "'<'"   shift, and go to state 174
    "'<='"  shift, and go to state 175
    "'>'"   shift, and go to state 176
    "'>='"  shift, and go to state 177

    $default  reduce using rule 102 (eqBinaryExpr)

    cmpBinaryOp  go to state 178


State 223

  102 eqBinaryExpr: eqBinaryExpr • eqBinaryOp cmpBinaryExpr
  104 andBinaryExpr: andBinaryExpr "'and'" eqBinaryExpr •

    "'=='"  shift, and go to state 179
    "'!='"  shift, and go to state 180

    $default  reduce using rule 104 (andBinaryExpr)

    eqBinaryOp  go to state 181


State 224

  104 andBinaryExpr: andBinaryExpr • "'and'" eqBinaryExpr
  106 xorBinaryExpr: xorBinaryExpr "'xor'" andBinaryExpr •

    "'and'"  shift, and go to state 182

    $default  reduce using rule 106 (xorBinaryExpr)


State 225

  106 xorBinaryExpr: xorBinaryExpr • "'xor'" andBinaryExpr
  108 orBinaryExpr: orBinaryExpr "'or'" xorBinaryExpr •

    "'xor'"  shift, and go to state 183

    $default  reduce using rule 108 (orBinaryExpr)


State 226

  142 lpatternField_cl: lpatternField •

    $default  reduce using rule 142 (lpatternField_cl)


State 227

  135 lpattern: "'('" lpatternField_cl • "')'"
  143 lpatternField_cl: lpatternField_cl • "','" lpatternField

    "','"  shift, and go to state 243
    "')'"  shift, and go to state 244


State 228

   11 letStmt: "'let'" lpattern "'='" • expr

    "a VID (ID with first letter lowercase)"  shift, and go to state 25
    "a TID (ID with first letter uppercase)"  shift, and go to state 31
    "'if'"                                    shift, and go to state 78
    "'not'"                                   shift, and go to state 117
    "'Tuple'"                                 shift, and go to state 68
    "'Array'"                                 shift, and go to state 69
    TK_DINT_LIT                               shift, and go to state 79
    TK_XINT_LIT                               shift, and go to state 80
    TK_FLOAT_LIT                              shift, and go to state 81
    TK_DQSTRING_LIT                           shift, and go to state 27
    TK_SQSTRING_LIT                           shift, and go to state 28
    "'('"                                     shift, and go to state 82
    "'{'"                                     shift, and go to state 83
    "'*'"                                     shift, and go to state 118
    "'+'"                                     shift, and go to state 119
    "'-'"                                     shift, and go to state 120
    "'^'"                                     shift, and go to state 121

    tid              go to state 70
    vid              go to state 84
    floatl           go to state 85
    stringl          go to state 86
    unit             go to state 87
    expr             go to state 245
    parenExpr        go to state 88
    primaryExpr      go to state 89
    vparen           go to state 90
    vtuple           go to state 91
    vstruct          go to state 92
    ifThenElse       go to state 93
    chain            go to state 94
    postfixExpr      go to state 95
    vtcall           go to state 96
    vvcall           go to state 97
    dotNmExpr        go to state 98
    dotIxExpr        go to state 99
    colonNmExpr      go to state 100
    castExpr         go to state 124
    unaryExpr        go to state 125
    unaryOp          go to state 126
    binaryExpr       go to state 127
    mulBinaryExpr    go to state 128
    addBinaryExpr    go to state 129
    cmpBinaryExpr    go to state 130
    eqBinaryExpr     go to state 131
    andBinaryExpr    go to state 132
    xorBinaryExpr    go to state 133
    orBinaryExpr     go to state 134
    typespec         go to state 102
    primaryTypespec  go to state 72
    postfixTypespec  go to state 73


State 229

   12 setStmt: "'set'" expr "'='" • expr

    "a VID (ID with first letter lowercase)"  shift, and go to state 25
    "a TID (ID with first letter uppercase)"  shift, and go to state 31
    "'if'"                                    shift, and go to state 78
    "'not'"                                   shift, and go to state 117
    "'Tuple'"                                 shift, and go to state 68
    "'Array'"                                 shift, and go to state 69
    TK_DINT_LIT                               shift, and go to state 79
    TK_XINT_LIT                               shift, and go to state 80
    TK_FLOAT_LIT                              shift, and go to state 81
    TK_DQSTRING_LIT                           shift, and go to state 27
    TK_SQSTRING_LIT                           shift, and go to state 28
    "'('"                                     shift, and go to state 82
    "'{'"                                     shift, and go to state 83
    "'*'"                                     shift, and go to state 118
    "'+'"                                     shift, and go to state 119
    "'-'"                                     shift, and go to state 120
    "'^'"                                     shift, and go to state 121

    tid              go to state 70
    vid              go to state 84
    floatl           go to state 85
    stringl          go to state 86
    unit             go to state 87
    expr             go to state 246
    parenExpr        go to state 88
    primaryExpr      go to state 89
    vparen           go to state 90
    vtuple           go to state 91
    vstruct          go to state 92
    ifThenElse       go to state 93
    chain            go to state 94
    postfixExpr      go to state 95
    vtcall           go to state 96
    vvcall           go to state 97
    dotNmExpr        go to state 98
    dotIxExpr        go to state 99
    colonNmExpr      go to state 100
    castExpr         go to state 124
    unaryExpr        go to state 125
    unaryOp          go to state 126
    binaryExpr       go to state 127
    mulBinaryExpr    go to state 128
    addBinaryExpr    go to state 129
    cmpBinaryExpr    go to state 130
    eqBinaryExpr     go to state 131
    andBinaryExpr    go to state 132
    xorBinaryExpr    go to state 133
    orBinaryExpr     go to state 134
    typespec         go to state 102
    primaryTypespec  go to state 72
    postfixTypespec  go to state 73


State 230

  126 vstructField: vid "'='" expr •

    $default  reduce using rule 126 (vstructField)


State 231

   61 chainPrefix: chainPrefix chainPrefixStmt "';'" •

    $default  reduce using rule 61 (chainPrefix)


State 232

   59 chain: "'{'" chainPrefix expr "'}'" •

    $default  reduce using rule 59 (chain)


State 233

  128 vstructField_cl: vstructField_cl "','" vstructField •

    $default  reduce using rule 128 (vstructField_cl)


State 234

   37 expr_cl: expr_cl "','" • expr

    "a VID (ID with first letter lowercase)"  shift, and go to state 25
    "a TID (ID with first letter uppercase)"  shift, and go to state 31
    "'if'"                                    shift, and go to state 78
    "'not'"                                   shift, and go to state 117
    "'Tuple'"                                 shift, and go to state 68
    "'Array'"                                 shift, and go to state 69
    TK_DINT_LIT                               shift, and go to state 79
    TK_XINT_LIT                               shift, and go to state 80
    TK_FLOAT_LIT                              shift, and go to state 81
    TK_DQSTRING_LIT                           shift, and go to state 27
    TK_SQSTRING_LIT                           shift, and go to state 28
    "'('"                                     shift, and go to state 82
    "'{'"                                     shift, and go to state 83
    "'*'"                                     shift, and go to state 118
    "'+'"                                     shift, and go to state 119
    "'-'"                                     shift, and go to state 120
    "'^'"                                     shift, and go to state 121

    tid              go to state 70
    vid              go to state 84
    floatl           go to state 85
    stringl          go to state 86
    unit             go to state 87
    expr             go to state 247
    parenExpr        go to state 88
    primaryExpr      go to state 89
    vparen           go to state 90
    vtuple           go to state 91
    vstruct          go to state 92
    ifThenElse       go to state 93
    chain            go to state 94
    postfixExpr      go to state 95
    vtcall           go to state 96
    vvcall           go to state 97
    dotNmExpr        go to state 98
    dotIxExpr        go to state 99
    colonNmExpr      go to state 100
    castExpr         go to state 124
    unaryExpr        go to state 125
    unaryOp          go to state 126
    binaryExpr       go to state 127
    mulBinaryExpr    go to state 128
    addBinaryExpr    go to state 129
    cmpBinaryExpr    go to state 130
    eqBinaryExpr     go to state 131
    andBinaryExpr    go to state 132
    xorBinaryExpr    go to state 133
    orBinaryExpr     go to state 134
    typespec         go to state 102
    primaryTypespec  go to state 72
    postfixTypespec  go to state 73


State 235

   70 vvcall: postfixExpr "'('" expr_cl "')'" •

    $default  reduce using rule 70 (vvcall)


State 236

  125 vtarg_cl: vtarg_cl "','" • vtarg

    "a VID (ID with first letter lowercase)"  shift, and go to state 25
    "a TID (ID with first letter uppercase)"  shift, and go to state 31
    "'if'"                                    shift, and go to state 78
    "'not'"                                   shift, and go to state 117
    "'Tuple'"                                 shift, and go to state 68
    "'Array'"                                 shift, and go to state 69
    TK_DINT_LIT                               shift, and go to state 79
    TK_XINT_LIT                               shift, and go to state 80
    TK_FLOAT_LIT                              shift, and go to state 81
    TK_DQSTRING_LIT                           shift, and go to state 27
    TK_SQSTRING_LIT                           shift, and go to state 28
    "'('"                                     shift, and go to state 82
    "'{'"                                     shift, and go to state 83
    "'*'"                                     shift, and go to state 118
    "'+'"                                     shift, and go to state 119
    "'-'"                                     shift, and go to state 120
    "'^'"                                     shift, and go to state 121

    tid              go to state 70
    vid              go to state 84
    floatl           go to state 85
    stringl          go to state 86
    unit             go to state 87
    expr             go to state 206
    parenExpr        go to state 88
    primaryExpr      go to state 89
    vparen           go to state 90
    vtuple           go to state 91
    vstruct          go to state 92
    ifThenElse       go to state 93
    chain            go to state 94
    postfixExpr      go to state 95
    vtcall           go to state 96
    vvcall           go to state 97
    dotNmExpr        go to state 98
    dotIxExpr        go to state 99
    colonNmExpr      go to state 100
    castExpr         go to state 124
    unaryExpr        go to state 125
    unaryOp          go to state 126
    binaryExpr       go to state 127
    mulBinaryExpr    go to state 128
    addBinaryExpr    go to state 129
    cmpBinaryExpr    go to state 130
    eqBinaryExpr     go to state 131
    andBinaryExpr    go to state 132
    xorBinaryExpr    go to state 133
    orBinaryExpr     go to state 134
    typespec         go to state 207
    primaryTypespec  go to state 72
    postfixTypespec  go to state 73
    vtarg            go to state 248


State 237

   68 vtcall: postfixExpr "'['" vtarg_cl "']'" •

    $default  reduce using rule 68 (vtcall)


State 238

   26 linkStmtItem: vid vpattern "'->'" typespec "'from'" stringl •

    $default  reduce using rule 26 (linkStmtItem)


State 239

  111 typespec_cl: typespec_cl "','" typespec •

    $default  reduce using rule 111 (typespec_cl)


State 240

  114 primaryTypespec: "'Array'" "'['" typespec "','" expr • "']'"

    "']'"  shift, and go to state 249


State 241

  121 ttarg_cl: ttarg_cl "','" ttarg •

    $default  reduce using rule 121 (ttarg_cl)


State 242

   56 ifThenElse: "'if'" parenExpr "'then'" parenExpr "'else'" • parenExpr

    "'('"  shift, and go to state 82
    "'{'"  shift, and go to state 83

    unit       go to state 87
    parenExpr  go to state 250
    vparen     go to state 90
    vtuple     go to state 91
    vstruct    go to state 92
    chain      go to state 94


State 243

  143 lpatternField_cl: lpatternField_cl "','" • lpatternField

    "a VID (ID with first letter lowercase)"  shift, and go to state 25

    vid            go to state 186
    vpatternField  go to state 188
    lpatternField  go to state 251


State 244

  135 lpattern: "'('" lpatternField_cl "')'" •

    $default  reduce using rule 135 (lpattern)


State 245

   11 letStmt: "'let'" lpattern "'='" expr •

    $default  reduce using rule 11 (letStmt)


State 246

   12 setStmt: "'set'" expr "'='" expr •

    $default  reduce using rule 12 (setStmt)


State 247

   37 expr_cl: expr_cl "','" expr •

    $default  reduce using rule 37 (expr_cl)


State 248

  125 vtarg_cl: vtarg_cl "','" vtarg •

    $default  reduce using rule 125 (vtarg_cl)


State 249

  114 primaryTypespec: "'Array'" "'['" typespec "','" expr "']'" •

    $default  reduce using rule 114 (primaryTypespec)


State 250

   56 ifThenElse: "'if'" parenExpr "'then'" parenExpr "'else'" parenExpr •

    $default  reduce using rule 56 (ifThenElse)


State 251

  143 lpatternField_cl: lpatternField_cl "','" lpatternField •

    $default  reduce using rule 143 (lpatternField_cl)
