Terminals unused in grammar

    "__42__"
    "struct"
    "then"
    "match"
    "with"
    "extern"
    "as"
    "for"
    "CORE_PROFILE"
    "BROWSER_PROFILE"
    "NATIVE_PROFILE"
    ":"
    "->"
    "^"
    "&"
    "!"
    "|"
    "EOS"
    "<null>"


Grammar

    0 $accept: script $end

    1 script: script_header script_field_sl

    2 script_header: %empty
    3              | script_header script_header_stmt ";"

    4 script_header_stmt: import_stmt

    5 script_field: "mod" vid mod_exp

    6 script_field_sl: script_field ";"
    7                | script_field_sl script_field ";"

    8 mod_exp: "{" mod_field_sl "}"
    9        | "{" using_tpattern mod_field_sl "}"
   10        | "{" "}"
   11        | "{" using_tpattern "}"

   12 mod_field_sl: mod_field ";"
   13             | mod_field_sl mod_field ";"

   14 mod_field: vid "=" long_exp
   15          | tid "=" type_spec
   16          | cid "=" class_spec
   17          | "mod" vid mod_exp

   18 using_tpattern: "using" tpattern ";"

   19 import_stmt: "imports" "{" import_field_group_sl0 "}"

   20 import_field_group_sl0: %empty
   21                       | import_field_group_sl0 import_field_group ";"

   22 import_field_group: import_field_cl1 "from" stringl

   23 import_field_cl1: vid
   24                 | import_field_cl1 "," vid

   25 chain_prefix_stmt: const_stmt
   26                  | val_stmt
   27                  | var_stmt
   28                  | set_stmt
   29                  | discard_stmt

   30 const_stmt: "const" lpattern "=" expr

   31 val_stmt: "val" lpattern "=" expr

   32 var_stmt: "var" lpattern "=" expr

   33 set_stmt: "set" expr "=" expr

   34 discard_stmt: "discard" expr

   35 tid: "TypeId"

   36 vid: "val_id"

   37 cid: "CLS_ID"

   38 floatl: "4.2"

   39 stringl: "'sq-string-literal'"
   40        | "\"dq-string-literal\""

   41 mod_prefix: vid "::"
   42           | vid "[" targ_cl "]" "::"
   43           | mod_prefix vid "::"
   44           | mod_prefix vid "[" targ_cl "]" "::"

   45 expr: binary_exp

   46 long_exp: expr
   47         | lambda_exp

   48 expr_cl2: expr "," expr
   49         | expr_cl2 "," expr

   50 type_query_exp_sl0: %empty
   51                   | type_query_exp_sl0 type_query_exp ";"

   52 bracketed_exp: paren_exp
   53              | vtupleExpr
   54              | vstructExpr
   55              | chain_exp

   56 paren_exp: "(" long_exp ")"

   57 vtupleExpr: "(" ")"
   58           | "(" expr "," ")"
   59           | "(" expr_cl2 ")"

   60 vstructExpr: "{" struct_exp_field_cl "}"

   61 primary_exp: bracketed_exp
   62            | vid
   63            | int_expr
   64            | floatl
   65            | stringls
   66            | if_exp
   67            | mod_prefix vid

   68 int_expr: "42"
   69         | "0x2a"
   70         | "42u"
   71         | "0x2Au"

   72 stringls: "'sq-string-literal'"
   73         | "\"dq-string-literal\""
   74         | stringls "'sq-string-literal'"
   75         | stringls "\"dq-string-literal\""

   76 if_exp: "if" bracketed_exp bracketed_exp
   77       | "if" bracketed_exp bracketed_exp "else" primary_exp

   78 chain_exp: "{" "}"
   79          | "{" long_exp "}"
   80          | "{" chain_prefix "}"
   81          | "{" chain_prefix long_exp "}"

   82 chain_prefix: chain_prefix_stmt ";"
   83             | chain_prefix chain_prefix_stmt ";"

   84 lambda_exp: fn_type_spec bracketed_exp

   85 postfix_exp: primary_exp
   86            | vcall_exp
   87            | dot_name_exp
   88            | dot_index_exp

   89 vcall_exp: postfix_exp "(" ")"
   90          | postfix_exp "(" varg_cl ")"

   91 dot_name_exp: postfix_exp "." "val_id"
   92             | type_spec "::" "TypeId"
   93             | type_spec "::" "TypeId" "using" paren_exp

   94 dot_index_exp: postfix_exp "." int_expr
   95              | postfix_exp "." bracketed_exp

   96 unary_exp: postfix_exp
   97          | unary_op unary_exp

   98 unary_op: "+"
   99         | "-"
  100         | "not"

  101 binary_exp: or_binary_exp

  102 mul_binary_op: "*"
  103              | "/"
  104              | "%"

  105 mul_binary_exp: unary_exp
  106               | mul_binary_exp mul_binary_op unary_exp

  107 add_binary_op: "+"
  108              | "-"

  109 add_binary_exp: mul_binary_exp
  110               | add_binary_exp add_binary_op mul_binary_exp

  111 cmp_binary_op: "<"
  112              | "<="
  113              | ">"
  114              | ">="

  115 cmp_binary_exp: add_binary_exp
  116               | cmp_binary_exp cmp_binary_op add_binary_exp

  117 eq_binary_op: "=="
  118             | "!="

  119 eq_binary_exp: cmp_binary_exp
  120              | eq_binary_exp eq_binary_op cmp_binary_exp

  121 and_binary_exp: eq_binary_exp
  122               | and_binary_exp "and" eq_binary_exp

  123 xor_binary_exp: and_binary_exp
  124               | xor_binary_exp "xor" and_binary_exp

  125 or_binary_exp: xor_binary_exp
  126              | or_binary_exp "or" xor_binary_exp

  127 type_query_exp: type_spec type_query_op type_spec

  128 type_query_op: ":<"
  129              | ">:"
  130              | "=="

  131 type_spec_cl2: type_spec "," type_spec
  132              | type_spec_cl2 "," type_spec

  133 type_spec: tid
  134          | mod_prefix_tid
  135          | tuple_type_spec
  136          | array_type_spec
  137          | struct_type_spec
  138          | enum_type_spec
  139          | fn_type_spec

  140 mod_prefix_tid: mod_prefix tid

  141 tuple_type_spec: "{" type_spec "}"
  142                | "{" type_spec_cl2 "}"

  143 array_type_spec: "[" type_spec "*" expr "]"

  144 struct_type_spec: "{" struct_type_spec_field_cl "}"

  145 struct_type_spec_field_cl: struct_type_spec_field
  146                          | struct_type_spec_field_cl "," struct_type_spec_field

  147 struct_type_spec_field: vid type_spec

  148 enum_type_spec_field: tid
  149                     | tid type_spec

  150 enum_type_spec_field_cl: enum_type_spec_field
  151                        | enum_type_spec_field_cl "," enum_type_spec_field

  152 enum_type_spec: "enum" "{" enum_type_spec_field_cl "}"

  153 fn_type_spec: "fn" vpattern type_spec

  154 targ: type_spec
  155     | expr

  156 targ_cl: targ
  157        | targ_cl "," targ

  158 varg: expr
  159     | "out" expr
  160     | "inout" expr

  161 varg_cl: varg
  162        | varg_cl "," varg

  163 class_spec: primary_class_spec

  164 primary_class_spec: cid
  165                   | mod_prefix_cid_class_spec
  166                   | class_exp_class_spec

  167 mod_prefix_cid_class_spec: mod_prefix cid

  168 class_exp_class_spec: "typeclass" "(" tid class_spec ")" "{" type_query_exp_sl0 "}"

  169 struct_exp_field: vid "=" expr

  170 vpattern_field: vid type_spec
  171               | "out" vid type_spec
  172               | "inout" vid type_spec

  173 lpattern_field: vid type_spec
  174               | vid

  175 tpattern_field: vid type_spec
  176               | tid class_spec

  177 destructured_lpattern: "{" lpattern_field_cl "}"

  178 lpattern: lpattern_field
  179         | destructured_lpattern

  180 vpattern: "(" vpattern_field_cl ")"
  181         | "(" ")"

  182 tpattern: "[" tpattern_field_cl1 "]"

  183 vpattern_field_cl: vpattern_field
  184                  | vpattern_field_cl "," vpattern_field

  185 lpattern_field_cl: lpattern_field
  186                  | lpattern_field_cl "," lpattern_field

  187 tpattern_field_cl1: tpattern_field
  188                   | tpattern_field_cl1 "," tpattern_field

  189 struct_exp_field_cl: struct_exp_field
  190                    | struct_exp_field_cl "," struct_exp_field


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    "val_id" <TokenInfo> (258) 36 91
    "TypeId" <TokenInfo> (259) 35 92 93
    "CLS_ID" <TokenInfo> (260) 37
    "__42__" <TokenInfo> (261)
    "using" (262) 18 93
    "mod" (263) 5 17
    "struct" (264)
    "enum" (265) 152
    "typeclass" (266) 168
    "if" (267) 76 77
    "then" (268)
    "else" (269) 77
    "match" (270)
    "with" (271)
    "imports" (272) 19
    "extern" (273)
    "from" (274) 22
    "const" (275) 30
    "val" (276) 31
    "var" (277) 32
    "set" (278) 33
    "fn" (279) 153
    "and" (280) 122
    "xor" (281) 124
    "or" (282) 126
    "not" (283) 100
    "out" (284) 159 171
    "inout" (285) 160 172
    "discard" (286) 34
    "as" (287)
    "for" (288)
    "CORE_PROFILE" (289)
    "BROWSER_PROFILE" (290)
    "NATIVE_PROFILE" (291)
    "42" <TokenInfo> (292) 68
    "0x2a" <TokenInfo> (293) 69
    "42u" <TokenInfo> (294) 70
    "0x2Au" <TokenInfo> (295) 71
    "4.2" <TokenInfo> (296) 38
    "\"dq-string-literal\"" <TokenInfo> (297) 40 73 75
    "'sq-string-literal'" <TokenInfo> (298) 39 72 74
    "." (299) 91 94 95
    ":" (300)
    "," (301) 24 48 49 58 131 132 146 151 157 162 184 186 188 190
    ";" (302) 3 6 7 12 13 18 21 51 82 83
    "::" (303) 41 42 43 44 92 93
    "(" (304) 56 57 58 59 89 90 168 180 181
    ")" (305) 56 57 58 59 89 90 168 180 181
    "[" (306) 42 44 143 182
    "]" (307) 42 44 143 182
    "{" (308) 8 9 10 11 19 60 78 79 80 81 141 142 144 152 168 177
    "}" (309) 8 9 10 11 19 60 78 79 80 81 141 142 144 152 168 177
    "->" (310)
    "*" (311) 102 143
    "/" (312) 103
    "%" (313) 104
    "+" (314) 98 107
    "-" (315) 99 108
    "<" (316) 111
    "<=" (317) 112
    ">" (318) 113
    ">=" (319) 114
    "=" (320) 14 15 16 30 31 32 33 169
    "==" (321) 117 130
    "!=" (322) 118
    "^" (323)
    "&" (324)
    "!" (325)
    "|" (326)
    "EOS" (327)
    ":<" (328) 128
    ">:" (329) 129
    "<null>" (330)


Nonterminals, with rules where they appear

    $accept (76)
        on left: 0
    script <pdm::ast::Script*> (77)
        on left: 1
        on right: 0
    script_header <std::vector<pdm::ast::HeaderStmt*>> (78)
        on left: 2 3
        on right: 1 3
    script_header_stmt <pdm::ast::HeaderStmt*> (79)
        on left: 4
        on right: 3
    script_field <pdm::ast::Script::Field*> (80)
        on left: 5
        on right: 6 7
    script_field_sl <std::vector<pdm::ast::Script::Field*>> (81)
        on left: 6 7
        on right: 1 7
    mod_exp <pdm::ast::ModExp*> (82)
        on left: 8 9 10 11
        on right: 5 17
    mod_field_sl <std::vector<pdm::ast::ModExp::Field*>> (83)
        on left: 12 13
        on right: 8 9 13
    mod_field <pdm::ast::ModExp::Field*> (84)
        on left: 14 15 16 17
        on right: 12 13
    using_tpattern <pdm::ast::TPattern*> (85)
        on left: 18
        on right: 9 11
    import_stmt <pdm::ast::HeaderStmt*> (86)
        on left: 19
        on right: 4
    import_field_group_sl0 <std::vector<ast::ImportStmt::FieldGroup*>> (87)
        on left: 20 21
        on right: 19 21
    import_field_group <ast::ImportStmt::FieldGroup*> (88)
        on left: 22
        on right: 21
    import_field_cl1 <std::vector<ast::ImportStmt::Field*>> (89)
        on left: 23 24
        on right: 22 24
    chain_prefix_stmt <pdm::ast::Stmt*> (90)
        on left: 25 26 27 28 29
        on right: 82 83
    const_stmt <pdm::ast::Stmt*> (91)
        on left: 30
        on right: 25
    val_stmt <pdm::ast::Stmt*> (92)
        on left: 31
        on right: 26
    var_stmt <pdm::ast::Stmt*> (93)
        on left: 32
        on right: 27
    set_stmt <pdm::ast::Stmt*> (94)
        on left: 33
        on right: 28
    discard_stmt <pdm::ast::Stmt*> (95)
        on left: 34
        on right: 29
    tid <TokenInfo> (96)
        on left: 35
        on right: 15 133 140 148 149 168 176
    vid <TokenInfo> (97)
        on left: 36
        on right: 5 14 17 23 24 41 42 43 44 62 67 147 169 170 171 172 173 174 175
    cid <TokenInfo> (98)
        on left: 37
        on right: 16 164 167
    floatl <TokenInfo> (99)
        on left: 38
        on right: 64
    stringl <TokenInfo> (100)
        on left: 39 40
        on right: 22
    mod_prefix <pdm::ast::ModAddress*> (101)
        on left: 41 42 43 44
        on right: 43 44 67 140 167
    expr <pdm::ast::Exp*> (102)
        on left: 45
        on right: 30 31 32 33 34 46 48 49 58 143 155 158 159 160 169
    long_exp <pdm::ast::Exp*> (103)
        on left: 46 47
        on right: 14 56 79 81
    expr_cl2 <std::vector<pdm::ast::Exp*>> (104)
        on left: 48 49
        on right: 49 59
    type_query_exp_sl0 <std::vector<pdm::ast::TypeQueryExp*>> (105)
        on left: 50 51
        on right: 51 168
    bracketed_exp <pdm::ast::Exp*> (106)
        on left: 52 53 54 55
        on right: 61 76 77 84 95
    paren_exp <pdm::ast::Exp*> (107)
        on left: 56
        on right: 52 93
    vtupleExpr <pdm::ast::Exp*> (108)
        on left: 57 58 59
        on right: 53
    vstructExpr <pdm::ast::Exp*> (109)
        on left: 60
        on right: 54
    primary_exp <pdm::ast::Exp*> (110)
        on left: 61 62 63 64 65 66 67
        on right: 77 85
    int_expr <pdm::ast::Exp*> (111)
        on left: 68 69 70 71
        on right: 63 94
    stringls <std::vector<pdm::ast::StringExp::Piece>> (112)
        on left: 72 73 74 75
        on right: 65 74 75
    if_exp <pdm::ast::Exp*> (113)
        on left: 76 77
        on right: 66
    chain_exp <pdm::ast::Exp*> (114)
        on left: 78 79 80 81
        on right: 55
    chain_prefix <std::vector<pdm::ast::Stmt*>> (115)
        on left: 82 83
        on right: 80 81 83
    lambda_exp <pdm::ast::Exp*> (116)
        on left: 84
        on right: 47
    postfix_exp <pdm::ast::Exp*> (117)
        on left: 85 86 87 88
        on right: 89 90 91 94 95 96
    vcall_exp <pdm::ast::Exp*> (118)
        on left: 89 90
        on right: 86
    dot_name_exp <pdm::ast::Exp*> (119)
        on left: 91 92 93
        on right: 87
    dot_index_exp <pdm::ast::Exp*> (120)
        on left: 94 95
        on right: 88
    unary_exp <pdm::ast::Exp*> (121)
        on left: 96 97
        on right: 97 105 106
    unary_op <pdm::ast::UnaryOperator> (122)
        on left: 98 99 100
        on right: 97
    binary_exp <pdm::ast::Exp*> (123)
        on left: 101
        on right: 45
    mul_binary_op <pdm::ast::BinaryOperator> (124)
        on left: 102 103 104
        on right: 106
    mul_binary_exp <pdm::ast::Exp*> (125)
        on left: 105 106
        on right: 106 109 110
    add_binary_op <pdm::ast::BinaryOperator> (126)
        on left: 107 108
        on right: 110
    add_binary_exp <pdm::ast::Exp*> (127)
        on left: 109 110
        on right: 110 115 116
    cmp_binary_op <pdm::ast::BinaryOperator> (128)
        on left: 111 112 113 114
        on right: 116
    cmp_binary_exp <pdm::ast::Exp*> (129)
        on left: 115 116
        on right: 116 119 120
    eq_binary_op <pdm::ast::BinaryOperator> (130)
        on left: 117 118
        on right: 120
    eq_binary_exp <pdm::ast::Exp*> (131)
        on left: 119 120
        on right: 120 121 122
    and_binary_exp <pdm::ast::Exp*> (132)
        on left: 121 122
        on right: 122 123 124
    xor_binary_exp <pdm::ast::Exp*> (133)
        on left: 123 124
        on right: 124 125 126
    or_binary_exp <pdm::ast::Exp*> (134)
        on left: 125 126
        on right: 101 126
    type_query_exp <pdm::ast::TypeQueryExp*> (135)
        on left: 127
        on right: 51
    type_query_op <pdm::ast::TypeQueryKind> (136)
        on left: 128 129 130
        on right: 127
    type_spec_cl2 <std::vector<pdm::ast::TypeSpec*>> (137)
        on left: 131 132
        on right: 132 142
    type_spec <pdm::ast::TypeSpec*> (138)
        on left: 133 134 135 136 137 138 139
        on right: 15 92 93 127 131 132 141 143 147 149 153 154 170 171 172 173 175
    mod_prefix_tid <pdm::ast::TypeSpec*> (139)
        on left: 140
        on right: 134
    tuple_type_spec <pdm::ast::TypeSpec*> (140)
        on left: 141 142
        on right: 135
    array_type_spec <pdm::ast::TypeSpec*> (141)
        on left: 143
        on right: 136
    struct_type_spec <pdm::ast::TypeSpec*> (142)
        on left: 144
        on right: 137
    struct_type_spec_field_cl <std::vector<pdm::ast::StructTypeSpec::Field*>> (143)
        on left: 145 146
        on right: 144 146
    struct_type_spec_field <pdm::ast::StructTypeSpec::Field*> (144)
        on left: 147
        on right: 145 146
    enum_type_spec_field <pdm::ast::EnumTypeSpec::Field*> (145)
        on left: 148 149
        on right: 150 151
    enum_type_spec_field_cl <std::vector<pdm::ast::EnumTypeSpec::Field*>> (146)
        on left: 150 151
        on right: 151 152
    enum_type_spec <pdm::ast::TypeSpec*> (147)
        on left: 152
        on right: 138
    fn_type_spec <pdm::ast::FnTypeSpec*> (148)
        on left: 153
        on right: 84 139
    targ <pdm::ast::TArg*> (149)
        on left: 154 155
        on right: 156 157
    targ_cl <std::vector<pdm::ast::TArg*>> (150)
        on left: 156 157
        on right: 42 44 157
    varg <pdm::ast::VArg*> (151)
        on left: 158 159 160
        on right: 161 162
    varg_cl <std::vector<pdm::ast::VArg*>> (152)
        on left: 161 162
        on right: 90 162
    class_spec <pdm::ast::ClassSpec*> (153)
        on left: 163
        on right: 16 168 176
    primary_class_spec <pdm::ast::ClassSpec*> (154)
        on left: 164 165 166
        on right: 163
    mod_prefix_cid_class_spec <pdm::ast::ClassSpec*> (155)
        on left: 167
        on right: 165
    class_exp_class_spec <pdm::ast::ClassSpec*> (156)
        on left: 168
        on right: 166
    struct_exp_field <pdm::ast::StructExp::Field*> (157)
        on left: 169
        on right: 189 190
    vpattern_field <pdm::ast::VPattern::Field*> (158)
        on left: 170 171 172
        on right: 183 184
    lpattern_field <pdm::ast::LPattern::Field*> (159)
        on left: 173 174
        on right: 178 185 186
    tpattern_field <pdm::ast::TPattern::Field*> (160)
        on left: 175 176
        on right: 187 188
    destructured_lpattern <pdm::ast::LPattern*> (161)
        on left: 177
        on right: 179
    lpattern <pdm::ast::LPattern*> (162)
        on left: 178 179
        on right: 30 31 32
    vpattern <pdm::ast::VPattern*> (163)
        on left: 180 181
        on right: 153
    tpattern <pdm::ast::TPattern*> (164)
        on left: 182
        on right: 18
    vpattern_field_cl <std::vector<pdm::ast::VPattern::Field*>> (165)
        on left: 183 184
        on right: 180 184
    lpattern_field_cl <std::vector<pdm::ast::LPattern::Field*>> (166)
        on left: 185 186
        on right: 177 186
    tpattern_field_cl1 <std::vector<pdm::ast::TPattern::Field*>> (167)
        on left: 187 188
        on right: 182 188
    struct_exp_field_cl <std::vector<pdm::ast::StructExp::Field*>> (168)
        on left: 189 190
        on right: 60 190


State 0

    0 $accept: • script $end

    $default  reduce using rule 2 (script_header)

    script         go to state 1
    script_header  go to state 2


State 1

    0 $accept: script • $end

    $end  shift, and go to state 3


State 2

    1 script: script_header • script_field_sl
    3 script_header: script_header • script_header_stmt ";"

    "mod"      shift, and go to state 4
    "imports"  shift, and go to state 5

    script_header_stmt  go to state 6
    script_field        go to state 7
    script_field_sl     go to state 8
    import_stmt         go to state 9


State 3

    0 $accept: script $end •

    $default  accept


State 4

    5 script_field: "mod" • vid mod_exp

    "val_id"  shift, and go to state 10

    vid  go to state 11


State 5

   19 import_stmt: "imports" • "{" import_field_group_sl0 "}"

    "{"  shift, and go to state 12


State 6

    3 script_header: script_header script_header_stmt • ";"

    ";"  shift, and go to state 13


State 7

    6 script_field_sl: script_field • ";"

    ";"  shift, and go to state 14


State 8

    1 script: script_header script_field_sl •
    7 script_field_sl: script_field_sl • script_field ";"

    "mod"  shift, and go to state 4

    $default  reduce using rule 1 (script)

    script_field  go to state 15


State 9

    4 script_header_stmt: import_stmt •

    $default  reduce using rule 4 (script_header_stmt)


State 10

   36 vid: "val_id" •

    $default  reduce using rule 36 (vid)


State 11

    5 script_field: "mod" vid • mod_exp

    "{"  shift, and go to state 16

    mod_exp  go to state 17


State 12

   19 import_stmt: "imports" "{" • import_field_group_sl0 "}"

    $default  reduce using rule 20 (import_field_group_sl0)

    import_field_group_sl0  go to state 18


State 13

    3 script_header: script_header script_header_stmt ";" •

    $default  reduce using rule 3 (script_header)


State 14

    6 script_field_sl: script_field ";" •

    $default  reduce using rule 6 (script_field_sl)


State 15

    7 script_field_sl: script_field_sl script_field • ";"

    ";"  shift, and go to state 19


State 16

    8 mod_exp: "{" • mod_field_sl "}"
    9        | "{" • using_tpattern mod_field_sl "}"
   10        | "{" • "}"
   11        | "{" • using_tpattern "}"

    "val_id"  shift, and go to state 10
    "TypeId"  shift, and go to state 20
    "CLS_ID"  shift, and go to state 21
    "using"   shift, and go to state 22
    "mod"     shift, and go to state 23
    "}"       shift, and go to state 24

    mod_field_sl    go to state 25
    mod_field       go to state 26
    using_tpattern  go to state 27
    tid             go to state 28
    vid             go to state 29
    cid             go to state 30


State 17

    5 script_field: "mod" vid mod_exp •

    $default  reduce using rule 5 (script_field)


State 18

   19 import_stmt: "imports" "{" import_field_group_sl0 • "}"
   21 import_field_group_sl0: import_field_group_sl0 • import_field_group ";"

    "val_id"  shift, and go to state 10
    "}"       shift, and go to state 31

    import_field_group  go to state 32
    import_field_cl1    go to state 33
    vid                 go to state 34


State 19

    7 script_field_sl: script_field_sl script_field ";" •

    $default  reduce using rule 7 (script_field_sl)


State 20

   35 tid: "TypeId" •

    $default  reduce using rule 35 (tid)


State 21

   37 cid: "CLS_ID" •

    $default  reduce using rule 37 (cid)


State 22

   18 using_tpattern: "using" • tpattern ";"

    "["  shift, and go to state 35

    tpattern  go to state 36


State 23

   17 mod_field: "mod" • vid mod_exp

    "val_id"  shift, and go to state 10

    vid  go to state 37


State 24

   10 mod_exp: "{" "}" •

    $default  reduce using rule 10 (mod_exp)


State 25

    8 mod_exp: "{" mod_field_sl • "}"
   13 mod_field_sl: mod_field_sl • mod_field ";"

    "val_id"  shift, and go to state 10
    "TypeId"  shift, and go to state 20
    "CLS_ID"  shift, and go to state 21
    "mod"     shift, and go to state 23
    "}"       shift, and go to state 38

    mod_field  go to state 39
    tid        go to state 28
    vid        go to state 29
    cid        go to state 30


State 26

   12 mod_field_sl: mod_field • ";"

    ";"  shift, and go to state 40


State 27

    9 mod_exp: "{" using_tpattern • mod_field_sl "}"
   11        | "{" using_tpattern • "}"

    "val_id"  shift, and go to state 10
    "TypeId"  shift, and go to state 20
    "CLS_ID"  shift, and go to state 21
    "mod"     shift, and go to state 23
    "}"       shift, and go to state 41

    mod_field_sl  go to state 42
    mod_field     go to state 26
    tid           go to state 28
    vid           go to state 29
    cid           go to state 30


State 28

   15 mod_field: tid • "=" type_spec

    "="  shift, and go to state 43


State 29

   14 mod_field: vid • "=" long_exp

    "="  shift, and go to state 44


State 30

   16 mod_field: cid • "=" class_spec

    "="  shift, and go to state 45


State 31

   19 import_stmt: "imports" "{" import_field_group_sl0 "}" •

    $default  reduce using rule 19 (import_stmt)


State 32

   21 import_field_group_sl0: import_field_group_sl0 import_field_group • ";"

    ";"  shift, and go to state 46


State 33

   22 import_field_group: import_field_cl1 • "from" stringl
   24 import_field_cl1: import_field_cl1 • "," vid

    "from"  shift, and go to state 47
    ","     shift, and go to state 48


State 34

   23 import_field_cl1: vid •

    $default  reduce using rule 23 (import_field_cl1)


State 35

  182 tpattern: "[" • tpattern_field_cl1 "]"

    "val_id"  shift, and go to state 10
    "TypeId"  shift, and go to state 20

    tid                 go to state 49
    vid                 go to state 50
    tpattern_field      go to state 51
    tpattern_field_cl1  go to state 52


State 36

   18 using_tpattern: "using" tpattern • ";"

    ";"  shift, and go to state 53


State 37

   17 mod_field: "mod" vid • mod_exp

    "{"  shift, and go to state 16

    mod_exp  go to state 54


State 38

    8 mod_exp: "{" mod_field_sl "}" •

    $default  reduce using rule 8 (mod_exp)


State 39

   13 mod_field_sl: mod_field_sl mod_field • ";"

    ";"  shift, and go to state 55


State 40

   12 mod_field_sl: mod_field ";" •

    $default  reduce using rule 12 (mod_field_sl)


State 41

   11 mod_exp: "{" using_tpattern "}" •

    $default  reduce using rule 11 (mod_exp)


State 42

    9 mod_exp: "{" using_tpattern mod_field_sl • "}"
   13 mod_field_sl: mod_field_sl • mod_field ";"

    "val_id"  shift, and go to state 10
    "TypeId"  shift, and go to state 20
    "CLS_ID"  shift, and go to state 21
    "mod"     shift, and go to state 23
    "}"       shift, and go to state 56

    mod_field  go to state 39
    tid        go to state 28
    vid        go to state 29
    cid        go to state 30


State 43

   15 mod_field: tid "=" • type_spec

    "val_id"  shift, and go to state 10
    "TypeId"  shift, and go to state 20
    "enum"    shift, and go to state 57
    "fn"      shift, and go to state 58
    "["       shift, and go to state 59
    "{"       shift, and go to state 60

    tid               go to state 61
    vid               go to state 62
    mod_prefix        go to state 63
    type_spec         go to state 64
    mod_prefix_tid    go to state 65
    tuple_type_spec   go to state 66
    array_type_spec   go to state 67
    struct_type_spec  go to state 68
    enum_type_spec    go to state 69
    fn_type_spec      go to state 70


State 44

   14 mod_field: vid "=" • long_exp

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 20
    "enum"                   shift, and go to state 57
    "if"                     shift, and go to state 71
    "fn"                     shift, and go to state 58
    "not"                    shift, and go to state 72
    "42"                     shift, and go to state 73
    "0x2a"                   shift, and go to state 74
    "42u"                    shift, and go to state 75
    "0x2Au"                  shift, and go to state 76
    "4.2"                    shift, and go to state 77
    "\"dq-string-literal\""  shift, and go to state 78
    "'sq-string-literal'"    shift, and go to state 79
    "("                      shift, and go to state 80
    "["                      shift, and go to state 59
    "{"                      shift, and go to state 81
    "+"                      shift, and go to state 82
    "-"                      shift, and go to state 83

    tid               go to state 61
    vid               go to state 84
    floatl            go to state 85
    mod_prefix        go to state 86
    expr              go to state 87
    long_exp          go to state 88
    bracketed_exp     go to state 89
    paren_exp         go to state 90
    vtupleExpr        go to state 91
    vstructExpr       go to state 92
    primary_exp       go to state 93
    int_expr          go to state 94
    stringls          go to state 95
    if_exp            go to state 96
    chain_exp         go to state 97
    lambda_exp        go to state 98
    postfix_exp       go to state 99
    vcall_exp         go to state 100
    dot_name_exp      go to state 101
    dot_index_exp     go to state 102
    unary_exp         go to state 103
    unary_op          go to state 104
    binary_exp        go to state 105
    mul_binary_exp    go to state 106
    add_binary_exp    go to state 107
    cmp_binary_exp    go to state 108
    eq_binary_exp     go to state 109
    and_binary_exp    go to state 110
    xor_binary_exp    go to state 111
    or_binary_exp     go to state 112
    type_spec         go to state 113
    mod_prefix_tid    go to state 65
    tuple_type_spec   go to state 66
    array_type_spec   go to state 67
    struct_type_spec  go to state 68
    enum_type_spec    go to state 69
    fn_type_spec      go to state 114


State 45

   16 mod_field: cid "=" • class_spec

    "val_id"     shift, and go to state 10
    "CLS_ID"     shift, and go to state 21
    "typeclass"  shift, and go to state 115

    vid                        go to state 62
    cid                        go to state 116
    mod_prefix                 go to state 117
    class_spec                 go to state 118
    primary_class_spec         go to state 119
    mod_prefix_cid_class_spec  go to state 120
    class_exp_class_spec       go to state 121


State 46

   21 import_field_group_sl0: import_field_group_sl0 import_field_group ";" •

    $default  reduce using rule 21 (import_field_group_sl0)


State 47

   22 import_field_group: import_field_cl1 "from" • stringl

    "\"dq-string-literal\""  shift, and go to state 122
    "'sq-string-literal'"    shift, and go to state 123

    stringl  go to state 124


State 48

   24 import_field_cl1: import_field_cl1 "," • vid

    "val_id"  shift, and go to state 10

    vid  go to state 125


State 49

  176 tpattern_field: tid • class_spec

    "val_id"     shift, and go to state 10
    "CLS_ID"     shift, and go to state 21
    "typeclass"  shift, and go to state 115

    vid                        go to state 62
    cid                        go to state 116
    mod_prefix                 go to state 117
    class_spec                 go to state 126
    primary_class_spec         go to state 119
    mod_prefix_cid_class_spec  go to state 120
    class_exp_class_spec       go to state 121


State 50

  175 tpattern_field: vid • type_spec

    "val_id"  shift, and go to state 10
    "TypeId"  shift, and go to state 20
    "enum"    shift, and go to state 57
    "fn"      shift, and go to state 58
    "["       shift, and go to state 59
    "{"       shift, and go to state 60

    tid               go to state 61
    vid               go to state 62
    mod_prefix        go to state 63
    type_spec         go to state 127
    mod_prefix_tid    go to state 65
    tuple_type_spec   go to state 66
    array_type_spec   go to state 67
    struct_type_spec  go to state 68
    enum_type_spec    go to state 69
    fn_type_spec      go to state 70


State 51

  187 tpattern_field_cl1: tpattern_field •

    $default  reduce using rule 187 (tpattern_field_cl1)


State 52

  182 tpattern: "[" tpattern_field_cl1 • "]"
  188 tpattern_field_cl1: tpattern_field_cl1 • "," tpattern_field

    ","  shift, and go to state 128
    "]"  shift, and go to state 129


State 53

   18 using_tpattern: "using" tpattern ";" •

    $default  reduce using rule 18 (using_tpattern)


State 54

   17 mod_field: "mod" vid mod_exp •

    $default  reduce using rule 17 (mod_field)


State 55

   13 mod_field_sl: mod_field_sl mod_field ";" •

    $default  reduce using rule 13 (mod_field_sl)


State 56

    9 mod_exp: "{" using_tpattern mod_field_sl "}" •

    $default  reduce using rule 9 (mod_exp)


State 57

  152 enum_type_spec: "enum" • "{" enum_type_spec_field_cl "}"

    "{"  shift, and go to state 130


State 58

  153 fn_type_spec: "fn" • vpattern type_spec

    "("  shift, and go to state 131

    vpattern  go to state 132


State 59

  143 array_type_spec: "[" • type_spec "*" expr "]"

    "val_id"  shift, and go to state 10
    "TypeId"  shift, and go to state 20
    "enum"    shift, and go to state 57
    "fn"      shift, and go to state 58
    "["       shift, and go to state 59
    "{"       shift, and go to state 60

    tid               go to state 61
    vid               go to state 62
    mod_prefix        go to state 63
    type_spec         go to state 133
    mod_prefix_tid    go to state 65
    tuple_type_spec   go to state 66
    array_type_spec   go to state 67
    struct_type_spec  go to state 68
    enum_type_spec    go to state 69
    fn_type_spec      go to state 70


State 60

  141 tuple_type_spec: "{" • type_spec "}"
  142                | "{" • type_spec_cl2 "}"
  144 struct_type_spec: "{" • struct_type_spec_field_cl "}"

    "val_id"  shift, and go to state 10
    "TypeId"  shift, and go to state 20
    "enum"    shift, and go to state 57
    "fn"      shift, and go to state 58
    "["       shift, and go to state 59
    "{"       shift, and go to state 60

    tid                        go to state 61
    vid                        go to state 134
    mod_prefix                 go to state 63
    type_spec_cl2              go to state 135
    type_spec                  go to state 136
    mod_prefix_tid             go to state 65
    tuple_type_spec            go to state 66
    array_type_spec            go to state 67
    struct_type_spec           go to state 68
    struct_type_spec_field_cl  go to state 137
    struct_type_spec_field     go to state 138
    enum_type_spec             go to state 69
    fn_type_spec               go to state 70


State 61

  133 type_spec: tid •

    $default  reduce using rule 133 (type_spec)


State 62

   41 mod_prefix: vid • "::"
   42           | vid • "[" targ_cl "]" "::"

    "::"  shift, and go to state 139
    "["   shift, and go to state 140


State 63

   43 mod_prefix: mod_prefix • vid "::"
   44           | mod_prefix • vid "[" targ_cl "]" "::"
  140 mod_prefix_tid: mod_prefix • tid

    "val_id"  shift, and go to state 10
    "TypeId"  shift, and go to state 20

    tid  go to state 141
    vid  go to state 142


State 64

   15 mod_field: tid "=" type_spec •

    $default  reduce using rule 15 (mod_field)


State 65

  134 type_spec: mod_prefix_tid •

    $default  reduce using rule 134 (type_spec)


State 66

  135 type_spec: tuple_type_spec •

    $default  reduce using rule 135 (type_spec)


State 67

  136 type_spec: array_type_spec •

    $default  reduce using rule 136 (type_spec)


State 68

  137 type_spec: struct_type_spec •

    $default  reduce using rule 137 (type_spec)


State 69

  138 type_spec: enum_type_spec •

    $default  reduce using rule 138 (type_spec)


State 70

  139 type_spec: fn_type_spec •

    $default  reduce using rule 139 (type_spec)


State 71

   76 if_exp: "if" • bracketed_exp bracketed_exp
   77       | "if" • bracketed_exp bracketed_exp "else" primary_exp

    "("  shift, and go to state 80
    "{"  shift, and go to state 143

    bracketed_exp  go to state 144
    paren_exp      go to state 90
    vtupleExpr     go to state 91
    vstructExpr    go to state 92
    chain_exp      go to state 97


State 72

  100 unary_op: "not" •

    $default  reduce using rule 100 (unary_op)


State 73

   68 int_expr: "42" •

    $default  reduce using rule 68 (int_expr)


State 74

   69 int_expr: "0x2a" •

    $default  reduce using rule 69 (int_expr)


State 75

   70 int_expr: "42u" •

    $default  reduce using rule 70 (int_expr)


State 76

   71 int_expr: "0x2Au" •

    $default  reduce using rule 71 (int_expr)


State 77

   38 floatl: "4.2" •

    $default  reduce using rule 38 (floatl)


State 78

   73 stringls: "\"dq-string-literal\"" •

    $default  reduce using rule 73 (stringls)


State 79

   72 stringls: "'sq-string-literal'" •

    $default  reduce using rule 72 (stringls)


State 80

   56 paren_exp: "(" • long_exp ")"
   57 vtupleExpr: "(" • ")"
   58           | "(" • expr "," ")"
   59           | "(" • expr_cl2 ")"

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 20
    "enum"                   shift, and go to state 57
    "if"                     shift, and go to state 71
    "fn"                     shift, and go to state 58
    "not"                    shift, and go to state 72
    "42"                     shift, and go to state 73
    "0x2a"                   shift, and go to state 74
    "42u"                    shift, and go to state 75
    "0x2Au"                  shift, and go to state 76
    "4.2"                    shift, and go to state 77
    "\"dq-string-literal\""  shift, and go to state 78
    "'sq-string-literal'"    shift, and go to state 79
    "("                      shift, and go to state 80
    ")"                      shift, and go to state 145
    "["                      shift, and go to state 59
    "{"                      shift, and go to state 81
    "+"                      shift, and go to state 82
    "-"                      shift, and go to state 83

    tid               go to state 61
    vid               go to state 84
    floatl            go to state 85
    mod_prefix        go to state 86
    expr              go to state 146
    long_exp          go to state 147
    expr_cl2          go to state 148
    bracketed_exp     go to state 89
    paren_exp         go to state 90
    vtupleExpr        go to state 91
    vstructExpr       go to state 92
    primary_exp       go to state 93
    int_expr          go to state 94
    stringls          go to state 95
    if_exp            go to state 96
    chain_exp         go to state 97
    lambda_exp        go to state 98
    postfix_exp       go to state 99
    vcall_exp         go to state 100
    dot_name_exp      go to state 101
    dot_index_exp     go to state 102
    unary_exp         go to state 103
    unary_op          go to state 104
    binary_exp        go to state 105
    mul_binary_exp    go to state 106
    add_binary_exp    go to state 107
    cmp_binary_exp    go to state 108
    eq_binary_exp     go to state 109
    and_binary_exp    go to state 110
    xor_binary_exp    go to state 111
    or_binary_exp     go to state 112
    type_spec         go to state 113
    mod_prefix_tid    go to state 65
    tuple_type_spec   go to state 66
    array_type_spec   go to state 67
    struct_type_spec  go to state 68
    enum_type_spec    go to state 69
    fn_type_spec      go to state 114


State 81

   60 vstructExpr: "{" • struct_exp_field_cl "}"
   78 chain_exp: "{" • "}"
   79          | "{" • long_exp "}"
   80          | "{" • chain_prefix "}"
   81          | "{" • chain_prefix long_exp "}"
  141 tuple_type_spec: "{" • type_spec "}"
  142                | "{" • type_spec_cl2 "}"
  144 struct_type_spec: "{" • struct_type_spec_field_cl "}"

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 20
    "enum"                   shift, and go to state 57
    "if"                     shift, and go to state 71
    "const"                  shift, and go to state 149
    "val"                    shift, and go to state 150
    "var"                    shift, and go to state 151
    "set"                    shift, and go to state 152
    "fn"                     shift, and go to state 58
    "not"                    shift, and go to state 72
    "discard"                shift, and go to state 153
    "42"                     shift, and go to state 73
    "0x2a"                   shift, and go to state 74
    "42u"                    shift, and go to state 75
    "0x2Au"                  shift, and go to state 76
    "4.2"                    shift, and go to state 77
    "\"dq-string-literal\""  shift, and go to state 78
    "'sq-string-literal'"    shift, and go to state 79
    "("                      shift, and go to state 80
    "["                      shift, and go to state 59
    "{"                      shift, and go to state 81
    "}"                      shift, and go to state 154
    "+"                      shift, and go to state 82
    "-"                      shift, and go to state 83

    chain_prefix_stmt          go to state 155
    const_stmt                 go to state 156
    val_stmt                   go to state 157
    var_stmt                   go to state 158
    set_stmt                   go to state 159
    discard_stmt               go to state 160
    tid                        go to state 61
    vid                        go to state 161
    floatl                     go to state 85
    mod_prefix                 go to state 86
    expr                       go to state 87
    long_exp                   go to state 162
    bracketed_exp              go to state 89
    paren_exp                  go to state 90
    vtupleExpr                 go to state 91
    vstructExpr                go to state 92
    primary_exp                go to state 93
    int_expr                   go to state 94
    stringls                   go to state 95
    if_exp                     go to state 96
    chain_exp                  go to state 97
    chain_prefix               go to state 163
    lambda_exp                 go to state 98
    postfix_exp                go to state 99
    vcall_exp                  go to state 100
    dot_name_exp               go to state 101
    dot_index_exp              go to state 102
    unary_exp                  go to state 103
    unary_op                   go to state 104
    binary_exp                 go to state 105
    mul_binary_exp             go to state 106
    add_binary_exp             go to state 107
    cmp_binary_exp             go to state 108
    eq_binary_exp              go to state 109
    and_binary_exp             go to state 110
    xor_binary_exp             go to state 111
    or_binary_exp              go to state 112
    type_spec_cl2              go to state 135
    type_spec                  go to state 164
    mod_prefix_tid             go to state 65
    tuple_type_spec            go to state 66
    array_type_spec            go to state 67
    struct_type_spec           go to state 68
    struct_type_spec_field_cl  go to state 137
    struct_type_spec_field     go to state 138
    enum_type_spec             go to state 69
    fn_type_spec               go to state 114
    struct_exp_field           go to state 165
    struct_exp_field_cl        go to state 166


State 82

   98 unary_op: "+" •

    $default  reduce using rule 98 (unary_op)


State 83

   99 unary_op: "-" •

    $default  reduce using rule 99 (unary_op)


State 84

   41 mod_prefix: vid • "::"
   42           | vid • "[" targ_cl "]" "::"
   62 primary_exp: vid •

    "::"  shift, and go to state 139
    "["   shift, and go to state 140

    $default  reduce using rule 62 (primary_exp)


State 85

   64 primary_exp: floatl •

    $default  reduce using rule 64 (primary_exp)


State 86

   43 mod_prefix: mod_prefix • vid "::"
   44           | mod_prefix • vid "[" targ_cl "]" "::"
   67 primary_exp: mod_prefix • vid
  140 mod_prefix_tid: mod_prefix • tid

    "val_id"  shift, and go to state 10
    "TypeId"  shift, and go to state 20

    tid  go to state 141
    vid  go to state 167


State 87

   46 long_exp: expr •

    $default  reduce using rule 46 (long_exp)


State 88

   14 mod_field: vid "=" long_exp •

    $default  reduce using rule 14 (mod_field)


State 89

   61 primary_exp: bracketed_exp •

    $default  reduce using rule 61 (primary_exp)


State 90

   52 bracketed_exp: paren_exp •

    $default  reduce using rule 52 (bracketed_exp)


State 91

   53 bracketed_exp: vtupleExpr •

    $default  reduce using rule 53 (bracketed_exp)


State 92

   54 bracketed_exp: vstructExpr •

    $default  reduce using rule 54 (bracketed_exp)


State 93

   85 postfix_exp: primary_exp •

    $default  reduce using rule 85 (postfix_exp)


State 94

   63 primary_exp: int_expr •

    $default  reduce using rule 63 (primary_exp)


State 95

   65 primary_exp: stringls •
   74 stringls: stringls • "'sq-string-literal'"
   75         | stringls • "\"dq-string-literal\""

    "\"dq-string-literal\""  shift, and go to state 168
    "'sq-string-literal'"    shift, and go to state 169

    $default  reduce using rule 65 (primary_exp)


State 96

   66 primary_exp: if_exp •

    $default  reduce using rule 66 (primary_exp)


State 97

   55 bracketed_exp: chain_exp •

    $default  reduce using rule 55 (bracketed_exp)


State 98

   47 long_exp: lambda_exp •

    $default  reduce using rule 47 (long_exp)


State 99

   89 vcall_exp: postfix_exp • "(" ")"
   90          | postfix_exp • "(" varg_cl ")"
   91 dot_name_exp: postfix_exp • "." "val_id"
   94 dot_index_exp: postfix_exp • "." int_expr
   95              | postfix_exp • "." bracketed_exp
   96 unary_exp: postfix_exp •

    "."  shift, and go to state 170
    "("  shift, and go to state 171

    $default  reduce using rule 96 (unary_exp)


State 100

   86 postfix_exp: vcall_exp •

    $default  reduce using rule 86 (postfix_exp)


State 101

   87 postfix_exp: dot_name_exp •

    $default  reduce using rule 87 (postfix_exp)


State 102

   88 postfix_exp: dot_index_exp •

    $default  reduce using rule 88 (postfix_exp)


State 103

  105 mul_binary_exp: unary_exp •

    $default  reduce using rule 105 (mul_binary_exp)


State 104

   97 unary_exp: unary_op • unary_exp

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 20
    "enum"                   shift, and go to state 57
    "if"                     shift, and go to state 71
    "fn"                     shift, and go to state 58
    "not"                    shift, and go to state 72
    "42"                     shift, and go to state 73
    "0x2a"                   shift, and go to state 74
    "42u"                    shift, and go to state 75
    "0x2Au"                  shift, and go to state 76
    "4.2"                    shift, and go to state 77
    "\"dq-string-literal\""  shift, and go to state 78
    "'sq-string-literal'"    shift, and go to state 79
    "("                      shift, and go to state 80
    "["                      shift, and go to state 59
    "{"                      shift, and go to state 81
    "+"                      shift, and go to state 82
    "-"                      shift, and go to state 83

    tid               go to state 61
    vid               go to state 84
    floatl            go to state 85
    mod_prefix        go to state 86
    bracketed_exp     go to state 89
    paren_exp         go to state 90
    vtupleExpr        go to state 91
    vstructExpr       go to state 92
    primary_exp       go to state 93
    int_expr          go to state 94
    stringls          go to state 95
    if_exp            go to state 96
    chain_exp         go to state 97
    postfix_exp       go to state 99
    vcall_exp         go to state 100
    dot_name_exp      go to state 101
    dot_index_exp     go to state 102
    unary_exp         go to state 172
    unary_op          go to state 104
    type_spec         go to state 113
    mod_prefix_tid    go to state 65
    tuple_type_spec   go to state 66
    array_type_spec   go to state 67
    struct_type_spec  go to state 68
    enum_type_spec    go to state 69
    fn_type_spec      go to state 70


State 105

   45 expr: binary_exp •

    $default  reduce using rule 45 (expr)


State 106

  106 mul_binary_exp: mul_binary_exp • mul_binary_op unary_exp
  109 add_binary_exp: mul_binary_exp •

    "*"  shift, and go to state 173
    "/"  shift, and go to state 174
    "%"  shift, and go to state 175

    $default  reduce using rule 109 (add_binary_exp)

    mul_binary_op  go to state 176


State 107

  110 add_binary_exp: add_binary_exp • add_binary_op mul_binary_exp
  115 cmp_binary_exp: add_binary_exp •

    "+"  shift, and go to state 177
    "-"  shift, and go to state 178

    $default  reduce using rule 115 (cmp_binary_exp)

    add_binary_op  go to state 179


State 108

  116 cmp_binary_exp: cmp_binary_exp • cmp_binary_op add_binary_exp
  119 eq_binary_exp: cmp_binary_exp •

    "<"   shift, and go to state 180
    "<="  shift, and go to state 181
    ">"   shift, and go to state 182
    ">="  shift, and go to state 183

    $default  reduce using rule 119 (eq_binary_exp)

    cmp_binary_op  go to state 184


State 109

  120 eq_binary_exp: eq_binary_exp • eq_binary_op cmp_binary_exp
  121 and_binary_exp: eq_binary_exp •

    "=="  shift, and go to state 185
    "!="  shift, and go to state 186

    $default  reduce using rule 121 (and_binary_exp)

    eq_binary_op  go to state 187


State 110

  122 and_binary_exp: and_binary_exp • "and" eq_binary_exp
  123 xor_binary_exp: and_binary_exp •

    "and"  shift, and go to state 188

    $default  reduce using rule 123 (xor_binary_exp)


State 111

  124 xor_binary_exp: xor_binary_exp • "xor" and_binary_exp
  125 or_binary_exp: xor_binary_exp •

    "xor"  shift, and go to state 189

    $default  reduce using rule 125 (or_binary_exp)


State 112

  101 binary_exp: or_binary_exp •
  126 or_binary_exp: or_binary_exp • "or" xor_binary_exp

    "or"  shift, and go to state 190

    $default  reduce using rule 101 (binary_exp)


State 113

   92 dot_name_exp: type_spec • "::" "TypeId"
   93             | type_spec • "::" "TypeId" "using" paren_exp

    "::"  shift, and go to state 191


State 114

   84 lambda_exp: fn_type_spec • bracketed_exp
  139 type_spec: fn_type_spec •

    "("  shift, and go to state 80
    "{"  shift, and go to state 143

    $default  reduce using rule 139 (type_spec)

    bracketed_exp  go to state 192
    paren_exp      go to state 90
    vtupleExpr     go to state 91
    vstructExpr    go to state 92
    chain_exp      go to state 97


State 115

  168 class_exp_class_spec: "typeclass" • "(" tid class_spec ")" "{" type_query_exp_sl0 "}"

    "("  shift, and go to state 193


State 116

  164 primary_class_spec: cid •

    $default  reduce using rule 164 (primary_class_spec)


State 117

   43 mod_prefix: mod_prefix • vid "::"
   44           | mod_prefix • vid "[" targ_cl "]" "::"
  167 mod_prefix_cid_class_spec: mod_prefix • cid

    "val_id"  shift, and go to state 10
    "CLS_ID"  shift, and go to state 21

    vid  go to state 142
    cid  go to state 194


State 118

   16 mod_field: cid "=" class_spec •

    $default  reduce using rule 16 (mod_field)


State 119

  163 class_spec: primary_class_spec •

    $default  reduce using rule 163 (class_spec)


State 120

  165 primary_class_spec: mod_prefix_cid_class_spec •

    $default  reduce using rule 165 (primary_class_spec)


State 121

  166 primary_class_spec: class_exp_class_spec •

    $default  reduce using rule 166 (primary_class_spec)


State 122

   40 stringl: "\"dq-string-literal\"" •

    $default  reduce using rule 40 (stringl)


State 123

   39 stringl: "'sq-string-literal'" •

    $default  reduce using rule 39 (stringl)


State 124

   22 import_field_group: import_field_cl1 "from" stringl •

    $default  reduce using rule 22 (import_field_group)


State 125

   24 import_field_cl1: import_field_cl1 "," vid •

    $default  reduce using rule 24 (import_field_cl1)


State 126

  176 tpattern_field: tid class_spec •

    $default  reduce using rule 176 (tpattern_field)


State 127

  175 tpattern_field: vid type_spec •

    $default  reduce using rule 175 (tpattern_field)


State 128

  188 tpattern_field_cl1: tpattern_field_cl1 "," • tpattern_field

    "val_id"  shift, and go to state 10
    "TypeId"  shift, and go to state 20

    tid             go to state 49
    vid             go to state 50
    tpattern_field  go to state 195


State 129

  182 tpattern: "[" tpattern_field_cl1 "]" •

    $default  reduce using rule 182 (tpattern)


State 130

  152 enum_type_spec: "enum" "{" • enum_type_spec_field_cl "}"

    "TypeId"  shift, and go to state 20

    tid                      go to state 196
    enum_type_spec_field     go to state 197
    enum_type_spec_field_cl  go to state 198


State 131

  180 vpattern: "(" • vpattern_field_cl ")"
  181         | "(" • ")"

    "val_id"  shift, and go to state 10
    "out"     shift, and go to state 199
    "inout"   shift, and go to state 200
    ")"       shift, and go to state 201

    vid                go to state 202
    vpattern_field     go to state 203
    vpattern_field_cl  go to state 204


State 132

  153 fn_type_spec: "fn" vpattern • type_spec

    "val_id"  shift, and go to state 10
    "TypeId"  shift, and go to state 20
    "enum"    shift, and go to state 57
    "fn"      shift, and go to state 58
    "["       shift, and go to state 59
    "{"       shift, and go to state 60

    tid               go to state 61
    vid               go to state 62
    mod_prefix        go to state 63
    type_spec         go to state 205
    mod_prefix_tid    go to state 65
    tuple_type_spec   go to state 66
    array_type_spec   go to state 67
    struct_type_spec  go to state 68
    enum_type_spec    go to state 69
    fn_type_spec      go to state 70


State 133

  143 array_type_spec: "[" type_spec • "*" expr "]"

    "*"  shift, and go to state 206


State 134

   41 mod_prefix: vid • "::"
   42           | vid • "[" targ_cl "]" "::"
  147 struct_type_spec_field: vid • type_spec

    "val_id"  shift, and go to state 10
    "TypeId"  shift, and go to state 20
    "enum"    shift, and go to state 57
    "fn"      shift, and go to state 58
    "::"      shift, and go to state 139
    "["       shift, and go to state 207
    "{"       shift, and go to state 60

    tid               go to state 61
    vid               go to state 62
    mod_prefix        go to state 63
    type_spec         go to state 208
    mod_prefix_tid    go to state 65
    tuple_type_spec   go to state 66
    array_type_spec   go to state 67
    struct_type_spec  go to state 68
    enum_type_spec    go to state 69
    fn_type_spec      go to state 70


State 135

  132 type_spec_cl2: type_spec_cl2 • "," type_spec
  142 tuple_type_spec: "{" type_spec_cl2 • "}"

    ","  shift, and go to state 209
    "}"  shift, and go to state 210


State 136

  131 type_spec_cl2: type_spec • "," type_spec
  141 tuple_type_spec: "{" type_spec • "}"

    ","  shift, and go to state 211
    "}"  shift, and go to state 212


State 137

  144 struct_type_spec: "{" struct_type_spec_field_cl • "}"
  146 struct_type_spec_field_cl: struct_type_spec_field_cl • "," struct_type_spec_field

    ","  shift, and go to state 213
    "}"  shift, and go to state 214


State 138

  145 struct_type_spec_field_cl: struct_type_spec_field •

    $default  reduce using rule 145 (struct_type_spec_field_cl)


State 139

   41 mod_prefix: vid "::" •

    $default  reduce using rule 41 (mod_prefix)


State 140

   42 mod_prefix: vid "[" • targ_cl "]" "::"

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 20
    "enum"                   shift, and go to state 57
    "if"                     shift, and go to state 71
    "fn"                     shift, and go to state 58
    "not"                    shift, and go to state 72
    "42"                     shift, and go to state 73
    "0x2a"                   shift, and go to state 74
    "42u"                    shift, and go to state 75
    "0x2Au"                  shift, and go to state 76
    "4.2"                    shift, and go to state 77
    "\"dq-string-literal\""  shift, and go to state 78
    "'sq-string-literal'"    shift, and go to state 79
    "("                      shift, and go to state 80
    "["                      shift, and go to state 59
    "{"                      shift, and go to state 81
    "+"                      shift, and go to state 82
    "-"                      shift, and go to state 83

    tid               go to state 61
    vid               go to state 84
    floatl            go to state 85
    mod_prefix        go to state 86
    expr              go to state 215
    bracketed_exp     go to state 89
    paren_exp         go to state 90
    vtupleExpr        go to state 91
    vstructExpr       go to state 92
    primary_exp       go to state 93
    int_expr          go to state 94
    stringls          go to state 95
    if_exp            go to state 96
    chain_exp         go to state 97
    postfix_exp       go to state 99
    vcall_exp         go to state 100
    dot_name_exp      go to state 101
    dot_index_exp     go to state 102
    unary_exp         go to state 103
    unary_op          go to state 104
    binary_exp        go to state 105
    mul_binary_exp    go to state 106
    add_binary_exp    go to state 107
    cmp_binary_exp    go to state 108
    eq_binary_exp     go to state 109
    and_binary_exp    go to state 110
    xor_binary_exp    go to state 111
    or_binary_exp     go to state 112
    type_spec         go to state 216
    mod_prefix_tid    go to state 65
    tuple_type_spec   go to state 66
    array_type_spec   go to state 67
    struct_type_spec  go to state 68
    enum_type_spec    go to state 69
    fn_type_spec      go to state 70
    targ              go to state 217
    targ_cl           go to state 218


State 141

  140 mod_prefix_tid: mod_prefix tid •

    $default  reduce using rule 140 (mod_prefix_tid)


State 142

   43 mod_prefix: mod_prefix vid • "::"
   44           | mod_prefix vid • "[" targ_cl "]" "::"

    "::"  shift, and go to state 219
    "["   shift, and go to state 220


State 143

   60 vstructExpr: "{" • struct_exp_field_cl "}"
   78 chain_exp: "{" • "}"
   79          | "{" • long_exp "}"
   80          | "{" • chain_prefix "}"
   81          | "{" • chain_prefix long_exp "}"

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 20
    "enum"                   shift, and go to state 57
    "if"                     shift, and go to state 71
    "const"                  shift, and go to state 149
    "val"                    shift, and go to state 150
    "var"                    shift, and go to state 151
    "set"                    shift, and go to state 152
    "fn"                     shift, and go to state 58
    "not"                    shift, and go to state 72
    "discard"                shift, and go to state 153
    "42"                     shift, and go to state 73
    "0x2a"                   shift, and go to state 74
    "42u"                    shift, and go to state 75
    "0x2Au"                  shift, and go to state 76
    "4.2"                    shift, and go to state 77
    "\"dq-string-literal\""  shift, and go to state 78
    "'sq-string-literal'"    shift, and go to state 79
    "("                      shift, and go to state 80
    "["                      shift, and go to state 59
    "{"                      shift, and go to state 81
    "}"                      shift, and go to state 154
    "+"                      shift, and go to state 82
    "-"                      shift, and go to state 83

    chain_prefix_stmt    go to state 155
    const_stmt           go to state 156
    val_stmt             go to state 157
    var_stmt             go to state 158
    set_stmt             go to state 159
    discard_stmt         go to state 160
    tid                  go to state 61
    vid                  go to state 221
    floatl               go to state 85
    mod_prefix           go to state 86
    expr                 go to state 87
    long_exp             go to state 162
    bracketed_exp        go to state 89
    paren_exp            go to state 90
    vtupleExpr           go to state 91
    vstructExpr          go to state 92
    primary_exp          go to state 93
    int_expr             go to state 94
    stringls             go to state 95
    if_exp               go to state 96
    chain_exp            go to state 97
    chain_prefix         go to state 163
    lambda_exp           go to state 98
    postfix_exp          go to state 99
    vcall_exp            go to state 100
    dot_name_exp         go to state 101
    dot_index_exp        go to state 102
    unary_exp            go to state 103
    unary_op             go to state 104
    binary_exp           go to state 105
    mul_binary_exp       go to state 106
    add_binary_exp       go to state 107
    cmp_binary_exp       go to state 108
    eq_binary_exp        go to state 109
    and_binary_exp       go to state 110
    xor_binary_exp       go to state 111
    or_binary_exp        go to state 112
    type_spec            go to state 113
    mod_prefix_tid       go to state 65
    tuple_type_spec      go to state 66
    array_type_spec      go to state 67
    struct_type_spec     go to state 68
    enum_type_spec       go to state 69
    fn_type_spec         go to state 114
    struct_exp_field     go to state 165
    struct_exp_field_cl  go to state 166


State 144

   76 if_exp: "if" bracketed_exp • bracketed_exp
   77       | "if" bracketed_exp • bracketed_exp "else" primary_exp

    "("  shift, and go to state 80
    "{"  shift, and go to state 143

    bracketed_exp  go to state 222
    paren_exp      go to state 90
    vtupleExpr     go to state 91
    vstructExpr    go to state 92
    chain_exp      go to state 97


State 145

   57 vtupleExpr: "(" ")" •

    $default  reduce using rule 57 (vtupleExpr)


State 146

   46 long_exp: expr •
   48 expr_cl2: expr • "," expr
   58 vtupleExpr: "(" expr • "," ")"

    ","  shift, and go to state 223

    $default  reduce using rule 46 (long_exp)


State 147

   56 paren_exp: "(" long_exp • ")"

    ")"  shift, and go to state 224


State 148

   49 expr_cl2: expr_cl2 • "," expr
   59 vtupleExpr: "(" expr_cl2 • ")"

    ","  shift, and go to state 225
    ")"  shift, and go to state 226


State 149

   30 const_stmt: "const" • lpattern "=" expr

    "val_id"  shift, and go to state 10
    "{"       shift, and go to state 227

    vid                    go to state 228
    lpattern_field         go to state 229
    destructured_lpattern  go to state 230
    lpattern               go to state 231


State 150

   31 val_stmt: "val" • lpattern "=" expr

    "val_id"  shift, and go to state 10
    "{"       shift, and go to state 227

    vid                    go to state 228
    lpattern_field         go to state 229
    destructured_lpattern  go to state 230
    lpattern               go to state 232


State 151

   32 var_stmt: "var" • lpattern "=" expr

    "val_id"  shift, and go to state 10
    "{"       shift, and go to state 227

    vid                    go to state 228
    lpattern_field         go to state 229
    destructured_lpattern  go to state 230
    lpattern               go to state 233


State 152

   33 set_stmt: "set" • expr "=" expr

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 20
    "enum"                   shift, and go to state 57
    "if"                     shift, and go to state 71
    "fn"                     shift, and go to state 58
    "not"                    shift, and go to state 72
    "42"                     shift, and go to state 73
    "0x2a"                   shift, and go to state 74
    "42u"                    shift, and go to state 75
    "0x2Au"                  shift, and go to state 76
    "4.2"                    shift, and go to state 77
    "\"dq-string-literal\""  shift, and go to state 78
    "'sq-string-literal'"    shift, and go to state 79
    "("                      shift, and go to state 80
    "["                      shift, and go to state 59
    "{"                      shift, and go to state 81
    "+"                      shift, and go to state 82
    "-"                      shift, and go to state 83

    tid               go to state 61
    vid               go to state 84
    floatl            go to state 85
    mod_prefix        go to state 86
    expr              go to state 234
    bracketed_exp     go to state 89
    paren_exp         go to state 90
    vtupleExpr        go to state 91
    vstructExpr       go to state 92
    primary_exp       go to state 93
    int_expr          go to state 94
    stringls          go to state 95
    if_exp            go to state 96
    chain_exp         go to state 97
    postfix_exp       go to state 99
    vcall_exp         go to state 100
    dot_name_exp      go to state 101
    dot_index_exp     go to state 102
    unary_exp         go to state 103
    unary_op          go to state 104
    binary_exp        go to state 105
    mul_binary_exp    go to state 106
    add_binary_exp    go to state 107
    cmp_binary_exp    go to state 108
    eq_binary_exp     go to state 109
    and_binary_exp    go to state 110
    xor_binary_exp    go to state 111
    or_binary_exp     go to state 112
    type_spec         go to state 113
    mod_prefix_tid    go to state 65
    tuple_type_spec   go to state 66
    array_type_spec   go to state 67
    struct_type_spec  go to state 68
    enum_type_spec    go to state 69
    fn_type_spec      go to state 70


State 153

   34 discard_stmt: "discard" • expr

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 20
    "enum"                   shift, and go to state 57
    "if"                     shift, and go to state 71
    "fn"                     shift, and go to state 58
    "not"                    shift, and go to state 72
    "42"                     shift, and go to state 73
    "0x2a"                   shift, and go to state 74
    "42u"                    shift, and go to state 75
    "0x2Au"                  shift, and go to state 76
    "4.2"                    shift, and go to state 77
    "\"dq-string-literal\""  shift, and go to state 78
    "'sq-string-literal'"    shift, and go to state 79
    "("                      shift, and go to state 80
    "["                      shift, and go to state 59
    "{"                      shift, and go to state 81
    "+"                      shift, and go to state 82
    "-"                      shift, and go to state 83

    tid               go to state 61
    vid               go to state 84
    floatl            go to state 85
    mod_prefix        go to state 86
    expr              go to state 235
    bracketed_exp     go to state 89
    paren_exp         go to state 90
    vtupleExpr        go to state 91
    vstructExpr       go to state 92
    primary_exp       go to state 93
    int_expr          go to state 94
    stringls          go to state 95
    if_exp            go to state 96
    chain_exp         go to state 97
    postfix_exp       go to state 99
    vcall_exp         go to state 100
    dot_name_exp      go to state 101
    dot_index_exp     go to state 102
    unary_exp         go to state 103
    unary_op          go to state 104
    binary_exp        go to state 105
    mul_binary_exp    go to state 106
    add_binary_exp    go to state 107
    cmp_binary_exp    go to state 108
    eq_binary_exp     go to state 109
    and_binary_exp    go to state 110
    xor_binary_exp    go to state 111
    or_binary_exp     go to state 112
    type_spec         go to state 113
    mod_prefix_tid    go to state 65
    tuple_type_spec   go to state 66
    array_type_spec   go to state 67
    struct_type_spec  go to state 68
    enum_type_spec    go to state 69
    fn_type_spec      go to state 70


State 154

   78 chain_exp: "{" "}" •

    $default  reduce using rule 78 (chain_exp)


State 155

   82 chain_prefix: chain_prefix_stmt • ";"

    ";"  shift, and go to state 236


State 156

   25 chain_prefix_stmt: const_stmt •

    $default  reduce using rule 25 (chain_prefix_stmt)


State 157

   26 chain_prefix_stmt: val_stmt •

    $default  reduce using rule 26 (chain_prefix_stmt)


State 158

   27 chain_prefix_stmt: var_stmt •

    $default  reduce using rule 27 (chain_prefix_stmt)


State 159

   28 chain_prefix_stmt: set_stmt •

    $default  reduce using rule 28 (chain_prefix_stmt)


State 160

   29 chain_prefix_stmt: discard_stmt •

    $default  reduce using rule 29 (chain_prefix_stmt)


State 161

   41 mod_prefix: vid • "::"
   42           | vid • "[" targ_cl "]" "::"
   62 primary_exp: vid •
  147 struct_type_spec_field: vid • type_spec
  169 struct_exp_field: vid • "=" expr

    "val_id"  shift, and go to state 10
    "TypeId"  shift, and go to state 20
    "enum"    shift, and go to state 57
    "fn"      shift, and go to state 58
    "::"      shift, and go to state 139
    "["       shift, and go to state 207
    "{"       shift, and go to state 60
    "="       shift, and go to state 237

    $default  reduce using rule 62 (primary_exp)

    tid               go to state 61
    vid               go to state 62
    mod_prefix        go to state 63
    type_spec         go to state 208
    mod_prefix_tid    go to state 65
    tuple_type_spec   go to state 66
    array_type_spec   go to state 67
    struct_type_spec  go to state 68
    enum_type_spec    go to state 69
    fn_type_spec      go to state 70


State 162

   79 chain_exp: "{" long_exp • "}"

    "}"  shift, and go to state 238


State 163

   80 chain_exp: "{" chain_prefix • "}"
   81          | "{" chain_prefix • long_exp "}"
   83 chain_prefix: chain_prefix • chain_prefix_stmt ";"

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 20
    "enum"                   shift, and go to state 57
    "if"                     shift, and go to state 71
    "const"                  shift, and go to state 149
    "val"                    shift, and go to state 150
    "var"                    shift, and go to state 151
    "set"                    shift, and go to state 152
    "fn"                     shift, and go to state 58
    "not"                    shift, and go to state 72
    "discard"                shift, and go to state 153
    "42"                     shift, and go to state 73
    "0x2a"                   shift, and go to state 74
    "42u"                    shift, and go to state 75
    "0x2Au"                  shift, and go to state 76
    "4.2"                    shift, and go to state 77
    "\"dq-string-literal\""  shift, and go to state 78
    "'sq-string-literal'"    shift, and go to state 79
    "("                      shift, and go to state 80
    "["                      shift, and go to state 59
    "{"                      shift, and go to state 81
    "}"                      shift, and go to state 239
    "+"                      shift, and go to state 82
    "-"                      shift, and go to state 83

    chain_prefix_stmt  go to state 240
    const_stmt         go to state 156
    val_stmt           go to state 157
    var_stmt           go to state 158
    set_stmt           go to state 159
    discard_stmt       go to state 160
    tid                go to state 61
    vid                go to state 84
    floatl             go to state 85
    mod_prefix         go to state 86
    expr               go to state 87
    long_exp           go to state 241
    bracketed_exp      go to state 89
    paren_exp          go to state 90
    vtupleExpr         go to state 91
    vstructExpr        go to state 92
    primary_exp        go to state 93
    int_expr           go to state 94
    stringls           go to state 95
    if_exp             go to state 96
    chain_exp          go to state 97
    lambda_exp         go to state 98
    postfix_exp        go to state 99
    vcall_exp          go to state 100
    dot_name_exp       go to state 101
    dot_index_exp      go to state 102
    unary_exp          go to state 103
    unary_op           go to state 104
    binary_exp         go to state 105
    mul_binary_exp     go to state 106
    add_binary_exp     go to state 107
    cmp_binary_exp     go to state 108
    eq_binary_exp      go to state 109
    and_binary_exp     go to state 110
    xor_binary_exp     go to state 111
    or_binary_exp      go to state 112
    type_spec          go to state 113
    mod_prefix_tid     go to state 65
    tuple_type_spec    go to state 66
    array_type_spec    go to state 67
    struct_type_spec   go to state 68
    enum_type_spec     go to state 69
    fn_type_spec       go to state 114


State 164

   92 dot_name_exp: type_spec • "::" "TypeId"
   93             | type_spec • "::" "TypeId" "using" paren_exp
  131 type_spec_cl2: type_spec • "," type_spec
  141 tuple_type_spec: "{" type_spec • "}"

    ","   shift, and go to state 211
    "::"  shift, and go to state 191
    "}"   shift, and go to state 212


State 165

  189 struct_exp_field_cl: struct_exp_field •

    $default  reduce using rule 189 (struct_exp_field_cl)


State 166

   60 vstructExpr: "{" struct_exp_field_cl • "}"
  190 struct_exp_field_cl: struct_exp_field_cl • "," struct_exp_field

    ","  shift, and go to state 242
    "}"  shift, and go to state 243


State 167

   43 mod_prefix: mod_prefix vid • "::"
   44           | mod_prefix vid • "[" targ_cl "]" "::"
   67 primary_exp: mod_prefix vid •

    "::"  shift, and go to state 219
    "["   shift, and go to state 220

    $default  reduce using rule 67 (primary_exp)


State 168

   75 stringls: stringls "\"dq-string-literal\"" •

    $default  reduce using rule 75 (stringls)


State 169

   74 stringls: stringls "'sq-string-literal'" •

    $default  reduce using rule 74 (stringls)


State 170

   91 dot_name_exp: postfix_exp "." • "val_id"
   94 dot_index_exp: postfix_exp "." • int_expr
   95              | postfix_exp "." • bracketed_exp

    "val_id"  shift, and go to state 244
    "42"      shift, and go to state 73
    "0x2a"    shift, and go to state 74
    "42u"     shift, and go to state 75
    "0x2Au"   shift, and go to state 76
    "("       shift, and go to state 80
    "{"       shift, and go to state 143

    bracketed_exp  go to state 245
    paren_exp      go to state 90
    vtupleExpr     go to state 91
    vstructExpr    go to state 92
    int_expr       go to state 246
    chain_exp      go to state 97


State 171

   89 vcall_exp: postfix_exp "(" • ")"
   90          | postfix_exp "(" • varg_cl ")"

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 20
    "enum"                   shift, and go to state 57
    "if"                     shift, and go to state 71
    "fn"                     shift, and go to state 58
    "not"                    shift, and go to state 72
    "out"                    shift, and go to state 247
    "inout"                  shift, and go to state 248
    "42"                     shift, and go to state 73
    "0x2a"                   shift, and go to state 74
    "42u"                    shift, and go to state 75
    "0x2Au"                  shift, and go to state 76
    "4.2"                    shift, and go to state 77
    "\"dq-string-literal\""  shift, and go to state 78
    "'sq-string-literal'"    shift, and go to state 79
    "("                      shift, and go to state 80
    ")"                      shift, and go to state 249
    "["                      shift, and go to state 59
    "{"                      shift, and go to state 81
    "+"                      shift, and go to state 82
    "-"                      shift, and go to state 83

    tid               go to state 61
    vid               go to state 84
    floatl            go to state 85
    mod_prefix        go to state 86
    expr              go to state 250
    bracketed_exp     go to state 89
    paren_exp         go to state 90
    vtupleExpr        go to state 91
    vstructExpr       go to state 92
    primary_exp       go to state 93
    int_expr          go to state 94
    stringls          go to state 95
    if_exp            go to state 96
    chain_exp         go to state 97
    postfix_exp       go to state 99
    vcall_exp         go to state 100
    dot_name_exp      go to state 101
    dot_index_exp     go to state 102
    unary_exp         go to state 103
    unary_op          go to state 104
    binary_exp        go to state 105
    mul_binary_exp    go to state 106
    add_binary_exp    go to state 107
    cmp_binary_exp    go to state 108
    eq_binary_exp     go to state 109
    and_binary_exp    go to state 110
    xor_binary_exp    go to state 111
    or_binary_exp     go to state 112
    type_spec         go to state 113
    mod_prefix_tid    go to state 65
    tuple_type_spec   go to state 66
    array_type_spec   go to state 67
    struct_type_spec  go to state 68
    enum_type_spec    go to state 69
    fn_type_spec      go to state 70
    varg              go to state 251
    varg_cl           go to state 252


State 172

   97 unary_exp: unary_op unary_exp •

    $default  reduce using rule 97 (unary_exp)


State 173

  102 mul_binary_op: "*" •

    $default  reduce using rule 102 (mul_binary_op)


State 174

  103 mul_binary_op: "/" •

    $default  reduce using rule 103 (mul_binary_op)


State 175

  104 mul_binary_op: "%" •

    $default  reduce using rule 104 (mul_binary_op)


State 176

  106 mul_binary_exp: mul_binary_exp mul_binary_op • unary_exp

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 20
    "enum"                   shift, and go to state 57
    "if"                     shift, and go to state 71
    "fn"                     shift, and go to state 58
    "not"                    shift, and go to state 72
    "42"                     shift, and go to state 73
    "0x2a"                   shift, and go to state 74
    "42u"                    shift, and go to state 75
    "0x2Au"                  shift, and go to state 76
    "4.2"                    shift, and go to state 77
    "\"dq-string-literal\""  shift, and go to state 78
    "'sq-string-literal'"    shift, and go to state 79
    "("                      shift, and go to state 80
    "["                      shift, and go to state 59
    "{"                      shift, and go to state 81
    "+"                      shift, and go to state 82
    "-"                      shift, and go to state 83

    tid               go to state 61
    vid               go to state 84
    floatl            go to state 85
    mod_prefix        go to state 86
    bracketed_exp     go to state 89
    paren_exp         go to state 90
    vtupleExpr        go to state 91
    vstructExpr       go to state 92
    primary_exp       go to state 93
    int_expr          go to state 94
    stringls          go to state 95
    if_exp            go to state 96
    chain_exp         go to state 97
    postfix_exp       go to state 99
    vcall_exp         go to state 100
    dot_name_exp      go to state 101
    dot_index_exp     go to state 102
    unary_exp         go to state 253
    unary_op          go to state 104
    type_spec         go to state 113
    mod_prefix_tid    go to state 65
    tuple_type_spec   go to state 66
    array_type_spec   go to state 67
    struct_type_spec  go to state 68
    enum_type_spec    go to state 69
    fn_type_spec      go to state 70


State 177

  107 add_binary_op: "+" •

    $default  reduce using rule 107 (add_binary_op)


State 178

  108 add_binary_op: "-" •

    $default  reduce using rule 108 (add_binary_op)


State 179

  110 add_binary_exp: add_binary_exp add_binary_op • mul_binary_exp

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 20
    "enum"                   shift, and go to state 57
    "if"                     shift, and go to state 71
    "fn"                     shift, and go to state 58
    "not"                    shift, and go to state 72
    "42"                     shift, and go to state 73
    "0x2a"                   shift, and go to state 74
    "42u"                    shift, and go to state 75
    "0x2Au"                  shift, and go to state 76
    "4.2"                    shift, and go to state 77
    "\"dq-string-literal\""  shift, and go to state 78
    "'sq-string-literal'"    shift, and go to state 79
    "("                      shift, and go to state 80
    "["                      shift, and go to state 59
    "{"                      shift, and go to state 81
    "+"                      shift, and go to state 82
    "-"                      shift, and go to state 83

    tid               go to state 61
    vid               go to state 84
    floatl            go to state 85
    mod_prefix        go to state 86
    bracketed_exp     go to state 89
    paren_exp         go to state 90
    vtupleExpr        go to state 91
    vstructExpr       go to state 92
    primary_exp       go to state 93
    int_expr          go to state 94
    stringls          go to state 95
    if_exp            go to state 96
    chain_exp         go to state 97
    postfix_exp       go to state 99
    vcall_exp         go to state 100
    dot_name_exp      go to state 101
    dot_index_exp     go to state 102
    unary_exp         go to state 103
    unary_op          go to state 104
    mul_binary_exp    go to state 254
    type_spec         go to state 113
    mod_prefix_tid    go to state 65
    tuple_type_spec   go to state 66
    array_type_spec   go to state 67
    struct_type_spec  go to state 68
    enum_type_spec    go to state 69
    fn_type_spec      go to state 70


State 180

  111 cmp_binary_op: "<" •

    $default  reduce using rule 111 (cmp_binary_op)


State 181

  112 cmp_binary_op: "<=" •

    $default  reduce using rule 112 (cmp_binary_op)


State 182

  113 cmp_binary_op: ">" •

    $default  reduce using rule 113 (cmp_binary_op)


State 183

  114 cmp_binary_op: ">=" •

    $default  reduce using rule 114 (cmp_binary_op)


State 184

  116 cmp_binary_exp: cmp_binary_exp cmp_binary_op • add_binary_exp

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 20
    "enum"                   shift, and go to state 57
    "if"                     shift, and go to state 71
    "fn"                     shift, and go to state 58
    "not"                    shift, and go to state 72
    "42"                     shift, and go to state 73
    "0x2a"                   shift, and go to state 74
    "42u"                    shift, and go to state 75
    "0x2Au"                  shift, and go to state 76
    "4.2"                    shift, and go to state 77
    "\"dq-string-literal\""  shift, and go to state 78
    "'sq-string-literal'"    shift, and go to state 79
    "("                      shift, and go to state 80
    "["                      shift, and go to state 59
    "{"                      shift, and go to state 81
    "+"                      shift, and go to state 82
    "-"                      shift, and go to state 83

    tid               go to state 61
    vid               go to state 84
    floatl            go to state 85
    mod_prefix        go to state 86
    bracketed_exp     go to state 89
    paren_exp         go to state 90
    vtupleExpr        go to state 91
    vstructExpr       go to state 92
    primary_exp       go to state 93
    int_expr          go to state 94
    stringls          go to state 95
    if_exp            go to state 96
    chain_exp         go to state 97
    postfix_exp       go to state 99
    vcall_exp         go to state 100
    dot_name_exp      go to state 101
    dot_index_exp     go to state 102
    unary_exp         go to state 103
    unary_op          go to state 104
    mul_binary_exp    go to state 106
    add_binary_exp    go to state 255
    type_spec         go to state 113
    mod_prefix_tid    go to state 65
    tuple_type_spec   go to state 66
    array_type_spec   go to state 67
    struct_type_spec  go to state 68
    enum_type_spec    go to state 69
    fn_type_spec      go to state 70


State 185

  117 eq_binary_op: "==" •

    $default  reduce using rule 117 (eq_binary_op)


State 186

  118 eq_binary_op: "!=" •

    $default  reduce using rule 118 (eq_binary_op)


State 187

  120 eq_binary_exp: eq_binary_exp eq_binary_op • cmp_binary_exp

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 20
    "enum"                   shift, and go to state 57
    "if"                     shift, and go to state 71
    "fn"                     shift, and go to state 58
    "not"                    shift, and go to state 72
    "42"                     shift, and go to state 73
    "0x2a"                   shift, and go to state 74
    "42u"                    shift, and go to state 75
    "0x2Au"                  shift, and go to state 76
    "4.2"                    shift, and go to state 77
    "\"dq-string-literal\""  shift, and go to state 78
    "'sq-string-literal'"    shift, and go to state 79
    "("                      shift, and go to state 80
    "["                      shift, and go to state 59
    "{"                      shift, and go to state 81
    "+"                      shift, and go to state 82
    "-"                      shift, and go to state 83

    tid               go to state 61
    vid               go to state 84
    floatl            go to state 85
    mod_prefix        go to state 86
    bracketed_exp     go to state 89
    paren_exp         go to state 90
    vtupleExpr        go to state 91
    vstructExpr       go to state 92
    primary_exp       go to state 93
    int_expr          go to state 94
    stringls          go to state 95
    if_exp            go to state 96
    chain_exp         go to state 97
    postfix_exp       go to state 99
    vcall_exp         go to state 100
    dot_name_exp      go to state 101
    dot_index_exp     go to state 102
    unary_exp         go to state 103
    unary_op          go to state 104
    mul_binary_exp    go to state 106
    add_binary_exp    go to state 107
    cmp_binary_exp    go to state 256
    type_spec         go to state 113
    mod_prefix_tid    go to state 65
    tuple_type_spec   go to state 66
    array_type_spec   go to state 67
    struct_type_spec  go to state 68
    enum_type_spec    go to state 69
    fn_type_spec      go to state 70


State 188

  122 and_binary_exp: and_binary_exp "and" • eq_binary_exp

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 20
    "enum"                   shift, and go to state 57
    "if"                     shift, and go to state 71
    "fn"                     shift, and go to state 58
    "not"                    shift, and go to state 72
    "42"                     shift, and go to state 73
    "0x2a"                   shift, and go to state 74
    "42u"                    shift, and go to state 75
    "0x2Au"                  shift, and go to state 76
    "4.2"                    shift, and go to state 77
    "\"dq-string-literal\""  shift, and go to state 78
    "'sq-string-literal'"    shift, and go to state 79
    "("                      shift, and go to state 80
    "["                      shift, and go to state 59
    "{"                      shift, and go to state 81
    "+"                      shift, and go to state 82
    "-"                      shift, and go to state 83

    tid               go to state 61
    vid               go to state 84
    floatl            go to state 85
    mod_prefix        go to state 86
    bracketed_exp     go to state 89
    paren_exp         go to state 90
    vtupleExpr        go to state 91
    vstructExpr       go to state 92
    primary_exp       go to state 93
    int_expr          go to state 94
    stringls          go to state 95
    if_exp            go to state 96
    chain_exp         go to state 97
    postfix_exp       go to state 99
    vcall_exp         go to state 100
    dot_name_exp      go to state 101
    dot_index_exp     go to state 102
    unary_exp         go to state 103
    unary_op          go to state 104
    mul_binary_exp    go to state 106
    add_binary_exp    go to state 107
    cmp_binary_exp    go to state 108
    eq_binary_exp     go to state 257
    type_spec         go to state 113
    mod_prefix_tid    go to state 65
    tuple_type_spec   go to state 66
    array_type_spec   go to state 67
    struct_type_spec  go to state 68
    enum_type_spec    go to state 69
    fn_type_spec      go to state 70


State 189

  124 xor_binary_exp: xor_binary_exp "xor" • and_binary_exp

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 20
    "enum"                   shift, and go to state 57
    "if"                     shift, and go to state 71
    "fn"                     shift, and go to state 58
    "not"                    shift, and go to state 72
    "42"                     shift, and go to state 73
    "0x2a"                   shift, and go to state 74
    "42u"                    shift, and go to state 75
    "0x2Au"                  shift, and go to state 76
    "4.2"                    shift, and go to state 77
    "\"dq-string-literal\""  shift, and go to state 78
    "'sq-string-literal'"    shift, and go to state 79
    "("                      shift, and go to state 80
    "["                      shift, and go to state 59
    "{"                      shift, and go to state 81
    "+"                      shift, and go to state 82
    "-"                      shift, and go to state 83

    tid               go to state 61
    vid               go to state 84
    floatl            go to state 85
    mod_prefix        go to state 86
    bracketed_exp     go to state 89
    paren_exp         go to state 90
    vtupleExpr        go to state 91
    vstructExpr       go to state 92
    primary_exp       go to state 93
    int_expr          go to state 94
    stringls          go to state 95
    if_exp            go to state 96
    chain_exp         go to state 97
    postfix_exp       go to state 99
    vcall_exp         go to state 100
    dot_name_exp      go to state 101
    dot_index_exp     go to state 102
    unary_exp         go to state 103
    unary_op          go to state 104
    mul_binary_exp    go to state 106
    add_binary_exp    go to state 107
    cmp_binary_exp    go to state 108
    eq_binary_exp     go to state 109
    and_binary_exp    go to state 258
    type_spec         go to state 113
    mod_prefix_tid    go to state 65
    tuple_type_spec   go to state 66
    array_type_spec   go to state 67
    struct_type_spec  go to state 68
    enum_type_spec    go to state 69
    fn_type_spec      go to state 70


State 190

  126 or_binary_exp: or_binary_exp "or" • xor_binary_exp

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 20
    "enum"                   shift, and go to state 57
    "if"                     shift, and go to state 71
    "fn"                     shift, and go to state 58
    "not"                    shift, and go to state 72
    "42"                     shift, and go to state 73
    "0x2a"                   shift, and go to state 74
    "42u"                    shift, and go to state 75
    "0x2Au"                  shift, and go to state 76
    "4.2"                    shift, and go to state 77
    "\"dq-string-literal\""  shift, and go to state 78
    "'sq-string-literal'"    shift, and go to state 79
    "("                      shift, and go to state 80
    "["                      shift, and go to state 59
    "{"                      shift, and go to state 81
    "+"                      shift, and go to state 82
    "-"                      shift, and go to state 83

    tid               go to state 61
    vid               go to state 84
    floatl            go to state 85
    mod_prefix        go to state 86
    bracketed_exp     go to state 89
    paren_exp         go to state 90
    vtupleExpr        go to state 91
    vstructExpr       go to state 92
    primary_exp       go to state 93
    int_expr          go to state 94
    stringls          go to state 95
    if_exp            go to state 96
    chain_exp         go to state 97
    postfix_exp       go to state 99
    vcall_exp         go to state 100
    dot_name_exp      go to state 101
    dot_index_exp     go to state 102
    unary_exp         go to state 103
    unary_op          go to state 104
    mul_binary_exp    go to state 106
    add_binary_exp    go to state 107
    cmp_binary_exp    go to state 108
    eq_binary_exp     go to state 109
    and_binary_exp    go to state 110
    xor_binary_exp    go to state 259
    type_spec         go to state 113
    mod_prefix_tid    go to state 65
    tuple_type_spec   go to state 66
    array_type_spec   go to state 67
    struct_type_spec  go to state 68
    enum_type_spec    go to state 69
    fn_type_spec      go to state 70


State 191

   92 dot_name_exp: type_spec "::" • "TypeId"
   93             | type_spec "::" • "TypeId" "using" paren_exp

    "TypeId"  shift, and go to state 260


State 192

   84 lambda_exp: fn_type_spec bracketed_exp •

    $default  reduce using rule 84 (lambda_exp)


State 193

  168 class_exp_class_spec: "typeclass" "(" • tid class_spec ")" "{" type_query_exp_sl0 "}"

    "TypeId"  shift, and go to state 20

    tid  go to state 261


State 194

  167 mod_prefix_cid_class_spec: mod_prefix cid •

    $default  reduce using rule 167 (mod_prefix_cid_class_spec)


State 195

  188 tpattern_field_cl1: tpattern_field_cl1 "," tpattern_field •

    $default  reduce using rule 188 (tpattern_field_cl1)


State 196

  148 enum_type_spec_field: tid •
  149                     | tid • type_spec

    "val_id"  shift, and go to state 10
    "TypeId"  shift, and go to state 20
    "enum"    shift, and go to state 57
    "fn"      shift, and go to state 58
    "["       shift, and go to state 59
    "{"       shift, and go to state 60

    $default  reduce using rule 148 (enum_type_spec_field)

    tid               go to state 61
    vid               go to state 62
    mod_prefix        go to state 63
    type_spec         go to state 262
    mod_prefix_tid    go to state 65
    tuple_type_spec   go to state 66
    array_type_spec   go to state 67
    struct_type_spec  go to state 68
    enum_type_spec    go to state 69
    fn_type_spec      go to state 70


State 197

  150 enum_type_spec_field_cl: enum_type_spec_field •

    $default  reduce using rule 150 (enum_type_spec_field_cl)


State 198

  151 enum_type_spec_field_cl: enum_type_spec_field_cl • "," enum_type_spec_field
  152 enum_type_spec: "enum" "{" enum_type_spec_field_cl • "}"

    ","  shift, and go to state 263
    "}"  shift, and go to state 264


State 199

  171 vpattern_field: "out" • vid type_spec

    "val_id"  shift, and go to state 10

    vid  go to state 265


State 200

  172 vpattern_field: "inout" • vid type_spec

    "val_id"  shift, and go to state 10

    vid  go to state 266


State 201

  181 vpattern: "(" ")" •

    $default  reduce using rule 181 (vpattern)


State 202

  170 vpattern_field: vid • type_spec

    "val_id"  shift, and go to state 10
    "TypeId"  shift, and go to state 20
    "enum"    shift, and go to state 57
    "fn"      shift, and go to state 58
    "["       shift, and go to state 59
    "{"       shift, and go to state 60

    tid               go to state 61
    vid               go to state 62
    mod_prefix        go to state 63
    type_spec         go to state 267
    mod_prefix_tid    go to state 65
    tuple_type_spec   go to state 66
    array_type_spec   go to state 67
    struct_type_spec  go to state 68
    enum_type_spec    go to state 69
    fn_type_spec      go to state 70


State 203

  183 vpattern_field_cl: vpattern_field •

    $default  reduce using rule 183 (vpattern_field_cl)


State 204

  180 vpattern: "(" vpattern_field_cl • ")"
  184 vpattern_field_cl: vpattern_field_cl • "," vpattern_field

    ","  shift, and go to state 268
    ")"  shift, and go to state 269


State 205

  153 fn_type_spec: "fn" vpattern type_spec •

    $default  reduce using rule 153 (fn_type_spec)


State 206

  143 array_type_spec: "[" type_spec "*" • expr "]"

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 20
    "enum"                   shift, and go to state 57
    "if"                     shift, and go to state 71
    "fn"                     shift, and go to state 58
    "not"                    shift, and go to state 72
    "42"                     shift, and go to state 73
    "0x2a"                   shift, and go to state 74
    "42u"                    shift, and go to state 75
    "0x2Au"                  shift, and go to state 76
    "4.2"                    shift, and go to state 77
    "\"dq-string-literal\""  shift, and go to state 78
    "'sq-string-literal'"    shift, and go to state 79
    "("                      shift, and go to state 80
    "["                      shift, and go to state 59
    "{"                      shift, and go to state 81
    "+"                      shift, and go to state 82
    "-"                      shift, and go to state 83

    tid               go to state 61
    vid               go to state 84
    floatl            go to state 85
    mod_prefix        go to state 86
    expr              go to state 270
    bracketed_exp     go to state 89
    paren_exp         go to state 90
    vtupleExpr        go to state 91
    vstructExpr       go to state 92
    primary_exp       go to state 93
    int_expr          go to state 94
    stringls          go to state 95
    if_exp            go to state 96
    chain_exp         go to state 97
    postfix_exp       go to state 99
    vcall_exp         go to state 100
    dot_name_exp      go to state 101
    dot_index_exp     go to state 102
    unary_exp         go to state 103
    unary_op          go to state 104
    binary_exp        go to state 105
    mul_binary_exp    go to state 106
    add_binary_exp    go to state 107
    cmp_binary_exp    go to state 108
    eq_binary_exp     go to state 109
    and_binary_exp    go to state 110
    xor_binary_exp    go to state 111
    or_binary_exp     go to state 112
    type_spec         go to state 113
    mod_prefix_tid    go to state 65
    tuple_type_spec   go to state 66
    array_type_spec   go to state 67
    struct_type_spec  go to state 68
    enum_type_spec    go to state 69
    fn_type_spec      go to state 70


State 207

   42 mod_prefix: vid "[" • targ_cl "]" "::"
  143 array_type_spec: "[" • type_spec "*" expr "]"

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 20
    "enum"                   shift, and go to state 57
    "if"                     shift, and go to state 71
    "fn"                     shift, and go to state 58
    "not"                    shift, and go to state 72
    "42"                     shift, and go to state 73
    "0x2a"                   shift, and go to state 74
    "42u"                    shift, and go to state 75
    "0x2Au"                  shift, and go to state 76
    "4.2"                    shift, and go to state 77
    "\"dq-string-literal\""  shift, and go to state 78
    "'sq-string-literal'"    shift, and go to state 79
    "("                      shift, and go to state 80
    "["                      shift, and go to state 59
    "{"                      shift, and go to state 81
    "+"                      shift, and go to state 82
    "-"                      shift, and go to state 83

    tid               go to state 61
    vid               go to state 84
    floatl            go to state 85
    mod_prefix        go to state 86
    expr              go to state 215
    bracketed_exp     go to state 89
    paren_exp         go to state 90
    vtupleExpr        go to state 91
    vstructExpr       go to state 92
    primary_exp       go to state 93
    int_expr          go to state 94
    stringls          go to state 95
    if_exp            go to state 96
    chain_exp         go to state 97
    postfix_exp       go to state 99
    vcall_exp         go to state 100
    dot_name_exp      go to state 101
    dot_index_exp     go to state 102
    unary_exp         go to state 103
    unary_op          go to state 104
    binary_exp        go to state 105
    mul_binary_exp    go to state 106
    add_binary_exp    go to state 107
    cmp_binary_exp    go to state 108
    eq_binary_exp     go to state 109
    and_binary_exp    go to state 110
    xor_binary_exp    go to state 111
    or_binary_exp     go to state 112
    type_spec         go to state 271
    mod_prefix_tid    go to state 65
    tuple_type_spec   go to state 66
    array_type_spec   go to state 67
    struct_type_spec  go to state 68
    enum_type_spec    go to state 69
    fn_type_spec      go to state 70
    targ              go to state 217
    targ_cl           go to state 218


State 208

  147 struct_type_spec_field: vid type_spec •

    $default  reduce using rule 147 (struct_type_spec_field)


State 209

  132 type_spec_cl2: type_spec_cl2 "," • type_spec

    "val_id"  shift, and go to state 10
    "TypeId"  shift, and go to state 20
    "enum"    shift, and go to state 57
    "fn"      shift, and go to state 58
    "["       shift, and go to state 59
    "{"       shift, and go to state 60

    tid               go to state 61
    vid               go to state 62
    mod_prefix        go to state 63
    type_spec         go to state 272
    mod_prefix_tid    go to state 65
    tuple_type_spec   go to state 66
    array_type_spec   go to state 67
    struct_type_spec  go to state 68
    enum_type_spec    go to state 69
    fn_type_spec      go to state 70


State 210

  142 tuple_type_spec: "{" type_spec_cl2 "}" •

    $default  reduce using rule 142 (tuple_type_spec)


State 211

  131 type_spec_cl2: type_spec "," • type_spec

    "val_id"  shift, and go to state 10
    "TypeId"  shift, and go to state 20
    "enum"    shift, and go to state 57
    "fn"      shift, and go to state 58
    "["       shift, and go to state 59
    "{"       shift, and go to state 60

    tid               go to state 61
    vid               go to state 62
    mod_prefix        go to state 63
    type_spec         go to state 273
    mod_prefix_tid    go to state 65
    tuple_type_spec   go to state 66
    array_type_spec   go to state 67
    struct_type_spec  go to state 68
    enum_type_spec    go to state 69
    fn_type_spec      go to state 70


State 212

  141 tuple_type_spec: "{" type_spec "}" •

    $default  reduce using rule 141 (tuple_type_spec)


State 213

  146 struct_type_spec_field_cl: struct_type_spec_field_cl "," • struct_type_spec_field

    "val_id"  shift, and go to state 10

    vid                     go to state 274
    struct_type_spec_field  go to state 275


State 214

  144 struct_type_spec: "{" struct_type_spec_field_cl "}" •

    $default  reduce using rule 144 (struct_type_spec)


State 215

  155 targ: expr •

    $default  reduce using rule 155 (targ)


State 216

   92 dot_name_exp: type_spec • "::" "TypeId"
   93             | type_spec • "::" "TypeId" "using" paren_exp
  154 targ: type_spec •

    "::"  shift, and go to state 191

    $default  reduce using rule 154 (targ)


State 217

  156 targ_cl: targ •

    $default  reduce using rule 156 (targ_cl)


State 218

   42 mod_prefix: vid "[" targ_cl • "]" "::"
  157 targ_cl: targ_cl • "," targ

    ","  shift, and go to state 276
    "]"  shift, and go to state 277


State 219

   43 mod_prefix: mod_prefix vid "::" •

    $default  reduce using rule 43 (mod_prefix)


State 220

   44 mod_prefix: mod_prefix vid "[" • targ_cl "]" "::"

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 20
    "enum"                   shift, and go to state 57
    "if"                     shift, and go to state 71
    "fn"                     shift, and go to state 58
    "not"                    shift, and go to state 72
    "42"                     shift, and go to state 73
    "0x2a"                   shift, and go to state 74
    "42u"                    shift, and go to state 75
    "0x2Au"                  shift, and go to state 76
    "4.2"                    shift, and go to state 77
    "\"dq-string-literal\""  shift, and go to state 78
    "'sq-string-literal'"    shift, and go to state 79
    "("                      shift, and go to state 80
    "["                      shift, and go to state 59
    "{"                      shift, and go to state 81
    "+"                      shift, and go to state 82
    "-"                      shift, and go to state 83

    tid               go to state 61
    vid               go to state 84
    floatl            go to state 85
    mod_prefix        go to state 86
    expr              go to state 215
    bracketed_exp     go to state 89
    paren_exp         go to state 90
    vtupleExpr        go to state 91
    vstructExpr       go to state 92
    primary_exp       go to state 93
    int_expr          go to state 94
    stringls          go to state 95
    if_exp            go to state 96
    chain_exp         go to state 97
    postfix_exp       go to state 99
    vcall_exp         go to state 100
    dot_name_exp      go to state 101
    dot_index_exp     go to state 102
    unary_exp         go to state 103
    unary_op          go to state 104
    binary_exp        go to state 105
    mul_binary_exp    go to state 106
    add_binary_exp    go to state 107
    cmp_binary_exp    go to state 108
    eq_binary_exp     go to state 109
    and_binary_exp    go to state 110
    xor_binary_exp    go to state 111
    or_binary_exp     go to state 112
    type_spec         go to state 216
    mod_prefix_tid    go to state 65
    tuple_type_spec   go to state 66
    array_type_spec   go to state 67
    struct_type_spec  go to state 68
    enum_type_spec    go to state 69
    fn_type_spec      go to state 70
    targ              go to state 217
    targ_cl           go to state 278


State 221

   41 mod_prefix: vid • "::"
   42           | vid • "[" targ_cl "]" "::"
   62 primary_exp: vid •
  169 struct_exp_field: vid • "=" expr

    "::"  shift, and go to state 139
    "["   shift, and go to state 140
    "="   shift, and go to state 237

    $default  reduce using rule 62 (primary_exp)


State 222

   76 if_exp: "if" bracketed_exp bracketed_exp •
   77       | "if" bracketed_exp bracketed_exp • "else" primary_exp

    "else"  shift, and go to state 279

    $default  reduce using rule 76 (if_exp)


State 223

   48 expr_cl2: expr "," • expr
   58 vtupleExpr: "(" expr "," • ")"

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 20
    "enum"                   shift, and go to state 57
    "if"                     shift, and go to state 71
    "fn"                     shift, and go to state 58
    "not"                    shift, and go to state 72
    "42"                     shift, and go to state 73
    "0x2a"                   shift, and go to state 74
    "42u"                    shift, and go to state 75
    "0x2Au"                  shift, and go to state 76
    "4.2"                    shift, and go to state 77
    "\"dq-string-literal\""  shift, and go to state 78
    "'sq-string-literal'"    shift, and go to state 79
    "("                      shift, and go to state 80
    ")"                      shift, and go to state 280
    "["                      shift, and go to state 59
    "{"                      shift, and go to state 81
    "+"                      shift, and go to state 82
    "-"                      shift, and go to state 83

    tid               go to state 61
    vid               go to state 84
    floatl            go to state 85
    mod_prefix        go to state 86
    expr              go to state 281
    bracketed_exp     go to state 89
    paren_exp         go to state 90
    vtupleExpr        go to state 91
    vstructExpr       go to state 92
    primary_exp       go to state 93
    int_expr          go to state 94
    stringls          go to state 95
    if_exp            go to state 96
    chain_exp         go to state 97
    postfix_exp       go to state 99
    vcall_exp         go to state 100
    dot_name_exp      go to state 101
    dot_index_exp     go to state 102
    unary_exp         go to state 103
    unary_op          go to state 104
    binary_exp        go to state 105
    mul_binary_exp    go to state 106
    add_binary_exp    go to state 107
    cmp_binary_exp    go to state 108
    eq_binary_exp     go to state 109
    and_binary_exp    go to state 110
    xor_binary_exp    go to state 111
    or_binary_exp     go to state 112
    type_spec         go to state 113
    mod_prefix_tid    go to state 65
    tuple_type_spec   go to state 66
    array_type_spec   go to state 67
    struct_type_spec  go to state 68
    enum_type_spec    go to state 69
    fn_type_spec      go to state 70


State 224

   56 paren_exp: "(" long_exp ")" •

    $default  reduce using rule 56 (paren_exp)


State 225

   49 expr_cl2: expr_cl2 "," • expr

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 20
    "enum"                   shift, and go to state 57
    "if"                     shift, and go to state 71
    "fn"                     shift, and go to state 58
    "not"                    shift, and go to state 72
    "42"                     shift, and go to state 73
    "0x2a"                   shift, and go to state 74
    "42u"                    shift, and go to state 75
    "0x2Au"                  shift, and go to state 76
    "4.2"                    shift, and go to state 77
    "\"dq-string-literal\""  shift, and go to state 78
    "'sq-string-literal'"    shift, and go to state 79
    "("                      shift, and go to state 80
    "["                      shift, and go to state 59
    "{"                      shift, and go to state 81
    "+"                      shift, and go to state 82
    "-"                      shift, and go to state 83

    tid               go to state 61
    vid               go to state 84
    floatl            go to state 85
    mod_prefix        go to state 86
    expr              go to state 282
    bracketed_exp     go to state 89
    paren_exp         go to state 90
    vtupleExpr        go to state 91
    vstructExpr       go to state 92
    primary_exp       go to state 93
    int_expr          go to state 94
    stringls          go to state 95
    if_exp            go to state 96
    chain_exp         go to state 97
    postfix_exp       go to state 99
    vcall_exp         go to state 100
    dot_name_exp      go to state 101
    dot_index_exp     go to state 102
    unary_exp         go to state 103
    unary_op          go to state 104
    binary_exp        go to state 105
    mul_binary_exp    go to state 106
    add_binary_exp    go to state 107
    cmp_binary_exp    go to state 108
    eq_binary_exp     go to state 109
    and_binary_exp    go to state 110
    xor_binary_exp    go to state 111
    or_binary_exp     go to state 112
    type_spec         go to state 113
    mod_prefix_tid    go to state 65
    tuple_type_spec   go to state 66
    array_type_spec   go to state 67
    struct_type_spec  go to state 68
    enum_type_spec    go to state 69
    fn_type_spec      go to state 70


State 226

   59 vtupleExpr: "(" expr_cl2 ")" •

    $default  reduce using rule 59 (vtupleExpr)


State 227

  177 destructured_lpattern: "{" • lpattern_field_cl "}"

    "val_id"  shift, and go to state 10

    vid                go to state 228
    lpattern_field     go to state 283
    lpattern_field_cl  go to state 284


State 228

  173 lpattern_field: vid • type_spec
  174               | vid •

    "val_id"  shift, and go to state 10
    "TypeId"  shift, and go to state 20
    "enum"    shift, and go to state 57
    "fn"      shift, and go to state 58
    "["       shift, and go to state 59
    "{"       shift, and go to state 60

    $default  reduce using rule 174 (lpattern_field)

    tid               go to state 61
    vid               go to state 62
    mod_prefix        go to state 63
    type_spec         go to state 285
    mod_prefix_tid    go to state 65
    tuple_type_spec   go to state 66
    array_type_spec   go to state 67
    struct_type_spec  go to state 68
    enum_type_spec    go to state 69
    fn_type_spec      go to state 70


State 229

  178 lpattern: lpattern_field •

    $default  reduce using rule 178 (lpattern)


State 230

  179 lpattern: destructured_lpattern •

    $default  reduce using rule 179 (lpattern)


State 231

   30 const_stmt: "const" lpattern • "=" expr

    "="  shift, and go to state 286


State 232

   31 val_stmt: "val" lpattern • "=" expr

    "="  shift, and go to state 287


State 233

   32 var_stmt: "var" lpattern • "=" expr

    "="  shift, and go to state 288


State 234

   33 set_stmt: "set" expr • "=" expr

    "="  shift, and go to state 289


State 235

   34 discard_stmt: "discard" expr •

    $default  reduce using rule 34 (discard_stmt)


State 236

   82 chain_prefix: chain_prefix_stmt ";" •

    $default  reduce using rule 82 (chain_prefix)


State 237

  169 struct_exp_field: vid "=" • expr

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 20
    "enum"                   shift, and go to state 57
    "if"                     shift, and go to state 71
    "fn"                     shift, and go to state 58
    "not"                    shift, and go to state 72
    "42"                     shift, and go to state 73
    "0x2a"                   shift, and go to state 74
    "42u"                    shift, and go to state 75
    "0x2Au"                  shift, and go to state 76
    "4.2"                    shift, and go to state 77
    "\"dq-string-literal\""  shift, and go to state 78
    "'sq-string-literal'"    shift, and go to state 79
    "("                      shift, and go to state 80
    "["                      shift, and go to state 59
    "{"                      shift, and go to state 81
    "+"                      shift, and go to state 82
    "-"                      shift, and go to state 83

    tid               go to state 61
    vid               go to state 84
    floatl            go to state 85
    mod_prefix        go to state 86
    expr              go to state 290
    bracketed_exp     go to state 89
    paren_exp         go to state 90
    vtupleExpr        go to state 91
    vstructExpr       go to state 92
    primary_exp       go to state 93
    int_expr          go to state 94
    stringls          go to state 95
    if_exp            go to state 96
    chain_exp         go to state 97
    postfix_exp       go to state 99
    vcall_exp         go to state 100
    dot_name_exp      go to state 101
    dot_index_exp     go to state 102
    unary_exp         go to state 103
    unary_op          go to state 104
    binary_exp        go to state 105
    mul_binary_exp    go to state 106
    add_binary_exp    go to state 107
    cmp_binary_exp    go to state 108
    eq_binary_exp     go to state 109
    and_binary_exp    go to state 110
    xor_binary_exp    go to state 111
    or_binary_exp     go to state 112
    type_spec         go to state 113
    mod_prefix_tid    go to state 65
    tuple_type_spec   go to state 66
    array_type_spec   go to state 67
    struct_type_spec  go to state 68
    enum_type_spec    go to state 69
    fn_type_spec      go to state 70


State 238

   79 chain_exp: "{" long_exp "}" •

    $default  reduce using rule 79 (chain_exp)


State 239

   80 chain_exp: "{" chain_prefix "}" •

    $default  reduce using rule 80 (chain_exp)


State 240

   83 chain_prefix: chain_prefix chain_prefix_stmt • ";"

    ";"  shift, and go to state 291


State 241

   81 chain_exp: "{" chain_prefix long_exp • "}"

    "}"  shift, and go to state 292


State 242

  190 struct_exp_field_cl: struct_exp_field_cl "," • struct_exp_field

    "val_id"  shift, and go to state 10

    vid               go to state 293
    struct_exp_field  go to state 294


State 243

   60 vstructExpr: "{" struct_exp_field_cl "}" •

    $default  reduce using rule 60 (vstructExpr)


State 244

   91 dot_name_exp: postfix_exp "." "val_id" •

    $default  reduce using rule 91 (dot_name_exp)


State 245

   95 dot_index_exp: postfix_exp "." bracketed_exp •

    $default  reduce using rule 95 (dot_index_exp)


State 246

   94 dot_index_exp: postfix_exp "." int_expr •

    $default  reduce using rule 94 (dot_index_exp)


State 247

  159 varg: "out" • expr

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 20
    "enum"                   shift, and go to state 57
    "if"                     shift, and go to state 71
    "fn"                     shift, and go to state 58
    "not"                    shift, and go to state 72
    "42"                     shift, and go to state 73
    "0x2a"                   shift, and go to state 74
    "42u"                    shift, and go to state 75
    "0x2Au"                  shift, and go to state 76
    "4.2"                    shift, and go to state 77
    "\"dq-string-literal\""  shift, and go to state 78
    "'sq-string-literal'"    shift, and go to state 79
    "("                      shift, and go to state 80
    "["                      shift, and go to state 59
    "{"                      shift, and go to state 81
    "+"                      shift, and go to state 82
    "-"                      shift, and go to state 83

    tid               go to state 61
    vid               go to state 84
    floatl            go to state 85
    mod_prefix        go to state 86
    expr              go to state 295
    bracketed_exp     go to state 89
    paren_exp         go to state 90
    vtupleExpr        go to state 91
    vstructExpr       go to state 92
    primary_exp       go to state 93
    int_expr          go to state 94
    stringls          go to state 95
    if_exp            go to state 96
    chain_exp         go to state 97
    postfix_exp       go to state 99
    vcall_exp         go to state 100
    dot_name_exp      go to state 101
    dot_index_exp     go to state 102
    unary_exp         go to state 103
    unary_op          go to state 104
    binary_exp        go to state 105
    mul_binary_exp    go to state 106
    add_binary_exp    go to state 107
    cmp_binary_exp    go to state 108
    eq_binary_exp     go to state 109
    and_binary_exp    go to state 110
    xor_binary_exp    go to state 111
    or_binary_exp     go to state 112
    type_spec         go to state 113
    mod_prefix_tid    go to state 65
    tuple_type_spec   go to state 66
    array_type_spec   go to state 67
    struct_type_spec  go to state 68
    enum_type_spec    go to state 69
    fn_type_spec      go to state 70


State 248

  160 varg: "inout" • expr

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 20
    "enum"                   shift, and go to state 57
    "if"                     shift, and go to state 71
    "fn"                     shift, and go to state 58
    "not"                    shift, and go to state 72
    "42"                     shift, and go to state 73
    "0x2a"                   shift, and go to state 74
    "42u"                    shift, and go to state 75
    "0x2Au"                  shift, and go to state 76
    "4.2"                    shift, and go to state 77
    "\"dq-string-literal\""  shift, and go to state 78
    "'sq-string-literal'"    shift, and go to state 79
    "("                      shift, and go to state 80
    "["                      shift, and go to state 59
    "{"                      shift, and go to state 81
    "+"                      shift, and go to state 82
    "-"                      shift, and go to state 83

    tid               go to state 61
    vid               go to state 84
    floatl            go to state 85
    mod_prefix        go to state 86
    expr              go to state 296
    bracketed_exp     go to state 89
    paren_exp         go to state 90
    vtupleExpr        go to state 91
    vstructExpr       go to state 92
    primary_exp       go to state 93
    int_expr          go to state 94
    stringls          go to state 95
    if_exp            go to state 96
    chain_exp         go to state 97
    postfix_exp       go to state 99
    vcall_exp         go to state 100
    dot_name_exp      go to state 101
    dot_index_exp     go to state 102
    unary_exp         go to state 103
    unary_op          go to state 104
    binary_exp        go to state 105
    mul_binary_exp    go to state 106
    add_binary_exp    go to state 107
    cmp_binary_exp    go to state 108
    eq_binary_exp     go to state 109
    and_binary_exp    go to state 110
    xor_binary_exp    go to state 111
    or_binary_exp     go to state 112
    type_spec         go to state 113
    mod_prefix_tid    go to state 65
    tuple_type_spec   go to state 66
    array_type_spec   go to state 67
    struct_type_spec  go to state 68
    enum_type_spec    go to state 69
    fn_type_spec      go to state 70


State 249

   89 vcall_exp: postfix_exp "(" ")" •

    $default  reduce using rule 89 (vcall_exp)


State 250

  158 varg: expr •

    $default  reduce using rule 158 (varg)


State 251

  161 varg_cl: varg •

    $default  reduce using rule 161 (varg_cl)


State 252

   90 vcall_exp: postfix_exp "(" varg_cl • ")"
  162 varg_cl: varg_cl • "," varg

    ","  shift, and go to state 297
    ")"  shift, and go to state 298


State 253

  106 mul_binary_exp: mul_binary_exp mul_binary_op unary_exp •

    $default  reduce using rule 106 (mul_binary_exp)


State 254

  106 mul_binary_exp: mul_binary_exp • mul_binary_op unary_exp
  110 add_binary_exp: add_binary_exp add_binary_op mul_binary_exp •

    "*"  shift, and go to state 173
    "/"  shift, and go to state 174
    "%"  shift, and go to state 175

    $default  reduce using rule 110 (add_binary_exp)

    mul_binary_op  go to state 176


State 255

  110 add_binary_exp: add_binary_exp • add_binary_op mul_binary_exp
  116 cmp_binary_exp: cmp_binary_exp cmp_binary_op add_binary_exp •

    "+"  shift, and go to state 177
    "-"  shift, and go to state 178

    $default  reduce using rule 116 (cmp_binary_exp)

    add_binary_op  go to state 179


State 256

  116 cmp_binary_exp: cmp_binary_exp • cmp_binary_op add_binary_exp
  120 eq_binary_exp: eq_binary_exp eq_binary_op cmp_binary_exp •

    "<"   shift, and go to state 180
    "<="  shift, and go to state 181
    ">"   shift, and go to state 182
    ">="  shift, and go to state 183

    $default  reduce using rule 120 (eq_binary_exp)

    cmp_binary_op  go to state 184


State 257

  120 eq_binary_exp: eq_binary_exp • eq_binary_op cmp_binary_exp
  122 and_binary_exp: and_binary_exp "and" eq_binary_exp •

    "=="  shift, and go to state 185
    "!="  shift, and go to state 186

    $default  reduce using rule 122 (and_binary_exp)

    eq_binary_op  go to state 187


State 258

  122 and_binary_exp: and_binary_exp • "and" eq_binary_exp
  124 xor_binary_exp: xor_binary_exp "xor" and_binary_exp •

    "and"  shift, and go to state 188

    $default  reduce using rule 124 (xor_binary_exp)


State 259

  124 xor_binary_exp: xor_binary_exp • "xor" and_binary_exp
  126 or_binary_exp: or_binary_exp "or" xor_binary_exp •

    "xor"  shift, and go to state 189

    $default  reduce using rule 126 (or_binary_exp)


State 260

   92 dot_name_exp: type_spec "::" "TypeId" •
   93             | type_spec "::" "TypeId" • "using" paren_exp

    "using"  shift, and go to state 299

    $default  reduce using rule 92 (dot_name_exp)


State 261

  168 class_exp_class_spec: "typeclass" "(" tid • class_spec ")" "{" type_query_exp_sl0 "}"

    "val_id"     shift, and go to state 10
    "CLS_ID"     shift, and go to state 21
    "typeclass"  shift, and go to state 115

    vid                        go to state 62
    cid                        go to state 116
    mod_prefix                 go to state 117
    class_spec                 go to state 300
    primary_class_spec         go to state 119
    mod_prefix_cid_class_spec  go to state 120
    class_exp_class_spec       go to state 121


State 262

  149 enum_type_spec_field: tid type_spec •

    $default  reduce using rule 149 (enum_type_spec_field)


State 263

  151 enum_type_spec_field_cl: enum_type_spec_field_cl "," • enum_type_spec_field

    "TypeId"  shift, and go to state 20

    tid                   go to state 196
    enum_type_spec_field  go to state 301


State 264

  152 enum_type_spec: "enum" "{" enum_type_spec_field_cl "}" •

    $default  reduce using rule 152 (enum_type_spec)


State 265

  171 vpattern_field: "out" vid • type_spec

    "val_id"  shift, and go to state 10
    "TypeId"  shift, and go to state 20
    "enum"    shift, and go to state 57
    "fn"      shift, and go to state 58
    "["       shift, and go to state 59
    "{"       shift, and go to state 60

    tid               go to state 61
    vid               go to state 62
    mod_prefix        go to state 63
    type_spec         go to state 302
    mod_prefix_tid    go to state 65
    tuple_type_spec   go to state 66
    array_type_spec   go to state 67
    struct_type_spec  go to state 68
    enum_type_spec    go to state 69
    fn_type_spec      go to state 70


State 266

  172 vpattern_field: "inout" vid • type_spec

    "val_id"  shift, and go to state 10
    "TypeId"  shift, and go to state 20
    "enum"    shift, and go to state 57
    "fn"      shift, and go to state 58
    "["       shift, and go to state 59
    "{"       shift, and go to state 60

    tid               go to state 61
    vid               go to state 62
    mod_prefix        go to state 63
    type_spec         go to state 303
    mod_prefix_tid    go to state 65
    tuple_type_spec   go to state 66
    array_type_spec   go to state 67
    struct_type_spec  go to state 68
    enum_type_spec    go to state 69
    fn_type_spec      go to state 70


State 267

  170 vpattern_field: vid type_spec •

    $default  reduce using rule 170 (vpattern_field)


State 268

  184 vpattern_field_cl: vpattern_field_cl "," • vpattern_field

    "val_id"  shift, and go to state 10
    "out"     shift, and go to state 199
    "inout"   shift, and go to state 200

    vid             go to state 202
    vpattern_field  go to state 304


State 269

  180 vpattern: "(" vpattern_field_cl ")" •

    $default  reduce using rule 180 (vpattern)


State 270

  143 array_type_spec: "[" type_spec "*" expr • "]"

    "]"  shift, and go to state 305


State 271

   92 dot_name_exp: type_spec • "::" "TypeId"
   93             | type_spec • "::" "TypeId" "using" paren_exp
  143 array_type_spec: "[" type_spec • "*" expr "]"
  154 targ: type_spec •

    "::"  shift, and go to state 191
    "*"   shift, and go to state 206

    $default  reduce using rule 154 (targ)


State 272

  132 type_spec_cl2: type_spec_cl2 "," type_spec •

    $default  reduce using rule 132 (type_spec_cl2)


State 273

  131 type_spec_cl2: type_spec "," type_spec •

    $default  reduce using rule 131 (type_spec_cl2)


State 274

  147 struct_type_spec_field: vid • type_spec

    "val_id"  shift, and go to state 10
    "TypeId"  shift, and go to state 20
    "enum"    shift, and go to state 57
    "fn"      shift, and go to state 58
    "["       shift, and go to state 59
    "{"       shift, and go to state 60

    tid               go to state 61
    vid               go to state 62
    mod_prefix        go to state 63
    type_spec         go to state 208
    mod_prefix_tid    go to state 65
    tuple_type_spec   go to state 66
    array_type_spec   go to state 67
    struct_type_spec  go to state 68
    enum_type_spec    go to state 69
    fn_type_spec      go to state 70


State 275

  146 struct_type_spec_field_cl: struct_type_spec_field_cl "," struct_type_spec_field •

    $default  reduce using rule 146 (struct_type_spec_field_cl)


State 276

  157 targ_cl: targ_cl "," • targ

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 20
    "enum"                   shift, and go to state 57
    "if"                     shift, and go to state 71
    "fn"                     shift, and go to state 58
    "not"                    shift, and go to state 72
    "42"                     shift, and go to state 73
    "0x2a"                   shift, and go to state 74
    "42u"                    shift, and go to state 75
    "0x2Au"                  shift, and go to state 76
    "4.2"                    shift, and go to state 77
    "\"dq-string-literal\""  shift, and go to state 78
    "'sq-string-literal'"    shift, and go to state 79
    "("                      shift, and go to state 80
    "["                      shift, and go to state 59
    "{"                      shift, and go to state 81
    "+"                      shift, and go to state 82
    "-"                      shift, and go to state 83

    tid               go to state 61
    vid               go to state 84
    floatl            go to state 85
    mod_prefix        go to state 86
    expr              go to state 215
    bracketed_exp     go to state 89
    paren_exp         go to state 90
    vtupleExpr        go to state 91
    vstructExpr       go to state 92
    primary_exp       go to state 93
    int_expr          go to state 94
    stringls          go to state 95
    if_exp            go to state 96
    chain_exp         go to state 97
    postfix_exp       go to state 99
    vcall_exp         go to state 100
    dot_name_exp      go to state 101
    dot_index_exp     go to state 102
    unary_exp         go to state 103
    unary_op          go to state 104
    binary_exp        go to state 105
    mul_binary_exp    go to state 106
    add_binary_exp    go to state 107
    cmp_binary_exp    go to state 108
    eq_binary_exp     go to state 109
    and_binary_exp    go to state 110
    xor_binary_exp    go to state 111
    or_binary_exp     go to state 112
    type_spec         go to state 216
    mod_prefix_tid    go to state 65
    tuple_type_spec   go to state 66
    array_type_spec   go to state 67
    struct_type_spec  go to state 68
    enum_type_spec    go to state 69
    fn_type_spec      go to state 70
    targ              go to state 306


State 277

   42 mod_prefix: vid "[" targ_cl "]" • "::"

    "::"  shift, and go to state 307


State 278

   44 mod_prefix: mod_prefix vid "[" targ_cl • "]" "::"
  157 targ_cl: targ_cl • "," targ

    ","  shift, and go to state 276
    "]"  shift, and go to state 308


State 279

   77 if_exp: "if" bracketed_exp bracketed_exp "else" • primary_exp

    "val_id"                 shift, and go to state 10
    "if"                     shift, and go to state 71
    "42"                     shift, and go to state 73
    "0x2a"                   shift, and go to state 74
    "42u"                    shift, and go to state 75
    "0x2Au"                  shift, and go to state 76
    "4.2"                    shift, and go to state 77
    "\"dq-string-literal\""  shift, and go to state 78
    "'sq-string-literal'"    shift, and go to state 79
    "("                      shift, and go to state 80
    "{"                      shift, and go to state 143

    vid            go to state 84
    floatl         go to state 85
    mod_prefix     go to state 309
    bracketed_exp  go to state 89
    paren_exp      go to state 90
    vtupleExpr     go to state 91
    vstructExpr    go to state 92
    primary_exp    go to state 310
    int_expr       go to state 94
    stringls       go to state 95
    if_exp         go to state 96
    chain_exp      go to state 97


State 280

   58 vtupleExpr: "(" expr "," ")" •

    $default  reduce using rule 58 (vtupleExpr)


State 281

   48 expr_cl2: expr "," expr •

    $default  reduce using rule 48 (expr_cl2)


State 282

   49 expr_cl2: expr_cl2 "," expr •

    $default  reduce using rule 49 (expr_cl2)


State 283

  185 lpattern_field_cl: lpattern_field •

    $default  reduce using rule 185 (lpattern_field_cl)


State 284

  177 destructured_lpattern: "{" lpattern_field_cl • "}"
  186 lpattern_field_cl: lpattern_field_cl • "," lpattern_field

    ","  shift, and go to state 311
    "}"  shift, and go to state 312


State 285

  173 lpattern_field: vid type_spec •

    $default  reduce using rule 173 (lpattern_field)


State 286

   30 const_stmt: "const" lpattern "=" • expr

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 20
    "enum"                   shift, and go to state 57
    "if"                     shift, and go to state 71
    "fn"                     shift, and go to state 58
    "not"                    shift, and go to state 72
    "42"                     shift, and go to state 73
    "0x2a"                   shift, and go to state 74
    "42u"                    shift, and go to state 75
    "0x2Au"                  shift, and go to state 76
    "4.2"                    shift, and go to state 77
    "\"dq-string-literal\""  shift, and go to state 78
    "'sq-string-literal'"    shift, and go to state 79
    "("                      shift, and go to state 80
    "["                      shift, and go to state 59
    "{"                      shift, and go to state 81
    "+"                      shift, and go to state 82
    "-"                      shift, and go to state 83

    tid               go to state 61
    vid               go to state 84
    floatl            go to state 85
    mod_prefix        go to state 86
    expr              go to state 313
    bracketed_exp     go to state 89
    paren_exp         go to state 90
    vtupleExpr        go to state 91
    vstructExpr       go to state 92
    primary_exp       go to state 93
    int_expr          go to state 94
    stringls          go to state 95
    if_exp            go to state 96
    chain_exp         go to state 97
    postfix_exp       go to state 99
    vcall_exp         go to state 100
    dot_name_exp      go to state 101
    dot_index_exp     go to state 102
    unary_exp         go to state 103
    unary_op          go to state 104
    binary_exp        go to state 105
    mul_binary_exp    go to state 106
    add_binary_exp    go to state 107
    cmp_binary_exp    go to state 108
    eq_binary_exp     go to state 109
    and_binary_exp    go to state 110
    xor_binary_exp    go to state 111
    or_binary_exp     go to state 112
    type_spec         go to state 113
    mod_prefix_tid    go to state 65
    tuple_type_spec   go to state 66
    array_type_spec   go to state 67
    struct_type_spec  go to state 68
    enum_type_spec    go to state 69
    fn_type_spec      go to state 70


State 287

   31 val_stmt: "val" lpattern "=" • expr

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 20
    "enum"                   shift, and go to state 57
    "if"                     shift, and go to state 71
    "fn"                     shift, and go to state 58
    "not"                    shift, and go to state 72
    "42"                     shift, and go to state 73
    "0x2a"                   shift, and go to state 74
    "42u"                    shift, and go to state 75
    "0x2Au"                  shift, and go to state 76
    "4.2"                    shift, and go to state 77
    "\"dq-string-literal\""  shift, and go to state 78
    "'sq-string-literal'"    shift, and go to state 79
    "("                      shift, and go to state 80
    "["                      shift, and go to state 59
    "{"                      shift, and go to state 81
    "+"                      shift, and go to state 82
    "-"                      shift, and go to state 83

    tid               go to state 61
    vid               go to state 84
    floatl            go to state 85
    mod_prefix        go to state 86
    expr              go to state 314
    bracketed_exp     go to state 89
    paren_exp         go to state 90
    vtupleExpr        go to state 91
    vstructExpr       go to state 92
    primary_exp       go to state 93
    int_expr          go to state 94
    stringls          go to state 95
    if_exp            go to state 96
    chain_exp         go to state 97
    postfix_exp       go to state 99
    vcall_exp         go to state 100
    dot_name_exp      go to state 101
    dot_index_exp     go to state 102
    unary_exp         go to state 103
    unary_op          go to state 104
    binary_exp        go to state 105
    mul_binary_exp    go to state 106
    add_binary_exp    go to state 107
    cmp_binary_exp    go to state 108
    eq_binary_exp     go to state 109
    and_binary_exp    go to state 110
    xor_binary_exp    go to state 111
    or_binary_exp     go to state 112
    type_spec         go to state 113
    mod_prefix_tid    go to state 65
    tuple_type_spec   go to state 66
    array_type_spec   go to state 67
    struct_type_spec  go to state 68
    enum_type_spec    go to state 69
    fn_type_spec      go to state 70


State 288

   32 var_stmt: "var" lpattern "=" • expr

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 20
    "enum"                   shift, and go to state 57
    "if"                     shift, and go to state 71
    "fn"                     shift, and go to state 58
    "not"                    shift, and go to state 72
    "42"                     shift, and go to state 73
    "0x2a"                   shift, and go to state 74
    "42u"                    shift, and go to state 75
    "0x2Au"                  shift, and go to state 76
    "4.2"                    shift, and go to state 77
    "\"dq-string-literal\""  shift, and go to state 78
    "'sq-string-literal'"    shift, and go to state 79
    "("                      shift, and go to state 80
    "["                      shift, and go to state 59
    "{"                      shift, and go to state 81
    "+"                      shift, and go to state 82
    "-"                      shift, and go to state 83

    tid               go to state 61
    vid               go to state 84
    floatl            go to state 85
    mod_prefix        go to state 86
    expr              go to state 315
    bracketed_exp     go to state 89
    paren_exp         go to state 90
    vtupleExpr        go to state 91
    vstructExpr       go to state 92
    primary_exp       go to state 93
    int_expr          go to state 94
    stringls          go to state 95
    if_exp            go to state 96
    chain_exp         go to state 97
    postfix_exp       go to state 99
    vcall_exp         go to state 100
    dot_name_exp      go to state 101
    dot_index_exp     go to state 102
    unary_exp         go to state 103
    unary_op          go to state 104
    binary_exp        go to state 105
    mul_binary_exp    go to state 106
    add_binary_exp    go to state 107
    cmp_binary_exp    go to state 108
    eq_binary_exp     go to state 109
    and_binary_exp    go to state 110
    xor_binary_exp    go to state 111
    or_binary_exp     go to state 112
    type_spec         go to state 113
    mod_prefix_tid    go to state 65
    tuple_type_spec   go to state 66
    array_type_spec   go to state 67
    struct_type_spec  go to state 68
    enum_type_spec    go to state 69
    fn_type_spec      go to state 70


State 289

   33 set_stmt: "set" expr "=" • expr

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 20
    "enum"                   shift, and go to state 57
    "if"                     shift, and go to state 71
    "fn"                     shift, and go to state 58
    "not"                    shift, and go to state 72
    "42"                     shift, and go to state 73
    "0x2a"                   shift, and go to state 74
    "42u"                    shift, and go to state 75
    "0x2Au"                  shift, and go to state 76
    "4.2"                    shift, and go to state 77
    "\"dq-string-literal\""  shift, and go to state 78
    "'sq-string-literal'"    shift, and go to state 79
    "("                      shift, and go to state 80
    "["                      shift, and go to state 59
    "{"                      shift, and go to state 81
    "+"                      shift, and go to state 82
    "-"                      shift, and go to state 83

    tid               go to state 61
    vid               go to state 84
    floatl            go to state 85
    mod_prefix        go to state 86
    expr              go to state 316
    bracketed_exp     go to state 89
    paren_exp         go to state 90
    vtupleExpr        go to state 91
    vstructExpr       go to state 92
    primary_exp       go to state 93
    int_expr          go to state 94
    stringls          go to state 95
    if_exp            go to state 96
    chain_exp         go to state 97
    postfix_exp       go to state 99
    vcall_exp         go to state 100
    dot_name_exp      go to state 101
    dot_index_exp     go to state 102
    unary_exp         go to state 103
    unary_op          go to state 104
    binary_exp        go to state 105
    mul_binary_exp    go to state 106
    add_binary_exp    go to state 107
    cmp_binary_exp    go to state 108
    eq_binary_exp     go to state 109
    and_binary_exp    go to state 110
    xor_binary_exp    go to state 111
    or_binary_exp     go to state 112
    type_spec         go to state 113
    mod_prefix_tid    go to state 65
    tuple_type_spec   go to state 66
    array_type_spec   go to state 67
    struct_type_spec  go to state 68
    enum_type_spec    go to state 69
    fn_type_spec      go to state 70


State 290

  169 struct_exp_field: vid "=" expr •

    $default  reduce using rule 169 (struct_exp_field)


State 291

   83 chain_prefix: chain_prefix chain_prefix_stmt ";" •

    $default  reduce using rule 83 (chain_prefix)


State 292

   81 chain_exp: "{" chain_prefix long_exp "}" •

    $default  reduce using rule 81 (chain_exp)


State 293

  169 struct_exp_field: vid • "=" expr

    "="  shift, and go to state 237


State 294

  190 struct_exp_field_cl: struct_exp_field_cl "," struct_exp_field •

    $default  reduce using rule 190 (struct_exp_field_cl)


State 295

  159 varg: "out" expr •

    $default  reduce using rule 159 (varg)


State 296

  160 varg: "inout" expr •

    $default  reduce using rule 160 (varg)


State 297

  162 varg_cl: varg_cl "," • varg

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 20
    "enum"                   shift, and go to state 57
    "if"                     shift, and go to state 71
    "fn"                     shift, and go to state 58
    "not"                    shift, and go to state 72
    "out"                    shift, and go to state 247
    "inout"                  shift, and go to state 248
    "42"                     shift, and go to state 73
    "0x2a"                   shift, and go to state 74
    "42u"                    shift, and go to state 75
    "0x2Au"                  shift, and go to state 76
    "4.2"                    shift, and go to state 77
    "\"dq-string-literal\""  shift, and go to state 78
    "'sq-string-literal'"    shift, and go to state 79
    "("                      shift, and go to state 80
    "["                      shift, and go to state 59
    "{"                      shift, and go to state 81
    "+"                      shift, and go to state 82
    "-"                      shift, and go to state 83

    tid               go to state 61
    vid               go to state 84
    floatl            go to state 85
    mod_prefix        go to state 86
    expr              go to state 250
    bracketed_exp     go to state 89
    paren_exp         go to state 90
    vtupleExpr        go to state 91
    vstructExpr       go to state 92
    primary_exp       go to state 93
    int_expr          go to state 94
    stringls          go to state 95
    if_exp            go to state 96
    chain_exp         go to state 97
    postfix_exp       go to state 99
    vcall_exp         go to state 100
    dot_name_exp      go to state 101
    dot_index_exp     go to state 102
    unary_exp         go to state 103
    unary_op          go to state 104
    binary_exp        go to state 105
    mul_binary_exp    go to state 106
    add_binary_exp    go to state 107
    cmp_binary_exp    go to state 108
    eq_binary_exp     go to state 109
    and_binary_exp    go to state 110
    xor_binary_exp    go to state 111
    or_binary_exp     go to state 112
    type_spec         go to state 113
    mod_prefix_tid    go to state 65
    tuple_type_spec   go to state 66
    array_type_spec   go to state 67
    struct_type_spec  go to state 68
    enum_type_spec    go to state 69
    fn_type_spec      go to state 70
    varg              go to state 317


State 298

   90 vcall_exp: postfix_exp "(" varg_cl ")" •

    $default  reduce using rule 90 (vcall_exp)


State 299

   93 dot_name_exp: type_spec "::" "TypeId" "using" • paren_exp

    "("  shift, and go to state 318

    paren_exp  go to state 319


State 300

  168 class_exp_class_spec: "typeclass" "(" tid class_spec • ")" "{" type_query_exp_sl0 "}"

    ")"  shift, and go to state 320


State 301

  151 enum_type_spec_field_cl: enum_type_spec_field_cl "," enum_type_spec_field •

    $default  reduce using rule 151 (enum_type_spec_field_cl)


State 302

  171 vpattern_field: "out" vid type_spec •

    $default  reduce using rule 171 (vpattern_field)


State 303

  172 vpattern_field: "inout" vid type_spec •

    $default  reduce using rule 172 (vpattern_field)


State 304

  184 vpattern_field_cl: vpattern_field_cl "," vpattern_field •

    $default  reduce using rule 184 (vpattern_field_cl)


State 305

  143 array_type_spec: "[" type_spec "*" expr "]" •

    $default  reduce using rule 143 (array_type_spec)


State 306

  157 targ_cl: targ_cl "," targ •

    $default  reduce using rule 157 (targ_cl)


State 307

   42 mod_prefix: vid "[" targ_cl "]" "::" •

    $default  reduce using rule 42 (mod_prefix)


State 308

   44 mod_prefix: mod_prefix vid "[" targ_cl "]" • "::"

    "::"  shift, and go to state 321


State 309

   43 mod_prefix: mod_prefix • vid "::"
   44           | mod_prefix • vid "[" targ_cl "]" "::"
   67 primary_exp: mod_prefix • vid

    "val_id"  shift, and go to state 10

    vid  go to state 167


State 310

   77 if_exp: "if" bracketed_exp bracketed_exp "else" primary_exp •

    $default  reduce using rule 77 (if_exp)


State 311

  186 lpattern_field_cl: lpattern_field_cl "," • lpattern_field

    "val_id"  shift, and go to state 10

    vid             go to state 228
    lpattern_field  go to state 322


State 312

  177 destructured_lpattern: "{" lpattern_field_cl "}" •

    $default  reduce using rule 177 (destructured_lpattern)


State 313

   30 const_stmt: "const" lpattern "=" expr •

    $default  reduce using rule 30 (const_stmt)


State 314

   31 val_stmt: "val" lpattern "=" expr •

    $default  reduce using rule 31 (val_stmt)


State 315

   32 var_stmt: "var" lpattern "=" expr •

    $default  reduce using rule 32 (var_stmt)


State 316

   33 set_stmt: "set" expr "=" expr •

    $default  reduce using rule 33 (set_stmt)


State 317

  162 varg_cl: varg_cl "," varg •

    $default  reduce using rule 162 (varg_cl)


State 318

   56 paren_exp: "(" • long_exp ")"

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 20
    "enum"                   shift, and go to state 57
    "if"                     shift, and go to state 71
    "fn"                     shift, and go to state 58
    "not"                    shift, and go to state 72
    "42"                     shift, and go to state 73
    "0x2a"                   shift, and go to state 74
    "42u"                    shift, and go to state 75
    "0x2Au"                  shift, and go to state 76
    "4.2"                    shift, and go to state 77
    "\"dq-string-literal\""  shift, and go to state 78
    "'sq-string-literal'"    shift, and go to state 79
    "("                      shift, and go to state 80
    "["                      shift, and go to state 59
    "{"                      shift, and go to state 81
    "+"                      shift, and go to state 82
    "-"                      shift, and go to state 83

    tid               go to state 61
    vid               go to state 84
    floatl            go to state 85
    mod_prefix        go to state 86
    expr              go to state 87
    long_exp          go to state 147
    bracketed_exp     go to state 89
    paren_exp         go to state 90
    vtupleExpr        go to state 91
    vstructExpr       go to state 92
    primary_exp       go to state 93
    int_expr          go to state 94
    stringls          go to state 95
    if_exp            go to state 96
    chain_exp         go to state 97
    lambda_exp        go to state 98
    postfix_exp       go to state 99
    vcall_exp         go to state 100
    dot_name_exp      go to state 101
    dot_index_exp     go to state 102
    unary_exp         go to state 103
    unary_op          go to state 104
    binary_exp        go to state 105
    mul_binary_exp    go to state 106
    add_binary_exp    go to state 107
    cmp_binary_exp    go to state 108
    eq_binary_exp     go to state 109
    and_binary_exp    go to state 110
    xor_binary_exp    go to state 111
    or_binary_exp     go to state 112
    type_spec         go to state 113
    mod_prefix_tid    go to state 65
    tuple_type_spec   go to state 66
    array_type_spec   go to state 67
    struct_type_spec  go to state 68
    enum_type_spec    go to state 69
    fn_type_spec      go to state 114


State 319

   93 dot_name_exp: type_spec "::" "TypeId" "using" paren_exp •

    $default  reduce using rule 93 (dot_name_exp)


State 320

  168 class_exp_class_spec: "typeclass" "(" tid class_spec ")" • "{" type_query_exp_sl0 "}"

    "{"  shift, and go to state 323


State 321

   44 mod_prefix: mod_prefix vid "[" targ_cl "]" "::" •

    $default  reduce using rule 44 (mod_prefix)


State 322

  186 lpattern_field_cl: lpattern_field_cl "," lpattern_field •

    $default  reduce using rule 186 (lpattern_field_cl)


State 323

  168 class_exp_class_spec: "typeclass" "(" tid class_spec ")" "{" • type_query_exp_sl0 "}"

    $default  reduce using rule 50 (type_query_exp_sl0)

    type_query_exp_sl0  go to state 324


State 324

   51 type_query_exp_sl0: type_query_exp_sl0 • type_query_exp ";"
  168 class_exp_class_spec: "typeclass" "(" tid class_spec ")" "{" type_query_exp_sl0 • "}"

    "val_id"  shift, and go to state 10
    "TypeId"  shift, and go to state 20
    "enum"    shift, and go to state 57
    "fn"      shift, and go to state 58
    "["       shift, and go to state 59
    "{"       shift, and go to state 60
    "}"       shift, and go to state 325

    tid               go to state 61
    vid               go to state 62
    mod_prefix        go to state 63
    type_query_exp    go to state 326
    type_spec         go to state 327
    mod_prefix_tid    go to state 65
    tuple_type_spec   go to state 66
    array_type_spec   go to state 67
    struct_type_spec  go to state 68
    enum_type_spec    go to state 69
    fn_type_spec      go to state 70


State 325

  168 class_exp_class_spec: "typeclass" "(" tid class_spec ")" "{" type_query_exp_sl0 "}" •

    $default  reduce using rule 168 (class_exp_class_spec)


State 326

   51 type_query_exp_sl0: type_query_exp_sl0 type_query_exp • ";"

    ";"  shift, and go to state 328


State 327

  127 type_query_exp: type_spec • type_query_op type_spec

    "=="  shift, and go to state 329
    ":<"  shift, and go to state 330
    ">:"  shift, and go to state 331

    type_query_op  go to state 332


State 328

   51 type_query_exp_sl0: type_query_exp_sl0 type_query_exp ";" •

    $default  reduce using rule 51 (type_query_exp_sl0)


State 329

  130 type_query_op: "==" •

    $default  reduce using rule 130 (type_query_op)


State 330

  128 type_query_op: ":<" •

    $default  reduce using rule 128 (type_query_op)


State 331

  129 type_query_op: ">:" •

    $default  reduce using rule 129 (type_query_op)


State 332

  127 type_query_exp: type_spec type_query_op • type_spec

    "val_id"  shift, and go to state 10
    "TypeId"  shift, and go to state 20
    "enum"    shift, and go to state 57
    "fn"      shift, and go to state 58
    "["       shift, and go to state 59
    "{"       shift, and go to state 60

    tid               go to state 61
    vid               go to state 62
    mod_prefix        go to state 63
    type_spec         go to state 333
    mod_prefix_tid    go to state 65
    tuple_type_spec   go to state 66
    array_type_spec   go to state 67
    struct_type_spec  go to state 68
    enum_type_spec    go to state 69
    fn_type_spec      go to state 70


State 333

  127 type_query_exp: type_spec type_query_op type_spec •

    $default  reduce using rule 127 (type_query_exp)
