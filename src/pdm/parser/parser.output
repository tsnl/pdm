Terminals unused in grammar

    "__42__"
    "struct"
    "match"
    "with"
    "import"
    "extern"
    "func"
    "lambda"
    "^"
    "&"
    "!"
    "|"
    "EOS"
    "<null>"


Grammar

    0 $accept: script $end

    1 script: script_header script_field_sl

    2 script_header: %empty
    3              | script_header script_header_stmt ";"

    4 script_header_stmt: import_stmt

    5 script_field: "mod" vid mod_exp

    6 script_field_sl: script_field ";"
    7                | script_field_sl script_field ";"

    8 mod_exp: "{" mod_field_sl "}"
    9        | tpattern "{" mod_field_sl "}"

   10 mod_field_sl: %empty
   11             | mod_field_sl mod_field ";"

   12 mod_field: vid "=" long_exp
   13          | tid "=" long_type_spec
   14          | cid "=" class_exp_class_spec
   15          | "mod" vid mod_exp

   16 import_stmt: "mod" vid "from" stringl "as" stringl

   17 chain_prefix_stmt: const_stmt
   18                  | val_stmt
   19                  | var_stmt
   20                  | set_stmt
   21                  | discard_stmt

   22 const_stmt: "const" lpattern "=" expr

   23 val_stmt: "val" lpattern "=" expr

   24 var_stmt: "var" lpattern "=" expr

   25 set_stmt: "set" expr "=" expr

   26 discard_stmt: "discard" expr

   27 tid: "TypeId"

   28 vid: "val_id"

   29 cid: "CLS_ID"

   30 floatl: "4.2"

   31 stringl: "'sq-string-literal'"
   32        | "\"dq-string-literal\""

   33 mod_prefix: vid "::"
   34           | vid "[" targ_cl "]" "::"
   35           | mod_prefix vid "::"
   36           | mod_prefix vid "[" targ_cl "]" "::"

   37 expr: binary_exp

   38 long_exp: expr
   39         | lambda_exp

   40 expr_cl2: expr "," expr
   41         | expr_cl2 "," expr

   42 type_query_exp_sl: type_query_exp ";"
   43                  | type_query_exp_sl type_query_exp ";"

   44 bracketed_exp: paren_exp
   45              | vtupleExpr
   46              | vstructExpr
   47              | chain_exp

   48 paren_exp: "(" long_exp ")"

   49 vtupleExpr: "(" ")"
   50           | "(" expr "," ")"
   51           | "(" expr_cl2 ")"

   52 vstructExpr: "{" struct_exp_field_cl "}"

   53 primary_exp: bracketed_exp
   54            | vid
   55            | int_expr
   56            | floatl
   57            | stringls
   58            | if_exp
   59            | mod_prefix vid

   60 int_expr: "42"
   61         | "0x2a"
   62         | "42u"
   63         | "0x2Au"

   64 stringls: "'sq-string-literal'"
   65         | "\"dq-string-literal\""
   66         | stringls "'sq-string-literal'"
   67         | stringls "\"dq-string-literal\""

   68 if_exp: "if" bracketed_exp "then" bracketed_exp
   69       | "if" bracketed_exp "then" bracketed_exp "else" primary_exp

   70 chain_exp: "{" long_exp "}"
   71          | "{" chain_prefix "}"
   72          | "{" chain_prefix long_exp "}"

   73 chain_prefix: chain_prefix_stmt ";"
   74             | chain_prefix chain_prefix_stmt ";"

   75 lambda_exp: fn_type_spec bracketed_exp

   76 postfix_exp: primary_exp
   77            | vcall_exp
   78            | dot_name_exp
   79            | dot_index_exp

   80 vcall_exp: postfix_exp "(" ")"
   81          | postfix_exp "(" varg_cl ")"

   82 dot_name_exp: postfix_exp "." "val_id"
   83             | type_spec "::" "TypeId"
   84             | type_spec "::" "TypeId" "using" paren_exp

   85 dot_index_exp: postfix_exp "." int_expr
   86              | postfix_exp "." bracketed_exp

   87 unary_exp: postfix_exp
   88          | unary_op unary_exp

   89 unary_op: "+"
   90         | "-"
   91         | "not"

   92 binary_exp: or_binary_exp

   93 mul_binary_op: "*"
   94              | "/"
   95              | "%"

   96 mul_binary_exp: unary_exp
   97               | mul_binary_exp mul_binary_op unary_exp

   98 add_binary_op: "+"
   99              | "-"

  100 add_binary_exp: mul_binary_exp
  101               | add_binary_exp add_binary_op mul_binary_exp

  102 cmp_binary_op: "<"
  103              | "<="
  104              | ">"
  105              | ">="

  106 cmp_binary_exp: add_binary_exp
  107               | cmp_binary_exp cmp_binary_op add_binary_exp

  108 eq_binary_op: "=="
  109             | "!="

  110 eq_binary_exp: cmp_binary_exp
  111              | eq_binary_exp eq_binary_op cmp_binary_exp

  112 and_binary_exp: eq_binary_exp
  113               | and_binary_exp "and" eq_binary_exp

  114 xor_binary_exp: and_binary_exp
  115               | xor_binary_exp "xor" and_binary_exp

  116 or_binary_exp: xor_binary_exp
  117              | or_binary_exp "or" xor_binary_exp

  118 type_query_exp: type_spec type_query_op type_spec

  119 type_query_op: ":<"
  120              | ">:"
  121              | "=="

  122 type_spec_cl2: type_spec "," type_spec
  123              | type_spec_cl2 "," type_spec

  124 type_spec: tid
  125          | mod_prefix_tid
  126          | tuple_type_spec
  127          | array_type_spec

  128 long_type_spec: type_spec
  129               | struct_type_spec
  130               | enum_type_spec
  131               | fn_type_spec

  132 mod_prefix_tid: mod_prefix tid

  133 tuple_type_spec: "{" type_spec "}"
  134                | "{" type_spec_cl2 "}"

  135 array_type_spec: "[" type_spec "/" expr "]"

  136 struct_type_spec: "{" struct_type_spec_field_cl "}"

  137 struct_type_spec_field_cl: struct_type_spec_field
  138                          | struct_type_spec_field_cl "," struct_type_spec_field

  139 struct_type_spec_field: vid long_type_spec

  140 enum_type_spec_field: tid
  141                     | tid long_type_spec

  142 enum_type_spec_field_cl: enum_type_spec_field
  143                        | enum_type_spec_field_cl "," enum_type_spec_field

  144 enum_type_spec: "enum" "{" enum_type_spec_field_cl "}"

  145 fn_type_spec: vpattern "->" type_spec

  146 targ: type_spec
  147     | expr

  148 targ_cl: targ
  149        | targ_cl "," targ

  150 varg: expr
  151     | "out" expr
  152     | "inout" expr

  153 varg_cl: varg
  154        | varg_cl "," varg

  155 class_spec: primary_class_spec

  156 primary_class_spec: cid
  157                   | mod_prefix_cid_class_spec
  158                   | class_exp_class_spec

  159 mod_prefix_cid_class_spec: mod_prefix cid

  160 class_exp_class_spec: "cls" "(" tid class_spec ")" "{" type_query_exp_sl "}"

  161 struct_exp_field: vid ":" expr

  162 vpattern_field: vid type_spec
  163               | "out" vid type_spec
  164               | "inout" vid type_spec

  165 lpattern_field: vid type_spec
  166               | vid

  167 tpattern_field: vid type_spec
  168               | tid class_spec

  169 destructured_lpattern: "{" lpattern_field_cl "}"

  170 lpattern: lpattern_field
  171         | destructured_lpattern

  172 vpattern: "(" vpattern_field_cl ")"
  173         | "(" ")"

  174 tpattern: "[" tpattern_field_cl1 "]"

  175 vpattern_field_cl: vpattern_field
  176                  | vpattern_field_cl "," vpattern_field

  177 lpattern_field_cl: lpattern_field
  178                  | lpattern_field_cl "," lpattern_field

  179 tpattern_field_cl1: tpattern_field
  180                   | tpattern_field_cl1 "," tpattern_field

  181 struct_exp_field_cl: struct_exp_field
  182                    | struct_exp_field_cl "," struct_exp_field


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    "val_id" <TokenInfo> (258) 28 82
    "TypeId" <TokenInfo> (259) 27 83 84
    "CLS_ID" <TokenInfo> (260) 29
    "__42__" <TokenInfo> (261)
    "using" (262) 84
    "mod" (263) 5 15 16
    "struct" (264)
    "enum" (265) 144
    "cls" (266) 160
    "if" (267) 68 69
    "then" (268) 68 69
    "else" (269) 69
    "match" (270)
    "with" (271)
    "import" (272)
    "extern" (273)
    "from" (274) 16
    "const" (275) 22
    "val" (276) 23
    "var" (277) 24
    "set" (278) 25
    "func" (279)
    "lambda" (280)
    "and" (281) 113
    "xor" (282) 115
    "or" (283) 117
    "not" (284) 91
    "out" (285) 151 163
    "inout" (286) 152 164
    "discard" (287) 26
    "as" (288) 16
    "42" <TokenInfo> (289) 60
    "0x2a" <TokenInfo> (290) 61
    "42u" <TokenInfo> (291) 62
    "0x2Au" <TokenInfo> (292) 63
    "4.2" <TokenInfo> (293) 30
    "\"dq-string-literal\"" <TokenInfo> (294) 32 65 67
    "'sq-string-literal'" <TokenInfo> (295) 31 64 66
    "." (296) 82 85 86
    ":" (297) 161
    "," (298) 40 41 50 122 123 138 143 149 154 176 178 180 182
    ";" (299) 3 6 7 11 42 43 73 74
    "::" (300) 33 34 35 36 83 84
    "(" (301) 48 49 50 51 80 81 160 172 173
    ")" (302) 48 49 50 51 80 81 160 172 173
    "[" (303) 34 36 135 174
    "]" (304) 34 36 135 174
    "{" (305) 8 9 52 70 71 72 133 134 136 144 160 169
    "}" (306) 8 9 52 70 71 72 133 134 136 144 160 169
    "->" (307) 145
    "*" (308) 93
    "/" (309) 94 135
    "%" (310) 95
    "+" (311) 89 98
    "-" (312) 90 99
    "<" (313) 102
    "<=" (314) 103
    ">" (315) 104
    ">=" (316) 105
    "=" (317) 12 13 14 22 23 24 25
    "==" (318) 108 121
    "!=" (319) 109
    "^" (320)
    "&" (321)
    "!" (322)
    "|" (323)
    "EOS" (324)
    ":<" (325) 119
    ">:" (326) 120
    "<null>" (327)


Nonterminals, with rules where they appear

    $accept (73)
        on left: 0
    script <pdm::ast::Script*> (74)
        on left: 1
        on right: 0
    script_header <std::vector<pdm::ast::HeaderStmt*>> (75)
        on left: 2 3
        on right: 1 3
    script_header_stmt <pdm::ast::HeaderStmt*> (76)
        on left: 4
        on right: 3
    script_field <pdm::ast::Script::Field*> (77)
        on left: 5
        on right: 6 7
    script_field_sl <std::vector<pdm::ast::Script::Field*>> (78)
        on left: 6 7
        on right: 1 7
    mod_exp <pdm::ast::ModExp*> (79)
        on left: 8 9
        on right: 5 15
    mod_field_sl <std::vector<pdm::ast::ModExp::Field*>> (80)
        on left: 10 11
        on right: 8 9 11
    mod_field <pdm::ast::ModExp::Field*> (81)
        on left: 12 13 14 15
        on right: 11
    import_stmt <pdm::ast::HeaderStmt*> (82)
        on left: 16
        on right: 4
    chain_prefix_stmt <pdm::ast::Stmt*> (83)
        on left: 17 18 19 20 21
        on right: 73 74
    const_stmt <pdm::ast::Stmt*> (84)
        on left: 22
        on right: 17
    val_stmt <pdm::ast::Stmt*> (85)
        on left: 23
        on right: 18
    var_stmt <pdm::ast::Stmt*> (86)
        on left: 24
        on right: 19
    set_stmt <pdm::ast::Stmt*> (87)
        on left: 25
        on right: 20
    discard_stmt <pdm::ast::Stmt*> (88)
        on left: 26
        on right: 21
    tid <TokenInfo> (89)
        on left: 27
        on right: 13 124 132 140 141 160 168
    vid <TokenInfo> (90)
        on left: 28
        on right: 5 12 15 16 33 34 35 36 54 59 139 161 162 163 164 165 166 167
    cid <TokenInfo> (91)
        on left: 29
        on right: 14 156 159
    floatl <TokenInfo> (92)
        on left: 30
        on right: 56
    stringl <TokenInfo> (93)
        on left: 31 32
        on right: 16
    mod_prefix <pdm::ast::ModAddress*> (94)
        on left: 33 34 35 36
        on right: 35 36 59 132 159
    expr <pdm::ast::Exp*> (95)
        on left: 37
        on right: 22 23 24 25 26 38 40 41 50 135 147 150 151 152 161
    long_exp <pdm::ast::Exp*> (96)
        on left: 38 39
        on right: 12 48 70 72
    expr_cl2 <std::vector<pdm::ast::Exp*>> (97)
        on left: 40 41
        on right: 41 51
    type_query_exp_sl <std::vector<pdm::ast::TypeQueryExp*>> (98)
        on left: 42 43
        on right: 43 160
    bracketed_exp <pdm::ast::Exp*> (99)
        on left: 44 45 46 47
        on right: 53 68 69 75 86
    paren_exp <pdm::ast::Exp*> (100)
        on left: 48
        on right: 44 84
    vtupleExpr <pdm::ast::Exp*> (101)
        on left: 49 50 51
        on right: 45
    vstructExpr <pdm::ast::Exp*> (102)
        on left: 52
        on right: 46
    primary_exp <pdm::ast::Exp*> (103)
        on left: 53 54 55 56 57 58 59
        on right: 69 76
    int_expr <pdm::ast::Exp*> (104)
        on left: 60 61 62 63
        on right: 55 85
    stringls <std::vector<pdm::ast::StringExp::Piece>> (105)
        on left: 64 65 66 67
        on right: 57 66 67
    if_exp <pdm::ast::Exp*> (106)
        on left: 68 69
        on right: 58
    chain_exp <pdm::ast::Exp*> (107)
        on left: 70 71 72
        on right: 47
    chain_prefix <std::vector<pdm::ast::Stmt*>> (108)
        on left: 73 74
        on right: 71 72 74
    lambda_exp <pdm::ast::Exp*> (109)
        on left: 75
        on right: 39
    postfix_exp <pdm::ast::Exp*> (110)
        on left: 76 77 78 79
        on right: 80 81 82 85 86 87
    vcall_exp <pdm::ast::Exp*> (111)
        on left: 80 81
        on right: 77
    dot_name_exp <pdm::ast::Exp*> (112)
        on left: 82 83 84
        on right: 78
    dot_index_exp <pdm::ast::Exp*> (113)
        on left: 85 86
        on right: 79
    unary_exp <pdm::ast::Exp*> (114)
        on left: 87 88
        on right: 88 96 97
    unary_op <pdm::ast::UnaryOperator> (115)
        on left: 89 90 91
        on right: 88
    binary_exp <pdm::ast::Exp*> (116)
        on left: 92
        on right: 37
    mul_binary_op <pdm::ast::BinaryOperator> (117)
        on left: 93 94 95
        on right: 97
    mul_binary_exp <pdm::ast::Exp*> (118)
        on left: 96 97
        on right: 97 100 101
    add_binary_op <pdm::ast::BinaryOperator> (119)
        on left: 98 99
        on right: 101
    add_binary_exp <pdm::ast::Exp*> (120)
        on left: 100 101
        on right: 101 106 107
    cmp_binary_op <pdm::ast::BinaryOperator> (121)
        on left: 102 103 104 105
        on right: 107
    cmp_binary_exp <pdm::ast::Exp*> (122)
        on left: 106 107
        on right: 107 110 111
    eq_binary_op <pdm::ast::BinaryOperator> (123)
        on left: 108 109
        on right: 111
    eq_binary_exp <pdm::ast::Exp*> (124)
        on left: 110 111
        on right: 111 112 113
    and_binary_exp <pdm::ast::Exp*> (125)
        on left: 112 113
        on right: 113 114 115
    xor_binary_exp <pdm::ast::Exp*> (126)
        on left: 114 115
        on right: 115 116 117
    or_binary_exp <pdm::ast::Exp*> (127)
        on left: 116 117
        on right: 92 117
    type_query_exp <pdm::ast::TypeQueryExp*> (128)
        on left: 118
        on right: 42 43
    type_query_op <pdm::ast::TypeQueryKind> (129)
        on left: 119 120 121
        on right: 118
    type_spec_cl2 <std::vector<pdm::ast::TypeSpec*>> (130)
        on left: 122 123
        on right: 123 134
    type_spec <pdm::ast::TypeSpec*> (131)
        on left: 124 125 126 127
        on right: 83 84 118 122 123 128 133 135 145 146 162 163 164 165 167
    long_type_spec <pdm::ast::TypeSpec*> (132)
        on left: 128 129 130 131
        on right: 13 139 141
    mod_prefix_tid <pdm::ast::TypeSpec*> (133)
        on left: 132
        on right: 125
    tuple_type_spec <pdm::ast::TypeSpec*> (134)
        on left: 133 134
        on right: 126
    array_type_spec <pdm::ast::TypeSpec*> (135)
        on left: 135
        on right: 127
    struct_type_spec <pdm::ast::TypeSpec*> (136)
        on left: 136
        on right: 129
    struct_type_spec_field_cl <std::vector<pdm::ast::StructTypeSpec::Field*>> (137)
        on left: 137 138
        on right: 136 138
    struct_type_spec_field <pdm::ast::StructTypeSpec::Field*> (138)
        on left: 139
        on right: 137 138
    enum_type_spec_field <pdm::ast::EnumTypeSpec::Field*> (139)
        on left: 140 141
        on right: 142 143
    enum_type_spec_field_cl <std::vector<pdm::ast::EnumTypeSpec::Field*>> (140)
        on left: 142 143
        on right: 143 144
    enum_type_spec <pdm::ast::TypeSpec*> (141)
        on left: 144
        on right: 130
    fn_type_spec <pdm::ast::FnTypeSpec*> (142)
        on left: 145
        on right: 75 131
    targ <pdm::ast::TArg*> (143)
        on left: 146 147
        on right: 148 149
    targ_cl <std::vector<pdm::ast::TArg*>> (144)
        on left: 148 149
        on right: 34 36 149
    varg <pdm::ast::VArg*> (145)
        on left: 150 151 152
        on right: 153 154
    varg_cl <std::vector<pdm::ast::VArg*>> (146)
        on left: 153 154
        on right: 81 154
    class_spec <pdm::ast::ClassSpec*> (147)
        on left: 155
        on right: 160 168
    primary_class_spec <pdm::ast::ClassSpec*> (148)
        on left: 156 157 158
        on right: 155
    mod_prefix_cid_class_spec <pdm::ast::ClassSpec*> (149)
        on left: 159
        on right: 157
    class_exp_class_spec <pdm::ast::ClassSpec*> (150)
        on left: 160
        on right: 14 158
    struct_exp_field <pdm::ast::StructExp::Field*> (151)
        on left: 161
        on right: 181 182
    vpattern_field <pdm::ast::VPattern::Field*> (152)
        on left: 162 163 164
        on right: 175 176
    lpattern_field <pdm::ast::LPattern::Field*> (153)
        on left: 165 166
        on right: 170 177 178
    tpattern_field <pdm::ast::TPattern::Field*> (154)
        on left: 167 168
        on right: 179 180
    destructured_lpattern <pdm::ast::LPattern*> (155)
        on left: 169
        on right: 171
    lpattern <pdm::ast::LPattern*> (156)
        on left: 170 171
        on right: 22 23 24
    vpattern <pdm::ast::VPattern*> (157)
        on left: 172 173
        on right: 145
    tpattern <pdm::ast::TPattern*> (158)
        on left: 174
        on right: 9
    vpattern_field_cl <std::vector<pdm::ast::VPattern::Field*>> (159)
        on left: 175 176
        on right: 172 176
    lpattern_field_cl <std::vector<pdm::ast::LPattern::Field*>> (160)
        on left: 177 178
        on right: 169 178
    tpattern_field_cl1 <std::vector<pdm::ast::TPattern::Field*>> (161)
        on left: 179 180
        on right: 174 180
    struct_exp_field_cl <std::vector<pdm::ast::StructExp::Field*>> (162)
        on left: 181 182
        on right: 52 182


State 0

    0 $accept: • script $end

    $default  reduce using rule 2 (script_header)

    script         go to state 1
    script_header  go to state 2


State 1

    0 $accept: script • $end

    $end  shift, and go to state 3


State 2

    1 script: script_header • script_field_sl
    3 script_header: script_header • script_header_stmt ";"

    "mod"  shift, and go to state 4

    script_header_stmt  go to state 5
    script_field        go to state 6
    script_field_sl     go to state 7
    import_stmt         go to state 8


State 3

    0 $accept: script $end •

    $default  accept


State 4

    5 script_field: "mod" • vid mod_exp
   16 import_stmt: "mod" • vid "from" stringl "as" stringl

    "val_id"  shift, and go to state 9

    vid  go to state 10


State 5

    3 script_header: script_header script_header_stmt • ";"

    ";"  shift, and go to state 11


State 6

    6 script_field_sl: script_field • ";"

    ";"  shift, and go to state 12


State 7

    1 script: script_header script_field_sl •
    7 script_field_sl: script_field_sl • script_field ";"

    "mod"  shift, and go to state 13

    $default  reduce using rule 1 (script)

    script_field  go to state 14


State 8

    4 script_header_stmt: import_stmt •

    $default  reduce using rule 4 (script_header_stmt)


State 9

   28 vid: "val_id" •

    $default  reduce using rule 28 (vid)


State 10

    5 script_field: "mod" vid • mod_exp
   16 import_stmt: "mod" vid • "from" stringl "as" stringl

    "from"  shift, and go to state 15
    "["     shift, and go to state 16
    "{"     shift, and go to state 17

    mod_exp   go to state 18
    tpattern  go to state 19


State 11

    3 script_header: script_header script_header_stmt ";" •

    $default  reduce using rule 3 (script_header)


State 12

    6 script_field_sl: script_field ";" •

    $default  reduce using rule 6 (script_field_sl)


State 13

    5 script_field: "mod" • vid mod_exp

    "val_id"  shift, and go to state 9

    vid  go to state 20


State 14

    7 script_field_sl: script_field_sl script_field • ";"

    ";"  shift, and go to state 21


State 15

   16 import_stmt: "mod" vid "from" • stringl "as" stringl

    "\"dq-string-literal\""  shift, and go to state 22
    "'sq-string-literal'"    shift, and go to state 23

    stringl  go to state 24


State 16

  174 tpattern: "[" • tpattern_field_cl1 "]"

    "val_id"  shift, and go to state 9
    "TypeId"  shift, and go to state 25

    tid                 go to state 26
    vid                 go to state 27
    tpattern_field      go to state 28
    tpattern_field_cl1  go to state 29


State 17

    8 mod_exp: "{" • mod_field_sl "}"

    $default  reduce using rule 10 (mod_field_sl)

    mod_field_sl  go to state 30


State 18

    5 script_field: "mod" vid mod_exp •

    $default  reduce using rule 5 (script_field)


State 19

    9 mod_exp: tpattern • "{" mod_field_sl "}"

    "{"  shift, and go to state 31


State 20

    5 script_field: "mod" vid • mod_exp

    "["  shift, and go to state 16
    "{"  shift, and go to state 17

    mod_exp   go to state 18
    tpattern  go to state 19


State 21

    7 script_field_sl: script_field_sl script_field ";" •

    $default  reduce using rule 7 (script_field_sl)


State 22

   32 stringl: "\"dq-string-literal\"" •

    $default  reduce using rule 32 (stringl)


State 23

   31 stringl: "'sq-string-literal'" •

    $default  reduce using rule 31 (stringl)


State 24

   16 import_stmt: "mod" vid "from" stringl • "as" stringl

    "as"  shift, and go to state 32


State 25

   27 tid: "TypeId" •

    $default  reduce using rule 27 (tid)


State 26

  168 tpattern_field: tid • class_spec

    "val_id"  shift, and go to state 9
    "CLS_ID"  shift, and go to state 33
    "cls"     shift, and go to state 34

    vid                        go to state 35
    cid                        go to state 36
    mod_prefix                 go to state 37
    class_spec                 go to state 38
    primary_class_spec         go to state 39
    mod_prefix_cid_class_spec  go to state 40
    class_exp_class_spec       go to state 41


State 27

  167 tpattern_field: vid • type_spec

    "val_id"  shift, and go to state 9
    "TypeId"  shift, and go to state 25
    "["       shift, and go to state 42
    "{"       shift, and go to state 43

    tid              go to state 44
    vid              go to state 35
    mod_prefix       go to state 45
    type_spec        go to state 46
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48
    array_type_spec  go to state 49


State 28

  179 tpattern_field_cl1: tpattern_field •

    $default  reduce using rule 179 (tpattern_field_cl1)


State 29

  174 tpattern: "[" tpattern_field_cl1 • "]"
  180 tpattern_field_cl1: tpattern_field_cl1 • "," tpattern_field

    ","  shift, and go to state 50
    "]"  shift, and go to state 51


State 30

    8 mod_exp: "{" mod_field_sl • "}"
   11 mod_field_sl: mod_field_sl • mod_field ";"

    "val_id"  shift, and go to state 9
    "TypeId"  shift, and go to state 25
    "CLS_ID"  shift, and go to state 33
    "mod"     shift, and go to state 52
    "}"       shift, and go to state 53

    mod_field  go to state 54
    tid        go to state 55
    vid        go to state 56
    cid        go to state 57


State 31

    9 mod_exp: tpattern "{" • mod_field_sl "}"

    $default  reduce using rule 10 (mod_field_sl)

    mod_field_sl  go to state 58


State 32

   16 import_stmt: "mod" vid "from" stringl "as" • stringl

    "\"dq-string-literal\""  shift, and go to state 22
    "'sq-string-literal'"    shift, and go to state 23

    stringl  go to state 59


State 33

   29 cid: "CLS_ID" •

    $default  reduce using rule 29 (cid)


State 34

  160 class_exp_class_spec: "cls" • "(" tid class_spec ")" "{" type_query_exp_sl "}"

    "("  shift, and go to state 60


State 35

   33 mod_prefix: vid • "::"
   34           | vid • "[" targ_cl "]" "::"

    "::"  shift, and go to state 61
    "["   shift, and go to state 62


State 36

  156 primary_class_spec: cid •

    $default  reduce using rule 156 (primary_class_spec)


State 37

   35 mod_prefix: mod_prefix • vid "::"
   36           | mod_prefix • vid "[" targ_cl "]" "::"
  159 mod_prefix_cid_class_spec: mod_prefix • cid

    "val_id"  shift, and go to state 9
    "CLS_ID"  shift, and go to state 33

    vid  go to state 63
    cid  go to state 64


State 38

  168 tpattern_field: tid class_spec •

    $default  reduce using rule 168 (tpattern_field)


State 39

  155 class_spec: primary_class_spec •

    $default  reduce using rule 155 (class_spec)


State 40

  157 primary_class_spec: mod_prefix_cid_class_spec •

    $default  reduce using rule 157 (primary_class_spec)


State 41

  158 primary_class_spec: class_exp_class_spec •

    $default  reduce using rule 158 (primary_class_spec)


State 42

  135 array_type_spec: "[" • type_spec "/" expr "]"

    "val_id"  shift, and go to state 9
    "TypeId"  shift, and go to state 25
    "["       shift, and go to state 42
    "{"       shift, and go to state 43

    tid              go to state 44
    vid              go to state 35
    mod_prefix       go to state 45
    type_spec        go to state 65
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48
    array_type_spec  go to state 49


State 43

  133 tuple_type_spec: "{" • type_spec "}"
  134                | "{" • type_spec_cl2 "}"

    "val_id"  shift, and go to state 9
    "TypeId"  shift, and go to state 25
    "["       shift, and go to state 42
    "{"       shift, and go to state 43

    tid              go to state 44
    vid              go to state 35
    mod_prefix       go to state 45
    type_spec_cl2    go to state 66
    type_spec        go to state 67
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48
    array_type_spec  go to state 49


State 44

  124 type_spec: tid •

    $default  reduce using rule 124 (type_spec)


State 45

   35 mod_prefix: mod_prefix • vid "::"
   36           | mod_prefix • vid "[" targ_cl "]" "::"
  132 mod_prefix_tid: mod_prefix • tid

    "val_id"  shift, and go to state 9
    "TypeId"  shift, and go to state 25

    tid  go to state 68
    vid  go to state 63


State 46

  167 tpattern_field: vid type_spec •

    $default  reduce using rule 167 (tpattern_field)


State 47

  125 type_spec: mod_prefix_tid •

    $default  reduce using rule 125 (type_spec)


State 48

  126 type_spec: tuple_type_spec •

    $default  reduce using rule 126 (type_spec)


State 49

  127 type_spec: array_type_spec •

    $default  reduce using rule 127 (type_spec)


State 50

  180 tpattern_field_cl1: tpattern_field_cl1 "," • tpattern_field

    "val_id"  shift, and go to state 9
    "TypeId"  shift, and go to state 25

    tid             go to state 26
    vid             go to state 27
    tpattern_field  go to state 69


State 51

  174 tpattern: "[" tpattern_field_cl1 "]" •

    $default  reduce using rule 174 (tpattern)


State 52

   15 mod_field: "mod" • vid mod_exp

    "val_id"  shift, and go to state 9

    vid  go to state 70


State 53

    8 mod_exp: "{" mod_field_sl "}" •

    $default  reduce using rule 8 (mod_exp)


State 54

   11 mod_field_sl: mod_field_sl mod_field • ";"

    ";"  shift, and go to state 71


State 55

   13 mod_field: tid • "=" long_type_spec

    "="  shift, and go to state 72


State 56

   12 mod_field: vid • "=" long_exp

    "="  shift, and go to state 73


State 57

   14 mod_field: cid • "=" class_exp_class_spec

    "="  shift, and go to state 74


State 58

    9 mod_exp: tpattern "{" mod_field_sl • "}"
   11 mod_field_sl: mod_field_sl • mod_field ";"

    "val_id"  shift, and go to state 9
    "TypeId"  shift, and go to state 25
    "CLS_ID"  shift, and go to state 33
    "mod"     shift, and go to state 52
    "}"       shift, and go to state 75

    mod_field  go to state 54
    tid        go to state 55
    vid        go to state 56
    cid        go to state 57


State 59

   16 import_stmt: "mod" vid "from" stringl "as" stringl •

    $default  reduce using rule 16 (import_stmt)


State 60

  160 class_exp_class_spec: "cls" "(" • tid class_spec ")" "{" type_query_exp_sl "}"

    "TypeId"  shift, and go to state 25

    tid  go to state 76


State 61

   33 mod_prefix: vid "::" •

    $default  reduce using rule 33 (mod_prefix)


State 62

   34 mod_prefix: vid "[" • targ_cl "]" "::"

    "val_id"                 shift, and go to state 9
    "TypeId"                 shift, and go to state 25
    "if"                     shift, and go to state 77
    "not"                    shift, and go to state 78
    "42"                     shift, and go to state 79
    "0x2a"                   shift, and go to state 80
    "42u"                    shift, and go to state 81
    "0x2Au"                  shift, and go to state 82
    "4.2"                    shift, and go to state 83
    "\"dq-string-literal\""  shift, and go to state 84
    "'sq-string-literal'"    shift, and go to state 85
    "("                      shift, and go to state 86
    "["                      shift, and go to state 42
    "{"                      shift, and go to state 87
    "+"                      shift, and go to state 88
    "-"                      shift, and go to state 89

    tid              go to state 44
    vid              go to state 90
    floatl           go to state 91
    mod_prefix       go to state 92
    expr             go to state 93
    bracketed_exp    go to state 94
    paren_exp        go to state 95
    vtupleExpr       go to state 96
    vstructExpr      go to state 97
    primary_exp      go to state 98
    int_expr         go to state 99
    stringls         go to state 100
    if_exp           go to state 101
    chain_exp        go to state 102
    postfix_exp      go to state 103
    vcall_exp        go to state 104
    dot_name_exp     go to state 105
    dot_index_exp    go to state 106
    unary_exp        go to state 107
    unary_op         go to state 108
    binary_exp       go to state 109
    mul_binary_exp   go to state 110
    add_binary_exp   go to state 111
    cmp_binary_exp   go to state 112
    eq_binary_exp    go to state 113
    and_binary_exp   go to state 114
    xor_binary_exp   go to state 115
    or_binary_exp    go to state 116
    type_spec        go to state 117
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48
    array_type_spec  go to state 49
    targ             go to state 118
    targ_cl          go to state 119


State 63

   35 mod_prefix: mod_prefix vid • "::"
   36           | mod_prefix vid • "[" targ_cl "]" "::"

    "::"  shift, and go to state 120
    "["   shift, and go to state 121


State 64

  159 mod_prefix_cid_class_spec: mod_prefix cid •

    $default  reduce using rule 159 (mod_prefix_cid_class_spec)


State 65

  135 array_type_spec: "[" type_spec • "/" expr "]"

    "/"  shift, and go to state 122


State 66

  123 type_spec_cl2: type_spec_cl2 • "," type_spec
  134 tuple_type_spec: "{" type_spec_cl2 • "}"

    ","  shift, and go to state 123
    "}"  shift, and go to state 124


State 67

  122 type_spec_cl2: type_spec • "," type_spec
  133 tuple_type_spec: "{" type_spec • "}"

    ","  shift, and go to state 125
    "}"  shift, and go to state 126


State 68

  132 mod_prefix_tid: mod_prefix tid •

    $default  reduce using rule 132 (mod_prefix_tid)


State 69

  180 tpattern_field_cl1: tpattern_field_cl1 "," tpattern_field •

    $default  reduce using rule 180 (tpattern_field_cl1)


State 70

   15 mod_field: "mod" vid • mod_exp

    "["  shift, and go to state 16
    "{"  shift, and go to state 17

    mod_exp   go to state 127
    tpattern  go to state 19


State 71

   11 mod_field_sl: mod_field_sl mod_field ";" •

    $default  reduce using rule 11 (mod_field_sl)


State 72

   13 mod_field: tid "=" • long_type_spec

    "val_id"  shift, and go to state 9
    "TypeId"  shift, and go to state 25
    "enum"    shift, and go to state 128
    "("       shift, and go to state 129
    "["       shift, and go to state 42
    "{"       shift, and go to state 130

    tid               go to state 44
    vid               go to state 35
    mod_prefix        go to state 45
    type_spec         go to state 131
    long_type_spec    go to state 132
    mod_prefix_tid    go to state 47
    tuple_type_spec   go to state 48
    array_type_spec   go to state 49
    struct_type_spec  go to state 133
    enum_type_spec    go to state 134
    fn_type_spec      go to state 135
    vpattern          go to state 136


State 73

   12 mod_field: vid "=" • long_exp

    "val_id"                 shift, and go to state 9
    "TypeId"                 shift, and go to state 25
    "if"                     shift, and go to state 77
    "not"                    shift, and go to state 78
    "42"                     shift, and go to state 79
    "0x2a"                   shift, and go to state 80
    "42u"                    shift, and go to state 81
    "0x2Au"                  shift, and go to state 82
    "4.2"                    shift, and go to state 83
    "\"dq-string-literal\""  shift, and go to state 84
    "'sq-string-literal'"    shift, and go to state 85
    "("                      shift, and go to state 137
    "["                      shift, and go to state 42
    "{"                      shift, and go to state 87
    "+"                      shift, and go to state 88
    "-"                      shift, and go to state 89

    tid              go to state 44
    vid              go to state 90
    floatl           go to state 91
    mod_prefix       go to state 92
    expr             go to state 138
    long_exp         go to state 139
    bracketed_exp    go to state 94
    paren_exp        go to state 95
    vtupleExpr       go to state 96
    vstructExpr      go to state 97
    primary_exp      go to state 98
    int_expr         go to state 99
    stringls         go to state 100
    if_exp           go to state 101
    chain_exp        go to state 102
    lambda_exp       go to state 140
    postfix_exp      go to state 103
    vcall_exp        go to state 104
    dot_name_exp     go to state 105
    dot_index_exp    go to state 106
    unary_exp        go to state 107
    unary_op         go to state 108
    binary_exp       go to state 109
    mul_binary_exp   go to state 110
    add_binary_exp   go to state 111
    cmp_binary_exp   go to state 112
    eq_binary_exp    go to state 113
    and_binary_exp   go to state 114
    xor_binary_exp   go to state 115
    or_binary_exp    go to state 116
    type_spec        go to state 141
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48
    array_type_spec  go to state 49
    fn_type_spec     go to state 142
    vpattern         go to state 136


State 74

   14 mod_field: cid "=" • class_exp_class_spec

    "cls"  shift, and go to state 34

    class_exp_class_spec  go to state 143


State 75

    9 mod_exp: tpattern "{" mod_field_sl "}" •

    $default  reduce using rule 9 (mod_exp)


State 76

  160 class_exp_class_spec: "cls" "(" tid • class_spec ")" "{" type_query_exp_sl "}"

    "val_id"  shift, and go to state 9
    "CLS_ID"  shift, and go to state 33
    "cls"     shift, and go to state 34

    vid                        go to state 35
    cid                        go to state 36
    mod_prefix                 go to state 37
    class_spec                 go to state 144
    primary_class_spec         go to state 39
    mod_prefix_cid_class_spec  go to state 40
    class_exp_class_spec       go to state 41


State 77

   68 if_exp: "if" • bracketed_exp "then" bracketed_exp
   69       | "if" • bracketed_exp "then" bracketed_exp "else" primary_exp

    "("  shift, and go to state 86
    "{"  shift, and go to state 145

    bracketed_exp  go to state 146
    paren_exp      go to state 95
    vtupleExpr     go to state 96
    vstructExpr    go to state 97
    chain_exp      go to state 102


State 78

   91 unary_op: "not" •

    $default  reduce using rule 91 (unary_op)


State 79

   60 int_expr: "42" •

    $default  reduce using rule 60 (int_expr)


State 80

   61 int_expr: "0x2a" •

    $default  reduce using rule 61 (int_expr)


State 81

   62 int_expr: "42u" •

    $default  reduce using rule 62 (int_expr)


State 82

   63 int_expr: "0x2Au" •

    $default  reduce using rule 63 (int_expr)


State 83

   30 floatl: "4.2" •

    $default  reduce using rule 30 (floatl)


State 84

   65 stringls: "\"dq-string-literal\"" •

    $default  reduce using rule 65 (stringls)


State 85

   64 stringls: "'sq-string-literal'" •

    $default  reduce using rule 64 (stringls)


State 86

   48 paren_exp: "(" • long_exp ")"
   49 vtupleExpr: "(" • ")"
   50           | "(" • expr "," ")"
   51           | "(" • expr_cl2 ")"

    "val_id"                 shift, and go to state 9
    "TypeId"                 shift, and go to state 25
    "if"                     shift, and go to state 77
    "not"                    shift, and go to state 78
    "42"                     shift, and go to state 79
    "0x2a"                   shift, and go to state 80
    "42u"                    shift, and go to state 81
    "0x2Au"                  shift, and go to state 82
    "4.2"                    shift, and go to state 83
    "\"dq-string-literal\""  shift, and go to state 84
    "'sq-string-literal'"    shift, and go to state 85
    "("                      shift, and go to state 137
    ")"                      shift, and go to state 147
    "["                      shift, and go to state 42
    "{"                      shift, and go to state 87
    "+"                      shift, and go to state 88
    "-"                      shift, and go to state 89

    tid              go to state 44
    vid              go to state 90
    floatl           go to state 91
    mod_prefix       go to state 92
    expr             go to state 148
    long_exp         go to state 149
    expr_cl2         go to state 150
    bracketed_exp    go to state 94
    paren_exp        go to state 95
    vtupleExpr       go to state 96
    vstructExpr      go to state 97
    primary_exp      go to state 98
    int_expr         go to state 99
    stringls         go to state 100
    if_exp           go to state 101
    chain_exp        go to state 102
    lambda_exp       go to state 140
    postfix_exp      go to state 103
    vcall_exp        go to state 104
    dot_name_exp     go to state 105
    dot_index_exp    go to state 106
    unary_exp        go to state 107
    unary_op         go to state 108
    binary_exp       go to state 109
    mul_binary_exp   go to state 110
    add_binary_exp   go to state 111
    cmp_binary_exp   go to state 112
    eq_binary_exp    go to state 113
    and_binary_exp   go to state 114
    xor_binary_exp   go to state 115
    or_binary_exp    go to state 116
    type_spec        go to state 141
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48
    array_type_spec  go to state 49
    fn_type_spec     go to state 142
    vpattern         go to state 136


State 87

   52 vstructExpr: "{" • struct_exp_field_cl "}"
   70 chain_exp: "{" • long_exp "}"
   71          | "{" • chain_prefix "}"
   72          | "{" • chain_prefix long_exp "}"
  133 tuple_type_spec: "{" • type_spec "}"
  134                | "{" • type_spec_cl2 "}"

    "val_id"                 shift, and go to state 9
    "TypeId"                 shift, and go to state 25
    "if"                     shift, and go to state 77
    "const"                  shift, and go to state 151
    "val"                    shift, and go to state 152
    "var"                    shift, and go to state 153
    "set"                    shift, and go to state 154
    "not"                    shift, and go to state 78
    "discard"                shift, and go to state 155
    "42"                     shift, and go to state 79
    "0x2a"                   shift, and go to state 80
    "42u"                    shift, and go to state 81
    "0x2Au"                  shift, and go to state 82
    "4.2"                    shift, and go to state 83
    "\"dq-string-literal\""  shift, and go to state 84
    "'sq-string-literal'"    shift, and go to state 85
    "("                      shift, and go to state 137
    "["                      shift, and go to state 42
    "{"                      shift, and go to state 87
    "+"                      shift, and go to state 88
    "-"                      shift, and go to state 89

    chain_prefix_stmt    go to state 156
    const_stmt           go to state 157
    val_stmt             go to state 158
    var_stmt             go to state 159
    set_stmt             go to state 160
    discard_stmt         go to state 161
    tid                  go to state 44
    vid                  go to state 162
    floatl               go to state 91
    mod_prefix           go to state 92
    expr                 go to state 138
    long_exp             go to state 163
    bracketed_exp        go to state 94
    paren_exp            go to state 95
    vtupleExpr           go to state 96
    vstructExpr          go to state 97
    primary_exp          go to state 98
    int_expr             go to state 99
    stringls             go to state 100
    if_exp               go to state 101
    chain_exp            go to state 102
    chain_prefix         go to state 164
    lambda_exp           go to state 140
    postfix_exp          go to state 103
    vcall_exp            go to state 104
    dot_name_exp         go to state 105
    dot_index_exp        go to state 106
    unary_exp            go to state 107
    unary_op             go to state 108
    binary_exp           go to state 109
    mul_binary_exp       go to state 110
    add_binary_exp       go to state 111
    cmp_binary_exp       go to state 112
    eq_binary_exp        go to state 113
    and_binary_exp       go to state 114
    xor_binary_exp       go to state 115
    or_binary_exp        go to state 116
    type_spec_cl2        go to state 66
    type_spec            go to state 165
    mod_prefix_tid       go to state 47
    tuple_type_spec      go to state 48
    array_type_spec      go to state 49
    fn_type_spec         go to state 142
    struct_exp_field     go to state 166
    vpattern             go to state 136
    struct_exp_field_cl  go to state 167


State 88

   89 unary_op: "+" •

    $default  reduce using rule 89 (unary_op)


State 89

   90 unary_op: "-" •

    $default  reduce using rule 90 (unary_op)


State 90

   33 mod_prefix: vid • "::"
   34           | vid • "[" targ_cl "]" "::"
   54 primary_exp: vid •

    "::"  shift, and go to state 61
    "["   shift, and go to state 62

    $default  reduce using rule 54 (primary_exp)


State 91

   56 primary_exp: floatl •

    $default  reduce using rule 56 (primary_exp)


State 92

   35 mod_prefix: mod_prefix • vid "::"
   36           | mod_prefix • vid "[" targ_cl "]" "::"
   59 primary_exp: mod_prefix • vid
  132 mod_prefix_tid: mod_prefix • tid

    "val_id"  shift, and go to state 9
    "TypeId"  shift, and go to state 25

    tid  go to state 68
    vid  go to state 168


State 93

  147 targ: expr •

    $default  reduce using rule 147 (targ)


State 94

   53 primary_exp: bracketed_exp •

    $default  reduce using rule 53 (primary_exp)


State 95

   44 bracketed_exp: paren_exp •

    $default  reduce using rule 44 (bracketed_exp)


State 96

   45 bracketed_exp: vtupleExpr •

    $default  reduce using rule 45 (bracketed_exp)


State 97

   46 bracketed_exp: vstructExpr •

    $default  reduce using rule 46 (bracketed_exp)


State 98

   76 postfix_exp: primary_exp •

    $default  reduce using rule 76 (postfix_exp)


State 99

   55 primary_exp: int_expr •

    $default  reduce using rule 55 (primary_exp)


State 100

   57 primary_exp: stringls •
   66 stringls: stringls • "'sq-string-literal'"
   67         | stringls • "\"dq-string-literal\""

    "\"dq-string-literal\""  shift, and go to state 169
    "'sq-string-literal'"    shift, and go to state 170

    $default  reduce using rule 57 (primary_exp)


State 101

   58 primary_exp: if_exp •

    $default  reduce using rule 58 (primary_exp)


State 102

   47 bracketed_exp: chain_exp •

    $default  reduce using rule 47 (bracketed_exp)


State 103

   80 vcall_exp: postfix_exp • "(" ")"
   81          | postfix_exp • "(" varg_cl ")"
   82 dot_name_exp: postfix_exp • "." "val_id"
   85 dot_index_exp: postfix_exp • "." int_expr
   86              | postfix_exp • "." bracketed_exp
   87 unary_exp: postfix_exp •

    "."  shift, and go to state 171
    "("  shift, and go to state 172

    $default  reduce using rule 87 (unary_exp)


State 104

   77 postfix_exp: vcall_exp •

    $default  reduce using rule 77 (postfix_exp)


State 105

   78 postfix_exp: dot_name_exp •

    $default  reduce using rule 78 (postfix_exp)


State 106

   79 postfix_exp: dot_index_exp •

    $default  reduce using rule 79 (postfix_exp)


State 107

   96 mul_binary_exp: unary_exp •

    $default  reduce using rule 96 (mul_binary_exp)


State 108

   88 unary_exp: unary_op • unary_exp

    "val_id"                 shift, and go to state 9
    "TypeId"                 shift, and go to state 25
    "if"                     shift, and go to state 77
    "not"                    shift, and go to state 78
    "42"                     shift, and go to state 79
    "0x2a"                   shift, and go to state 80
    "42u"                    shift, and go to state 81
    "0x2Au"                  shift, and go to state 82
    "4.2"                    shift, and go to state 83
    "\"dq-string-literal\""  shift, and go to state 84
    "'sq-string-literal'"    shift, and go to state 85
    "("                      shift, and go to state 86
    "["                      shift, and go to state 42
    "{"                      shift, and go to state 87
    "+"                      shift, and go to state 88
    "-"                      shift, and go to state 89

    tid              go to state 44
    vid              go to state 90
    floatl           go to state 91
    mod_prefix       go to state 92
    bracketed_exp    go to state 94
    paren_exp        go to state 95
    vtupleExpr       go to state 96
    vstructExpr      go to state 97
    primary_exp      go to state 98
    int_expr         go to state 99
    stringls         go to state 100
    if_exp           go to state 101
    chain_exp        go to state 102
    postfix_exp      go to state 103
    vcall_exp        go to state 104
    dot_name_exp     go to state 105
    dot_index_exp    go to state 106
    unary_exp        go to state 173
    unary_op         go to state 108
    type_spec        go to state 141
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48
    array_type_spec  go to state 49


State 109

   37 expr: binary_exp •

    $default  reduce using rule 37 (expr)


State 110

   97 mul_binary_exp: mul_binary_exp • mul_binary_op unary_exp
  100 add_binary_exp: mul_binary_exp •

    "*"  shift, and go to state 174
    "/"  shift, and go to state 175
    "%"  shift, and go to state 176

    $default  reduce using rule 100 (add_binary_exp)

    mul_binary_op  go to state 177


State 111

  101 add_binary_exp: add_binary_exp • add_binary_op mul_binary_exp
  106 cmp_binary_exp: add_binary_exp •

    "+"  shift, and go to state 178
    "-"  shift, and go to state 179

    $default  reduce using rule 106 (cmp_binary_exp)

    add_binary_op  go to state 180


State 112

  107 cmp_binary_exp: cmp_binary_exp • cmp_binary_op add_binary_exp
  110 eq_binary_exp: cmp_binary_exp •

    "<"   shift, and go to state 181
    "<="  shift, and go to state 182
    ">"   shift, and go to state 183
    ">="  shift, and go to state 184

    $default  reduce using rule 110 (eq_binary_exp)

    cmp_binary_op  go to state 185


State 113

  111 eq_binary_exp: eq_binary_exp • eq_binary_op cmp_binary_exp
  112 and_binary_exp: eq_binary_exp •

    "=="  shift, and go to state 186
    "!="  shift, and go to state 187

    $default  reduce using rule 112 (and_binary_exp)

    eq_binary_op  go to state 188


State 114

  113 and_binary_exp: and_binary_exp • "and" eq_binary_exp
  114 xor_binary_exp: and_binary_exp •

    "and"  shift, and go to state 189

    $default  reduce using rule 114 (xor_binary_exp)


State 115

  115 xor_binary_exp: xor_binary_exp • "xor" and_binary_exp
  116 or_binary_exp: xor_binary_exp •

    "xor"  shift, and go to state 190

    $default  reduce using rule 116 (or_binary_exp)


State 116

   92 binary_exp: or_binary_exp •
  117 or_binary_exp: or_binary_exp • "or" xor_binary_exp

    "or"  shift, and go to state 191

    $default  reduce using rule 92 (binary_exp)


State 117

   83 dot_name_exp: type_spec • "::" "TypeId"
   84             | type_spec • "::" "TypeId" "using" paren_exp
  146 targ: type_spec •

    "::"  shift, and go to state 192

    $default  reduce using rule 146 (targ)


State 118

  148 targ_cl: targ •

    $default  reduce using rule 148 (targ_cl)


State 119

   34 mod_prefix: vid "[" targ_cl • "]" "::"
  149 targ_cl: targ_cl • "," targ

    ","  shift, and go to state 193
    "]"  shift, and go to state 194


State 120

   35 mod_prefix: mod_prefix vid "::" •

    $default  reduce using rule 35 (mod_prefix)


State 121

   36 mod_prefix: mod_prefix vid "[" • targ_cl "]" "::"

    "val_id"                 shift, and go to state 9
    "TypeId"                 shift, and go to state 25
    "if"                     shift, and go to state 77
    "not"                    shift, and go to state 78
    "42"                     shift, and go to state 79
    "0x2a"                   shift, and go to state 80
    "42u"                    shift, and go to state 81
    "0x2Au"                  shift, and go to state 82
    "4.2"                    shift, and go to state 83
    "\"dq-string-literal\""  shift, and go to state 84
    "'sq-string-literal'"    shift, and go to state 85
    "("                      shift, and go to state 86
    "["                      shift, and go to state 42
    "{"                      shift, and go to state 87
    "+"                      shift, and go to state 88
    "-"                      shift, and go to state 89

    tid              go to state 44
    vid              go to state 90
    floatl           go to state 91
    mod_prefix       go to state 92
    expr             go to state 93
    bracketed_exp    go to state 94
    paren_exp        go to state 95
    vtupleExpr       go to state 96
    vstructExpr      go to state 97
    primary_exp      go to state 98
    int_expr         go to state 99
    stringls         go to state 100
    if_exp           go to state 101
    chain_exp        go to state 102
    postfix_exp      go to state 103
    vcall_exp        go to state 104
    dot_name_exp     go to state 105
    dot_index_exp    go to state 106
    unary_exp        go to state 107
    unary_op         go to state 108
    binary_exp       go to state 109
    mul_binary_exp   go to state 110
    add_binary_exp   go to state 111
    cmp_binary_exp   go to state 112
    eq_binary_exp    go to state 113
    and_binary_exp   go to state 114
    xor_binary_exp   go to state 115
    or_binary_exp    go to state 116
    type_spec        go to state 117
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48
    array_type_spec  go to state 49
    targ             go to state 118
    targ_cl          go to state 195


State 122

  135 array_type_spec: "[" type_spec "/" • expr "]"

    "val_id"                 shift, and go to state 9
    "TypeId"                 shift, and go to state 25
    "if"                     shift, and go to state 77
    "not"                    shift, and go to state 78
    "42"                     shift, and go to state 79
    "0x2a"                   shift, and go to state 80
    "42u"                    shift, and go to state 81
    "0x2Au"                  shift, and go to state 82
    "4.2"                    shift, and go to state 83
    "\"dq-string-literal\""  shift, and go to state 84
    "'sq-string-literal'"    shift, and go to state 85
    "("                      shift, and go to state 86
    "["                      shift, and go to state 42
    "{"                      shift, and go to state 87
    "+"                      shift, and go to state 88
    "-"                      shift, and go to state 89

    tid              go to state 44
    vid              go to state 90
    floatl           go to state 91
    mod_prefix       go to state 92
    expr             go to state 196
    bracketed_exp    go to state 94
    paren_exp        go to state 95
    vtupleExpr       go to state 96
    vstructExpr      go to state 97
    primary_exp      go to state 98
    int_expr         go to state 99
    stringls         go to state 100
    if_exp           go to state 101
    chain_exp        go to state 102
    postfix_exp      go to state 103
    vcall_exp        go to state 104
    dot_name_exp     go to state 105
    dot_index_exp    go to state 106
    unary_exp        go to state 107
    unary_op         go to state 108
    binary_exp       go to state 109
    mul_binary_exp   go to state 110
    add_binary_exp   go to state 111
    cmp_binary_exp   go to state 112
    eq_binary_exp    go to state 113
    and_binary_exp   go to state 114
    xor_binary_exp   go to state 115
    or_binary_exp    go to state 116
    type_spec        go to state 141
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48
    array_type_spec  go to state 49


State 123

  123 type_spec_cl2: type_spec_cl2 "," • type_spec

    "val_id"  shift, and go to state 9
    "TypeId"  shift, and go to state 25
    "["       shift, and go to state 42
    "{"       shift, and go to state 43

    tid              go to state 44
    vid              go to state 35
    mod_prefix       go to state 45
    type_spec        go to state 197
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48
    array_type_spec  go to state 49


State 124

  134 tuple_type_spec: "{" type_spec_cl2 "}" •

    $default  reduce using rule 134 (tuple_type_spec)


State 125

  122 type_spec_cl2: type_spec "," • type_spec

    "val_id"  shift, and go to state 9
    "TypeId"  shift, and go to state 25
    "["       shift, and go to state 42
    "{"       shift, and go to state 43

    tid              go to state 44
    vid              go to state 35
    mod_prefix       go to state 45
    type_spec        go to state 198
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48
    array_type_spec  go to state 49


State 126

  133 tuple_type_spec: "{" type_spec "}" •

    $default  reduce using rule 133 (tuple_type_spec)


State 127

   15 mod_field: "mod" vid mod_exp •

    $default  reduce using rule 15 (mod_field)


State 128

  144 enum_type_spec: "enum" • "{" enum_type_spec_field_cl "}"

    "{"  shift, and go to state 199


State 129

  172 vpattern: "(" • vpattern_field_cl ")"
  173         | "(" • ")"

    "val_id"  shift, and go to state 9
    "out"     shift, and go to state 200
    "inout"   shift, and go to state 201
    ")"       shift, and go to state 202

    vid                go to state 203
    vpattern_field     go to state 204
    vpattern_field_cl  go to state 205


State 130

  133 tuple_type_spec: "{" • type_spec "}"
  134                | "{" • type_spec_cl2 "}"
  136 struct_type_spec: "{" • struct_type_spec_field_cl "}"

    "val_id"  shift, and go to state 9
    "TypeId"  shift, and go to state 25
    "["       shift, and go to state 42
    "{"       shift, and go to state 43

    tid                        go to state 44
    vid                        go to state 206
    mod_prefix                 go to state 45
    type_spec_cl2              go to state 66
    type_spec                  go to state 67
    mod_prefix_tid             go to state 47
    tuple_type_spec            go to state 48
    array_type_spec            go to state 49
    struct_type_spec_field_cl  go to state 207
    struct_type_spec_field     go to state 208


State 131

  128 long_type_spec: type_spec •

    $default  reduce using rule 128 (long_type_spec)


State 132

   13 mod_field: tid "=" long_type_spec •

    $default  reduce using rule 13 (mod_field)


State 133

  129 long_type_spec: struct_type_spec •

    $default  reduce using rule 129 (long_type_spec)


State 134

  130 long_type_spec: enum_type_spec •

    $default  reduce using rule 130 (long_type_spec)


State 135

  131 long_type_spec: fn_type_spec •

    $default  reduce using rule 131 (long_type_spec)


State 136

  145 fn_type_spec: vpattern • "->" type_spec

    "->"  shift, and go to state 209


State 137

   48 paren_exp: "(" • long_exp ")"
   49 vtupleExpr: "(" • ")"
   50           | "(" • expr "," ")"
   51           | "(" • expr_cl2 ")"
  172 vpattern: "(" • vpattern_field_cl ")"
  173         | "(" • ")"

    "val_id"                 shift, and go to state 9
    "TypeId"                 shift, and go to state 25
    "if"                     shift, and go to state 77
    "not"                    shift, and go to state 78
    "out"                    shift, and go to state 200
    "inout"                  shift, and go to state 201
    "42"                     shift, and go to state 79
    "0x2a"                   shift, and go to state 80
    "42u"                    shift, and go to state 81
    "0x2Au"                  shift, and go to state 82
    "4.2"                    shift, and go to state 83
    "\"dq-string-literal\""  shift, and go to state 84
    "'sq-string-literal'"    shift, and go to state 85
    "("                      shift, and go to state 137
    ")"                      shift, and go to state 210
    "["                      shift, and go to state 42
    "{"                      shift, and go to state 87
    "+"                      shift, and go to state 88
    "-"                      shift, and go to state 89

    tid                go to state 44
    vid                go to state 211
    floatl             go to state 91
    mod_prefix         go to state 92
    expr               go to state 148
    long_exp           go to state 149
    expr_cl2           go to state 150
    bracketed_exp      go to state 94
    paren_exp          go to state 95
    vtupleExpr         go to state 96
    vstructExpr        go to state 97
    primary_exp        go to state 98
    int_expr           go to state 99
    stringls           go to state 100
    if_exp             go to state 101
    chain_exp          go to state 102
    lambda_exp         go to state 140
    postfix_exp        go to state 103
    vcall_exp          go to state 104
    dot_name_exp       go to state 105
    dot_index_exp      go to state 106
    unary_exp          go to state 107
    unary_op           go to state 108
    binary_exp         go to state 109
    mul_binary_exp     go to state 110
    add_binary_exp     go to state 111
    cmp_binary_exp     go to state 112
    eq_binary_exp      go to state 113
    and_binary_exp     go to state 114
    xor_binary_exp     go to state 115
    or_binary_exp      go to state 116
    type_spec          go to state 141
    mod_prefix_tid     go to state 47
    tuple_type_spec    go to state 48
    array_type_spec    go to state 49
    fn_type_spec       go to state 142
    vpattern_field     go to state 204
    vpattern           go to state 136
    vpattern_field_cl  go to state 205


State 138

   38 long_exp: expr •

    $default  reduce using rule 38 (long_exp)


State 139

   12 mod_field: vid "=" long_exp •

    $default  reduce using rule 12 (mod_field)


State 140

   39 long_exp: lambda_exp •

    $default  reduce using rule 39 (long_exp)


State 141

   83 dot_name_exp: type_spec • "::" "TypeId"
   84             | type_spec • "::" "TypeId" "using" paren_exp

    "::"  shift, and go to state 192


State 142

   75 lambda_exp: fn_type_spec • bracketed_exp

    "("  shift, and go to state 86
    "{"  shift, and go to state 145

    bracketed_exp  go to state 212
    paren_exp      go to state 95
    vtupleExpr     go to state 96
    vstructExpr    go to state 97
    chain_exp      go to state 102


State 143

   14 mod_field: cid "=" class_exp_class_spec •

    $default  reduce using rule 14 (mod_field)


State 144

  160 class_exp_class_spec: "cls" "(" tid class_spec • ")" "{" type_query_exp_sl "}"

    ")"  shift, and go to state 213


State 145

   52 vstructExpr: "{" • struct_exp_field_cl "}"
   70 chain_exp: "{" • long_exp "}"
   71          | "{" • chain_prefix "}"
   72          | "{" • chain_prefix long_exp "}"

    "val_id"                 shift, and go to state 9
    "TypeId"                 shift, and go to state 25
    "if"                     shift, and go to state 77
    "const"                  shift, and go to state 151
    "val"                    shift, and go to state 152
    "var"                    shift, and go to state 153
    "set"                    shift, and go to state 154
    "not"                    shift, and go to state 78
    "discard"                shift, and go to state 155
    "42"                     shift, and go to state 79
    "0x2a"                   shift, and go to state 80
    "42u"                    shift, and go to state 81
    "0x2Au"                  shift, and go to state 82
    "4.2"                    shift, and go to state 83
    "\"dq-string-literal\""  shift, and go to state 84
    "'sq-string-literal'"    shift, and go to state 85
    "("                      shift, and go to state 137
    "["                      shift, and go to state 42
    "{"                      shift, and go to state 87
    "+"                      shift, and go to state 88
    "-"                      shift, and go to state 89

    chain_prefix_stmt    go to state 156
    const_stmt           go to state 157
    val_stmt             go to state 158
    var_stmt             go to state 159
    set_stmt             go to state 160
    discard_stmt         go to state 161
    tid                  go to state 44
    vid                  go to state 162
    floatl               go to state 91
    mod_prefix           go to state 92
    expr                 go to state 138
    long_exp             go to state 163
    bracketed_exp        go to state 94
    paren_exp            go to state 95
    vtupleExpr           go to state 96
    vstructExpr          go to state 97
    primary_exp          go to state 98
    int_expr             go to state 99
    stringls             go to state 100
    if_exp               go to state 101
    chain_exp            go to state 102
    chain_prefix         go to state 164
    lambda_exp           go to state 140
    postfix_exp          go to state 103
    vcall_exp            go to state 104
    dot_name_exp         go to state 105
    dot_index_exp        go to state 106
    unary_exp            go to state 107
    unary_op             go to state 108
    binary_exp           go to state 109
    mul_binary_exp       go to state 110
    add_binary_exp       go to state 111
    cmp_binary_exp       go to state 112
    eq_binary_exp        go to state 113
    and_binary_exp       go to state 114
    xor_binary_exp       go to state 115
    or_binary_exp        go to state 116
    type_spec            go to state 141
    mod_prefix_tid       go to state 47
    tuple_type_spec      go to state 48
    array_type_spec      go to state 49
    fn_type_spec         go to state 142
    struct_exp_field     go to state 166
    vpattern             go to state 136
    struct_exp_field_cl  go to state 167


State 146

   68 if_exp: "if" bracketed_exp • "then" bracketed_exp
   69       | "if" bracketed_exp • "then" bracketed_exp "else" primary_exp

    "then"  shift, and go to state 214


State 147

   49 vtupleExpr: "(" ")" •

    $default  reduce using rule 49 (vtupleExpr)


State 148

   38 long_exp: expr •
   40 expr_cl2: expr • "," expr
   50 vtupleExpr: "(" expr • "," ")"

    ","  shift, and go to state 215

    $default  reduce using rule 38 (long_exp)


State 149

   48 paren_exp: "(" long_exp • ")"

    ")"  shift, and go to state 216


State 150

   41 expr_cl2: expr_cl2 • "," expr
   51 vtupleExpr: "(" expr_cl2 • ")"

    ","  shift, and go to state 217
    ")"  shift, and go to state 218


State 151

   22 const_stmt: "const" • lpattern "=" expr

    "val_id"  shift, and go to state 9
    "{"       shift, and go to state 219

    vid                    go to state 220
    lpattern_field         go to state 221
    destructured_lpattern  go to state 222
    lpattern               go to state 223


State 152

   23 val_stmt: "val" • lpattern "=" expr

    "val_id"  shift, and go to state 9
    "{"       shift, and go to state 219

    vid                    go to state 220
    lpattern_field         go to state 221
    destructured_lpattern  go to state 222
    lpattern               go to state 224


State 153

   24 var_stmt: "var" • lpattern "=" expr

    "val_id"  shift, and go to state 9
    "{"       shift, and go to state 219

    vid                    go to state 220
    lpattern_field         go to state 221
    destructured_lpattern  go to state 222
    lpattern               go to state 225


State 154

   25 set_stmt: "set" • expr "=" expr

    "val_id"                 shift, and go to state 9
    "TypeId"                 shift, and go to state 25
    "if"                     shift, and go to state 77
    "not"                    shift, and go to state 78
    "42"                     shift, and go to state 79
    "0x2a"                   shift, and go to state 80
    "42u"                    shift, and go to state 81
    "0x2Au"                  shift, and go to state 82
    "4.2"                    shift, and go to state 83
    "\"dq-string-literal\""  shift, and go to state 84
    "'sq-string-literal'"    shift, and go to state 85
    "("                      shift, and go to state 86
    "["                      shift, and go to state 42
    "{"                      shift, and go to state 87
    "+"                      shift, and go to state 88
    "-"                      shift, and go to state 89

    tid              go to state 44
    vid              go to state 90
    floatl           go to state 91
    mod_prefix       go to state 92
    expr             go to state 226
    bracketed_exp    go to state 94
    paren_exp        go to state 95
    vtupleExpr       go to state 96
    vstructExpr      go to state 97
    primary_exp      go to state 98
    int_expr         go to state 99
    stringls         go to state 100
    if_exp           go to state 101
    chain_exp        go to state 102
    postfix_exp      go to state 103
    vcall_exp        go to state 104
    dot_name_exp     go to state 105
    dot_index_exp    go to state 106
    unary_exp        go to state 107
    unary_op         go to state 108
    binary_exp       go to state 109
    mul_binary_exp   go to state 110
    add_binary_exp   go to state 111
    cmp_binary_exp   go to state 112
    eq_binary_exp    go to state 113
    and_binary_exp   go to state 114
    xor_binary_exp   go to state 115
    or_binary_exp    go to state 116
    type_spec        go to state 141
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48
    array_type_spec  go to state 49


State 155

   26 discard_stmt: "discard" • expr

    "val_id"                 shift, and go to state 9
    "TypeId"                 shift, and go to state 25
    "if"                     shift, and go to state 77
    "not"                    shift, and go to state 78
    "42"                     shift, and go to state 79
    "0x2a"                   shift, and go to state 80
    "42u"                    shift, and go to state 81
    "0x2Au"                  shift, and go to state 82
    "4.2"                    shift, and go to state 83
    "\"dq-string-literal\""  shift, and go to state 84
    "'sq-string-literal'"    shift, and go to state 85
    "("                      shift, and go to state 86
    "["                      shift, and go to state 42
    "{"                      shift, and go to state 87
    "+"                      shift, and go to state 88
    "-"                      shift, and go to state 89

    tid              go to state 44
    vid              go to state 90
    floatl           go to state 91
    mod_prefix       go to state 92
    expr             go to state 227
    bracketed_exp    go to state 94
    paren_exp        go to state 95
    vtupleExpr       go to state 96
    vstructExpr      go to state 97
    primary_exp      go to state 98
    int_expr         go to state 99
    stringls         go to state 100
    if_exp           go to state 101
    chain_exp        go to state 102
    postfix_exp      go to state 103
    vcall_exp        go to state 104
    dot_name_exp     go to state 105
    dot_index_exp    go to state 106
    unary_exp        go to state 107
    unary_op         go to state 108
    binary_exp       go to state 109
    mul_binary_exp   go to state 110
    add_binary_exp   go to state 111
    cmp_binary_exp   go to state 112
    eq_binary_exp    go to state 113
    and_binary_exp   go to state 114
    xor_binary_exp   go to state 115
    or_binary_exp    go to state 116
    type_spec        go to state 141
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48
    array_type_spec  go to state 49


State 156

   73 chain_prefix: chain_prefix_stmt • ";"

    ";"  shift, and go to state 228


State 157

   17 chain_prefix_stmt: const_stmt •

    $default  reduce using rule 17 (chain_prefix_stmt)


State 158

   18 chain_prefix_stmt: val_stmt •

    $default  reduce using rule 18 (chain_prefix_stmt)


State 159

   19 chain_prefix_stmt: var_stmt •

    $default  reduce using rule 19 (chain_prefix_stmt)


State 160

   20 chain_prefix_stmt: set_stmt •

    $default  reduce using rule 20 (chain_prefix_stmt)


State 161

   21 chain_prefix_stmt: discard_stmt •

    $default  reduce using rule 21 (chain_prefix_stmt)


State 162

   33 mod_prefix: vid • "::"
   34           | vid • "[" targ_cl "]" "::"
   54 primary_exp: vid •
  161 struct_exp_field: vid • ":" expr

    ":"   shift, and go to state 229
    "::"  shift, and go to state 61
    "["   shift, and go to state 62

    $default  reduce using rule 54 (primary_exp)


State 163

   70 chain_exp: "{" long_exp • "}"

    "}"  shift, and go to state 230


State 164

   71 chain_exp: "{" chain_prefix • "}"
   72          | "{" chain_prefix • long_exp "}"
   74 chain_prefix: chain_prefix • chain_prefix_stmt ";"

    "val_id"                 shift, and go to state 9
    "TypeId"                 shift, and go to state 25
    "if"                     shift, and go to state 77
    "const"                  shift, and go to state 151
    "val"                    shift, and go to state 152
    "var"                    shift, and go to state 153
    "set"                    shift, and go to state 154
    "not"                    shift, and go to state 78
    "discard"                shift, and go to state 155
    "42"                     shift, and go to state 79
    "0x2a"                   shift, and go to state 80
    "42u"                    shift, and go to state 81
    "0x2Au"                  shift, and go to state 82
    "4.2"                    shift, and go to state 83
    "\"dq-string-literal\""  shift, and go to state 84
    "'sq-string-literal'"    shift, and go to state 85
    "("                      shift, and go to state 137
    "["                      shift, and go to state 42
    "{"                      shift, and go to state 87
    "}"                      shift, and go to state 231
    "+"                      shift, and go to state 88
    "-"                      shift, and go to state 89

    chain_prefix_stmt  go to state 232
    const_stmt         go to state 157
    val_stmt           go to state 158
    var_stmt           go to state 159
    set_stmt           go to state 160
    discard_stmt       go to state 161
    tid                go to state 44
    vid                go to state 90
    floatl             go to state 91
    mod_prefix         go to state 92
    expr               go to state 138
    long_exp           go to state 233
    bracketed_exp      go to state 94
    paren_exp          go to state 95
    vtupleExpr         go to state 96
    vstructExpr        go to state 97
    primary_exp        go to state 98
    int_expr           go to state 99
    stringls           go to state 100
    if_exp             go to state 101
    chain_exp          go to state 102
    lambda_exp         go to state 140
    postfix_exp        go to state 103
    vcall_exp          go to state 104
    dot_name_exp       go to state 105
    dot_index_exp      go to state 106
    unary_exp          go to state 107
    unary_op           go to state 108
    binary_exp         go to state 109
    mul_binary_exp     go to state 110
    add_binary_exp     go to state 111
    cmp_binary_exp     go to state 112
    eq_binary_exp      go to state 113
    and_binary_exp     go to state 114
    xor_binary_exp     go to state 115
    or_binary_exp      go to state 116
    type_spec          go to state 141
    mod_prefix_tid     go to state 47
    tuple_type_spec    go to state 48
    array_type_spec    go to state 49
    fn_type_spec       go to state 142
    vpattern           go to state 136


State 165

   83 dot_name_exp: type_spec • "::" "TypeId"
   84             | type_spec • "::" "TypeId" "using" paren_exp
  122 type_spec_cl2: type_spec • "," type_spec
  133 tuple_type_spec: "{" type_spec • "}"

    ","   shift, and go to state 125
    "::"  shift, and go to state 192
    "}"   shift, and go to state 126


State 166

  181 struct_exp_field_cl: struct_exp_field •

    $default  reduce using rule 181 (struct_exp_field_cl)


State 167

   52 vstructExpr: "{" struct_exp_field_cl • "}"
  182 struct_exp_field_cl: struct_exp_field_cl • "," struct_exp_field

    ","  shift, and go to state 234
    "}"  shift, and go to state 235


State 168

   35 mod_prefix: mod_prefix vid • "::"
   36           | mod_prefix vid • "[" targ_cl "]" "::"
   59 primary_exp: mod_prefix vid •

    "::"  shift, and go to state 120
    "["   shift, and go to state 121

    $default  reduce using rule 59 (primary_exp)


State 169

   67 stringls: stringls "\"dq-string-literal\"" •

    $default  reduce using rule 67 (stringls)


State 170

   66 stringls: stringls "'sq-string-literal'" •

    $default  reduce using rule 66 (stringls)


State 171

   82 dot_name_exp: postfix_exp "." • "val_id"
   85 dot_index_exp: postfix_exp "." • int_expr
   86              | postfix_exp "." • bracketed_exp

    "val_id"  shift, and go to state 236
    "42"      shift, and go to state 79
    "0x2a"    shift, and go to state 80
    "42u"     shift, and go to state 81
    "0x2Au"   shift, and go to state 82
    "("       shift, and go to state 86
    "{"       shift, and go to state 145

    bracketed_exp  go to state 237
    paren_exp      go to state 95
    vtupleExpr     go to state 96
    vstructExpr    go to state 97
    int_expr       go to state 238
    chain_exp      go to state 102


State 172

   80 vcall_exp: postfix_exp "(" • ")"
   81          | postfix_exp "(" • varg_cl ")"

    "val_id"                 shift, and go to state 9
    "TypeId"                 shift, and go to state 25
    "if"                     shift, and go to state 77
    "not"                    shift, and go to state 78
    "out"                    shift, and go to state 239
    "inout"                  shift, and go to state 240
    "42"                     shift, and go to state 79
    "0x2a"                   shift, and go to state 80
    "42u"                    shift, and go to state 81
    "0x2Au"                  shift, and go to state 82
    "4.2"                    shift, and go to state 83
    "\"dq-string-literal\""  shift, and go to state 84
    "'sq-string-literal'"    shift, and go to state 85
    "("                      shift, and go to state 86
    ")"                      shift, and go to state 241
    "["                      shift, and go to state 42
    "{"                      shift, and go to state 87
    "+"                      shift, and go to state 88
    "-"                      shift, and go to state 89

    tid              go to state 44
    vid              go to state 90
    floatl           go to state 91
    mod_prefix       go to state 92
    expr             go to state 242
    bracketed_exp    go to state 94
    paren_exp        go to state 95
    vtupleExpr       go to state 96
    vstructExpr      go to state 97
    primary_exp      go to state 98
    int_expr         go to state 99
    stringls         go to state 100
    if_exp           go to state 101
    chain_exp        go to state 102
    postfix_exp      go to state 103
    vcall_exp        go to state 104
    dot_name_exp     go to state 105
    dot_index_exp    go to state 106
    unary_exp        go to state 107
    unary_op         go to state 108
    binary_exp       go to state 109
    mul_binary_exp   go to state 110
    add_binary_exp   go to state 111
    cmp_binary_exp   go to state 112
    eq_binary_exp    go to state 113
    and_binary_exp   go to state 114
    xor_binary_exp   go to state 115
    or_binary_exp    go to state 116
    type_spec        go to state 141
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48
    array_type_spec  go to state 49
    varg             go to state 243
    varg_cl          go to state 244


State 173

   88 unary_exp: unary_op unary_exp •

    $default  reduce using rule 88 (unary_exp)


State 174

   93 mul_binary_op: "*" •

    $default  reduce using rule 93 (mul_binary_op)


State 175

   94 mul_binary_op: "/" •

    $default  reduce using rule 94 (mul_binary_op)


State 176

   95 mul_binary_op: "%" •

    $default  reduce using rule 95 (mul_binary_op)


State 177

   97 mul_binary_exp: mul_binary_exp mul_binary_op • unary_exp

    "val_id"                 shift, and go to state 9
    "TypeId"                 shift, and go to state 25
    "if"                     shift, and go to state 77
    "not"                    shift, and go to state 78
    "42"                     shift, and go to state 79
    "0x2a"                   shift, and go to state 80
    "42u"                    shift, and go to state 81
    "0x2Au"                  shift, and go to state 82
    "4.2"                    shift, and go to state 83
    "\"dq-string-literal\""  shift, and go to state 84
    "'sq-string-literal'"    shift, and go to state 85
    "("                      shift, and go to state 86
    "["                      shift, and go to state 42
    "{"                      shift, and go to state 87
    "+"                      shift, and go to state 88
    "-"                      shift, and go to state 89

    tid              go to state 44
    vid              go to state 90
    floatl           go to state 91
    mod_prefix       go to state 92
    bracketed_exp    go to state 94
    paren_exp        go to state 95
    vtupleExpr       go to state 96
    vstructExpr      go to state 97
    primary_exp      go to state 98
    int_expr         go to state 99
    stringls         go to state 100
    if_exp           go to state 101
    chain_exp        go to state 102
    postfix_exp      go to state 103
    vcall_exp        go to state 104
    dot_name_exp     go to state 105
    dot_index_exp    go to state 106
    unary_exp        go to state 245
    unary_op         go to state 108
    type_spec        go to state 141
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48
    array_type_spec  go to state 49


State 178

   98 add_binary_op: "+" •

    $default  reduce using rule 98 (add_binary_op)


State 179

   99 add_binary_op: "-" •

    $default  reduce using rule 99 (add_binary_op)


State 180

  101 add_binary_exp: add_binary_exp add_binary_op • mul_binary_exp

    "val_id"                 shift, and go to state 9
    "TypeId"                 shift, and go to state 25
    "if"                     shift, and go to state 77
    "not"                    shift, and go to state 78
    "42"                     shift, and go to state 79
    "0x2a"                   shift, and go to state 80
    "42u"                    shift, and go to state 81
    "0x2Au"                  shift, and go to state 82
    "4.2"                    shift, and go to state 83
    "\"dq-string-literal\""  shift, and go to state 84
    "'sq-string-literal'"    shift, and go to state 85
    "("                      shift, and go to state 86
    "["                      shift, and go to state 42
    "{"                      shift, and go to state 87
    "+"                      shift, and go to state 88
    "-"                      shift, and go to state 89

    tid              go to state 44
    vid              go to state 90
    floatl           go to state 91
    mod_prefix       go to state 92
    bracketed_exp    go to state 94
    paren_exp        go to state 95
    vtupleExpr       go to state 96
    vstructExpr      go to state 97
    primary_exp      go to state 98
    int_expr         go to state 99
    stringls         go to state 100
    if_exp           go to state 101
    chain_exp        go to state 102
    postfix_exp      go to state 103
    vcall_exp        go to state 104
    dot_name_exp     go to state 105
    dot_index_exp    go to state 106
    unary_exp        go to state 107
    unary_op         go to state 108
    mul_binary_exp   go to state 246
    type_spec        go to state 141
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48
    array_type_spec  go to state 49


State 181

  102 cmp_binary_op: "<" •

    $default  reduce using rule 102 (cmp_binary_op)


State 182

  103 cmp_binary_op: "<=" •

    $default  reduce using rule 103 (cmp_binary_op)


State 183

  104 cmp_binary_op: ">" •

    $default  reduce using rule 104 (cmp_binary_op)


State 184

  105 cmp_binary_op: ">=" •

    $default  reduce using rule 105 (cmp_binary_op)


State 185

  107 cmp_binary_exp: cmp_binary_exp cmp_binary_op • add_binary_exp

    "val_id"                 shift, and go to state 9
    "TypeId"                 shift, and go to state 25
    "if"                     shift, and go to state 77
    "not"                    shift, and go to state 78
    "42"                     shift, and go to state 79
    "0x2a"                   shift, and go to state 80
    "42u"                    shift, and go to state 81
    "0x2Au"                  shift, and go to state 82
    "4.2"                    shift, and go to state 83
    "\"dq-string-literal\""  shift, and go to state 84
    "'sq-string-literal'"    shift, and go to state 85
    "("                      shift, and go to state 86
    "["                      shift, and go to state 42
    "{"                      shift, and go to state 87
    "+"                      shift, and go to state 88
    "-"                      shift, and go to state 89

    tid              go to state 44
    vid              go to state 90
    floatl           go to state 91
    mod_prefix       go to state 92
    bracketed_exp    go to state 94
    paren_exp        go to state 95
    vtupleExpr       go to state 96
    vstructExpr      go to state 97
    primary_exp      go to state 98
    int_expr         go to state 99
    stringls         go to state 100
    if_exp           go to state 101
    chain_exp        go to state 102
    postfix_exp      go to state 103
    vcall_exp        go to state 104
    dot_name_exp     go to state 105
    dot_index_exp    go to state 106
    unary_exp        go to state 107
    unary_op         go to state 108
    mul_binary_exp   go to state 110
    add_binary_exp   go to state 247
    type_spec        go to state 141
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48
    array_type_spec  go to state 49


State 186

  108 eq_binary_op: "==" •

    $default  reduce using rule 108 (eq_binary_op)


State 187

  109 eq_binary_op: "!=" •

    $default  reduce using rule 109 (eq_binary_op)


State 188

  111 eq_binary_exp: eq_binary_exp eq_binary_op • cmp_binary_exp

    "val_id"                 shift, and go to state 9
    "TypeId"                 shift, and go to state 25
    "if"                     shift, and go to state 77
    "not"                    shift, and go to state 78
    "42"                     shift, and go to state 79
    "0x2a"                   shift, and go to state 80
    "42u"                    shift, and go to state 81
    "0x2Au"                  shift, and go to state 82
    "4.2"                    shift, and go to state 83
    "\"dq-string-literal\""  shift, and go to state 84
    "'sq-string-literal'"    shift, and go to state 85
    "("                      shift, and go to state 86
    "["                      shift, and go to state 42
    "{"                      shift, and go to state 87
    "+"                      shift, and go to state 88
    "-"                      shift, and go to state 89

    tid              go to state 44
    vid              go to state 90
    floatl           go to state 91
    mod_prefix       go to state 92
    bracketed_exp    go to state 94
    paren_exp        go to state 95
    vtupleExpr       go to state 96
    vstructExpr      go to state 97
    primary_exp      go to state 98
    int_expr         go to state 99
    stringls         go to state 100
    if_exp           go to state 101
    chain_exp        go to state 102
    postfix_exp      go to state 103
    vcall_exp        go to state 104
    dot_name_exp     go to state 105
    dot_index_exp    go to state 106
    unary_exp        go to state 107
    unary_op         go to state 108
    mul_binary_exp   go to state 110
    add_binary_exp   go to state 111
    cmp_binary_exp   go to state 248
    type_spec        go to state 141
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48
    array_type_spec  go to state 49


State 189

  113 and_binary_exp: and_binary_exp "and" • eq_binary_exp

    "val_id"                 shift, and go to state 9
    "TypeId"                 shift, and go to state 25
    "if"                     shift, and go to state 77
    "not"                    shift, and go to state 78
    "42"                     shift, and go to state 79
    "0x2a"                   shift, and go to state 80
    "42u"                    shift, and go to state 81
    "0x2Au"                  shift, and go to state 82
    "4.2"                    shift, and go to state 83
    "\"dq-string-literal\""  shift, and go to state 84
    "'sq-string-literal'"    shift, and go to state 85
    "("                      shift, and go to state 86
    "["                      shift, and go to state 42
    "{"                      shift, and go to state 87
    "+"                      shift, and go to state 88
    "-"                      shift, and go to state 89

    tid              go to state 44
    vid              go to state 90
    floatl           go to state 91
    mod_prefix       go to state 92
    bracketed_exp    go to state 94
    paren_exp        go to state 95
    vtupleExpr       go to state 96
    vstructExpr      go to state 97
    primary_exp      go to state 98
    int_expr         go to state 99
    stringls         go to state 100
    if_exp           go to state 101
    chain_exp        go to state 102
    postfix_exp      go to state 103
    vcall_exp        go to state 104
    dot_name_exp     go to state 105
    dot_index_exp    go to state 106
    unary_exp        go to state 107
    unary_op         go to state 108
    mul_binary_exp   go to state 110
    add_binary_exp   go to state 111
    cmp_binary_exp   go to state 112
    eq_binary_exp    go to state 249
    type_spec        go to state 141
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48
    array_type_spec  go to state 49


State 190

  115 xor_binary_exp: xor_binary_exp "xor" • and_binary_exp

    "val_id"                 shift, and go to state 9
    "TypeId"                 shift, and go to state 25
    "if"                     shift, and go to state 77
    "not"                    shift, and go to state 78
    "42"                     shift, and go to state 79
    "0x2a"                   shift, and go to state 80
    "42u"                    shift, and go to state 81
    "0x2Au"                  shift, and go to state 82
    "4.2"                    shift, and go to state 83
    "\"dq-string-literal\""  shift, and go to state 84
    "'sq-string-literal'"    shift, and go to state 85
    "("                      shift, and go to state 86
    "["                      shift, and go to state 42
    "{"                      shift, and go to state 87
    "+"                      shift, and go to state 88
    "-"                      shift, and go to state 89

    tid              go to state 44
    vid              go to state 90
    floatl           go to state 91
    mod_prefix       go to state 92
    bracketed_exp    go to state 94
    paren_exp        go to state 95
    vtupleExpr       go to state 96
    vstructExpr      go to state 97
    primary_exp      go to state 98
    int_expr         go to state 99
    stringls         go to state 100
    if_exp           go to state 101
    chain_exp        go to state 102
    postfix_exp      go to state 103
    vcall_exp        go to state 104
    dot_name_exp     go to state 105
    dot_index_exp    go to state 106
    unary_exp        go to state 107
    unary_op         go to state 108
    mul_binary_exp   go to state 110
    add_binary_exp   go to state 111
    cmp_binary_exp   go to state 112
    eq_binary_exp    go to state 113
    and_binary_exp   go to state 250
    type_spec        go to state 141
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48
    array_type_spec  go to state 49


State 191

  117 or_binary_exp: or_binary_exp "or" • xor_binary_exp

    "val_id"                 shift, and go to state 9
    "TypeId"                 shift, and go to state 25
    "if"                     shift, and go to state 77
    "not"                    shift, and go to state 78
    "42"                     shift, and go to state 79
    "0x2a"                   shift, and go to state 80
    "42u"                    shift, and go to state 81
    "0x2Au"                  shift, and go to state 82
    "4.2"                    shift, and go to state 83
    "\"dq-string-literal\""  shift, and go to state 84
    "'sq-string-literal'"    shift, and go to state 85
    "("                      shift, and go to state 86
    "["                      shift, and go to state 42
    "{"                      shift, and go to state 87
    "+"                      shift, and go to state 88
    "-"                      shift, and go to state 89

    tid              go to state 44
    vid              go to state 90
    floatl           go to state 91
    mod_prefix       go to state 92
    bracketed_exp    go to state 94
    paren_exp        go to state 95
    vtupleExpr       go to state 96
    vstructExpr      go to state 97
    primary_exp      go to state 98
    int_expr         go to state 99
    stringls         go to state 100
    if_exp           go to state 101
    chain_exp        go to state 102
    postfix_exp      go to state 103
    vcall_exp        go to state 104
    dot_name_exp     go to state 105
    dot_index_exp    go to state 106
    unary_exp        go to state 107
    unary_op         go to state 108
    mul_binary_exp   go to state 110
    add_binary_exp   go to state 111
    cmp_binary_exp   go to state 112
    eq_binary_exp    go to state 113
    and_binary_exp   go to state 114
    xor_binary_exp   go to state 251
    type_spec        go to state 141
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48
    array_type_spec  go to state 49


State 192

   83 dot_name_exp: type_spec "::" • "TypeId"
   84             | type_spec "::" • "TypeId" "using" paren_exp

    "TypeId"  shift, and go to state 252


State 193

  149 targ_cl: targ_cl "," • targ

    "val_id"                 shift, and go to state 9
    "TypeId"                 shift, and go to state 25
    "if"                     shift, and go to state 77
    "not"                    shift, and go to state 78
    "42"                     shift, and go to state 79
    "0x2a"                   shift, and go to state 80
    "42u"                    shift, and go to state 81
    "0x2Au"                  shift, and go to state 82
    "4.2"                    shift, and go to state 83
    "\"dq-string-literal\""  shift, and go to state 84
    "'sq-string-literal'"    shift, and go to state 85
    "("                      shift, and go to state 86
    "["                      shift, and go to state 42
    "{"                      shift, and go to state 87
    "+"                      shift, and go to state 88
    "-"                      shift, and go to state 89

    tid              go to state 44
    vid              go to state 90
    floatl           go to state 91
    mod_prefix       go to state 92
    expr             go to state 93
    bracketed_exp    go to state 94
    paren_exp        go to state 95
    vtupleExpr       go to state 96
    vstructExpr      go to state 97
    primary_exp      go to state 98
    int_expr         go to state 99
    stringls         go to state 100
    if_exp           go to state 101
    chain_exp        go to state 102
    postfix_exp      go to state 103
    vcall_exp        go to state 104
    dot_name_exp     go to state 105
    dot_index_exp    go to state 106
    unary_exp        go to state 107
    unary_op         go to state 108
    binary_exp       go to state 109
    mul_binary_exp   go to state 110
    add_binary_exp   go to state 111
    cmp_binary_exp   go to state 112
    eq_binary_exp    go to state 113
    and_binary_exp   go to state 114
    xor_binary_exp   go to state 115
    or_binary_exp    go to state 116
    type_spec        go to state 117
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48
    array_type_spec  go to state 49
    targ             go to state 253


State 194

   34 mod_prefix: vid "[" targ_cl "]" • "::"

    "::"  shift, and go to state 254


State 195

   36 mod_prefix: mod_prefix vid "[" targ_cl • "]" "::"
  149 targ_cl: targ_cl • "," targ

    ","  shift, and go to state 193
    "]"  shift, and go to state 255


State 196

  135 array_type_spec: "[" type_spec "/" expr • "]"

    "]"  shift, and go to state 256


State 197

  123 type_spec_cl2: type_spec_cl2 "," type_spec •

    $default  reduce using rule 123 (type_spec_cl2)


State 198

  122 type_spec_cl2: type_spec "," type_spec •

    $default  reduce using rule 122 (type_spec_cl2)


State 199

  144 enum_type_spec: "enum" "{" • enum_type_spec_field_cl "}"

    "TypeId"  shift, and go to state 25

    tid                      go to state 257
    enum_type_spec_field     go to state 258
    enum_type_spec_field_cl  go to state 259


State 200

  163 vpattern_field: "out" • vid type_spec

    "val_id"  shift, and go to state 9

    vid  go to state 260


State 201

  164 vpattern_field: "inout" • vid type_spec

    "val_id"  shift, and go to state 9

    vid  go to state 261


State 202

  173 vpattern: "(" ")" •

    $default  reduce using rule 173 (vpattern)


State 203

  162 vpattern_field: vid • type_spec

    "val_id"  shift, and go to state 9
    "TypeId"  shift, and go to state 25
    "["       shift, and go to state 42
    "{"       shift, and go to state 43

    tid              go to state 44
    vid              go to state 35
    mod_prefix       go to state 45
    type_spec        go to state 262
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48
    array_type_spec  go to state 49


State 204

  175 vpattern_field_cl: vpattern_field •

    $default  reduce using rule 175 (vpattern_field_cl)


State 205

  172 vpattern: "(" vpattern_field_cl • ")"
  176 vpattern_field_cl: vpattern_field_cl • "," vpattern_field

    ","  shift, and go to state 263
    ")"  shift, and go to state 264


State 206

   33 mod_prefix: vid • "::"
   34           | vid • "[" targ_cl "]" "::"
  139 struct_type_spec_field: vid • long_type_spec

    "val_id"  shift, and go to state 9
    "TypeId"  shift, and go to state 25
    "enum"    shift, and go to state 128
    "::"      shift, and go to state 61
    "("       shift, and go to state 129
    "["       shift, and go to state 265
    "{"       shift, and go to state 130

    tid               go to state 44
    vid               go to state 35
    mod_prefix        go to state 45
    type_spec         go to state 131
    long_type_spec    go to state 266
    mod_prefix_tid    go to state 47
    tuple_type_spec   go to state 48
    array_type_spec   go to state 49
    struct_type_spec  go to state 133
    enum_type_spec    go to state 134
    fn_type_spec      go to state 135
    vpattern          go to state 136


State 207

  136 struct_type_spec: "{" struct_type_spec_field_cl • "}"
  138 struct_type_spec_field_cl: struct_type_spec_field_cl • "," struct_type_spec_field

    ","  shift, and go to state 267
    "}"  shift, and go to state 268


State 208

  137 struct_type_spec_field_cl: struct_type_spec_field •

    $default  reduce using rule 137 (struct_type_spec_field_cl)


State 209

  145 fn_type_spec: vpattern "->" • type_spec

    "val_id"  shift, and go to state 9
    "TypeId"  shift, and go to state 25
    "["       shift, and go to state 42
    "{"       shift, and go to state 43

    tid              go to state 44
    vid              go to state 35
    mod_prefix       go to state 45
    type_spec        go to state 269
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48
    array_type_spec  go to state 49


State 210

   49 vtupleExpr: "(" ")" •
  173 vpattern: "(" ")" •

    "->"      reduce using rule 173 (vpattern)
    $default  reduce using rule 49 (vtupleExpr)


State 211

   33 mod_prefix: vid • "::"
   34           | vid • "[" targ_cl "]" "::"
   54 primary_exp: vid •
  162 vpattern_field: vid • type_spec

    "val_id"  shift, and go to state 9
    "TypeId"  shift, and go to state 25
    "::"      shift, and go to state 61
    "["       shift, and go to state 265
    "{"       shift, and go to state 43

    $default  reduce using rule 54 (primary_exp)

    tid              go to state 44
    vid              go to state 35
    mod_prefix       go to state 45
    type_spec        go to state 262
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48
    array_type_spec  go to state 49


State 212

   75 lambda_exp: fn_type_spec bracketed_exp •

    $default  reduce using rule 75 (lambda_exp)


State 213

  160 class_exp_class_spec: "cls" "(" tid class_spec ")" • "{" type_query_exp_sl "}"

    "{"  shift, and go to state 270


State 214

   68 if_exp: "if" bracketed_exp "then" • bracketed_exp
   69       | "if" bracketed_exp "then" • bracketed_exp "else" primary_exp

    "("  shift, and go to state 86
    "{"  shift, and go to state 145

    bracketed_exp  go to state 271
    paren_exp      go to state 95
    vtupleExpr     go to state 96
    vstructExpr    go to state 97
    chain_exp      go to state 102


State 215

   40 expr_cl2: expr "," • expr
   50 vtupleExpr: "(" expr "," • ")"

    "val_id"                 shift, and go to state 9
    "TypeId"                 shift, and go to state 25
    "if"                     shift, and go to state 77
    "not"                    shift, and go to state 78
    "42"                     shift, and go to state 79
    "0x2a"                   shift, and go to state 80
    "42u"                    shift, and go to state 81
    "0x2Au"                  shift, and go to state 82
    "4.2"                    shift, and go to state 83
    "\"dq-string-literal\""  shift, and go to state 84
    "'sq-string-literal'"    shift, and go to state 85
    "("                      shift, and go to state 86
    ")"                      shift, and go to state 272
    "["                      shift, and go to state 42
    "{"                      shift, and go to state 87
    "+"                      shift, and go to state 88
    "-"                      shift, and go to state 89

    tid              go to state 44
    vid              go to state 90
    floatl           go to state 91
    mod_prefix       go to state 92
    expr             go to state 273
    bracketed_exp    go to state 94
    paren_exp        go to state 95
    vtupleExpr       go to state 96
    vstructExpr      go to state 97
    primary_exp      go to state 98
    int_expr         go to state 99
    stringls         go to state 100
    if_exp           go to state 101
    chain_exp        go to state 102
    postfix_exp      go to state 103
    vcall_exp        go to state 104
    dot_name_exp     go to state 105
    dot_index_exp    go to state 106
    unary_exp        go to state 107
    unary_op         go to state 108
    binary_exp       go to state 109
    mul_binary_exp   go to state 110
    add_binary_exp   go to state 111
    cmp_binary_exp   go to state 112
    eq_binary_exp    go to state 113
    and_binary_exp   go to state 114
    xor_binary_exp   go to state 115
    or_binary_exp    go to state 116
    type_spec        go to state 141
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48
    array_type_spec  go to state 49


State 216

   48 paren_exp: "(" long_exp ")" •

    $default  reduce using rule 48 (paren_exp)


State 217

   41 expr_cl2: expr_cl2 "," • expr

    "val_id"                 shift, and go to state 9
    "TypeId"                 shift, and go to state 25
    "if"                     shift, and go to state 77
    "not"                    shift, and go to state 78
    "42"                     shift, and go to state 79
    "0x2a"                   shift, and go to state 80
    "42u"                    shift, and go to state 81
    "0x2Au"                  shift, and go to state 82
    "4.2"                    shift, and go to state 83
    "\"dq-string-literal\""  shift, and go to state 84
    "'sq-string-literal'"    shift, and go to state 85
    "("                      shift, and go to state 86
    "["                      shift, and go to state 42
    "{"                      shift, and go to state 87
    "+"                      shift, and go to state 88
    "-"                      shift, and go to state 89

    tid              go to state 44
    vid              go to state 90
    floatl           go to state 91
    mod_prefix       go to state 92
    expr             go to state 274
    bracketed_exp    go to state 94
    paren_exp        go to state 95
    vtupleExpr       go to state 96
    vstructExpr      go to state 97
    primary_exp      go to state 98
    int_expr         go to state 99
    stringls         go to state 100
    if_exp           go to state 101
    chain_exp        go to state 102
    postfix_exp      go to state 103
    vcall_exp        go to state 104
    dot_name_exp     go to state 105
    dot_index_exp    go to state 106
    unary_exp        go to state 107
    unary_op         go to state 108
    binary_exp       go to state 109
    mul_binary_exp   go to state 110
    add_binary_exp   go to state 111
    cmp_binary_exp   go to state 112
    eq_binary_exp    go to state 113
    and_binary_exp   go to state 114
    xor_binary_exp   go to state 115
    or_binary_exp    go to state 116
    type_spec        go to state 141
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48
    array_type_spec  go to state 49


State 218

   51 vtupleExpr: "(" expr_cl2 ")" •

    $default  reduce using rule 51 (vtupleExpr)


State 219

  169 destructured_lpattern: "{" • lpattern_field_cl "}"

    "val_id"  shift, and go to state 9

    vid                go to state 220
    lpattern_field     go to state 275
    lpattern_field_cl  go to state 276


State 220

  165 lpattern_field: vid • type_spec
  166               | vid •

    "val_id"  shift, and go to state 9
    "TypeId"  shift, and go to state 25
    "["       shift, and go to state 42
    "{"       shift, and go to state 43

    $default  reduce using rule 166 (lpattern_field)

    tid              go to state 44
    vid              go to state 35
    mod_prefix       go to state 45
    type_spec        go to state 277
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48
    array_type_spec  go to state 49


State 221

  170 lpattern: lpattern_field •

    $default  reduce using rule 170 (lpattern)


State 222

  171 lpattern: destructured_lpattern •

    $default  reduce using rule 171 (lpattern)


State 223

   22 const_stmt: "const" lpattern • "=" expr

    "="  shift, and go to state 278


State 224

   23 val_stmt: "val" lpattern • "=" expr

    "="  shift, and go to state 279


State 225

   24 var_stmt: "var" lpattern • "=" expr

    "="  shift, and go to state 280


State 226

   25 set_stmt: "set" expr • "=" expr

    "="  shift, and go to state 281


State 227

   26 discard_stmt: "discard" expr •

    $default  reduce using rule 26 (discard_stmt)


State 228

   73 chain_prefix: chain_prefix_stmt ";" •

    $default  reduce using rule 73 (chain_prefix)


State 229

  161 struct_exp_field: vid ":" • expr

    "val_id"                 shift, and go to state 9
    "TypeId"                 shift, and go to state 25
    "if"                     shift, and go to state 77
    "not"                    shift, and go to state 78
    "42"                     shift, and go to state 79
    "0x2a"                   shift, and go to state 80
    "42u"                    shift, and go to state 81
    "0x2Au"                  shift, and go to state 82
    "4.2"                    shift, and go to state 83
    "\"dq-string-literal\""  shift, and go to state 84
    "'sq-string-literal'"    shift, and go to state 85
    "("                      shift, and go to state 86
    "["                      shift, and go to state 42
    "{"                      shift, and go to state 87
    "+"                      shift, and go to state 88
    "-"                      shift, and go to state 89

    tid              go to state 44
    vid              go to state 90
    floatl           go to state 91
    mod_prefix       go to state 92
    expr             go to state 282
    bracketed_exp    go to state 94
    paren_exp        go to state 95
    vtupleExpr       go to state 96
    vstructExpr      go to state 97
    primary_exp      go to state 98
    int_expr         go to state 99
    stringls         go to state 100
    if_exp           go to state 101
    chain_exp        go to state 102
    postfix_exp      go to state 103
    vcall_exp        go to state 104
    dot_name_exp     go to state 105
    dot_index_exp    go to state 106
    unary_exp        go to state 107
    unary_op         go to state 108
    binary_exp       go to state 109
    mul_binary_exp   go to state 110
    add_binary_exp   go to state 111
    cmp_binary_exp   go to state 112
    eq_binary_exp    go to state 113
    and_binary_exp   go to state 114
    xor_binary_exp   go to state 115
    or_binary_exp    go to state 116
    type_spec        go to state 141
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48
    array_type_spec  go to state 49


State 230

   70 chain_exp: "{" long_exp "}" •

    $default  reduce using rule 70 (chain_exp)


State 231

   71 chain_exp: "{" chain_prefix "}" •

    $default  reduce using rule 71 (chain_exp)


State 232

   74 chain_prefix: chain_prefix chain_prefix_stmt • ";"

    ";"  shift, and go to state 283


State 233

   72 chain_exp: "{" chain_prefix long_exp • "}"

    "}"  shift, and go to state 284


State 234

  182 struct_exp_field_cl: struct_exp_field_cl "," • struct_exp_field

    "val_id"  shift, and go to state 9

    vid               go to state 285
    struct_exp_field  go to state 286


State 235

   52 vstructExpr: "{" struct_exp_field_cl "}" •

    $default  reduce using rule 52 (vstructExpr)


State 236

   82 dot_name_exp: postfix_exp "." "val_id" •

    $default  reduce using rule 82 (dot_name_exp)


State 237

   86 dot_index_exp: postfix_exp "." bracketed_exp •

    $default  reduce using rule 86 (dot_index_exp)


State 238

   85 dot_index_exp: postfix_exp "." int_expr •

    $default  reduce using rule 85 (dot_index_exp)


State 239

  151 varg: "out" • expr

    "val_id"                 shift, and go to state 9
    "TypeId"                 shift, and go to state 25
    "if"                     shift, and go to state 77
    "not"                    shift, and go to state 78
    "42"                     shift, and go to state 79
    "0x2a"                   shift, and go to state 80
    "42u"                    shift, and go to state 81
    "0x2Au"                  shift, and go to state 82
    "4.2"                    shift, and go to state 83
    "\"dq-string-literal\""  shift, and go to state 84
    "'sq-string-literal'"    shift, and go to state 85
    "("                      shift, and go to state 86
    "["                      shift, and go to state 42
    "{"                      shift, and go to state 87
    "+"                      shift, and go to state 88
    "-"                      shift, and go to state 89

    tid              go to state 44
    vid              go to state 90
    floatl           go to state 91
    mod_prefix       go to state 92
    expr             go to state 287
    bracketed_exp    go to state 94
    paren_exp        go to state 95
    vtupleExpr       go to state 96
    vstructExpr      go to state 97
    primary_exp      go to state 98
    int_expr         go to state 99
    stringls         go to state 100
    if_exp           go to state 101
    chain_exp        go to state 102
    postfix_exp      go to state 103
    vcall_exp        go to state 104
    dot_name_exp     go to state 105
    dot_index_exp    go to state 106
    unary_exp        go to state 107
    unary_op         go to state 108
    binary_exp       go to state 109
    mul_binary_exp   go to state 110
    add_binary_exp   go to state 111
    cmp_binary_exp   go to state 112
    eq_binary_exp    go to state 113
    and_binary_exp   go to state 114
    xor_binary_exp   go to state 115
    or_binary_exp    go to state 116
    type_spec        go to state 141
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48
    array_type_spec  go to state 49


State 240

  152 varg: "inout" • expr

    "val_id"                 shift, and go to state 9
    "TypeId"                 shift, and go to state 25
    "if"                     shift, and go to state 77
    "not"                    shift, and go to state 78
    "42"                     shift, and go to state 79
    "0x2a"                   shift, and go to state 80
    "42u"                    shift, and go to state 81
    "0x2Au"                  shift, and go to state 82
    "4.2"                    shift, and go to state 83
    "\"dq-string-literal\""  shift, and go to state 84
    "'sq-string-literal'"    shift, and go to state 85
    "("                      shift, and go to state 86
    "["                      shift, and go to state 42
    "{"                      shift, and go to state 87
    "+"                      shift, and go to state 88
    "-"                      shift, and go to state 89

    tid              go to state 44
    vid              go to state 90
    floatl           go to state 91
    mod_prefix       go to state 92
    expr             go to state 288
    bracketed_exp    go to state 94
    paren_exp        go to state 95
    vtupleExpr       go to state 96
    vstructExpr      go to state 97
    primary_exp      go to state 98
    int_expr         go to state 99
    stringls         go to state 100
    if_exp           go to state 101
    chain_exp        go to state 102
    postfix_exp      go to state 103
    vcall_exp        go to state 104
    dot_name_exp     go to state 105
    dot_index_exp    go to state 106
    unary_exp        go to state 107
    unary_op         go to state 108
    binary_exp       go to state 109
    mul_binary_exp   go to state 110
    add_binary_exp   go to state 111
    cmp_binary_exp   go to state 112
    eq_binary_exp    go to state 113
    and_binary_exp   go to state 114
    xor_binary_exp   go to state 115
    or_binary_exp    go to state 116
    type_spec        go to state 141
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48
    array_type_spec  go to state 49


State 241

   80 vcall_exp: postfix_exp "(" ")" •

    $default  reduce using rule 80 (vcall_exp)


State 242

  150 varg: expr •

    $default  reduce using rule 150 (varg)


State 243

  153 varg_cl: varg •

    $default  reduce using rule 153 (varg_cl)


State 244

   81 vcall_exp: postfix_exp "(" varg_cl • ")"
  154 varg_cl: varg_cl • "," varg

    ","  shift, and go to state 289
    ")"  shift, and go to state 290


State 245

   97 mul_binary_exp: mul_binary_exp mul_binary_op unary_exp •

    $default  reduce using rule 97 (mul_binary_exp)


State 246

   97 mul_binary_exp: mul_binary_exp • mul_binary_op unary_exp
  101 add_binary_exp: add_binary_exp add_binary_op mul_binary_exp •

    "*"  shift, and go to state 174
    "/"  shift, and go to state 175
    "%"  shift, and go to state 176

    $default  reduce using rule 101 (add_binary_exp)

    mul_binary_op  go to state 177


State 247

  101 add_binary_exp: add_binary_exp • add_binary_op mul_binary_exp
  107 cmp_binary_exp: cmp_binary_exp cmp_binary_op add_binary_exp •

    "+"  shift, and go to state 178
    "-"  shift, and go to state 179

    $default  reduce using rule 107 (cmp_binary_exp)

    add_binary_op  go to state 180


State 248

  107 cmp_binary_exp: cmp_binary_exp • cmp_binary_op add_binary_exp
  111 eq_binary_exp: eq_binary_exp eq_binary_op cmp_binary_exp •

    "<"   shift, and go to state 181
    "<="  shift, and go to state 182
    ">"   shift, and go to state 183
    ">="  shift, and go to state 184

    $default  reduce using rule 111 (eq_binary_exp)

    cmp_binary_op  go to state 185


State 249

  111 eq_binary_exp: eq_binary_exp • eq_binary_op cmp_binary_exp
  113 and_binary_exp: and_binary_exp "and" eq_binary_exp •

    "=="  shift, and go to state 186
    "!="  shift, and go to state 187

    $default  reduce using rule 113 (and_binary_exp)

    eq_binary_op  go to state 188


State 250

  113 and_binary_exp: and_binary_exp • "and" eq_binary_exp
  115 xor_binary_exp: xor_binary_exp "xor" and_binary_exp •

    "and"  shift, and go to state 189

    $default  reduce using rule 115 (xor_binary_exp)


State 251

  115 xor_binary_exp: xor_binary_exp • "xor" and_binary_exp
  117 or_binary_exp: or_binary_exp "or" xor_binary_exp •

    "xor"  shift, and go to state 190

    $default  reduce using rule 117 (or_binary_exp)


State 252

   83 dot_name_exp: type_spec "::" "TypeId" •
   84             | type_spec "::" "TypeId" • "using" paren_exp

    "using"  shift, and go to state 291

    $default  reduce using rule 83 (dot_name_exp)


State 253

  149 targ_cl: targ_cl "," targ •

    $default  reduce using rule 149 (targ_cl)


State 254

   34 mod_prefix: vid "[" targ_cl "]" "::" •

    $default  reduce using rule 34 (mod_prefix)


State 255

   36 mod_prefix: mod_prefix vid "[" targ_cl "]" • "::"

    "::"  shift, and go to state 292


State 256

  135 array_type_spec: "[" type_spec "/" expr "]" •

    $default  reduce using rule 135 (array_type_spec)


State 257

  140 enum_type_spec_field: tid •
  141                     | tid • long_type_spec

    "val_id"  shift, and go to state 9
    "TypeId"  shift, and go to state 25
    "enum"    shift, and go to state 128
    "("       shift, and go to state 129
    "["       shift, and go to state 42
    "{"       shift, and go to state 130

    $default  reduce using rule 140 (enum_type_spec_field)

    tid               go to state 44
    vid               go to state 35
    mod_prefix        go to state 45
    type_spec         go to state 131
    long_type_spec    go to state 293
    mod_prefix_tid    go to state 47
    tuple_type_spec   go to state 48
    array_type_spec   go to state 49
    struct_type_spec  go to state 133
    enum_type_spec    go to state 134
    fn_type_spec      go to state 135
    vpattern          go to state 136


State 258

  142 enum_type_spec_field_cl: enum_type_spec_field •

    $default  reduce using rule 142 (enum_type_spec_field_cl)


State 259

  143 enum_type_spec_field_cl: enum_type_spec_field_cl • "," enum_type_spec_field
  144 enum_type_spec: "enum" "{" enum_type_spec_field_cl • "}"

    ","  shift, and go to state 294
    "}"  shift, and go to state 295


State 260

  163 vpattern_field: "out" vid • type_spec

    "val_id"  shift, and go to state 9
    "TypeId"  shift, and go to state 25
    "["       shift, and go to state 42
    "{"       shift, and go to state 43

    tid              go to state 44
    vid              go to state 35
    mod_prefix       go to state 45
    type_spec        go to state 296
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48
    array_type_spec  go to state 49


State 261

  164 vpattern_field: "inout" vid • type_spec

    "val_id"  shift, and go to state 9
    "TypeId"  shift, and go to state 25
    "["       shift, and go to state 42
    "{"       shift, and go to state 43

    tid              go to state 44
    vid              go to state 35
    mod_prefix       go to state 45
    type_spec        go to state 297
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48
    array_type_spec  go to state 49


State 262

  162 vpattern_field: vid type_spec •

    $default  reduce using rule 162 (vpattern_field)


State 263

  176 vpattern_field_cl: vpattern_field_cl "," • vpattern_field

    "val_id"  shift, and go to state 9
    "out"     shift, and go to state 200
    "inout"   shift, and go to state 201

    vid             go to state 203
    vpattern_field  go to state 298


State 264

  172 vpattern: "(" vpattern_field_cl ")" •

    $default  reduce using rule 172 (vpattern)


State 265

   34 mod_prefix: vid "[" • targ_cl "]" "::"
  135 array_type_spec: "[" • type_spec "/" expr "]"

    "val_id"                 shift, and go to state 9
    "TypeId"                 shift, and go to state 25
    "if"                     shift, and go to state 77
    "not"                    shift, and go to state 78
    "42"                     shift, and go to state 79
    "0x2a"                   shift, and go to state 80
    "42u"                    shift, and go to state 81
    "0x2Au"                  shift, and go to state 82
    "4.2"                    shift, and go to state 83
    "\"dq-string-literal\""  shift, and go to state 84
    "'sq-string-literal'"    shift, and go to state 85
    "("                      shift, and go to state 86
    "["                      shift, and go to state 42
    "{"                      shift, and go to state 87
    "+"                      shift, and go to state 88
    "-"                      shift, and go to state 89

    tid              go to state 44
    vid              go to state 90
    floatl           go to state 91
    mod_prefix       go to state 92
    expr             go to state 93
    bracketed_exp    go to state 94
    paren_exp        go to state 95
    vtupleExpr       go to state 96
    vstructExpr      go to state 97
    primary_exp      go to state 98
    int_expr         go to state 99
    stringls         go to state 100
    if_exp           go to state 101
    chain_exp        go to state 102
    postfix_exp      go to state 103
    vcall_exp        go to state 104
    dot_name_exp     go to state 105
    dot_index_exp    go to state 106
    unary_exp        go to state 107
    unary_op         go to state 108
    binary_exp       go to state 109
    mul_binary_exp   go to state 110
    add_binary_exp   go to state 111
    cmp_binary_exp   go to state 112
    eq_binary_exp    go to state 113
    and_binary_exp   go to state 114
    xor_binary_exp   go to state 115
    or_binary_exp    go to state 116
    type_spec        go to state 299
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48
    array_type_spec  go to state 49
    targ             go to state 118
    targ_cl          go to state 119


State 266

  139 struct_type_spec_field: vid long_type_spec •

    $default  reduce using rule 139 (struct_type_spec_field)


State 267

  138 struct_type_spec_field_cl: struct_type_spec_field_cl "," • struct_type_spec_field

    "val_id"  shift, and go to state 9

    vid                     go to state 300
    struct_type_spec_field  go to state 301


State 268

  136 struct_type_spec: "{" struct_type_spec_field_cl "}" •

    $default  reduce using rule 136 (struct_type_spec)


State 269

  145 fn_type_spec: vpattern "->" type_spec •

    $default  reduce using rule 145 (fn_type_spec)


State 270

  160 class_exp_class_spec: "cls" "(" tid class_spec ")" "{" • type_query_exp_sl "}"

    "val_id"  shift, and go to state 9
    "TypeId"  shift, and go to state 25
    "["       shift, and go to state 42
    "{"       shift, and go to state 43

    tid                go to state 44
    vid                go to state 35
    mod_prefix         go to state 45
    type_query_exp_sl  go to state 302
    type_query_exp     go to state 303
    type_spec          go to state 304
    mod_prefix_tid     go to state 47
    tuple_type_spec    go to state 48
    array_type_spec    go to state 49


State 271

   68 if_exp: "if" bracketed_exp "then" bracketed_exp •
   69       | "if" bracketed_exp "then" bracketed_exp • "else" primary_exp

    "else"  shift, and go to state 305

    $default  reduce using rule 68 (if_exp)


State 272

   50 vtupleExpr: "(" expr "," ")" •

    $default  reduce using rule 50 (vtupleExpr)


State 273

   40 expr_cl2: expr "," expr •

    $default  reduce using rule 40 (expr_cl2)


State 274

   41 expr_cl2: expr_cl2 "," expr •

    $default  reduce using rule 41 (expr_cl2)


State 275

  177 lpattern_field_cl: lpattern_field •

    $default  reduce using rule 177 (lpattern_field_cl)


State 276

  169 destructured_lpattern: "{" lpattern_field_cl • "}"
  178 lpattern_field_cl: lpattern_field_cl • "," lpattern_field

    ","  shift, and go to state 306
    "}"  shift, and go to state 307


State 277

  165 lpattern_field: vid type_spec •

    $default  reduce using rule 165 (lpattern_field)


State 278

   22 const_stmt: "const" lpattern "=" • expr

    "val_id"                 shift, and go to state 9
    "TypeId"                 shift, and go to state 25
    "if"                     shift, and go to state 77
    "not"                    shift, and go to state 78
    "42"                     shift, and go to state 79
    "0x2a"                   shift, and go to state 80
    "42u"                    shift, and go to state 81
    "0x2Au"                  shift, and go to state 82
    "4.2"                    shift, and go to state 83
    "\"dq-string-literal\""  shift, and go to state 84
    "'sq-string-literal'"    shift, and go to state 85
    "("                      shift, and go to state 86
    "["                      shift, and go to state 42
    "{"                      shift, and go to state 87
    "+"                      shift, and go to state 88
    "-"                      shift, and go to state 89

    tid              go to state 44
    vid              go to state 90
    floatl           go to state 91
    mod_prefix       go to state 92
    expr             go to state 308
    bracketed_exp    go to state 94
    paren_exp        go to state 95
    vtupleExpr       go to state 96
    vstructExpr      go to state 97
    primary_exp      go to state 98
    int_expr         go to state 99
    stringls         go to state 100
    if_exp           go to state 101
    chain_exp        go to state 102
    postfix_exp      go to state 103
    vcall_exp        go to state 104
    dot_name_exp     go to state 105
    dot_index_exp    go to state 106
    unary_exp        go to state 107
    unary_op         go to state 108
    binary_exp       go to state 109
    mul_binary_exp   go to state 110
    add_binary_exp   go to state 111
    cmp_binary_exp   go to state 112
    eq_binary_exp    go to state 113
    and_binary_exp   go to state 114
    xor_binary_exp   go to state 115
    or_binary_exp    go to state 116
    type_spec        go to state 141
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48
    array_type_spec  go to state 49


State 279

   23 val_stmt: "val" lpattern "=" • expr

    "val_id"                 shift, and go to state 9
    "TypeId"                 shift, and go to state 25
    "if"                     shift, and go to state 77
    "not"                    shift, and go to state 78
    "42"                     shift, and go to state 79
    "0x2a"                   shift, and go to state 80
    "42u"                    shift, and go to state 81
    "0x2Au"                  shift, and go to state 82
    "4.2"                    shift, and go to state 83
    "\"dq-string-literal\""  shift, and go to state 84
    "'sq-string-literal'"    shift, and go to state 85
    "("                      shift, and go to state 86
    "["                      shift, and go to state 42
    "{"                      shift, and go to state 87
    "+"                      shift, and go to state 88
    "-"                      shift, and go to state 89

    tid              go to state 44
    vid              go to state 90
    floatl           go to state 91
    mod_prefix       go to state 92
    expr             go to state 309
    bracketed_exp    go to state 94
    paren_exp        go to state 95
    vtupleExpr       go to state 96
    vstructExpr      go to state 97
    primary_exp      go to state 98
    int_expr         go to state 99
    stringls         go to state 100
    if_exp           go to state 101
    chain_exp        go to state 102
    postfix_exp      go to state 103
    vcall_exp        go to state 104
    dot_name_exp     go to state 105
    dot_index_exp    go to state 106
    unary_exp        go to state 107
    unary_op         go to state 108
    binary_exp       go to state 109
    mul_binary_exp   go to state 110
    add_binary_exp   go to state 111
    cmp_binary_exp   go to state 112
    eq_binary_exp    go to state 113
    and_binary_exp   go to state 114
    xor_binary_exp   go to state 115
    or_binary_exp    go to state 116
    type_spec        go to state 141
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48
    array_type_spec  go to state 49


State 280

   24 var_stmt: "var" lpattern "=" • expr

    "val_id"                 shift, and go to state 9
    "TypeId"                 shift, and go to state 25
    "if"                     shift, and go to state 77
    "not"                    shift, and go to state 78
    "42"                     shift, and go to state 79
    "0x2a"                   shift, and go to state 80
    "42u"                    shift, and go to state 81
    "0x2Au"                  shift, and go to state 82
    "4.2"                    shift, and go to state 83
    "\"dq-string-literal\""  shift, and go to state 84
    "'sq-string-literal'"    shift, and go to state 85
    "("                      shift, and go to state 86
    "["                      shift, and go to state 42
    "{"                      shift, and go to state 87
    "+"                      shift, and go to state 88
    "-"                      shift, and go to state 89

    tid              go to state 44
    vid              go to state 90
    floatl           go to state 91
    mod_prefix       go to state 92
    expr             go to state 310
    bracketed_exp    go to state 94
    paren_exp        go to state 95
    vtupleExpr       go to state 96
    vstructExpr      go to state 97
    primary_exp      go to state 98
    int_expr         go to state 99
    stringls         go to state 100
    if_exp           go to state 101
    chain_exp        go to state 102
    postfix_exp      go to state 103
    vcall_exp        go to state 104
    dot_name_exp     go to state 105
    dot_index_exp    go to state 106
    unary_exp        go to state 107
    unary_op         go to state 108
    binary_exp       go to state 109
    mul_binary_exp   go to state 110
    add_binary_exp   go to state 111
    cmp_binary_exp   go to state 112
    eq_binary_exp    go to state 113
    and_binary_exp   go to state 114
    xor_binary_exp   go to state 115
    or_binary_exp    go to state 116
    type_spec        go to state 141
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48
    array_type_spec  go to state 49


State 281

   25 set_stmt: "set" expr "=" • expr

    "val_id"                 shift, and go to state 9
    "TypeId"                 shift, and go to state 25
    "if"                     shift, and go to state 77
    "not"                    shift, and go to state 78
    "42"                     shift, and go to state 79
    "0x2a"                   shift, and go to state 80
    "42u"                    shift, and go to state 81
    "0x2Au"                  shift, and go to state 82
    "4.2"                    shift, and go to state 83
    "\"dq-string-literal\""  shift, and go to state 84
    "'sq-string-literal'"    shift, and go to state 85
    "("                      shift, and go to state 86
    "["                      shift, and go to state 42
    "{"                      shift, and go to state 87
    "+"                      shift, and go to state 88
    "-"                      shift, and go to state 89

    tid              go to state 44
    vid              go to state 90
    floatl           go to state 91
    mod_prefix       go to state 92
    expr             go to state 311
    bracketed_exp    go to state 94
    paren_exp        go to state 95
    vtupleExpr       go to state 96
    vstructExpr      go to state 97
    primary_exp      go to state 98
    int_expr         go to state 99
    stringls         go to state 100
    if_exp           go to state 101
    chain_exp        go to state 102
    postfix_exp      go to state 103
    vcall_exp        go to state 104
    dot_name_exp     go to state 105
    dot_index_exp    go to state 106
    unary_exp        go to state 107
    unary_op         go to state 108
    binary_exp       go to state 109
    mul_binary_exp   go to state 110
    add_binary_exp   go to state 111
    cmp_binary_exp   go to state 112
    eq_binary_exp    go to state 113
    and_binary_exp   go to state 114
    xor_binary_exp   go to state 115
    or_binary_exp    go to state 116
    type_spec        go to state 141
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48
    array_type_spec  go to state 49


State 282

  161 struct_exp_field: vid ":" expr •

    $default  reduce using rule 161 (struct_exp_field)


State 283

   74 chain_prefix: chain_prefix chain_prefix_stmt ";" •

    $default  reduce using rule 74 (chain_prefix)


State 284

   72 chain_exp: "{" chain_prefix long_exp "}" •

    $default  reduce using rule 72 (chain_exp)


State 285

  161 struct_exp_field: vid • ":" expr

    ":"  shift, and go to state 229


State 286

  182 struct_exp_field_cl: struct_exp_field_cl "," struct_exp_field •

    $default  reduce using rule 182 (struct_exp_field_cl)


State 287

  151 varg: "out" expr •

    $default  reduce using rule 151 (varg)


State 288

  152 varg: "inout" expr •

    $default  reduce using rule 152 (varg)


State 289

  154 varg_cl: varg_cl "," • varg

    "val_id"                 shift, and go to state 9
    "TypeId"                 shift, and go to state 25
    "if"                     shift, and go to state 77
    "not"                    shift, and go to state 78
    "out"                    shift, and go to state 239
    "inout"                  shift, and go to state 240
    "42"                     shift, and go to state 79
    "0x2a"                   shift, and go to state 80
    "42u"                    shift, and go to state 81
    "0x2Au"                  shift, and go to state 82
    "4.2"                    shift, and go to state 83
    "\"dq-string-literal\""  shift, and go to state 84
    "'sq-string-literal'"    shift, and go to state 85
    "("                      shift, and go to state 86
    "["                      shift, and go to state 42
    "{"                      shift, and go to state 87
    "+"                      shift, and go to state 88
    "-"                      shift, and go to state 89

    tid              go to state 44
    vid              go to state 90
    floatl           go to state 91
    mod_prefix       go to state 92
    expr             go to state 242
    bracketed_exp    go to state 94
    paren_exp        go to state 95
    vtupleExpr       go to state 96
    vstructExpr      go to state 97
    primary_exp      go to state 98
    int_expr         go to state 99
    stringls         go to state 100
    if_exp           go to state 101
    chain_exp        go to state 102
    postfix_exp      go to state 103
    vcall_exp        go to state 104
    dot_name_exp     go to state 105
    dot_index_exp    go to state 106
    unary_exp        go to state 107
    unary_op         go to state 108
    binary_exp       go to state 109
    mul_binary_exp   go to state 110
    add_binary_exp   go to state 111
    cmp_binary_exp   go to state 112
    eq_binary_exp    go to state 113
    and_binary_exp   go to state 114
    xor_binary_exp   go to state 115
    or_binary_exp    go to state 116
    type_spec        go to state 141
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48
    array_type_spec  go to state 49
    varg             go to state 312


State 290

   81 vcall_exp: postfix_exp "(" varg_cl ")" •

    $default  reduce using rule 81 (vcall_exp)


State 291

   84 dot_name_exp: type_spec "::" "TypeId" "using" • paren_exp

    "("  shift, and go to state 313

    paren_exp  go to state 314


State 292

   36 mod_prefix: mod_prefix vid "[" targ_cl "]" "::" •

    $default  reduce using rule 36 (mod_prefix)


State 293

  141 enum_type_spec_field: tid long_type_spec •

    $default  reduce using rule 141 (enum_type_spec_field)


State 294

  143 enum_type_spec_field_cl: enum_type_spec_field_cl "," • enum_type_spec_field

    "TypeId"  shift, and go to state 25

    tid                   go to state 257
    enum_type_spec_field  go to state 315


State 295

  144 enum_type_spec: "enum" "{" enum_type_spec_field_cl "}" •

    $default  reduce using rule 144 (enum_type_spec)


State 296

  163 vpattern_field: "out" vid type_spec •

    $default  reduce using rule 163 (vpattern_field)


State 297

  164 vpattern_field: "inout" vid type_spec •

    $default  reduce using rule 164 (vpattern_field)


State 298

  176 vpattern_field_cl: vpattern_field_cl "," vpattern_field •

    $default  reduce using rule 176 (vpattern_field_cl)


State 299

   83 dot_name_exp: type_spec • "::" "TypeId"
   84             | type_spec • "::" "TypeId" "using" paren_exp
  135 array_type_spec: "[" type_spec • "/" expr "]"
  146 targ: type_spec •

    "::"  shift, and go to state 192
    "/"   shift, and go to state 122

    $default  reduce using rule 146 (targ)


State 300

  139 struct_type_spec_field: vid • long_type_spec

    "val_id"  shift, and go to state 9
    "TypeId"  shift, and go to state 25
    "enum"    shift, and go to state 128
    "("       shift, and go to state 129
    "["       shift, and go to state 42
    "{"       shift, and go to state 130

    tid               go to state 44
    vid               go to state 35
    mod_prefix        go to state 45
    type_spec         go to state 131
    long_type_spec    go to state 266
    mod_prefix_tid    go to state 47
    tuple_type_spec   go to state 48
    array_type_spec   go to state 49
    struct_type_spec  go to state 133
    enum_type_spec    go to state 134
    fn_type_spec      go to state 135
    vpattern          go to state 136


State 301

  138 struct_type_spec_field_cl: struct_type_spec_field_cl "," struct_type_spec_field •

    $default  reduce using rule 138 (struct_type_spec_field_cl)


State 302

   43 type_query_exp_sl: type_query_exp_sl • type_query_exp ";"
  160 class_exp_class_spec: "cls" "(" tid class_spec ")" "{" type_query_exp_sl • "}"

    "val_id"  shift, and go to state 9
    "TypeId"  shift, and go to state 25
    "["       shift, and go to state 42
    "{"       shift, and go to state 43
    "}"       shift, and go to state 316

    tid              go to state 44
    vid              go to state 35
    mod_prefix       go to state 45
    type_query_exp   go to state 317
    type_spec        go to state 304
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48
    array_type_spec  go to state 49


State 303

   42 type_query_exp_sl: type_query_exp • ";"

    ";"  shift, and go to state 318


State 304

  118 type_query_exp: type_spec • type_query_op type_spec

    "=="  shift, and go to state 319
    ":<"  shift, and go to state 320
    ">:"  shift, and go to state 321

    type_query_op  go to state 322


State 305

   69 if_exp: "if" bracketed_exp "then" bracketed_exp "else" • primary_exp

    "val_id"                 shift, and go to state 9
    "if"                     shift, and go to state 77
    "42"                     shift, and go to state 79
    "0x2a"                   shift, and go to state 80
    "42u"                    shift, and go to state 81
    "0x2Au"                  shift, and go to state 82
    "4.2"                    shift, and go to state 83
    "\"dq-string-literal\""  shift, and go to state 84
    "'sq-string-literal'"    shift, and go to state 85
    "("                      shift, and go to state 86
    "{"                      shift, and go to state 145

    vid            go to state 90
    floatl         go to state 91
    mod_prefix     go to state 323
    bracketed_exp  go to state 94
    paren_exp      go to state 95
    vtupleExpr     go to state 96
    vstructExpr    go to state 97
    primary_exp    go to state 324
    int_expr       go to state 99
    stringls       go to state 100
    if_exp         go to state 101
    chain_exp      go to state 102


State 306

  178 lpattern_field_cl: lpattern_field_cl "," • lpattern_field

    "val_id"  shift, and go to state 9

    vid             go to state 220
    lpattern_field  go to state 325


State 307

  169 destructured_lpattern: "{" lpattern_field_cl "}" •

    $default  reduce using rule 169 (destructured_lpattern)


State 308

   22 const_stmt: "const" lpattern "=" expr •

    $default  reduce using rule 22 (const_stmt)


State 309

   23 val_stmt: "val" lpattern "=" expr •

    $default  reduce using rule 23 (val_stmt)


State 310

   24 var_stmt: "var" lpattern "=" expr •

    $default  reduce using rule 24 (var_stmt)


State 311

   25 set_stmt: "set" expr "=" expr •

    $default  reduce using rule 25 (set_stmt)


State 312

  154 varg_cl: varg_cl "," varg •

    $default  reduce using rule 154 (varg_cl)


State 313

   48 paren_exp: "(" • long_exp ")"

    "val_id"                 shift, and go to state 9
    "TypeId"                 shift, and go to state 25
    "if"                     shift, and go to state 77
    "not"                    shift, and go to state 78
    "42"                     shift, and go to state 79
    "0x2a"                   shift, and go to state 80
    "42u"                    shift, and go to state 81
    "0x2Au"                  shift, and go to state 82
    "4.2"                    shift, and go to state 83
    "\"dq-string-literal\""  shift, and go to state 84
    "'sq-string-literal'"    shift, and go to state 85
    "("                      shift, and go to state 137
    "["                      shift, and go to state 42
    "{"                      shift, and go to state 87
    "+"                      shift, and go to state 88
    "-"                      shift, and go to state 89

    tid              go to state 44
    vid              go to state 90
    floatl           go to state 91
    mod_prefix       go to state 92
    expr             go to state 138
    long_exp         go to state 149
    bracketed_exp    go to state 94
    paren_exp        go to state 95
    vtupleExpr       go to state 96
    vstructExpr      go to state 97
    primary_exp      go to state 98
    int_expr         go to state 99
    stringls         go to state 100
    if_exp           go to state 101
    chain_exp        go to state 102
    lambda_exp       go to state 140
    postfix_exp      go to state 103
    vcall_exp        go to state 104
    dot_name_exp     go to state 105
    dot_index_exp    go to state 106
    unary_exp        go to state 107
    unary_op         go to state 108
    binary_exp       go to state 109
    mul_binary_exp   go to state 110
    add_binary_exp   go to state 111
    cmp_binary_exp   go to state 112
    eq_binary_exp    go to state 113
    and_binary_exp   go to state 114
    xor_binary_exp   go to state 115
    or_binary_exp    go to state 116
    type_spec        go to state 141
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48
    array_type_spec  go to state 49
    fn_type_spec     go to state 142
    vpattern         go to state 136


State 314

   84 dot_name_exp: type_spec "::" "TypeId" "using" paren_exp •

    $default  reduce using rule 84 (dot_name_exp)


State 315

  143 enum_type_spec_field_cl: enum_type_spec_field_cl "," enum_type_spec_field •

    $default  reduce using rule 143 (enum_type_spec_field_cl)


State 316

  160 class_exp_class_spec: "cls" "(" tid class_spec ")" "{" type_query_exp_sl "}" •

    $default  reduce using rule 160 (class_exp_class_spec)


State 317

   43 type_query_exp_sl: type_query_exp_sl type_query_exp • ";"

    ";"  shift, and go to state 326


State 318

   42 type_query_exp_sl: type_query_exp ";" •

    $default  reduce using rule 42 (type_query_exp_sl)


State 319

  121 type_query_op: "==" •

    $default  reduce using rule 121 (type_query_op)


State 320

  119 type_query_op: ":<" •

    $default  reduce using rule 119 (type_query_op)


State 321

  120 type_query_op: ">:" •

    $default  reduce using rule 120 (type_query_op)


State 322

  118 type_query_exp: type_spec type_query_op • type_spec

    "val_id"  shift, and go to state 9
    "TypeId"  shift, and go to state 25
    "["       shift, and go to state 42
    "{"       shift, and go to state 43

    tid              go to state 44
    vid              go to state 35
    mod_prefix       go to state 45
    type_spec        go to state 327
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48
    array_type_spec  go to state 49


State 323

   35 mod_prefix: mod_prefix • vid "::"
   36           | mod_prefix • vid "[" targ_cl "]" "::"
   59 primary_exp: mod_prefix • vid

    "val_id"  shift, and go to state 9

    vid  go to state 168


State 324

   69 if_exp: "if" bracketed_exp "then" bracketed_exp "else" primary_exp •

    $default  reduce using rule 69 (if_exp)


State 325

  178 lpattern_field_cl: lpattern_field_cl "," lpattern_field •

    $default  reduce using rule 178 (lpattern_field_cl)


State 326

   43 type_query_exp_sl: type_query_exp_sl type_query_exp ";" •

    $default  reduce using rule 43 (type_query_exp_sl)


State 327

  118 type_query_exp: type_spec type_query_op type_spec •

    $default  reduce using rule 118 (type_query_exp)
