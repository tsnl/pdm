Terminals unused in grammar

    "<__42__>"
    "match"
    "with"
    "lambda"
    "typeclass"
    "&"
    "EOS"
    "<null>"


Grammar

    0 $accept: script $end

    1 script: scriptContent

    2 scriptContent: scriptContentStmt ";"
    3              | scriptContent scriptContentStmt ";"

    4 scriptContentStmt: top_mod_stmt
    5                  | import_stmt
    6                  | extern_stmt
    7                  | using_stmt

    8 top_mod_stmt: "mod" "<TypeId>" "{" mod_content "}"

    9 mod_stmt: top_mod_stmt
   10         | "mod" "<TypeId>" tpattern_seq "{" mod_content "}"

   11 mod_content: mod_content_stmt ";"
   12            | mod_content mod_content_stmt ";"

   13 chain_prefix_stmt: const_stmt
   14                  | val_stmt
   15                  | var_stmt
   16                  | set_stmt
   17                  | discard_stmt

   18 const_stmt: "const" lpattern "=" expr

   19 val_stmt: "val" lpattern "=" expr

   20 var_stmt: "var" lpattern "=" expr

   21 set_stmt: "set" expr "=" expr

   22 discard_stmt: "discard" expr

   23 mod_content_stmt: mod_val_stmt
   24                 | mod_type_stmt
   25                 | mod_enum_stmt
   26                 | mod_typeclass_stmt
   27                 | mod_stmt

   28 mod_val_stmt: vid "=" expr
   29             | vid tpattern_seq "=" expr
   30             | vid typespec "from" tid stringl
   31             | vid tpattern_seq typespec "from" tid stringl

   32 mod_type_stmt: tid "=" long_typespec
   33              | tid tpattern_seq "=" long_typespec

   34 mod_enum_stmt: tid enum_field_pl
   35              | tid tpattern_seq enum_field_pl

   36 enum_field_pl: "|" unprefixed_enum_field_pl

   37 unprefixed_enum_field_pl: enum_field
   38                         | unprefixed_enum_field_pl "|" enum_field

   39 enum_field: tid
   40           | tid "(" ")"
   41           | tid "(" typespec_cl1 ")"

   42 mod_typeclass_stmt: tid "<" tid typespec ">" "=" "{" type_query_exp_sl "}"
   43                   | tid tpattern_seq "<" tid typespec ">" "=" "{" type_query_exp_sl "}"

   44 using_stmt: "using" vid "." "*"
   45           | "using" vid "." vid "*"

   46 import_stmt: "import" tid "from" stringl "type" stringl

   47 extern_stmt: "extern" tid "from" expr

   48 tid: "<TypeId>"

   49 vid: "<val_id>"

   50 floatl: "4.2"

   51 stringl: "'sq-string-literal'"
   52        | "\"dq-string-literal\""

   53 mod_prefix: tid ":"
   54           | mod_prefix vid ":"

   55 expr: binary_exp

   56 long_exp: expr

   57 expr_cl0: %empty
   58         | expr_cl0 "," expr

   59 expr_cl2: expr "," expr
   60         | expr_cl2 "," expr

   61 type_query_exp_sl: type_query_exp ";"
   62                  | type_query_exp_sl type_query_exp ";"

   63 bracketed_exp: unit_exp
   64              | paren_exp
   65              | vtupleExpr
   66              | vstructExpr
   67              | chain_exp

   68 unit_exp: "(" ")"
   69         | "{" "}"

   70 paren_exp: "(" long_exp ")"

   71 vtupleExpr: "(" expr "," ")"
   72           | "(" expr_cl2 ")"

   73 vstructExpr: "{" struct_exp_field_cl "}"

   74 primary_exp: bracketed_exp
   75            | vid
   76            | int_expr
   77            | floatl
   78            | stringls
   79            | if_exp
   80            | lambda_exp

   81 int_expr: "42"
   82         | "0x2a"

   83 stringls: "'sq-string-literal'"
   84         | "\"dq-string-literal\""
   85         | stringls "'sq-string-literal'"
   86         | stringls "\"dq-string-literal\""

   87 if_exp: "if" bracketed_exp "then" bracketed_exp
   88       | "if" bracketed_exp "then" bracketed_exp "else" primary_exp

   89 chain_exp: "{" expr "}"
   90          | "{" chain_prefix "}"
   91          | "{" chain_prefix expr "}"

   92 chain_prefix: chain_prefix_stmt ";"
   93             | chain_prefix chain_prefix_stmt ";"

   94 lambda_exp: "fn" vpattern bracketed_exp
   95           | "fn" vpattern "->" typespec bracketed_exp

   96 postfix_exp: primary_exp
   97            | tcall_exp
   98            | vcall_exp
   99            | dot_name_exp
  100            | dot_index_exp

  101 tcall_exp: postfix_exp "[" targ_cl "]"

  102 vcall_exp: postfix_exp "(" ")"
  103          | postfix_exp "(" varg_cl ")"

  104 dot_name_exp: postfix_exp "." "<val_id>"
  105             | postfix_exp "." "<TypeId>" "(" expr_cl0 ")"
  106             | mod_prefix "<val_id>"

  107 dot_index_exp: postfix_exp "." int_expr
  108              | postfix_exp "." bracketed_exp

  109 unary_exp: postfix_exp
  110          | unary_op unary_exp

  111 unary_op: "+"
  112         | "-"
  113         | "*"
  114         | "^"
  115         | "not"

  116 binary_exp: or_binary_exp

  117 mul_binary_op: "*"
  118              | "/"
  119              | "%"

  120 mul_binary_exp: unary_exp
  121               | mul_binary_exp mul_binary_op unary_exp

  122 add_binary_op: "+"
  123              | "-"

  124 add_binary_exp: mul_binary_exp
  125               | add_binary_exp add_binary_op mul_binary_exp

  126 cmp_binary_op: "<"
  127              | "<="
  128              | ">"
  129              | ">="

  130 cmp_binary_exp: add_binary_exp
  131               | cmp_binary_exp cmp_binary_op add_binary_exp

  132 eq_binary_op: "=="
  133             | "!="

  134 eq_binary_exp: cmp_binary_exp
  135              | eq_binary_exp eq_binary_op cmp_binary_exp

  136 and_binary_exp: eq_binary_exp
  137               | and_binary_exp "and" eq_binary_exp

  138 xor_binary_exp: and_binary_exp
  139               | xor_binary_exp "xor" and_binary_exp

  140 or_binary_exp: xor_binary_exp
  141              | or_binary_exp "or" xor_binary_exp

  142 type_query_exp: typespec type_query_op typespec

  143 type_query_op: ":<"
  144              | ">:"
  145              | "::"

  146 typespec: unary_typespec

  147 typespec_cl1: typespec
  148             | typespec_cl1 "," typespec

  149 typespec_cl2: typespec "," typespec
  150             | typespec_cl2 "," typespec

  151 struct_typespec_field: vid typespec

  152 struct_typespec_field_cl: struct_typespec_field
  153                         | struct_typespec_field_cl "," struct_typespec_field

  154 primary_typespec: tid
  155                 | paren_typespec
  156                 | tuple_typespec
  157                 | mod_prefix_tid
  158                 | fn_typespec

  159 paren_typespec: "(" typespec ")"

  160 tuple_typespec: "(" typespec "," ")"
  161               | "(" typespec_cl2 ")"

  162 mod_prefix_tid: mod_prefix tid

  163 fn_typespec: "Fn" vpattern primary_typespec

  164 postfix_typespec: primary_typespec
  165                 | tcall_typespec

  166 tcall_typespec: postfix_typespec "[" targ_cl "]"

  167 unary_typespec: postfix_typespec

  168 long_typespec: unary_typespec
  169              | struct_typespec

  170 struct_typespec: "{" struct_typespec_field_cl "}"

  171 targ: typespec
  172     | expr

  173 targ_cl: targ
  174        | targ_cl "," targ

  175 varg: expr
  176     | "out" expr
  177     | "inout" expr

  178 varg_cl: varg
  179        | varg_cl "," varg

  180 struct_exp_field: vid "=" expr

  181 vpattern_field: vid typespec
  182               | "out" vid typespec
  183               | "inout" vid typespec

  184 lpattern_field: vid typespec
  185               | vid

  186 tpattern_field: vid typespec
  187               | tid typespec

  188 destructured_lpattern: "(" lpattern_field_cl ")"

  189 lpattern: lpattern_field
  190         | destructured_lpattern

  191 vpattern: "(" vpattern_field_cl ")"
  192         | "(" ")"

  193 tpattern: "[" tpattern_field_cl "]"
  194         | "!" "[" tpattern_field_cl "]"

  195 vpattern_field_cl: vpattern_field
  196                  | vpattern_field_cl "," vpattern_field

  197 lpattern_field_cl: lpattern_field
  198                  | lpattern_field_cl "," lpattern_field

  199 tpattern_field_cl: tpattern_field
  200                  | tpattern_field_cl "," tpattern_field

  201 struct_exp_field_cl: struct_exp_field
  202                    | struct_exp_field_cl "," struct_exp_field

  203 tpattern_seq: tpattern
  204             | tpattern_seq tpattern


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    "<val_id>" <TokenInfo> (258) 49 104 106
    "<TypeId>" <TokenInfo> (259) 8 10 48 105
    "<__42__>" <TokenInfo> (260)
    "using" (261) 44 45
    "mod" (262) 8 10
    "if" (263) 87 88
    "then" (264) 87 88
    "else" (265) 88
    "match" (266)
    "with" (267)
    "import" (268) 46
    "extern" (269) 47
    "from" (270) 30 31 46 47
    "const" (271) 18
    "val" (272) 19
    "var" (273) 20
    "set" (274) 21
    "fn" (275) 94 95
    "lambda" (276)
    "Fn" (277) 163
    "type" (278) 46
    "and" (279) 137
    "xor" (280) 139
    "or" (281) 141
    "not" (282) 115
    "typeclass" (283)
    "out" (284) 176 182
    "inout" (285) 177 183
    "discard" (286) 22
    "42" <TokenInfo> (287) 81
    "0x2a" <TokenInfo> (288) 82
    "4.2" <TokenInfo> (289) 50
    "\"dq-string-literal\"" <TokenInfo> (290) 52 84 86
    "'sq-string-literal'" <TokenInfo> (291) 51 83 85
    "." (292) 44 45 104 105 107 108
    ":" (293) 53 54
    "," (294) 58 59 60 71 148 149 150 153 160 174 179 196 198 200 202
    ";" (295) 2 3 11 12 61 62 92 93
    "::" (296) 145
    "(" (297) 40 41 68 70 71 72 102 103 105 159 160 161 188 191 192
    ")" (298) 40 41 68 70 71 72 102 103 105 159 160 161 188 191 192
    "[" (299) 101 166 193 194
    "]" (300) 101 166 193 194
    "{" (301) 8 10 42 43 69 73 89 90 91 170
    "}" (302) 8 10 42 43 69 73 89 90 91 170
    "->" (303) 95
    "*" (304) 44 45 113 117
    "/" (305) 118
    "%" (306) 119
    "+" (307) 111 122
    "-" (308) 112 123
    "<" (309) 42 43 126
    "<=" (310) 127
    ">" (311) 42 43 128
    ">=" (312) 129
    "=" (313) 18 19 20 21 28 29 32 33 42 43 180
    "==" (314) 132
    "!=" (315) 133
    "^" (316) 114
    "&" (317)
    "!" (318) 194
    "|" (319) 36 38
    "EOS" (320)
    ":<" (321) 143
    ">:" (322) 144
    "<null>" (323)


Nonterminals, with rules where they appear

    $accept (69)
        on left: 0
    script <pdm::ast::Script*> (70)
        on left: 1
        on right: 0
    scriptContent <std::vector<pdm::ast::Stmt*>> (71)
        on left: 2 3
        on right: 1 3
    scriptContentStmt <pdm::ast::Stmt*> (72)
        on left: 4 5 6 7
        on right: 2 3
    top_mod_stmt <pdm::ast::Stmt*> (73)
        on left: 8
        on right: 4 9
    mod_stmt <pdm::ast::ModContentStmt*> (74)
        on left: 9 10
        on right: 27
    mod_content <std::vector<pdm::ast::ModContentStmt*>> (75)
        on left: 11 12
        on right: 8 10 12
    chain_prefix_stmt <pdm::ast::Stmt*> (76)
        on left: 13 14 15 16 17
        on right: 92 93
    const_stmt <pdm::ast::Stmt*> (77)
        on left: 18
        on right: 13
    val_stmt <pdm::ast::Stmt*> (78)
        on left: 19
        on right: 14
    var_stmt <pdm::ast::Stmt*> (79)
        on left: 20
        on right: 15
    set_stmt <pdm::ast::Stmt*> (80)
        on left: 21
        on right: 16
    discard_stmt <pdm::ast::Stmt*> (81)
        on left: 22
        on right: 17
    mod_content_stmt <pdm::ast::ModContentStmt*> (82)
        on left: 23 24 25 26 27
        on right: 11 12
    mod_val_stmt <pdm::ast::ModContentStmt*> (83)
        on left: 28 29 30 31
        on right: 23
    mod_type_stmt <pdm::ast::ModContentStmt*> (84)
        on left: 32 33
        on right: 24
    mod_enum_stmt <pdm::ast::ModContentStmt*> (85)
        on left: 34 35
        on right: 25
    enum_field_pl <std::vector<pdm::ast::ModEnumStmt::Field*>> (86)
        on left: 36
        on right: 34 35
    unprefixed_enum_field_pl <std::vector<pdm::ast::ModEnumStmt::Field*>> (87)
        on left: 37 38
        on right: 36 38
    enum_field <pdm::ast::ModEnumStmt::Field*> (88)
        on left: 39 40 41
        on right: 37 38
    mod_typeclass_stmt <pdm::ast::ModContentStmt*> (89)
        on left: 42 43
        on right: 26
    using_stmt <pdm::ast::Stmt*> (90)
        on left: 44 45
        on right: 7
    import_stmt <pdm::ast::Stmt*> (91)
        on left: 46
        on right: 5
    extern_stmt <pdm::ast::Stmt*> (92)
        on left: 47
        on right: 6
    tid <TokenInfo> (93)
        on left: 48
        on right: 30 31 32 33 34 35 39 40 41 42 43 46 47 53 154 162 187
    vid <TokenInfo> (94)
        on left: 49
        on right: 28 29 30 31 44 45 54 75 151 180 181 182 183 184 185 186
    floatl <TokenInfo> (95)
        on left: 50
        on right: 77
    stringl <TokenInfo> (96)
        on left: 51 52
        on right: 30 31 46
    mod_prefix <std::vector<pdm::intern::String>> (97)
        on left: 53 54
        on right: 54 106 162
    expr <pdm::ast::Exp*> (98)
        on left: 55
        on right: 18 19 20 21 22 28 29 47 56 58 59 60 71 89 91 172 175 176 177 180
    long_exp <pdm::ast::Exp*> (99)
        on left: 56
        on right: 70
    expr_cl0 <std::vector<pdm::ast::Exp*>> (100)
        on left: 57 58
        on right: 58 105
    expr_cl2 <std::vector<pdm::ast::Exp*>> (101)
        on left: 59 60
        on right: 60 72
    type_query_exp_sl <std::vector<pdm::ast::TypeQueryExp*>> (102)
        on left: 61 62
        on right: 42 43 62
    bracketed_exp <pdm::ast::Exp*> (103)
        on left: 63 64 65 66 67
        on right: 74 87 88 94 95 108
    unit_exp <pdm::ast::Exp*> (104)
        on left: 68 69
        on right: 63
    paren_exp <pdm::ast::Exp*> (105)
        on left: 70
        on right: 64
    vtupleExpr <pdm::ast::Exp*> (106)
        on left: 71 72
        on right: 65
    vstructExpr <pdm::ast::Exp*> (107)
        on left: 73
        on right: 66
    primary_exp <pdm::ast::Exp*> (108)
        on left: 74 75 76 77 78 79 80
        on right: 88 96
    int_expr <pdm::ast::Exp*> (109)
        on left: 81 82
        on right: 76 107
    stringls <std::vector<pdm::ast::StringExp::Piece>> (110)
        on left: 83 84 85 86
        on right: 78 85 86
    if_exp <pdm::ast::Exp*> (111)
        on left: 87 88
        on right: 79
    chain_exp <pdm::ast::Exp*> (112)
        on left: 89 90 91
        on right: 67
    chain_prefix <std::vector<pdm::ast::Stmt*>> (113)
        on left: 92 93
        on right: 90 91 93
    lambda_exp <pdm::ast::Exp*> (114)
        on left: 94 95
        on right: 80
    postfix_exp <pdm::ast::Exp*> (115)
        on left: 96 97 98 99 100
        on right: 101 102 103 104 105 107 108 109
    tcall_exp <pdm::ast::Exp*> (116)
        on left: 101
        on right: 97
    vcall_exp <pdm::ast::Exp*> (117)
        on left: 102 103
        on right: 98
    dot_name_exp <pdm::ast::Exp*> (118)
        on left: 104 105 106
        on right: 99
    dot_index_exp <pdm::ast::Exp*> (119)
        on left: 107 108
        on right: 100
    unary_exp <pdm::ast::Exp*> (120)
        on left: 109 110
        on right: 110 120 121
    unary_op <pdm::ast::UnaryOperator> (121)
        on left: 111 112 113 114 115
        on right: 110
    binary_exp <pdm::ast::Exp*> (122)
        on left: 116
        on right: 55
    mul_binary_op <pdm::ast::BinaryOperator> (123)
        on left: 117 118 119
        on right: 121
    mul_binary_exp <pdm::ast::Exp*> (124)
        on left: 120 121
        on right: 121 124 125
    add_binary_op <pdm::ast::BinaryOperator> (125)
        on left: 122 123
        on right: 125
    add_binary_exp <pdm::ast::Exp*> (126)
        on left: 124 125
        on right: 125 130 131
    cmp_binary_op <pdm::ast::BinaryOperator> (127)
        on left: 126 127 128 129
        on right: 131
    cmp_binary_exp <pdm::ast::Exp*> (128)
        on left: 130 131
        on right: 131 134 135
    eq_binary_op <pdm::ast::BinaryOperator> (129)
        on left: 132 133
        on right: 135
    eq_binary_exp <pdm::ast::Exp*> (130)
        on left: 134 135
        on right: 135 136 137
    and_binary_exp <pdm::ast::Exp*> (131)
        on left: 136 137
        on right: 137 138 139
    xor_binary_exp <pdm::ast::Exp*> (132)
        on left: 138 139
        on right: 139 140 141
    or_binary_exp <pdm::ast::Exp*> (133)
        on left: 140 141
        on right: 116 141
    type_query_exp <pdm::ast::TypeQueryExp*> (134)
        on left: 142
        on right: 61 62
    type_query_op <pdm::ast::TypeQueryKind> (135)
        on left: 143 144 145
        on right: 142
    typespec <pdm::ast::Typespec*> (136)
        on left: 146
        on right: 30 31 42 43 95 142 147 148 149 150 151 159 160 171 181 182 183 184 186 187
    typespec_cl1 <std::vector<pdm::ast::Typespec*>> (137)
        on left: 147 148
        on right: 41 148
    typespec_cl2 <std::vector<pdm::ast::Typespec*>> (138)
        on left: 149 150
        on right: 150 161
    struct_typespec_field <pdm::ast::StructTypespec::Field*> (139)
        on left: 151
        on right: 152 153
    struct_typespec_field_cl <std::vector<pdm::ast::StructTypespec::Field*>> (140)
        on left: 152 153
        on right: 153 170
    primary_typespec <pdm::ast::Typespec*> (141)
        on left: 154 155 156 157 158
        on right: 163 164
    paren_typespec <pdm::ast::Typespec*> (142)
        on left: 159
        on right: 155
    tuple_typespec <pdm::ast::Typespec*> (143)
        on left: 160 161
        on right: 156
    mod_prefix_tid <pdm::ast::Typespec*> (144)
        on left: 162
        on right: 157
    fn_typespec <pdm::ast::Typespec*> (145)
        on left: 163
        on right: 158
    postfix_typespec <pdm::ast::Typespec*> (146)
        on left: 164 165
        on right: 166 167
    tcall_typespec <pdm::ast::Typespec*> (147)
        on left: 166
        on right: 165
    unary_typespec <pdm::ast::Typespec*> (148)
        on left: 167
        on right: 146 168
    long_typespec <pdm::ast::Typespec*> (149)
        on left: 168 169
        on right: 32 33
    struct_typespec <pdm::ast::Typespec*> (150)
        on left: 170
        on right: 169
    targ <pdm::ast::TArg*> (151)
        on left: 171 172
        on right: 173 174
    targ_cl <std::vector<pdm::ast::TArg*>> (152)
        on left: 173 174
        on right: 101 166 174
    varg <pdm::ast::VArg*> (153)
        on left: 175 176 177
        on right: 178 179
    varg_cl <std::vector<pdm::ast::VArg*>> (154)
        on left: 178 179
        on right: 103 179
    struct_exp_field <pdm::ast::StructExp::Field*> (155)
        on left: 180
        on right: 201 202
    vpattern_field <pdm::ast::VPattern::Field*> (156)
        on left: 181 182 183
        on right: 195 196
    lpattern_field <pdm::ast::LPattern::Field*> (157)
        on left: 184 185
        on right: 189 197 198
    tpattern_field <pdm::ast::TPattern::Field*> (158)
        on left: 186 187
        on right: 199 200
    destructured_lpattern <pdm::ast::LPattern*> (159)
        on left: 188
        on right: 190
    lpattern <pdm::ast::LPattern*> (160)
        on left: 189 190
        on right: 18 19 20
    vpattern <pdm::ast::VPattern*> (161)
        on left: 191 192
        on right: 94 95 163
    tpattern <pdm::ast::TPattern*> (162)
        on left: 193 194
        on right: 203 204
    vpattern_field_cl <std::vector<pdm::ast::VPattern::Field*>> (163)
        on left: 195 196
        on right: 191 196
    lpattern_field_cl <std::vector<pdm::ast::LPattern::Field*>> (164)
        on left: 197 198
        on right: 188 198
    tpattern_field_cl <std::vector<pdm::ast::TPattern::Field*>> (165)
        on left: 199 200
        on right: 193 194 200
    struct_exp_field_cl <std::vector<pdm::ast::StructExp::Field*>> (166)
        on left: 201 202
        on right: 73 202
    tpattern_seq <std::vector<pdm::ast::TPattern*>> (167)
        on left: 203 204
        on right: 10 29 31 33 35 43 204


State 0

    0 $accept: • script $end

    "using"   shift, and go to state 1
    "mod"     shift, and go to state 2
    "import"  shift, and go to state 3
    "extern"  shift, and go to state 4

    script             go to state 5
    scriptContent      go to state 6
    scriptContentStmt  go to state 7
    top_mod_stmt       go to state 8
    using_stmt         go to state 9
    import_stmt        go to state 10
    extern_stmt        go to state 11


State 1

   44 using_stmt: "using" • vid "." "*"
   45           | "using" • vid "." vid "*"

    "<val_id>"  shift, and go to state 12

    vid  go to state 13


State 2

    8 top_mod_stmt: "mod" • "<TypeId>" "{" mod_content "}"

    "<TypeId>"  shift, and go to state 14


State 3

   46 import_stmt: "import" • tid "from" stringl "type" stringl

    "<TypeId>"  shift, and go to state 15

    tid  go to state 16


State 4

   47 extern_stmt: "extern" • tid "from" expr

    "<TypeId>"  shift, and go to state 15

    tid  go to state 17


State 5

    0 $accept: script • $end

    $end  shift, and go to state 18


State 6

    1 script: scriptContent •
    3 scriptContent: scriptContent • scriptContentStmt ";"

    "using"   shift, and go to state 1
    "mod"     shift, and go to state 2
    "import"  shift, and go to state 3
    "extern"  shift, and go to state 4

    $default  reduce using rule 1 (script)

    scriptContentStmt  go to state 19
    top_mod_stmt       go to state 8
    using_stmt         go to state 9
    import_stmt        go to state 10
    extern_stmt        go to state 11


State 7

    2 scriptContent: scriptContentStmt • ";"

    ";"  shift, and go to state 20


State 8

    4 scriptContentStmt: top_mod_stmt •

    $default  reduce using rule 4 (scriptContentStmt)


State 9

    7 scriptContentStmt: using_stmt •

    $default  reduce using rule 7 (scriptContentStmt)


State 10

    5 scriptContentStmt: import_stmt •

    $default  reduce using rule 5 (scriptContentStmt)


State 11

    6 scriptContentStmt: extern_stmt •

    $default  reduce using rule 6 (scriptContentStmt)


State 12

   49 vid: "<val_id>" •

    $default  reduce using rule 49 (vid)


State 13

   44 using_stmt: "using" vid • "." "*"
   45           | "using" vid • "." vid "*"

    "."  shift, and go to state 21


State 14

    8 top_mod_stmt: "mod" "<TypeId>" • "{" mod_content "}"

    "{"  shift, and go to state 22


State 15

   48 tid: "<TypeId>" •

    $default  reduce using rule 48 (tid)


State 16

   46 import_stmt: "import" tid • "from" stringl "type" stringl

    "from"  shift, and go to state 23


State 17

   47 extern_stmt: "extern" tid • "from" expr

    "from"  shift, and go to state 24


State 18

    0 $accept: script $end •

    $default  accept


State 19

    3 scriptContent: scriptContent scriptContentStmt • ";"

    ";"  shift, and go to state 25


State 20

    2 scriptContent: scriptContentStmt ";" •

    $default  reduce using rule 2 (scriptContent)


State 21

   44 using_stmt: "using" vid "." • "*"
   45           | "using" vid "." • vid "*"

    "<val_id>"  shift, and go to state 12
    "*"         shift, and go to state 26

    vid  go to state 27


State 22

    8 top_mod_stmt: "mod" "<TypeId>" "{" • mod_content "}"

    "<val_id>"  shift, and go to state 12
    "<TypeId>"  shift, and go to state 15
    "mod"       shift, and go to state 28

    top_mod_stmt        go to state 29
    mod_stmt            go to state 30
    mod_content         go to state 31
    mod_content_stmt    go to state 32
    mod_val_stmt        go to state 33
    mod_type_stmt       go to state 34
    mod_enum_stmt       go to state 35
    mod_typeclass_stmt  go to state 36
    tid                 go to state 37
    vid                 go to state 38


State 23

   46 import_stmt: "import" tid "from" • stringl "type" stringl

    "\"dq-string-literal\""  shift, and go to state 39
    "'sq-string-literal'"    shift, and go to state 40

    stringl  go to state 41


State 24

   47 extern_stmt: "extern" tid "from" • expr

    "<val_id>"               shift, and go to state 12
    "<TypeId>"               shift, and go to state 15
    "if"                     shift, and go to state 42
    "fn"                     shift, and go to state 43
    "not"                    shift, and go to state 44
    "42"                     shift, and go to state 45
    "0x2a"                   shift, and go to state 46
    "4.2"                    shift, and go to state 47
    "\"dq-string-literal\""  shift, and go to state 48
    "'sq-string-literal'"    shift, and go to state 49
    "("                      shift, and go to state 50
    "{"                      shift, and go to state 51
    "*"                      shift, and go to state 52
    "+"                      shift, and go to state 53
    "-"                      shift, and go to state 54
    "^"                      shift, and go to state 55

    tid             go to state 56
    vid             go to state 57
    floatl          go to state 58
    mod_prefix      go to state 59
    expr            go to state 60
    bracketed_exp   go to state 61
    unit_exp        go to state 62
    paren_exp       go to state 63
    vtupleExpr      go to state 64
    vstructExpr     go to state 65
    primary_exp     go to state 66
    int_expr        go to state 67
    stringls        go to state 68
    if_exp          go to state 69
    chain_exp       go to state 70
    lambda_exp      go to state 71
    postfix_exp     go to state 72
    tcall_exp       go to state 73
    vcall_exp       go to state 74
    dot_name_exp    go to state 75
    dot_index_exp   go to state 76
    unary_exp       go to state 77
    unary_op        go to state 78
    binary_exp      go to state 79
    mul_binary_exp  go to state 80
    add_binary_exp  go to state 81
    cmp_binary_exp  go to state 82
    eq_binary_exp   go to state 83
    and_binary_exp  go to state 84
    xor_binary_exp  go to state 85
    or_binary_exp   go to state 86


State 25

    3 scriptContent: scriptContent scriptContentStmt ";" •

    $default  reduce using rule 3 (scriptContent)


State 26

   44 using_stmt: "using" vid "." "*" •

    $default  reduce using rule 44 (using_stmt)


State 27

   45 using_stmt: "using" vid "." vid • "*"

    "*"  shift, and go to state 87


State 28

    8 top_mod_stmt: "mod" • "<TypeId>" "{" mod_content "}"
   10 mod_stmt: "mod" • "<TypeId>" tpattern_seq "{" mod_content "}"

    "<TypeId>"  shift, and go to state 88


State 29

    9 mod_stmt: top_mod_stmt •

    $default  reduce using rule 9 (mod_stmt)


State 30

   27 mod_content_stmt: mod_stmt •

    $default  reduce using rule 27 (mod_content_stmt)


State 31

    8 top_mod_stmt: "mod" "<TypeId>" "{" mod_content • "}"
   12 mod_content: mod_content • mod_content_stmt ";"

    "<val_id>"  shift, and go to state 12
    "<TypeId>"  shift, and go to state 15
    "mod"       shift, and go to state 28
    "}"         shift, and go to state 89

    top_mod_stmt        go to state 29
    mod_stmt            go to state 30
    mod_content_stmt    go to state 90
    mod_val_stmt        go to state 33
    mod_type_stmt       go to state 34
    mod_enum_stmt       go to state 35
    mod_typeclass_stmt  go to state 36
    tid                 go to state 37
    vid                 go to state 38


State 32

   11 mod_content: mod_content_stmt • ";"

    ";"  shift, and go to state 91


State 33

   23 mod_content_stmt: mod_val_stmt •

    $default  reduce using rule 23 (mod_content_stmt)


State 34

   24 mod_content_stmt: mod_type_stmt •

    $default  reduce using rule 24 (mod_content_stmt)


State 35

   25 mod_content_stmt: mod_enum_stmt •

    $default  reduce using rule 25 (mod_content_stmt)


State 36

   26 mod_content_stmt: mod_typeclass_stmt •

    $default  reduce using rule 26 (mod_content_stmt)


State 37

   32 mod_type_stmt: tid • "=" long_typespec
   33              | tid • tpattern_seq "=" long_typespec
   34 mod_enum_stmt: tid • enum_field_pl
   35              | tid • tpattern_seq enum_field_pl
   42 mod_typeclass_stmt: tid • "<" tid typespec ">" "=" "{" type_query_exp_sl "}"
   43                   | tid • tpattern_seq "<" tid typespec ">" "=" "{" type_query_exp_sl "}"

    "["  shift, and go to state 92
    "<"  shift, and go to state 93
    "="  shift, and go to state 94
    "!"  shift, and go to state 95
    "|"  shift, and go to state 96

    enum_field_pl  go to state 97
    tpattern       go to state 98
    tpattern_seq   go to state 99


State 38

   28 mod_val_stmt: vid • "=" expr
   29             | vid • tpattern_seq "=" expr
   30             | vid • typespec "from" tid stringl
   31             | vid • tpattern_seq typespec "from" tid stringl

    "<TypeId>"  shift, and go to state 15
    "Fn"        shift, and go to state 100
    "("         shift, and go to state 101
    "["         shift, and go to state 92
    "="         shift, and go to state 102
    "!"         shift, and go to state 95

    tid               go to state 103
    mod_prefix        go to state 104
    typespec          go to state 105
    primary_typespec  go to state 106
    paren_typespec    go to state 107
    tuple_typespec    go to state 108
    mod_prefix_tid    go to state 109
    fn_typespec       go to state 110
    postfix_typespec  go to state 111
    tcall_typespec    go to state 112
    unary_typespec    go to state 113
    tpattern          go to state 98
    tpattern_seq      go to state 114


State 39

   52 stringl: "\"dq-string-literal\"" •

    $default  reduce using rule 52 (stringl)


State 40

   51 stringl: "'sq-string-literal'" •

    $default  reduce using rule 51 (stringl)


State 41

   46 import_stmt: "import" tid "from" stringl • "type" stringl

    "type"  shift, and go to state 115


State 42

   87 if_exp: "if" • bracketed_exp "then" bracketed_exp
   88       | "if" • bracketed_exp "then" bracketed_exp "else" primary_exp

    "("  shift, and go to state 50
    "{"  shift, and go to state 51

    bracketed_exp  go to state 116
    unit_exp       go to state 62
    paren_exp      go to state 63
    vtupleExpr     go to state 64
    vstructExpr    go to state 65
    chain_exp      go to state 70


State 43

   94 lambda_exp: "fn" • vpattern bracketed_exp
   95           | "fn" • vpattern "->" typespec bracketed_exp

    "("  shift, and go to state 117

    vpattern  go to state 118


State 44

  115 unary_op: "not" •

    $default  reduce using rule 115 (unary_op)


State 45

   81 int_expr: "42" •

    $default  reduce using rule 81 (int_expr)


State 46

   82 int_expr: "0x2a" •

    $default  reduce using rule 82 (int_expr)


State 47

   50 floatl: "4.2" •

    $default  reduce using rule 50 (floatl)


State 48

   84 stringls: "\"dq-string-literal\"" •

    $default  reduce using rule 84 (stringls)


State 49

   83 stringls: "'sq-string-literal'" •

    $default  reduce using rule 83 (stringls)


State 50

   68 unit_exp: "(" • ")"
   70 paren_exp: "(" • long_exp ")"
   71 vtupleExpr: "(" • expr "," ")"
   72           | "(" • expr_cl2 ")"

    "<val_id>"               shift, and go to state 12
    "<TypeId>"               shift, and go to state 15
    "if"                     shift, and go to state 42
    "fn"                     shift, and go to state 43
    "not"                    shift, and go to state 44
    "42"                     shift, and go to state 45
    "0x2a"                   shift, and go to state 46
    "4.2"                    shift, and go to state 47
    "\"dq-string-literal\""  shift, and go to state 48
    "'sq-string-literal'"    shift, and go to state 49
    "("                      shift, and go to state 50
    ")"                      shift, and go to state 119
    "{"                      shift, and go to state 51
    "*"                      shift, and go to state 52
    "+"                      shift, and go to state 53
    "-"                      shift, and go to state 54
    "^"                      shift, and go to state 55

    tid             go to state 56
    vid             go to state 57
    floatl          go to state 58
    mod_prefix      go to state 59
    expr            go to state 120
    long_exp        go to state 121
    expr_cl2        go to state 122
    bracketed_exp   go to state 61
    unit_exp        go to state 62
    paren_exp       go to state 63
    vtupleExpr      go to state 64
    vstructExpr     go to state 65
    primary_exp     go to state 66
    int_expr        go to state 67
    stringls        go to state 68
    if_exp          go to state 69
    chain_exp       go to state 70
    lambda_exp      go to state 71
    postfix_exp     go to state 72
    tcall_exp       go to state 73
    vcall_exp       go to state 74
    dot_name_exp    go to state 75
    dot_index_exp   go to state 76
    unary_exp       go to state 77
    unary_op        go to state 78
    binary_exp      go to state 79
    mul_binary_exp  go to state 80
    add_binary_exp  go to state 81
    cmp_binary_exp  go to state 82
    eq_binary_exp   go to state 83
    and_binary_exp  go to state 84
    xor_binary_exp  go to state 85
    or_binary_exp   go to state 86


State 51

   69 unit_exp: "{" • "}"
   73 vstructExpr: "{" • struct_exp_field_cl "}"
   89 chain_exp: "{" • expr "}"
   90          | "{" • chain_prefix "}"
   91          | "{" • chain_prefix expr "}"

    "<val_id>"               shift, and go to state 12
    "<TypeId>"               shift, and go to state 15
    "if"                     shift, and go to state 42
    "const"                  shift, and go to state 123
    "val"                    shift, and go to state 124
    "var"                    shift, and go to state 125
    "set"                    shift, and go to state 126
    "fn"                     shift, and go to state 43
    "not"                    shift, and go to state 44
    "discard"                shift, and go to state 127
    "42"                     shift, and go to state 45
    "0x2a"                   shift, and go to state 46
    "4.2"                    shift, and go to state 47
    "\"dq-string-literal\""  shift, and go to state 48
    "'sq-string-literal'"    shift, and go to state 49
    "("                      shift, and go to state 50
    "{"                      shift, and go to state 51
    "}"                      shift, and go to state 128
    "*"                      shift, and go to state 52
    "+"                      shift, and go to state 53
    "-"                      shift, and go to state 54
    "^"                      shift, and go to state 55

    chain_prefix_stmt    go to state 129
    const_stmt           go to state 130
    val_stmt             go to state 131
    var_stmt             go to state 132
    set_stmt             go to state 133
    discard_stmt         go to state 134
    tid                  go to state 56
    vid                  go to state 135
    floatl               go to state 58
    mod_prefix           go to state 59
    expr                 go to state 136
    bracketed_exp        go to state 61
    unit_exp             go to state 62
    paren_exp            go to state 63
    vtupleExpr           go to state 64
    vstructExpr          go to state 65
    primary_exp          go to state 66
    int_expr             go to state 67
    stringls             go to state 68
    if_exp               go to state 69
    chain_exp            go to state 70
    chain_prefix         go to state 137
    lambda_exp           go to state 71
    postfix_exp          go to state 72
    tcall_exp            go to state 73
    vcall_exp            go to state 74
    dot_name_exp         go to state 75
    dot_index_exp        go to state 76
    unary_exp            go to state 77
    unary_op             go to state 78
    binary_exp           go to state 79
    mul_binary_exp       go to state 80
    add_binary_exp       go to state 81
    cmp_binary_exp       go to state 82
    eq_binary_exp        go to state 83
    and_binary_exp       go to state 84
    xor_binary_exp       go to state 85
    or_binary_exp        go to state 86
    struct_exp_field     go to state 138
    struct_exp_field_cl  go to state 139


State 52

  113 unary_op: "*" •

    $default  reduce using rule 113 (unary_op)


State 53

  111 unary_op: "+" •

    $default  reduce using rule 111 (unary_op)


State 54

  112 unary_op: "-" •

    $default  reduce using rule 112 (unary_op)


State 55

  114 unary_op: "^" •

    $default  reduce using rule 114 (unary_op)


State 56

   53 mod_prefix: tid • ":"

    ":"  shift, and go to state 140


State 57

   75 primary_exp: vid •

    $default  reduce using rule 75 (primary_exp)


State 58

   77 primary_exp: floatl •

    $default  reduce using rule 77 (primary_exp)


State 59

   54 mod_prefix: mod_prefix • vid ":"
  106 dot_name_exp: mod_prefix • "<val_id>"

    "<val_id>"  shift, and go to state 141

    vid  go to state 142


State 60

   47 extern_stmt: "extern" tid "from" expr •

    $default  reduce using rule 47 (extern_stmt)


State 61

   74 primary_exp: bracketed_exp •

    $default  reduce using rule 74 (primary_exp)


State 62

   63 bracketed_exp: unit_exp •

    $default  reduce using rule 63 (bracketed_exp)


State 63

   64 bracketed_exp: paren_exp •

    $default  reduce using rule 64 (bracketed_exp)


State 64

   65 bracketed_exp: vtupleExpr •

    $default  reduce using rule 65 (bracketed_exp)


State 65

   66 bracketed_exp: vstructExpr •

    $default  reduce using rule 66 (bracketed_exp)


State 66

   96 postfix_exp: primary_exp •

    $default  reduce using rule 96 (postfix_exp)


State 67

   76 primary_exp: int_expr •

    $default  reduce using rule 76 (primary_exp)


State 68

   78 primary_exp: stringls •
   85 stringls: stringls • "'sq-string-literal'"
   86         | stringls • "\"dq-string-literal\""

    "\"dq-string-literal\""  shift, and go to state 143
    "'sq-string-literal'"    shift, and go to state 144

    $default  reduce using rule 78 (primary_exp)


State 69

   79 primary_exp: if_exp •

    $default  reduce using rule 79 (primary_exp)


State 70

   67 bracketed_exp: chain_exp •

    $default  reduce using rule 67 (bracketed_exp)


State 71

   80 primary_exp: lambda_exp •

    $default  reduce using rule 80 (primary_exp)


State 72

  101 tcall_exp: postfix_exp • "[" targ_cl "]"
  102 vcall_exp: postfix_exp • "(" ")"
  103          | postfix_exp • "(" varg_cl ")"
  104 dot_name_exp: postfix_exp • "." "<val_id>"
  105             | postfix_exp • "." "<TypeId>" "(" expr_cl0 ")"
  107 dot_index_exp: postfix_exp • "." int_expr
  108              | postfix_exp • "." bracketed_exp
  109 unary_exp: postfix_exp •

    "."  shift, and go to state 145
    "("  shift, and go to state 146
    "["  shift, and go to state 147

    $default  reduce using rule 109 (unary_exp)


State 73

   97 postfix_exp: tcall_exp •

    $default  reduce using rule 97 (postfix_exp)


State 74

   98 postfix_exp: vcall_exp •

    $default  reduce using rule 98 (postfix_exp)


State 75

   99 postfix_exp: dot_name_exp •

    $default  reduce using rule 99 (postfix_exp)


State 76

  100 postfix_exp: dot_index_exp •

    $default  reduce using rule 100 (postfix_exp)


State 77

  120 mul_binary_exp: unary_exp •

    $default  reduce using rule 120 (mul_binary_exp)


State 78

  110 unary_exp: unary_op • unary_exp

    "<val_id>"               shift, and go to state 12
    "<TypeId>"               shift, and go to state 15
    "if"                     shift, and go to state 42
    "fn"                     shift, and go to state 43
    "not"                    shift, and go to state 44
    "42"                     shift, and go to state 45
    "0x2a"                   shift, and go to state 46
    "4.2"                    shift, and go to state 47
    "\"dq-string-literal\""  shift, and go to state 48
    "'sq-string-literal'"    shift, and go to state 49
    "("                      shift, and go to state 50
    "{"                      shift, and go to state 51
    "*"                      shift, and go to state 52
    "+"                      shift, and go to state 53
    "-"                      shift, and go to state 54
    "^"                      shift, and go to state 55

    tid            go to state 56
    vid            go to state 57
    floatl         go to state 58
    mod_prefix     go to state 59
    bracketed_exp  go to state 61
    unit_exp       go to state 62
    paren_exp      go to state 63
    vtupleExpr     go to state 64
    vstructExpr    go to state 65
    primary_exp    go to state 66
    int_expr       go to state 67
    stringls       go to state 68
    if_exp         go to state 69
    chain_exp      go to state 70
    lambda_exp     go to state 71
    postfix_exp    go to state 72
    tcall_exp      go to state 73
    vcall_exp      go to state 74
    dot_name_exp   go to state 75
    dot_index_exp  go to state 76
    unary_exp      go to state 148
    unary_op       go to state 78


State 79

   55 expr: binary_exp •

    $default  reduce using rule 55 (expr)


State 80

  121 mul_binary_exp: mul_binary_exp • mul_binary_op unary_exp
  124 add_binary_exp: mul_binary_exp •

    "*"  shift, and go to state 149
    "/"  shift, and go to state 150
    "%"  shift, and go to state 151

    $default  reduce using rule 124 (add_binary_exp)

    mul_binary_op  go to state 152


State 81

  125 add_binary_exp: add_binary_exp • add_binary_op mul_binary_exp
  130 cmp_binary_exp: add_binary_exp •

    "+"  shift, and go to state 153
    "-"  shift, and go to state 154

    $default  reduce using rule 130 (cmp_binary_exp)

    add_binary_op  go to state 155


State 82

  131 cmp_binary_exp: cmp_binary_exp • cmp_binary_op add_binary_exp
  134 eq_binary_exp: cmp_binary_exp •

    "<"   shift, and go to state 156
    "<="  shift, and go to state 157
    ">"   shift, and go to state 158
    ">="  shift, and go to state 159

    $default  reduce using rule 134 (eq_binary_exp)

    cmp_binary_op  go to state 160


State 83

  135 eq_binary_exp: eq_binary_exp • eq_binary_op cmp_binary_exp
  136 and_binary_exp: eq_binary_exp •

    "=="  shift, and go to state 161
    "!="  shift, and go to state 162

    $default  reduce using rule 136 (and_binary_exp)

    eq_binary_op  go to state 163


State 84

  137 and_binary_exp: and_binary_exp • "and" eq_binary_exp
  138 xor_binary_exp: and_binary_exp •

    "and"  shift, and go to state 164

    $default  reduce using rule 138 (xor_binary_exp)


State 85

  139 xor_binary_exp: xor_binary_exp • "xor" and_binary_exp
  140 or_binary_exp: xor_binary_exp •

    "xor"  shift, and go to state 165

    $default  reduce using rule 140 (or_binary_exp)


State 86

  116 binary_exp: or_binary_exp •
  141 or_binary_exp: or_binary_exp • "or" xor_binary_exp

    "or"  shift, and go to state 166

    $default  reduce using rule 116 (binary_exp)


State 87

   45 using_stmt: "using" vid "." vid "*" •

    $default  reduce using rule 45 (using_stmt)


State 88

    8 top_mod_stmt: "mod" "<TypeId>" • "{" mod_content "}"
   10 mod_stmt: "mod" "<TypeId>" • tpattern_seq "{" mod_content "}"

    "["  shift, and go to state 92
    "{"  shift, and go to state 22
    "!"  shift, and go to state 95

    tpattern      go to state 98
    tpattern_seq  go to state 167


State 89

    8 top_mod_stmt: "mod" "<TypeId>" "{" mod_content "}" •

    $default  reduce using rule 8 (top_mod_stmt)


State 90

   12 mod_content: mod_content mod_content_stmt • ";"

    ";"  shift, and go to state 168


State 91

   11 mod_content: mod_content_stmt ";" •

    $default  reduce using rule 11 (mod_content)


State 92

  193 tpattern: "[" • tpattern_field_cl "]"

    "<val_id>"  shift, and go to state 12
    "<TypeId>"  shift, and go to state 15

    tid                go to state 169
    vid                go to state 170
    tpattern_field     go to state 171
    tpattern_field_cl  go to state 172


State 93

   42 mod_typeclass_stmt: tid "<" • tid typespec ">" "=" "{" type_query_exp_sl "}"

    "<TypeId>"  shift, and go to state 15

    tid  go to state 173


State 94

   32 mod_type_stmt: tid "=" • long_typespec

    "<TypeId>"  shift, and go to state 15
    "Fn"        shift, and go to state 100
    "("         shift, and go to state 101
    "{"         shift, and go to state 174

    tid               go to state 103
    mod_prefix        go to state 104
    primary_typespec  go to state 106
    paren_typespec    go to state 107
    tuple_typespec    go to state 108
    mod_prefix_tid    go to state 109
    fn_typespec       go to state 110
    postfix_typespec  go to state 111
    tcall_typespec    go to state 112
    unary_typespec    go to state 175
    long_typespec     go to state 176
    struct_typespec   go to state 177


State 95

  194 tpattern: "!" • "[" tpattern_field_cl "]"

    "["  shift, and go to state 178


State 96

   36 enum_field_pl: "|" • unprefixed_enum_field_pl

    "<TypeId>"  shift, and go to state 15

    unprefixed_enum_field_pl  go to state 179
    enum_field                go to state 180
    tid                       go to state 181


State 97

   34 mod_enum_stmt: tid enum_field_pl •

    $default  reduce using rule 34 (mod_enum_stmt)


State 98

  203 tpattern_seq: tpattern •

    $default  reduce using rule 203 (tpattern_seq)


State 99

   33 mod_type_stmt: tid tpattern_seq • "=" long_typespec
   35 mod_enum_stmt: tid tpattern_seq • enum_field_pl
   43 mod_typeclass_stmt: tid tpattern_seq • "<" tid typespec ">" "=" "{" type_query_exp_sl "}"
  204 tpattern_seq: tpattern_seq • tpattern

    "["  shift, and go to state 92
    "<"  shift, and go to state 182
    "="  shift, and go to state 183
    "!"  shift, and go to state 95
    "|"  shift, and go to state 96

    enum_field_pl  go to state 184
    tpattern       go to state 185


State 100

  163 fn_typespec: "Fn" • vpattern primary_typespec

    "("  shift, and go to state 117

    vpattern  go to state 186


State 101

  159 paren_typespec: "(" • typespec ")"
  160 tuple_typespec: "(" • typespec "," ")"
  161               | "(" • typespec_cl2 ")"

    "<TypeId>"  shift, and go to state 15
    "Fn"        shift, and go to state 100
    "("         shift, and go to state 101

    tid               go to state 103
    mod_prefix        go to state 104
    typespec          go to state 187
    typespec_cl2      go to state 188
    primary_typespec  go to state 106
    paren_typespec    go to state 107
    tuple_typespec    go to state 108
    mod_prefix_tid    go to state 109
    fn_typespec       go to state 110
    postfix_typespec  go to state 111
    tcall_typespec    go to state 112
    unary_typespec    go to state 113


State 102

   28 mod_val_stmt: vid "=" • expr

    "<val_id>"               shift, and go to state 12
    "<TypeId>"               shift, and go to state 15
    "if"                     shift, and go to state 42
    "fn"                     shift, and go to state 43
    "not"                    shift, and go to state 44
    "42"                     shift, and go to state 45
    "0x2a"                   shift, and go to state 46
    "4.2"                    shift, and go to state 47
    "\"dq-string-literal\""  shift, and go to state 48
    "'sq-string-literal'"    shift, and go to state 49
    "("                      shift, and go to state 50
    "{"                      shift, and go to state 51
    "*"                      shift, and go to state 52
    "+"                      shift, and go to state 53
    "-"                      shift, and go to state 54
    "^"                      shift, and go to state 55

    tid             go to state 56
    vid             go to state 57
    floatl          go to state 58
    mod_prefix      go to state 59
    expr            go to state 189
    bracketed_exp   go to state 61
    unit_exp        go to state 62
    paren_exp       go to state 63
    vtupleExpr      go to state 64
    vstructExpr     go to state 65
    primary_exp     go to state 66
    int_expr        go to state 67
    stringls        go to state 68
    if_exp          go to state 69
    chain_exp       go to state 70
    lambda_exp      go to state 71
    postfix_exp     go to state 72
    tcall_exp       go to state 73
    vcall_exp       go to state 74
    dot_name_exp    go to state 75
    dot_index_exp   go to state 76
    unary_exp       go to state 77
    unary_op        go to state 78
    binary_exp      go to state 79
    mul_binary_exp  go to state 80
    add_binary_exp  go to state 81
    cmp_binary_exp  go to state 82
    eq_binary_exp   go to state 83
    and_binary_exp  go to state 84
    xor_binary_exp  go to state 85
    or_binary_exp   go to state 86


State 103

   53 mod_prefix: tid • ":"
  154 primary_typespec: tid •

    ":"  shift, and go to state 140

    $default  reduce using rule 154 (primary_typespec)


State 104

   54 mod_prefix: mod_prefix • vid ":"
  162 mod_prefix_tid: mod_prefix • tid

    "<val_id>"  shift, and go to state 12
    "<TypeId>"  shift, and go to state 15

    tid  go to state 190
    vid  go to state 142


State 105

   30 mod_val_stmt: vid typespec • "from" tid stringl

    "from"  shift, and go to state 191


State 106

  164 postfix_typespec: primary_typespec •

    $default  reduce using rule 164 (postfix_typespec)


State 107

  155 primary_typespec: paren_typespec •

    $default  reduce using rule 155 (primary_typespec)


State 108

  156 primary_typespec: tuple_typespec •

    $default  reduce using rule 156 (primary_typespec)


State 109

  157 primary_typespec: mod_prefix_tid •

    $default  reduce using rule 157 (primary_typespec)


State 110

  158 primary_typespec: fn_typespec •

    $default  reduce using rule 158 (primary_typespec)


State 111

  166 tcall_typespec: postfix_typespec • "[" targ_cl "]"
  167 unary_typespec: postfix_typespec •

    "["  shift, and go to state 192

    $default  reduce using rule 167 (unary_typespec)


State 112

  165 postfix_typespec: tcall_typespec •

    $default  reduce using rule 165 (postfix_typespec)


State 113

  146 typespec: unary_typespec •

    $default  reduce using rule 146 (typespec)


State 114

   29 mod_val_stmt: vid tpattern_seq • "=" expr
   31             | vid tpattern_seq • typespec "from" tid stringl
  204 tpattern_seq: tpattern_seq • tpattern

    "<TypeId>"  shift, and go to state 15
    "Fn"        shift, and go to state 100
    "("         shift, and go to state 101
    "["         shift, and go to state 92
    "="         shift, and go to state 193
    "!"         shift, and go to state 95

    tid               go to state 103
    mod_prefix        go to state 104
    typespec          go to state 194
    primary_typespec  go to state 106
    paren_typespec    go to state 107
    tuple_typespec    go to state 108
    mod_prefix_tid    go to state 109
    fn_typespec       go to state 110
    postfix_typespec  go to state 111
    tcall_typespec    go to state 112
    unary_typespec    go to state 113
    tpattern          go to state 185


State 115

   46 import_stmt: "import" tid "from" stringl "type" • stringl

    "\"dq-string-literal\""  shift, and go to state 39
    "'sq-string-literal'"    shift, and go to state 40

    stringl  go to state 195


State 116

   87 if_exp: "if" bracketed_exp • "then" bracketed_exp
   88       | "if" bracketed_exp • "then" bracketed_exp "else" primary_exp

    "then"  shift, and go to state 196


State 117

  191 vpattern: "(" • vpattern_field_cl ")"
  192         | "(" • ")"

    "<val_id>"  shift, and go to state 12
    "out"       shift, and go to state 197
    "inout"     shift, and go to state 198
    ")"         shift, and go to state 199

    vid                go to state 200
    vpattern_field     go to state 201
    vpattern_field_cl  go to state 202


State 118

   94 lambda_exp: "fn" vpattern • bracketed_exp
   95           | "fn" vpattern • "->" typespec bracketed_exp

    "("   shift, and go to state 50
    "{"   shift, and go to state 51
    "->"  shift, and go to state 203

    bracketed_exp  go to state 204
    unit_exp       go to state 62
    paren_exp      go to state 63
    vtupleExpr     go to state 64
    vstructExpr    go to state 65
    chain_exp      go to state 70


State 119

   68 unit_exp: "(" ")" •

    $default  reduce using rule 68 (unit_exp)


State 120

   56 long_exp: expr •
   59 expr_cl2: expr • "," expr
   71 vtupleExpr: "(" expr • "," ")"

    ","  shift, and go to state 205

    $default  reduce using rule 56 (long_exp)


State 121

   70 paren_exp: "(" long_exp • ")"

    ")"  shift, and go to state 206


State 122

   60 expr_cl2: expr_cl2 • "," expr
   72 vtupleExpr: "(" expr_cl2 • ")"

    ","  shift, and go to state 207
    ")"  shift, and go to state 208


State 123

   18 const_stmt: "const" • lpattern "=" expr

    "<val_id>"  shift, and go to state 12
    "("         shift, and go to state 209

    vid                    go to state 210
    lpattern_field         go to state 211
    destructured_lpattern  go to state 212
    lpattern               go to state 213


State 124

   19 val_stmt: "val" • lpattern "=" expr

    "<val_id>"  shift, and go to state 12
    "("         shift, and go to state 209

    vid                    go to state 210
    lpattern_field         go to state 211
    destructured_lpattern  go to state 212
    lpattern               go to state 214


State 125

   20 var_stmt: "var" • lpattern "=" expr

    "<val_id>"  shift, and go to state 12
    "("         shift, and go to state 209

    vid                    go to state 210
    lpattern_field         go to state 211
    destructured_lpattern  go to state 212
    lpattern               go to state 215


State 126

   21 set_stmt: "set" • expr "=" expr

    "<val_id>"               shift, and go to state 12
    "<TypeId>"               shift, and go to state 15
    "if"                     shift, and go to state 42
    "fn"                     shift, and go to state 43
    "not"                    shift, and go to state 44
    "42"                     shift, and go to state 45
    "0x2a"                   shift, and go to state 46
    "4.2"                    shift, and go to state 47
    "\"dq-string-literal\""  shift, and go to state 48
    "'sq-string-literal'"    shift, and go to state 49
    "("                      shift, and go to state 50
    "{"                      shift, and go to state 51
    "*"                      shift, and go to state 52
    "+"                      shift, and go to state 53
    "-"                      shift, and go to state 54
    "^"                      shift, and go to state 55

    tid             go to state 56
    vid             go to state 57
    floatl          go to state 58
    mod_prefix      go to state 59
    expr            go to state 216
    bracketed_exp   go to state 61
    unit_exp        go to state 62
    paren_exp       go to state 63
    vtupleExpr      go to state 64
    vstructExpr     go to state 65
    primary_exp     go to state 66
    int_expr        go to state 67
    stringls        go to state 68
    if_exp          go to state 69
    chain_exp       go to state 70
    lambda_exp      go to state 71
    postfix_exp     go to state 72
    tcall_exp       go to state 73
    vcall_exp       go to state 74
    dot_name_exp    go to state 75
    dot_index_exp   go to state 76
    unary_exp       go to state 77
    unary_op        go to state 78
    binary_exp      go to state 79
    mul_binary_exp  go to state 80
    add_binary_exp  go to state 81
    cmp_binary_exp  go to state 82
    eq_binary_exp   go to state 83
    and_binary_exp  go to state 84
    xor_binary_exp  go to state 85
    or_binary_exp   go to state 86


State 127

   22 discard_stmt: "discard" • expr

    "<val_id>"               shift, and go to state 12
    "<TypeId>"               shift, and go to state 15
    "if"                     shift, and go to state 42
    "fn"                     shift, and go to state 43
    "not"                    shift, and go to state 44
    "42"                     shift, and go to state 45
    "0x2a"                   shift, and go to state 46
    "4.2"                    shift, and go to state 47
    "\"dq-string-literal\""  shift, and go to state 48
    "'sq-string-literal'"    shift, and go to state 49
    "("                      shift, and go to state 50
    "{"                      shift, and go to state 51
    "*"                      shift, and go to state 52
    "+"                      shift, and go to state 53
    "-"                      shift, and go to state 54
    "^"                      shift, and go to state 55

    tid             go to state 56
    vid             go to state 57
    floatl          go to state 58
    mod_prefix      go to state 59
    expr            go to state 217
    bracketed_exp   go to state 61
    unit_exp        go to state 62
    paren_exp       go to state 63
    vtupleExpr      go to state 64
    vstructExpr     go to state 65
    primary_exp     go to state 66
    int_expr        go to state 67
    stringls        go to state 68
    if_exp          go to state 69
    chain_exp       go to state 70
    lambda_exp      go to state 71
    postfix_exp     go to state 72
    tcall_exp       go to state 73
    vcall_exp       go to state 74
    dot_name_exp    go to state 75
    dot_index_exp   go to state 76
    unary_exp       go to state 77
    unary_op        go to state 78
    binary_exp      go to state 79
    mul_binary_exp  go to state 80
    add_binary_exp  go to state 81
    cmp_binary_exp  go to state 82
    eq_binary_exp   go to state 83
    and_binary_exp  go to state 84
    xor_binary_exp  go to state 85
    or_binary_exp   go to state 86


State 128

   69 unit_exp: "{" "}" •

    $default  reduce using rule 69 (unit_exp)


State 129

   92 chain_prefix: chain_prefix_stmt • ";"

    ";"  shift, and go to state 218


State 130

   13 chain_prefix_stmt: const_stmt •

    $default  reduce using rule 13 (chain_prefix_stmt)


State 131

   14 chain_prefix_stmt: val_stmt •

    $default  reduce using rule 14 (chain_prefix_stmt)


State 132

   15 chain_prefix_stmt: var_stmt •

    $default  reduce using rule 15 (chain_prefix_stmt)


State 133

   16 chain_prefix_stmt: set_stmt •

    $default  reduce using rule 16 (chain_prefix_stmt)


State 134

   17 chain_prefix_stmt: discard_stmt •

    $default  reduce using rule 17 (chain_prefix_stmt)


State 135

   75 primary_exp: vid •
  180 struct_exp_field: vid • "=" expr

    "="  shift, and go to state 219

    $default  reduce using rule 75 (primary_exp)


State 136

   89 chain_exp: "{" expr • "}"

    "}"  shift, and go to state 220


State 137

   90 chain_exp: "{" chain_prefix • "}"
   91          | "{" chain_prefix • expr "}"
   93 chain_prefix: chain_prefix • chain_prefix_stmt ";"

    "<val_id>"               shift, and go to state 12
    "<TypeId>"               shift, and go to state 15
    "if"                     shift, and go to state 42
    "const"                  shift, and go to state 123
    "val"                    shift, and go to state 124
    "var"                    shift, and go to state 125
    "set"                    shift, and go to state 126
    "fn"                     shift, and go to state 43
    "not"                    shift, and go to state 44
    "discard"                shift, and go to state 127
    "42"                     shift, and go to state 45
    "0x2a"                   shift, and go to state 46
    "4.2"                    shift, and go to state 47
    "\"dq-string-literal\""  shift, and go to state 48
    "'sq-string-literal'"    shift, and go to state 49
    "("                      shift, and go to state 50
    "{"                      shift, and go to state 51
    "}"                      shift, and go to state 221
    "*"                      shift, and go to state 52
    "+"                      shift, and go to state 53
    "-"                      shift, and go to state 54
    "^"                      shift, and go to state 55

    chain_prefix_stmt  go to state 222
    const_stmt         go to state 130
    val_stmt           go to state 131
    var_stmt           go to state 132
    set_stmt           go to state 133
    discard_stmt       go to state 134
    tid                go to state 56
    vid                go to state 57
    floatl             go to state 58
    mod_prefix         go to state 59
    expr               go to state 223
    bracketed_exp      go to state 61
    unit_exp           go to state 62
    paren_exp          go to state 63
    vtupleExpr         go to state 64
    vstructExpr        go to state 65
    primary_exp        go to state 66
    int_expr           go to state 67
    stringls           go to state 68
    if_exp             go to state 69
    chain_exp          go to state 70
    lambda_exp         go to state 71
    postfix_exp        go to state 72
    tcall_exp          go to state 73
    vcall_exp          go to state 74
    dot_name_exp       go to state 75
    dot_index_exp      go to state 76
    unary_exp          go to state 77
    unary_op           go to state 78
    binary_exp         go to state 79
    mul_binary_exp     go to state 80
    add_binary_exp     go to state 81
    cmp_binary_exp     go to state 82
    eq_binary_exp      go to state 83
    and_binary_exp     go to state 84
    xor_binary_exp     go to state 85
    or_binary_exp      go to state 86


State 138

  201 struct_exp_field_cl: struct_exp_field •

    $default  reduce using rule 201 (struct_exp_field_cl)


State 139

   73 vstructExpr: "{" struct_exp_field_cl • "}"
  202 struct_exp_field_cl: struct_exp_field_cl • "," struct_exp_field

    ","  shift, and go to state 224
    "}"  shift, and go to state 225


State 140

   53 mod_prefix: tid ":" •

    $default  reduce using rule 53 (mod_prefix)


State 141

   49 vid: "<val_id>" •
  106 dot_name_exp: mod_prefix "<val_id>" •

    ":"       reduce using rule 49 (vid)
    $default  reduce using rule 106 (dot_name_exp)


State 142

   54 mod_prefix: mod_prefix vid • ":"

    ":"  shift, and go to state 226


State 143

   86 stringls: stringls "\"dq-string-literal\"" •

    $default  reduce using rule 86 (stringls)


State 144

   85 stringls: stringls "'sq-string-literal'" •

    $default  reduce using rule 85 (stringls)


State 145

  104 dot_name_exp: postfix_exp "." • "<val_id>"
  105             | postfix_exp "." • "<TypeId>" "(" expr_cl0 ")"
  107 dot_index_exp: postfix_exp "." • int_expr
  108              | postfix_exp "." • bracketed_exp

    "<val_id>"  shift, and go to state 227
    "<TypeId>"  shift, and go to state 228
    "42"        shift, and go to state 45
    "0x2a"      shift, and go to state 46
    "("         shift, and go to state 50
    "{"         shift, and go to state 51

    bracketed_exp  go to state 229
    unit_exp       go to state 62
    paren_exp      go to state 63
    vtupleExpr     go to state 64
    vstructExpr    go to state 65
    int_expr       go to state 230
    chain_exp      go to state 70


State 146

  102 vcall_exp: postfix_exp "(" • ")"
  103          | postfix_exp "(" • varg_cl ")"

    "<val_id>"               shift, and go to state 12
    "<TypeId>"               shift, and go to state 15
    "if"                     shift, and go to state 42
    "fn"                     shift, and go to state 43
    "not"                    shift, and go to state 44
    "out"                    shift, and go to state 231
    "inout"                  shift, and go to state 232
    "42"                     shift, and go to state 45
    "0x2a"                   shift, and go to state 46
    "4.2"                    shift, and go to state 47
    "\"dq-string-literal\""  shift, and go to state 48
    "'sq-string-literal'"    shift, and go to state 49
    "("                      shift, and go to state 50
    ")"                      shift, and go to state 233
    "{"                      shift, and go to state 51
    "*"                      shift, and go to state 52
    "+"                      shift, and go to state 53
    "-"                      shift, and go to state 54
    "^"                      shift, and go to state 55

    tid             go to state 56
    vid             go to state 57
    floatl          go to state 58
    mod_prefix      go to state 59
    expr            go to state 234
    bracketed_exp   go to state 61
    unit_exp        go to state 62
    paren_exp       go to state 63
    vtupleExpr      go to state 64
    vstructExpr     go to state 65
    primary_exp     go to state 66
    int_expr        go to state 67
    stringls        go to state 68
    if_exp          go to state 69
    chain_exp       go to state 70
    lambda_exp      go to state 71
    postfix_exp     go to state 72
    tcall_exp       go to state 73
    vcall_exp       go to state 74
    dot_name_exp    go to state 75
    dot_index_exp   go to state 76
    unary_exp       go to state 77
    unary_op        go to state 78
    binary_exp      go to state 79
    mul_binary_exp  go to state 80
    add_binary_exp  go to state 81
    cmp_binary_exp  go to state 82
    eq_binary_exp   go to state 83
    and_binary_exp  go to state 84
    xor_binary_exp  go to state 85
    or_binary_exp   go to state 86
    varg            go to state 235
    varg_cl         go to state 236


State 147

  101 tcall_exp: postfix_exp "[" • targ_cl "]"

    "<val_id>"               shift, and go to state 12
    "<TypeId>"               shift, and go to state 15
    "if"                     shift, and go to state 42
    "fn"                     shift, and go to state 43
    "Fn"                     shift, and go to state 100
    "not"                    shift, and go to state 44
    "42"                     shift, and go to state 45
    "0x2a"                   shift, and go to state 46
    "4.2"                    shift, and go to state 47
    "\"dq-string-literal\""  shift, and go to state 48
    "'sq-string-literal'"    shift, and go to state 49
    "("                      shift, and go to state 237
    "{"                      shift, and go to state 51
    "*"                      shift, and go to state 52
    "+"                      shift, and go to state 53
    "-"                      shift, and go to state 54
    "^"                      shift, and go to state 55

    tid               go to state 103
    vid               go to state 57
    floatl            go to state 58
    mod_prefix        go to state 238
    expr              go to state 239
    bracketed_exp     go to state 61
    unit_exp          go to state 62
    paren_exp         go to state 63
    vtupleExpr        go to state 64
    vstructExpr       go to state 65
    primary_exp       go to state 66
    int_expr          go to state 67
    stringls          go to state 68
    if_exp            go to state 69
    chain_exp         go to state 70
    lambda_exp        go to state 71
    postfix_exp       go to state 72
    tcall_exp         go to state 73
    vcall_exp         go to state 74
    dot_name_exp      go to state 75
    dot_index_exp     go to state 76
    unary_exp         go to state 77
    unary_op          go to state 78
    binary_exp        go to state 79
    mul_binary_exp    go to state 80
    add_binary_exp    go to state 81
    cmp_binary_exp    go to state 82
    eq_binary_exp     go to state 83
    and_binary_exp    go to state 84
    xor_binary_exp    go to state 85
    or_binary_exp     go to state 86
    typespec          go to state 240
    primary_typespec  go to state 106
    paren_typespec    go to state 107
    tuple_typespec    go to state 108
    mod_prefix_tid    go to state 109
    fn_typespec       go to state 110
    postfix_typespec  go to state 111
    tcall_typespec    go to state 112
    unary_typespec    go to state 113
    targ              go to state 241
    targ_cl           go to state 242


State 148

  110 unary_exp: unary_op unary_exp •

    $default  reduce using rule 110 (unary_exp)


State 149

  117 mul_binary_op: "*" •

    $default  reduce using rule 117 (mul_binary_op)


State 150

  118 mul_binary_op: "/" •

    $default  reduce using rule 118 (mul_binary_op)


State 151

  119 mul_binary_op: "%" •

    $default  reduce using rule 119 (mul_binary_op)


State 152

  121 mul_binary_exp: mul_binary_exp mul_binary_op • unary_exp

    "<val_id>"               shift, and go to state 12
    "<TypeId>"               shift, and go to state 15
    "if"                     shift, and go to state 42
    "fn"                     shift, and go to state 43
    "not"                    shift, and go to state 44
    "42"                     shift, and go to state 45
    "0x2a"                   shift, and go to state 46
    "4.2"                    shift, and go to state 47
    "\"dq-string-literal\""  shift, and go to state 48
    "'sq-string-literal'"    shift, and go to state 49
    "("                      shift, and go to state 50
    "{"                      shift, and go to state 51
    "*"                      shift, and go to state 52
    "+"                      shift, and go to state 53
    "-"                      shift, and go to state 54
    "^"                      shift, and go to state 55

    tid            go to state 56
    vid            go to state 57
    floatl         go to state 58
    mod_prefix     go to state 59
    bracketed_exp  go to state 61
    unit_exp       go to state 62
    paren_exp      go to state 63
    vtupleExpr     go to state 64
    vstructExpr    go to state 65
    primary_exp    go to state 66
    int_expr       go to state 67
    stringls       go to state 68
    if_exp         go to state 69
    chain_exp      go to state 70
    lambda_exp     go to state 71
    postfix_exp    go to state 72
    tcall_exp      go to state 73
    vcall_exp      go to state 74
    dot_name_exp   go to state 75
    dot_index_exp  go to state 76
    unary_exp      go to state 243
    unary_op       go to state 78


State 153

  122 add_binary_op: "+" •

    $default  reduce using rule 122 (add_binary_op)


State 154

  123 add_binary_op: "-" •

    $default  reduce using rule 123 (add_binary_op)


State 155

  125 add_binary_exp: add_binary_exp add_binary_op • mul_binary_exp

    "<val_id>"               shift, and go to state 12
    "<TypeId>"               shift, and go to state 15
    "if"                     shift, and go to state 42
    "fn"                     shift, and go to state 43
    "not"                    shift, and go to state 44
    "42"                     shift, and go to state 45
    "0x2a"                   shift, and go to state 46
    "4.2"                    shift, and go to state 47
    "\"dq-string-literal\""  shift, and go to state 48
    "'sq-string-literal'"    shift, and go to state 49
    "("                      shift, and go to state 50
    "{"                      shift, and go to state 51
    "*"                      shift, and go to state 52
    "+"                      shift, and go to state 53
    "-"                      shift, and go to state 54
    "^"                      shift, and go to state 55

    tid             go to state 56
    vid             go to state 57
    floatl          go to state 58
    mod_prefix      go to state 59
    bracketed_exp   go to state 61
    unit_exp        go to state 62
    paren_exp       go to state 63
    vtupleExpr      go to state 64
    vstructExpr     go to state 65
    primary_exp     go to state 66
    int_expr        go to state 67
    stringls        go to state 68
    if_exp          go to state 69
    chain_exp       go to state 70
    lambda_exp      go to state 71
    postfix_exp     go to state 72
    tcall_exp       go to state 73
    vcall_exp       go to state 74
    dot_name_exp    go to state 75
    dot_index_exp   go to state 76
    unary_exp       go to state 77
    unary_op        go to state 78
    mul_binary_exp  go to state 244


State 156

  126 cmp_binary_op: "<" •

    $default  reduce using rule 126 (cmp_binary_op)


State 157

  127 cmp_binary_op: "<=" •

    $default  reduce using rule 127 (cmp_binary_op)


State 158

  128 cmp_binary_op: ">" •

    $default  reduce using rule 128 (cmp_binary_op)


State 159

  129 cmp_binary_op: ">=" •

    $default  reduce using rule 129 (cmp_binary_op)


State 160

  131 cmp_binary_exp: cmp_binary_exp cmp_binary_op • add_binary_exp

    "<val_id>"               shift, and go to state 12
    "<TypeId>"               shift, and go to state 15
    "if"                     shift, and go to state 42
    "fn"                     shift, and go to state 43
    "not"                    shift, and go to state 44
    "42"                     shift, and go to state 45
    "0x2a"                   shift, and go to state 46
    "4.2"                    shift, and go to state 47
    "\"dq-string-literal\""  shift, and go to state 48
    "'sq-string-literal'"    shift, and go to state 49
    "("                      shift, and go to state 50
    "{"                      shift, and go to state 51
    "*"                      shift, and go to state 52
    "+"                      shift, and go to state 53
    "-"                      shift, and go to state 54
    "^"                      shift, and go to state 55

    tid             go to state 56
    vid             go to state 57
    floatl          go to state 58
    mod_prefix      go to state 59
    bracketed_exp   go to state 61
    unit_exp        go to state 62
    paren_exp       go to state 63
    vtupleExpr      go to state 64
    vstructExpr     go to state 65
    primary_exp     go to state 66
    int_expr        go to state 67
    stringls        go to state 68
    if_exp          go to state 69
    chain_exp       go to state 70
    lambda_exp      go to state 71
    postfix_exp     go to state 72
    tcall_exp       go to state 73
    vcall_exp       go to state 74
    dot_name_exp    go to state 75
    dot_index_exp   go to state 76
    unary_exp       go to state 77
    unary_op        go to state 78
    mul_binary_exp  go to state 80
    add_binary_exp  go to state 245


State 161

  132 eq_binary_op: "==" •

    $default  reduce using rule 132 (eq_binary_op)


State 162

  133 eq_binary_op: "!=" •

    $default  reduce using rule 133 (eq_binary_op)


State 163

  135 eq_binary_exp: eq_binary_exp eq_binary_op • cmp_binary_exp

    "<val_id>"               shift, and go to state 12
    "<TypeId>"               shift, and go to state 15
    "if"                     shift, and go to state 42
    "fn"                     shift, and go to state 43
    "not"                    shift, and go to state 44
    "42"                     shift, and go to state 45
    "0x2a"                   shift, and go to state 46
    "4.2"                    shift, and go to state 47
    "\"dq-string-literal\""  shift, and go to state 48
    "'sq-string-literal'"    shift, and go to state 49
    "("                      shift, and go to state 50
    "{"                      shift, and go to state 51
    "*"                      shift, and go to state 52
    "+"                      shift, and go to state 53
    "-"                      shift, and go to state 54
    "^"                      shift, and go to state 55

    tid             go to state 56
    vid             go to state 57
    floatl          go to state 58
    mod_prefix      go to state 59
    bracketed_exp   go to state 61
    unit_exp        go to state 62
    paren_exp       go to state 63
    vtupleExpr      go to state 64
    vstructExpr     go to state 65
    primary_exp     go to state 66
    int_expr        go to state 67
    stringls        go to state 68
    if_exp          go to state 69
    chain_exp       go to state 70
    lambda_exp      go to state 71
    postfix_exp     go to state 72
    tcall_exp       go to state 73
    vcall_exp       go to state 74
    dot_name_exp    go to state 75
    dot_index_exp   go to state 76
    unary_exp       go to state 77
    unary_op        go to state 78
    mul_binary_exp  go to state 80
    add_binary_exp  go to state 81
    cmp_binary_exp  go to state 246


State 164

  137 and_binary_exp: and_binary_exp "and" • eq_binary_exp

    "<val_id>"               shift, and go to state 12
    "<TypeId>"               shift, and go to state 15
    "if"                     shift, and go to state 42
    "fn"                     shift, and go to state 43
    "not"                    shift, and go to state 44
    "42"                     shift, and go to state 45
    "0x2a"                   shift, and go to state 46
    "4.2"                    shift, and go to state 47
    "\"dq-string-literal\""  shift, and go to state 48
    "'sq-string-literal'"    shift, and go to state 49
    "("                      shift, and go to state 50
    "{"                      shift, and go to state 51
    "*"                      shift, and go to state 52
    "+"                      shift, and go to state 53
    "-"                      shift, and go to state 54
    "^"                      shift, and go to state 55

    tid             go to state 56
    vid             go to state 57
    floatl          go to state 58
    mod_prefix      go to state 59
    bracketed_exp   go to state 61
    unit_exp        go to state 62
    paren_exp       go to state 63
    vtupleExpr      go to state 64
    vstructExpr     go to state 65
    primary_exp     go to state 66
    int_expr        go to state 67
    stringls        go to state 68
    if_exp          go to state 69
    chain_exp       go to state 70
    lambda_exp      go to state 71
    postfix_exp     go to state 72
    tcall_exp       go to state 73
    vcall_exp       go to state 74
    dot_name_exp    go to state 75
    dot_index_exp   go to state 76
    unary_exp       go to state 77
    unary_op        go to state 78
    mul_binary_exp  go to state 80
    add_binary_exp  go to state 81
    cmp_binary_exp  go to state 82
    eq_binary_exp   go to state 247


State 165

  139 xor_binary_exp: xor_binary_exp "xor" • and_binary_exp

    "<val_id>"               shift, and go to state 12
    "<TypeId>"               shift, and go to state 15
    "if"                     shift, and go to state 42
    "fn"                     shift, and go to state 43
    "not"                    shift, and go to state 44
    "42"                     shift, and go to state 45
    "0x2a"                   shift, and go to state 46
    "4.2"                    shift, and go to state 47
    "\"dq-string-literal\""  shift, and go to state 48
    "'sq-string-literal'"    shift, and go to state 49
    "("                      shift, and go to state 50
    "{"                      shift, and go to state 51
    "*"                      shift, and go to state 52
    "+"                      shift, and go to state 53
    "-"                      shift, and go to state 54
    "^"                      shift, and go to state 55

    tid             go to state 56
    vid             go to state 57
    floatl          go to state 58
    mod_prefix      go to state 59
    bracketed_exp   go to state 61
    unit_exp        go to state 62
    paren_exp       go to state 63
    vtupleExpr      go to state 64
    vstructExpr     go to state 65
    primary_exp     go to state 66
    int_expr        go to state 67
    stringls        go to state 68
    if_exp          go to state 69
    chain_exp       go to state 70
    lambda_exp      go to state 71
    postfix_exp     go to state 72
    tcall_exp       go to state 73
    vcall_exp       go to state 74
    dot_name_exp    go to state 75
    dot_index_exp   go to state 76
    unary_exp       go to state 77
    unary_op        go to state 78
    mul_binary_exp  go to state 80
    add_binary_exp  go to state 81
    cmp_binary_exp  go to state 82
    eq_binary_exp   go to state 83
    and_binary_exp  go to state 248


State 166

  141 or_binary_exp: or_binary_exp "or" • xor_binary_exp

    "<val_id>"               shift, and go to state 12
    "<TypeId>"               shift, and go to state 15
    "if"                     shift, and go to state 42
    "fn"                     shift, and go to state 43
    "not"                    shift, and go to state 44
    "42"                     shift, and go to state 45
    "0x2a"                   shift, and go to state 46
    "4.2"                    shift, and go to state 47
    "\"dq-string-literal\""  shift, and go to state 48
    "'sq-string-literal'"    shift, and go to state 49
    "("                      shift, and go to state 50
    "{"                      shift, and go to state 51
    "*"                      shift, and go to state 52
    "+"                      shift, and go to state 53
    "-"                      shift, and go to state 54
    "^"                      shift, and go to state 55

    tid             go to state 56
    vid             go to state 57
    floatl          go to state 58
    mod_prefix      go to state 59
    bracketed_exp   go to state 61
    unit_exp        go to state 62
    paren_exp       go to state 63
    vtupleExpr      go to state 64
    vstructExpr     go to state 65
    primary_exp     go to state 66
    int_expr        go to state 67
    stringls        go to state 68
    if_exp          go to state 69
    chain_exp       go to state 70
    lambda_exp      go to state 71
    postfix_exp     go to state 72
    tcall_exp       go to state 73
    vcall_exp       go to state 74
    dot_name_exp    go to state 75
    dot_index_exp   go to state 76
    unary_exp       go to state 77
    unary_op        go to state 78
    mul_binary_exp  go to state 80
    add_binary_exp  go to state 81
    cmp_binary_exp  go to state 82
    eq_binary_exp   go to state 83
    and_binary_exp  go to state 84
    xor_binary_exp  go to state 249


State 167

   10 mod_stmt: "mod" "<TypeId>" tpattern_seq • "{" mod_content "}"
  204 tpattern_seq: tpattern_seq • tpattern

    "["  shift, and go to state 92
    "{"  shift, and go to state 250
    "!"  shift, and go to state 95

    tpattern  go to state 185


State 168

   12 mod_content: mod_content mod_content_stmt ";" •

    $default  reduce using rule 12 (mod_content)


State 169

  187 tpattern_field: tid • typespec

    "<TypeId>"  shift, and go to state 15
    "Fn"        shift, and go to state 100
    "("         shift, and go to state 101

    tid               go to state 103
    mod_prefix        go to state 104
    typespec          go to state 251
    primary_typespec  go to state 106
    paren_typespec    go to state 107
    tuple_typespec    go to state 108
    mod_prefix_tid    go to state 109
    fn_typespec       go to state 110
    postfix_typespec  go to state 111
    tcall_typespec    go to state 112
    unary_typespec    go to state 113


State 170

  186 tpattern_field: vid • typespec

    "<TypeId>"  shift, and go to state 15
    "Fn"        shift, and go to state 100
    "("         shift, and go to state 101

    tid               go to state 103
    mod_prefix        go to state 104
    typespec          go to state 252
    primary_typespec  go to state 106
    paren_typespec    go to state 107
    tuple_typespec    go to state 108
    mod_prefix_tid    go to state 109
    fn_typespec       go to state 110
    postfix_typespec  go to state 111
    tcall_typespec    go to state 112
    unary_typespec    go to state 113


State 171

  199 tpattern_field_cl: tpattern_field •

    $default  reduce using rule 199 (tpattern_field_cl)


State 172

  193 tpattern: "[" tpattern_field_cl • "]"
  200 tpattern_field_cl: tpattern_field_cl • "," tpattern_field

    ","  shift, and go to state 253
    "]"  shift, and go to state 254


State 173

   42 mod_typeclass_stmt: tid "<" tid • typespec ">" "=" "{" type_query_exp_sl "}"

    "<TypeId>"  shift, and go to state 15
    "Fn"        shift, and go to state 100
    "("         shift, and go to state 101

    tid               go to state 103
    mod_prefix        go to state 104
    typespec          go to state 255
    primary_typespec  go to state 106
    paren_typespec    go to state 107
    tuple_typespec    go to state 108
    mod_prefix_tid    go to state 109
    fn_typespec       go to state 110
    postfix_typespec  go to state 111
    tcall_typespec    go to state 112
    unary_typespec    go to state 113


State 174

  170 struct_typespec: "{" • struct_typespec_field_cl "}"

    "<val_id>"  shift, and go to state 12

    vid                       go to state 256
    struct_typespec_field     go to state 257
    struct_typespec_field_cl  go to state 258


State 175

  168 long_typespec: unary_typespec •

    $default  reduce using rule 168 (long_typespec)


State 176

   32 mod_type_stmt: tid "=" long_typespec •

    $default  reduce using rule 32 (mod_type_stmt)


State 177

  169 long_typespec: struct_typespec •

    $default  reduce using rule 169 (long_typespec)


State 178

  194 tpattern: "!" "[" • tpattern_field_cl "]"

    "<val_id>"  shift, and go to state 12
    "<TypeId>"  shift, and go to state 15

    tid                go to state 169
    vid                go to state 170
    tpattern_field     go to state 171
    tpattern_field_cl  go to state 259


State 179

   36 enum_field_pl: "|" unprefixed_enum_field_pl •
   38 unprefixed_enum_field_pl: unprefixed_enum_field_pl • "|" enum_field

    "|"  shift, and go to state 260

    $default  reduce using rule 36 (enum_field_pl)


State 180

   37 unprefixed_enum_field_pl: enum_field •

    $default  reduce using rule 37 (unprefixed_enum_field_pl)


State 181

   39 enum_field: tid •
   40           | tid • "(" ")"
   41           | tid • "(" typespec_cl1 ")"

    "("  shift, and go to state 261

    $default  reduce using rule 39 (enum_field)


State 182

   43 mod_typeclass_stmt: tid tpattern_seq "<" • tid typespec ">" "=" "{" type_query_exp_sl "}"

    "<TypeId>"  shift, and go to state 15

    tid  go to state 262


State 183

   33 mod_type_stmt: tid tpattern_seq "=" • long_typespec

    "<TypeId>"  shift, and go to state 15
    "Fn"        shift, and go to state 100
    "("         shift, and go to state 101
    "{"         shift, and go to state 174

    tid               go to state 103
    mod_prefix        go to state 104
    primary_typespec  go to state 106
    paren_typespec    go to state 107
    tuple_typespec    go to state 108
    mod_prefix_tid    go to state 109
    fn_typespec       go to state 110
    postfix_typespec  go to state 111
    tcall_typespec    go to state 112
    unary_typespec    go to state 175
    long_typespec     go to state 263
    struct_typespec   go to state 177


State 184

   35 mod_enum_stmt: tid tpattern_seq enum_field_pl •

    $default  reduce using rule 35 (mod_enum_stmt)


State 185

  204 tpattern_seq: tpattern_seq tpattern •

    $default  reduce using rule 204 (tpattern_seq)


State 186

  163 fn_typespec: "Fn" vpattern • primary_typespec

    "<TypeId>"  shift, and go to state 15
    "Fn"        shift, and go to state 100
    "("         shift, and go to state 101

    tid               go to state 103
    mod_prefix        go to state 104
    primary_typespec  go to state 264
    paren_typespec    go to state 107
    tuple_typespec    go to state 108
    mod_prefix_tid    go to state 109
    fn_typespec       go to state 110


State 187

  149 typespec_cl2: typespec • "," typespec
  159 paren_typespec: "(" typespec • ")"
  160 tuple_typespec: "(" typespec • "," ")"

    ","  shift, and go to state 265
    ")"  shift, and go to state 266


State 188

  150 typespec_cl2: typespec_cl2 • "," typespec
  161 tuple_typespec: "(" typespec_cl2 • ")"

    ","  shift, and go to state 267
    ")"  shift, and go to state 268


State 189

   28 mod_val_stmt: vid "=" expr •

    $default  reduce using rule 28 (mod_val_stmt)


State 190

  162 mod_prefix_tid: mod_prefix tid •

    $default  reduce using rule 162 (mod_prefix_tid)


State 191

   30 mod_val_stmt: vid typespec "from" • tid stringl

    "<TypeId>"  shift, and go to state 15

    tid  go to state 269


State 192

  166 tcall_typespec: postfix_typespec "[" • targ_cl "]"

    "<val_id>"               shift, and go to state 12
    "<TypeId>"               shift, and go to state 15
    "if"                     shift, and go to state 42
    "fn"                     shift, and go to state 43
    "Fn"                     shift, and go to state 100
    "not"                    shift, and go to state 44
    "42"                     shift, and go to state 45
    "0x2a"                   shift, and go to state 46
    "4.2"                    shift, and go to state 47
    "\"dq-string-literal\""  shift, and go to state 48
    "'sq-string-literal'"    shift, and go to state 49
    "("                      shift, and go to state 237
    "{"                      shift, and go to state 51
    "*"                      shift, and go to state 52
    "+"                      shift, and go to state 53
    "-"                      shift, and go to state 54
    "^"                      shift, and go to state 55

    tid               go to state 103
    vid               go to state 57
    floatl            go to state 58
    mod_prefix        go to state 238
    expr              go to state 239
    bracketed_exp     go to state 61
    unit_exp          go to state 62
    paren_exp         go to state 63
    vtupleExpr        go to state 64
    vstructExpr       go to state 65
    primary_exp       go to state 66
    int_expr          go to state 67
    stringls          go to state 68
    if_exp            go to state 69
    chain_exp         go to state 70
    lambda_exp        go to state 71
    postfix_exp       go to state 72
    tcall_exp         go to state 73
    vcall_exp         go to state 74
    dot_name_exp      go to state 75
    dot_index_exp     go to state 76
    unary_exp         go to state 77
    unary_op          go to state 78
    binary_exp        go to state 79
    mul_binary_exp    go to state 80
    add_binary_exp    go to state 81
    cmp_binary_exp    go to state 82
    eq_binary_exp     go to state 83
    and_binary_exp    go to state 84
    xor_binary_exp    go to state 85
    or_binary_exp     go to state 86
    typespec          go to state 240
    primary_typespec  go to state 106
    paren_typespec    go to state 107
    tuple_typespec    go to state 108
    mod_prefix_tid    go to state 109
    fn_typespec       go to state 110
    postfix_typespec  go to state 111
    tcall_typespec    go to state 112
    unary_typespec    go to state 113
    targ              go to state 241
    targ_cl           go to state 270


State 193

   29 mod_val_stmt: vid tpattern_seq "=" • expr

    "<val_id>"               shift, and go to state 12
    "<TypeId>"               shift, and go to state 15
    "if"                     shift, and go to state 42
    "fn"                     shift, and go to state 43
    "not"                    shift, and go to state 44
    "42"                     shift, and go to state 45
    "0x2a"                   shift, and go to state 46
    "4.2"                    shift, and go to state 47
    "\"dq-string-literal\""  shift, and go to state 48
    "'sq-string-literal'"    shift, and go to state 49
    "("                      shift, and go to state 50
    "{"                      shift, and go to state 51
    "*"                      shift, and go to state 52
    "+"                      shift, and go to state 53
    "-"                      shift, and go to state 54
    "^"                      shift, and go to state 55

    tid             go to state 56
    vid             go to state 57
    floatl          go to state 58
    mod_prefix      go to state 59
    expr            go to state 271
    bracketed_exp   go to state 61
    unit_exp        go to state 62
    paren_exp       go to state 63
    vtupleExpr      go to state 64
    vstructExpr     go to state 65
    primary_exp     go to state 66
    int_expr        go to state 67
    stringls        go to state 68
    if_exp          go to state 69
    chain_exp       go to state 70
    lambda_exp      go to state 71
    postfix_exp     go to state 72
    tcall_exp       go to state 73
    vcall_exp       go to state 74
    dot_name_exp    go to state 75
    dot_index_exp   go to state 76
    unary_exp       go to state 77
    unary_op        go to state 78
    binary_exp      go to state 79
    mul_binary_exp  go to state 80
    add_binary_exp  go to state 81
    cmp_binary_exp  go to state 82
    eq_binary_exp   go to state 83
    and_binary_exp  go to state 84
    xor_binary_exp  go to state 85
    or_binary_exp   go to state 86


State 194

   31 mod_val_stmt: vid tpattern_seq typespec • "from" tid stringl

    "from"  shift, and go to state 272


State 195

   46 import_stmt: "import" tid "from" stringl "type" stringl •

    $default  reduce using rule 46 (import_stmt)


State 196

   87 if_exp: "if" bracketed_exp "then" • bracketed_exp
   88       | "if" bracketed_exp "then" • bracketed_exp "else" primary_exp

    "("  shift, and go to state 50
    "{"  shift, and go to state 51

    bracketed_exp  go to state 273
    unit_exp       go to state 62
    paren_exp      go to state 63
    vtupleExpr     go to state 64
    vstructExpr    go to state 65
    chain_exp      go to state 70


State 197

  182 vpattern_field: "out" • vid typespec

    "<val_id>"  shift, and go to state 12

    vid  go to state 274


State 198

  183 vpattern_field: "inout" • vid typespec

    "<val_id>"  shift, and go to state 12

    vid  go to state 275


State 199

  192 vpattern: "(" ")" •

    $default  reduce using rule 192 (vpattern)


State 200

  181 vpattern_field: vid • typespec

    "<TypeId>"  shift, and go to state 15
    "Fn"        shift, and go to state 100
    "("         shift, and go to state 101

    tid               go to state 103
    mod_prefix        go to state 104
    typespec          go to state 276
    primary_typespec  go to state 106
    paren_typespec    go to state 107
    tuple_typespec    go to state 108
    mod_prefix_tid    go to state 109
    fn_typespec       go to state 110
    postfix_typespec  go to state 111
    tcall_typespec    go to state 112
    unary_typespec    go to state 113


State 201

  195 vpattern_field_cl: vpattern_field •

    $default  reduce using rule 195 (vpattern_field_cl)


State 202

  191 vpattern: "(" vpattern_field_cl • ")"
  196 vpattern_field_cl: vpattern_field_cl • "," vpattern_field

    ","  shift, and go to state 277
    ")"  shift, and go to state 278


State 203

   95 lambda_exp: "fn" vpattern "->" • typespec bracketed_exp

    "<TypeId>"  shift, and go to state 15
    "Fn"        shift, and go to state 100
    "("         shift, and go to state 101

    tid               go to state 103
    mod_prefix        go to state 104
    typespec          go to state 279
    primary_typespec  go to state 106
    paren_typespec    go to state 107
    tuple_typespec    go to state 108
    mod_prefix_tid    go to state 109
    fn_typespec       go to state 110
    postfix_typespec  go to state 111
    tcall_typespec    go to state 112
    unary_typespec    go to state 113


State 204

   94 lambda_exp: "fn" vpattern bracketed_exp •

    $default  reduce using rule 94 (lambda_exp)


State 205

   59 expr_cl2: expr "," • expr
   71 vtupleExpr: "(" expr "," • ")"

    "<val_id>"               shift, and go to state 12
    "<TypeId>"               shift, and go to state 15
    "if"                     shift, and go to state 42
    "fn"                     shift, and go to state 43
    "not"                    shift, and go to state 44
    "42"                     shift, and go to state 45
    "0x2a"                   shift, and go to state 46
    "4.2"                    shift, and go to state 47
    "\"dq-string-literal\""  shift, and go to state 48
    "'sq-string-literal'"    shift, and go to state 49
    "("                      shift, and go to state 50
    ")"                      shift, and go to state 280
    "{"                      shift, and go to state 51
    "*"                      shift, and go to state 52
    "+"                      shift, and go to state 53
    "-"                      shift, and go to state 54
    "^"                      shift, and go to state 55

    tid             go to state 56
    vid             go to state 57
    floatl          go to state 58
    mod_prefix      go to state 59
    expr            go to state 281
    bracketed_exp   go to state 61
    unit_exp        go to state 62
    paren_exp       go to state 63
    vtupleExpr      go to state 64
    vstructExpr     go to state 65
    primary_exp     go to state 66
    int_expr        go to state 67
    stringls        go to state 68
    if_exp          go to state 69
    chain_exp       go to state 70
    lambda_exp      go to state 71
    postfix_exp     go to state 72
    tcall_exp       go to state 73
    vcall_exp       go to state 74
    dot_name_exp    go to state 75
    dot_index_exp   go to state 76
    unary_exp       go to state 77
    unary_op        go to state 78
    binary_exp      go to state 79
    mul_binary_exp  go to state 80
    add_binary_exp  go to state 81
    cmp_binary_exp  go to state 82
    eq_binary_exp   go to state 83
    and_binary_exp  go to state 84
    xor_binary_exp  go to state 85
    or_binary_exp   go to state 86


State 206

   70 paren_exp: "(" long_exp ")" •

    $default  reduce using rule 70 (paren_exp)


State 207

   60 expr_cl2: expr_cl2 "," • expr

    "<val_id>"               shift, and go to state 12
    "<TypeId>"               shift, and go to state 15
    "if"                     shift, and go to state 42
    "fn"                     shift, and go to state 43
    "not"                    shift, and go to state 44
    "42"                     shift, and go to state 45
    "0x2a"                   shift, and go to state 46
    "4.2"                    shift, and go to state 47
    "\"dq-string-literal\""  shift, and go to state 48
    "'sq-string-literal'"    shift, and go to state 49
    "("                      shift, and go to state 50
    "{"                      shift, and go to state 51
    "*"                      shift, and go to state 52
    "+"                      shift, and go to state 53
    "-"                      shift, and go to state 54
    "^"                      shift, and go to state 55

    tid             go to state 56
    vid             go to state 57
    floatl          go to state 58
    mod_prefix      go to state 59
    expr            go to state 282
    bracketed_exp   go to state 61
    unit_exp        go to state 62
    paren_exp       go to state 63
    vtupleExpr      go to state 64
    vstructExpr     go to state 65
    primary_exp     go to state 66
    int_expr        go to state 67
    stringls        go to state 68
    if_exp          go to state 69
    chain_exp       go to state 70
    lambda_exp      go to state 71
    postfix_exp     go to state 72
    tcall_exp       go to state 73
    vcall_exp       go to state 74
    dot_name_exp    go to state 75
    dot_index_exp   go to state 76
    unary_exp       go to state 77
    unary_op        go to state 78
    binary_exp      go to state 79
    mul_binary_exp  go to state 80
    add_binary_exp  go to state 81
    cmp_binary_exp  go to state 82
    eq_binary_exp   go to state 83
    and_binary_exp  go to state 84
    xor_binary_exp  go to state 85
    or_binary_exp   go to state 86


State 208

   72 vtupleExpr: "(" expr_cl2 ")" •

    $default  reduce using rule 72 (vtupleExpr)


State 209

  188 destructured_lpattern: "(" • lpattern_field_cl ")"

    "<val_id>"  shift, and go to state 12

    vid                go to state 210
    lpattern_field     go to state 283
    lpattern_field_cl  go to state 284


State 210

  184 lpattern_field: vid • typespec
  185               | vid •

    "<TypeId>"  shift, and go to state 15
    "Fn"        shift, and go to state 100
    "("         shift, and go to state 101

    $default  reduce using rule 185 (lpattern_field)

    tid               go to state 103
    mod_prefix        go to state 104
    typespec          go to state 285
    primary_typespec  go to state 106
    paren_typespec    go to state 107
    tuple_typespec    go to state 108
    mod_prefix_tid    go to state 109
    fn_typespec       go to state 110
    postfix_typespec  go to state 111
    tcall_typespec    go to state 112
    unary_typespec    go to state 113


State 211

  189 lpattern: lpattern_field •

    $default  reduce using rule 189 (lpattern)


State 212

  190 lpattern: destructured_lpattern •

    $default  reduce using rule 190 (lpattern)


State 213

   18 const_stmt: "const" lpattern • "=" expr

    "="  shift, and go to state 286


State 214

   19 val_stmt: "val" lpattern • "=" expr

    "="  shift, and go to state 287


State 215

   20 var_stmt: "var" lpattern • "=" expr

    "="  shift, and go to state 288


State 216

   21 set_stmt: "set" expr • "=" expr

    "="  shift, and go to state 289


State 217

   22 discard_stmt: "discard" expr •

    $default  reduce using rule 22 (discard_stmt)


State 218

   92 chain_prefix: chain_prefix_stmt ";" •

    $default  reduce using rule 92 (chain_prefix)


State 219

  180 struct_exp_field: vid "=" • expr

    "<val_id>"               shift, and go to state 12
    "<TypeId>"               shift, and go to state 15
    "if"                     shift, and go to state 42
    "fn"                     shift, and go to state 43
    "not"                    shift, and go to state 44
    "42"                     shift, and go to state 45
    "0x2a"                   shift, and go to state 46
    "4.2"                    shift, and go to state 47
    "\"dq-string-literal\""  shift, and go to state 48
    "'sq-string-literal'"    shift, and go to state 49
    "("                      shift, and go to state 50
    "{"                      shift, and go to state 51
    "*"                      shift, and go to state 52
    "+"                      shift, and go to state 53
    "-"                      shift, and go to state 54
    "^"                      shift, and go to state 55

    tid             go to state 56
    vid             go to state 57
    floatl          go to state 58
    mod_prefix      go to state 59
    expr            go to state 290
    bracketed_exp   go to state 61
    unit_exp        go to state 62
    paren_exp       go to state 63
    vtupleExpr      go to state 64
    vstructExpr     go to state 65
    primary_exp     go to state 66
    int_expr        go to state 67
    stringls        go to state 68
    if_exp          go to state 69
    chain_exp       go to state 70
    lambda_exp      go to state 71
    postfix_exp     go to state 72
    tcall_exp       go to state 73
    vcall_exp       go to state 74
    dot_name_exp    go to state 75
    dot_index_exp   go to state 76
    unary_exp       go to state 77
    unary_op        go to state 78
    binary_exp      go to state 79
    mul_binary_exp  go to state 80
    add_binary_exp  go to state 81
    cmp_binary_exp  go to state 82
    eq_binary_exp   go to state 83
    and_binary_exp  go to state 84
    xor_binary_exp  go to state 85
    or_binary_exp   go to state 86


State 220

   89 chain_exp: "{" expr "}" •

    $default  reduce using rule 89 (chain_exp)


State 221

   90 chain_exp: "{" chain_prefix "}" •

    $default  reduce using rule 90 (chain_exp)


State 222

   93 chain_prefix: chain_prefix chain_prefix_stmt • ";"

    ";"  shift, and go to state 291


State 223

   91 chain_exp: "{" chain_prefix expr • "}"

    "}"  shift, and go to state 292


State 224

  202 struct_exp_field_cl: struct_exp_field_cl "," • struct_exp_field

    "<val_id>"  shift, and go to state 12

    vid               go to state 293
    struct_exp_field  go to state 294


State 225

   73 vstructExpr: "{" struct_exp_field_cl "}" •

    $default  reduce using rule 73 (vstructExpr)


State 226

   54 mod_prefix: mod_prefix vid ":" •

    $default  reduce using rule 54 (mod_prefix)


State 227

  104 dot_name_exp: postfix_exp "." "<val_id>" •

    $default  reduce using rule 104 (dot_name_exp)


State 228

  105 dot_name_exp: postfix_exp "." "<TypeId>" • "(" expr_cl0 ")"

    "("  shift, and go to state 295


State 229

  108 dot_index_exp: postfix_exp "." bracketed_exp •

    $default  reduce using rule 108 (dot_index_exp)


State 230

  107 dot_index_exp: postfix_exp "." int_expr •

    $default  reduce using rule 107 (dot_index_exp)


State 231

  176 varg: "out" • expr

    "<val_id>"               shift, and go to state 12
    "<TypeId>"               shift, and go to state 15
    "if"                     shift, and go to state 42
    "fn"                     shift, and go to state 43
    "not"                    shift, and go to state 44
    "42"                     shift, and go to state 45
    "0x2a"                   shift, and go to state 46
    "4.2"                    shift, and go to state 47
    "\"dq-string-literal\""  shift, and go to state 48
    "'sq-string-literal'"    shift, and go to state 49
    "("                      shift, and go to state 50
    "{"                      shift, and go to state 51
    "*"                      shift, and go to state 52
    "+"                      shift, and go to state 53
    "-"                      shift, and go to state 54
    "^"                      shift, and go to state 55

    tid             go to state 56
    vid             go to state 57
    floatl          go to state 58
    mod_prefix      go to state 59
    expr            go to state 296
    bracketed_exp   go to state 61
    unit_exp        go to state 62
    paren_exp       go to state 63
    vtupleExpr      go to state 64
    vstructExpr     go to state 65
    primary_exp     go to state 66
    int_expr        go to state 67
    stringls        go to state 68
    if_exp          go to state 69
    chain_exp       go to state 70
    lambda_exp      go to state 71
    postfix_exp     go to state 72
    tcall_exp       go to state 73
    vcall_exp       go to state 74
    dot_name_exp    go to state 75
    dot_index_exp   go to state 76
    unary_exp       go to state 77
    unary_op        go to state 78
    binary_exp      go to state 79
    mul_binary_exp  go to state 80
    add_binary_exp  go to state 81
    cmp_binary_exp  go to state 82
    eq_binary_exp   go to state 83
    and_binary_exp  go to state 84
    xor_binary_exp  go to state 85
    or_binary_exp   go to state 86


State 232

  177 varg: "inout" • expr

    "<val_id>"               shift, and go to state 12
    "<TypeId>"               shift, and go to state 15
    "if"                     shift, and go to state 42
    "fn"                     shift, and go to state 43
    "not"                    shift, and go to state 44
    "42"                     shift, and go to state 45
    "0x2a"                   shift, and go to state 46
    "4.2"                    shift, and go to state 47
    "\"dq-string-literal\""  shift, and go to state 48
    "'sq-string-literal'"    shift, and go to state 49
    "("                      shift, and go to state 50
    "{"                      shift, and go to state 51
    "*"                      shift, and go to state 52
    "+"                      shift, and go to state 53
    "-"                      shift, and go to state 54
    "^"                      shift, and go to state 55

    tid             go to state 56
    vid             go to state 57
    floatl          go to state 58
    mod_prefix      go to state 59
    expr            go to state 297
    bracketed_exp   go to state 61
    unit_exp        go to state 62
    paren_exp       go to state 63
    vtupleExpr      go to state 64
    vstructExpr     go to state 65
    primary_exp     go to state 66
    int_expr        go to state 67
    stringls        go to state 68
    if_exp          go to state 69
    chain_exp       go to state 70
    lambda_exp      go to state 71
    postfix_exp     go to state 72
    tcall_exp       go to state 73
    vcall_exp       go to state 74
    dot_name_exp    go to state 75
    dot_index_exp   go to state 76
    unary_exp       go to state 77
    unary_op        go to state 78
    binary_exp      go to state 79
    mul_binary_exp  go to state 80
    add_binary_exp  go to state 81
    cmp_binary_exp  go to state 82
    eq_binary_exp   go to state 83
    and_binary_exp  go to state 84
    xor_binary_exp  go to state 85
    or_binary_exp   go to state 86


State 233

  102 vcall_exp: postfix_exp "(" ")" •

    $default  reduce using rule 102 (vcall_exp)


State 234

  175 varg: expr •

    $default  reduce using rule 175 (varg)


State 235

  178 varg_cl: varg •

    $default  reduce using rule 178 (varg_cl)


State 236

  103 vcall_exp: postfix_exp "(" varg_cl • ")"
  179 varg_cl: varg_cl • "," varg

    ","  shift, and go to state 298
    ")"  shift, and go to state 299


State 237

   68 unit_exp: "(" • ")"
   70 paren_exp: "(" • long_exp ")"
   71 vtupleExpr: "(" • expr "," ")"
   72           | "(" • expr_cl2 ")"
  159 paren_typespec: "(" • typespec ")"
  160 tuple_typespec: "(" • typespec "," ")"
  161               | "(" • typespec_cl2 ")"

    "<val_id>"               shift, and go to state 12
    "<TypeId>"               shift, and go to state 15
    "if"                     shift, and go to state 42
    "fn"                     shift, and go to state 43
    "Fn"                     shift, and go to state 100
    "not"                    shift, and go to state 44
    "42"                     shift, and go to state 45
    "0x2a"                   shift, and go to state 46
    "4.2"                    shift, and go to state 47
    "\"dq-string-literal\""  shift, and go to state 48
    "'sq-string-literal'"    shift, and go to state 49
    "("                      shift, and go to state 237
    ")"                      shift, and go to state 119
    "{"                      shift, and go to state 51
    "*"                      shift, and go to state 52
    "+"                      shift, and go to state 53
    "-"                      shift, and go to state 54
    "^"                      shift, and go to state 55

    tid               go to state 103
    vid               go to state 57
    floatl            go to state 58
    mod_prefix        go to state 238
    expr              go to state 120
    long_exp          go to state 121
    expr_cl2          go to state 122
    bracketed_exp     go to state 61
    unit_exp          go to state 62
    paren_exp         go to state 63
    vtupleExpr        go to state 64
    vstructExpr       go to state 65
    primary_exp       go to state 66
    int_expr          go to state 67
    stringls          go to state 68
    if_exp            go to state 69
    chain_exp         go to state 70
    lambda_exp        go to state 71
    postfix_exp       go to state 72
    tcall_exp         go to state 73
    vcall_exp         go to state 74
    dot_name_exp      go to state 75
    dot_index_exp     go to state 76
    unary_exp         go to state 77
    unary_op          go to state 78
    binary_exp        go to state 79
    mul_binary_exp    go to state 80
    add_binary_exp    go to state 81
    cmp_binary_exp    go to state 82
    eq_binary_exp     go to state 83
    and_binary_exp    go to state 84
    xor_binary_exp    go to state 85
    or_binary_exp     go to state 86
    typespec          go to state 187
    typespec_cl2      go to state 188
    primary_typespec  go to state 106
    paren_typespec    go to state 107
    tuple_typespec    go to state 108
    mod_prefix_tid    go to state 109
    fn_typespec       go to state 110
    postfix_typespec  go to state 111
    tcall_typespec    go to state 112
    unary_typespec    go to state 113


State 238

   54 mod_prefix: mod_prefix • vid ":"
  106 dot_name_exp: mod_prefix • "<val_id>"
  162 mod_prefix_tid: mod_prefix • tid

    "<val_id>"  shift, and go to state 141
    "<TypeId>"  shift, and go to state 15

    tid  go to state 190
    vid  go to state 142


State 239

  172 targ: expr •

    $default  reduce using rule 172 (targ)


State 240

  171 targ: typespec •

    $default  reduce using rule 171 (targ)


State 241

  173 targ_cl: targ •

    $default  reduce using rule 173 (targ_cl)


State 242

  101 tcall_exp: postfix_exp "[" targ_cl • "]"
  174 targ_cl: targ_cl • "," targ

    ","  shift, and go to state 300
    "]"  shift, and go to state 301


State 243

  121 mul_binary_exp: mul_binary_exp mul_binary_op unary_exp •

    $default  reduce using rule 121 (mul_binary_exp)


State 244

  121 mul_binary_exp: mul_binary_exp • mul_binary_op unary_exp
  125 add_binary_exp: add_binary_exp add_binary_op mul_binary_exp •

    "*"  shift, and go to state 149
    "/"  shift, and go to state 150
    "%"  shift, and go to state 151

    $default  reduce using rule 125 (add_binary_exp)

    mul_binary_op  go to state 152


State 245

  125 add_binary_exp: add_binary_exp • add_binary_op mul_binary_exp
  131 cmp_binary_exp: cmp_binary_exp cmp_binary_op add_binary_exp •

    "+"  shift, and go to state 153
    "-"  shift, and go to state 154

    $default  reduce using rule 131 (cmp_binary_exp)

    add_binary_op  go to state 155


State 246

  131 cmp_binary_exp: cmp_binary_exp • cmp_binary_op add_binary_exp
  135 eq_binary_exp: eq_binary_exp eq_binary_op cmp_binary_exp •

    "<"   shift, and go to state 156
    "<="  shift, and go to state 157
    ">"   shift, and go to state 158
    ">="  shift, and go to state 159

    $default  reduce using rule 135 (eq_binary_exp)

    cmp_binary_op  go to state 160


State 247

  135 eq_binary_exp: eq_binary_exp • eq_binary_op cmp_binary_exp
  137 and_binary_exp: and_binary_exp "and" eq_binary_exp •

    "=="  shift, and go to state 161
    "!="  shift, and go to state 162

    $default  reduce using rule 137 (and_binary_exp)

    eq_binary_op  go to state 163


State 248

  137 and_binary_exp: and_binary_exp • "and" eq_binary_exp
  139 xor_binary_exp: xor_binary_exp "xor" and_binary_exp •

    "and"  shift, and go to state 164

    $default  reduce using rule 139 (xor_binary_exp)


State 249

  139 xor_binary_exp: xor_binary_exp • "xor" and_binary_exp
  141 or_binary_exp: or_binary_exp "or" xor_binary_exp •

    "xor"  shift, and go to state 165

    $default  reduce using rule 141 (or_binary_exp)


State 250

   10 mod_stmt: "mod" "<TypeId>" tpattern_seq "{" • mod_content "}"

    "<val_id>"  shift, and go to state 12
    "<TypeId>"  shift, and go to state 15
    "mod"       shift, and go to state 28

    top_mod_stmt        go to state 29
    mod_stmt            go to state 30
    mod_content         go to state 302
    mod_content_stmt    go to state 32
    mod_val_stmt        go to state 33
    mod_type_stmt       go to state 34
    mod_enum_stmt       go to state 35
    mod_typeclass_stmt  go to state 36
    tid                 go to state 37
    vid                 go to state 38


State 251

  187 tpattern_field: tid typespec •

    $default  reduce using rule 187 (tpattern_field)


State 252

  186 tpattern_field: vid typespec •

    $default  reduce using rule 186 (tpattern_field)


State 253

  200 tpattern_field_cl: tpattern_field_cl "," • tpattern_field

    "<val_id>"  shift, and go to state 12
    "<TypeId>"  shift, and go to state 15

    tid             go to state 169
    vid             go to state 170
    tpattern_field  go to state 303


State 254

  193 tpattern: "[" tpattern_field_cl "]" •

    $default  reduce using rule 193 (tpattern)


State 255

   42 mod_typeclass_stmt: tid "<" tid typespec • ">" "=" "{" type_query_exp_sl "}"

    ">"  shift, and go to state 304


State 256

  151 struct_typespec_field: vid • typespec

    "<TypeId>"  shift, and go to state 15
    "Fn"        shift, and go to state 100
    "("         shift, and go to state 101

    tid               go to state 103
    mod_prefix        go to state 104
    typespec          go to state 305
    primary_typespec  go to state 106
    paren_typespec    go to state 107
    tuple_typespec    go to state 108
    mod_prefix_tid    go to state 109
    fn_typespec       go to state 110
    postfix_typespec  go to state 111
    tcall_typespec    go to state 112
    unary_typespec    go to state 113


State 257

  152 struct_typespec_field_cl: struct_typespec_field •

    $default  reduce using rule 152 (struct_typespec_field_cl)


State 258

  153 struct_typespec_field_cl: struct_typespec_field_cl • "," struct_typespec_field
  170 struct_typespec: "{" struct_typespec_field_cl • "}"

    ","  shift, and go to state 306
    "}"  shift, and go to state 307


State 259

  194 tpattern: "!" "[" tpattern_field_cl • "]"
  200 tpattern_field_cl: tpattern_field_cl • "," tpattern_field

    ","  shift, and go to state 253
    "]"  shift, and go to state 308


State 260

   38 unprefixed_enum_field_pl: unprefixed_enum_field_pl "|" • enum_field

    "<TypeId>"  shift, and go to state 15

    enum_field  go to state 309
    tid         go to state 181


State 261

   40 enum_field: tid "(" • ")"
   41           | tid "(" • typespec_cl1 ")"

    "<TypeId>"  shift, and go to state 15
    "Fn"        shift, and go to state 100
    "("         shift, and go to state 101
    ")"         shift, and go to state 310

    tid               go to state 103
    mod_prefix        go to state 104
    typespec          go to state 311
    typespec_cl1      go to state 312
    primary_typespec  go to state 106
    paren_typespec    go to state 107
    tuple_typespec    go to state 108
    mod_prefix_tid    go to state 109
    fn_typespec       go to state 110
    postfix_typespec  go to state 111
    tcall_typespec    go to state 112
    unary_typespec    go to state 113


State 262

   43 mod_typeclass_stmt: tid tpattern_seq "<" tid • typespec ">" "=" "{" type_query_exp_sl "}"

    "<TypeId>"  shift, and go to state 15
    "Fn"        shift, and go to state 100
    "("         shift, and go to state 101

    tid               go to state 103
    mod_prefix        go to state 104
    typespec          go to state 313
    primary_typespec  go to state 106
    paren_typespec    go to state 107
    tuple_typespec    go to state 108
    mod_prefix_tid    go to state 109
    fn_typespec       go to state 110
    postfix_typespec  go to state 111
    tcall_typespec    go to state 112
    unary_typespec    go to state 113


State 263

   33 mod_type_stmt: tid tpattern_seq "=" long_typespec •

    $default  reduce using rule 33 (mod_type_stmt)


State 264

  163 fn_typespec: "Fn" vpattern primary_typespec •

    $default  reduce using rule 163 (fn_typespec)


State 265

  149 typespec_cl2: typespec "," • typespec
  160 tuple_typespec: "(" typespec "," • ")"

    "<TypeId>"  shift, and go to state 15
    "Fn"        shift, and go to state 100
    "("         shift, and go to state 101
    ")"         shift, and go to state 314

    tid               go to state 103
    mod_prefix        go to state 104
    typespec          go to state 315
    primary_typespec  go to state 106
    paren_typespec    go to state 107
    tuple_typespec    go to state 108
    mod_prefix_tid    go to state 109
    fn_typespec       go to state 110
    postfix_typespec  go to state 111
    tcall_typespec    go to state 112
    unary_typespec    go to state 113


State 266

  159 paren_typespec: "(" typespec ")" •

    $default  reduce using rule 159 (paren_typespec)


State 267

  150 typespec_cl2: typespec_cl2 "," • typespec

    "<TypeId>"  shift, and go to state 15
    "Fn"        shift, and go to state 100
    "("         shift, and go to state 101

    tid               go to state 103
    mod_prefix        go to state 104
    typespec          go to state 316
    primary_typespec  go to state 106
    paren_typespec    go to state 107
    tuple_typespec    go to state 108
    mod_prefix_tid    go to state 109
    fn_typespec       go to state 110
    postfix_typespec  go to state 111
    tcall_typespec    go to state 112
    unary_typespec    go to state 113


State 268

  161 tuple_typespec: "(" typespec_cl2 ")" •

    $default  reduce using rule 161 (tuple_typespec)


State 269

   30 mod_val_stmt: vid typespec "from" tid • stringl

    "\"dq-string-literal\""  shift, and go to state 39
    "'sq-string-literal'"    shift, and go to state 40

    stringl  go to state 317


State 270

  166 tcall_typespec: postfix_typespec "[" targ_cl • "]"
  174 targ_cl: targ_cl • "," targ

    ","  shift, and go to state 300
    "]"  shift, and go to state 318


State 271

   29 mod_val_stmt: vid tpattern_seq "=" expr •

    $default  reduce using rule 29 (mod_val_stmt)


State 272

   31 mod_val_stmt: vid tpattern_seq typespec "from" • tid stringl

    "<TypeId>"  shift, and go to state 15

    tid  go to state 319


State 273

   87 if_exp: "if" bracketed_exp "then" bracketed_exp •
   88       | "if" bracketed_exp "then" bracketed_exp • "else" primary_exp

    "else"  shift, and go to state 320

    $default  reduce using rule 87 (if_exp)


State 274

  182 vpattern_field: "out" vid • typespec

    "<TypeId>"  shift, and go to state 15
    "Fn"        shift, and go to state 100
    "("         shift, and go to state 101

    tid               go to state 103
    mod_prefix        go to state 104
    typespec          go to state 321
    primary_typespec  go to state 106
    paren_typespec    go to state 107
    tuple_typespec    go to state 108
    mod_prefix_tid    go to state 109
    fn_typespec       go to state 110
    postfix_typespec  go to state 111
    tcall_typespec    go to state 112
    unary_typespec    go to state 113


State 275

  183 vpattern_field: "inout" vid • typespec

    "<TypeId>"  shift, and go to state 15
    "Fn"        shift, and go to state 100
    "("         shift, and go to state 101

    tid               go to state 103
    mod_prefix        go to state 104
    typespec          go to state 322
    primary_typespec  go to state 106
    paren_typespec    go to state 107
    tuple_typespec    go to state 108
    mod_prefix_tid    go to state 109
    fn_typespec       go to state 110
    postfix_typespec  go to state 111
    tcall_typespec    go to state 112
    unary_typespec    go to state 113


State 276

  181 vpattern_field: vid typespec •

    $default  reduce using rule 181 (vpattern_field)


State 277

  196 vpattern_field_cl: vpattern_field_cl "," • vpattern_field

    "<val_id>"  shift, and go to state 12
    "out"       shift, and go to state 197
    "inout"     shift, and go to state 198

    vid             go to state 200
    vpattern_field  go to state 323


State 278

  191 vpattern: "(" vpattern_field_cl ")" •

    $default  reduce using rule 191 (vpattern)


State 279

   95 lambda_exp: "fn" vpattern "->" typespec • bracketed_exp

    "("  shift, and go to state 50
    "{"  shift, and go to state 51

    bracketed_exp  go to state 324
    unit_exp       go to state 62
    paren_exp      go to state 63
    vtupleExpr     go to state 64
    vstructExpr    go to state 65
    chain_exp      go to state 70


State 280

   71 vtupleExpr: "(" expr "," ")" •

    $default  reduce using rule 71 (vtupleExpr)


State 281

   59 expr_cl2: expr "," expr •

    $default  reduce using rule 59 (expr_cl2)


State 282

   60 expr_cl2: expr_cl2 "," expr •

    $default  reduce using rule 60 (expr_cl2)


State 283

  197 lpattern_field_cl: lpattern_field •

    $default  reduce using rule 197 (lpattern_field_cl)


State 284

  188 destructured_lpattern: "(" lpattern_field_cl • ")"
  198 lpattern_field_cl: lpattern_field_cl • "," lpattern_field

    ","  shift, and go to state 325
    ")"  shift, and go to state 326


State 285

  184 lpattern_field: vid typespec •

    $default  reduce using rule 184 (lpattern_field)


State 286

   18 const_stmt: "const" lpattern "=" • expr

    "<val_id>"               shift, and go to state 12
    "<TypeId>"               shift, and go to state 15
    "if"                     shift, and go to state 42
    "fn"                     shift, and go to state 43
    "not"                    shift, and go to state 44
    "42"                     shift, and go to state 45
    "0x2a"                   shift, and go to state 46
    "4.2"                    shift, and go to state 47
    "\"dq-string-literal\""  shift, and go to state 48
    "'sq-string-literal'"    shift, and go to state 49
    "("                      shift, and go to state 50
    "{"                      shift, and go to state 51
    "*"                      shift, and go to state 52
    "+"                      shift, and go to state 53
    "-"                      shift, and go to state 54
    "^"                      shift, and go to state 55

    tid             go to state 56
    vid             go to state 57
    floatl          go to state 58
    mod_prefix      go to state 59
    expr            go to state 327
    bracketed_exp   go to state 61
    unit_exp        go to state 62
    paren_exp       go to state 63
    vtupleExpr      go to state 64
    vstructExpr     go to state 65
    primary_exp     go to state 66
    int_expr        go to state 67
    stringls        go to state 68
    if_exp          go to state 69
    chain_exp       go to state 70
    lambda_exp      go to state 71
    postfix_exp     go to state 72
    tcall_exp       go to state 73
    vcall_exp       go to state 74
    dot_name_exp    go to state 75
    dot_index_exp   go to state 76
    unary_exp       go to state 77
    unary_op        go to state 78
    binary_exp      go to state 79
    mul_binary_exp  go to state 80
    add_binary_exp  go to state 81
    cmp_binary_exp  go to state 82
    eq_binary_exp   go to state 83
    and_binary_exp  go to state 84
    xor_binary_exp  go to state 85
    or_binary_exp   go to state 86


State 287

   19 val_stmt: "val" lpattern "=" • expr

    "<val_id>"               shift, and go to state 12
    "<TypeId>"               shift, and go to state 15
    "if"                     shift, and go to state 42
    "fn"                     shift, and go to state 43
    "not"                    shift, and go to state 44
    "42"                     shift, and go to state 45
    "0x2a"                   shift, and go to state 46
    "4.2"                    shift, and go to state 47
    "\"dq-string-literal\""  shift, and go to state 48
    "'sq-string-literal'"    shift, and go to state 49
    "("                      shift, and go to state 50
    "{"                      shift, and go to state 51
    "*"                      shift, and go to state 52
    "+"                      shift, and go to state 53
    "-"                      shift, and go to state 54
    "^"                      shift, and go to state 55

    tid             go to state 56
    vid             go to state 57
    floatl          go to state 58
    mod_prefix      go to state 59
    expr            go to state 328
    bracketed_exp   go to state 61
    unit_exp        go to state 62
    paren_exp       go to state 63
    vtupleExpr      go to state 64
    vstructExpr     go to state 65
    primary_exp     go to state 66
    int_expr        go to state 67
    stringls        go to state 68
    if_exp          go to state 69
    chain_exp       go to state 70
    lambda_exp      go to state 71
    postfix_exp     go to state 72
    tcall_exp       go to state 73
    vcall_exp       go to state 74
    dot_name_exp    go to state 75
    dot_index_exp   go to state 76
    unary_exp       go to state 77
    unary_op        go to state 78
    binary_exp      go to state 79
    mul_binary_exp  go to state 80
    add_binary_exp  go to state 81
    cmp_binary_exp  go to state 82
    eq_binary_exp   go to state 83
    and_binary_exp  go to state 84
    xor_binary_exp  go to state 85
    or_binary_exp   go to state 86


State 288

   20 var_stmt: "var" lpattern "=" • expr

    "<val_id>"               shift, and go to state 12
    "<TypeId>"               shift, and go to state 15
    "if"                     shift, and go to state 42
    "fn"                     shift, and go to state 43
    "not"                    shift, and go to state 44
    "42"                     shift, and go to state 45
    "0x2a"                   shift, and go to state 46
    "4.2"                    shift, and go to state 47
    "\"dq-string-literal\""  shift, and go to state 48
    "'sq-string-literal'"    shift, and go to state 49
    "("                      shift, and go to state 50
    "{"                      shift, and go to state 51
    "*"                      shift, and go to state 52
    "+"                      shift, and go to state 53
    "-"                      shift, and go to state 54
    "^"                      shift, and go to state 55

    tid             go to state 56
    vid             go to state 57
    floatl          go to state 58
    mod_prefix      go to state 59
    expr            go to state 329
    bracketed_exp   go to state 61
    unit_exp        go to state 62
    paren_exp       go to state 63
    vtupleExpr      go to state 64
    vstructExpr     go to state 65
    primary_exp     go to state 66
    int_expr        go to state 67
    stringls        go to state 68
    if_exp          go to state 69
    chain_exp       go to state 70
    lambda_exp      go to state 71
    postfix_exp     go to state 72
    tcall_exp       go to state 73
    vcall_exp       go to state 74
    dot_name_exp    go to state 75
    dot_index_exp   go to state 76
    unary_exp       go to state 77
    unary_op        go to state 78
    binary_exp      go to state 79
    mul_binary_exp  go to state 80
    add_binary_exp  go to state 81
    cmp_binary_exp  go to state 82
    eq_binary_exp   go to state 83
    and_binary_exp  go to state 84
    xor_binary_exp  go to state 85
    or_binary_exp   go to state 86


State 289

   21 set_stmt: "set" expr "=" • expr

    "<val_id>"               shift, and go to state 12
    "<TypeId>"               shift, and go to state 15
    "if"                     shift, and go to state 42
    "fn"                     shift, and go to state 43
    "not"                    shift, and go to state 44
    "42"                     shift, and go to state 45
    "0x2a"                   shift, and go to state 46
    "4.2"                    shift, and go to state 47
    "\"dq-string-literal\""  shift, and go to state 48
    "'sq-string-literal'"    shift, and go to state 49
    "("                      shift, and go to state 50
    "{"                      shift, and go to state 51
    "*"                      shift, and go to state 52
    "+"                      shift, and go to state 53
    "-"                      shift, and go to state 54
    "^"                      shift, and go to state 55

    tid             go to state 56
    vid             go to state 57
    floatl          go to state 58
    mod_prefix      go to state 59
    expr            go to state 330
    bracketed_exp   go to state 61
    unit_exp        go to state 62
    paren_exp       go to state 63
    vtupleExpr      go to state 64
    vstructExpr     go to state 65
    primary_exp     go to state 66
    int_expr        go to state 67
    stringls        go to state 68
    if_exp          go to state 69
    chain_exp       go to state 70
    lambda_exp      go to state 71
    postfix_exp     go to state 72
    tcall_exp       go to state 73
    vcall_exp       go to state 74
    dot_name_exp    go to state 75
    dot_index_exp   go to state 76
    unary_exp       go to state 77
    unary_op        go to state 78
    binary_exp      go to state 79
    mul_binary_exp  go to state 80
    add_binary_exp  go to state 81
    cmp_binary_exp  go to state 82
    eq_binary_exp   go to state 83
    and_binary_exp  go to state 84
    xor_binary_exp  go to state 85
    or_binary_exp   go to state 86


State 290

  180 struct_exp_field: vid "=" expr •

    $default  reduce using rule 180 (struct_exp_field)


State 291

   93 chain_prefix: chain_prefix chain_prefix_stmt ";" •

    $default  reduce using rule 93 (chain_prefix)


State 292

   91 chain_exp: "{" chain_prefix expr "}" •

    $default  reduce using rule 91 (chain_exp)


State 293

  180 struct_exp_field: vid • "=" expr

    "="  shift, and go to state 219


State 294

  202 struct_exp_field_cl: struct_exp_field_cl "," struct_exp_field •

    $default  reduce using rule 202 (struct_exp_field_cl)


State 295

  105 dot_name_exp: postfix_exp "." "<TypeId>" "(" • expr_cl0 ")"

    $default  reduce using rule 57 (expr_cl0)

    expr_cl0  go to state 331


State 296

  176 varg: "out" expr •

    $default  reduce using rule 176 (varg)


State 297

  177 varg: "inout" expr •

    $default  reduce using rule 177 (varg)


State 298

  179 varg_cl: varg_cl "," • varg

    "<val_id>"               shift, and go to state 12
    "<TypeId>"               shift, and go to state 15
    "if"                     shift, and go to state 42
    "fn"                     shift, and go to state 43
    "not"                    shift, and go to state 44
    "out"                    shift, and go to state 231
    "inout"                  shift, and go to state 232
    "42"                     shift, and go to state 45
    "0x2a"                   shift, and go to state 46
    "4.2"                    shift, and go to state 47
    "\"dq-string-literal\""  shift, and go to state 48
    "'sq-string-literal'"    shift, and go to state 49
    "("                      shift, and go to state 50
    "{"                      shift, and go to state 51
    "*"                      shift, and go to state 52
    "+"                      shift, and go to state 53
    "-"                      shift, and go to state 54
    "^"                      shift, and go to state 55

    tid             go to state 56
    vid             go to state 57
    floatl          go to state 58
    mod_prefix      go to state 59
    expr            go to state 234
    bracketed_exp   go to state 61
    unit_exp        go to state 62
    paren_exp       go to state 63
    vtupleExpr      go to state 64
    vstructExpr     go to state 65
    primary_exp     go to state 66
    int_expr        go to state 67
    stringls        go to state 68
    if_exp          go to state 69
    chain_exp       go to state 70
    lambda_exp      go to state 71
    postfix_exp     go to state 72
    tcall_exp       go to state 73
    vcall_exp       go to state 74
    dot_name_exp    go to state 75
    dot_index_exp   go to state 76
    unary_exp       go to state 77
    unary_op        go to state 78
    binary_exp      go to state 79
    mul_binary_exp  go to state 80
    add_binary_exp  go to state 81
    cmp_binary_exp  go to state 82
    eq_binary_exp   go to state 83
    and_binary_exp  go to state 84
    xor_binary_exp  go to state 85
    or_binary_exp   go to state 86
    varg            go to state 332


State 299

  103 vcall_exp: postfix_exp "(" varg_cl ")" •

    $default  reduce using rule 103 (vcall_exp)


State 300

  174 targ_cl: targ_cl "," • targ

    "<val_id>"               shift, and go to state 12
    "<TypeId>"               shift, and go to state 15
    "if"                     shift, and go to state 42
    "fn"                     shift, and go to state 43
    "Fn"                     shift, and go to state 100
    "not"                    shift, and go to state 44
    "42"                     shift, and go to state 45
    "0x2a"                   shift, and go to state 46
    "4.2"                    shift, and go to state 47
    "\"dq-string-literal\""  shift, and go to state 48
    "'sq-string-literal'"    shift, and go to state 49
    "("                      shift, and go to state 237
    "{"                      shift, and go to state 51
    "*"                      shift, and go to state 52
    "+"                      shift, and go to state 53
    "-"                      shift, and go to state 54
    "^"                      shift, and go to state 55

    tid               go to state 103
    vid               go to state 57
    floatl            go to state 58
    mod_prefix        go to state 238
    expr              go to state 239
    bracketed_exp     go to state 61
    unit_exp          go to state 62
    paren_exp         go to state 63
    vtupleExpr        go to state 64
    vstructExpr       go to state 65
    primary_exp       go to state 66
    int_expr          go to state 67
    stringls          go to state 68
    if_exp            go to state 69
    chain_exp         go to state 70
    lambda_exp        go to state 71
    postfix_exp       go to state 72
    tcall_exp         go to state 73
    vcall_exp         go to state 74
    dot_name_exp      go to state 75
    dot_index_exp     go to state 76
    unary_exp         go to state 77
    unary_op          go to state 78
    binary_exp        go to state 79
    mul_binary_exp    go to state 80
    add_binary_exp    go to state 81
    cmp_binary_exp    go to state 82
    eq_binary_exp     go to state 83
    and_binary_exp    go to state 84
    xor_binary_exp    go to state 85
    or_binary_exp     go to state 86
    typespec          go to state 240
    primary_typespec  go to state 106
    paren_typespec    go to state 107
    tuple_typespec    go to state 108
    mod_prefix_tid    go to state 109
    fn_typespec       go to state 110
    postfix_typespec  go to state 111
    tcall_typespec    go to state 112
    unary_typespec    go to state 113
    targ              go to state 333


State 301

  101 tcall_exp: postfix_exp "[" targ_cl "]" •

    $default  reduce using rule 101 (tcall_exp)


State 302

   10 mod_stmt: "mod" "<TypeId>" tpattern_seq "{" mod_content • "}"
   12 mod_content: mod_content • mod_content_stmt ";"

    "<val_id>"  shift, and go to state 12
    "<TypeId>"  shift, and go to state 15
    "mod"       shift, and go to state 28
    "}"         shift, and go to state 334

    top_mod_stmt        go to state 29
    mod_stmt            go to state 30
    mod_content_stmt    go to state 90
    mod_val_stmt        go to state 33
    mod_type_stmt       go to state 34
    mod_enum_stmt       go to state 35
    mod_typeclass_stmt  go to state 36
    tid                 go to state 37
    vid                 go to state 38


State 303

  200 tpattern_field_cl: tpattern_field_cl "," tpattern_field •

    $default  reduce using rule 200 (tpattern_field_cl)


State 304

   42 mod_typeclass_stmt: tid "<" tid typespec ">" • "=" "{" type_query_exp_sl "}"

    "="  shift, and go to state 335


State 305

  151 struct_typespec_field: vid typespec •

    $default  reduce using rule 151 (struct_typespec_field)


State 306

  153 struct_typespec_field_cl: struct_typespec_field_cl "," • struct_typespec_field

    "<val_id>"  shift, and go to state 12

    vid                    go to state 256
    struct_typespec_field  go to state 336


State 307

  170 struct_typespec: "{" struct_typespec_field_cl "}" •

    $default  reduce using rule 170 (struct_typespec)


State 308

  194 tpattern: "!" "[" tpattern_field_cl "]" •

    $default  reduce using rule 194 (tpattern)


State 309

   38 unprefixed_enum_field_pl: unprefixed_enum_field_pl "|" enum_field •

    $default  reduce using rule 38 (unprefixed_enum_field_pl)


State 310

   40 enum_field: tid "(" ")" •

    $default  reduce using rule 40 (enum_field)


State 311

  147 typespec_cl1: typespec •

    $default  reduce using rule 147 (typespec_cl1)


State 312

   41 enum_field: tid "(" typespec_cl1 • ")"
  148 typespec_cl1: typespec_cl1 • "," typespec

    ","  shift, and go to state 337
    ")"  shift, and go to state 338


State 313

   43 mod_typeclass_stmt: tid tpattern_seq "<" tid typespec • ">" "=" "{" type_query_exp_sl "}"

    ">"  shift, and go to state 339


State 314

  160 tuple_typespec: "(" typespec "," ")" •

    $default  reduce using rule 160 (tuple_typespec)


State 315

  149 typespec_cl2: typespec "," typespec •

    $default  reduce using rule 149 (typespec_cl2)


State 316

  150 typespec_cl2: typespec_cl2 "," typespec •

    $default  reduce using rule 150 (typespec_cl2)


State 317

   30 mod_val_stmt: vid typespec "from" tid stringl •

    $default  reduce using rule 30 (mod_val_stmt)


State 318

  166 tcall_typespec: postfix_typespec "[" targ_cl "]" •

    $default  reduce using rule 166 (tcall_typespec)


State 319

   31 mod_val_stmt: vid tpattern_seq typespec "from" tid • stringl

    "\"dq-string-literal\""  shift, and go to state 39
    "'sq-string-literal'"    shift, and go to state 40

    stringl  go to state 340


State 320

   88 if_exp: "if" bracketed_exp "then" bracketed_exp "else" • primary_exp

    "<val_id>"               shift, and go to state 12
    "if"                     shift, and go to state 42
    "fn"                     shift, and go to state 43
    "42"                     shift, and go to state 45
    "0x2a"                   shift, and go to state 46
    "4.2"                    shift, and go to state 47
    "\"dq-string-literal\""  shift, and go to state 48
    "'sq-string-literal'"    shift, and go to state 49
    "("                      shift, and go to state 50
    "{"                      shift, and go to state 51

    vid            go to state 57
    floatl         go to state 58
    bracketed_exp  go to state 61
    unit_exp       go to state 62
    paren_exp      go to state 63
    vtupleExpr     go to state 64
    vstructExpr    go to state 65
    primary_exp    go to state 341
    int_expr       go to state 67
    stringls       go to state 68
    if_exp         go to state 69
    chain_exp      go to state 70
    lambda_exp     go to state 71


State 321

  182 vpattern_field: "out" vid typespec •

    $default  reduce using rule 182 (vpattern_field)


State 322

  183 vpattern_field: "inout" vid typespec •

    $default  reduce using rule 183 (vpattern_field)


State 323

  196 vpattern_field_cl: vpattern_field_cl "," vpattern_field •

    $default  reduce using rule 196 (vpattern_field_cl)


State 324

   95 lambda_exp: "fn" vpattern "->" typespec bracketed_exp •

    $default  reduce using rule 95 (lambda_exp)


State 325

  198 lpattern_field_cl: lpattern_field_cl "," • lpattern_field

    "<val_id>"  shift, and go to state 12

    vid             go to state 210
    lpattern_field  go to state 342


State 326

  188 destructured_lpattern: "(" lpattern_field_cl ")" •

    $default  reduce using rule 188 (destructured_lpattern)


State 327

   18 const_stmt: "const" lpattern "=" expr •

    $default  reduce using rule 18 (const_stmt)


State 328

   19 val_stmt: "val" lpattern "=" expr •

    $default  reduce using rule 19 (val_stmt)


State 329

   20 var_stmt: "var" lpattern "=" expr •

    $default  reduce using rule 20 (var_stmt)


State 330

   21 set_stmt: "set" expr "=" expr •

    $default  reduce using rule 21 (set_stmt)


State 331

   58 expr_cl0: expr_cl0 • "," expr
  105 dot_name_exp: postfix_exp "." "<TypeId>" "(" expr_cl0 • ")"

    ","  shift, and go to state 343
    ")"  shift, and go to state 344


State 332

  179 varg_cl: varg_cl "," varg •

    $default  reduce using rule 179 (varg_cl)


State 333

  174 targ_cl: targ_cl "," targ •

    $default  reduce using rule 174 (targ_cl)


State 334

   10 mod_stmt: "mod" "<TypeId>" tpattern_seq "{" mod_content "}" •

    $default  reduce using rule 10 (mod_stmt)


State 335

   42 mod_typeclass_stmt: tid "<" tid typespec ">" "=" • "{" type_query_exp_sl "}"

    "{"  shift, and go to state 345


State 336

  153 struct_typespec_field_cl: struct_typespec_field_cl "," struct_typespec_field •

    $default  reduce using rule 153 (struct_typespec_field_cl)


State 337

  148 typespec_cl1: typespec_cl1 "," • typespec

    "<TypeId>"  shift, and go to state 15
    "Fn"        shift, and go to state 100
    "("         shift, and go to state 101

    tid               go to state 103
    mod_prefix        go to state 104
    typespec          go to state 346
    primary_typespec  go to state 106
    paren_typespec    go to state 107
    tuple_typespec    go to state 108
    mod_prefix_tid    go to state 109
    fn_typespec       go to state 110
    postfix_typespec  go to state 111
    tcall_typespec    go to state 112
    unary_typespec    go to state 113


State 338

   41 enum_field: tid "(" typespec_cl1 ")" •

    $default  reduce using rule 41 (enum_field)


State 339

   43 mod_typeclass_stmt: tid tpattern_seq "<" tid typespec ">" • "=" "{" type_query_exp_sl "}"

    "="  shift, and go to state 347


State 340

   31 mod_val_stmt: vid tpattern_seq typespec "from" tid stringl •

    $default  reduce using rule 31 (mod_val_stmt)


State 341

   88 if_exp: "if" bracketed_exp "then" bracketed_exp "else" primary_exp •

    $default  reduce using rule 88 (if_exp)


State 342

  198 lpattern_field_cl: lpattern_field_cl "," lpattern_field •

    $default  reduce using rule 198 (lpattern_field_cl)


State 343

   58 expr_cl0: expr_cl0 "," • expr

    "<val_id>"               shift, and go to state 12
    "<TypeId>"               shift, and go to state 15
    "if"                     shift, and go to state 42
    "fn"                     shift, and go to state 43
    "not"                    shift, and go to state 44
    "42"                     shift, and go to state 45
    "0x2a"                   shift, and go to state 46
    "4.2"                    shift, and go to state 47
    "\"dq-string-literal\""  shift, and go to state 48
    "'sq-string-literal'"    shift, and go to state 49
    "("                      shift, and go to state 50
    "{"                      shift, and go to state 51
    "*"                      shift, and go to state 52
    "+"                      shift, and go to state 53
    "-"                      shift, and go to state 54
    "^"                      shift, and go to state 55

    tid             go to state 56
    vid             go to state 57
    floatl          go to state 58
    mod_prefix      go to state 59
    expr            go to state 348
    bracketed_exp   go to state 61
    unit_exp        go to state 62
    paren_exp       go to state 63
    vtupleExpr      go to state 64
    vstructExpr     go to state 65
    primary_exp     go to state 66
    int_expr        go to state 67
    stringls        go to state 68
    if_exp          go to state 69
    chain_exp       go to state 70
    lambda_exp      go to state 71
    postfix_exp     go to state 72
    tcall_exp       go to state 73
    vcall_exp       go to state 74
    dot_name_exp    go to state 75
    dot_index_exp   go to state 76
    unary_exp       go to state 77
    unary_op        go to state 78
    binary_exp      go to state 79
    mul_binary_exp  go to state 80
    add_binary_exp  go to state 81
    cmp_binary_exp  go to state 82
    eq_binary_exp   go to state 83
    and_binary_exp  go to state 84
    xor_binary_exp  go to state 85
    or_binary_exp   go to state 86


State 344

  105 dot_name_exp: postfix_exp "." "<TypeId>" "(" expr_cl0 ")" •

    $default  reduce using rule 105 (dot_name_exp)


State 345

   42 mod_typeclass_stmt: tid "<" tid typespec ">" "=" "{" • type_query_exp_sl "}"

    "<TypeId>"  shift, and go to state 15
    "Fn"        shift, and go to state 100
    "("         shift, and go to state 101

    tid                go to state 103
    mod_prefix         go to state 104
    type_query_exp_sl  go to state 349
    type_query_exp     go to state 350
    typespec           go to state 351
    primary_typespec   go to state 106
    paren_typespec     go to state 107
    tuple_typespec     go to state 108
    mod_prefix_tid     go to state 109
    fn_typespec        go to state 110
    postfix_typespec   go to state 111
    tcall_typespec     go to state 112
    unary_typespec     go to state 113


State 346

  148 typespec_cl1: typespec_cl1 "," typespec •

    $default  reduce using rule 148 (typespec_cl1)


State 347

   43 mod_typeclass_stmt: tid tpattern_seq "<" tid typespec ">" "=" • "{" type_query_exp_sl "}"

    "{"  shift, and go to state 352


State 348

   58 expr_cl0: expr_cl0 "," expr •

    $default  reduce using rule 58 (expr_cl0)


State 349

   42 mod_typeclass_stmt: tid "<" tid typespec ">" "=" "{" type_query_exp_sl • "}"
   62 type_query_exp_sl: type_query_exp_sl • type_query_exp ";"

    "<TypeId>"  shift, and go to state 15
    "Fn"        shift, and go to state 100
    "("         shift, and go to state 101
    "}"         shift, and go to state 353

    tid               go to state 103
    mod_prefix        go to state 104
    type_query_exp    go to state 354
    typespec          go to state 351
    primary_typespec  go to state 106
    paren_typespec    go to state 107
    tuple_typespec    go to state 108
    mod_prefix_tid    go to state 109
    fn_typespec       go to state 110
    postfix_typespec  go to state 111
    tcall_typespec    go to state 112
    unary_typespec    go to state 113


State 350

   61 type_query_exp_sl: type_query_exp • ";"

    ";"  shift, and go to state 355


State 351

  142 type_query_exp: typespec • type_query_op typespec

    "::"  shift, and go to state 356
    ":<"  shift, and go to state 357
    ">:"  shift, and go to state 358

    type_query_op  go to state 359


State 352

   43 mod_typeclass_stmt: tid tpattern_seq "<" tid typespec ">" "=" "{" • type_query_exp_sl "}"

    "<TypeId>"  shift, and go to state 15
    "Fn"        shift, and go to state 100
    "("         shift, and go to state 101

    tid                go to state 103
    mod_prefix         go to state 104
    type_query_exp_sl  go to state 360
    type_query_exp     go to state 350
    typespec           go to state 351
    primary_typespec   go to state 106
    paren_typespec     go to state 107
    tuple_typespec     go to state 108
    mod_prefix_tid     go to state 109
    fn_typespec        go to state 110
    postfix_typespec   go to state 111
    tcall_typespec     go to state 112
    unary_typespec     go to state 113


State 353

   42 mod_typeclass_stmt: tid "<" tid typespec ">" "=" "{" type_query_exp_sl "}" •

    $default  reduce using rule 42 (mod_typeclass_stmt)


State 354

   62 type_query_exp_sl: type_query_exp_sl type_query_exp • ";"

    ";"  shift, and go to state 361


State 355

   61 type_query_exp_sl: type_query_exp ";" •

    $default  reduce using rule 61 (type_query_exp_sl)


State 356

  145 type_query_op: "::" •

    $default  reduce using rule 145 (type_query_op)


State 357

  143 type_query_op: ":<" •

    $default  reduce using rule 143 (type_query_op)


State 358

  144 type_query_op: ">:" •

    $default  reduce using rule 144 (type_query_op)


State 359

  142 type_query_exp: typespec type_query_op • typespec

    "<TypeId>"  shift, and go to state 15
    "Fn"        shift, and go to state 100
    "("         shift, and go to state 101

    tid               go to state 103
    mod_prefix        go to state 104
    typespec          go to state 362
    primary_typespec  go to state 106
    paren_typespec    go to state 107
    tuple_typespec    go to state 108
    mod_prefix_tid    go to state 109
    fn_typespec       go to state 110
    postfix_typespec  go to state 111
    tcall_typespec    go to state 112
    unary_typespec    go to state 113


State 360

   43 mod_typeclass_stmt: tid tpattern_seq "<" tid typespec ">" "=" "{" type_query_exp_sl • "}"
   62 type_query_exp_sl: type_query_exp_sl • type_query_exp ";"

    "<TypeId>"  shift, and go to state 15
    "Fn"        shift, and go to state 100
    "("         shift, and go to state 101
    "}"         shift, and go to state 363

    tid               go to state 103
    mod_prefix        go to state 104
    type_query_exp    go to state 354
    typespec          go to state 351
    primary_typespec  go to state 106
    paren_typespec    go to state 107
    tuple_typespec    go to state 108
    mod_prefix_tid    go to state 109
    fn_typespec       go to state 110
    postfix_typespec  go to state 111
    tcall_typespec    go to state 112
    unary_typespec    go to state 113


State 361

   62 type_query_exp_sl: type_query_exp_sl type_query_exp ";" •

    $default  reduce using rule 62 (type_query_exp_sl)


State 362

  142 type_query_exp: typespec type_query_op typespec •

    $default  reduce using rule 142 (type_query_exp)


State 363

   43 mod_typeclass_stmt: tid tpattern_seq "<" tid typespec ">" "=" "{" type_query_exp_sl "}" •

    $default  reduce using rule 43 (mod_typeclass_stmt)
