Terminals unused in grammar

    "<__42__>"
    "using"
    "match"
    "with"
    "lambda"
    "typeclass"
    "&"
    "EOS"
    "<null>"


Grammar

    0 $accept: script $end

    1 script: script_head script_body

    2 script_head: %empty
    3            | script_head script_head_stmt ";"

    4 script_head_stmt: import_stmt
    5                 | extern_stmt

    6 script_body: %empty
    7            | script_body script_body_stmt ";"

    8 script_body_stmt: top_mod_stmt

    9 top_mod_stmt: "module" "<TypeId>" "{" mod_content "}"

   10 sub_mod_stmt: "sub" "<TypeId>" "{" mod_content "}"
   11             | "sub" "<TypeId>" tpattern_seq "{" mod_content "}"

   12 mod_content: mod_content_stmt ";"
   13            | mod_content mod_content_stmt ";"

   14 mod_content_stmt: mod_val_stmt
   15                 | mod_type_stmt
   16                 | mod_enum_stmt
   17                 | mod_typeclass_stmt
   18                 | sub_mod_stmt

   19 mod_val_stmt: vid "=" expr
   20             | vid tpattern_seq "=" expr
   21             | vid type_spec "from" tid stringl
   22             | vid tpattern_seq type_spec "from" tid stringl

   23 mod_type_stmt: tid "=" long_type_spec
   24              | tid tpattern_seq "=" long_type_spec

   25 mod_enum_stmt: tid enum_field_pl
   26              | tid tpattern_seq enum_field_pl

   27 enum_field_pl: "|" unprefixed_enum_field_pl

   28 unprefixed_enum_field_pl: enum_field
   29                         | unprefixed_enum_field_pl "|" enum_field

   30 enum_field: tid
   31           | tid "(" ")"
   32           | tid "(" type_spec_cl1 ")"

   33 mod_typeclass_stmt: tid ":-" "<" tid class_spec ">" "{" type_query_exp_sl "}"
   34                   | tid tpattern_seq ":-" "<" tid class_spec ">" "{" type_query_exp_sl "}"

   35 import_stmt: "import" tid "from" stringl "type" stringl

   36 extern_stmt: "extern" tid "from" expr

   37 chain_prefix_stmt: const_stmt
   38                  | val_stmt
   39                  | var_stmt
   40                  | set_stmt
   41                  | discard_stmt

   42 const_stmt: "const" lpattern "=" expr

   43 val_stmt: "val" lpattern "=" expr

   44 var_stmt: "var" lpattern "=" expr

   45 set_stmt: "set" expr "=" expr

   46 discard_stmt: "discard" expr

   47 tid: "<TypeId>"

   48 vid: "<val_id>"

   49 floatl: "4.2"

   50 stringl: "'sq-string-literal'"
   51        | "\"dq-string-literal\""

   52 mod_prefix: tid ":"
   53           | mod_prefix vid ":"

   54 expr: binary_exp

   55 long_exp: expr

   56 expr_cl0: %empty
   57         | expr_cl0 "," expr

   58 expr_cl2: expr "," expr
   59         | expr_cl2 "," expr

   60 type_query_exp_sl: type_query_exp ";"
   61                  | type_query_exp_sl type_query_exp ";"

   62 bracketed_exp: unit_exp
   63              | paren_exp
   64              | vtupleExpr
   65              | vstructExpr
   66              | chain_exp

   67 unit_exp: "(" ")"
   68         | "{" "}"

   69 paren_exp: "(" long_exp ")"

   70 vtupleExpr: "(" expr "," ")"
   71           | "(" expr_cl2 ")"

   72 vstructExpr: "{" struct_exp_field_cl "}"

   73 primary_exp: bracketed_exp
   74            | vid
   75            | int_expr
   76            | floatl
   77            | stringls
   78            | if_exp
   79            | lambda_exp

   80 int_expr: "42"
   81         | "0x2a"

   82 stringls: "'sq-string-literal'"
   83         | "\"dq-string-literal\""
   84         | stringls "'sq-string-literal'"
   85         | stringls "\"dq-string-literal\""

   86 if_exp: "if" bracketed_exp "then" bracketed_exp
   87       | "if" bracketed_exp "then" bracketed_exp "else" primary_exp

   88 chain_exp: "{" expr "}"
   89          | "{" chain_prefix "}"
   90          | "{" chain_prefix expr "}"

   91 chain_prefix: chain_prefix_stmt ";"
   92             | chain_prefix chain_prefix_stmt ";"

   93 lambda_exp: "fn" vpattern bracketed_exp
   94           | "fn" vpattern "->" type_spec bracketed_exp

   95 postfix_exp: primary_exp
   96            | tcall_exp
   97            | vcall_exp
   98            | dot_name_exp
   99            | dot_index_exp

  100 tcall_exp: postfix_exp "[" targ_cl "]"

  101 vcall_exp: postfix_exp "(" ")"
  102          | postfix_exp "(" varg_cl ")"

  103 dot_name_exp: postfix_exp "." "<val_id>"
  104             | postfix_exp "." "<TypeId>" "(" expr_cl0 ")"
  105             | mod_prefix "<val_id>"

  106 dot_index_exp: postfix_exp "." int_expr
  107              | postfix_exp "." bracketed_exp

  108 unary_exp: postfix_exp
  109          | unary_op unary_exp

  110 unary_op: "+"
  111         | "-"
  112         | "*"
  113         | "^"
  114         | "not"

  115 binary_exp: or_binary_exp

  116 mul_binary_op: "*"
  117              | "/"
  118              | "%"

  119 mul_binary_exp: unary_exp
  120               | mul_binary_exp mul_binary_op unary_exp

  121 add_binary_op: "+"
  122              | "-"

  123 add_binary_exp: mul_binary_exp
  124               | add_binary_exp add_binary_op mul_binary_exp

  125 cmp_binary_op: "<"
  126              | "<="
  127              | ">"
  128              | ">="

  129 cmp_binary_exp: add_binary_exp
  130               | cmp_binary_exp cmp_binary_op add_binary_exp

  131 eq_binary_op: "=="
  132             | "!="

  133 eq_binary_exp: cmp_binary_exp
  134              | eq_binary_exp eq_binary_op cmp_binary_exp

  135 and_binary_exp: eq_binary_exp
  136               | and_binary_exp "and" eq_binary_exp

  137 xor_binary_exp: and_binary_exp
  138               | xor_binary_exp "xor" and_binary_exp

  139 or_binary_exp: xor_binary_exp
  140              | or_binary_exp "or" xor_binary_exp

  141 type_query_exp: type_spec type_query_op long_type_spec

  142 type_query_op: ":<"
  143              | ">:"
  144              | "::"

  145 type_spec: unary_type_spec

  146 type_spec_cl1: type_spec
  147              | type_spec_cl1 "," type_spec

  148 type_spec_cl2: type_spec "," type_spec
  149              | type_spec_cl2 "," type_spec

  150 struct_type_spec_field: vid type_spec

  151 struct_type_spec_field_cl: struct_type_spec_field
  152                          | struct_type_spec_field_cl "," struct_type_spec_field

  153 primary_type_spec: tid
  154                  | paren_type_spec
  155                  | tuple_type_spec
  156                  | mod_prefix_tid
  157                  | fn_type_spec

  158 paren_type_spec: "(" type_spec ")"

  159 tuple_type_spec: "(" type_spec "," ")"
  160                | "(" type_spec_cl2 ")"

  161 mod_prefix_tid: mod_prefix tid

  162 fn_type_spec: "Fn" vpattern primary_type_spec

  163 postfix_type_spec: primary_type_spec
  164                  | tcall_type_spec

  165 tcall_type_spec: postfix_type_spec "[" targ_cl "]"

  166 unary_type_spec: postfix_type_spec

  167 long_type_spec: unary_type_spec
  168               | struct_type_spec

  169 struct_type_spec: "{" struct_type_spec_field_cl "}"

  170 targ: type_spec
  171     | expr

  172 targ_cl: targ
  173        | targ_cl "," targ

  174 varg: expr
  175     | "out" expr
  176     | "inout" expr

  177 varg_cl: varg
  178        | varg_cl "," varg

  179 class_spec: postfix_class_spec

  180 primary_class_spec: tid

  181 postfix_class_spec: primary_class_spec
  182                   | postfix_class_spec "[" targ_cl "]"

  183 struct_exp_field: vid "=" expr

  184 vpattern_field: vid type_spec
  185               | "out" vid type_spec
  186               | "inout" vid type_spec

  187 lpattern_field: vid type_spec
  188               | vid

  189 tpattern_field: vid type_spec
  190               | tid class_spec

  191 destructured_lpattern: "(" lpattern_field_cl ")"

  192 lpattern: lpattern_field
  193         | destructured_lpattern

  194 vpattern: "(" vpattern_field_cl ")"
  195         | "(" ")"

  196 tpattern: "[" tpattern_field_cl "]"
  197         | "!" "[" tpattern_field_cl "]"

  198 vpattern_field_cl: vpattern_field
  199                  | vpattern_field_cl "," vpattern_field

  200 lpattern_field_cl: lpattern_field
  201                  | lpattern_field_cl "," lpattern_field

  202 tpattern_field_cl: tpattern_field
  203                  | tpattern_field_cl "," tpattern_field

  204 struct_exp_field_cl: struct_exp_field
  205                    | struct_exp_field_cl "," struct_exp_field

  206 tpattern_seq: tpattern
  207             | tpattern_seq tpattern


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    "<val_id>" <TokenInfo> (258) 48 103 105
    "<TypeId>" <TokenInfo> (259) 9 10 11 47 104
    "<__42__>" <TokenInfo> (260)
    "using" (261)
    "module" (262) 9
    "sub" (263) 10 11
    "if" (264) 86 87
    "then" (265) 86 87
    "else" (266) 87
    "match" (267)
    "with" (268)
    "import" (269) 35
    "extern" (270) 36
    "from" (271) 21 22 35 36
    "const" (272) 42
    "val" (273) 43
    "var" (274) 44
    "set" (275) 45
    "fn" (276) 93 94
    "lambda" (277)
    "Fn" (278) 162
    "type" (279) 35
    "and" (280) 136
    "xor" (281) 138
    "or" (282) 140
    "not" (283) 114
    "typeclass" (284)
    "out" (285) 175 185
    "inout" (286) 176 186
    "discard" (287) 46
    "42" <TokenInfo> (288) 80
    "0x2a" <TokenInfo> (289) 81
    "4.2" <TokenInfo> (290) 49
    "\"dq-string-literal\"" <TokenInfo> (291) 51 83 85
    "'sq-string-literal'" <TokenInfo> (292) 50 82 84
    "." (293) 103 104 106 107
    ":" (294) 52 53
    "," (295) 57 58 59 70 147 148 149 152 159 173 178 199 201 203 205
    ";" (296) 3 7 12 13 60 61 91 92
    "::" (297) 144
    "(" (298) 31 32 67 69 70 71 101 102 104 158 159 160 191 194 195
    ")" (299) 31 32 67 69 70 71 101 102 104 158 159 160 191 194 195
    "[" (300) 100 165 182 196 197
    "]" (301) 100 165 182 196 197
    "{" (302) 9 10 11 33 34 68 72 88 89 90 169
    "}" (303) 9 10 11 33 34 68 72 88 89 90 169
    "->" (304) 94
    "*" (305) 112 116
    "/" (306) 117
    "%" (307) 118
    "+" (308) 110 121
    "-" (309) 111 122
    "<" (310) 33 34 125
    "<=" (311) 126
    ">" (312) 33 34 127
    ">=" (313) 128
    "=" (314) 19 20 23 24 42 43 44 45 183
    "==" (315) 131
    "!=" (316) 132
    "^" (317) 113
    "&" (318)
    "!" (319) 197
    "|" (320) 27 29
    ":-" (321) 33 34
    "EOS" (322)
    ":<" (323) 142
    ">:" (324) 143
    "<null>" (325)


Nonterminals, with rules where they appear

    $accept (71)
        on left: 0
    script <pdm::ast::Script*> (72)
        on left: 1
        on right: 0
    script_head <std::vector<pdm::ast::Stmt*>> (73)
        on left: 2 3
        on right: 1 3
    script_head_stmt <pdm::ast::Stmt*> (74)
        on left: 4 5
        on right: 3
    script_body <std::vector<pdm::ast::ModStmt*>> (75)
        on left: 6 7
        on right: 1 7
    script_body_stmt <pdm::ast::ModStmt*> (76)
        on left: 8
        on right: 7
    top_mod_stmt <pdm::ast::ModStmt*> (77)
        on left: 9
        on right: 8
    sub_mod_stmt <pdm::ast::ModContentStmt*> (78)
        on left: 10 11
        on right: 18
    mod_content <std::vector<pdm::ast::ModContentStmt*>> (79)
        on left: 12 13
        on right: 9 10 11 13
    mod_content_stmt <pdm::ast::ModContentStmt*> (80)
        on left: 14 15 16 17 18
        on right: 12 13
    mod_val_stmt <pdm::ast::ModContentStmt*> (81)
        on left: 19 20 21 22
        on right: 14
    mod_type_stmt <pdm::ast::ModContentStmt*> (82)
        on left: 23 24
        on right: 15
    mod_enum_stmt <pdm::ast::ModContentStmt*> (83)
        on left: 25 26
        on right: 16
    enum_field_pl <std::vector<pdm::ast::ModEnumStmt::Field*>> (84)
        on left: 27
        on right: 25 26
    unprefixed_enum_field_pl <std::vector<pdm::ast::ModEnumStmt::Field*>> (85)
        on left: 28 29
        on right: 27 29
    enum_field <pdm::ast::ModEnumStmt::Field*> (86)
        on left: 30 31 32
        on right: 28 29
    mod_typeclass_stmt <pdm::ast::ModContentStmt*> (87)
        on left: 33 34
        on right: 17
    import_stmt <pdm::ast::Stmt*> (88)
        on left: 35
        on right: 4
    extern_stmt <pdm::ast::Stmt*> (89)
        on left: 36
        on right: 5
    chain_prefix_stmt <pdm::ast::Stmt*> (90)
        on left: 37 38 39 40 41
        on right: 91 92
    const_stmt <pdm::ast::Stmt*> (91)
        on left: 42
        on right: 37
    val_stmt <pdm::ast::Stmt*> (92)
        on left: 43
        on right: 38
    var_stmt <pdm::ast::Stmt*> (93)
        on left: 44
        on right: 39
    set_stmt <pdm::ast::Stmt*> (94)
        on left: 45
        on right: 40
    discard_stmt <pdm::ast::Stmt*> (95)
        on left: 46
        on right: 41
    tid <TokenInfo> (96)
        on left: 47
        on right: 21 22 23 24 25 26 30 31 32 33 34 35 36 52 153 161 180 190
    vid <TokenInfo> (97)
        on left: 48
        on right: 19 20 21 22 53 74 150 183 184 185 186 187 188 189
    floatl <TokenInfo> (98)
        on left: 49
        on right: 76
    stringl <TokenInfo> (99)
        on left: 50 51
        on right: 21 22 35
    mod_prefix <std::vector<pdm::intern::String>> (100)
        on left: 52 53
        on right: 53 105 161
    expr <pdm::ast::Exp*> (101)
        on left: 54
        on right: 19 20 36 42 43 44 45 46 55 57 58 59 70 88 90 171 174 175 176 183
    long_exp <pdm::ast::Exp*> (102)
        on left: 55
        on right: 69
    expr_cl0 <std::vector<pdm::ast::Exp*>> (103)
        on left: 56 57
        on right: 57 104
    expr_cl2 <std::vector<pdm::ast::Exp*>> (104)
        on left: 58 59
        on right: 59 71
    type_query_exp_sl <std::vector<pdm::ast::TypeQueryExp*>> (105)
        on left: 60 61
        on right: 33 34 61
    bracketed_exp <pdm::ast::Exp*> (106)
        on left: 62 63 64 65 66
        on right: 73 86 87 93 94 107
    unit_exp <pdm::ast::Exp*> (107)
        on left: 67 68
        on right: 62
    paren_exp <pdm::ast::Exp*> (108)
        on left: 69
        on right: 63
    vtupleExpr <pdm::ast::Exp*> (109)
        on left: 70 71
        on right: 64
    vstructExpr <pdm::ast::Exp*> (110)
        on left: 72
        on right: 65
    primary_exp <pdm::ast::Exp*> (111)
        on left: 73 74 75 76 77 78 79
        on right: 87 95
    int_expr <pdm::ast::Exp*> (112)
        on left: 80 81
        on right: 75 106
    stringls <std::vector<pdm::ast::StringExp::Piece>> (113)
        on left: 82 83 84 85
        on right: 77 84 85
    if_exp <pdm::ast::Exp*> (114)
        on left: 86 87
        on right: 78
    chain_exp <pdm::ast::Exp*> (115)
        on left: 88 89 90
        on right: 66
    chain_prefix <std::vector<pdm::ast::Stmt*>> (116)
        on left: 91 92
        on right: 89 90 92
    lambda_exp <pdm::ast::Exp*> (117)
        on left: 93 94
        on right: 79
    postfix_exp <pdm::ast::Exp*> (118)
        on left: 95 96 97 98 99
        on right: 100 101 102 103 104 106 107 108
    tcall_exp <pdm::ast::Exp*> (119)
        on left: 100
        on right: 96
    vcall_exp <pdm::ast::Exp*> (120)
        on left: 101 102
        on right: 97
    dot_name_exp <pdm::ast::Exp*> (121)
        on left: 103 104 105
        on right: 98
    dot_index_exp <pdm::ast::Exp*> (122)
        on left: 106 107
        on right: 99
    unary_exp <pdm::ast::Exp*> (123)
        on left: 108 109
        on right: 109 119 120
    unary_op <pdm::ast::UnaryOperator> (124)
        on left: 110 111 112 113 114
        on right: 109
    binary_exp <pdm::ast::Exp*> (125)
        on left: 115
        on right: 54
    mul_binary_op <pdm::ast::BinaryOperator> (126)
        on left: 116 117 118
        on right: 120
    mul_binary_exp <pdm::ast::Exp*> (127)
        on left: 119 120
        on right: 120 123 124
    add_binary_op <pdm::ast::BinaryOperator> (128)
        on left: 121 122
        on right: 124
    add_binary_exp <pdm::ast::Exp*> (129)
        on left: 123 124
        on right: 124 129 130
    cmp_binary_op <pdm::ast::BinaryOperator> (130)
        on left: 125 126 127 128
        on right: 130
    cmp_binary_exp <pdm::ast::Exp*> (131)
        on left: 129 130
        on right: 130 133 134
    eq_binary_op <pdm::ast::BinaryOperator> (132)
        on left: 131 132
        on right: 134
    eq_binary_exp <pdm::ast::Exp*> (133)
        on left: 133 134
        on right: 134 135 136
    and_binary_exp <pdm::ast::Exp*> (134)
        on left: 135 136
        on right: 136 137 138
    xor_binary_exp <pdm::ast::Exp*> (135)
        on left: 137 138
        on right: 138 139 140
    or_binary_exp <pdm::ast::Exp*> (136)
        on left: 139 140
        on right: 115 140
    type_query_exp <pdm::ast::TypeQueryExp*> (137)
        on left: 141
        on right: 60 61
    type_query_op <pdm::ast::TypeQueryKind> (138)
        on left: 142 143 144
        on right: 141
    type_spec <pdm::ast::TypeSpec*> (139)
        on left: 145
        on right: 21 22 94 141 146 147 148 149 150 158 159 170 184 185 186 187 189
    type_spec_cl1 <std::vector<pdm::ast::TypeSpec*>> (140)
        on left: 146 147
        on right: 32 147
    type_spec_cl2 <std::vector<pdm::ast::TypeSpec*>> (141)
        on left: 148 149
        on right: 149 160
    struct_type_spec_field <pdm::ast::StructTypeSpec::Field*> (142)
        on left: 150
        on right: 151 152
    struct_type_spec_field_cl <std::vector<pdm::ast::StructTypeSpec::Field*>> (143)
        on left: 151 152
        on right: 152 169
    primary_type_spec <pdm::ast::TypeSpec*> (144)
        on left: 153 154 155 156 157
        on right: 162 163
    paren_type_spec <pdm::ast::TypeSpec*> (145)
        on left: 158
        on right: 154
    tuple_type_spec <pdm::ast::TypeSpec*> (146)
        on left: 159 160
        on right: 155
    mod_prefix_tid <pdm::ast::TypeSpec*> (147)
        on left: 161
        on right: 156
    fn_type_spec <pdm::ast::TypeSpec*> (148)
        on left: 162
        on right: 157
    postfix_type_spec <pdm::ast::TypeSpec*> (149)
        on left: 163 164
        on right: 165 166
    tcall_type_spec <pdm::ast::TypeSpec*> (150)
        on left: 165
        on right: 164
    unary_type_spec <pdm::ast::TypeSpec*> (151)
        on left: 166
        on right: 145 167
    long_type_spec <pdm::ast::TypeSpec*> (152)
        on left: 167 168
        on right: 23 24 141
    struct_type_spec <pdm::ast::TypeSpec*> (153)
        on left: 169
        on right: 168
    targ <pdm::ast::TArg*> (154)
        on left: 170 171
        on right: 172 173
    targ_cl <std::vector<pdm::ast::TArg*>> (155)
        on left: 172 173
        on right: 100 165 173 182
    varg <pdm::ast::VArg*> (156)
        on left: 174 175 176
        on right: 177 178
    varg_cl <std::vector<pdm::ast::VArg*>> (157)
        on left: 177 178
        on right: 102 178
    class_spec <pdm::ast::ClassSpec*> (158)
        on left: 179
        on right: 33 34 190
    primary_class_spec <pdm::ast::ClassSpec*> (159)
        on left: 180
        on right: 181
    postfix_class_spec <pdm::ast::ClassSpec*> (160)
        on left: 181 182
        on right: 179 182
    struct_exp_field <pdm::ast::StructExp::Field*> (161)
        on left: 183
        on right: 204 205
    vpattern_field <pdm::ast::VPattern::Field*> (162)
        on left: 184 185 186
        on right: 198 199
    lpattern_field <pdm::ast::LPattern::Field*> (163)
        on left: 187 188
        on right: 192 200 201
    tpattern_field <pdm::ast::TPattern::Field*> (164)
        on left: 189 190
        on right: 202 203
    destructured_lpattern <pdm::ast::LPattern*> (165)
        on left: 191
        on right: 193
    lpattern <pdm::ast::LPattern*> (166)
        on left: 192 193
        on right: 42 43 44
    vpattern <pdm::ast::VPattern*> (167)
        on left: 194 195
        on right: 93 94 162
    tpattern <pdm::ast::TPattern*> (168)
        on left: 196 197
        on right: 206 207
    vpattern_field_cl <std::vector<pdm::ast::VPattern::Field*>> (169)
        on left: 198 199
        on right: 194 199
    lpattern_field_cl <std::vector<pdm::ast::LPattern::Field*>> (170)
        on left: 200 201
        on right: 191 201
    tpattern_field_cl <std::vector<pdm::ast::TPattern::Field*>> (171)
        on left: 202 203
        on right: 196 197 203
    struct_exp_field_cl <std::vector<pdm::ast::StructExp::Field*>> (172)
        on left: 204 205
        on right: 72 205
    tpattern_seq <std::vector<pdm::ast::TPattern*>> (173)
        on left: 206 207
        on right: 11 20 22 24 26 34 207


State 0

    0 $accept: • script $end

    $default  reduce using rule 2 (script_head)

    script       go to state 1
    script_head  go to state 2


State 1

    0 $accept: script • $end

    $end  shift, and go to state 3


State 2

    1 script: script_head • script_body
    3 script_head: script_head • script_head_stmt ";"

    "import"  shift, and go to state 4
    "extern"  shift, and go to state 5

    $default  reduce using rule 6 (script_body)

    script_head_stmt  go to state 6
    script_body       go to state 7
    import_stmt       go to state 8
    extern_stmt       go to state 9


State 3

    0 $accept: script $end •

    $default  accept


State 4

   35 import_stmt: "import" • tid "from" stringl "type" stringl

    "<TypeId>"  shift, and go to state 10

    tid  go to state 11


State 5

   36 extern_stmt: "extern" • tid "from" expr

    "<TypeId>"  shift, and go to state 10

    tid  go to state 12


State 6

    3 script_head: script_head script_head_stmt • ";"

    ";"  shift, and go to state 13


State 7

    1 script: script_head script_body •
    7 script_body: script_body • script_body_stmt ";"

    "module"  shift, and go to state 14

    $default  reduce using rule 1 (script)

    script_body_stmt  go to state 15
    top_mod_stmt      go to state 16


State 8

    4 script_head_stmt: import_stmt •

    $default  reduce using rule 4 (script_head_stmt)


State 9

    5 script_head_stmt: extern_stmt •

    $default  reduce using rule 5 (script_head_stmt)


State 10

   47 tid: "<TypeId>" •

    $default  reduce using rule 47 (tid)


State 11

   35 import_stmt: "import" tid • "from" stringl "type" stringl

    "from"  shift, and go to state 17


State 12

   36 extern_stmt: "extern" tid • "from" expr

    "from"  shift, and go to state 18


State 13

    3 script_head: script_head script_head_stmt ";" •

    $default  reduce using rule 3 (script_head)


State 14

    9 top_mod_stmt: "module" • "<TypeId>" "{" mod_content "}"

    "<TypeId>"  shift, and go to state 19


State 15

    7 script_body: script_body script_body_stmt • ";"

    ";"  shift, and go to state 20


State 16

    8 script_body_stmt: top_mod_stmt •

    $default  reduce using rule 8 (script_body_stmt)


State 17

   35 import_stmt: "import" tid "from" • stringl "type" stringl

    "\"dq-string-literal\""  shift, and go to state 21
    "'sq-string-literal'"    shift, and go to state 22

    stringl  go to state 23


State 18

   36 extern_stmt: "extern" tid "from" • expr

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "not"                    shift, and go to state 27
    "42"                     shift, and go to state 28
    "0x2a"                   shift, and go to state 29
    "4.2"                    shift, and go to state 30
    "\"dq-string-literal\""  shift, and go to state 31
    "'sq-string-literal'"    shift, and go to state 32
    "("                      shift, and go to state 33
    "{"                      shift, and go to state 34
    "*"                      shift, and go to state 35
    "+"                      shift, and go to state 36
    "-"                      shift, and go to state 37
    "^"                      shift, and go to state 38

    tid             go to state 39
    vid             go to state 40
    floatl          go to state 41
    mod_prefix      go to state 42
    expr            go to state 43
    bracketed_exp   go to state 44
    unit_exp        go to state 45
    paren_exp       go to state 46
    vtupleExpr      go to state 47
    vstructExpr     go to state 48
    primary_exp     go to state 49
    int_expr        go to state 50
    stringls        go to state 51
    if_exp          go to state 52
    chain_exp       go to state 53
    lambda_exp      go to state 54
    postfix_exp     go to state 55
    tcall_exp       go to state 56
    vcall_exp       go to state 57
    dot_name_exp    go to state 58
    dot_index_exp   go to state 59
    unary_exp       go to state 60
    unary_op        go to state 61
    binary_exp      go to state 62
    mul_binary_exp  go to state 63
    add_binary_exp  go to state 64
    cmp_binary_exp  go to state 65
    eq_binary_exp   go to state 66
    and_binary_exp  go to state 67
    xor_binary_exp  go to state 68
    or_binary_exp   go to state 69


State 19

    9 top_mod_stmt: "module" "<TypeId>" • "{" mod_content "}"

    "{"  shift, and go to state 70


State 20

    7 script_body: script_body script_body_stmt ";" •

    $default  reduce using rule 7 (script_body)


State 21

   51 stringl: "\"dq-string-literal\"" •

    $default  reduce using rule 51 (stringl)


State 22

   50 stringl: "'sq-string-literal'" •

    $default  reduce using rule 50 (stringl)


State 23

   35 import_stmt: "import" tid "from" stringl • "type" stringl

    "type"  shift, and go to state 71


State 24

   48 vid: "<val_id>" •

    $default  reduce using rule 48 (vid)


State 25

   86 if_exp: "if" • bracketed_exp "then" bracketed_exp
   87       | "if" • bracketed_exp "then" bracketed_exp "else" primary_exp

    "("  shift, and go to state 33
    "{"  shift, and go to state 34

    bracketed_exp  go to state 72
    unit_exp       go to state 45
    paren_exp      go to state 46
    vtupleExpr     go to state 47
    vstructExpr    go to state 48
    chain_exp      go to state 53


State 26

   93 lambda_exp: "fn" • vpattern bracketed_exp
   94           | "fn" • vpattern "->" type_spec bracketed_exp

    "("  shift, and go to state 73

    vpattern  go to state 74


State 27

  114 unary_op: "not" •

    $default  reduce using rule 114 (unary_op)


State 28

   80 int_expr: "42" •

    $default  reduce using rule 80 (int_expr)


State 29

   81 int_expr: "0x2a" •

    $default  reduce using rule 81 (int_expr)


State 30

   49 floatl: "4.2" •

    $default  reduce using rule 49 (floatl)


State 31

   83 stringls: "\"dq-string-literal\"" •

    $default  reduce using rule 83 (stringls)


State 32

   82 stringls: "'sq-string-literal'" •

    $default  reduce using rule 82 (stringls)


State 33

   67 unit_exp: "(" • ")"
   69 paren_exp: "(" • long_exp ")"
   70 vtupleExpr: "(" • expr "," ")"
   71           | "(" • expr_cl2 ")"

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "not"                    shift, and go to state 27
    "42"                     shift, and go to state 28
    "0x2a"                   shift, and go to state 29
    "4.2"                    shift, and go to state 30
    "\"dq-string-literal\""  shift, and go to state 31
    "'sq-string-literal'"    shift, and go to state 32
    "("                      shift, and go to state 33
    ")"                      shift, and go to state 75
    "{"                      shift, and go to state 34
    "*"                      shift, and go to state 35
    "+"                      shift, and go to state 36
    "-"                      shift, and go to state 37
    "^"                      shift, and go to state 38

    tid             go to state 39
    vid             go to state 40
    floatl          go to state 41
    mod_prefix      go to state 42
    expr            go to state 76
    long_exp        go to state 77
    expr_cl2        go to state 78
    bracketed_exp   go to state 44
    unit_exp        go to state 45
    paren_exp       go to state 46
    vtupleExpr      go to state 47
    vstructExpr     go to state 48
    primary_exp     go to state 49
    int_expr        go to state 50
    stringls        go to state 51
    if_exp          go to state 52
    chain_exp       go to state 53
    lambda_exp      go to state 54
    postfix_exp     go to state 55
    tcall_exp       go to state 56
    vcall_exp       go to state 57
    dot_name_exp    go to state 58
    dot_index_exp   go to state 59
    unary_exp       go to state 60
    unary_op        go to state 61
    binary_exp      go to state 62
    mul_binary_exp  go to state 63
    add_binary_exp  go to state 64
    cmp_binary_exp  go to state 65
    eq_binary_exp   go to state 66
    and_binary_exp  go to state 67
    xor_binary_exp  go to state 68
    or_binary_exp   go to state 69


State 34

   68 unit_exp: "{" • "}"
   72 vstructExpr: "{" • struct_exp_field_cl "}"
   88 chain_exp: "{" • expr "}"
   89          | "{" • chain_prefix "}"
   90          | "{" • chain_prefix expr "}"

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "const"                  shift, and go to state 79
    "val"                    shift, and go to state 80
    "var"                    shift, and go to state 81
    "set"                    shift, and go to state 82
    "fn"                     shift, and go to state 26
    "not"                    shift, and go to state 27
    "discard"                shift, and go to state 83
    "42"                     shift, and go to state 28
    "0x2a"                   shift, and go to state 29
    "4.2"                    shift, and go to state 30
    "\"dq-string-literal\""  shift, and go to state 31
    "'sq-string-literal'"    shift, and go to state 32
    "("                      shift, and go to state 33
    "{"                      shift, and go to state 34
    "}"                      shift, and go to state 84
    "*"                      shift, and go to state 35
    "+"                      shift, and go to state 36
    "-"                      shift, and go to state 37
    "^"                      shift, and go to state 38

    chain_prefix_stmt    go to state 85
    const_stmt           go to state 86
    val_stmt             go to state 87
    var_stmt             go to state 88
    set_stmt             go to state 89
    discard_stmt         go to state 90
    tid                  go to state 39
    vid                  go to state 91
    floatl               go to state 41
    mod_prefix           go to state 42
    expr                 go to state 92
    bracketed_exp        go to state 44
    unit_exp             go to state 45
    paren_exp            go to state 46
    vtupleExpr           go to state 47
    vstructExpr          go to state 48
    primary_exp          go to state 49
    int_expr             go to state 50
    stringls             go to state 51
    if_exp               go to state 52
    chain_exp            go to state 53
    chain_prefix         go to state 93
    lambda_exp           go to state 54
    postfix_exp          go to state 55
    tcall_exp            go to state 56
    vcall_exp            go to state 57
    dot_name_exp         go to state 58
    dot_index_exp        go to state 59
    unary_exp            go to state 60
    unary_op             go to state 61
    binary_exp           go to state 62
    mul_binary_exp       go to state 63
    add_binary_exp       go to state 64
    cmp_binary_exp       go to state 65
    eq_binary_exp        go to state 66
    and_binary_exp       go to state 67
    xor_binary_exp       go to state 68
    or_binary_exp        go to state 69
    struct_exp_field     go to state 94
    struct_exp_field_cl  go to state 95


State 35

  112 unary_op: "*" •

    $default  reduce using rule 112 (unary_op)


State 36

  110 unary_op: "+" •

    $default  reduce using rule 110 (unary_op)


State 37

  111 unary_op: "-" •

    $default  reduce using rule 111 (unary_op)


State 38

  113 unary_op: "^" •

    $default  reduce using rule 113 (unary_op)


State 39

   52 mod_prefix: tid • ":"

    ":"  shift, and go to state 96


State 40

   74 primary_exp: vid •

    $default  reduce using rule 74 (primary_exp)


State 41

   76 primary_exp: floatl •

    $default  reduce using rule 76 (primary_exp)


State 42

   53 mod_prefix: mod_prefix • vid ":"
  105 dot_name_exp: mod_prefix • "<val_id>"

    "<val_id>"  shift, and go to state 97

    vid  go to state 98


State 43

   36 extern_stmt: "extern" tid "from" expr •

    $default  reduce using rule 36 (extern_stmt)


State 44

   73 primary_exp: bracketed_exp •

    $default  reduce using rule 73 (primary_exp)


State 45

   62 bracketed_exp: unit_exp •

    $default  reduce using rule 62 (bracketed_exp)


State 46

   63 bracketed_exp: paren_exp •

    $default  reduce using rule 63 (bracketed_exp)


State 47

   64 bracketed_exp: vtupleExpr •

    $default  reduce using rule 64 (bracketed_exp)


State 48

   65 bracketed_exp: vstructExpr •

    $default  reduce using rule 65 (bracketed_exp)


State 49

   95 postfix_exp: primary_exp •

    $default  reduce using rule 95 (postfix_exp)


State 50

   75 primary_exp: int_expr •

    $default  reduce using rule 75 (primary_exp)


State 51

   77 primary_exp: stringls •
   84 stringls: stringls • "'sq-string-literal'"
   85         | stringls • "\"dq-string-literal\""

    "\"dq-string-literal\""  shift, and go to state 99
    "'sq-string-literal'"    shift, and go to state 100

    $default  reduce using rule 77 (primary_exp)


State 52

   78 primary_exp: if_exp •

    $default  reduce using rule 78 (primary_exp)


State 53

   66 bracketed_exp: chain_exp •

    $default  reduce using rule 66 (bracketed_exp)


State 54

   79 primary_exp: lambda_exp •

    $default  reduce using rule 79 (primary_exp)


State 55

  100 tcall_exp: postfix_exp • "[" targ_cl "]"
  101 vcall_exp: postfix_exp • "(" ")"
  102          | postfix_exp • "(" varg_cl ")"
  103 dot_name_exp: postfix_exp • "." "<val_id>"
  104             | postfix_exp • "." "<TypeId>" "(" expr_cl0 ")"
  106 dot_index_exp: postfix_exp • "." int_expr
  107              | postfix_exp • "." bracketed_exp
  108 unary_exp: postfix_exp •

    "."  shift, and go to state 101
    "("  shift, and go to state 102
    "["  shift, and go to state 103

    $default  reduce using rule 108 (unary_exp)


State 56

   96 postfix_exp: tcall_exp •

    $default  reduce using rule 96 (postfix_exp)


State 57

   97 postfix_exp: vcall_exp •

    $default  reduce using rule 97 (postfix_exp)


State 58

   98 postfix_exp: dot_name_exp •

    $default  reduce using rule 98 (postfix_exp)


State 59

   99 postfix_exp: dot_index_exp •

    $default  reduce using rule 99 (postfix_exp)


State 60

  119 mul_binary_exp: unary_exp •

    $default  reduce using rule 119 (mul_binary_exp)


State 61

  109 unary_exp: unary_op • unary_exp

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "not"                    shift, and go to state 27
    "42"                     shift, and go to state 28
    "0x2a"                   shift, and go to state 29
    "4.2"                    shift, and go to state 30
    "\"dq-string-literal\""  shift, and go to state 31
    "'sq-string-literal'"    shift, and go to state 32
    "("                      shift, and go to state 33
    "{"                      shift, and go to state 34
    "*"                      shift, and go to state 35
    "+"                      shift, and go to state 36
    "-"                      shift, and go to state 37
    "^"                      shift, and go to state 38

    tid            go to state 39
    vid            go to state 40
    floatl         go to state 41
    mod_prefix     go to state 42
    bracketed_exp  go to state 44
    unit_exp       go to state 45
    paren_exp      go to state 46
    vtupleExpr     go to state 47
    vstructExpr    go to state 48
    primary_exp    go to state 49
    int_expr       go to state 50
    stringls       go to state 51
    if_exp         go to state 52
    chain_exp      go to state 53
    lambda_exp     go to state 54
    postfix_exp    go to state 55
    tcall_exp      go to state 56
    vcall_exp      go to state 57
    dot_name_exp   go to state 58
    dot_index_exp  go to state 59
    unary_exp      go to state 104
    unary_op       go to state 61


State 62

   54 expr: binary_exp •

    $default  reduce using rule 54 (expr)


State 63

  120 mul_binary_exp: mul_binary_exp • mul_binary_op unary_exp
  123 add_binary_exp: mul_binary_exp •

    "*"  shift, and go to state 105
    "/"  shift, and go to state 106
    "%"  shift, and go to state 107

    $default  reduce using rule 123 (add_binary_exp)

    mul_binary_op  go to state 108


State 64

  124 add_binary_exp: add_binary_exp • add_binary_op mul_binary_exp
  129 cmp_binary_exp: add_binary_exp •

    "+"  shift, and go to state 109
    "-"  shift, and go to state 110

    $default  reduce using rule 129 (cmp_binary_exp)

    add_binary_op  go to state 111


State 65

  130 cmp_binary_exp: cmp_binary_exp • cmp_binary_op add_binary_exp
  133 eq_binary_exp: cmp_binary_exp •

    "<"   shift, and go to state 112
    "<="  shift, and go to state 113
    ">"   shift, and go to state 114
    ">="  shift, and go to state 115

    $default  reduce using rule 133 (eq_binary_exp)

    cmp_binary_op  go to state 116


State 66

  134 eq_binary_exp: eq_binary_exp • eq_binary_op cmp_binary_exp
  135 and_binary_exp: eq_binary_exp •

    "=="  shift, and go to state 117
    "!="  shift, and go to state 118

    $default  reduce using rule 135 (and_binary_exp)

    eq_binary_op  go to state 119


State 67

  136 and_binary_exp: and_binary_exp • "and" eq_binary_exp
  137 xor_binary_exp: and_binary_exp •

    "and"  shift, and go to state 120

    $default  reduce using rule 137 (xor_binary_exp)


State 68

  138 xor_binary_exp: xor_binary_exp • "xor" and_binary_exp
  139 or_binary_exp: xor_binary_exp •

    "xor"  shift, and go to state 121

    $default  reduce using rule 139 (or_binary_exp)


State 69

  115 binary_exp: or_binary_exp •
  140 or_binary_exp: or_binary_exp • "or" xor_binary_exp

    "or"  shift, and go to state 122

    $default  reduce using rule 115 (binary_exp)


State 70

    9 top_mod_stmt: "module" "<TypeId>" "{" • mod_content "}"

    "<val_id>"  shift, and go to state 24
    "<TypeId>"  shift, and go to state 10
    "sub"       shift, and go to state 123

    sub_mod_stmt        go to state 124
    mod_content         go to state 125
    mod_content_stmt    go to state 126
    mod_val_stmt        go to state 127
    mod_type_stmt       go to state 128
    mod_enum_stmt       go to state 129
    mod_typeclass_stmt  go to state 130
    tid                 go to state 131
    vid                 go to state 132


State 71

   35 import_stmt: "import" tid "from" stringl "type" • stringl

    "\"dq-string-literal\""  shift, and go to state 21
    "'sq-string-literal'"    shift, and go to state 22

    stringl  go to state 133


State 72

   86 if_exp: "if" bracketed_exp • "then" bracketed_exp
   87       | "if" bracketed_exp • "then" bracketed_exp "else" primary_exp

    "then"  shift, and go to state 134


State 73

  194 vpattern: "(" • vpattern_field_cl ")"
  195         | "(" • ")"

    "<val_id>"  shift, and go to state 24
    "out"       shift, and go to state 135
    "inout"     shift, and go to state 136
    ")"         shift, and go to state 137

    vid                go to state 138
    vpattern_field     go to state 139
    vpattern_field_cl  go to state 140


State 74

   93 lambda_exp: "fn" vpattern • bracketed_exp
   94           | "fn" vpattern • "->" type_spec bracketed_exp

    "("   shift, and go to state 33
    "{"   shift, and go to state 34
    "->"  shift, and go to state 141

    bracketed_exp  go to state 142
    unit_exp       go to state 45
    paren_exp      go to state 46
    vtupleExpr     go to state 47
    vstructExpr    go to state 48
    chain_exp      go to state 53


State 75

   67 unit_exp: "(" ")" •

    $default  reduce using rule 67 (unit_exp)


State 76

   55 long_exp: expr •
   58 expr_cl2: expr • "," expr
   70 vtupleExpr: "(" expr • "," ")"

    ","  shift, and go to state 143

    $default  reduce using rule 55 (long_exp)


State 77

   69 paren_exp: "(" long_exp • ")"

    ")"  shift, and go to state 144


State 78

   59 expr_cl2: expr_cl2 • "," expr
   71 vtupleExpr: "(" expr_cl2 • ")"

    ","  shift, and go to state 145
    ")"  shift, and go to state 146


State 79

   42 const_stmt: "const" • lpattern "=" expr

    "<val_id>"  shift, and go to state 24
    "("         shift, and go to state 147

    vid                    go to state 148
    lpattern_field         go to state 149
    destructured_lpattern  go to state 150
    lpattern               go to state 151


State 80

   43 val_stmt: "val" • lpattern "=" expr

    "<val_id>"  shift, and go to state 24
    "("         shift, and go to state 147

    vid                    go to state 148
    lpattern_field         go to state 149
    destructured_lpattern  go to state 150
    lpattern               go to state 152


State 81

   44 var_stmt: "var" • lpattern "=" expr

    "<val_id>"  shift, and go to state 24
    "("         shift, and go to state 147

    vid                    go to state 148
    lpattern_field         go to state 149
    destructured_lpattern  go to state 150
    lpattern               go to state 153


State 82

   45 set_stmt: "set" • expr "=" expr

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "not"                    shift, and go to state 27
    "42"                     shift, and go to state 28
    "0x2a"                   shift, and go to state 29
    "4.2"                    shift, and go to state 30
    "\"dq-string-literal\""  shift, and go to state 31
    "'sq-string-literal'"    shift, and go to state 32
    "("                      shift, and go to state 33
    "{"                      shift, and go to state 34
    "*"                      shift, and go to state 35
    "+"                      shift, and go to state 36
    "-"                      shift, and go to state 37
    "^"                      shift, and go to state 38

    tid             go to state 39
    vid             go to state 40
    floatl          go to state 41
    mod_prefix      go to state 42
    expr            go to state 154
    bracketed_exp   go to state 44
    unit_exp        go to state 45
    paren_exp       go to state 46
    vtupleExpr      go to state 47
    vstructExpr     go to state 48
    primary_exp     go to state 49
    int_expr        go to state 50
    stringls        go to state 51
    if_exp          go to state 52
    chain_exp       go to state 53
    lambda_exp      go to state 54
    postfix_exp     go to state 55
    tcall_exp       go to state 56
    vcall_exp       go to state 57
    dot_name_exp    go to state 58
    dot_index_exp   go to state 59
    unary_exp       go to state 60
    unary_op        go to state 61
    binary_exp      go to state 62
    mul_binary_exp  go to state 63
    add_binary_exp  go to state 64
    cmp_binary_exp  go to state 65
    eq_binary_exp   go to state 66
    and_binary_exp  go to state 67
    xor_binary_exp  go to state 68
    or_binary_exp   go to state 69


State 83

   46 discard_stmt: "discard" • expr

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "not"                    shift, and go to state 27
    "42"                     shift, and go to state 28
    "0x2a"                   shift, and go to state 29
    "4.2"                    shift, and go to state 30
    "\"dq-string-literal\""  shift, and go to state 31
    "'sq-string-literal'"    shift, and go to state 32
    "("                      shift, and go to state 33
    "{"                      shift, and go to state 34
    "*"                      shift, and go to state 35
    "+"                      shift, and go to state 36
    "-"                      shift, and go to state 37
    "^"                      shift, and go to state 38

    tid             go to state 39
    vid             go to state 40
    floatl          go to state 41
    mod_prefix      go to state 42
    expr            go to state 155
    bracketed_exp   go to state 44
    unit_exp        go to state 45
    paren_exp       go to state 46
    vtupleExpr      go to state 47
    vstructExpr     go to state 48
    primary_exp     go to state 49
    int_expr        go to state 50
    stringls        go to state 51
    if_exp          go to state 52
    chain_exp       go to state 53
    lambda_exp      go to state 54
    postfix_exp     go to state 55
    tcall_exp       go to state 56
    vcall_exp       go to state 57
    dot_name_exp    go to state 58
    dot_index_exp   go to state 59
    unary_exp       go to state 60
    unary_op        go to state 61
    binary_exp      go to state 62
    mul_binary_exp  go to state 63
    add_binary_exp  go to state 64
    cmp_binary_exp  go to state 65
    eq_binary_exp   go to state 66
    and_binary_exp  go to state 67
    xor_binary_exp  go to state 68
    or_binary_exp   go to state 69


State 84

   68 unit_exp: "{" "}" •

    $default  reduce using rule 68 (unit_exp)


State 85

   91 chain_prefix: chain_prefix_stmt • ";"

    ";"  shift, and go to state 156


State 86

   37 chain_prefix_stmt: const_stmt •

    $default  reduce using rule 37 (chain_prefix_stmt)


State 87

   38 chain_prefix_stmt: val_stmt •

    $default  reduce using rule 38 (chain_prefix_stmt)


State 88

   39 chain_prefix_stmt: var_stmt •

    $default  reduce using rule 39 (chain_prefix_stmt)


State 89

   40 chain_prefix_stmt: set_stmt •

    $default  reduce using rule 40 (chain_prefix_stmt)


State 90

   41 chain_prefix_stmt: discard_stmt •

    $default  reduce using rule 41 (chain_prefix_stmt)


State 91

   74 primary_exp: vid •
  183 struct_exp_field: vid • "=" expr

    "="  shift, and go to state 157

    $default  reduce using rule 74 (primary_exp)


State 92

   88 chain_exp: "{" expr • "}"

    "}"  shift, and go to state 158


State 93

   89 chain_exp: "{" chain_prefix • "}"
   90          | "{" chain_prefix • expr "}"
   92 chain_prefix: chain_prefix • chain_prefix_stmt ";"

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "const"                  shift, and go to state 79
    "val"                    shift, and go to state 80
    "var"                    shift, and go to state 81
    "set"                    shift, and go to state 82
    "fn"                     shift, and go to state 26
    "not"                    shift, and go to state 27
    "discard"                shift, and go to state 83
    "42"                     shift, and go to state 28
    "0x2a"                   shift, and go to state 29
    "4.2"                    shift, and go to state 30
    "\"dq-string-literal\""  shift, and go to state 31
    "'sq-string-literal'"    shift, and go to state 32
    "("                      shift, and go to state 33
    "{"                      shift, and go to state 34
    "}"                      shift, and go to state 159
    "*"                      shift, and go to state 35
    "+"                      shift, and go to state 36
    "-"                      shift, and go to state 37
    "^"                      shift, and go to state 38

    chain_prefix_stmt  go to state 160
    const_stmt         go to state 86
    val_stmt           go to state 87
    var_stmt           go to state 88
    set_stmt           go to state 89
    discard_stmt       go to state 90
    tid                go to state 39
    vid                go to state 40
    floatl             go to state 41
    mod_prefix         go to state 42
    expr               go to state 161
    bracketed_exp      go to state 44
    unit_exp           go to state 45
    paren_exp          go to state 46
    vtupleExpr         go to state 47
    vstructExpr        go to state 48
    primary_exp        go to state 49
    int_expr           go to state 50
    stringls           go to state 51
    if_exp             go to state 52
    chain_exp          go to state 53
    lambda_exp         go to state 54
    postfix_exp        go to state 55
    tcall_exp          go to state 56
    vcall_exp          go to state 57
    dot_name_exp       go to state 58
    dot_index_exp      go to state 59
    unary_exp          go to state 60
    unary_op           go to state 61
    binary_exp         go to state 62
    mul_binary_exp     go to state 63
    add_binary_exp     go to state 64
    cmp_binary_exp     go to state 65
    eq_binary_exp      go to state 66
    and_binary_exp     go to state 67
    xor_binary_exp     go to state 68
    or_binary_exp      go to state 69


State 94

  204 struct_exp_field_cl: struct_exp_field •

    $default  reduce using rule 204 (struct_exp_field_cl)


State 95

   72 vstructExpr: "{" struct_exp_field_cl • "}"
  205 struct_exp_field_cl: struct_exp_field_cl • "," struct_exp_field

    ","  shift, and go to state 162
    "}"  shift, and go to state 163


State 96

   52 mod_prefix: tid ":" •

    $default  reduce using rule 52 (mod_prefix)


State 97

   48 vid: "<val_id>" •
  105 dot_name_exp: mod_prefix "<val_id>" •

    ":"       reduce using rule 48 (vid)
    $default  reduce using rule 105 (dot_name_exp)


State 98

   53 mod_prefix: mod_prefix vid • ":"

    ":"  shift, and go to state 164


State 99

   85 stringls: stringls "\"dq-string-literal\"" •

    $default  reduce using rule 85 (stringls)


State 100

   84 stringls: stringls "'sq-string-literal'" •

    $default  reduce using rule 84 (stringls)


State 101

  103 dot_name_exp: postfix_exp "." • "<val_id>"
  104             | postfix_exp "." • "<TypeId>" "(" expr_cl0 ")"
  106 dot_index_exp: postfix_exp "." • int_expr
  107              | postfix_exp "." • bracketed_exp

    "<val_id>"  shift, and go to state 165
    "<TypeId>"  shift, and go to state 166
    "42"        shift, and go to state 28
    "0x2a"      shift, and go to state 29
    "("         shift, and go to state 33
    "{"         shift, and go to state 34

    bracketed_exp  go to state 167
    unit_exp       go to state 45
    paren_exp      go to state 46
    vtupleExpr     go to state 47
    vstructExpr    go to state 48
    int_expr       go to state 168
    chain_exp      go to state 53


State 102

  101 vcall_exp: postfix_exp "(" • ")"
  102          | postfix_exp "(" • varg_cl ")"

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "not"                    shift, and go to state 27
    "out"                    shift, and go to state 169
    "inout"                  shift, and go to state 170
    "42"                     shift, and go to state 28
    "0x2a"                   shift, and go to state 29
    "4.2"                    shift, and go to state 30
    "\"dq-string-literal\""  shift, and go to state 31
    "'sq-string-literal'"    shift, and go to state 32
    "("                      shift, and go to state 33
    ")"                      shift, and go to state 171
    "{"                      shift, and go to state 34
    "*"                      shift, and go to state 35
    "+"                      shift, and go to state 36
    "-"                      shift, and go to state 37
    "^"                      shift, and go to state 38

    tid             go to state 39
    vid             go to state 40
    floatl          go to state 41
    mod_prefix      go to state 42
    expr            go to state 172
    bracketed_exp   go to state 44
    unit_exp        go to state 45
    paren_exp       go to state 46
    vtupleExpr      go to state 47
    vstructExpr     go to state 48
    primary_exp     go to state 49
    int_expr        go to state 50
    stringls        go to state 51
    if_exp          go to state 52
    chain_exp       go to state 53
    lambda_exp      go to state 54
    postfix_exp     go to state 55
    tcall_exp       go to state 56
    vcall_exp       go to state 57
    dot_name_exp    go to state 58
    dot_index_exp   go to state 59
    unary_exp       go to state 60
    unary_op        go to state 61
    binary_exp      go to state 62
    mul_binary_exp  go to state 63
    add_binary_exp  go to state 64
    cmp_binary_exp  go to state 65
    eq_binary_exp   go to state 66
    and_binary_exp  go to state 67
    xor_binary_exp  go to state 68
    or_binary_exp   go to state 69
    varg            go to state 173
    varg_cl         go to state 174


State 103

  100 tcall_exp: postfix_exp "[" • targ_cl "]"

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "Fn"                     shift, and go to state 175
    "not"                    shift, and go to state 27
    "42"                     shift, and go to state 28
    "0x2a"                   shift, and go to state 29
    "4.2"                    shift, and go to state 30
    "\"dq-string-literal\""  shift, and go to state 31
    "'sq-string-literal'"    shift, and go to state 32
    "("                      shift, and go to state 176
    "{"                      shift, and go to state 34
    "*"                      shift, and go to state 35
    "+"                      shift, and go to state 36
    "-"                      shift, and go to state 37
    "^"                      shift, and go to state 38

    tid                go to state 177
    vid                go to state 40
    floatl             go to state 41
    mod_prefix         go to state 178
    expr               go to state 179
    bracketed_exp      go to state 44
    unit_exp           go to state 45
    paren_exp          go to state 46
    vtupleExpr         go to state 47
    vstructExpr        go to state 48
    primary_exp        go to state 49
    int_expr           go to state 50
    stringls           go to state 51
    if_exp             go to state 52
    chain_exp          go to state 53
    lambda_exp         go to state 54
    postfix_exp        go to state 55
    tcall_exp          go to state 56
    vcall_exp          go to state 57
    dot_name_exp       go to state 58
    dot_index_exp      go to state 59
    unary_exp          go to state 60
    unary_op           go to state 61
    binary_exp         go to state 62
    mul_binary_exp     go to state 63
    add_binary_exp     go to state 64
    cmp_binary_exp     go to state 65
    eq_binary_exp      go to state 66
    and_binary_exp     go to state 67
    xor_binary_exp     go to state 68
    or_binary_exp      go to state 69
    type_spec          go to state 180
    primary_type_spec  go to state 181
    paren_type_spec    go to state 182
    tuple_type_spec    go to state 183
    mod_prefix_tid     go to state 184
    fn_type_spec       go to state 185
    postfix_type_spec  go to state 186
    tcall_type_spec    go to state 187
    unary_type_spec    go to state 188
    targ               go to state 189
    targ_cl            go to state 190


State 104

  109 unary_exp: unary_op unary_exp •

    $default  reduce using rule 109 (unary_exp)


State 105

  116 mul_binary_op: "*" •

    $default  reduce using rule 116 (mul_binary_op)


State 106

  117 mul_binary_op: "/" •

    $default  reduce using rule 117 (mul_binary_op)


State 107

  118 mul_binary_op: "%" •

    $default  reduce using rule 118 (mul_binary_op)


State 108

  120 mul_binary_exp: mul_binary_exp mul_binary_op • unary_exp

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "not"                    shift, and go to state 27
    "42"                     shift, and go to state 28
    "0x2a"                   shift, and go to state 29
    "4.2"                    shift, and go to state 30
    "\"dq-string-literal\""  shift, and go to state 31
    "'sq-string-literal'"    shift, and go to state 32
    "("                      shift, and go to state 33
    "{"                      shift, and go to state 34
    "*"                      shift, and go to state 35
    "+"                      shift, and go to state 36
    "-"                      shift, and go to state 37
    "^"                      shift, and go to state 38

    tid            go to state 39
    vid            go to state 40
    floatl         go to state 41
    mod_prefix     go to state 42
    bracketed_exp  go to state 44
    unit_exp       go to state 45
    paren_exp      go to state 46
    vtupleExpr     go to state 47
    vstructExpr    go to state 48
    primary_exp    go to state 49
    int_expr       go to state 50
    stringls       go to state 51
    if_exp         go to state 52
    chain_exp      go to state 53
    lambda_exp     go to state 54
    postfix_exp    go to state 55
    tcall_exp      go to state 56
    vcall_exp      go to state 57
    dot_name_exp   go to state 58
    dot_index_exp  go to state 59
    unary_exp      go to state 191
    unary_op       go to state 61


State 109

  121 add_binary_op: "+" •

    $default  reduce using rule 121 (add_binary_op)


State 110

  122 add_binary_op: "-" •

    $default  reduce using rule 122 (add_binary_op)


State 111

  124 add_binary_exp: add_binary_exp add_binary_op • mul_binary_exp

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "not"                    shift, and go to state 27
    "42"                     shift, and go to state 28
    "0x2a"                   shift, and go to state 29
    "4.2"                    shift, and go to state 30
    "\"dq-string-literal\""  shift, and go to state 31
    "'sq-string-literal'"    shift, and go to state 32
    "("                      shift, and go to state 33
    "{"                      shift, and go to state 34
    "*"                      shift, and go to state 35
    "+"                      shift, and go to state 36
    "-"                      shift, and go to state 37
    "^"                      shift, and go to state 38

    tid             go to state 39
    vid             go to state 40
    floatl          go to state 41
    mod_prefix      go to state 42
    bracketed_exp   go to state 44
    unit_exp        go to state 45
    paren_exp       go to state 46
    vtupleExpr      go to state 47
    vstructExpr     go to state 48
    primary_exp     go to state 49
    int_expr        go to state 50
    stringls        go to state 51
    if_exp          go to state 52
    chain_exp       go to state 53
    lambda_exp      go to state 54
    postfix_exp     go to state 55
    tcall_exp       go to state 56
    vcall_exp       go to state 57
    dot_name_exp    go to state 58
    dot_index_exp   go to state 59
    unary_exp       go to state 60
    unary_op        go to state 61
    mul_binary_exp  go to state 192


State 112

  125 cmp_binary_op: "<" •

    $default  reduce using rule 125 (cmp_binary_op)


State 113

  126 cmp_binary_op: "<=" •

    $default  reduce using rule 126 (cmp_binary_op)


State 114

  127 cmp_binary_op: ">" •

    $default  reduce using rule 127 (cmp_binary_op)


State 115

  128 cmp_binary_op: ">=" •

    $default  reduce using rule 128 (cmp_binary_op)


State 116

  130 cmp_binary_exp: cmp_binary_exp cmp_binary_op • add_binary_exp

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "not"                    shift, and go to state 27
    "42"                     shift, and go to state 28
    "0x2a"                   shift, and go to state 29
    "4.2"                    shift, and go to state 30
    "\"dq-string-literal\""  shift, and go to state 31
    "'sq-string-literal'"    shift, and go to state 32
    "("                      shift, and go to state 33
    "{"                      shift, and go to state 34
    "*"                      shift, and go to state 35
    "+"                      shift, and go to state 36
    "-"                      shift, and go to state 37
    "^"                      shift, and go to state 38

    tid             go to state 39
    vid             go to state 40
    floatl          go to state 41
    mod_prefix      go to state 42
    bracketed_exp   go to state 44
    unit_exp        go to state 45
    paren_exp       go to state 46
    vtupleExpr      go to state 47
    vstructExpr     go to state 48
    primary_exp     go to state 49
    int_expr        go to state 50
    stringls        go to state 51
    if_exp          go to state 52
    chain_exp       go to state 53
    lambda_exp      go to state 54
    postfix_exp     go to state 55
    tcall_exp       go to state 56
    vcall_exp       go to state 57
    dot_name_exp    go to state 58
    dot_index_exp   go to state 59
    unary_exp       go to state 60
    unary_op        go to state 61
    mul_binary_exp  go to state 63
    add_binary_exp  go to state 193


State 117

  131 eq_binary_op: "==" •

    $default  reduce using rule 131 (eq_binary_op)


State 118

  132 eq_binary_op: "!=" •

    $default  reduce using rule 132 (eq_binary_op)


State 119

  134 eq_binary_exp: eq_binary_exp eq_binary_op • cmp_binary_exp

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "not"                    shift, and go to state 27
    "42"                     shift, and go to state 28
    "0x2a"                   shift, and go to state 29
    "4.2"                    shift, and go to state 30
    "\"dq-string-literal\""  shift, and go to state 31
    "'sq-string-literal'"    shift, and go to state 32
    "("                      shift, and go to state 33
    "{"                      shift, and go to state 34
    "*"                      shift, and go to state 35
    "+"                      shift, and go to state 36
    "-"                      shift, and go to state 37
    "^"                      shift, and go to state 38

    tid             go to state 39
    vid             go to state 40
    floatl          go to state 41
    mod_prefix      go to state 42
    bracketed_exp   go to state 44
    unit_exp        go to state 45
    paren_exp       go to state 46
    vtupleExpr      go to state 47
    vstructExpr     go to state 48
    primary_exp     go to state 49
    int_expr        go to state 50
    stringls        go to state 51
    if_exp          go to state 52
    chain_exp       go to state 53
    lambda_exp      go to state 54
    postfix_exp     go to state 55
    tcall_exp       go to state 56
    vcall_exp       go to state 57
    dot_name_exp    go to state 58
    dot_index_exp   go to state 59
    unary_exp       go to state 60
    unary_op        go to state 61
    mul_binary_exp  go to state 63
    add_binary_exp  go to state 64
    cmp_binary_exp  go to state 194


State 120

  136 and_binary_exp: and_binary_exp "and" • eq_binary_exp

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "not"                    shift, and go to state 27
    "42"                     shift, and go to state 28
    "0x2a"                   shift, and go to state 29
    "4.2"                    shift, and go to state 30
    "\"dq-string-literal\""  shift, and go to state 31
    "'sq-string-literal'"    shift, and go to state 32
    "("                      shift, and go to state 33
    "{"                      shift, and go to state 34
    "*"                      shift, and go to state 35
    "+"                      shift, and go to state 36
    "-"                      shift, and go to state 37
    "^"                      shift, and go to state 38

    tid             go to state 39
    vid             go to state 40
    floatl          go to state 41
    mod_prefix      go to state 42
    bracketed_exp   go to state 44
    unit_exp        go to state 45
    paren_exp       go to state 46
    vtupleExpr      go to state 47
    vstructExpr     go to state 48
    primary_exp     go to state 49
    int_expr        go to state 50
    stringls        go to state 51
    if_exp          go to state 52
    chain_exp       go to state 53
    lambda_exp      go to state 54
    postfix_exp     go to state 55
    tcall_exp       go to state 56
    vcall_exp       go to state 57
    dot_name_exp    go to state 58
    dot_index_exp   go to state 59
    unary_exp       go to state 60
    unary_op        go to state 61
    mul_binary_exp  go to state 63
    add_binary_exp  go to state 64
    cmp_binary_exp  go to state 65
    eq_binary_exp   go to state 195


State 121

  138 xor_binary_exp: xor_binary_exp "xor" • and_binary_exp

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "not"                    shift, and go to state 27
    "42"                     shift, and go to state 28
    "0x2a"                   shift, and go to state 29
    "4.2"                    shift, and go to state 30
    "\"dq-string-literal\""  shift, and go to state 31
    "'sq-string-literal'"    shift, and go to state 32
    "("                      shift, and go to state 33
    "{"                      shift, and go to state 34
    "*"                      shift, and go to state 35
    "+"                      shift, and go to state 36
    "-"                      shift, and go to state 37
    "^"                      shift, and go to state 38

    tid             go to state 39
    vid             go to state 40
    floatl          go to state 41
    mod_prefix      go to state 42
    bracketed_exp   go to state 44
    unit_exp        go to state 45
    paren_exp       go to state 46
    vtupleExpr      go to state 47
    vstructExpr     go to state 48
    primary_exp     go to state 49
    int_expr        go to state 50
    stringls        go to state 51
    if_exp          go to state 52
    chain_exp       go to state 53
    lambda_exp      go to state 54
    postfix_exp     go to state 55
    tcall_exp       go to state 56
    vcall_exp       go to state 57
    dot_name_exp    go to state 58
    dot_index_exp   go to state 59
    unary_exp       go to state 60
    unary_op        go to state 61
    mul_binary_exp  go to state 63
    add_binary_exp  go to state 64
    cmp_binary_exp  go to state 65
    eq_binary_exp   go to state 66
    and_binary_exp  go to state 196


State 122

  140 or_binary_exp: or_binary_exp "or" • xor_binary_exp

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "not"                    shift, and go to state 27
    "42"                     shift, and go to state 28
    "0x2a"                   shift, and go to state 29
    "4.2"                    shift, and go to state 30
    "\"dq-string-literal\""  shift, and go to state 31
    "'sq-string-literal'"    shift, and go to state 32
    "("                      shift, and go to state 33
    "{"                      shift, and go to state 34
    "*"                      shift, and go to state 35
    "+"                      shift, and go to state 36
    "-"                      shift, and go to state 37
    "^"                      shift, and go to state 38

    tid             go to state 39
    vid             go to state 40
    floatl          go to state 41
    mod_prefix      go to state 42
    bracketed_exp   go to state 44
    unit_exp        go to state 45
    paren_exp       go to state 46
    vtupleExpr      go to state 47
    vstructExpr     go to state 48
    primary_exp     go to state 49
    int_expr        go to state 50
    stringls        go to state 51
    if_exp          go to state 52
    chain_exp       go to state 53
    lambda_exp      go to state 54
    postfix_exp     go to state 55
    tcall_exp       go to state 56
    vcall_exp       go to state 57
    dot_name_exp    go to state 58
    dot_index_exp   go to state 59
    unary_exp       go to state 60
    unary_op        go to state 61
    mul_binary_exp  go to state 63
    add_binary_exp  go to state 64
    cmp_binary_exp  go to state 65
    eq_binary_exp   go to state 66
    and_binary_exp  go to state 67
    xor_binary_exp  go to state 197


State 123

   10 sub_mod_stmt: "sub" • "<TypeId>" "{" mod_content "}"
   11             | "sub" • "<TypeId>" tpattern_seq "{" mod_content "}"

    "<TypeId>"  shift, and go to state 198


State 124

   18 mod_content_stmt: sub_mod_stmt •

    $default  reduce using rule 18 (mod_content_stmt)


State 125

    9 top_mod_stmt: "module" "<TypeId>" "{" mod_content • "}"
   13 mod_content: mod_content • mod_content_stmt ";"

    "<val_id>"  shift, and go to state 24
    "<TypeId>"  shift, and go to state 10
    "sub"       shift, and go to state 123
    "}"         shift, and go to state 199

    sub_mod_stmt        go to state 124
    mod_content_stmt    go to state 200
    mod_val_stmt        go to state 127
    mod_type_stmt       go to state 128
    mod_enum_stmt       go to state 129
    mod_typeclass_stmt  go to state 130
    tid                 go to state 131
    vid                 go to state 132


State 126

   12 mod_content: mod_content_stmt • ";"

    ";"  shift, and go to state 201


State 127

   14 mod_content_stmt: mod_val_stmt •

    $default  reduce using rule 14 (mod_content_stmt)


State 128

   15 mod_content_stmt: mod_type_stmt •

    $default  reduce using rule 15 (mod_content_stmt)


State 129

   16 mod_content_stmt: mod_enum_stmt •

    $default  reduce using rule 16 (mod_content_stmt)


State 130

   17 mod_content_stmt: mod_typeclass_stmt •

    $default  reduce using rule 17 (mod_content_stmt)


State 131

   23 mod_type_stmt: tid • "=" long_type_spec
   24              | tid • tpattern_seq "=" long_type_spec
   25 mod_enum_stmt: tid • enum_field_pl
   26              | tid • tpattern_seq enum_field_pl
   33 mod_typeclass_stmt: tid • ":-" "<" tid class_spec ">" "{" type_query_exp_sl "}"
   34                   | tid • tpattern_seq ":-" "<" tid class_spec ">" "{" type_query_exp_sl "}"

    "["   shift, and go to state 202
    "="   shift, and go to state 203
    "!"   shift, and go to state 204
    "|"   shift, and go to state 205
    ":-"  shift, and go to state 206

    enum_field_pl  go to state 207
    tpattern       go to state 208
    tpattern_seq   go to state 209


State 132

   19 mod_val_stmt: vid • "=" expr
   20             | vid • tpattern_seq "=" expr
   21             | vid • type_spec "from" tid stringl
   22             | vid • tpattern_seq type_spec "from" tid stringl

    "<TypeId>"  shift, and go to state 10
    "Fn"        shift, and go to state 175
    "("         shift, and go to state 210
    "["         shift, and go to state 202
    "="         shift, and go to state 211
    "!"         shift, and go to state 204

    tid                go to state 177
    mod_prefix         go to state 212
    type_spec          go to state 213
    primary_type_spec  go to state 181
    paren_type_spec    go to state 182
    tuple_type_spec    go to state 183
    mod_prefix_tid     go to state 184
    fn_type_spec       go to state 185
    postfix_type_spec  go to state 186
    tcall_type_spec    go to state 187
    unary_type_spec    go to state 188
    tpattern           go to state 208
    tpattern_seq       go to state 214


State 133

   35 import_stmt: "import" tid "from" stringl "type" stringl •

    $default  reduce using rule 35 (import_stmt)


State 134

   86 if_exp: "if" bracketed_exp "then" • bracketed_exp
   87       | "if" bracketed_exp "then" • bracketed_exp "else" primary_exp

    "("  shift, and go to state 33
    "{"  shift, and go to state 34

    bracketed_exp  go to state 215
    unit_exp       go to state 45
    paren_exp      go to state 46
    vtupleExpr     go to state 47
    vstructExpr    go to state 48
    chain_exp      go to state 53


State 135

  185 vpattern_field: "out" • vid type_spec

    "<val_id>"  shift, and go to state 24

    vid  go to state 216


State 136

  186 vpattern_field: "inout" • vid type_spec

    "<val_id>"  shift, and go to state 24

    vid  go to state 217


State 137

  195 vpattern: "(" ")" •

    $default  reduce using rule 195 (vpattern)


State 138

  184 vpattern_field: vid • type_spec

    "<TypeId>"  shift, and go to state 10
    "Fn"        shift, and go to state 175
    "("         shift, and go to state 210

    tid                go to state 177
    mod_prefix         go to state 212
    type_spec          go to state 218
    primary_type_spec  go to state 181
    paren_type_spec    go to state 182
    tuple_type_spec    go to state 183
    mod_prefix_tid     go to state 184
    fn_type_spec       go to state 185
    postfix_type_spec  go to state 186
    tcall_type_spec    go to state 187
    unary_type_spec    go to state 188


State 139

  198 vpattern_field_cl: vpattern_field •

    $default  reduce using rule 198 (vpattern_field_cl)


State 140

  194 vpattern: "(" vpattern_field_cl • ")"
  199 vpattern_field_cl: vpattern_field_cl • "," vpattern_field

    ","  shift, and go to state 219
    ")"  shift, and go to state 220


State 141

   94 lambda_exp: "fn" vpattern "->" • type_spec bracketed_exp

    "<TypeId>"  shift, and go to state 10
    "Fn"        shift, and go to state 175
    "("         shift, and go to state 210

    tid                go to state 177
    mod_prefix         go to state 212
    type_spec          go to state 221
    primary_type_spec  go to state 181
    paren_type_spec    go to state 182
    tuple_type_spec    go to state 183
    mod_prefix_tid     go to state 184
    fn_type_spec       go to state 185
    postfix_type_spec  go to state 186
    tcall_type_spec    go to state 187
    unary_type_spec    go to state 188


State 142

   93 lambda_exp: "fn" vpattern bracketed_exp •

    $default  reduce using rule 93 (lambda_exp)


State 143

   58 expr_cl2: expr "," • expr
   70 vtupleExpr: "(" expr "," • ")"

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "not"                    shift, and go to state 27
    "42"                     shift, and go to state 28
    "0x2a"                   shift, and go to state 29
    "4.2"                    shift, and go to state 30
    "\"dq-string-literal\""  shift, and go to state 31
    "'sq-string-literal'"    shift, and go to state 32
    "("                      shift, and go to state 33
    ")"                      shift, and go to state 222
    "{"                      shift, and go to state 34
    "*"                      shift, and go to state 35
    "+"                      shift, and go to state 36
    "-"                      shift, and go to state 37
    "^"                      shift, and go to state 38

    tid             go to state 39
    vid             go to state 40
    floatl          go to state 41
    mod_prefix      go to state 42
    expr            go to state 223
    bracketed_exp   go to state 44
    unit_exp        go to state 45
    paren_exp       go to state 46
    vtupleExpr      go to state 47
    vstructExpr     go to state 48
    primary_exp     go to state 49
    int_expr        go to state 50
    stringls        go to state 51
    if_exp          go to state 52
    chain_exp       go to state 53
    lambda_exp      go to state 54
    postfix_exp     go to state 55
    tcall_exp       go to state 56
    vcall_exp       go to state 57
    dot_name_exp    go to state 58
    dot_index_exp   go to state 59
    unary_exp       go to state 60
    unary_op        go to state 61
    binary_exp      go to state 62
    mul_binary_exp  go to state 63
    add_binary_exp  go to state 64
    cmp_binary_exp  go to state 65
    eq_binary_exp   go to state 66
    and_binary_exp  go to state 67
    xor_binary_exp  go to state 68
    or_binary_exp   go to state 69


State 144

   69 paren_exp: "(" long_exp ")" •

    $default  reduce using rule 69 (paren_exp)


State 145

   59 expr_cl2: expr_cl2 "," • expr

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "not"                    shift, and go to state 27
    "42"                     shift, and go to state 28
    "0x2a"                   shift, and go to state 29
    "4.2"                    shift, and go to state 30
    "\"dq-string-literal\""  shift, and go to state 31
    "'sq-string-literal'"    shift, and go to state 32
    "("                      shift, and go to state 33
    "{"                      shift, and go to state 34
    "*"                      shift, and go to state 35
    "+"                      shift, and go to state 36
    "-"                      shift, and go to state 37
    "^"                      shift, and go to state 38

    tid             go to state 39
    vid             go to state 40
    floatl          go to state 41
    mod_prefix      go to state 42
    expr            go to state 224
    bracketed_exp   go to state 44
    unit_exp        go to state 45
    paren_exp       go to state 46
    vtupleExpr      go to state 47
    vstructExpr     go to state 48
    primary_exp     go to state 49
    int_expr        go to state 50
    stringls        go to state 51
    if_exp          go to state 52
    chain_exp       go to state 53
    lambda_exp      go to state 54
    postfix_exp     go to state 55
    tcall_exp       go to state 56
    vcall_exp       go to state 57
    dot_name_exp    go to state 58
    dot_index_exp   go to state 59
    unary_exp       go to state 60
    unary_op        go to state 61
    binary_exp      go to state 62
    mul_binary_exp  go to state 63
    add_binary_exp  go to state 64
    cmp_binary_exp  go to state 65
    eq_binary_exp   go to state 66
    and_binary_exp  go to state 67
    xor_binary_exp  go to state 68
    or_binary_exp   go to state 69


State 146

   71 vtupleExpr: "(" expr_cl2 ")" •

    $default  reduce using rule 71 (vtupleExpr)


State 147

  191 destructured_lpattern: "(" • lpattern_field_cl ")"

    "<val_id>"  shift, and go to state 24

    vid                go to state 148
    lpattern_field     go to state 225
    lpattern_field_cl  go to state 226


State 148

  187 lpattern_field: vid • type_spec
  188               | vid •

    "<TypeId>"  shift, and go to state 10
    "Fn"        shift, and go to state 175
    "("         shift, and go to state 210

    $default  reduce using rule 188 (lpattern_field)

    tid                go to state 177
    mod_prefix         go to state 212
    type_spec          go to state 227
    primary_type_spec  go to state 181
    paren_type_spec    go to state 182
    tuple_type_spec    go to state 183
    mod_prefix_tid     go to state 184
    fn_type_spec       go to state 185
    postfix_type_spec  go to state 186
    tcall_type_spec    go to state 187
    unary_type_spec    go to state 188


State 149

  192 lpattern: lpattern_field •

    $default  reduce using rule 192 (lpattern)


State 150

  193 lpattern: destructured_lpattern •

    $default  reduce using rule 193 (lpattern)


State 151

   42 const_stmt: "const" lpattern • "=" expr

    "="  shift, and go to state 228


State 152

   43 val_stmt: "val" lpattern • "=" expr

    "="  shift, and go to state 229


State 153

   44 var_stmt: "var" lpattern • "=" expr

    "="  shift, and go to state 230


State 154

   45 set_stmt: "set" expr • "=" expr

    "="  shift, and go to state 231


State 155

   46 discard_stmt: "discard" expr •

    $default  reduce using rule 46 (discard_stmt)


State 156

   91 chain_prefix: chain_prefix_stmt ";" •

    $default  reduce using rule 91 (chain_prefix)


State 157

  183 struct_exp_field: vid "=" • expr

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "not"                    shift, and go to state 27
    "42"                     shift, and go to state 28
    "0x2a"                   shift, and go to state 29
    "4.2"                    shift, and go to state 30
    "\"dq-string-literal\""  shift, and go to state 31
    "'sq-string-literal'"    shift, and go to state 32
    "("                      shift, and go to state 33
    "{"                      shift, and go to state 34
    "*"                      shift, and go to state 35
    "+"                      shift, and go to state 36
    "-"                      shift, and go to state 37
    "^"                      shift, and go to state 38

    tid             go to state 39
    vid             go to state 40
    floatl          go to state 41
    mod_prefix      go to state 42
    expr            go to state 232
    bracketed_exp   go to state 44
    unit_exp        go to state 45
    paren_exp       go to state 46
    vtupleExpr      go to state 47
    vstructExpr     go to state 48
    primary_exp     go to state 49
    int_expr        go to state 50
    stringls        go to state 51
    if_exp          go to state 52
    chain_exp       go to state 53
    lambda_exp      go to state 54
    postfix_exp     go to state 55
    tcall_exp       go to state 56
    vcall_exp       go to state 57
    dot_name_exp    go to state 58
    dot_index_exp   go to state 59
    unary_exp       go to state 60
    unary_op        go to state 61
    binary_exp      go to state 62
    mul_binary_exp  go to state 63
    add_binary_exp  go to state 64
    cmp_binary_exp  go to state 65
    eq_binary_exp   go to state 66
    and_binary_exp  go to state 67
    xor_binary_exp  go to state 68
    or_binary_exp   go to state 69


State 158

   88 chain_exp: "{" expr "}" •

    $default  reduce using rule 88 (chain_exp)


State 159

   89 chain_exp: "{" chain_prefix "}" •

    $default  reduce using rule 89 (chain_exp)


State 160

   92 chain_prefix: chain_prefix chain_prefix_stmt • ";"

    ";"  shift, and go to state 233


State 161

   90 chain_exp: "{" chain_prefix expr • "}"

    "}"  shift, and go to state 234


State 162

  205 struct_exp_field_cl: struct_exp_field_cl "," • struct_exp_field

    "<val_id>"  shift, and go to state 24

    vid               go to state 235
    struct_exp_field  go to state 236


State 163

   72 vstructExpr: "{" struct_exp_field_cl "}" •

    $default  reduce using rule 72 (vstructExpr)


State 164

   53 mod_prefix: mod_prefix vid ":" •

    $default  reduce using rule 53 (mod_prefix)


State 165

  103 dot_name_exp: postfix_exp "." "<val_id>" •

    $default  reduce using rule 103 (dot_name_exp)


State 166

  104 dot_name_exp: postfix_exp "." "<TypeId>" • "(" expr_cl0 ")"

    "("  shift, and go to state 237


State 167

  107 dot_index_exp: postfix_exp "." bracketed_exp •

    $default  reduce using rule 107 (dot_index_exp)


State 168

  106 dot_index_exp: postfix_exp "." int_expr •

    $default  reduce using rule 106 (dot_index_exp)


State 169

  175 varg: "out" • expr

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "not"                    shift, and go to state 27
    "42"                     shift, and go to state 28
    "0x2a"                   shift, and go to state 29
    "4.2"                    shift, and go to state 30
    "\"dq-string-literal\""  shift, and go to state 31
    "'sq-string-literal'"    shift, and go to state 32
    "("                      shift, and go to state 33
    "{"                      shift, and go to state 34
    "*"                      shift, and go to state 35
    "+"                      shift, and go to state 36
    "-"                      shift, and go to state 37
    "^"                      shift, and go to state 38

    tid             go to state 39
    vid             go to state 40
    floatl          go to state 41
    mod_prefix      go to state 42
    expr            go to state 238
    bracketed_exp   go to state 44
    unit_exp        go to state 45
    paren_exp       go to state 46
    vtupleExpr      go to state 47
    vstructExpr     go to state 48
    primary_exp     go to state 49
    int_expr        go to state 50
    stringls        go to state 51
    if_exp          go to state 52
    chain_exp       go to state 53
    lambda_exp      go to state 54
    postfix_exp     go to state 55
    tcall_exp       go to state 56
    vcall_exp       go to state 57
    dot_name_exp    go to state 58
    dot_index_exp   go to state 59
    unary_exp       go to state 60
    unary_op        go to state 61
    binary_exp      go to state 62
    mul_binary_exp  go to state 63
    add_binary_exp  go to state 64
    cmp_binary_exp  go to state 65
    eq_binary_exp   go to state 66
    and_binary_exp  go to state 67
    xor_binary_exp  go to state 68
    or_binary_exp   go to state 69


State 170

  176 varg: "inout" • expr

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "not"                    shift, and go to state 27
    "42"                     shift, and go to state 28
    "0x2a"                   shift, and go to state 29
    "4.2"                    shift, and go to state 30
    "\"dq-string-literal\""  shift, and go to state 31
    "'sq-string-literal'"    shift, and go to state 32
    "("                      shift, and go to state 33
    "{"                      shift, and go to state 34
    "*"                      shift, and go to state 35
    "+"                      shift, and go to state 36
    "-"                      shift, and go to state 37
    "^"                      shift, and go to state 38

    tid             go to state 39
    vid             go to state 40
    floatl          go to state 41
    mod_prefix      go to state 42
    expr            go to state 239
    bracketed_exp   go to state 44
    unit_exp        go to state 45
    paren_exp       go to state 46
    vtupleExpr      go to state 47
    vstructExpr     go to state 48
    primary_exp     go to state 49
    int_expr        go to state 50
    stringls        go to state 51
    if_exp          go to state 52
    chain_exp       go to state 53
    lambda_exp      go to state 54
    postfix_exp     go to state 55
    tcall_exp       go to state 56
    vcall_exp       go to state 57
    dot_name_exp    go to state 58
    dot_index_exp   go to state 59
    unary_exp       go to state 60
    unary_op        go to state 61
    binary_exp      go to state 62
    mul_binary_exp  go to state 63
    add_binary_exp  go to state 64
    cmp_binary_exp  go to state 65
    eq_binary_exp   go to state 66
    and_binary_exp  go to state 67
    xor_binary_exp  go to state 68
    or_binary_exp   go to state 69


State 171

  101 vcall_exp: postfix_exp "(" ")" •

    $default  reduce using rule 101 (vcall_exp)


State 172

  174 varg: expr •

    $default  reduce using rule 174 (varg)


State 173

  177 varg_cl: varg •

    $default  reduce using rule 177 (varg_cl)


State 174

  102 vcall_exp: postfix_exp "(" varg_cl • ")"
  178 varg_cl: varg_cl • "," varg

    ","  shift, and go to state 240
    ")"  shift, and go to state 241


State 175

  162 fn_type_spec: "Fn" • vpattern primary_type_spec

    "("  shift, and go to state 73

    vpattern  go to state 242


State 176

   67 unit_exp: "(" • ")"
   69 paren_exp: "(" • long_exp ")"
   70 vtupleExpr: "(" • expr "," ")"
   71           | "(" • expr_cl2 ")"
  158 paren_type_spec: "(" • type_spec ")"
  159 tuple_type_spec: "(" • type_spec "," ")"
  160                | "(" • type_spec_cl2 ")"

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "Fn"                     shift, and go to state 175
    "not"                    shift, and go to state 27
    "42"                     shift, and go to state 28
    "0x2a"                   shift, and go to state 29
    "4.2"                    shift, and go to state 30
    "\"dq-string-literal\""  shift, and go to state 31
    "'sq-string-literal'"    shift, and go to state 32
    "("                      shift, and go to state 176
    ")"                      shift, and go to state 75
    "{"                      shift, and go to state 34
    "*"                      shift, and go to state 35
    "+"                      shift, and go to state 36
    "-"                      shift, and go to state 37
    "^"                      shift, and go to state 38

    tid                go to state 177
    vid                go to state 40
    floatl             go to state 41
    mod_prefix         go to state 178
    expr               go to state 76
    long_exp           go to state 77
    expr_cl2           go to state 78
    bracketed_exp      go to state 44
    unit_exp           go to state 45
    paren_exp          go to state 46
    vtupleExpr         go to state 47
    vstructExpr        go to state 48
    primary_exp        go to state 49
    int_expr           go to state 50
    stringls           go to state 51
    if_exp             go to state 52
    chain_exp          go to state 53
    lambda_exp         go to state 54
    postfix_exp        go to state 55
    tcall_exp          go to state 56
    vcall_exp          go to state 57
    dot_name_exp       go to state 58
    dot_index_exp      go to state 59
    unary_exp          go to state 60
    unary_op           go to state 61
    binary_exp         go to state 62
    mul_binary_exp     go to state 63
    add_binary_exp     go to state 64
    cmp_binary_exp     go to state 65
    eq_binary_exp      go to state 66
    and_binary_exp     go to state 67
    xor_binary_exp     go to state 68
    or_binary_exp      go to state 69
    type_spec          go to state 243
    type_spec_cl2      go to state 244
    primary_type_spec  go to state 181
    paren_type_spec    go to state 182
    tuple_type_spec    go to state 183
    mod_prefix_tid     go to state 184
    fn_type_spec       go to state 185
    postfix_type_spec  go to state 186
    tcall_type_spec    go to state 187
    unary_type_spec    go to state 188


State 177

   52 mod_prefix: tid • ":"
  153 primary_type_spec: tid •

    ":"  shift, and go to state 96

    $default  reduce using rule 153 (primary_type_spec)


State 178

   53 mod_prefix: mod_prefix • vid ":"
  105 dot_name_exp: mod_prefix • "<val_id>"
  161 mod_prefix_tid: mod_prefix • tid

    "<val_id>"  shift, and go to state 97
    "<TypeId>"  shift, and go to state 10

    tid  go to state 245
    vid  go to state 98


State 179

  171 targ: expr •

    $default  reduce using rule 171 (targ)


State 180

  170 targ: type_spec •

    $default  reduce using rule 170 (targ)


State 181

  163 postfix_type_spec: primary_type_spec •

    $default  reduce using rule 163 (postfix_type_spec)


State 182

  154 primary_type_spec: paren_type_spec •

    $default  reduce using rule 154 (primary_type_spec)


State 183

  155 primary_type_spec: tuple_type_spec •

    $default  reduce using rule 155 (primary_type_spec)


State 184

  156 primary_type_spec: mod_prefix_tid •

    $default  reduce using rule 156 (primary_type_spec)


State 185

  157 primary_type_spec: fn_type_spec •

    $default  reduce using rule 157 (primary_type_spec)


State 186

  165 tcall_type_spec: postfix_type_spec • "[" targ_cl "]"
  166 unary_type_spec: postfix_type_spec •

    "["  shift, and go to state 246

    $default  reduce using rule 166 (unary_type_spec)


State 187

  164 postfix_type_spec: tcall_type_spec •

    $default  reduce using rule 164 (postfix_type_spec)


State 188

  145 type_spec: unary_type_spec •

    $default  reduce using rule 145 (type_spec)


State 189

  172 targ_cl: targ •

    $default  reduce using rule 172 (targ_cl)


State 190

  100 tcall_exp: postfix_exp "[" targ_cl • "]"
  173 targ_cl: targ_cl • "," targ

    ","  shift, and go to state 247
    "]"  shift, and go to state 248


State 191

  120 mul_binary_exp: mul_binary_exp mul_binary_op unary_exp •

    $default  reduce using rule 120 (mul_binary_exp)


State 192

  120 mul_binary_exp: mul_binary_exp • mul_binary_op unary_exp
  124 add_binary_exp: add_binary_exp add_binary_op mul_binary_exp •

    "*"  shift, and go to state 105
    "/"  shift, and go to state 106
    "%"  shift, and go to state 107

    $default  reduce using rule 124 (add_binary_exp)

    mul_binary_op  go to state 108


State 193

  124 add_binary_exp: add_binary_exp • add_binary_op mul_binary_exp
  130 cmp_binary_exp: cmp_binary_exp cmp_binary_op add_binary_exp •

    "+"  shift, and go to state 109
    "-"  shift, and go to state 110

    $default  reduce using rule 130 (cmp_binary_exp)

    add_binary_op  go to state 111


State 194

  130 cmp_binary_exp: cmp_binary_exp • cmp_binary_op add_binary_exp
  134 eq_binary_exp: eq_binary_exp eq_binary_op cmp_binary_exp •

    "<"   shift, and go to state 112
    "<="  shift, and go to state 113
    ">"   shift, and go to state 114
    ">="  shift, and go to state 115

    $default  reduce using rule 134 (eq_binary_exp)

    cmp_binary_op  go to state 116


State 195

  134 eq_binary_exp: eq_binary_exp • eq_binary_op cmp_binary_exp
  136 and_binary_exp: and_binary_exp "and" eq_binary_exp •

    "=="  shift, and go to state 117
    "!="  shift, and go to state 118

    $default  reduce using rule 136 (and_binary_exp)

    eq_binary_op  go to state 119


State 196

  136 and_binary_exp: and_binary_exp • "and" eq_binary_exp
  138 xor_binary_exp: xor_binary_exp "xor" and_binary_exp •

    "and"  shift, and go to state 120

    $default  reduce using rule 138 (xor_binary_exp)


State 197

  138 xor_binary_exp: xor_binary_exp • "xor" and_binary_exp
  140 or_binary_exp: or_binary_exp "or" xor_binary_exp •

    "xor"  shift, and go to state 121

    $default  reduce using rule 140 (or_binary_exp)


State 198

   10 sub_mod_stmt: "sub" "<TypeId>" • "{" mod_content "}"
   11             | "sub" "<TypeId>" • tpattern_seq "{" mod_content "}"

    "["  shift, and go to state 202
    "{"  shift, and go to state 249
    "!"  shift, and go to state 204

    tpattern      go to state 208
    tpattern_seq  go to state 250


State 199

    9 top_mod_stmt: "module" "<TypeId>" "{" mod_content "}" •

    $default  reduce using rule 9 (top_mod_stmt)


State 200

   13 mod_content: mod_content mod_content_stmt • ";"

    ";"  shift, and go to state 251


State 201

   12 mod_content: mod_content_stmt ";" •

    $default  reduce using rule 12 (mod_content)


State 202

  196 tpattern: "[" • tpattern_field_cl "]"

    "<val_id>"  shift, and go to state 24
    "<TypeId>"  shift, and go to state 10

    tid                go to state 252
    vid                go to state 253
    tpattern_field     go to state 254
    tpattern_field_cl  go to state 255


State 203

   23 mod_type_stmt: tid "=" • long_type_spec

    "<TypeId>"  shift, and go to state 10
    "Fn"        shift, and go to state 175
    "("         shift, and go to state 210
    "{"         shift, and go to state 256

    tid                go to state 177
    mod_prefix         go to state 212
    primary_type_spec  go to state 181
    paren_type_spec    go to state 182
    tuple_type_spec    go to state 183
    mod_prefix_tid     go to state 184
    fn_type_spec       go to state 185
    postfix_type_spec  go to state 186
    tcall_type_spec    go to state 187
    unary_type_spec    go to state 257
    long_type_spec     go to state 258
    struct_type_spec   go to state 259


State 204

  197 tpattern: "!" • "[" tpattern_field_cl "]"

    "["  shift, and go to state 260


State 205

   27 enum_field_pl: "|" • unprefixed_enum_field_pl

    "<TypeId>"  shift, and go to state 10

    unprefixed_enum_field_pl  go to state 261
    enum_field                go to state 262
    tid                       go to state 263


State 206

   33 mod_typeclass_stmt: tid ":-" • "<" tid class_spec ">" "{" type_query_exp_sl "}"

    "<"  shift, and go to state 264


State 207

   25 mod_enum_stmt: tid enum_field_pl •

    $default  reduce using rule 25 (mod_enum_stmt)


State 208

  206 tpattern_seq: tpattern •

    $default  reduce using rule 206 (tpattern_seq)


State 209

   24 mod_type_stmt: tid tpattern_seq • "=" long_type_spec
   26 mod_enum_stmt: tid tpattern_seq • enum_field_pl
   34 mod_typeclass_stmt: tid tpattern_seq • ":-" "<" tid class_spec ">" "{" type_query_exp_sl "}"
  207 tpattern_seq: tpattern_seq • tpattern

    "["   shift, and go to state 202
    "="   shift, and go to state 265
    "!"   shift, and go to state 204
    "|"   shift, and go to state 205
    ":-"  shift, and go to state 266

    enum_field_pl  go to state 267
    tpattern       go to state 268


State 210

  158 paren_type_spec: "(" • type_spec ")"
  159 tuple_type_spec: "(" • type_spec "," ")"
  160                | "(" • type_spec_cl2 ")"

    "<TypeId>"  shift, and go to state 10
    "Fn"        shift, and go to state 175
    "("         shift, and go to state 210

    tid                go to state 177
    mod_prefix         go to state 212
    type_spec          go to state 243
    type_spec_cl2      go to state 244
    primary_type_spec  go to state 181
    paren_type_spec    go to state 182
    tuple_type_spec    go to state 183
    mod_prefix_tid     go to state 184
    fn_type_spec       go to state 185
    postfix_type_spec  go to state 186
    tcall_type_spec    go to state 187
    unary_type_spec    go to state 188


State 211

   19 mod_val_stmt: vid "=" • expr

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "not"                    shift, and go to state 27
    "42"                     shift, and go to state 28
    "0x2a"                   shift, and go to state 29
    "4.2"                    shift, and go to state 30
    "\"dq-string-literal\""  shift, and go to state 31
    "'sq-string-literal'"    shift, and go to state 32
    "("                      shift, and go to state 33
    "{"                      shift, and go to state 34
    "*"                      shift, and go to state 35
    "+"                      shift, and go to state 36
    "-"                      shift, and go to state 37
    "^"                      shift, and go to state 38

    tid             go to state 39
    vid             go to state 40
    floatl          go to state 41
    mod_prefix      go to state 42
    expr            go to state 269
    bracketed_exp   go to state 44
    unit_exp        go to state 45
    paren_exp       go to state 46
    vtupleExpr      go to state 47
    vstructExpr     go to state 48
    primary_exp     go to state 49
    int_expr        go to state 50
    stringls        go to state 51
    if_exp          go to state 52
    chain_exp       go to state 53
    lambda_exp      go to state 54
    postfix_exp     go to state 55
    tcall_exp       go to state 56
    vcall_exp       go to state 57
    dot_name_exp    go to state 58
    dot_index_exp   go to state 59
    unary_exp       go to state 60
    unary_op        go to state 61
    binary_exp      go to state 62
    mul_binary_exp  go to state 63
    add_binary_exp  go to state 64
    cmp_binary_exp  go to state 65
    eq_binary_exp   go to state 66
    and_binary_exp  go to state 67
    xor_binary_exp  go to state 68
    or_binary_exp   go to state 69


State 212

   53 mod_prefix: mod_prefix • vid ":"
  161 mod_prefix_tid: mod_prefix • tid

    "<val_id>"  shift, and go to state 24
    "<TypeId>"  shift, and go to state 10

    tid  go to state 245
    vid  go to state 98


State 213

   21 mod_val_stmt: vid type_spec • "from" tid stringl

    "from"  shift, and go to state 270


State 214

   20 mod_val_stmt: vid tpattern_seq • "=" expr
   22             | vid tpattern_seq • type_spec "from" tid stringl
  207 tpattern_seq: tpattern_seq • tpattern

    "<TypeId>"  shift, and go to state 10
    "Fn"        shift, and go to state 175
    "("         shift, and go to state 210
    "["         shift, and go to state 202
    "="         shift, and go to state 271
    "!"         shift, and go to state 204

    tid                go to state 177
    mod_prefix         go to state 212
    type_spec          go to state 272
    primary_type_spec  go to state 181
    paren_type_spec    go to state 182
    tuple_type_spec    go to state 183
    mod_prefix_tid     go to state 184
    fn_type_spec       go to state 185
    postfix_type_spec  go to state 186
    tcall_type_spec    go to state 187
    unary_type_spec    go to state 188
    tpattern           go to state 268


State 215

   86 if_exp: "if" bracketed_exp "then" bracketed_exp •
   87       | "if" bracketed_exp "then" bracketed_exp • "else" primary_exp

    "else"  shift, and go to state 273

    $default  reduce using rule 86 (if_exp)


State 216

  185 vpattern_field: "out" vid • type_spec

    "<TypeId>"  shift, and go to state 10
    "Fn"        shift, and go to state 175
    "("         shift, and go to state 210

    tid                go to state 177
    mod_prefix         go to state 212
    type_spec          go to state 274
    primary_type_spec  go to state 181
    paren_type_spec    go to state 182
    tuple_type_spec    go to state 183
    mod_prefix_tid     go to state 184
    fn_type_spec       go to state 185
    postfix_type_spec  go to state 186
    tcall_type_spec    go to state 187
    unary_type_spec    go to state 188


State 217

  186 vpattern_field: "inout" vid • type_spec

    "<TypeId>"  shift, and go to state 10
    "Fn"        shift, and go to state 175
    "("         shift, and go to state 210

    tid                go to state 177
    mod_prefix         go to state 212
    type_spec          go to state 275
    primary_type_spec  go to state 181
    paren_type_spec    go to state 182
    tuple_type_spec    go to state 183
    mod_prefix_tid     go to state 184
    fn_type_spec       go to state 185
    postfix_type_spec  go to state 186
    tcall_type_spec    go to state 187
    unary_type_spec    go to state 188


State 218

  184 vpattern_field: vid type_spec •

    $default  reduce using rule 184 (vpattern_field)


State 219

  199 vpattern_field_cl: vpattern_field_cl "," • vpattern_field

    "<val_id>"  shift, and go to state 24
    "out"       shift, and go to state 135
    "inout"     shift, and go to state 136

    vid             go to state 138
    vpattern_field  go to state 276


State 220

  194 vpattern: "(" vpattern_field_cl ")" •

    $default  reduce using rule 194 (vpattern)


State 221

   94 lambda_exp: "fn" vpattern "->" type_spec • bracketed_exp

    "("  shift, and go to state 33
    "{"  shift, and go to state 34

    bracketed_exp  go to state 277
    unit_exp       go to state 45
    paren_exp      go to state 46
    vtupleExpr     go to state 47
    vstructExpr    go to state 48
    chain_exp      go to state 53


State 222

   70 vtupleExpr: "(" expr "," ")" •

    $default  reduce using rule 70 (vtupleExpr)


State 223

   58 expr_cl2: expr "," expr •

    $default  reduce using rule 58 (expr_cl2)


State 224

   59 expr_cl2: expr_cl2 "," expr •

    $default  reduce using rule 59 (expr_cl2)


State 225

  200 lpattern_field_cl: lpattern_field •

    $default  reduce using rule 200 (lpattern_field_cl)


State 226

  191 destructured_lpattern: "(" lpattern_field_cl • ")"
  201 lpattern_field_cl: lpattern_field_cl • "," lpattern_field

    ","  shift, and go to state 278
    ")"  shift, and go to state 279


State 227

  187 lpattern_field: vid type_spec •

    $default  reduce using rule 187 (lpattern_field)


State 228

   42 const_stmt: "const" lpattern "=" • expr

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "not"                    shift, and go to state 27
    "42"                     shift, and go to state 28
    "0x2a"                   shift, and go to state 29
    "4.2"                    shift, and go to state 30
    "\"dq-string-literal\""  shift, and go to state 31
    "'sq-string-literal'"    shift, and go to state 32
    "("                      shift, and go to state 33
    "{"                      shift, and go to state 34
    "*"                      shift, and go to state 35
    "+"                      shift, and go to state 36
    "-"                      shift, and go to state 37
    "^"                      shift, and go to state 38

    tid             go to state 39
    vid             go to state 40
    floatl          go to state 41
    mod_prefix      go to state 42
    expr            go to state 280
    bracketed_exp   go to state 44
    unit_exp        go to state 45
    paren_exp       go to state 46
    vtupleExpr      go to state 47
    vstructExpr     go to state 48
    primary_exp     go to state 49
    int_expr        go to state 50
    stringls        go to state 51
    if_exp          go to state 52
    chain_exp       go to state 53
    lambda_exp      go to state 54
    postfix_exp     go to state 55
    tcall_exp       go to state 56
    vcall_exp       go to state 57
    dot_name_exp    go to state 58
    dot_index_exp   go to state 59
    unary_exp       go to state 60
    unary_op        go to state 61
    binary_exp      go to state 62
    mul_binary_exp  go to state 63
    add_binary_exp  go to state 64
    cmp_binary_exp  go to state 65
    eq_binary_exp   go to state 66
    and_binary_exp  go to state 67
    xor_binary_exp  go to state 68
    or_binary_exp   go to state 69


State 229

   43 val_stmt: "val" lpattern "=" • expr

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "not"                    shift, and go to state 27
    "42"                     shift, and go to state 28
    "0x2a"                   shift, and go to state 29
    "4.2"                    shift, and go to state 30
    "\"dq-string-literal\""  shift, and go to state 31
    "'sq-string-literal'"    shift, and go to state 32
    "("                      shift, and go to state 33
    "{"                      shift, and go to state 34
    "*"                      shift, and go to state 35
    "+"                      shift, and go to state 36
    "-"                      shift, and go to state 37
    "^"                      shift, and go to state 38

    tid             go to state 39
    vid             go to state 40
    floatl          go to state 41
    mod_prefix      go to state 42
    expr            go to state 281
    bracketed_exp   go to state 44
    unit_exp        go to state 45
    paren_exp       go to state 46
    vtupleExpr      go to state 47
    vstructExpr     go to state 48
    primary_exp     go to state 49
    int_expr        go to state 50
    stringls        go to state 51
    if_exp          go to state 52
    chain_exp       go to state 53
    lambda_exp      go to state 54
    postfix_exp     go to state 55
    tcall_exp       go to state 56
    vcall_exp       go to state 57
    dot_name_exp    go to state 58
    dot_index_exp   go to state 59
    unary_exp       go to state 60
    unary_op        go to state 61
    binary_exp      go to state 62
    mul_binary_exp  go to state 63
    add_binary_exp  go to state 64
    cmp_binary_exp  go to state 65
    eq_binary_exp   go to state 66
    and_binary_exp  go to state 67
    xor_binary_exp  go to state 68
    or_binary_exp   go to state 69


State 230

   44 var_stmt: "var" lpattern "=" • expr

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "not"                    shift, and go to state 27
    "42"                     shift, and go to state 28
    "0x2a"                   shift, and go to state 29
    "4.2"                    shift, and go to state 30
    "\"dq-string-literal\""  shift, and go to state 31
    "'sq-string-literal'"    shift, and go to state 32
    "("                      shift, and go to state 33
    "{"                      shift, and go to state 34
    "*"                      shift, and go to state 35
    "+"                      shift, and go to state 36
    "-"                      shift, and go to state 37
    "^"                      shift, and go to state 38

    tid             go to state 39
    vid             go to state 40
    floatl          go to state 41
    mod_prefix      go to state 42
    expr            go to state 282
    bracketed_exp   go to state 44
    unit_exp        go to state 45
    paren_exp       go to state 46
    vtupleExpr      go to state 47
    vstructExpr     go to state 48
    primary_exp     go to state 49
    int_expr        go to state 50
    stringls        go to state 51
    if_exp          go to state 52
    chain_exp       go to state 53
    lambda_exp      go to state 54
    postfix_exp     go to state 55
    tcall_exp       go to state 56
    vcall_exp       go to state 57
    dot_name_exp    go to state 58
    dot_index_exp   go to state 59
    unary_exp       go to state 60
    unary_op        go to state 61
    binary_exp      go to state 62
    mul_binary_exp  go to state 63
    add_binary_exp  go to state 64
    cmp_binary_exp  go to state 65
    eq_binary_exp   go to state 66
    and_binary_exp  go to state 67
    xor_binary_exp  go to state 68
    or_binary_exp   go to state 69


State 231

   45 set_stmt: "set" expr "=" • expr

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "not"                    shift, and go to state 27
    "42"                     shift, and go to state 28
    "0x2a"                   shift, and go to state 29
    "4.2"                    shift, and go to state 30
    "\"dq-string-literal\""  shift, and go to state 31
    "'sq-string-literal'"    shift, and go to state 32
    "("                      shift, and go to state 33
    "{"                      shift, and go to state 34
    "*"                      shift, and go to state 35
    "+"                      shift, and go to state 36
    "-"                      shift, and go to state 37
    "^"                      shift, and go to state 38

    tid             go to state 39
    vid             go to state 40
    floatl          go to state 41
    mod_prefix      go to state 42
    expr            go to state 283
    bracketed_exp   go to state 44
    unit_exp        go to state 45
    paren_exp       go to state 46
    vtupleExpr      go to state 47
    vstructExpr     go to state 48
    primary_exp     go to state 49
    int_expr        go to state 50
    stringls        go to state 51
    if_exp          go to state 52
    chain_exp       go to state 53
    lambda_exp      go to state 54
    postfix_exp     go to state 55
    tcall_exp       go to state 56
    vcall_exp       go to state 57
    dot_name_exp    go to state 58
    dot_index_exp   go to state 59
    unary_exp       go to state 60
    unary_op        go to state 61
    binary_exp      go to state 62
    mul_binary_exp  go to state 63
    add_binary_exp  go to state 64
    cmp_binary_exp  go to state 65
    eq_binary_exp   go to state 66
    and_binary_exp  go to state 67
    xor_binary_exp  go to state 68
    or_binary_exp   go to state 69


State 232

  183 struct_exp_field: vid "=" expr •

    $default  reduce using rule 183 (struct_exp_field)


State 233

   92 chain_prefix: chain_prefix chain_prefix_stmt ";" •

    $default  reduce using rule 92 (chain_prefix)


State 234

   90 chain_exp: "{" chain_prefix expr "}" •

    $default  reduce using rule 90 (chain_exp)


State 235

  183 struct_exp_field: vid • "=" expr

    "="  shift, and go to state 157


State 236

  205 struct_exp_field_cl: struct_exp_field_cl "," struct_exp_field •

    $default  reduce using rule 205 (struct_exp_field_cl)


State 237

  104 dot_name_exp: postfix_exp "." "<TypeId>" "(" • expr_cl0 ")"

    $default  reduce using rule 56 (expr_cl0)

    expr_cl0  go to state 284


State 238

  175 varg: "out" expr •

    $default  reduce using rule 175 (varg)


State 239

  176 varg: "inout" expr •

    $default  reduce using rule 176 (varg)


State 240

  178 varg_cl: varg_cl "," • varg

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "not"                    shift, and go to state 27
    "out"                    shift, and go to state 169
    "inout"                  shift, and go to state 170
    "42"                     shift, and go to state 28
    "0x2a"                   shift, and go to state 29
    "4.2"                    shift, and go to state 30
    "\"dq-string-literal\""  shift, and go to state 31
    "'sq-string-literal'"    shift, and go to state 32
    "("                      shift, and go to state 33
    "{"                      shift, and go to state 34
    "*"                      shift, and go to state 35
    "+"                      shift, and go to state 36
    "-"                      shift, and go to state 37
    "^"                      shift, and go to state 38

    tid             go to state 39
    vid             go to state 40
    floatl          go to state 41
    mod_prefix      go to state 42
    expr            go to state 172
    bracketed_exp   go to state 44
    unit_exp        go to state 45
    paren_exp       go to state 46
    vtupleExpr      go to state 47
    vstructExpr     go to state 48
    primary_exp     go to state 49
    int_expr        go to state 50
    stringls        go to state 51
    if_exp          go to state 52
    chain_exp       go to state 53
    lambda_exp      go to state 54
    postfix_exp     go to state 55
    tcall_exp       go to state 56
    vcall_exp       go to state 57
    dot_name_exp    go to state 58
    dot_index_exp   go to state 59
    unary_exp       go to state 60
    unary_op        go to state 61
    binary_exp      go to state 62
    mul_binary_exp  go to state 63
    add_binary_exp  go to state 64
    cmp_binary_exp  go to state 65
    eq_binary_exp   go to state 66
    and_binary_exp  go to state 67
    xor_binary_exp  go to state 68
    or_binary_exp   go to state 69
    varg            go to state 285


State 241

  102 vcall_exp: postfix_exp "(" varg_cl ")" •

    $default  reduce using rule 102 (vcall_exp)


State 242

  162 fn_type_spec: "Fn" vpattern • primary_type_spec

    "<TypeId>"  shift, and go to state 10
    "Fn"        shift, and go to state 175
    "("         shift, and go to state 210

    tid                go to state 177
    mod_prefix         go to state 212
    primary_type_spec  go to state 286
    paren_type_spec    go to state 182
    tuple_type_spec    go to state 183
    mod_prefix_tid     go to state 184
    fn_type_spec       go to state 185


State 243

  148 type_spec_cl2: type_spec • "," type_spec
  158 paren_type_spec: "(" type_spec • ")"
  159 tuple_type_spec: "(" type_spec • "," ")"

    ","  shift, and go to state 287
    ")"  shift, and go to state 288


State 244

  149 type_spec_cl2: type_spec_cl2 • "," type_spec
  160 tuple_type_spec: "(" type_spec_cl2 • ")"

    ","  shift, and go to state 289
    ")"  shift, and go to state 290


State 245

  161 mod_prefix_tid: mod_prefix tid •

    $default  reduce using rule 161 (mod_prefix_tid)


State 246

  165 tcall_type_spec: postfix_type_spec "[" • targ_cl "]"

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "Fn"                     shift, and go to state 175
    "not"                    shift, and go to state 27
    "42"                     shift, and go to state 28
    "0x2a"                   shift, and go to state 29
    "4.2"                    shift, and go to state 30
    "\"dq-string-literal\""  shift, and go to state 31
    "'sq-string-literal'"    shift, and go to state 32
    "("                      shift, and go to state 176
    "{"                      shift, and go to state 34
    "*"                      shift, and go to state 35
    "+"                      shift, and go to state 36
    "-"                      shift, and go to state 37
    "^"                      shift, and go to state 38

    tid                go to state 177
    vid                go to state 40
    floatl             go to state 41
    mod_prefix         go to state 178
    expr               go to state 179
    bracketed_exp      go to state 44
    unit_exp           go to state 45
    paren_exp          go to state 46
    vtupleExpr         go to state 47
    vstructExpr        go to state 48
    primary_exp        go to state 49
    int_expr           go to state 50
    stringls           go to state 51
    if_exp             go to state 52
    chain_exp          go to state 53
    lambda_exp         go to state 54
    postfix_exp        go to state 55
    tcall_exp          go to state 56
    vcall_exp          go to state 57
    dot_name_exp       go to state 58
    dot_index_exp      go to state 59
    unary_exp          go to state 60
    unary_op           go to state 61
    binary_exp         go to state 62
    mul_binary_exp     go to state 63
    add_binary_exp     go to state 64
    cmp_binary_exp     go to state 65
    eq_binary_exp      go to state 66
    and_binary_exp     go to state 67
    xor_binary_exp     go to state 68
    or_binary_exp      go to state 69
    type_spec          go to state 180
    primary_type_spec  go to state 181
    paren_type_spec    go to state 182
    tuple_type_spec    go to state 183
    mod_prefix_tid     go to state 184
    fn_type_spec       go to state 185
    postfix_type_spec  go to state 186
    tcall_type_spec    go to state 187
    unary_type_spec    go to state 188
    targ               go to state 189
    targ_cl            go to state 291


State 247

  173 targ_cl: targ_cl "," • targ

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "Fn"                     shift, and go to state 175
    "not"                    shift, and go to state 27
    "42"                     shift, and go to state 28
    "0x2a"                   shift, and go to state 29
    "4.2"                    shift, and go to state 30
    "\"dq-string-literal\""  shift, and go to state 31
    "'sq-string-literal'"    shift, and go to state 32
    "("                      shift, and go to state 176
    "{"                      shift, and go to state 34
    "*"                      shift, and go to state 35
    "+"                      shift, and go to state 36
    "-"                      shift, and go to state 37
    "^"                      shift, and go to state 38

    tid                go to state 177
    vid                go to state 40
    floatl             go to state 41
    mod_prefix         go to state 178
    expr               go to state 179
    bracketed_exp      go to state 44
    unit_exp           go to state 45
    paren_exp          go to state 46
    vtupleExpr         go to state 47
    vstructExpr        go to state 48
    primary_exp        go to state 49
    int_expr           go to state 50
    stringls           go to state 51
    if_exp             go to state 52
    chain_exp          go to state 53
    lambda_exp         go to state 54
    postfix_exp        go to state 55
    tcall_exp          go to state 56
    vcall_exp          go to state 57
    dot_name_exp       go to state 58
    dot_index_exp      go to state 59
    unary_exp          go to state 60
    unary_op           go to state 61
    binary_exp         go to state 62
    mul_binary_exp     go to state 63
    add_binary_exp     go to state 64
    cmp_binary_exp     go to state 65
    eq_binary_exp      go to state 66
    and_binary_exp     go to state 67
    xor_binary_exp     go to state 68
    or_binary_exp      go to state 69
    type_spec          go to state 180
    primary_type_spec  go to state 181
    paren_type_spec    go to state 182
    tuple_type_spec    go to state 183
    mod_prefix_tid     go to state 184
    fn_type_spec       go to state 185
    postfix_type_spec  go to state 186
    tcall_type_spec    go to state 187
    unary_type_spec    go to state 188
    targ               go to state 292


State 248

  100 tcall_exp: postfix_exp "[" targ_cl "]" •

    $default  reduce using rule 100 (tcall_exp)


State 249

   10 sub_mod_stmt: "sub" "<TypeId>" "{" • mod_content "}"

    "<val_id>"  shift, and go to state 24
    "<TypeId>"  shift, and go to state 10
    "sub"       shift, and go to state 123

    sub_mod_stmt        go to state 124
    mod_content         go to state 293
    mod_content_stmt    go to state 126
    mod_val_stmt        go to state 127
    mod_type_stmt       go to state 128
    mod_enum_stmt       go to state 129
    mod_typeclass_stmt  go to state 130
    tid                 go to state 131
    vid                 go to state 132


State 250

   11 sub_mod_stmt: "sub" "<TypeId>" tpattern_seq • "{" mod_content "}"
  207 tpattern_seq: tpattern_seq • tpattern

    "["  shift, and go to state 202
    "{"  shift, and go to state 294
    "!"  shift, and go to state 204

    tpattern  go to state 268


State 251

   13 mod_content: mod_content mod_content_stmt ";" •

    $default  reduce using rule 13 (mod_content)


State 252

  190 tpattern_field: tid • class_spec

    "<TypeId>"  shift, and go to state 10

    tid                 go to state 295
    class_spec          go to state 296
    primary_class_spec  go to state 297
    postfix_class_spec  go to state 298


State 253

  189 tpattern_field: vid • type_spec

    "<TypeId>"  shift, and go to state 10
    "Fn"        shift, and go to state 175
    "("         shift, and go to state 210

    tid                go to state 177
    mod_prefix         go to state 212
    type_spec          go to state 299
    primary_type_spec  go to state 181
    paren_type_spec    go to state 182
    tuple_type_spec    go to state 183
    mod_prefix_tid     go to state 184
    fn_type_spec       go to state 185
    postfix_type_spec  go to state 186
    tcall_type_spec    go to state 187
    unary_type_spec    go to state 188


State 254

  202 tpattern_field_cl: tpattern_field •

    $default  reduce using rule 202 (tpattern_field_cl)


State 255

  196 tpattern: "[" tpattern_field_cl • "]"
  203 tpattern_field_cl: tpattern_field_cl • "," tpattern_field

    ","  shift, and go to state 300
    "]"  shift, and go to state 301


State 256

  169 struct_type_spec: "{" • struct_type_spec_field_cl "}"

    "<val_id>"  shift, and go to state 24

    vid                        go to state 302
    struct_type_spec_field     go to state 303
    struct_type_spec_field_cl  go to state 304


State 257

  167 long_type_spec: unary_type_spec •

    $default  reduce using rule 167 (long_type_spec)


State 258

   23 mod_type_stmt: tid "=" long_type_spec •

    $default  reduce using rule 23 (mod_type_stmt)


State 259

  168 long_type_spec: struct_type_spec •

    $default  reduce using rule 168 (long_type_spec)


State 260

  197 tpattern: "!" "[" • tpattern_field_cl "]"

    "<val_id>"  shift, and go to state 24
    "<TypeId>"  shift, and go to state 10

    tid                go to state 252
    vid                go to state 253
    tpattern_field     go to state 254
    tpattern_field_cl  go to state 305


State 261

   27 enum_field_pl: "|" unprefixed_enum_field_pl •
   29 unprefixed_enum_field_pl: unprefixed_enum_field_pl • "|" enum_field

    "|"  shift, and go to state 306

    $default  reduce using rule 27 (enum_field_pl)


State 262

   28 unprefixed_enum_field_pl: enum_field •

    $default  reduce using rule 28 (unprefixed_enum_field_pl)


State 263

   30 enum_field: tid •
   31           | tid • "(" ")"
   32           | tid • "(" type_spec_cl1 ")"

    "("  shift, and go to state 307

    $default  reduce using rule 30 (enum_field)


State 264

   33 mod_typeclass_stmt: tid ":-" "<" • tid class_spec ">" "{" type_query_exp_sl "}"

    "<TypeId>"  shift, and go to state 10

    tid  go to state 308


State 265

   24 mod_type_stmt: tid tpattern_seq "=" • long_type_spec

    "<TypeId>"  shift, and go to state 10
    "Fn"        shift, and go to state 175
    "("         shift, and go to state 210
    "{"         shift, and go to state 256

    tid                go to state 177
    mod_prefix         go to state 212
    primary_type_spec  go to state 181
    paren_type_spec    go to state 182
    tuple_type_spec    go to state 183
    mod_prefix_tid     go to state 184
    fn_type_spec       go to state 185
    postfix_type_spec  go to state 186
    tcall_type_spec    go to state 187
    unary_type_spec    go to state 257
    long_type_spec     go to state 309
    struct_type_spec   go to state 259


State 266

   34 mod_typeclass_stmt: tid tpattern_seq ":-" • "<" tid class_spec ">" "{" type_query_exp_sl "}"

    "<"  shift, and go to state 310


State 267

   26 mod_enum_stmt: tid tpattern_seq enum_field_pl •

    $default  reduce using rule 26 (mod_enum_stmt)


State 268

  207 tpattern_seq: tpattern_seq tpattern •

    $default  reduce using rule 207 (tpattern_seq)


State 269

   19 mod_val_stmt: vid "=" expr •

    $default  reduce using rule 19 (mod_val_stmt)


State 270

   21 mod_val_stmt: vid type_spec "from" • tid stringl

    "<TypeId>"  shift, and go to state 10

    tid  go to state 311


State 271

   20 mod_val_stmt: vid tpattern_seq "=" • expr

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "not"                    shift, and go to state 27
    "42"                     shift, and go to state 28
    "0x2a"                   shift, and go to state 29
    "4.2"                    shift, and go to state 30
    "\"dq-string-literal\""  shift, and go to state 31
    "'sq-string-literal'"    shift, and go to state 32
    "("                      shift, and go to state 33
    "{"                      shift, and go to state 34
    "*"                      shift, and go to state 35
    "+"                      shift, and go to state 36
    "-"                      shift, and go to state 37
    "^"                      shift, and go to state 38

    tid             go to state 39
    vid             go to state 40
    floatl          go to state 41
    mod_prefix      go to state 42
    expr            go to state 312
    bracketed_exp   go to state 44
    unit_exp        go to state 45
    paren_exp       go to state 46
    vtupleExpr      go to state 47
    vstructExpr     go to state 48
    primary_exp     go to state 49
    int_expr        go to state 50
    stringls        go to state 51
    if_exp          go to state 52
    chain_exp       go to state 53
    lambda_exp      go to state 54
    postfix_exp     go to state 55
    tcall_exp       go to state 56
    vcall_exp       go to state 57
    dot_name_exp    go to state 58
    dot_index_exp   go to state 59
    unary_exp       go to state 60
    unary_op        go to state 61
    binary_exp      go to state 62
    mul_binary_exp  go to state 63
    add_binary_exp  go to state 64
    cmp_binary_exp  go to state 65
    eq_binary_exp   go to state 66
    and_binary_exp  go to state 67
    xor_binary_exp  go to state 68
    or_binary_exp   go to state 69


State 272

   22 mod_val_stmt: vid tpattern_seq type_spec • "from" tid stringl

    "from"  shift, and go to state 313


State 273

   87 if_exp: "if" bracketed_exp "then" bracketed_exp "else" • primary_exp

    "<val_id>"               shift, and go to state 24
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "42"                     shift, and go to state 28
    "0x2a"                   shift, and go to state 29
    "4.2"                    shift, and go to state 30
    "\"dq-string-literal\""  shift, and go to state 31
    "'sq-string-literal'"    shift, and go to state 32
    "("                      shift, and go to state 33
    "{"                      shift, and go to state 34

    vid            go to state 40
    floatl         go to state 41
    bracketed_exp  go to state 44
    unit_exp       go to state 45
    paren_exp      go to state 46
    vtupleExpr     go to state 47
    vstructExpr    go to state 48
    primary_exp    go to state 314
    int_expr       go to state 50
    stringls       go to state 51
    if_exp         go to state 52
    chain_exp      go to state 53
    lambda_exp     go to state 54


State 274

  185 vpattern_field: "out" vid type_spec •

    $default  reduce using rule 185 (vpattern_field)


State 275

  186 vpattern_field: "inout" vid type_spec •

    $default  reduce using rule 186 (vpattern_field)


State 276

  199 vpattern_field_cl: vpattern_field_cl "," vpattern_field •

    $default  reduce using rule 199 (vpattern_field_cl)


State 277

   94 lambda_exp: "fn" vpattern "->" type_spec bracketed_exp •

    $default  reduce using rule 94 (lambda_exp)


State 278

  201 lpattern_field_cl: lpattern_field_cl "," • lpattern_field

    "<val_id>"  shift, and go to state 24

    vid             go to state 148
    lpattern_field  go to state 315


State 279

  191 destructured_lpattern: "(" lpattern_field_cl ")" •

    $default  reduce using rule 191 (destructured_lpattern)


State 280

   42 const_stmt: "const" lpattern "=" expr •

    $default  reduce using rule 42 (const_stmt)


State 281

   43 val_stmt: "val" lpattern "=" expr •

    $default  reduce using rule 43 (val_stmt)


State 282

   44 var_stmt: "var" lpattern "=" expr •

    $default  reduce using rule 44 (var_stmt)


State 283

   45 set_stmt: "set" expr "=" expr •

    $default  reduce using rule 45 (set_stmt)


State 284

   57 expr_cl0: expr_cl0 • "," expr
  104 dot_name_exp: postfix_exp "." "<TypeId>" "(" expr_cl0 • ")"

    ","  shift, and go to state 316
    ")"  shift, and go to state 317


State 285

  178 varg_cl: varg_cl "," varg •

    $default  reduce using rule 178 (varg_cl)


State 286

  162 fn_type_spec: "Fn" vpattern primary_type_spec •

    $default  reduce using rule 162 (fn_type_spec)


State 287

  148 type_spec_cl2: type_spec "," • type_spec
  159 tuple_type_spec: "(" type_spec "," • ")"

    "<TypeId>"  shift, and go to state 10
    "Fn"        shift, and go to state 175
    "("         shift, and go to state 210
    ")"         shift, and go to state 318

    tid                go to state 177
    mod_prefix         go to state 212
    type_spec          go to state 319
    primary_type_spec  go to state 181
    paren_type_spec    go to state 182
    tuple_type_spec    go to state 183
    mod_prefix_tid     go to state 184
    fn_type_spec       go to state 185
    postfix_type_spec  go to state 186
    tcall_type_spec    go to state 187
    unary_type_spec    go to state 188


State 288

  158 paren_type_spec: "(" type_spec ")" •

    $default  reduce using rule 158 (paren_type_spec)


State 289

  149 type_spec_cl2: type_spec_cl2 "," • type_spec

    "<TypeId>"  shift, and go to state 10
    "Fn"        shift, and go to state 175
    "("         shift, and go to state 210

    tid                go to state 177
    mod_prefix         go to state 212
    type_spec          go to state 320
    primary_type_spec  go to state 181
    paren_type_spec    go to state 182
    tuple_type_spec    go to state 183
    mod_prefix_tid     go to state 184
    fn_type_spec       go to state 185
    postfix_type_spec  go to state 186
    tcall_type_spec    go to state 187
    unary_type_spec    go to state 188


State 290

  160 tuple_type_spec: "(" type_spec_cl2 ")" •

    $default  reduce using rule 160 (tuple_type_spec)


State 291

  165 tcall_type_spec: postfix_type_spec "[" targ_cl • "]"
  173 targ_cl: targ_cl • "," targ

    ","  shift, and go to state 247
    "]"  shift, and go to state 321


State 292

  173 targ_cl: targ_cl "," targ •

    $default  reduce using rule 173 (targ_cl)


State 293

   10 sub_mod_stmt: "sub" "<TypeId>" "{" mod_content • "}"
   13 mod_content: mod_content • mod_content_stmt ";"

    "<val_id>"  shift, and go to state 24
    "<TypeId>"  shift, and go to state 10
    "sub"       shift, and go to state 123
    "}"         shift, and go to state 322

    sub_mod_stmt        go to state 124
    mod_content_stmt    go to state 200
    mod_val_stmt        go to state 127
    mod_type_stmt       go to state 128
    mod_enum_stmt       go to state 129
    mod_typeclass_stmt  go to state 130
    tid                 go to state 131
    vid                 go to state 132


State 294

   11 sub_mod_stmt: "sub" "<TypeId>" tpattern_seq "{" • mod_content "}"

    "<val_id>"  shift, and go to state 24
    "<TypeId>"  shift, and go to state 10
    "sub"       shift, and go to state 123

    sub_mod_stmt        go to state 124
    mod_content         go to state 323
    mod_content_stmt    go to state 126
    mod_val_stmt        go to state 127
    mod_type_stmt       go to state 128
    mod_enum_stmt       go to state 129
    mod_typeclass_stmt  go to state 130
    tid                 go to state 131
    vid                 go to state 132


State 295

  180 primary_class_spec: tid •

    $default  reduce using rule 180 (primary_class_spec)


State 296

  190 tpattern_field: tid class_spec •

    $default  reduce using rule 190 (tpattern_field)


State 297

  181 postfix_class_spec: primary_class_spec •

    $default  reduce using rule 181 (postfix_class_spec)


State 298

  179 class_spec: postfix_class_spec •
  182 postfix_class_spec: postfix_class_spec • "[" targ_cl "]"

    "["  shift, and go to state 324

    $default  reduce using rule 179 (class_spec)


State 299

  189 tpattern_field: vid type_spec •

    $default  reduce using rule 189 (tpattern_field)


State 300

  203 tpattern_field_cl: tpattern_field_cl "," • tpattern_field

    "<val_id>"  shift, and go to state 24
    "<TypeId>"  shift, and go to state 10

    tid             go to state 252
    vid             go to state 253
    tpattern_field  go to state 325


State 301

  196 tpattern: "[" tpattern_field_cl "]" •

    $default  reduce using rule 196 (tpattern)


State 302

  150 struct_type_spec_field: vid • type_spec

    "<TypeId>"  shift, and go to state 10
    "Fn"        shift, and go to state 175
    "("         shift, and go to state 210

    tid                go to state 177
    mod_prefix         go to state 212
    type_spec          go to state 326
    primary_type_spec  go to state 181
    paren_type_spec    go to state 182
    tuple_type_spec    go to state 183
    mod_prefix_tid     go to state 184
    fn_type_spec       go to state 185
    postfix_type_spec  go to state 186
    tcall_type_spec    go to state 187
    unary_type_spec    go to state 188


State 303

  151 struct_type_spec_field_cl: struct_type_spec_field •

    $default  reduce using rule 151 (struct_type_spec_field_cl)


State 304

  152 struct_type_spec_field_cl: struct_type_spec_field_cl • "," struct_type_spec_field
  169 struct_type_spec: "{" struct_type_spec_field_cl • "}"

    ","  shift, and go to state 327
    "}"  shift, and go to state 328


State 305

  197 tpattern: "!" "[" tpattern_field_cl • "]"
  203 tpattern_field_cl: tpattern_field_cl • "," tpattern_field

    ","  shift, and go to state 300
    "]"  shift, and go to state 329


State 306

   29 unprefixed_enum_field_pl: unprefixed_enum_field_pl "|" • enum_field

    "<TypeId>"  shift, and go to state 10

    enum_field  go to state 330
    tid         go to state 263


State 307

   31 enum_field: tid "(" • ")"
   32           | tid "(" • type_spec_cl1 ")"

    "<TypeId>"  shift, and go to state 10
    "Fn"        shift, and go to state 175
    "("         shift, and go to state 210
    ")"         shift, and go to state 331

    tid                go to state 177
    mod_prefix         go to state 212
    type_spec          go to state 332
    type_spec_cl1      go to state 333
    primary_type_spec  go to state 181
    paren_type_spec    go to state 182
    tuple_type_spec    go to state 183
    mod_prefix_tid     go to state 184
    fn_type_spec       go to state 185
    postfix_type_spec  go to state 186
    tcall_type_spec    go to state 187
    unary_type_spec    go to state 188


State 308

   33 mod_typeclass_stmt: tid ":-" "<" tid • class_spec ">" "{" type_query_exp_sl "}"

    "<TypeId>"  shift, and go to state 10

    tid                 go to state 295
    class_spec          go to state 334
    primary_class_spec  go to state 297
    postfix_class_spec  go to state 298


State 309

   24 mod_type_stmt: tid tpattern_seq "=" long_type_spec •

    $default  reduce using rule 24 (mod_type_stmt)


State 310

   34 mod_typeclass_stmt: tid tpattern_seq ":-" "<" • tid class_spec ">" "{" type_query_exp_sl "}"

    "<TypeId>"  shift, and go to state 10

    tid  go to state 335


State 311

   21 mod_val_stmt: vid type_spec "from" tid • stringl

    "\"dq-string-literal\""  shift, and go to state 21
    "'sq-string-literal'"    shift, and go to state 22

    stringl  go to state 336


State 312

   20 mod_val_stmt: vid tpattern_seq "=" expr •

    $default  reduce using rule 20 (mod_val_stmt)


State 313

   22 mod_val_stmt: vid tpattern_seq type_spec "from" • tid stringl

    "<TypeId>"  shift, and go to state 10

    tid  go to state 337


State 314

   87 if_exp: "if" bracketed_exp "then" bracketed_exp "else" primary_exp •

    $default  reduce using rule 87 (if_exp)


State 315

  201 lpattern_field_cl: lpattern_field_cl "," lpattern_field •

    $default  reduce using rule 201 (lpattern_field_cl)


State 316

   57 expr_cl0: expr_cl0 "," • expr

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "not"                    shift, and go to state 27
    "42"                     shift, and go to state 28
    "0x2a"                   shift, and go to state 29
    "4.2"                    shift, and go to state 30
    "\"dq-string-literal\""  shift, and go to state 31
    "'sq-string-literal'"    shift, and go to state 32
    "("                      shift, and go to state 33
    "{"                      shift, and go to state 34
    "*"                      shift, and go to state 35
    "+"                      shift, and go to state 36
    "-"                      shift, and go to state 37
    "^"                      shift, and go to state 38

    tid             go to state 39
    vid             go to state 40
    floatl          go to state 41
    mod_prefix      go to state 42
    expr            go to state 338
    bracketed_exp   go to state 44
    unit_exp        go to state 45
    paren_exp       go to state 46
    vtupleExpr      go to state 47
    vstructExpr     go to state 48
    primary_exp     go to state 49
    int_expr        go to state 50
    stringls        go to state 51
    if_exp          go to state 52
    chain_exp       go to state 53
    lambda_exp      go to state 54
    postfix_exp     go to state 55
    tcall_exp       go to state 56
    vcall_exp       go to state 57
    dot_name_exp    go to state 58
    dot_index_exp   go to state 59
    unary_exp       go to state 60
    unary_op        go to state 61
    binary_exp      go to state 62
    mul_binary_exp  go to state 63
    add_binary_exp  go to state 64
    cmp_binary_exp  go to state 65
    eq_binary_exp   go to state 66
    and_binary_exp  go to state 67
    xor_binary_exp  go to state 68
    or_binary_exp   go to state 69


State 317

  104 dot_name_exp: postfix_exp "." "<TypeId>" "(" expr_cl0 ")" •

    $default  reduce using rule 104 (dot_name_exp)


State 318

  159 tuple_type_spec: "(" type_spec "," ")" •

    $default  reduce using rule 159 (tuple_type_spec)


State 319

  148 type_spec_cl2: type_spec "," type_spec •

    $default  reduce using rule 148 (type_spec_cl2)


State 320

  149 type_spec_cl2: type_spec_cl2 "," type_spec •

    $default  reduce using rule 149 (type_spec_cl2)


State 321

  165 tcall_type_spec: postfix_type_spec "[" targ_cl "]" •

    $default  reduce using rule 165 (tcall_type_spec)


State 322

   10 sub_mod_stmt: "sub" "<TypeId>" "{" mod_content "}" •

    $default  reduce using rule 10 (sub_mod_stmt)


State 323

   11 sub_mod_stmt: "sub" "<TypeId>" tpattern_seq "{" mod_content • "}"
   13 mod_content: mod_content • mod_content_stmt ";"

    "<val_id>"  shift, and go to state 24
    "<TypeId>"  shift, and go to state 10
    "sub"       shift, and go to state 123
    "}"         shift, and go to state 339

    sub_mod_stmt        go to state 124
    mod_content_stmt    go to state 200
    mod_val_stmt        go to state 127
    mod_type_stmt       go to state 128
    mod_enum_stmt       go to state 129
    mod_typeclass_stmt  go to state 130
    tid                 go to state 131
    vid                 go to state 132


State 324

  182 postfix_class_spec: postfix_class_spec "[" • targ_cl "]"

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "Fn"                     shift, and go to state 175
    "not"                    shift, and go to state 27
    "42"                     shift, and go to state 28
    "0x2a"                   shift, and go to state 29
    "4.2"                    shift, and go to state 30
    "\"dq-string-literal\""  shift, and go to state 31
    "'sq-string-literal'"    shift, and go to state 32
    "("                      shift, and go to state 176
    "{"                      shift, and go to state 34
    "*"                      shift, and go to state 35
    "+"                      shift, and go to state 36
    "-"                      shift, and go to state 37
    "^"                      shift, and go to state 38

    tid                go to state 177
    vid                go to state 40
    floatl             go to state 41
    mod_prefix         go to state 178
    expr               go to state 179
    bracketed_exp      go to state 44
    unit_exp           go to state 45
    paren_exp          go to state 46
    vtupleExpr         go to state 47
    vstructExpr        go to state 48
    primary_exp        go to state 49
    int_expr           go to state 50
    stringls           go to state 51
    if_exp             go to state 52
    chain_exp          go to state 53
    lambda_exp         go to state 54
    postfix_exp        go to state 55
    tcall_exp          go to state 56
    vcall_exp          go to state 57
    dot_name_exp       go to state 58
    dot_index_exp      go to state 59
    unary_exp          go to state 60
    unary_op           go to state 61
    binary_exp         go to state 62
    mul_binary_exp     go to state 63
    add_binary_exp     go to state 64
    cmp_binary_exp     go to state 65
    eq_binary_exp      go to state 66
    and_binary_exp     go to state 67
    xor_binary_exp     go to state 68
    or_binary_exp      go to state 69
    type_spec          go to state 180
    primary_type_spec  go to state 181
    paren_type_spec    go to state 182
    tuple_type_spec    go to state 183
    mod_prefix_tid     go to state 184
    fn_type_spec       go to state 185
    postfix_type_spec  go to state 186
    tcall_type_spec    go to state 187
    unary_type_spec    go to state 188
    targ               go to state 189
    targ_cl            go to state 340


State 325

  203 tpattern_field_cl: tpattern_field_cl "," tpattern_field •

    $default  reduce using rule 203 (tpattern_field_cl)


State 326

  150 struct_type_spec_field: vid type_spec •

    $default  reduce using rule 150 (struct_type_spec_field)


State 327

  152 struct_type_spec_field_cl: struct_type_spec_field_cl "," • struct_type_spec_field

    "<val_id>"  shift, and go to state 24

    vid                     go to state 302
    struct_type_spec_field  go to state 341


State 328

  169 struct_type_spec: "{" struct_type_spec_field_cl "}" •

    $default  reduce using rule 169 (struct_type_spec)


State 329

  197 tpattern: "!" "[" tpattern_field_cl "]" •

    $default  reduce using rule 197 (tpattern)


State 330

   29 unprefixed_enum_field_pl: unprefixed_enum_field_pl "|" enum_field •

    $default  reduce using rule 29 (unprefixed_enum_field_pl)


State 331

   31 enum_field: tid "(" ")" •

    $default  reduce using rule 31 (enum_field)


State 332

  146 type_spec_cl1: type_spec •

    $default  reduce using rule 146 (type_spec_cl1)


State 333

   32 enum_field: tid "(" type_spec_cl1 • ")"
  147 type_spec_cl1: type_spec_cl1 • "," type_spec

    ","  shift, and go to state 342
    ")"  shift, and go to state 343


State 334

   33 mod_typeclass_stmt: tid ":-" "<" tid class_spec • ">" "{" type_query_exp_sl "}"

    ">"  shift, and go to state 344


State 335

   34 mod_typeclass_stmt: tid tpattern_seq ":-" "<" tid • class_spec ">" "{" type_query_exp_sl "}"

    "<TypeId>"  shift, and go to state 10

    tid                 go to state 295
    class_spec          go to state 345
    primary_class_spec  go to state 297
    postfix_class_spec  go to state 298


State 336

   21 mod_val_stmt: vid type_spec "from" tid stringl •

    $default  reduce using rule 21 (mod_val_stmt)


State 337

   22 mod_val_stmt: vid tpattern_seq type_spec "from" tid • stringl

    "\"dq-string-literal\""  shift, and go to state 21
    "'sq-string-literal'"    shift, and go to state 22

    stringl  go to state 346


State 338

   57 expr_cl0: expr_cl0 "," expr •

    $default  reduce using rule 57 (expr_cl0)


State 339

   11 sub_mod_stmt: "sub" "<TypeId>" tpattern_seq "{" mod_content "}" •

    $default  reduce using rule 11 (sub_mod_stmt)


State 340

  173 targ_cl: targ_cl • "," targ
  182 postfix_class_spec: postfix_class_spec "[" targ_cl • "]"

    ","  shift, and go to state 247
    "]"  shift, and go to state 347


State 341

  152 struct_type_spec_field_cl: struct_type_spec_field_cl "," struct_type_spec_field •

    $default  reduce using rule 152 (struct_type_spec_field_cl)


State 342

  147 type_spec_cl1: type_spec_cl1 "," • type_spec

    "<TypeId>"  shift, and go to state 10
    "Fn"        shift, and go to state 175
    "("         shift, and go to state 210

    tid                go to state 177
    mod_prefix         go to state 212
    type_spec          go to state 348
    primary_type_spec  go to state 181
    paren_type_spec    go to state 182
    tuple_type_spec    go to state 183
    mod_prefix_tid     go to state 184
    fn_type_spec       go to state 185
    postfix_type_spec  go to state 186
    tcall_type_spec    go to state 187
    unary_type_spec    go to state 188


State 343

   32 enum_field: tid "(" type_spec_cl1 ")" •

    $default  reduce using rule 32 (enum_field)


State 344

   33 mod_typeclass_stmt: tid ":-" "<" tid class_spec ">" • "{" type_query_exp_sl "}"

    "{"  shift, and go to state 349


State 345

   34 mod_typeclass_stmt: tid tpattern_seq ":-" "<" tid class_spec • ">" "{" type_query_exp_sl "}"

    ">"  shift, and go to state 350


State 346

   22 mod_val_stmt: vid tpattern_seq type_spec "from" tid stringl •

    $default  reduce using rule 22 (mod_val_stmt)


State 347

  182 postfix_class_spec: postfix_class_spec "[" targ_cl "]" •

    $default  reduce using rule 182 (postfix_class_spec)


State 348

  147 type_spec_cl1: type_spec_cl1 "," type_spec •

    $default  reduce using rule 147 (type_spec_cl1)


State 349

   33 mod_typeclass_stmt: tid ":-" "<" tid class_spec ">" "{" • type_query_exp_sl "}"

    "<TypeId>"  shift, and go to state 10
    "Fn"        shift, and go to state 175
    "("         shift, and go to state 210

    tid                go to state 177
    mod_prefix         go to state 212
    type_query_exp_sl  go to state 351
    type_query_exp     go to state 352
    type_spec          go to state 353
    primary_type_spec  go to state 181
    paren_type_spec    go to state 182
    tuple_type_spec    go to state 183
    mod_prefix_tid     go to state 184
    fn_type_spec       go to state 185
    postfix_type_spec  go to state 186
    tcall_type_spec    go to state 187
    unary_type_spec    go to state 188


State 350

   34 mod_typeclass_stmt: tid tpattern_seq ":-" "<" tid class_spec ">" • "{" type_query_exp_sl "}"

    "{"  shift, and go to state 354


State 351

   33 mod_typeclass_stmt: tid ":-" "<" tid class_spec ">" "{" type_query_exp_sl • "}"
   61 type_query_exp_sl: type_query_exp_sl • type_query_exp ";"

    "<TypeId>"  shift, and go to state 10
    "Fn"        shift, and go to state 175
    "("         shift, and go to state 210
    "}"         shift, and go to state 355

    tid                go to state 177
    mod_prefix         go to state 212
    type_query_exp     go to state 356
    type_spec          go to state 353
    primary_type_spec  go to state 181
    paren_type_spec    go to state 182
    tuple_type_spec    go to state 183
    mod_prefix_tid     go to state 184
    fn_type_spec       go to state 185
    postfix_type_spec  go to state 186
    tcall_type_spec    go to state 187
    unary_type_spec    go to state 188


State 352

   60 type_query_exp_sl: type_query_exp • ";"

    ";"  shift, and go to state 357


State 353

  141 type_query_exp: type_spec • type_query_op long_type_spec

    "::"  shift, and go to state 358
    ":<"  shift, and go to state 359
    ">:"  shift, and go to state 360

    type_query_op  go to state 361


State 354

   34 mod_typeclass_stmt: tid tpattern_seq ":-" "<" tid class_spec ">" "{" • type_query_exp_sl "}"

    "<TypeId>"  shift, and go to state 10
    "Fn"        shift, and go to state 175
    "("         shift, and go to state 210

    tid                go to state 177
    mod_prefix         go to state 212
    type_query_exp_sl  go to state 362
    type_query_exp     go to state 352
    type_spec          go to state 353
    primary_type_spec  go to state 181
    paren_type_spec    go to state 182
    tuple_type_spec    go to state 183
    mod_prefix_tid     go to state 184
    fn_type_spec       go to state 185
    postfix_type_spec  go to state 186
    tcall_type_spec    go to state 187
    unary_type_spec    go to state 188


State 355

   33 mod_typeclass_stmt: tid ":-" "<" tid class_spec ">" "{" type_query_exp_sl "}" •

    $default  reduce using rule 33 (mod_typeclass_stmt)


State 356

   61 type_query_exp_sl: type_query_exp_sl type_query_exp • ";"

    ";"  shift, and go to state 363


State 357

   60 type_query_exp_sl: type_query_exp ";" •

    $default  reduce using rule 60 (type_query_exp_sl)


State 358

  144 type_query_op: "::" •

    $default  reduce using rule 144 (type_query_op)


State 359

  142 type_query_op: ":<" •

    $default  reduce using rule 142 (type_query_op)


State 360

  143 type_query_op: ">:" •

    $default  reduce using rule 143 (type_query_op)


State 361

  141 type_query_exp: type_spec type_query_op • long_type_spec

    "<TypeId>"  shift, and go to state 10
    "Fn"        shift, and go to state 175
    "("         shift, and go to state 210
    "{"         shift, and go to state 256

    tid                go to state 177
    mod_prefix         go to state 212
    primary_type_spec  go to state 181
    paren_type_spec    go to state 182
    tuple_type_spec    go to state 183
    mod_prefix_tid     go to state 184
    fn_type_spec       go to state 185
    postfix_type_spec  go to state 186
    tcall_type_spec    go to state 187
    unary_type_spec    go to state 257
    long_type_spec     go to state 364
    struct_type_spec   go to state 259


State 362

   34 mod_typeclass_stmt: tid tpattern_seq ":-" "<" tid class_spec ">" "{" type_query_exp_sl • "}"
   61 type_query_exp_sl: type_query_exp_sl • type_query_exp ";"

    "<TypeId>"  shift, and go to state 10
    "Fn"        shift, and go to state 175
    "("         shift, and go to state 210
    "}"         shift, and go to state 365

    tid                go to state 177
    mod_prefix         go to state 212
    type_query_exp     go to state 356
    type_spec          go to state 353
    primary_type_spec  go to state 181
    paren_type_spec    go to state 182
    tuple_type_spec    go to state 183
    mod_prefix_tid     go to state 184
    fn_type_spec       go to state 185
    postfix_type_spec  go to state 186
    tcall_type_spec    go to state 187
    unary_type_spec    go to state 188


State 363

   61 type_query_exp_sl: type_query_exp_sl type_query_exp ";" •

    $default  reduce using rule 61 (type_query_exp_sl)


State 364

  141 type_query_exp: type_spec type_query_op long_type_spec •

    $default  reduce using rule 141 (type_query_exp)


State 365

   34 mod_typeclass_stmt: tid tpattern_seq ":-" "<" tid class_spec ">" "{" type_query_exp_sl "}" •

    $default  reduce using rule 34 (mod_typeclass_stmt)
