Terminals unused in grammar

    "<__42__>"
    "match"
    "with"
    ":"
    "::"
    "EOS"
    "<null>"


State 211 conflicts: 1 shift/reduce


Grammar

    0 $accept: script $end

    1 script: scriptContent

    2 scriptContent: scriptContentStmt ";"
    3              | scriptContent scriptContentStmt ";"

    4 scriptContentStmt: mod_stmt

    5 mod_stmt: "mod" "<val_id>" "{" moduleContent "}"

    6 moduleContent: moduleContentStmt ";"
    7              | moduleContent moduleContentStmt ";"

    8 chainPrefixStmt: constStmt
    9                | letStmt
   10                | varStmt
   11                | setStmt
   12                | discardStmt

   13 constStmt: "const" lpattern_naked "=" expr

   14 letStmt: "let" lpattern_naked "=" expr

   15 varStmt: "var" lpattern_naked "=" expr

   16 setStmt: "set" expr "=" expr

   17 discardStmt: expr

   18 moduleContentStmt: fn_stmt
   19                  | type_stmt
   20                  | enum_stmt
   21                  | typeclass_stmt
   22                  | importStmt
   23                  | mod_stmt
   24                  | using_stmt

   25 fn_stmt: "fn" vid vpattern "->" typespec "=" parenExpr
   26        | "fn" vid tpattern_seq vpattern "->" typespec "=" parenExpr
   27        | "fn" vid vpattern "=" parenExpr
   28        | "fn" vid tpattern_seq vpattern "=" parenExpr

   29 type_stmt: "type" tid "=" long_typespec
   30          | "type" tid tpattern_seq "=" long_typespec

   31 enum_stmt: "enum" tid enum_field_pl

   32 enum_field_pl: "|" unprefixed_enum_field_pl
   33              | unprefixed_enum_field_pl

   34 unprefixed_enum_field_pl: enum_field
   35                         | unprefixed_enum_field_pl "|" enum_field

   36 enum_field: tid
   37           | tid "(" ")"
   38           | tid "(" typespec_cl1 ")"

   39 typeclass_stmt: "typeclass" tid "<" tid typespec ">" "=" "{" expr_sl "}"
   40               | "typeclass" tid "<" tid typespec ">" tpattern_seq "=" "{" expr_sl "}"

   41 using_stmt: "using" parenExpr

   42 importStmt: "import" vid "from" expr "type" expr

   43 tid: "<TypeId>"

   44 vid: "<val_id>"

   45 floatl: "4.2"

   46 stringl: "'sq-string-literal'"
   47        | "\"dq-string-literal\""

   48 expr: binaryExpr

   49 expr_cl1: expr
   50         | expr_cl1 "," expr

   51 expr_cl2: expr "," expr
   52         | expr_cl2 "," expr

   53 expr_sl: expr ";"
   54        | expr_sl expr ";"

   55 parenExpr: unitExpr
   56          | vparenExpr
   57          | vtupleExpr
   58          | vstructExpr
   59          | chainExpr

   60 unitExpr: "(" ")"
   61         | "{" "}"

   62 primaryExpr: parenExpr
   63            | vid
   64            | int_expr
   65            | floatl
   66            | stringls
   67            | ifThenElseExpr
   68            | vlambdaExpr

   69 int_expr: "42"
   70         | "0x2a"

   71 stringls: stringl
   72         | stringls stringl

   73 vparenExpr: "(" expr ")"

   74 vtupleExpr: "(" expr "," ")"
   75           | "(" expr_cl2 ")"

   76 vstructExpr: "{" vstructExprField_cl "}"

   77 ifThenElseExpr: "if" parenExpr "then" parenExpr
   78               | "if" parenExpr "then" parenExpr "else" primaryExpr

   79 chainExpr: "{" expr "}"
   80          | "{" chainPrefix "}"
   81          | "{" chainPrefix expr "}"

   82 chainPrefix: chainPrefixStmt ";"
   83            | chainPrefix chainPrefixStmt ";"

   84 vlambdaExpr: "fn" lpattern "=" parenExpr

   85 postfixExpr: primaryExpr
   86            | vtcallExpr
   87            | vvcallExpr
   88            | dotNmExpr
   89            | dotIxExpr

   90 vtcallExpr: postfixExpr "[" vtarg_cl "]"

   91 vvcallExpr: postfixExpr "(" ")"
   92           | postfixExpr "(" expr_cl1 ")"

   93 dotNmExpr: postfixExpr "." "<val_id>"
   94          | postfixExpr "." "<TypeId>"

   95 dotIxExpr: postfixExpr "." int_expr
   96          | postfixExpr "." "(" expr ")"

   97 unaryExpr: postfixExpr
   98          | unaryOp unaryExpr

   99 unaryOp: "+"
  100        | "-"
  101        | "*"
  102        | "^"
  103        | "not"

  104 binaryExpr: orBinaryExpr

  105 mulBinaryOp: "*"
  106            | "/"
  107            | "%"

  108 mulBinaryExpr: unaryExpr
  109              | mulBinaryExpr mulBinaryOp unaryExpr

  110 addBinaryOp: "+"
  111            | "-"

  112 addBinaryExpr: mulBinaryExpr
  113              | addBinaryExpr addBinaryOp mulBinaryExpr

  114 cmpBinaryOp: "<"
  115            | "<="
  116            | ">"
  117            | ">="

  118 cmpBinaryExpr: addBinaryExpr
  119              | cmpBinaryExpr cmpBinaryOp addBinaryExpr

  120 eqBinaryOp: "=="
  121           | "!="

  122 eqBinaryExpr: cmpBinaryExpr
  123             | eqBinaryExpr eqBinaryOp cmpBinaryExpr

  124 andBinaryExpr: eqBinaryExpr
  125              | andBinaryExpr "and" eqBinaryExpr

  126 xorBinaryExpr: andBinaryExpr
  127              | xorBinaryExpr "xor" andBinaryExpr

  128 orBinaryExpr: xorBinaryExpr
  129             | orBinaryExpr "or" xorBinaryExpr

  130 typespec: unaryTypespec

  131 typespec_cl1: typespec
  132             | typespec_cl1 "," typespec

  133 typespec_cl2: typespec "," typespec
  134             | typespec_cl2 "," typespec

  135 structTypespecField: vid typespec

  136 structTypespecField_cl: structTypespecField
  137                       | structTypespecField_cl "," structTypespecField

  138 primaryTypespec: tid
  139                | tupleTypespec
  140                | mod_prefix_tid

  141 tupleTypespec: "(" typespec "," ")"
  142              | "(" typespec_cl2 ")"

  143 mod_prefix_tid: mod_prefix tid

  144 mod_prefix: vid "."
  145           | mod_prefix vid "."

  146 postfixTypespec: primaryTypespec
  147                | ttcall
  148                | tdot

  149 ttcall: postfixTypespec "[" ttarg_cl "]"

  150 tdot: postfixTypespec "." "<val_id>"

  151 unaryTypespec: postfixTypespec
  152              | "&" unaryTypespec

  153 long_typespec: unaryTypespec
  154              | structTypespec

  155 structTypespec: "{" structTypespecField_cl "}"

  156 ttarg: typespec
  157      | expr

  158 ttarg_cl: ttarg
  159         | ttarg_cl "," ttarg

  160 vtarg: typespec
  161      | expr

  162 vtarg_cl: vtarg
  163         | vtarg_cl "," vtarg

  164 vstructExprField: vid "=" expr

  165 vpatternField: vid typespec

  166 lpatternField: vid typespec
  167              | vid

  168 tpatternField: vid typespec
  169              | tid typespec

  170 lpattern: "(" lpatternField_cl ")"
  171         | "(" ")"

  172 lpattern_naked: lpatternField
  173               | lpattern

  174 vpattern: "(" vpatternField_cl ")"
  175         | "(" ")"

  176 tpattern: "[" tpatternField_cl "]"
  177         | "!" "[" tpatternField_cl "]"

  178 vpatternField_cl: vpatternField
  179                 | vpatternField_cl "," vpatternField

  180 lpatternField_cl: lpatternField
  181                 | lpatternField_cl "," lpatternField

  182 tpatternField_cl: tpatternField
  183                 | tpatternField_cl "," tpatternField

  184 vstructExprField_cl: vstructExprField
  185                    | vstructExprField_cl "," vstructExprField

  186 tpattern_seq: tpattern
  187             | tpattern_seq tpattern


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    "<val_id>" <pdm::parser::TokenInfo> (258) 5 44 93 150
    "<TypeId>" <pdm::parser::TokenInfo> (259) 43 94
    "<__42__>" <pdm::parser::TokenInfo> (260)
    "using" (261) 41
    "mod" (262) 5
    "if" (263) 77 78
    "then" (264) 77 78
    "else" (265) 78
    "match" (266)
    "with" (267)
    "import" (268) 42
    "from" (269) 42
    "const" (270) 13
    "let" (271) 14
    "var" (272) 15
    "set" (273) 16
    "fn" (274) 25 26 27 28 84
    "type" (275) 29 30 42
    "enum" (276) 31
    "and" (277) 125
    "xor" (278) 127
    "or" (279) 129
    "not" (280) 103
    "typeclass" (281) 39 40
    "42" <TokenInfo> (282) 69
    "0x2a" <TokenInfo> (283) 70
    "4.2" <TokenInfo> (284) 45
    "\"dq-string-literal\"" <TokenInfo> (285) 47
    "'sq-string-literal'" <TokenInfo> (286) 46
    "." (287) 93 94 95 96 144 145 150
    ":" (288)
    "," (289) 50 51 52 74 132 133 134 137 141 159 163 179 181 183 185
    ";" (290) 2 3 6 7 53 54 82 83
    "::" (291)
    "(" (292) 37 38 60 73 74 75 91 92 96 141 142 170 171 174 175
    ")" (293) 37 38 60 73 74 75 91 92 96 141 142 170 171 174 175
    "[" (294) 90 149 176 177
    "]" (295) 90 149 176 177
    "{" (296) 5 39 40 61 76 79 80 81 155
    "}" (297) 5 39 40 61 76 79 80 81 155
    "->" (298) 25 26
    "*" (299) 101 105
    "/" (300) 106
    "%" (301) 107
    "+" (302) 99 110
    "-" (303) 100 111
    "<" (304) 39 40 114
    "<=" (305) 115
    ">" (306) 39 40 116
    ">=" (307) 117
    "=" (308) 13 14 15 16 25 26 27 28 29 30 39 40 84 164
    "==" (309) 120
    "!=" (310) 121
    "^" (311) 102
    "&" (312) 152
    "!" (313) 177
    "|" (314) 32 35
    "EOS" (315)
    "<null>" (316)


Nonterminals, with rules where they appear

    $accept (62)
        on left: 0
    script <pdm::ast::Script*> (63)
        on left: 1
        on right: 0
    scriptContent <std::vector<pdm::ast::Script*>> (64)
        on left: 2 3
        on right: 1 3
    scriptContentStmt <pdm::ast::Stmt*> (65)
        on left: 4
        on right: 2 3
    mod_stmt <pdm::ast::Stmt*> (66)
        on left: 5
        on right: 4 23
    moduleContent <std::vector<pdm::ast::Stmt*>> (67)
        on left: 6 7
        on right: 5 7
    chainPrefixStmt <pdm::ast::Stmt*> (68)
        on left: 8 9 10 11 12
        on right: 82 83
    constStmt <pdm::ast::Stmt*> (69)
        on left: 13
        on right: 8
    letStmt <pdm::ast::Stmt*> (70)
        on left: 14
        on right: 9
    varStmt <pdm::ast::Stmt*> (71)
        on left: 15
        on right: 10
    setStmt <pdm::ast::Stmt*> (72)
        on left: 16
        on right: 11
    discardStmt <pdm::ast::Stmt*> (73)
        on left: 17
        on right: 12
    moduleContentStmt <pdm::ast::Stmt*> (74)
        on left: 18 19 20 21 22 23 24
        on right: 6 7
    fn_stmt <pdm::ast::Stmt*> (75)
        on left: 25 26 27 28
        on right: 18
    type_stmt <pdm::ast::Stmt*> (76)
        on left: 29 30
        on right: 19
    enum_stmt <pdm::ast::Stmt*> (77)
        on left: 31
        on right: 20
    enum_field_pl <std::vector<pdm::ast::EnumStmt::Field*>> (78)
        on left: 32 33
        on right: 31
    unprefixed_enum_field_pl <std::vector<pdm::ast::EnumStmt::Field*>> (79)
        on left: 34 35
        on right: 32 33 35
    enum_field <pdm::ast::EnumStmt::Field*> (80)
        on left: 36 37 38
        on right: 34 35
    typeclass_stmt <pdm::ast::Stmt*> (81)
        on left: 39 40
        on right: 21
    using_stmt <pdm::ast::Stmt*> (82)
        on left: 41
        on right: 24
    importStmt <pdm::ast::Stmt*> (83)
        on left: 42
        on right: 22
    tid <pdm::parser::TokenInfo> (84)
        on left: 43
        on right: 29 30 31 36 37 38 39 40 138 143 169
    vid <pdm::parser::TokenInfo> (85)
        on left: 44
        on right: 25 26 27 28 42 63 135 144 145 164 165 166 167 168
    floatl <pdm::parser::TokenInfo> (86)
        on left: 45
        on right: 65
    stringl <pdm::parser::TokenInfo> (87)
        on left: 46 47
        on right: 71 72
    expr <pdm::ast::Exp*> (88)
        on left: 48
        on right: 13 14 15 16 17 42 49 50 51 52 53 54 73 74 79 81 96 157 161 164
    expr_cl1 <std::vector<pdm::ast::Exp*>> (89)
        on left: 49 50
        on right: 50 92
    expr_cl2 <std::vector<pdm::ast::Exp*>> (90)
        on left: 51 52
        on right: 52 75
    expr_sl <std::vector<pdm::ast::Exp*>> (91)
        on left: 53 54
        on right: 39 40 54
    parenExpr <pdm::ast::Exp*> (92)
        on left: 55 56 57 58 59
        on right: 25 26 27 28 41 62 77 78 84
    unitExpr <pdm::ast::Exp*> (93)
        on left: 60 61
        on right: 55
    primaryExpr <pdm::ast::Exp*> (94)
        on left: 62 63 64 65 66 67 68
        on right: 78 85
    int_expr <pdm::ast::Exp*> (95)
        on left: 69 70
        on right: 64 95
    stringls <std::vector<pdm::ast::StringExp::Piece*>> (96)
        on left: 71 72
        on right: 66 72
    vparenExpr <pdm::ast::Exp*> (97)
        on left: 73
        on right: 56
    vtupleExpr <pdm::ast::Exp*> (98)
        on left: 74 75
        on right: 57
    vstructExpr <pdm::ast::Exp*> (99)
        on left: 76
        on right: 58
    ifThenElseExpr <pdm::ast::Exp*> (100)
        on left: 77 78
        on right: 67
    chainExpr <pdm::ast::Exp*> (101)
        on left: 79 80 81
        on right: 59
    chainPrefix <std::vector<pdm::ast::Stmt*>> (102)
        on left: 82 83
        on right: 80 81 83
    vlambdaExpr <pdm::ast::Exp*> (103)
        on left: 84
        on right: 68
    postfixExpr <pdm::ast::Exp*> (104)
        on left: 85 86 87 88 89
        on right: 90 91 92 93 94 95 96 97
    vtcallExpr <pdm::ast::Exp*> (105)
        on left: 90
        on right: 86
    vvcallExpr <pdm::ast::Exp*> (106)
        on left: 91 92
        on right: 87
    dotNmExpr <pdm::ast::Exp*> (107)
        on left: 93 94
        on right: 88
    dotIxExpr <pdm::ast::Exp*> (108)
        on left: 95 96
        on right: 89
    unaryExpr <pdm::ast::Exp*> (109)
        on left: 97 98
        on right: 98 108 109
    unaryOp <pdm::ast::UnaryOperator> (110)
        on left: 99 100 101 102 103
        on right: 98
    binaryExpr <pdm::ast::Exp*> (111)
        on left: 104
        on right: 48
    mulBinaryOp <pdm::ast::BinaryOperator> (112)
        on left: 105 106 107
        on right: 109
    mulBinaryExpr <pdm::ast::Exp*> (113)
        on left: 108 109
        on right: 109 112 113
    addBinaryOp <pdm::ast::BinaryOperator> (114)
        on left: 110 111
        on right: 113
    addBinaryExpr <pdm::ast::Exp*> (115)
        on left: 112 113
        on right: 113 118 119
    cmpBinaryOp <pdm::ast::BinaryOperator> (116)
        on left: 114 115 116 117
        on right: 119
    cmpBinaryExpr <pdm::ast::Exp*> (117)
        on left: 118 119
        on right: 119 122 123
    eqBinaryOp <pdm::ast::BinaryOperator> (118)
        on left: 120 121
        on right: 123
    eqBinaryExpr <pdm::ast::Exp*> (119)
        on left: 122 123
        on right: 123 124 125
    andBinaryExpr <pdm::ast::Exp*> (120)
        on left: 124 125
        on right: 125 126 127
    xorBinaryExpr <pdm::ast::Exp*> (121)
        on left: 126 127
        on right: 127 128 129
    orBinaryExpr <pdm::ast::Exp*> (122)
        on left: 128 129
        on right: 104 129
    typespec <pdm::ast::Typespec*> (123)
        on left: 130
        on right: 25 26 39 40 131 132 133 134 135 141 156 160 165 166 168 169
    typespec_cl1 <std::vector<pdm::ast::Typespec*>> (124)
        on left: 131 132
        on right: 38 132
    typespec_cl2 <std::vector<pdm::ast::Typespec*>> (125)
        on left: 133 134
        on right: 134 142
    structTypespecField <pdm::ast::StructTypespec::Field*> (126)
        on left: 135
        on right: 136 137
    structTypespecField_cl <std::vector<pdm::ast::StructTypespec::Field*>> (127)
        on left: 136 137
        on right: 137 155
    primaryTypespec <pdm::ast::Typespec*> (128)
        on left: 138 139 140
        on right: 146
    tupleTypespec <pdm::ast::Typespec*> (129)
        on left: 141 142
        on right: 139
    mod_prefix_tid <pdm::ast::Typespec*> (130)
        on left: 143
        on right: 140
    mod_prefix <std::vector<pdm::intern::String>> (131)
        on left: 144 145
        on right: 143 145
    postfixTypespec <pdm::ast::Typespec*> (132)
        on left: 146 147 148
        on right: 149 150 151
    ttcall <pdm::ast::Typespec*> (133)
        on left: 149
        on right: 147
    tdot <pdm::ast::Typespec*> (134)
        on left: 150
        on right: 148
    unaryTypespec <pdm::ast::Typespec*> (135)
        on left: 151 152
        on right: 130 152 153
    long_typespec <pdm::ast::Typespec*> (136)
        on left: 153 154
        on right: 29 30
    structTypespec <pdm::ast::Typespec*> (137)
        on left: 155
        on right: 154
    ttarg <pdm::ast::TArg*> (138)
        on left: 156 157
        on right: 158 159
    ttarg_cl <std::vector<pdm::ast::TArg*>> (139)
        on left: 158 159
        on right: 149 159
    vtarg <pdm::ast::TArg*> (140)
        on left: 160 161
        on right: 162 163
    vtarg_cl <std::vector<pdm::ast::TArg*>> (141)
        on left: 162 163
        on right: 90 163
    vstructExprField <pdm::ast::StructExp::Field*> (142)
        on left: 164
        on right: 184 185
    vpatternField <pdm::ast::VPattern::Field*> (143)
        on left: 165
        on right: 178 179
    lpatternField <pdm::ast::LPattern::Field*> (144)
        on left: 166 167
        on right: 172 180 181
    tpatternField <pdm::ast::TPattern::Field*> (145)
        on left: 168 169
        on right: 182 183
    lpattern <pdm::ast::LPattern*> (146)
        on left: 170 171
        on right: 84 173
    lpattern_naked <pdm::ast::LPattern*> (147)
        on left: 172 173
        on right: 13 14 15
    vpattern <pdm::ast::VPattern*> (148)
        on left: 174 175
        on right: 25 26 27 28
    tpattern <pdm::ast::TPattern*> (149)
        on left: 176 177
        on right: 186 187
    vpatternField_cl <std::vector<pdm::ast::VPattern::Field*>> (150)
        on left: 178 179
        on right: 174 179
    lpatternField_cl <std::vector<pdm::ast::LPattern::Field*>> (151)
        on left: 180 181
        on right: 170 181
    tpatternField_cl <std::vector<pdm::ast::TPattern::Field*>> (152)
        on left: 182 183
        on right: 176 177 183
    vstructExprField_cl <std::vector<pdm::ast::StructExp::Field*>> (153)
        on left: 184 185
        on right: 76 185
    tpattern_seq <std::vector<pdm::ast::TPattern*>> (154)
        on left: 186 187
        on right: 26 28 30 40 187


State 0

    0 $accept: • script $end

    "mod"  shift, and go to state 1

    script             go to state 2
    scriptContent      go to state 3
    scriptContentStmt  go to state 4
    mod_stmt           go to state 5


State 1

    5 mod_stmt: "mod" • "<val_id>" "{" moduleContent "}"

    "<val_id>"  shift, and go to state 6


State 2

    0 $accept: script • $end

    $end  shift, and go to state 7


State 3

    1 script: scriptContent •
    3 scriptContent: scriptContent • scriptContentStmt ";"

    "mod"  shift, and go to state 1

    $default  reduce using rule 1 (script)

    scriptContentStmt  go to state 8
    mod_stmt           go to state 5


State 4

    2 scriptContent: scriptContentStmt • ";"

    ";"  shift, and go to state 9


State 5

    4 scriptContentStmt: mod_stmt •

    $default  reduce using rule 4 (scriptContentStmt)


State 6

    5 mod_stmt: "mod" "<val_id>" • "{" moduleContent "}"

    "{"  shift, and go to state 10


State 7

    0 $accept: script $end •

    $default  accept


State 8

    3 scriptContent: scriptContent scriptContentStmt • ";"

    ";"  shift, and go to state 11


State 9

    2 scriptContent: scriptContentStmt ";" •

    $default  reduce using rule 2 (scriptContent)


State 10

    5 mod_stmt: "mod" "<val_id>" "{" • moduleContent "}"

    "using"      shift, and go to state 12
    "mod"        shift, and go to state 1
    "import"     shift, and go to state 13
    "fn"         shift, and go to state 14
    "type"       shift, and go to state 15
    "enum"       shift, and go to state 16
    "typeclass"  shift, and go to state 17

    mod_stmt           go to state 18
    moduleContent      go to state 19
    moduleContentStmt  go to state 20
    fn_stmt            go to state 21
    type_stmt          go to state 22
    enum_stmt          go to state 23
    typeclass_stmt     go to state 24
    using_stmt         go to state 25
    importStmt         go to state 26


State 11

    3 scriptContent: scriptContent scriptContentStmt ";" •

    $default  reduce using rule 3 (scriptContent)


State 12

   41 using_stmt: "using" • parenExpr

    "("  shift, and go to state 27
    "{"  shift, and go to state 28

    parenExpr    go to state 29
    unitExpr     go to state 30
    vparenExpr   go to state 31
    vtupleExpr   go to state 32
    vstructExpr  go to state 33
    chainExpr    go to state 34


State 13

   42 importStmt: "import" • vid "from" expr "type" expr

    "<val_id>"  shift, and go to state 35

    vid  go to state 36


State 14

   25 fn_stmt: "fn" • vid vpattern "->" typespec "=" parenExpr
   26        | "fn" • vid tpattern_seq vpattern "->" typespec "=" parenExpr
   27        | "fn" • vid vpattern "=" parenExpr
   28        | "fn" • vid tpattern_seq vpattern "=" parenExpr

    "<val_id>"  shift, and go to state 35

    vid  go to state 37


State 15

   29 type_stmt: "type" • tid "=" long_typespec
   30          | "type" • tid tpattern_seq "=" long_typespec

    "<TypeId>"  shift, and go to state 38

    tid  go to state 39


State 16

   31 enum_stmt: "enum" • tid enum_field_pl

    "<TypeId>"  shift, and go to state 38

    tid  go to state 40


State 17

   39 typeclass_stmt: "typeclass" • tid "<" tid typespec ">" "=" "{" expr_sl "}"
   40               | "typeclass" • tid "<" tid typespec ">" tpattern_seq "=" "{" expr_sl "}"

    "<TypeId>"  shift, and go to state 38

    tid  go to state 41


State 18

   23 moduleContentStmt: mod_stmt •

    $default  reduce using rule 23 (moduleContentStmt)


State 19

    5 mod_stmt: "mod" "<val_id>" "{" moduleContent • "}"
    7 moduleContent: moduleContent • moduleContentStmt ";"

    "using"      shift, and go to state 12
    "mod"        shift, and go to state 1
    "import"     shift, and go to state 13
    "fn"         shift, and go to state 14
    "type"       shift, and go to state 15
    "enum"       shift, and go to state 16
    "typeclass"  shift, and go to state 17
    "}"          shift, and go to state 42

    mod_stmt           go to state 18
    moduleContentStmt  go to state 43
    fn_stmt            go to state 21
    type_stmt          go to state 22
    enum_stmt          go to state 23
    typeclass_stmt     go to state 24
    using_stmt         go to state 25
    importStmt         go to state 26


State 20

    6 moduleContent: moduleContentStmt • ";"

    ";"  shift, and go to state 44


State 21

   18 moduleContentStmt: fn_stmt •

    $default  reduce using rule 18 (moduleContentStmt)


State 22

   19 moduleContentStmt: type_stmt •

    $default  reduce using rule 19 (moduleContentStmt)


State 23

   20 moduleContentStmt: enum_stmt •

    $default  reduce using rule 20 (moduleContentStmt)


State 24

   21 moduleContentStmt: typeclass_stmt •

    $default  reduce using rule 21 (moduleContentStmt)


State 25

   24 moduleContentStmt: using_stmt •

    $default  reduce using rule 24 (moduleContentStmt)


State 26

   22 moduleContentStmt: importStmt •

    $default  reduce using rule 22 (moduleContentStmt)


State 27

   60 unitExpr: "(" • ")"
   73 vparenExpr: "(" • expr ")"
   74 vtupleExpr: "(" • expr "," ")"
   75           | "(" • expr_cl2 ")"

    "<val_id>"               shift, and go to state 35
    "if"                     shift, and go to state 45
    "fn"                     shift, and go to state 46
    "not"                    shift, and go to state 47
    "42"                     shift, and go to state 48
    "0x2a"                   shift, and go to state 49
    "4.2"                    shift, and go to state 50
    "\"dq-string-literal\""  shift, and go to state 51
    "'sq-string-literal'"    shift, and go to state 52
    "("                      shift, and go to state 27
    ")"                      shift, and go to state 53
    "{"                      shift, and go to state 28
    "*"                      shift, and go to state 54
    "+"                      shift, and go to state 55
    "-"                      shift, and go to state 56
    "^"                      shift, and go to state 57

    vid             go to state 58
    floatl          go to state 59
    stringl         go to state 60
    expr            go to state 61
    expr_cl2        go to state 62
    parenExpr       go to state 63
    unitExpr        go to state 30
    primaryExpr     go to state 64
    int_expr        go to state 65
    stringls        go to state 66
    vparenExpr      go to state 31
    vtupleExpr      go to state 32
    vstructExpr     go to state 33
    ifThenElseExpr  go to state 67
    chainExpr       go to state 34
    vlambdaExpr     go to state 68
    postfixExpr     go to state 69
    vtcallExpr      go to state 70
    vvcallExpr      go to state 71
    dotNmExpr       go to state 72
    dotIxExpr       go to state 73
    unaryExpr       go to state 74
    unaryOp         go to state 75
    binaryExpr      go to state 76
    mulBinaryExpr   go to state 77
    addBinaryExpr   go to state 78
    cmpBinaryExpr   go to state 79
    eqBinaryExpr    go to state 80
    andBinaryExpr   go to state 81
    xorBinaryExpr   go to state 82
    orBinaryExpr    go to state 83


State 28

   61 unitExpr: "{" • "}"
   76 vstructExpr: "{" • vstructExprField_cl "}"
   79 chainExpr: "{" • expr "}"
   80          | "{" • chainPrefix "}"
   81          | "{" • chainPrefix expr "}"

    "<val_id>"               shift, and go to state 35
    "if"                     shift, and go to state 45
    "const"                  shift, and go to state 84
    "let"                    shift, and go to state 85
    "var"                    shift, and go to state 86
    "set"                    shift, and go to state 87
    "fn"                     shift, and go to state 46
    "not"                    shift, and go to state 47
    "42"                     shift, and go to state 48
    "0x2a"                   shift, and go to state 49
    "4.2"                    shift, and go to state 50
    "\"dq-string-literal\""  shift, and go to state 51
    "'sq-string-literal'"    shift, and go to state 52
    "("                      shift, and go to state 27
    "{"                      shift, and go to state 28
    "}"                      shift, and go to state 88
    "*"                      shift, and go to state 54
    "+"                      shift, and go to state 55
    "-"                      shift, and go to state 56
    "^"                      shift, and go to state 57

    chainPrefixStmt      go to state 89
    constStmt            go to state 90
    letStmt              go to state 91
    varStmt              go to state 92
    setStmt              go to state 93
    discardStmt          go to state 94
    vid                  go to state 95
    floatl               go to state 59
    stringl              go to state 60
    expr                 go to state 96
    parenExpr            go to state 63
    unitExpr             go to state 30
    primaryExpr          go to state 64
    int_expr             go to state 65
    stringls             go to state 66
    vparenExpr           go to state 31
    vtupleExpr           go to state 32
    vstructExpr          go to state 33
    ifThenElseExpr       go to state 67
    chainExpr            go to state 34
    chainPrefix          go to state 97
    vlambdaExpr          go to state 68
    postfixExpr          go to state 69
    vtcallExpr           go to state 70
    vvcallExpr           go to state 71
    dotNmExpr            go to state 72
    dotIxExpr            go to state 73
    unaryExpr            go to state 74
    unaryOp              go to state 75
    binaryExpr           go to state 76
    mulBinaryExpr        go to state 77
    addBinaryExpr        go to state 78
    cmpBinaryExpr        go to state 79
    eqBinaryExpr         go to state 80
    andBinaryExpr        go to state 81
    xorBinaryExpr        go to state 82
    orBinaryExpr         go to state 83
    vstructExprField     go to state 98
    vstructExprField_cl  go to state 99


State 29

   41 using_stmt: "using" parenExpr •

    $default  reduce using rule 41 (using_stmt)


State 30

   55 parenExpr: unitExpr •

    $default  reduce using rule 55 (parenExpr)


State 31

   56 parenExpr: vparenExpr •

    $default  reduce using rule 56 (parenExpr)


State 32

   57 parenExpr: vtupleExpr •

    $default  reduce using rule 57 (parenExpr)


State 33

   58 parenExpr: vstructExpr •

    $default  reduce using rule 58 (parenExpr)


State 34

   59 parenExpr: chainExpr •

    $default  reduce using rule 59 (parenExpr)


State 35

   44 vid: "<val_id>" •

    $default  reduce using rule 44 (vid)


State 36

   42 importStmt: "import" vid • "from" expr "type" expr

    "from"  shift, and go to state 100


State 37

   25 fn_stmt: "fn" vid • vpattern "->" typespec "=" parenExpr
   26        | "fn" vid • tpattern_seq vpattern "->" typespec "=" parenExpr
   27        | "fn" vid • vpattern "=" parenExpr
   28        | "fn" vid • tpattern_seq vpattern "=" parenExpr

    "("  shift, and go to state 101
    "["  shift, and go to state 102
    "!"  shift, and go to state 103

    vpattern      go to state 104
    tpattern      go to state 105
    tpattern_seq  go to state 106


State 38

   43 tid: "<TypeId>" •

    $default  reduce using rule 43 (tid)


State 39

   29 type_stmt: "type" tid • "=" long_typespec
   30          | "type" tid • tpattern_seq "=" long_typespec

    "["  shift, and go to state 102
    "="  shift, and go to state 107
    "!"  shift, and go to state 103

    tpattern      go to state 105
    tpattern_seq  go to state 108


State 40

   31 enum_stmt: "enum" tid • enum_field_pl

    "<TypeId>"  shift, and go to state 38
    "|"         shift, and go to state 109

    enum_field_pl             go to state 110
    unprefixed_enum_field_pl  go to state 111
    enum_field                go to state 112
    tid                       go to state 113


State 41

   39 typeclass_stmt: "typeclass" tid • "<" tid typespec ">" "=" "{" expr_sl "}"
   40               | "typeclass" tid • "<" tid typespec ">" tpattern_seq "=" "{" expr_sl "}"

    "<"  shift, and go to state 114


State 42

    5 mod_stmt: "mod" "<val_id>" "{" moduleContent "}" •

    $default  reduce using rule 5 (mod_stmt)


State 43

    7 moduleContent: moduleContent moduleContentStmt • ";"

    ";"  shift, and go to state 115


State 44

    6 moduleContent: moduleContentStmt ";" •

    $default  reduce using rule 6 (moduleContent)


State 45

   77 ifThenElseExpr: "if" • parenExpr "then" parenExpr
   78               | "if" • parenExpr "then" parenExpr "else" primaryExpr

    "("  shift, and go to state 27
    "{"  shift, and go to state 28

    parenExpr    go to state 116
    unitExpr     go to state 30
    vparenExpr   go to state 31
    vtupleExpr   go to state 32
    vstructExpr  go to state 33
    chainExpr    go to state 34


State 46

   84 vlambdaExpr: "fn" • lpattern "=" parenExpr

    "("  shift, and go to state 117

    lpattern  go to state 118


State 47

  103 unaryOp: "not" •

    $default  reduce using rule 103 (unaryOp)


State 48

   69 int_expr: "42" •

    $default  reduce using rule 69 (int_expr)


State 49

   70 int_expr: "0x2a" •

    $default  reduce using rule 70 (int_expr)


State 50

   45 floatl: "4.2" •

    $default  reduce using rule 45 (floatl)


State 51

   47 stringl: "\"dq-string-literal\"" •

    $default  reduce using rule 47 (stringl)


State 52

   46 stringl: "'sq-string-literal'" •

    $default  reduce using rule 46 (stringl)


State 53

   60 unitExpr: "(" ")" •

    $default  reduce using rule 60 (unitExpr)


State 54

  101 unaryOp: "*" •

    $default  reduce using rule 101 (unaryOp)


State 55

   99 unaryOp: "+" •

    $default  reduce using rule 99 (unaryOp)


State 56

  100 unaryOp: "-" •

    $default  reduce using rule 100 (unaryOp)


State 57

  102 unaryOp: "^" •

    $default  reduce using rule 102 (unaryOp)


State 58

   63 primaryExpr: vid •

    $default  reduce using rule 63 (primaryExpr)


State 59

   65 primaryExpr: floatl •

    $default  reduce using rule 65 (primaryExpr)


State 60

   71 stringls: stringl •

    $default  reduce using rule 71 (stringls)


State 61

   51 expr_cl2: expr • "," expr
   73 vparenExpr: "(" expr • ")"
   74 vtupleExpr: "(" expr • "," ")"

    ","  shift, and go to state 119
    ")"  shift, and go to state 120


State 62

   52 expr_cl2: expr_cl2 • "," expr
   75 vtupleExpr: "(" expr_cl2 • ")"

    ","  shift, and go to state 121
    ")"  shift, and go to state 122


State 63

   62 primaryExpr: parenExpr •

    $default  reduce using rule 62 (primaryExpr)


State 64

   85 postfixExpr: primaryExpr •

    $default  reduce using rule 85 (postfixExpr)


State 65

   64 primaryExpr: int_expr •

    $default  reduce using rule 64 (primaryExpr)


State 66

   66 primaryExpr: stringls •
   72 stringls: stringls • stringl

    "\"dq-string-literal\""  shift, and go to state 51
    "'sq-string-literal'"    shift, and go to state 52

    $default  reduce using rule 66 (primaryExpr)

    stringl  go to state 123


State 67

   67 primaryExpr: ifThenElseExpr •

    $default  reduce using rule 67 (primaryExpr)


State 68

   68 primaryExpr: vlambdaExpr •

    $default  reduce using rule 68 (primaryExpr)


State 69

   90 vtcallExpr: postfixExpr • "[" vtarg_cl "]"
   91 vvcallExpr: postfixExpr • "(" ")"
   92           | postfixExpr • "(" expr_cl1 ")"
   93 dotNmExpr: postfixExpr • "." "<val_id>"
   94          | postfixExpr • "." "<TypeId>"
   95 dotIxExpr: postfixExpr • "." int_expr
   96          | postfixExpr • "." "(" expr ")"
   97 unaryExpr: postfixExpr •

    "."  shift, and go to state 124
    "("  shift, and go to state 125
    "["  shift, and go to state 126

    $default  reduce using rule 97 (unaryExpr)


State 70

   86 postfixExpr: vtcallExpr •

    $default  reduce using rule 86 (postfixExpr)


State 71

   87 postfixExpr: vvcallExpr •

    $default  reduce using rule 87 (postfixExpr)


State 72

   88 postfixExpr: dotNmExpr •

    $default  reduce using rule 88 (postfixExpr)


State 73

   89 postfixExpr: dotIxExpr •

    $default  reduce using rule 89 (postfixExpr)


State 74

  108 mulBinaryExpr: unaryExpr •

    $default  reduce using rule 108 (mulBinaryExpr)


State 75

   98 unaryExpr: unaryOp • unaryExpr

    "<val_id>"               shift, and go to state 35
    "if"                     shift, and go to state 45
    "fn"                     shift, and go to state 46
    "not"                    shift, and go to state 47
    "42"                     shift, and go to state 48
    "0x2a"                   shift, and go to state 49
    "4.2"                    shift, and go to state 50
    "\"dq-string-literal\""  shift, and go to state 51
    "'sq-string-literal'"    shift, and go to state 52
    "("                      shift, and go to state 27
    "{"                      shift, and go to state 28
    "*"                      shift, and go to state 54
    "+"                      shift, and go to state 55
    "-"                      shift, and go to state 56
    "^"                      shift, and go to state 57

    vid             go to state 58
    floatl          go to state 59
    stringl         go to state 60
    parenExpr       go to state 63
    unitExpr        go to state 30
    primaryExpr     go to state 64
    int_expr        go to state 65
    stringls        go to state 66
    vparenExpr      go to state 31
    vtupleExpr      go to state 32
    vstructExpr     go to state 33
    ifThenElseExpr  go to state 67
    chainExpr       go to state 34
    vlambdaExpr     go to state 68
    postfixExpr     go to state 69
    vtcallExpr      go to state 70
    vvcallExpr      go to state 71
    dotNmExpr       go to state 72
    dotIxExpr       go to state 73
    unaryExpr       go to state 127
    unaryOp         go to state 75


State 76

   48 expr: binaryExpr •

    $default  reduce using rule 48 (expr)


State 77

  109 mulBinaryExpr: mulBinaryExpr • mulBinaryOp unaryExpr
  112 addBinaryExpr: mulBinaryExpr •

    "*"  shift, and go to state 128
    "/"  shift, and go to state 129
    "%"  shift, and go to state 130

    $default  reduce using rule 112 (addBinaryExpr)

    mulBinaryOp  go to state 131


State 78

  113 addBinaryExpr: addBinaryExpr • addBinaryOp mulBinaryExpr
  118 cmpBinaryExpr: addBinaryExpr •

    "+"  shift, and go to state 132
    "-"  shift, and go to state 133

    $default  reduce using rule 118 (cmpBinaryExpr)

    addBinaryOp  go to state 134


State 79

  119 cmpBinaryExpr: cmpBinaryExpr • cmpBinaryOp addBinaryExpr
  122 eqBinaryExpr: cmpBinaryExpr •

    "<"   shift, and go to state 135
    "<="  shift, and go to state 136
    ">"   shift, and go to state 137
    ">="  shift, and go to state 138

    $default  reduce using rule 122 (eqBinaryExpr)

    cmpBinaryOp  go to state 139


State 80

  123 eqBinaryExpr: eqBinaryExpr • eqBinaryOp cmpBinaryExpr
  124 andBinaryExpr: eqBinaryExpr •

    "=="  shift, and go to state 140
    "!="  shift, and go to state 141

    $default  reduce using rule 124 (andBinaryExpr)

    eqBinaryOp  go to state 142


State 81

  125 andBinaryExpr: andBinaryExpr • "and" eqBinaryExpr
  126 xorBinaryExpr: andBinaryExpr •

    "and"  shift, and go to state 143

    $default  reduce using rule 126 (xorBinaryExpr)


State 82

  127 xorBinaryExpr: xorBinaryExpr • "xor" andBinaryExpr
  128 orBinaryExpr: xorBinaryExpr •

    "xor"  shift, and go to state 144

    $default  reduce using rule 128 (orBinaryExpr)


State 83

  104 binaryExpr: orBinaryExpr •
  129 orBinaryExpr: orBinaryExpr • "or" xorBinaryExpr

    "or"  shift, and go to state 145

    $default  reduce using rule 104 (binaryExpr)


State 84

   13 constStmt: "const" • lpattern_naked "=" expr

    "<val_id>"  shift, and go to state 35
    "("         shift, and go to state 117

    vid             go to state 146
    lpatternField   go to state 147
    lpattern        go to state 148
    lpattern_naked  go to state 149


State 85

   14 letStmt: "let" • lpattern_naked "=" expr

    "<val_id>"  shift, and go to state 35
    "("         shift, and go to state 117

    vid             go to state 146
    lpatternField   go to state 147
    lpattern        go to state 148
    lpattern_naked  go to state 150


State 86

   15 varStmt: "var" • lpattern_naked "=" expr

    "<val_id>"  shift, and go to state 35
    "("         shift, and go to state 117

    vid             go to state 146
    lpatternField   go to state 147
    lpattern        go to state 148
    lpattern_naked  go to state 151


State 87

   16 setStmt: "set" • expr "=" expr

    "<val_id>"               shift, and go to state 35
    "if"                     shift, and go to state 45
    "fn"                     shift, and go to state 46
    "not"                    shift, and go to state 47
    "42"                     shift, and go to state 48
    "0x2a"                   shift, and go to state 49
    "4.2"                    shift, and go to state 50
    "\"dq-string-literal\""  shift, and go to state 51
    "'sq-string-literal'"    shift, and go to state 52
    "("                      shift, and go to state 27
    "{"                      shift, and go to state 28
    "*"                      shift, and go to state 54
    "+"                      shift, and go to state 55
    "-"                      shift, and go to state 56
    "^"                      shift, and go to state 57

    vid             go to state 58
    floatl          go to state 59
    stringl         go to state 60
    expr            go to state 152
    parenExpr       go to state 63
    unitExpr        go to state 30
    primaryExpr     go to state 64
    int_expr        go to state 65
    stringls        go to state 66
    vparenExpr      go to state 31
    vtupleExpr      go to state 32
    vstructExpr     go to state 33
    ifThenElseExpr  go to state 67
    chainExpr       go to state 34
    vlambdaExpr     go to state 68
    postfixExpr     go to state 69
    vtcallExpr      go to state 70
    vvcallExpr      go to state 71
    dotNmExpr       go to state 72
    dotIxExpr       go to state 73
    unaryExpr       go to state 74
    unaryOp         go to state 75
    binaryExpr      go to state 76
    mulBinaryExpr   go to state 77
    addBinaryExpr   go to state 78
    cmpBinaryExpr   go to state 79
    eqBinaryExpr    go to state 80
    andBinaryExpr   go to state 81
    xorBinaryExpr   go to state 82
    orBinaryExpr    go to state 83


State 88

   61 unitExpr: "{" "}" •

    $default  reduce using rule 61 (unitExpr)


State 89

   82 chainPrefix: chainPrefixStmt • ";"

    ";"  shift, and go to state 153


State 90

    8 chainPrefixStmt: constStmt •

    $default  reduce using rule 8 (chainPrefixStmt)


State 91

    9 chainPrefixStmt: letStmt •

    $default  reduce using rule 9 (chainPrefixStmt)


State 92

   10 chainPrefixStmt: varStmt •

    $default  reduce using rule 10 (chainPrefixStmt)


State 93

   11 chainPrefixStmt: setStmt •

    $default  reduce using rule 11 (chainPrefixStmt)


State 94

   12 chainPrefixStmt: discardStmt •

    $default  reduce using rule 12 (chainPrefixStmt)


State 95

   63 primaryExpr: vid •
  164 vstructExprField: vid • "=" expr

    "="  shift, and go to state 154

    $default  reduce using rule 63 (primaryExpr)


State 96

   17 discardStmt: expr •
   79 chainExpr: "{" expr • "}"

    "}"  shift, and go to state 155

    $default  reduce using rule 17 (discardStmt)


State 97

   80 chainExpr: "{" chainPrefix • "}"
   81          | "{" chainPrefix • expr "}"
   83 chainPrefix: chainPrefix • chainPrefixStmt ";"

    "<val_id>"               shift, and go to state 35
    "if"                     shift, and go to state 45
    "const"                  shift, and go to state 84
    "let"                    shift, and go to state 85
    "var"                    shift, and go to state 86
    "set"                    shift, and go to state 87
    "fn"                     shift, and go to state 46
    "not"                    shift, and go to state 47
    "42"                     shift, and go to state 48
    "0x2a"                   shift, and go to state 49
    "4.2"                    shift, and go to state 50
    "\"dq-string-literal\""  shift, and go to state 51
    "'sq-string-literal'"    shift, and go to state 52
    "("                      shift, and go to state 27
    "{"                      shift, and go to state 28
    "}"                      shift, and go to state 156
    "*"                      shift, and go to state 54
    "+"                      shift, and go to state 55
    "-"                      shift, and go to state 56
    "^"                      shift, and go to state 57

    chainPrefixStmt  go to state 157
    constStmt        go to state 90
    letStmt          go to state 91
    varStmt          go to state 92
    setStmt          go to state 93
    discardStmt      go to state 94
    vid              go to state 58
    floatl           go to state 59
    stringl          go to state 60
    expr             go to state 158
    parenExpr        go to state 63
    unitExpr         go to state 30
    primaryExpr      go to state 64
    int_expr         go to state 65
    stringls         go to state 66
    vparenExpr       go to state 31
    vtupleExpr       go to state 32
    vstructExpr      go to state 33
    ifThenElseExpr   go to state 67
    chainExpr        go to state 34
    vlambdaExpr      go to state 68
    postfixExpr      go to state 69
    vtcallExpr       go to state 70
    vvcallExpr       go to state 71
    dotNmExpr        go to state 72
    dotIxExpr        go to state 73
    unaryExpr        go to state 74
    unaryOp          go to state 75
    binaryExpr       go to state 76
    mulBinaryExpr    go to state 77
    addBinaryExpr    go to state 78
    cmpBinaryExpr    go to state 79
    eqBinaryExpr     go to state 80
    andBinaryExpr    go to state 81
    xorBinaryExpr    go to state 82
    orBinaryExpr     go to state 83


State 98

  184 vstructExprField_cl: vstructExprField •

    $default  reduce using rule 184 (vstructExprField_cl)


State 99

   76 vstructExpr: "{" vstructExprField_cl • "}"
  185 vstructExprField_cl: vstructExprField_cl • "," vstructExprField

    ","  shift, and go to state 159
    "}"  shift, and go to state 160


State 100

   42 importStmt: "import" vid "from" • expr "type" expr

    "<val_id>"               shift, and go to state 35
    "if"                     shift, and go to state 45
    "fn"                     shift, and go to state 46
    "not"                    shift, and go to state 47
    "42"                     shift, and go to state 48
    "0x2a"                   shift, and go to state 49
    "4.2"                    shift, and go to state 50
    "\"dq-string-literal\""  shift, and go to state 51
    "'sq-string-literal'"    shift, and go to state 52
    "("                      shift, and go to state 27
    "{"                      shift, and go to state 28
    "*"                      shift, and go to state 54
    "+"                      shift, and go to state 55
    "-"                      shift, and go to state 56
    "^"                      shift, and go to state 57

    vid             go to state 58
    floatl          go to state 59
    stringl         go to state 60
    expr            go to state 161
    parenExpr       go to state 63
    unitExpr        go to state 30
    primaryExpr     go to state 64
    int_expr        go to state 65
    stringls        go to state 66
    vparenExpr      go to state 31
    vtupleExpr      go to state 32
    vstructExpr     go to state 33
    ifThenElseExpr  go to state 67
    chainExpr       go to state 34
    vlambdaExpr     go to state 68
    postfixExpr     go to state 69
    vtcallExpr      go to state 70
    vvcallExpr      go to state 71
    dotNmExpr       go to state 72
    dotIxExpr       go to state 73
    unaryExpr       go to state 74
    unaryOp         go to state 75
    binaryExpr      go to state 76
    mulBinaryExpr   go to state 77
    addBinaryExpr   go to state 78
    cmpBinaryExpr   go to state 79
    eqBinaryExpr    go to state 80
    andBinaryExpr   go to state 81
    xorBinaryExpr   go to state 82
    orBinaryExpr    go to state 83


State 101

  174 vpattern: "(" • vpatternField_cl ")"
  175         | "(" • ")"

    "<val_id>"  shift, and go to state 35
    ")"         shift, and go to state 162

    vid               go to state 163
    vpatternField     go to state 164
    vpatternField_cl  go to state 165


State 102

  176 tpattern: "[" • tpatternField_cl "]"

    "<val_id>"  shift, and go to state 35
    "<TypeId>"  shift, and go to state 38

    tid               go to state 166
    vid               go to state 167
    tpatternField     go to state 168
    tpatternField_cl  go to state 169


State 103

  177 tpattern: "!" • "[" tpatternField_cl "]"

    "["  shift, and go to state 170


State 104

   25 fn_stmt: "fn" vid vpattern • "->" typespec "=" parenExpr
   27        | "fn" vid vpattern • "=" parenExpr

    "->"  shift, and go to state 171
    "="   shift, and go to state 172


State 105

  186 tpattern_seq: tpattern •

    $default  reduce using rule 186 (tpattern_seq)


State 106

   26 fn_stmt: "fn" vid tpattern_seq • vpattern "->" typespec "=" parenExpr
   28        | "fn" vid tpattern_seq • vpattern "=" parenExpr
  187 tpattern_seq: tpattern_seq • tpattern

    "("  shift, and go to state 101
    "["  shift, and go to state 102
    "!"  shift, and go to state 103

    vpattern  go to state 173
    tpattern  go to state 174


State 107

   29 type_stmt: "type" tid "=" • long_typespec

    "<val_id>"  shift, and go to state 35
    "<TypeId>"  shift, and go to state 38
    "("         shift, and go to state 175
    "{"         shift, and go to state 176
    "&"         shift, and go to state 177

    tid              go to state 178
    vid              go to state 179
    primaryTypespec  go to state 180
    tupleTypespec    go to state 181
    mod_prefix_tid   go to state 182
    mod_prefix       go to state 183
    postfixTypespec  go to state 184
    ttcall           go to state 185
    tdot             go to state 186
    unaryTypespec    go to state 187
    long_typespec    go to state 188
    structTypespec   go to state 189


State 108

   30 type_stmt: "type" tid tpattern_seq • "=" long_typespec
  187 tpattern_seq: tpattern_seq • tpattern

    "["  shift, and go to state 102
    "="  shift, and go to state 190
    "!"  shift, and go to state 103

    tpattern  go to state 174


State 109

   32 enum_field_pl: "|" • unprefixed_enum_field_pl

    "<TypeId>"  shift, and go to state 38

    unprefixed_enum_field_pl  go to state 191
    enum_field                go to state 112
    tid                       go to state 113


State 110

   31 enum_stmt: "enum" tid enum_field_pl •

    $default  reduce using rule 31 (enum_stmt)


State 111

   33 enum_field_pl: unprefixed_enum_field_pl •
   35 unprefixed_enum_field_pl: unprefixed_enum_field_pl • "|" enum_field

    "|"  shift, and go to state 192

    $default  reduce using rule 33 (enum_field_pl)


State 112

   34 unprefixed_enum_field_pl: enum_field •

    $default  reduce using rule 34 (unprefixed_enum_field_pl)


State 113

   36 enum_field: tid •
   37           | tid • "(" ")"
   38           | tid • "(" typespec_cl1 ")"

    "("  shift, and go to state 193

    $default  reduce using rule 36 (enum_field)


State 114

   39 typeclass_stmt: "typeclass" tid "<" • tid typespec ">" "=" "{" expr_sl "}"
   40               | "typeclass" tid "<" • tid typespec ">" tpattern_seq "=" "{" expr_sl "}"

    "<TypeId>"  shift, and go to state 38

    tid  go to state 194


State 115

    7 moduleContent: moduleContent moduleContentStmt ";" •

    $default  reduce using rule 7 (moduleContent)


State 116

   77 ifThenElseExpr: "if" parenExpr • "then" parenExpr
   78               | "if" parenExpr • "then" parenExpr "else" primaryExpr

    "then"  shift, and go to state 195


State 117

  170 lpattern: "(" • lpatternField_cl ")"
  171         | "(" • ")"

    "<val_id>"  shift, and go to state 35
    ")"         shift, and go to state 196

    vid               go to state 146
    lpatternField     go to state 197
    lpatternField_cl  go to state 198


State 118

   84 vlambdaExpr: "fn" lpattern • "=" parenExpr

    "="  shift, and go to state 199


State 119

   51 expr_cl2: expr "," • expr
   74 vtupleExpr: "(" expr "," • ")"

    "<val_id>"               shift, and go to state 35
    "if"                     shift, and go to state 45
    "fn"                     shift, and go to state 46
    "not"                    shift, and go to state 47
    "42"                     shift, and go to state 48
    "0x2a"                   shift, and go to state 49
    "4.2"                    shift, and go to state 50
    "\"dq-string-literal\""  shift, and go to state 51
    "'sq-string-literal'"    shift, and go to state 52
    "("                      shift, and go to state 27
    ")"                      shift, and go to state 200
    "{"                      shift, and go to state 28
    "*"                      shift, and go to state 54
    "+"                      shift, and go to state 55
    "-"                      shift, and go to state 56
    "^"                      shift, and go to state 57

    vid             go to state 58
    floatl          go to state 59
    stringl         go to state 60
    expr            go to state 201
    parenExpr       go to state 63
    unitExpr        go to state 30
    primaryExpr     go to state 64
    int_expr        go to state 65
    stringls        go to state 66
    vparenExpr      go to state 31
    vtupleExpr      go to state 32
    vstructExpr     go to state 33
    ifThenElseExpr  go to state 67
    chainExpr       go to state 34
    vlambdaExpr     go to state 68
    postfixExpr     go to state 69
    vtcallExpr      go to state 70
    vvcallExpr      go to state 71
    dotNmExpr       go to state 72
    dotIxExpr       go to state 73
    unaryExpr       go to state 74
    unaryOp         go to state 75
    binaryExpr      go to state 76
    mulBinaryExpr   go to state 77
    addBinaryExpr   go to state 78
    cmpBinaryExpr   go to state 79
    eqBinaryExpr    go to state 80
    andBinaryExpr   go to state 81
    xorBinaryExpr   go to state 82
    orBinaryExpr    go to state 83


State 120

   73 vparenExpr: "(" expr ")" •

    $default  reduce using rule 73 (vparenExpr)


State 121

   52 expr_cl2: expr_cl2 "," • expr

    "<val_id>"               shift, and go to state 35
    "if"                     shift, and go to state 45
    "fn"                     shift, and go to state 46
    "not"                    shift, and go to state 47
    "42"                     shift, and go to state 48
    "0x2a"                   shift, and go to state 49
    "4.2"                    shift, and go to state 50
    "\"dq-string-literal\""  shift, and go to state 51
    "'sq-string-literal'"    shift, and go to state 52
    "("                      shift, and go to state 27
    "{"                      shift, and go to state 28
    "*"                      shift, and go to state 54
    "+"                      shift, and go to state 55
    "-"                      shift, and go to state 56
    "^"                      shift, and go to state 57

    vid             go to state 58
    floatl          go to state 59
    stringl         go to state 60
    expr            go to state 202
    parenExpr       go to state 63
    unitExpr        go to state 30
    primaryExpr     go to state 64
    int_expr        go to state 65
    stringls        go to state 66
    vparenExpr      go to state 31
    vtupleExpr      go to state 32
    vstructExpr     go to state 33
    ifThenElseExpr  go to state 67
    chainExpr       go to state 34
    vlambdaExpr     go to state 68
    postfixExpr     go to state 69
    vtcallExpr      go to state 70
    vvcallExpr      go to state 71
    dotNmExpr       go to state 72
    dotIxExpr       go to state 73
    unaryExpr       go to state 74
    unaryOp         go to state 75
    binaryExpr      go to state 76
    mulBinaryExpr   go to state 77
    addBinaryExpr   go to state 78
    cmpBinaryExpr   go to state 79
    eqBinaryExpr    go to state 80
    andBinaryExpr   go to state 81
    xorBinaryExpr   go to state 82
    orBinaryExpr    go to state 83


State 122

   75 vtupleExpr: "(" expr_cl2 ")" •

    $default  reduce using rule 75 (vtupleExpr)


State 123

   72 stringls: stringls stringl •

    $default  reduce using rule 72 (stringls)


State 124

   93 dotNmExpr: postfixExpr "." • "<val_id>"
   94          | postfixExpr "." • "<TypeId>"
   95 dotIxExpr: postfixExpr "." • int_expr
   96          | postfixExpr "." • "(" expr ")"

    "<val_id>"  shift, and go to state 203
    "<TypeId>"  shift, and go to state 204
    "42"        shift, and go to state 48
    "0x2a"      shift, and go to state 49
    "("         shift, and go to state 205

    int_expr  go to state 206


State 125

   91 vvcallExpr: postfixExpr "(" • ")"
   92           | postfixExpr "(" • expr_cl1 ")"

    "<val_id>"               shift, and go to state 35
    "if"                     shift, and go to state 45
    "fn"                     shift, and go to state 46
    "not"                    shift, and go to state 47
    "42"                     shift, and go to state 48
    "0x2a"                   shift, and go to state 49
    "4.2"                    shift, and go to state 50
    "\"dq-string-literal\""  shift, and go to state 51
    "'sq-string-literal'"    shift, and go to state 52
    "("                      shift, and go to state 27
    ")"                      shift, and go to state 207
    "{"                      shift, and go to state 28
    "*"                      shift, and go to state 54
    "+"                      shift, and go to state 55
    "-"                      shift, and go to state 56
    "^"                      shift, and go to state 57

    vid             go to state 58
    floatl          go to state 59
    stringl         go to state 60
    expr            go to state 208
    expr_cl1        go to state 209
    parenExpr       go to state 63
    unitExpr        go to state 30
    primaryExpr     go to state 64
    int_expr        go to state 65
    stringls        go to state 66
    vparenExpr      go to state 31
    vtupleExpr      go to state 32
    vstructExpr     go to state 33
    ifThenElseExpr  go to state 67
    chainExpr       go to state 34
    vlambdaExpr     go to state 68
    postfixExpr     go to state 69
    vtcallExpr      go to state 70
    vvcallExpr      go to state 71
    dotNmExpr       go to state 72
    dotIxExpr       go to state 73
    unaryExpr       go to state 74
    unaryOp         go to state 75
    binaryExpr      go to state 76
    mulBinaryExpr   go to state 77
    addBinaryExpr   go to state 78
    cmpBinaryExpr   go to state 79
    eqBinaryExpr    go to state 80
    andBinaryExpr   go to state 81
    xorBinaryExpr   go to state 82
    orBinaryExpr    go to state 83


State 126

   90 vtcallExpr: postfixExpr "[" • vtarg_cl "]"

    "<val_id>"               shift, and go to state 35
    "<TypeId>"               shift, and go to state 38
    "if"                     shift, and go to state 45
    "fn"                     shift, and go to state 46
    "not"                    shift, and go to state 47
    "42"                     shift, and go to state 48
    "0x2a"                   shift, and go to state 49
    "4.2"                    shift, and go to state 50
    "\"dq-string-literal\""  shift, and go to state 51
    "'sq-string-literal'"    shift, and go to state 52
    "("                      shift, and go to state 210
    "{"                      shift, and go to state 28
    "*"                      shift, and go to state 54
    "+"                      shift, and go to state 55
    "-"                      shift, and go to state 56
    "^"                      shift, and go to state 57
    "&"                      shift, and go to state 177

    tid              go to state 178
    vid              go to state 211
    floatl           go to state 59
    stringl          go to state 60
    expr             go to state 212
    parenExpr        go to state 63
    unitExpr         go to state 30
    primaryExpr      go to state 64
    int_expr         go to state 65
    stringls         go to state 66
    vparenExpr       go to state 31
    vtupleExpr       go to state 32
    vstructExpr      go to state 33
    ifThenElseExpr   go to state 67
    chainExpr        go to state 34
    vlambdaExpr      go to state 68
    postfixExpr      go to state 69
    vtcallExpr       go to state 70
    vvcallExpr       go to state 71
    dotNmExpr        go to state 72
    dotIxExpr        go to state 73
    unaryExpr        go to state 74
    unaryOp          go to state 75
    binaryExpr       go to state 76
    mulBinaryExpr    go to state 77
    addBinaryExpr    go to state 78
    cmpBinaryExpr    go to state 79
    eqBinaryExpr     go to state 80
    andBinaryExpr    go to state 81
    xorBinaryExpr    go to state 82
    orBinaryExpr     go to state 83
    typespec         go to state 213
    primaryTypespec  go to state 180
    tupleTypespec    go to state 181
    mod_prefix_tid   go to state 182
    mod_prefix       go to state 183
    postfixTypespec  go to state 184
    ttcall           go to state 185
    tdot             go to state 186
    unaryTypespec    go to state 214
    vtarg            go to state 215
    vtarg_cl         go to state 216


State 127

   98 unaryExpr: unaryOp unaryExpr •

    $default  reduce using rule 98 (unaryExpr)


State 128

  105 mulBinaryOp: "*" •

    $default  reduce using rule 105 (mulBinaryOp)


State 129

  106 mulBinaryOp: "/" •

    $default  reduce using rule 106 (mulBinaryOp)


State 130

  107 mulBinaryOp: "%" •

    $default  reduce using rule 107 (mulBinaryOp)


State 131

  109 mulBinaryExpr: mulBinaryExpr mulBinaryOp • unaryExpr

    "<val_id>"               shift, and go to state 35
    "if"                     shift, and go to state 45
    "fn"                     shift, and go to state 46
    "not"                    shift, and go to state 47
    "42"                     shift, and go to state 48
    "0x2a"                   shift, and go to state 49
    "4.2"                    shift, and go to state 50
    "\"dq-string-literal\""  shift, and go to state 51
    "'sq-string-literal'"    shift, and go to state 52
    "("                      shift, and go to state 27
    "{"                      shift, and go to state 28
    "*"                      shift, and go to state 54
    "+"                      shift, and go to state 55
    "-"                      shift, and go to state 56
    "^"                      shift, and go to state 57

    vid             go to state 58
    floatl          go to state 59
    stringl         go to state 60
    parenExpr       go to state 63
    unitExpr        go to state 30
    primaryExpr     go to state 64
    int_expr        go to state 65
    stringls        go to state 66
    vparenExpr      go to state 31
    vtupleExpr      go to state 32
    vstructExpr     go to state 33
    ifThenElseExpr  go to state 67
    chainExpr       go to state 34
    vlambdaExpr     go to state 68
    postfixExpr     go to state 69
    vtcallExpr      go to state 70
    vvcallExpr      go to state 71
    dotNmExpr       go to state 72
    dotIxExpr       go to state 73
    unaryExpr       go to state 217
    unaryOp         go to state 75


State 132

  110 addBinaryOp: "+" •

    $default  reduce using rule 110 (addBinaryOp)


State 133

  111 addBinaryOp: "-" •

    $default  reduce using rule 111 (addBinaryOp)


State 134

  113 addBinaryExpr: addBinaryExpr addBinaryOp • mulBinaryExpr

    "<val_id>"               shift, and go to state 35
    "if"                     shift, and go to state 45
    "fn"                     shift, and go to state 46
    "not"                    shift, and go to state 47
    "42"                     shift, and go to state 48
    "0x2a"                   shift, and go to state 49
    "4.2"                    shift, and go to state 50
    "\"dq-string-literal\""  shift, and go to state 51
    "'sq-string-literal'"    shift, and go to state 52
    "("                      shift, and go to state 27
    "{"                      shift, and go to state 28
    "*"                      shift, and go to state 54
    "+"                      shift, and go to state 55
    "-"                      shift, and go to state 56
    "^"                      shift, and go to state 57

    vid             go to state 58
    floatl          go to state 59
    stringl         go to state 60
    parenExpr       go to state 63
    unitExpr        go to state 30
    primaryExpr     go to state 64
    int_expr        go to state 65
    stringls        go to state 66
    vparenExpr      go to state 31
    vtupleExpr      go to state 32
    vstructExpr     go to state 33
    ifThenElseExpr  go to state 67
    chainExpr       go to state 34
    vlambdaExpr     go to state 68
    postfixExpr     go to state 69
    vtcallExpr      go to state 70
    vvcallExpr      go to state 71
    dotNmExpr       go to state 72
    dotIxExpr       go to state 73
    unaryExpr       go to state 74
    unaryOp         go to state 75
    mulBinaryExpr   go to state 218


State 135

  114 cmpBinaryOp: "<" •

    $default  reduce using rule 114 (cmpBinaryOp)


State 136

  115 cmpBinaryOp: "<=" •

    $default  reduce using rule 115 (cmpBinaryOp)


State 137

  116 cmpBinaryOp: ">" •

    $default  reduce using rule 116 (cmpBinaryOp)


State 138

  117 cmpBinaryOp: ">=" •

    $default  reduce using rule 117 (cmpBinaryOp)


State 139

  119 cmpBinaryExpr: cmpBinaryExpr cmpBinaryOp • addBinaryExpr

    "<val_id>"               shift, and go to state 35
    "if"                     shift, and go to state 45
    "fn"                     shift, and go to state 46
    "not"                    shift, and go to state 47
    "42"                     shift, and go to state 48
    "0x2a"                   shift, and go to state 49
    "4.2"                    shift, and go to state 50
    "\"dq-string-literal\""  shift, and go to state 51
    "'sq-string-literal'"    shift, and go to state 52
    "("                      shift, and go to state 27
    "{"                      shift, and go to state 28
    "*"                      shift, and go to state 54
    "+"                      shift, and go to state 55
    "-"                      shift, and go to state 56
    "^"                      shift, and go to state 57

    vid             go to state 58
    floatl          go to state 59
    stringl         go to state 60
    parenExpr       go to state 63
    unitExpr        go to state 30
    primaryExpr     go to state 64
    int_expr        go to state 65
    stringls        go to state 66
    vparenExpr      go to state 31
    vtupleExpr      go to state 32
    vstructExpr     go to state 33
    ifThenElseExpr  go to state 67
    chainExpr       go to state 34
    vlambdaExpr     go to state 68
    postfixExpr     go to state 69
    vtcallExpr      go to state 70
    vvcallExpr      go to state 71
    dotNmExpr       go to state 72
    dotIxExpr       go to state 73
    unaryExpr       go to state 74
    unaryOp         go to state 75
    mulBinaryExpr   go to state 77
    addBinaryExpr   go to state 219


State 140

  120 eqBinaryOp: "==" •

    $default  reduce using rule 120 (eqBinaryOp)


State 141

  121 eqBinaryOp: "!=" •

    $default  reduce using rule 121 (eqBinaryOp)


State 142

  123 eqBinaryExpr: eqBinaryExpr eqBinaryOp • cmpBinaryExpr

    "<val_id>"               shift, and go to state 35
    "if"                     shift, and go to state 45
    "fn"                     shift, and go to state 46
    "not"                    shift, and go to state 47
    "42"                     shift, and go to state 48
    "0x2a"                   shift, and go to state 49
    "4.2"                    shift, and go to state 50
    "\"dq-string-literal\""  shift, and go to state 51
    "'sq-string-literal'"    shift, and go to state 52
    "("                      shift, and go to state 27
    "{"                      shift, and go to state 28
    "*"                      shift, and go to state 54
    "+"                      shift, and go to state 55
    "-"                      shift, and go to state 56
    "^"                      shift, and go to state 57

    vid             go to state 58
    floatl          go to state 59
    stringl         go to state 60
    parenExpr       go to state 63
    unitExpr        go to state 30
    primaryExpr     go to state 64
    int_expr        go to state 65
    stringls        go to state 66
    vparenExpr      go to state 31
    vtupleExpr      go to state 32
    vstructExpr     go to state 33
    ifThenElseExpr  go to state 67
    chainExpr       go to state 34
    vlambdaExpr     go to state 68
    postfixExpr     go to state 69
    vtcallExpr      go to state 70
    vvcallExpr      go to state 71
    dotNmExpr       go to state 72
    dotIxExpr       go to state 73
    unaryExpr       go to state 74
    unaryOp         go to state 75
    mulBinaryExpr   go to state 77
    addBinaryExpr   go to state 78
    cmpBinaryExpr   go to state 220


State 143

  125 andBinaryExpr: andBinaryExpr "and" • eqBinaryExpr

    "<val_id>"               shift, and go to state 35
    "if"                     shift, and go to state 45
    "fn"                     shift, and go to state 46
    "not"                    shift, and go to state 47
    "42"                     shift, and go to state 48
    "0x2a"                   shift, and go to state 49
    "4.2"                    shift, and go to state 50
    "\"dq-string-literal\""  shift, and go to state 51
    "'sq-string-literal'"    shift, and go to state 52
    "("                      shift, and go to state 27
    "{"                      shift, and go to state 28
    "*"                      shift, and go to state 54
    "+"                      shift, and go to state 55
    "-"                      shift, and go to state 56
    "^"                      shift, and go to state 57

    vid             go to state 58
    floatl          go to state 59
    stringl         go to state 60
    parenExpr       go to state 63
    unitExpr        go to state 30
    primaryExpr     go to state 64
    int_expr        go to state 65
    stringls        go to state 66
    vparenExpr      go to state 31
    vtupleExpr      go to state 32
    vstructExpr     go to state 33
    ifThenElseExpr  go to state 67
    chainExpr       go to state 34
    vlambdaExpr     go to state 68
    postfixExpr     go to state 69
    vtcallExpr      go to state 70
    vvcallExpr      go to state 71
    dotNmExpr       go to state 72
    dotIxExpr       go to state 73
    unaryExpr       go to state 74
    unaryOp         go to state 75
    mulBinaryExpr   go to state 77
    addBinaryExpr   go to state 78
    cmpBinaryExpr   go to state 79
    eqBinaryExpr    go to state 221


State 144

  127 xorBinaryExpr: xorBinaryExpr "xor" • andBinaryExpr

    "<val_id>"               shift, and go to state 35
    "if"                     shift, and go to state 45
    "fn"                     shift, and go to state 46
    "not"                    shift, and go to state 47
    "42"                     shift, and go to state 48
    "0x2a"                   shift, and go to state 49
    "4.2"                    shift, and go to state 50
    "\"dq-string-literal\""  shift, and go to state 51
    "'sq-string-literal'"    shift, and go to state 52
    "("                      shift, and go to state 27
    "{"                      shift, and go to state 28
    "*"                      shift, and go to state 54
    "+"                      shift, and go to state 55
    "-"                      shift, and go to state 56
    "^"                      shift, and go to state 57

    vid             go to state 58
    floatl          go to state 59
    stringl         go to state 60
    parenExpr       go to state 63
    unitExpr        go to state 30
    primaryExpr     go to state 64
    int_expr        go to state 65
    stringls        go to state 66
    vparenExpr      go to state 31
    vtupleExpr      go to state 32
    vstructExpr     go to state 33
    ifThenElseExpr  go to state 67
    chainExpr       go to state 34
    vlambdaExpr     go to state 68
    postfixExpr     go to state 69
    vtcallExpr      go to state 70
    vvcallExpr      go to state 71
    dotNmExpr       go to state 72
    dotIxExpr       go to state 73
    unaryExpr       go to state 74
    unaryOp         go to state 75
    mulBinaryExpr   go to state 77
    addBinaryExpr   go to state 78
    cmpBinaryExpr   go to state 79
    eqBinaryExpr    go to state 80
    andBinaryExpr   go to state 222


State 145

  129 orBinaryExpr: orBinaryExpr "or" • xorBinaryExpr

    "<val_id>"               shift, and go to state 35
    "if"                     shift, and go to state 45
    "fn"                     shift, and go to state 46
    "not"                    shift, and go to state 47
    "42"                     shift, and go to state 48
    "0x2a"                   shift, and go to state 49
    "4.2"                    shift, and go to state 50
    "\"dq-string-literal\""  shift, and go to state 51
    "'sq-string-literal'"    shift, and go to state 52
    "("                      shift, and go to state 27
    "{"                      shift, and go to state 28
    "*"                      shift, and go to state 54
    "+"                      shift, and go to state 55
    "-"                      shift, and go to state 56
    "^"                      shift, and go to state 57

    vid             go to state 58
    floatl          go to state 59
    stringl         go to state 60
    parenExpr       go to state 63
    unitExpr        go to state 30
    primaryExpr     go to state 64
    int_expr        go to state 65
    stringls        go to state 66
    vparenExpr      go to state 31
    vtupleExpr      go to state 32
    vstructExpr     go to state 33
    ifThenElseExpr  go to state 67
    chainExpr       go to state 34
    vlambdaExpr     go to state 68
    postfixExpr     go to state 69
    vtcallExpr      go to state 70
    vvcallExpr      go to state 71
    dotNmExpr       go to state 72
    dotIxExpr       go to state 73
    unaryExpr       go to state 74
    unaryOp         go to state 75
    mulBinaryExpr   go to state 77
    addBinaryExpr   go to state 78
    cmpBinaryExpr   go to state 79
    eqBinaryExpr    go to state 80
    andBinaryExpr   go to state 81
    xorBinaryExpr   go to state 223


State 146

  166 lpatternField: vid • typespec
  167              | vid •

    "<val_id>"  shift, and go to state 35
    "<TypeId>"  shift, and go to state 38
    "("         shift, and go to state 175
    "&"         shift, and go to state 177

    $default  reduce using rule 167 (lpatternField)

    tid              go to state 178
    vid              go to state 179
    typespec         go to state 224
    primaryTypespec  go to state 180
    tupleTypespec    go to state 181
    mod_prefix_tid   go to state 182
    mod_prefix       go to state 183
    postfixTypespec  go to state 184
    ttcall           go to state 185
    tdot             go to state 186
    unaryTypespec    go to state 214


State 147

  172 lpattern_naked: lpatternField •

    $default  reduce using rule 172 (lpattern_naked)


State 148

  173 lpattern_naked: lpattern •

    $default  reduce using rule 173 (lpattern_naked)


State 149

   13 constStmt: "const" lpattern_naked • "=" expr

    "="  shift, and go to state 225


State 150

   14 letStmt: "let" lpattern_naked • "=" expr

    "="  shift, and go to state 226


State 151

   15 varStmt: "var" lpattern_naked • "=" expr

    "="  shift, and go to state 227


State 152

   16 setStmt: "set" expr • "=" expr

    "="  shift, and go to state 228


State 153

   82 chainPrefix: chainPrefixStmt ";" •

    $default  reduce using rule 82 (chainPrefix)


State 154

  164 vstructExprField: vid "=" • expr

    "<val_id>"               shift, and go to state 35
    "if"                     shift, and go to state 45
    "fn"                     shift, and go to state 46
    "not"                    shift, and go to state 47
    "42"                     shift, and go to state 48
    "0x2a"                   shift, and go to state 49
    "4.2"                    shift, and go to state 50
    "\"dq-string-literal\""  shift, and go to state 51
    "'sq-string-literal'"    shift, and go to state 52
    "("                      shift, and go to state 27
    "{"                      shift, and go to state 28
    "*"                      shift, and go to state 54
    "+"                      shift, and go to state 55
    "-"                      shift, and go to state 56
    "^"                      shift, and go to state 57

    vid             go to state 58
    floatl          go to state 59
    stringl         go to state 60
    expr            go to state 229
    parenExpr       go to state 63
    unitExpr        go to state 30
    primaryExpr     go to state 64
    int_expr        go to state 65
    stringls        go to state 66
    vparenExpr      go to state 31
    vtupleExpr      go to state 32
    vstructExpr     go to state 33
    ifThenElseExpr  go to state 67
    chainExpr       go to state 34
    vlambdaExpr     go to state 68
    postfixExpr     go to state 69
    vtcallExpr      go to state 70
    vvcallExpr      go to state 71
    dotNmExpr       go to state 72
    dotIxExpr       go to state 73
    unaryExpr       go to state 74
    unaryOp         go to state 75
    binaryExpr      go to state 76
    mulBinaryExpr   go to state 77
    addBinaryExpr   go to state 78
    cmpBinaryExpr   go to state 79
    eqBinaryExpr    go to state 80
    andBinaryExpr   go to state 81
    xorBinaryExpr   go to state 82
    orBinaryExpr    go to state 83


State 155

   79 chainExpr: "{" expr "}" •

    $default  reduce using rule 79 (chainExpr)


State 156

   80 chainExpr: "{" chainPrefix "}" •

    $default  reduce using rule 80 (chainExpr)


State 157

   83 chainPrefix: chainPrefix chainPrefixStmt • ";"

    ";"  shift, and go to state 230


State 158

   17 discardStmt: expr •
   81 chainExpr: "{" chainPrefix expr • "}"

    "}"  shift, and go to state 231

    $default  reduce using rule 17 (discardStmt)


State 159

  185 vstructExprField_cl: vstructExprField_cl "," • vstructExprField

    "<val_id>"  shift, and go to state 35

    vid               go to state 232
    vstructExprField  go to state 233


State 160

   76 vstructExpr: "{" vstructExprField_cl "}" •

    $default  reduce using rule 76 (vstructExpr)


State 161

   42 importStmt: "import" vid "from" expr • "type" expr

    "type"  shift, and go to state 234


State 162

  175 vpattern: "(" ")" •

    $default  reduce using rule 175 (vpattern)


State 163

  165 vpatternField: vid • typespec

    "<val_id>"  shift, and go to state 35
    "<TypeId>"  shift, and go to state 38
    "("         shift, and go to state 175
    "&"         shift, and go to state 177

    tid              go to state 178
    vid              go to state 179
    typespec         go to state 235
    primaryTypespec  go to state 180
    tupleTypespec    go to state 181
    mod_prefix_tid   go to state 182
    mod_prefix       go to state 183
    postfixTypespec  go to state 184
    ttcall           go to state 185
    tdot             go to state 186
    unaryTypespec    go to state 214


State 164

  178 vpatternField_cl: vpatternField •

    $default  reduce using rule 178 (vpatternField_cl)


State 165

  174 vpattern: "(" vpatternField_cl • ")"
  179 vpatternField_cl: vpatternField_cl • "," vpatternField

    ","  shift, and go to state 236
    ")"  shift, and go to state 237


State 166

  169 tpatternField: tid • typespec

    "<val_id>"  shift, and go to state 35
    "<TypeId>"  shift, and go to state 38
    "("         shift, and go to state 175
    "&"         shift, and go to state 177

    tid              go to state 178
    vid              go to state 179
    typespec         go to state 238
    primaryTypespec  go to state 180
    tupleTypespec    go to state 181
    mod_prefix_tid   go to state 182
    mod_prefix       go to state 183
    postfixTypespec  go to state 184
    ttcall           go to state 185
    tdot             go to state 186
    unaryTypespec    go to state 214


State 167

  168 tpatternField: vid • typespec

    "<val_id>"  shift, and go to state 35
    "<TypeId>"  shift, and go to state 38
    "("         shift, and go to state 175
    "&"         shift, and go to state 177

    tid              go to state 178
    vid              go to state 179
    typespec         go to state 239
    primaryTypespec  go to state 180
    tupleTypespec    go to state 181
    mod_prefix_tid   go to state 182
    mod_prefix       go to state 183
    postfixTypespec  go to state 184
    ttcall           go to state 185
    tdot             go to state 186
    unaryTypespec    go to state 214


State 168

  182 tpatternField_cl: tpatternField •

    $default  reduce using rule 182 (tpatternField_cl)


State 169

  176 tpattern: "[" tpatternField_cl • "]"
  183 tpatternField_cl: tpatternField_cl • "," tpatternField

    ","  shift, and go to state 240
    "]"  shift, and go to state 241


State 170

  177 tpattern: "!" "[" • tpatternField_cl "]"

    "<val_id>"  shift, and go to state 35
    "<TypeId>"  shift, and go to state 38

    tid               go to state 166
    vid               go to state 167
    tpatternField     go to state 168
    tpatternField_cl  go to state 242


State 171

   25 fn_stmt: "fn" vid vpattern "->" • typespec "=" parenExpr

    "<val_id>"  shift, and go to state 35
    "<TypeId>"  shift, and go to state 38
    "("         shift, and go to state 175
    "&"         shift, and go to state 177

    tid              go to state 178
    vid              go to state 179
    typespec         go to state 243
    primaryTypespec  go to state 180
    tupleTypespec    go to state 181
    mod_prefix_tid   go to state 182
    mod_prefix       go to state 183
    postfixTypespec  go to state 184
    ttcall           go to state 185
    tdot             go to state 186
    unaryTypespec    go to state 214


State 172

   27 fn_stmt: "fn" vid vpattern "=" • parenExpr

    "("  shift, and go to state 27
    "{"  shift, and go to state 28

    parenExpr    go to state 244
    unitExpr     go to state 30
    vparenExpr   go to state 31
    vtupleExpr   go to state 32
    vstructExpr  go to state 33
    chainExpr    go to state 34


State 173

   26 fn_stmt: "fn" vid tpattern_seq vpattern • "->" typespec "=" parenExpr
   28        | "fn" vid tpattern_seq vpattern • "=" parenExpr

    "->"  shift, and go to state 245
    "="   shift, and go to state 246


State 174

  187 tpattern_seq: tpattern_seq tpattern •

    $default  reduce using rule 187 (tpattern_seq)


State 175

  141 tupleTypespec: "(" • typespec "," ")"
  142              | "(" • typespec_cl2 ")"

    "<val_id>"  shift, and go to state 35
    "<TypeId>"  shift, and go to state 38
    "("         shift, and go to state 175
    "&"         shift, and go to state 177

    tid              go to state 178
    vid              go to state 179
    typespec         go to state 247
    typespec_cl2     go to state 248
    primaryTypespec  go to state 180
    tupleTypespec    go to state 181
    mod_prefix_tid   go to state 182
    mod_prefix       go to state 183
    postfixTypespec  go to state 184
    ttcall           go to state 185
    tdot             go to state 186
    unaryTypespec    go to state 214


State 176

  155 structTypespec: "{" • structTypespecField_cl "}"

    "<val_id>"  shift, and go to state 35

    vid                     go to state 249
    structTypespecField     go to state 250
    structTypespecField_cl  go to state 251


State 177

  152 unaryTypespec: "&" • unaryTypespec

    "<val_id>"  shift, and go to state 35
    "<TypeId>"  shift, and go to state 38
    "("         shift, and go to state 175
    "&"         shift, and go to state 177

    tid              go to state 178
    vid              go to state 179
    primaryTypespec  go to state 180
    tupleTypespec    go to state 181
    mod_prefix_tid   go to state 182
    mod_prefix       go to state 183
    postfixTypespec  go to state 184
    ttcall           go to state 185
    tdot             go to state 186
    unaryTypespec    go to state 252


State 178

  138 primaryTypespec: tid •

    $default  reduce using rule 138 (primaryTypespec)


State 179

  144 mod_prefix: vid • "."

    "."  shift, and go to state 253


State 180

  146 postfixTypespec: primaryTypespec •

    $default  reduce using rule 146 (postfixTypespec)


State 181

  139 primaryTypespec: tupleTypespec •

    $default  reduce using rule 139 (primaryTypespec)


State 182

  140 primaryTypespec: mod_prefix_tid •

    $default  reduce using rule 140 (primaryTypespec)


State 183

  143 mod_prefix_tid: mod_prefix • tid
  145 mod_prefix: mod_prefix • vid "."

    "<val_id>"  shift, and go to state 35
    "<TypeId>"  shift, and go to state 38

    tid  go to state 254
    vid  go to state 255


State 184

  149 ttcall: postfixTypespec • "[" ttarg_cl "]"
  150 tdot: postfixTypespec • "." "<val_id>"
  151 unaryTypespec: postfixTypespec •

    "."  shift, and go to state 256
    "["  shift, and go to state 257

    $default  reduce using rule 151 (unaryTypespec)


State 185

  147 postfixTypespec: ttcall •

    $default  reduce using rule 147 (postfixTypespec)


State 186

  148 postfixTypespec: tdot •

    $default  reduce using rule 148 (postfixTypespec)


State 187

  153 long_typespec: unaryTypespec •

    $default  reduce using rule 153 (long_typespec)


State 188

   29 type_stmt: "type" tid "=" long_typespec •

    $default  reduce using rule 29 (type_stmt)


State 189

  154 long_typespec: structTypespec •

    $default  reduce using rule 154 (long_typespec)


State 190

   30 type_stmt: "type" tid tpattern_seq "=" • long_typespec

    "<val_id>"  shift, and go to state 35
    "<TypeId>"  shift, and go to state 38
    "("         shift, and go to state 175
    "{"         shift, and go to state 176
    "&"         shift, and go to state 177

    tid              go to state 178
    vid              go to state 179
    primaryTypespec  go to state 180
    tupleTypespec    go to state 181
    mod_prefix_tid   go to state 182
    mod_prefix       go to state 183
    postfixTypespec  go to state 184
    ttcall           go to state 185
    tdot             go to state 186
    unaryTypespec    go to state 187
    long_typespec    go to state 258
    structTypespec   go to state 189


State 191

   32 enum_field_pl: "|" unprefixed_enum_field_pl •
   35 unprefixed_enum_field_pl: unprefixed_enum_field_pl • "|" enum_field

    "|"  shift, and go to state 192

    $default  reduce using rule 32 (enum_field_pl)


State 192

   35 unprefixed_enum_field_pl: unprefixed_enum_field_pl "|" • enum_field

    "<TypeId>"  shift, and go to state 38

    enum_field  go to state 259
    tid         go to state 113


State 193

   37 enum_field: tid "(" • ")"
   38           | tid "(" • typespec_cl1 ")"

    "<val_id>"  shift, and go to state 35
    "<TypeId>"  shift, and go to state 38
    "("         shift, and go to state 175
    ")"         shift, and go to state 260
    "&"         shift, and go to state 177

    tid              go to state 178
    vid              go to state 179
    typespec         go to state 261
    typespec_cl1     go to state 262
    primaryTypespec  go to state 180
    tupleTypespec    go to state 181
    mod_prefix_tid   go to state 182
    mod_prefix       go to state 183
    postfixTypespec  go to state 184
    ttcall           go to state 185
    tdot             go to state 186
    unaryTypespec    go to state 214


State 194

   39 typeclass_stmt: "typeclass" tid "<" tid • typespec ">" "=" "{" expr_sl "}"
   40               | "typeclass" tid "<" tid • typespec ">" tpattern_seq "=" "{" expr_sl "}"

    "<val_id>"  shift, and go to state 35
    "<TypeId>"  shift, and go to state 38
    "("         shift, and go to state 175
    "&"         shift, and go to state 177

    tid              go to state 178
    vid              go to state 179
    typespec         go to state 263
    primaryTypespec  go to state 180
    tupleTypespec    go to state 181
    mod_prefix_tid   go to state 182
    mod_prefix       go to state 183
    postfixTypespec  go to state 184
    ttcall           go to state 185
    tdot             go to state 186
    unaryTypespec    go to state 214


State 195

   77 ifThenElseExpr: "if" parenExpr "then" • parenExpr
   78               | "if" parenExpr "then" • parenExpr "else" primaryExpr

    "("  shift, and go to state 27
    "{"  shift, and go to state 28

    parenExpr    go to state 264
    unitExpr     go to state 30
    vparenExpr   go to state 31
    vtupleExpr   go to state 32
    vstructExpr  go to state 33
    chainExpr    go to state 34


State 196

  171 lpattern: "(" ")" •

    $default  reduce using rule 171 (lpattern)


State 197

  180 lpatternField_cl: lpatternField •

    $default  reduce using rule 180 (lpatternField_cl)


State 198

  170 lpattern: "(" lpatternField_cl • ")"
  181 lpatternField_cl: lpatternField_cl • "," lpatternField

    ","  shift, and go to state 265
    ")"  shift, and go to state 266


State 199

   84 vlambdaExpr: "fn" lpattern "=" • parenExpr

    "("  shift, and go to state 27
    "{"  shift, and go to state 28

    parenExpr    go to state 267
    unitExpr     go to state 30
    vparenExpr   go to state 31
    vtupleExpr   go to state 32
    vstructExpr  go to state 33
    chainExpr    go to state 34


State 200

   74 vtupleExpr: "(" expr "," ")" •

    $default  reduce using rule 74 (vtupleExpr)


State 201

   51 expr_cl2: expr "," expr •

    $default  reduce using rule 51 (expr_cl2)


State 202

   52 expr_cl2: expr_cl2 "," expr •

    $default  reduce using rule 52 (expr_cl2)


State 203

   93 dotNmExpr: postfixExpr "." "<val_id>" •

    $default  reduce using rule 93 (dotNmExpr)


State 204

   94 dotNmExpr: postfixExpr "." "<TypeId>" •

    $default  reduce using rule 94 (dotNmExpr)


State 205

   96 dotIxExpr: postfixExpr "." "(" • expr ")"

    "<val_id>"               shift, and go to state 35
    "if"                     shift, and go to state 45
    "fn"                     shift, and go to state 46
    "not"                    shift, and go to state 47
    "42"                     shift, and go to state 48
    "0x2a"                   shift, and go to state 49
    "4.2"                    shift, and go to state 50
    "\"dq-string-literal\""  shift, and go to state 51
    "'sq-string-literal'"    shift, and go to state 52
    "("                      shift, and go to state 27
    "{"                      shift, and go to state 28
    "*"                      shift, and go to state 54
    "+"                      shift, and go to state 55
    "-"                      shift, and go to state 56
    "^"                      shift, and go to state 57

    vid             go to state 58
    floatl          go to state 59
    stringl         go to state 60
    expr            go to state 268
    parenExpr       go to state 63
    unitExpr        go to state 30
    primaryExpr     go to state 64
    int_expr        go to state 65
    stringls        go to state 66
    vparenExpr      go to state 31
    vtupleExpr      go to state 32
    vstructExpr     go to state 33
    ifThenElseExpr  go to state 67
    chainExpr       go to state 34
    vlambdaExpr     go to state 68
    postfixExpr     go to state 69
    vtcallExpr      go to state 70
    vvcallExpr      go to state 71
    dotNmExpr       go to state 72
    dotIxExpr       go to state 73
    unaryExpr       go to state 74
    unaryOp         go to state 75
    binaryExpr      go to state 76
    mulBinaryExpr   go to state 77
    addBinaryExpr   go to state 78
    cmpBinaryExpr   go to state 79
    eqBinaryExpr    go to state 80
    andBinaryExpr   go to state 81
    xorBinaryExpr   go to state 82
    orBinaryExpr    go to state 83


State 206

   95 dotIxExpr: postfixExpr "." int_expr •

    $default  reduce using rule 95 (dotIxExpr)


State 207

   91 vvcallExpr: postfixExpr "(" ")" •

    $default  reduce using rule 91 (vvcallExpr)


State 208

   49 expr_cl1: expr •

    $default  reduce using rule 49 (expr_cl1)


State 209

   50 expr_cl1: expr_cl1 • "," expr
   92 vvcallExpr: postfixExpr "(" expr_cl1 • ")"

    ","  shift, and go to state 269
    ")"  shift, and go to state 270


State 210

   60 unitExpr: "(" • ")"
   73 vparenExpr: "(" • expr ")"
   74 vtupleExpr: "(" • expr "," ")"
   75           | "(" • expr_cl2 ")"
  141 tupleTypespec: "(" • typespec "," ")"
  142              | "(" • typespec_cl2 ")"

    "<val_id>"               shift, and go to state 35
    "<TypeId>"               shift, and go to state 38
    "if"                     shift, and go to state 45
    "fn"                     shift, and go to state 46
    "not"                    shift, and go to state 47
    "42"                     shift, and go to state 48
    "0x2a"                   shift, and go to state 49
    "4.2"                    shift, and go to state 50
    "\"dq-string-literal\""  shift, and go to state 51
    "'sq-string-literal'"    shift, and go to state 52
    "("                      shift, and go to state 210
    ")"                      shift, and go to state 53
    "{"                      shift, and go to state 28
    "*"                      shift, and go to state 54
    "+"                      shift, and go to state 55
    "-"                      shift, and go to state 56
    "^"                      shift, and go to state 57
    "&"                      shift, and go to state 177

    tid              go to state 178
    vid              go to state 211
    floatl           go to state 59
    stringl          go to state 60
    expr             go to state 61
    expr_cl2         go to state 62
    parenExpr        go to state 63
    unitExpr         go to state 30
    primaryExpr      go to state 64
    int_expr         go to state 65
    stringls         go to state 66
    vparenExpr       go to state 31
    vtupleExpr       go to state 32
    vstructExpr      go to state 33
    ifThenElseExpr   go to state 67
    chainExpr        go to state 34
    vlambdaExpr      go to state 68
    postfixExpr      go to state 69
    vtcallExpr       go to state 70
    vvcallExpr       go to state 71
    dotNmExpr        go to state 72
    dotIxExpr        go to state 73
    unaryExpr        go to state 74
    unaryOp          go to state 75
    binaryExpr       go to state 76
    mulBinaryExpr    go to state 77
    addBinaryExpr    go to state 78
    cmpBinaryExpr    go to state 79
    eqBinaryExpr     go to state 80
    andBinaryExpr    go to state 81
    xorBinaryExpr    go to state 82
    orBinaryExpr     go to state 83
    typespec         go to state 247
    typespec_cl2     go to state 248
    primaryTypespec  go to state 180
    tupleTypespec    go to state 181
    mod_prefix_tid   go to state 182
    mod_prefix       go to state 183
    postfixTypespec  go to state 184
    ttcall           go to state 185
    tdot             go to state 186
    unaryTypespec    go to state 214


State 211

   63 primaryExpr: vid •
  144 mod_prefix: vid • "."

    "."  shift, and go to state 253

    "."       [reduce using rule 63 (primaryExpr)]
    $default  reduce using rule 63 (primaryExpr)


State 212

  161 vtarg: expr •

    $default  reduce using rule 161 (vtarg)


State 213

  160 vtarg: typespec •

    $default  reduce using rule 160 (vtarg)


State 214

  130 typespec: unaryTypespec •

    $default  reduce using rule 130 (typespec)


State 215

  162 vtarg_cl: vtarg •

    $default  reduce using rule 162 (vtarg_cl)


State 216

   90 vtcallExpr: postfixExpr "[" vtarg_cl • "]"
  163 vtarg_cl: vtarg_cl • "," vtarg

    ","  shift, and go to state 271
    "]"  shift, and go to state 272


State 217

  109 mulBinaryExpr: mulBinaryExpr mulBinaryOp unaryExpr •

    $default  reduce using rule 109 (mulBinaryExpr)


State 218

  109 mulBinaryExpr: mulBinaryExpr • mulBinaryOp unaryExpr
  113 addBinaryExpr: addBinaryExpr addBinaryOp mulBinaryExpr •

    "*"  shift, and go to state 128
    "/"  shift, and go to state 129
    "%"  shift, and go to state 130

    $default  reduce using rule 113 (addBinaryExpr)

    mulBinaryOp  go to state 131


State 219

  113 addBinaryExpr: addBinaryExpr • addBinaryOp mulBinaryExpr
  119 cmpBinaryExpr: cmpBinaryExpr cmpBinaryOp addBinaryExpr •

    "+"  shift, and go to state 132
    "-"  shift, and go to state 133

    $default  reduce using rule 119 (cmpBinaryExpr)

    addBinaryOp  go to state 134


State 220

  119 cmpBinaryExpr: cmpBinaryExpr • cmpBinaryOp addBinaryExpr
  123 eqBinaryExpr: eqBinaryExpr eqBinaryOp cmpBinaryExpr •

    "<"   shift, and go to state 135
    "<="  shift, and go to state 136
    ">"   shift, and go to state 137
    ">="  shift, and go to state 138

    $default  reduce using rule 123 (eqBinaryExpr)

    cmpBinaryOp  go to state 139


State 221

  123 eqBinaryExpr: eqBinaryExpr • eqBinaryOp cmpBinaryExpr
  125 andBinaryExpr: andBinaryExpr "and" eqBinaryExpr •

    "=="  shift, and go to state 140
    "!="  shift, and go to state 141

    $default  reduce using rule 125 (andBinaryExpr)

    eqBinaryOp  go to state 142


State 222

  125 andBinaryExpr: andBinaryExpr • "and" eqBinaryExpr
  127 xorBinaryExpr: xorBinaryExpr "xor" andBinaryExpr •

    "and"  shift, and go to state 143

    $default  reduce using rule 127 (xorBinaryExpr)


State 223

  127 xorBinaryExpr: xorBinaryExpr • "xor" andBinaryExpr
  129 orBinaryExpr: orBinaryExpr "or" xorBinaryExpr •

    "xor"  shift, and go to state 144

    $default  reduce using rule 129 (orBinaryExpr)


State 224

  166 lpatternField: vid typespec •

    $default  reduce using rule 166 (lpatternField)


State 225

   13 constStmt: "const" lpattern_naked "=" • expr

    "<val_id>"               shift, and go to state 35
    "if"                     shift, and go to state 45
    "fn"                     shift, and go to state 46
    "not"                    shift, and go to state 47
    "42"                     shift, and go to state 48
    "0x2a"                   shift, and go to state 49
    "4.2"                    shift, and go to state 50
    "\"dq-string-literal\""  shift, and go to state 51
    "'sq-string-literal'"    shift, and go to state 52
    "("                      shift, and go to state 27
    "{"                      shift, and go to state 28
    "*"                      shift, and go to state 54
    "+"                      shift, and go to state 55
    "-"                      shift, and go to state 56
    "^"                      shift, and go to state 57

    vid             go to state 58
    floatl          go to state 59
    stringl         go to state 60
    expr            go to state 273
    parenExpr       go to state 63
    unitExpr        go to state 30
    primaryExpr     go to state 64
    int_expr        go to state 65
    stringls        go to state 66
    vparenExpr      go to state 31
    vtupleExpr      go to state 32
    vstructExpr     go to state 33
    ifThenElseExpr  go to state 67
    chainExpr       go to state 34
    vlambdaExpr     go to state 68
    postfixExpr     go to state 69
    vtcallExpr      go to state 70
    vvcallExpr      go to state 71
    dotNmExpr       go to state 72
    dotIxExpr       go to state 73
    unaryExpr       go to state 74
    unaryOp         go to state 75
    binaryExpr      go to state 76
    mulBinaryExpr   go to state 77
    addBinaryExpr   go to state 78
    cmpBinaryExpr   go to state 79
    eqBinaryExpr    go to state 80
    andBinaryExpr   go to state 81
    xorBinaryExpr   go to state 82
    orBinaryExpr    go to state 83


State 226

   14 letStmt: "let" lpattern_naked "=" • expr

    "<val_id>"               shift, and go to state 35
    "if"                     shift, and go to state 45
    "fn"                     shift, and go to state 46
    "not"                    shift, and go to state 47
    "42"                     shift, and go to state 48
    "0x2a"                   shift, and go to state 49
    "4.2"                    shift, and go to state 50
    "\"dq-string-literal\""  shift, and go to state 51
    "'sq-string-literal'"    shift, and go to state 52
    "("                      shift, and go to state 27
    "{"                      shift, and go to state 28
    "*"                      shift, and go to state 54
    "+"                      shift, and go to state 55
    "-"                      shift, and go to state 56
    "^"                      shift, and go to state 57

    vid             go to state 58
    floatl          go to state 59
    stringl         go to state 60
    expr            go to state 274
    parenExpr       go to state 63
    unitExpr        go to state 30
    primaryExpr     go to state 64
    int_expr        go to state 65
    stringls        go to state 66
    vparenExpr      go to state 31
    vtupleExpr      go to state 32
    vstructExpr     go to state 33
    ifThenElseExpr  go to state 67
    chainExpr       go to state 34
    vlambdaExpr     go to state 68
    postfixExpr     go to state 69
    vtcallExpr      go to state 70
    vvcallExpr      go to state 71
    dotNmExpr       go to state 72
    dotIxExpr       go to state 73
    unaryExpr       go to state 74
    unaryOp         go to state 75
    binaryExpr      go to state 76
    mulBinaryExpr   go to state 77
    addBinaryExpr   go to state 78
    cmpBinaryExpr   go to state 79
    eqBinaryExpr    go to state 80
    andBinaryExpr   go to state 81
    xorBinaryExpr   go to state 82
    orBinaryExpr    go to state 83


State 227

   15 varStmt: "var" lpattern_naked "=" • expr

    "<val_id>"               shift, and go to state 35
    "if"                     shift, and go to state 45
    "fn"                     shift, and go to state 46
    "not"                    shift, and go to state 47
    "42"                     shift, and go to state 48
    "0x2a"                   shift, and go to state 49
    "4.2"                    shift, and go to state 50
    "\"dq-string-literal\""  shift, and go to state 51
    "'sq-string-literal'"    shift, and go to state 52
    "("                      shift, and go to state 27
    "{"                      shift, and go to state 28
    "*"                      shift, and go to state 54
    "+"                      shift, and go to state 55
    "-"                      shift, and go to state 56
    "^"                      shift, and go to state 57

    vid             go to state 58
    floatl          go to state 59
    stringl         go to state 60
    expr            go to state 275
    parenExpr       go to state 63
    unitExpr        go to state 30
    primaryExpr     go to state 64
    int_expr        go to state 65
    stringls        go to state 66
    vparenExpr      go to state 31
    vtupleExpr      go to state 32
    vstructExpr     go to state 33
    ifThenElseExpr  go to state 67
    chainExpr       go to state 34
    vlambdaExpr     go to state 68
    postfixExpr     go to state 69
    vtcallExpr      go to state 70
    vvcallExpr      go to state 71
    dotNmExpr       go to state 72
    dotIxExpr       go to state 73
    unaryExpr       go to state 74
    unaryOp         go to state 75
    binaryExpr      go to state 76
    mulBinaryExpr   go to state 77
    addBinaryExpr   go to state 78
    cmpBinaryExpr   go to state 79
    eqBinaryExpr    go to state 80
    andBinaryExpr   go to state 81
    xorBinaryExpr   go to state 82
    orBinaryExpr    go to state 83


State 228

   16 setStmt: "set" expr "=" • expr

    "<val_id>"               shift, and go to state 35
    "if"                     shift, and go to state 45
    "fn"                     shift, and go to state 46
    "not"                    shift, and go to state 47
    "42"                     shift, and go to state 48
    "0x2a"                   shift, and go to state 49
    "4.2"                    shift, and go to state 50
    "\"dq-string-literal\""  shift, and go to state 51
    "'sq-string-literal'"    shift, and go to state 52
    "("                      shift, and go to state 27
    "{"                      shift, and go to state 28
    "*"                      shift, and go to state 54
    "+"                      shift, and go to state 55
    "-"                      shift, and go to state 56
    "^"                      shift, and go to state 57

    vid             go to state 58
    floatl          go to state 59
    stringl         go to state 60
    expr            go to state 276
    parenExpr       go to state 63
    unitExpr        go to state 30
    primaryExpr     go to state 64
    int_expr        go to state 65
    stringls        go to state 66
    vparenExpr      go to state 31
    vtupleExpr      go to state 32
    vstructExpr     go to state 33
    ifThenElseExpr  go to state 67
    chainExpr       go to state 34
    vlambdaExpr     go to state 68
    postfixExpr     go to state 69
    vtcallExpr      go to state 70
    vvcallExpr      go to state 71
    dotNmExpr       go to state 72
    dotIxExpr       go to state 73
    unaryExpr       go to state 74
    unaryOp         go to state 75
    binaryExpr      go to state 76
    mulBinaryExpr   go to state 77
    addBinaryExpr   go to state 78
    cmpBinaryExpr   go to state 79
    eqBinaryExpr    go to state 80
    andBinaryExpr   go to state 81
    xorBinaryExpr   go to state 82
    orBinaryExpr    go to state 83


State 229

  164 vstructExprField: vid "=" expr •

    $default  reduce using rule 164 (vstructExprField)


State 230

   83 chainPrefix: chainPrefix chainPrefixStmt ";" •

    $default  reduce using rule 83 (chainPrefix)


State 231

   81 chainExpr: "{" chainPrefix expr "}" •

    $default  reduce using rule 81 (chainExpr)


State 232

  164 vstructExprField: vid • "=" expr

    "="  shift, and go to state 154


State 233

  185 vstructExprField_cl: vstructExprField_cl "," vstructExprField •

    $default  reduce using rule 185 (vstructExprField_cl)


State 234

   42 importStmt: "import" vid "from" expr "type" • expr

    "<val_id>"               shift, and go to state 35
    "if"                     shift, and go to state 45
    "fn"                     shift, and go to state 46
    "not"                    shift, and go to state 47
    "42"                     shift, and go to state 48
    "0x2a"                   shift, and go to state 49
    "4.2"                    shift, and go to state 50
    "\"dq-string-literal\""  shift, and go to state 51
    "'sq-string-literal'"    shift, and go to state 52
    "("                      shift, and go to state 27
    "{"                      shift, and go to state 28
    "*"                      shift, and go to state 54
    "+"                      shift, and go to state 55
    "-"                      shift, and go to state 56
    "^"                      shift, and go to state 57

    vid             go to state 58
    floatl          go to state 59
    stringl         go to state 60
    expr            go to state 277
    parenExpr       go to state 63
    unitExpr        go to state 30
    primaryExpr     go to state 64
    int_expr        go to state 65
    stringls        go to state 66
    vparenExpr      go to state 31
    vtupleExpr      go to state 32
    vstructExpr     go to state 33
    ifThenElseExpr  go to state 67
    chainExpr       go to state 34
    vlambdaExpr     go to state 68
    postfixExpr     go to state 69
    vtcallExpr      go to state 70
    vvcallExpr      go to state 71
    dotNmExpr       go to state 72
    dotIxExpr       go to state 73
    unaryExpr       go to state 74
    unaryOp         go to state 75
    binaryExpr      go to state 76
    mulBinaryExpr   go to state 77
    addBinaryExpr   go to state 78
    cmpBinaryExpr   go to state 79
    eqBinaryExpr    go to state 80
    andBinaryExpr   go to state 81
    xorBinaryExpr   go to state 82
    orBinaryExpr    go to state 83


State 235

  165 vpatternField: vid typespec •

    $default  reduce using rule 165 (vpatternField)


State 236

  179 vpatternField_cl: vpatternField_cl "," • vpatternField

    "<val_id>"  shift, and go to state 35

    vid            go to state 163
    vpatternField  go to state 278


State 237

  174 vpattern: "(" vpatternField_cl ")" •

    $default  reduce using rule 174 (vpattern)


State 238

  169 tpatternField: tid typespec •

    $default  reduce using rule 169 (tpatternField)


State 239

  168 tpatternField: vid typespec •

    $default  reduce using rule 168 (tpatternField)


State 240

  183 tpatternField_cl: tpatternField_cl "," • tpatternField

    "<val_id>"  shift, and go to state 35
    "<TypeId>"  shift, and go to state 38

    tid            go to state 166
    vid            go to state 167
    tpatternField  go to state 279


State 241

  176 tpattern: "[" tpatternField_cl "]" •

    $default  reduce using rule 176 (tpattern)


State 242

  177 tpattern: "!" "[" tpatternField_cl • "]"
  183 tpatternField_cl: tpatternField_cl • "," tpatternField

    ","  shift, and go to state 240
    "]"  shift, and go to state 280


State 243

   25 fn_stmt: "fn" vid vpattern "->" typespec • "=" parenExpr

    "="  shift, and go to state 281


State 244

   27 fn_stmt: "fn" vid vpattern "=" parenExpr •

    $default  reduce using rule 27 (fn_stmt)


State 245

   26 fn_stmt: "fn" vid tpattern_seq vpattern "->" • typespec "=" parenExpr

    "<val_id>"  shift, and go to state 35
    "<TypeId>"  shift, and go to state 38
    "("         shift, and go to state 175
    "&"         shift, and go to state 177

    tid              go to state 178
    vid              go to state 179
    typespec         go to state 282
    primaryTypespec  go to state 180
    tupleTypespec    go to state 181
    mod_prefix_tid   go to state 182
    mod_prefix       go to state 183
    postfixTypespec  go to state 184
    ttcall           go to state 185
    tdot             go to state 186
    unaryTypespec    go to state 214


State 246

   28 fn_stmt: "fn" vid tpattern_seq vpattern "=" • parenExpr

    "("  shift, and go to state 27
    "{"  shift, and go to state 28

    parenExpr    go to state 283
    unitExpr     go to state 30
    vparenExpr   go to state 31
    vtupleExpr   go to state 32
    vstructExpr  go to state 33
    chainExpr    go to state 34


State 247

  133 typespec_cl2: typespec • "," typespec
  141 tupleTypespec: "(" typespec • "," ")"

    ","  shift, and go to state 284


State 248

  134 typespec_cl2: typespec_cl2 • "," typespec
  142 tupleTypespec: "(" typespec_cl2 • ")"

    ","  shift, and go to state 285
    ")"  shift, and go to state 286


State 249

  135 structTypespecField: vid • typespec

    "<val_id>"  shift, and go to state 35
    "<TypeId>"  shift, and go to state 38
    "("         shift, and go to state 175
    "&"         shift, and go to state 177

    tid              go to state 178
    vid              go to state 179
    typespec         go to state 287
    primaryTypespec  go to state 180
    tupleTypespec    go to state 181
    mod_prefix_tid   go to state 182
    mod_prefix       go to state 183
    postfixTypespec  go to state 184
    ttcall           go to state 185
    tdot             go to state 186
    unaryTypespec    go to state 214


State 250

  136 structTypespecField_cl: structTypespecField •

    $default  reduce using rule 136 (structTypespecField_cl)


State 251

  137 structTypespecField_cl: structTypespecField_cl • "," structTypespecField
  155 structTypespec: "{" structTypespecField_cl • "}"

    ","  shift, and go to state 288
    "}"  shift, and go to state 289


State 252

  152 unaryTypespec: "&" unaryTypespec •

    $default  reduce using rule 152 (unaryTypespec)


State 253

  144 mod_prefix: vid "." •

    $default  reduce using rule 144 (mod_prefix)


State 254

  143 mod_prefix_tid: mod_prefix tid •

    $default  reduce using rule 143 (mod_prefix_tid)


State 255

  145 mod_prefix: mod_prefix vid • "."

    "."  shift, and go to state 290


State 256

  150 tdot: postfixTypespec "." • "<val_id>"

    "<val_id>"  shift, and go to state 291


State 257

  149 ttcall: postfixTypespec "[" • ttarg_cl "]"

    "<val_id>"               shift, and go to state 35
    "<TypeId>"               shift, and go to state 38
    "if"                     shift, and go to state 45
    "fn"                     shift, and go to state 46
    "not"                    shift, and go to state 47
    "42"                     shift, and go to state 48
    "0x2a"                   shift, and go to state 49
    "4.2"                    shift, and go to state 50
    "\"dq-string-literal\""  shift, and go to state 51
    "'sq-string-literal'"    shift, and go to state 52
    "("                      shift, and go to state 210
    "{"                      shift, and go to state 28
    "*"                      shift, and go to state 54
    "+"                      shift, and go to state 55
    "-"                      shift, and go to state 56
    "^"                      shift, and go to state 57
    "&"                      shift, and go to state 177

    tid              go to state 178
    vid              go to state 211
    floatl           go to state 59
    stringl          go to state 60
    expr             go to state 292
    parenExpr        go to state 63
    unitExpr         go to state 30
    primaryExpr      go to state 64
    int_expr         go to state 65
    stringls         go to state 66
    vparenExpr       go to state 31
    vtupleExpr       go to state 32
    vstructExpr      go to state 33
    ifThenElseExpr   go to state 67
    chainExpr        go to state 34
    vlambdaExpr      go to state 68
    postfixExpr      go to state 69
    vtcallExpr       go to state 70
    vvcallExpr       go to state 71
    dotNmExpr        go to state 72
    dotIxExpr        go to state 73
    unaryExpr        go to state 74
    unaryOp          go to state 75
    binaryExpr       go to state 76
    mulBinaryExpr    go to state 77
    addBinaryExpr    go to state 78
    cmpBinaryExpr    go to state 79
    eqBinaryExpr     go to state 80
    andBinaryExpr    go to state 81
    xorBinaryExpr    go to state 82
    orBinaryExpr     go to state 83
    typespec         go to state 293
    primaryTypespec  go to state 180
    tupleTypespec    go to state 181
    mod_prefix_tid   go to state 182
    mod_prefix       go to state 183
    postfixTypespec  go to state 184
    ttcall           go to state 185
    tdot             go to state 186
    unaryTypespec    go to state 214
    ttarg            go to state 294
    ttarg_cl         go to state 295


State 258

   30 type_stmt: "type" tid tpattern_seq "=" long_typespec •

    $default  reduce using rule 30 (type_stmt)


State 259

   35 unprefixed_enum_field_pl: unprefixed_enum_field_pl "|" enum_field •

    $default  reduce using rule 35 (unprefixed_enum_field_pl)


State 260

   37 enum_field: tid "(" ")" •

    $default  reduce using rule 37 (enum_field)


State 261

  131 typespec_cl1: typespec •

    $default  reduce using rule 131 (typespec_cl1)


State 262

   38 enum_field: tid "(" typespec_cl1 • ")"
  132 typespec_cl1: typespec_cl1 • "," typespec

    ","  shift, and go to state 296
    ")"  shift, and go to state 297


State 263

   39 typeclass_stmt: "typeclass" tid "<" tid typespec • ">" "=" "{" expr_sl "}"
   40               | "typeclass" tid "<" tid typespec • ">" tpattern_seq "=" "{" expr_sl "}"

    ">"  shift, and go to state 298


State 264

   77 ifThenElseExpr: "if" parenExpr "then" parenExpr •
   78               | "if" parenExpr "then" parenExpr • "else" primaryExpr

    "else"  shift, and go to state 299

    $default  reduce using rule 77 (ifThenElseExpr)


State 265

  181 lpatternField_cl: lpatternField_cl "," • lpatternField

    "<val_id>"  shift, and go to state 35

    vid            go to state 146
    lpatternField  go to state 300


State 266

  170 lpattern: "(" lpatternField_cl ")" •

    $default  reduce using rule 170 (lpattern)


State 267

   84 vlambdaExpr: "fn" lpattern "=" parenExpr •

    $default  reduce using rule 84 (vlambdaExpr)


State 268

   96 dotIxExpr: postfixExpr "." "(" expr • ")"

    ")"  shift, and go to state 301


State 269

   50 expr_cl1: expr_cl1 "," • expr

    "<val_id>"               shift, and go to state 35
    "if"                     shift, and go to state 45
    "fn"                     shift, and go to state 46
    "not"                    shift, and go to state 47
    "42"                     shift, and go to state 48
    "0x2a"                   shift, and go to state 49
    "4.2"                    shift, and go to state 50
    "\"dq-string-literal\""  shift, and go to state 51
    "'sq-string-literal'"    shift, and go to state 52
    "("                      shift, and go to state 27
    "{"                      shift, and go to state 28
    "*"                      shift, and go to state 54
    "+"                      shift, and go to state 55
    "-"                      shift, and go to state 56
    "^"                      shift, and go to state 57

    vid             go to state 58
    floatl          go to state 59
    stringl         go to state 60
    expr            go to state 302
    parenExpr       go to state 63
    unitExpr        go to state 30
    primaryExpr     go to state 64
    int_expr        go to state 65
    stringls        go to state 66
    vparenExpr      go to state 31
    vtupleExpr      go to state 32
    vstructExpr     go to state 33
    ifThenElseExpr  go to state 67
    chainExpr       go to state 34
    vlambdaExpr     go to state 68
    postfixExpr     go to state 69
    vtcallExpr      go to state 70
    vvcallExpr      go to state 71
    dotNmExpr       go to state 72
    dotIxExpr       go to state 73
    unaryExpr       go to state 74
    unaryOp         go to state 75
    binaryExpr      go to state 76
    mulBinaryExpr   go to state 77
    addBinaryExpr   go to state 78
    cmpBinaryExpr   go to state 79
    eqBinaryExpr    go to state 80
    andBinaryExpr   go to state 81
    xorBinaryExpr   go to state 82
    orBinaryExpr    go to state 83


State 270

   92 vvcallExpr: postfixExpr "(" expr_cl1 ")" •

    $default  reduce using rule 92 (vvcallExpr)


State 271

  163 vtarg_cl: vtarg_cl "," • vtarg

    "<val_id>"               shift, and go to state 35
    "<TypeId>"               shift, and go to state 38
    "if"                     shift, and go to state 45
    "fn"                     shift, and go to state 46
    "not"                    shift, and go to state 47
    "42"                     shift, and go to state 48
    "0x2a"                   shift, and go to state 49
    "4.2"                    shift, and go to state 50
    "\"dq-string-literal\""  shift, and go to state 51
    "'sq-string-literal'"    shift, and go to state 52
    "("                      shift, and go to state 210
    "{"                      shift, and go to state 28
    "*"                      shift, and go to state 54
    "+"                      shift, and go to state 55
    "-"                      shift, and go to state 56
    "^"                      shift, and go to state 57
    "&"                      shift, and go to state 177

    tid              go to state 178
    vid              go to state 211
    floatl           go to state 59
    stringl          go to state 60
    expr             go to state 212
    parenExpr        go to state 63
    unitExpr         go to state 30
    primaryExpr      go to state 64
    int_expr         go to state 65
    stringls         go to state 66
    vparenExpr       go to state 31
    vtupleExpr       go to state 32
    vstructExpr      go to state 33
    ifThenElseExpr   go to state 67
    chainExpr        go to state 34
    vlambdaExpr      go to state 68
    postfixExpr      go to state 69
    vtcallExpr       go to state 70
    vvcallExpr       go to state 71
    dotNmExpr        go to state 72
    dotIxExpr        go to state 73
    unaryExpr        go to state 74
    unaryOp          go to state 75
    binaryExpr       go to state 76
    mulBinaryExpr    go to state 77
    addBinaryExpr    go to state 78
    cmpBinaryExpr    go to state 79
    eqBinaryExpr     go to state 80
    andBinaryExpr    go to state 81
    xorBinaryExpr    go to state 82
    orBinaryExpr     go to state 83
    typespec         go to state 213
    primaryTypespec  go to state 180
    tupleTypespec    go to state 181
    mod_prefix_tid   go to state 182
    mod_prefix       go to state 183
    postfixTypespec  go to state 184
    ttcall           go to state 185
    tdot             go to state 186
    unaryTypespec    go to state 214
    vtarg            go to state 303


State 272

   90 vtcallExpr: postfixExpr "[" vtarg_cl "]" •

    $default  reduce using rule 90 (vtcallExpr)


State 273

   13 constStmt: "const" lpattern_naked "=" expr •

    $default  reduce using rule 13 (constStmt)


State 274

   14 letStmt: "let" lpattern_naked "=" expr •

    $default  reduce using rule 14 (letStmt)


State 275

   15 varStmt: "var" lpattern_naked "=" expr •

    $default  reduce using rule 15 (varStmt)


State 276

   16 setStmt: "set" expr "=" expr •

    $default  reduce using rule 16 (setStmt)


State 277

   42 importStmt: "import" vid "from" expr "type" expr •

    $default  reduce using rule 42 (importStmt)


State 278

  179 vpatternField_cl: vpatternField_cl "," vpatternField •

    $default  reduce using rule 179 (vpatternField_cl)


State 279

  183 tpatternField_cl: tpatternField_cl "," tpatternField •

    $default  reduce using rule 183 (tpatternField_cl)


State 280

  177 tpattern: "!" "[" tpatternField_cl "]" •

    $default  reduce using rule 177 (tpattern)


State 281

   25 fn_stmt: "fn" vid vpattern "->" typespec "=" • parenExpr

    "("  shift, and go to state 27
    "{"  shift, and go to state 28

    parenExpr    go to state 304
    unitExpr     go to state 30
    vparenExpr   go to state 31
    vtupleExpr   go to state 32
    vstructExpr  go to state 33
    chainExpr    go to state 34


State 282

   26 fn_stmt: "fn" vid tpattern_seq vpattern "->" typespec • "=" parenExpr

    "="  shift, and go to state 305


State 283

   28 fn_stmt: "fn" vid tpattern_seq vpattern "=" parenExpr •

    $default  reduce using rule 28 (fn_stmt)


State 284

  133 typespec_cl2: typespec "," • typespec
  141 tupleTypespec: "(" typespec "," • ")"

    "<val_id>"  shift, and go to state 35
    "<TypeId>"  shift, and go to state 38
    "("         shift, and go to state 175
    ")"         shift, and go to state 306
    "&"         shift, and go to state 177

    tid              go to state 178
    vid              go to state 179
    typespec         go to state 307
    primaryTypespec  go to state 180
    tupleTypespec    go to state 181
    mod_prefix_tid   go to state 182
    mod_prefix       go to state 183
    postfixTypespec  go to state 184
    ttcall           go to state 185
    tdot             go to state 186
    unaryTypespec    go to state 214


State 285

  134 typespec_cl2: typespec_cl2 "," • typespec

    "<val_id>"  shift, and go to state 35
    "<TypeId>"  shift, and go to state 38
    "("         shift, and go to state 175
    "&"         shift, and go to state 177

    tid              go to state 178
    vid              go to state 179
    typespec         go to state 308
    primaryTypespec  go to state 180
    tupleTypespec    go to state 181
    mod_prefix_tid   go to state 182
    mod_prefix       go to state 183
    postfixTypespec  go to state 184
    ttcall           go to state 185
    tdot             go to state 186
    unaryTypespec    go to state 214


State 286

  142 tupleTypespec: "(" typespec_cl2 ")" •

    $default  reduce using rule 142 (tupleTypespec)


State 287

  135 structTypespecField: vid typespec •

    $default  reduce using rule 135 (structTypespecField)


State 288

  137 structTypespecField_cl: structTypespecField_cl "," • structTypespecField

    "<val_id>"  shift, and go to state 35

    vid                  go to state 249
    structTypespecField  go to state 309


State 289

  155 structTypespec: "{" structTypespecField_cl "}" •

    $default  reduce using rule 155 (structTypespec)


State 290

  145 mod_prefix: mod_prefix vid "." •

    $default  reduce using rule 145 (mod_prefix)


State 291

  150 tdot: postfixTypespec "." "<val_id>" •

    $default  reduce using rule 150 (tdot)


State 292

  157 ttarg: expr •

    $default  reduce using rule 157 (ttarg)


State 293

  156 ttarg: typespec •

    $default  reduce using rule 156 (ttarg)


State 294

  158 ttarg_cl: ttarg •

    $default  reduce using rule 158 (ttarg_cl)


State 295

  149 ttcall: postfixTypespec "[" ttarg_cl • "]"
  159 ttarg_cl: ttarg_cl • "," ttarg

    ","  shift, and go to state 310
    "]"  shift, and go to state 311


State 296

  132 typespec_cl1: typespec_cl1 "," • typespec

    "<val_id>"  shift, and go to state 35
    "<TypeId>"  shift, and go to state 38
    "("         shift, and go to state 175
    "&"         shift, and go to state 177

    tid              go to state 178
    vid              go to state 179
    typespec         go to state 312
    primaryTypespec  go to state 180
    tupleTypespec    go to state 181
    mod_prefix_tid   go to state 182
    mod_prefix       go to state 183
    postfixTypespec  go to state 184
    ttcall           go to state 185
    tdot             go to state 186
    unaryTypespec    go to state 214


State 297

   38 enum_field: tid "(" typespec_cl1 ")" •

    $default  reduce using rule 38 (enum_field)


State 298

   39 typeclass_stmt: "typeclass" tid "<" tid typespec ">" • "=" "{" expr_sl "}"
   40               | "typeclass" tid "<" tid typespec ">" • tpattern_seq "=" "{" expr_sl "}"

    "["  shift, and go to state 102
    "="  shift, and go to state 313
    "!"  shift, and go to state 103

    tpattern      go to state 105
    tpattern_seq  go to state 314


State 299

   78 ifThenElseExpr: "if" parenExpr "then" parenExpr "else" • primaryExpr

    "<val_id>"               shift, and go to state 35
    "if"                     shift, and go to state 45
    "fn"                     shift, and go to state 46
    "42"                     shift, and go to state 48
    "0x2a"                   shift, and go to state 49
    "4.2"                    shift, and go to state 50
    "\"dq-string-literal\""  shift, and go to state 51
    "'sq-string-literal'"    shift, and go to state 52
    "("                      shift, and go to state 27
    "{"                      shift, and go to state 28

    vid             go to state 58
    floatl          go to state 59
    stringl         go to state 60
    parenExpr       go to state 63
    unitExpr        go to state 30
    primaryExpr     go to state 315
    int_expr        go to state 65
    stringls        go to state 66
    vparenExpr      go to state 31
    vtupleExpr      go to state 32
    vstructExpr     go to state 33
    ifThenElseExpr  go to state 67
    chainExpr       go to state 34
    vlambdaExpr     go to state 68


State 300

  181 lpatternField_cl: lpatternField_cl "," lpatternField •

    $default  reduce using rule 181 (lpatternField_cl)


State 301

   96 dotIxExpr: postfixExpr "." "(" expr ")" •

    $default  reduce using rule 96 (dotIxExpr)


State 302

   50 expr_cl1: expr_cl1 "," expr •

    $default  reduce using rule 50 (expr_cl1)


State 303

  163 vtarg_cl: vtarg_cl "," vtarg •

    $default  reduce using rule 163 (vtarg_cl)


State 304

   25 fn_stmt: "fn" vid vpattern "->" typespec "=" parenExpr •

    $default  reduce using rule 25 (fn_stmt)


State 305

   26 fn_stmt: "fn" vid tpattern_seq vpattern "->" typespec "=" • parenExpr

    "("  shift, and go to state 27
    "{"  shift, and go to state 28

    parenExpr    go to state 316
    unitExpr     go to state 30
    vparenExpr   go to state 31
    vtupleExpr   go to state 32
    vstructExpr  go to state 33
    chainExpr    go to state 34


State 306

  141 tupleTypespec: "(" typespec "," ")" •

    $default  reduce using rule 141 (tupleTypespec)


State 307

  133 typespec_cl2: typespec "," typespec •

    $default  reduce using rule 133 (typespec_cl2)


State 308

  134 typespec_cl2: typespec_cl2 "," typespec •

    $default  reduce using rule 134 (typespec_cl2)


State 309

  137 structTypespecField_cl: structTypespecField_cl "," structTypespecField •

    $default  reduce using rule 137 (structTypespecField_cl)


State 310

  159 ttarg_cl: ttarg_cl "," • ttarg

    "<val_id>"               shift, and go to state 35
    "<TypeId>"               shift, and go to state 38
    "if"                     shift, and go to state 45
    "fn"                     shift, and go to state 46
    "not"                    shift, and go to state 47
    "42"                     shift, and go to state 48
    "0x2a"                   shift, and go to state 49
    "4.2"                    shift, and go to state 50
    "\"dq-string-literal\""  shift, and go to state 51
    "'sq-string-literal'"    shift, and go to state 52
    "("                      shift, and go to state 210
    "{"                      shift, and go to state 28
    "*"                      shift, and go to state 54
    "+"                      shift, and go to state 55
    "-"                      shift, and go to state 56
    "^"                      shift, and go to state 57
    "&"                      shift, and go to state 177

    tid              go to state 178
    vid              go to state 211
    floatl           go to state 59
    stringl          go to state 60
    expr             go to state 292
    parenExpr        go to state 63
    unitExpr         go to state 30
    primaryExpr      go to state 64
    int_expr         go to state 65
    stringls         go to state 66
    vparenExpr       go to state 31
    vtupleExpr       go to state 32
    vstructExpr      go to state 33
    ifThenElseExpr   go to state 67
    chainExpr        go to state 34
    vlambdaExpr      go to state 68
    postfixExpr      go to state 69
    vtcallExpr       go to state 70
    vvcallExpr       go to state 71
    dotNmExpr        go to state 72
    dotIxExpr        go to state 73
    unaryExpr        go to state 74
    unaryOp          go to state 75
    binaryExpr       go to state 76
    mulBinaryExpr    go to state 77
    addBinaryExpr    go to state 78
    cmpBinaryExpr    go to state 79
    eqBinaryExpr     go to state 80
    andBinaryExpr    go to state 81
    xorBinaryExpr    go to state 82
    orBinaryExpr     go to state 83
    typespec         go to state 293
    primaryTypespec  go to state 180
    tupleTypespec    go to state 181
    mod_prefix_tid   go to state 182
    mod_prefix       go to state 183
    postfixTypespec  go to state 184
    ttcall           go to state 185
    tdot             go to state 186
    unaryTypespec    go to state 214
    ttarg            go to state 317


State 311

  149 ttcall: postfixTypespec "[" ttarg_cl "]" •

    $default  reduce using rule 149 (ttcall)


State 312

  132 typespec_cl1: typespec_cl1 "," typespec •

    $default  reduce using rule 132 (typespec_cl1)


State 313

   39 typeclass_stmt: "typeclass" tid "<" tid typespec ">" "=" • "{" expr_sl "}"

    "{"  shift, and go to state 318


State 314

   40 typeclass_stmt: "typeclass" tid "<" tid typespec ">" tpattern_seq • "=" "{" expr_sl "}"
  187 tpattern_seq: tpattern_seq • tpattern

    "["  shift, and go to state 102
    "="  shift, and go to state 319
    "!"  shift, and go to state 103

    tpattern  go to state 174


State 315

   78 ifThenElseExpr: "if" parenExpr "then" parenExpr "else" primaryExpr •

    $default  reduce using rule 78 (ifThenElseExpr)


State 316

   26 fn_stmt: "fn" vid tpattern_seq vpattern "->" typespec "=" parenExpr •

    $default  reduce using rule 26 (fn_stmt)


State 317

  159 ttarg_cl: ttarg_cl "," ttarg •

    $default  reduce using rule 159 (ttarg_cl)


State 318

   39 typeclass_stmt: "typeclass" tid "<" tid typespec ">" "=" "{" • expr_sl "}"

    "<val_id>"               shift, and go to state 35
    "if"                     shift, and go to state 45
    "fn"                     shift, and go to state 46
    "not"                    shift, and go to state 47
    "42"                     shift, and go to state 48
    "0x2a"                   shift, and go to state 49
    "4.2"                    shift, and go to state 50
    "\"dq-string-literal\""  shift, and go to state 51
    "'sq-string-literal'"    shift, and go to state 52
    "("                      shift, and go to state 27
    "{"                      shift, and go to state 28
    "*"                      shift, and go to state 54
    "+"                      shift, and go to state 55
    "-"                      shift, and go to state 56
    "^"                      shift, and go to state 57

    vid             go to state 58
    floatl          go to state 59
    stringl         go to state 60
    expr            go to state 320
    expr_sl         go to state 321
    parenExpr       go to state 63
    unitExpr        go to state 30
    primaryExpr     go to state 64
    int_expr        go to state 65
    stringls        go to state 66
    vparenExpr      go to state 31
    vtupleExpr      go to state 32
    vstructExpr     go to state 33
    ifThenElseExpr  go to state 67
    chainExpr       go to state 34
    vlambdaExpr     go to state 68
    postfixExpr     go to state 69
    vtcallExpr      go to state 70
    vvcallExpr      go to state 71
    dotNmExpr       go to state 72
    dotIxExpr       go to state 73
    unaryExpr       go to state 74
    unaryOp         go to state 75
    binaryExpr      go to state 76
    mulBinaryExpr   go to state 77
    addBinaryExpr   go to state 78
    cmpBinaryExpr   go to state 79
    eqBinaryExpr    go to state 80
    andBinaryExpr   go to state 81
    xorBinaryExpr   go to state 82
    orBinaryExpr    go to state 83


State 319

   40 typeclass_stmt: "typeclass" tid "<" tid typespec ">" tpattern_seq "=" • "{" expr_sl "}"

    "{"  shift, and go to state 322


State 320

   53 expr_sl: expr • ";"

    ";"  shift, and go to state 323


State 321

   39 typeclass_stmt: "typeclass" tid "<" tid typespec ">" "=" "{" expr_sl • "}"
   54 expr_sl: expr_sl • expr ";"

    "<val_id>"               shift, and go to state 35
    "if"                     shift, and go to state 45
    "fn"                     shift, and go to state 46
    "not"                    shift, and go to state 47
    "42"                     shift, and go to state 48
    "0x2a"                   shift, and go to state 49
    "4.2"                    shift, and go to state 50
    "\"dq-string-literal\""  shift, and go to state 51
    "'sq-string-literal'"    shift, and go to state 52
    "("                      shift, and go to state 27
    "{"                      shift, and go to state 28
    "}"                      shift, and go to state 324
    "*"                      shift, and go to state 54
    "+"                      shift, and go to state 55
    "-"                      shift, and go to state 56
    "^"                      shift, and go to state 57

    vid             go to state 58
    floatl          go to state 59
    stringl         go to state 60
    expr            go to state 325
    parenExpr       go to state 63
    unitExpr        go to state 30
    primaryExpr     go to state 64
    int_expr        go to state 65
    stringls        go to state 66
    vparenExpr      go to state 31
    vtupleExpr      go to state 32
    vstructExpr     go to state 33
    ifThenElseExpr  go to state 67
    chainExpr       go to state 34
    vlambdaExpr     go to state 68
    postfixExpr     go to state 69
    vtcallExpr      go to state 70
    vvcallExpr      go to state 71
    dotNmExpr       go to state 72
    dotIxExpr       go to state 73
    unaryExpr       go to state 74
    unaryOp         go to state 75
    binaryExpr      go to state 76
    mulBinaryExpr   go to state 77
    addBinaryExpr   go to state 78
    cmpBinaryExpr   go to state 79
    eqBinaryExpr    go to state 80
    andBinaryExpr   go to state 81
    xorBinaryExpr   go to state 82
    orBinaryExpr    go to state 83


State 322

   40 typeclass_stmt: "typeclass" tid "<" tid typespec ">" tpattern_seq "=" "{" • expr_sl "}"

    "<val_id>"               shift, and go to state 35
    "if"                     shift, and go to state 45
    "fn"                     shift, and go to state 46
    "not"                    shift, and go to state 47
    "42"                     shift, and go to state 48
    "0x2a"                   shift, and go to state 49
    "4.2"                    shift, and go to state 50
    "\"dq-string-literal\""  shift, and go to state 51
    "'sq-string-literal'"    shift, and go to state 52
    "("                      shift, and go to state 27
    "{"                      shift, and go to state 28
    "*"                      shift, and go to state 54
    "+"                      shift, and go to state 55
    "-"                      shift, and go to state 56
    "^"                      shift, and go to state 57

    vid             go to state 58
    floatl          go to state 59
    stringl         go to state 60
    expr            go to state 320
    expr_sl         go to state 326
    parenExpr       go to state 63
    unitExpr        go to state 30
    primaryExpr     go to state 64
    int_expr        go to state 65
    stringls        go to state 66
    vparenExpr      go to state 31
    vtupleExpr      go to state 32
    vstructExpr     go to state 33
    ifThenElseExpr  go to state 67
    chainExpr       go to state 34
    vlambdaExpr     go to state 68
    postfixExpr     go to state 69
    vtcallExpr      go to state 70
    vvcallExpr      go to state 71
    dotNmExpr       go to state 72
    dotIxExpr       go to state 73
    unaryExpr       go to state 74
    unaryOp         go to state 75
    binaryExpr      go to state 76
    mulBinaryExpr   go to state 77
    addBinaryExpr   go to state 78
    cmpBinaryExpr   go to state 79
    eqBinaryExpr    go to state 80
    andBinaryExpr   go to state 81
    xorBinaryExpr   go to state 82
    orBinaryExpr    go to state 83


State 323

   53 expr_sl: expr ";" •

    $default  reduce using rule 53 (expr_sl)


State 324

   39 typeclass_stmt: "typeclass" tid "<" tid typespec ">" "=" "{" expr_sl "}" •

    $default  reduce using rule 39 (typeclass_stmt)


State 325

   54 expr_sl: expr_sl expr • ";"

    ";"  shift, and go to state 327


State 326

   40 typeclass_stmt: "typeclass" tid "<" tid typespec ">" tpattern_seq "=" "{" expr_sl • "}"
   54 expr_sl: expr_sl • expr ";"

    "<val_id>"               shift, and go to state 35
    "if"                     shift, and go to state 45
    "fn"                     shift, and go to state 46
    "not"                    shift, and go to state 47
    "42"                     shift, and go to state 48
    "0x2a"                   shift, and go to state 49
    "4.2"                    shift, and go to state 50
    "\"dq-string-literal\""  shift, and go to state 51
    "'sq-string-literal'"    shift, and go to state 52
    "("                      shift, and go to state 27
    "{"                      shift, and go to state 28
    "}"                      shift, and go to state 328
    "*"                      shift, and go to state 54
    "+"                      shift, and go to state 55
    "-"                      shift, and go to state 56
    "^"                      shift, and go to state 57

    vid             go to state 58
    floatl          go to state 59
    stringl         go to state 60
    expr            go to state 325
    parenExpr       go to state 63
    unitExpr        go to state 30
    primaryExpr     go to state 64
    int_expr        go to state 65
    stringls        go to state 66
    vparenExpr      go to state 31
    vtupleExpr      go to state 32
    vstructExpr     go to state 33
    ifThenElseExpr  go to state 67
    chainExpr       go to state 34
    vlambdaExpr     go to state 68
    postfixExpr     go to state 69
    vtcallExpr      go to state 70
    vvcallExpr      go to state 71
    dotNmExpr       go to state 72
    dotIxExpr       go to state 73
    unaryExpr       go to state 74
    unaryOp         go to state 75
    binaryExpr      go to state 76
    mulBinaryExpr   go to state 77
    addBinaryExpr   go to state 78
    cmpBinaryExpr   go to state 79
    eqBinaryExpr    go to state 80
    andBinaryExpr   go to state 81
    xorBinaryExpr   go to state 82
    orBinaryExpr    go to state 83


State 327

   54 expr_sl: expr_sl expr ";" •

    $default  reduce using rule 54 (expr_sl)


State 328

   40 typeclass_stmt: "typeclass" tid "<" tid typespec ">" tpattern_seq "=" "{" expr_sl "}" •

    $default  reduce using rule 40 (typeclass_stmt)
