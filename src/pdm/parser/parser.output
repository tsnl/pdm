Terminals unused in grammar

    "__42__"
    "struct"
    "match"
    "with"
    "extern"
    "from"
    "func"
    "lambda"
    ":"
    "^"
    "&"
    "!"
    "|"
    "EOS"
    "<null>"


Grammar

    0 $accept: script $end

    1 script: script_header "{" script_field_sl "}"

    2 script_header: %empty
    3              | script_header script_header_stmt ";"

    4 script_header_stmt: import_stmt

    5 script_field: "mod" tid mod_exp

    6 script_field_sl: script_field ";"
    7                | script_field_sl script_field ";"

    8 mod_exp: "{" mod_field_sl "}"
    9        | tpattern "{" mod_field_sl "}"

   10 mod_field_sl: %empty
   11             | mod_field_sl mod_field ";"

   12 mod_field: "val" vid "=" long_exp
   13          | "typ" tid "=" long_type_spec
   14          | "cls" cid class_exp_class_spec
   15          | "mod" tid mod_exp

   16 import_stmt: "import" stringl "as" stringl

   17 chain_prefix_stmt: const_stmt
   18                  | val_stmt
   19                  | var_stmt
   20                  | set_stmt
   21                  | discard_stmt

   22 const_stmt: "const" lpattern "=" expr

   23 val_stmt: "val" lpattern "=" expr

   24 var_stmt: "var" lpattern "=" expr

   25 set_stmt: "set" expr "=" expr

   26 discard_stmt: "discard" expr

   27 tid: "TypeId"

   28 vid: "val_id"

   29 cid: "CLS_ID"

   30 floatl: "4.2"

   31 stringl: "'sq-string-literal'"
   32        | "\"dq-string-literal\""

   33 mod_prefix: tid "."
   34           | tid "[" targ_cl "]" "."
   35           | mod_prefix tid "."
   36           | mod_prefix tid "[" targ_cl "]" "."

   37 expr: binary_exp

   38 long_exp: expr
   39         | lambda_exp

   40 expr_cl2: expr "," expr
   41         | expr_cl2 "," expr

   42 type_query_exp_sl: type_query_exp ";"
   43                  | type_query_exp_sl type_query_exp ";"

   44 bracketed_exp: paren_exp
   45              | vtupleExpr
   46              | vstructExpr
   47              | chain_exp

   48 paren_exp: "(" long_exp ")"

   49 vtupleExpr: "(" ")"
   50           | "(" expr "," ")"
   51           | "(" expr_cl2 ")"

   52 vstructExpr: "{" struct_exp_field_cl "}"

   53 primary_exp: bracketed_exp
   54            | vid
   55            | int_expr
   56            | floatl
   57            | stringls
   58            | if_exp
   59            | mod_prefix vid

   60 int_expr: "42"
   61         | "0x2a"
   62         | "42u"
   63         | "0x2Au"

   64 stringls: "'sq-string-literal'"
   65         | "\"dq-string-literal\""
   66         | stringls "'sq-string-literal'"
   67         | stringls "\"dq-string-literal\""

   68 if_exp: "if" bracketed_exp "then" bracketed_exp
   69       | "if" bracketed_exp "then" bracketed_exp "else" primary_exp

   70 chain_exp: "{" long_exp "}"
   71          | "{" chain_prefix "}"
   72          | "{" chain_prefix long_exp "}"

   73 chain_prefix: chain_prefix_stmt ";"
   74             | chain_prefix chain_prefix_stmt ";"

   75 lambda_exp: fn_type_spec bracketed_exp

   76 postfix_exp: primary_exp
   77            | vcall_exp
   78            | dot_name_exp
   79            | dot_index_exp

   80 vcall_exp: postfix_exp "(" ")"
   81          | postfix_exp "(" varg_cl ")"

   82 dot_name_exp: postfix_exp "." "val_id"
   83             | type_spec "::" "TypeId"
   84             | type_spec "::" "TypeId" "using" paren_exp

   85 dot_index_exp: postfix_exp "." int_expr
   86              | postfix_exp "." bracketed_exp

   87 unary_exp: postfix_exp
   88          | unary_op unary_exp

   89 unary_op: "+"
   90         | "-"
   91         | "not"

   92 binary_exp: or_binary_exp

   93 mul_binary_op: "*"
   94              | "/"
   95              | "%"

   96 mul_binary_exp: unary_exp
   97               | mul_binary_exp mul_binary_op unary_exp

   98 add_binary_op: "+"
   99              | "-"

  100 add_binary_exp: mul_binary_exp
  101               | add_binary_exp add_binary_op mul_binary_exp

  102 cmp_binary_op: "<"
  103              | "<="
  104              | ">"
  105              | ">="

  106 cmp_binary_exp: add_binary_exp
  107               | cmp_binary_exp cmp_binary_op add_binary_exp

  108 eq_binary_op: "=="
  109             | "!="

  110 eq_binary_exp: cmp_binary_exp
  111              | eq_binary_exp eq_binary_op cmp_binary_exp

  112 and_binary_exp: eq_binary_exp
  113               | and_binary_exp "and" eq_binary_exp

  114 xor_binary_exp: and_binary_exp
  115               | xor_binary_exp "xor" and_binary_exp

  116 or_binary_exp: xor_binary_exp
  117              | or_binary_exp "or" xor_binary_exp

  118 type_query_exp: type_spec type_query_op type_spec

  119 type_query_op: ":<"
  120              | ">:"
  121              | "=="

  122 type_spec_cl2: type_spec "," type_spec
  123              | type_spec_cl2 "," type_spec

  124 type_spec: tid
  125          | mod_prefix_tid
  126          | tuple_type_spec

  127 long_type_spec: struct_type_spec
  128               | enum_type_spec
  129               | fn_type_spec

  130 mod_prefix_tid: mod_prefix tid

  131 tuple_type_spec: "{" type_spec "}"
  132                | "{" type_spec_cl2 "}"

  133 struct_type_spec: "{" struct_type_spec_field_cl "}"

  134 struct_type_spec_field_cl: struct_type_spec_field
  135                          | struct_type_spec_field_cl "," struct_type_spec_field

  136 struct_type_spec_field: vid long_type_spec

  137 enum_type_spec_field: tid
  138                     | tid long_type_spec

  139 enum_type_spec_field_cl: enum_type_spec_field
  140                        | enum_type_spec_field_cl "," enum_type_spec_field

  141 enum_type_spec: "enum" "{" enum_type_spec_field_cl "}"

  142 fn_type_spec: vpattern "->" type_spec

  143 targ: type_spec
  144     | expr

  145 targ_cl: targ
  146        | targ_cl "," targ

  147 varg: expr
  148     | "out" expr
  149     | "inout" expr

  150 varg_cl: varg
  151        | varg_cl "," varg

  152 class_spec: primary_class_spec

  153 primary_class_spec: cid
  154                   | mod_prefix_cid_class_spec
  155                   | class_exp_class_spec

  156 mod_prefix_cid_class_spec: mod_prefix cid

  157 class_exp_class_spec: "(" tid class_spec ")" "{" type_query_exp_sl "}"

  158 struct_exp_field: vid "=" expr

  159 vpattern_field: vid type_spec
  160               | "out" vid type_spec
  161               | "inout" vid type_spec

  162 lpattern_field: vid type_spec
  163               | vid

  164 tpattern_field: vid type_spec
  165               | tid class_spec

  166 destructured_lpattern: "{" lpattern_field_cl "}"

  167 lpattern: lpattern_field
  168         | destructured_lpattern

  169 vpattern: "(" vpattern_field_cl ")"
  170         | "(" ")"

  171 tpattern: "[" tpattern_field_cl "]"

  172 vpattern_field_cl: vpattern_field
  173                  | vpattern_field_cl "," vpattern_field

  174 lpattern_field_cl: lpattern_field
  175                  | lpattern_field_cl "," lpattern_field

  176 tpattern_field_cl: tpattern_field
  177                  | tpattern_field_cl "," tpattern_field

  178 struct_exp_field_cl: struct_exp_field
  179                    | struct_exp_field_cl "," struct_exp_field


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    "val_id" <TokenInfo> (258) 28 82
    "TypeId" <TokenInfo> (259) 27 83 84
    "CLS_ID" <TokenInfo> (260) 29
    "__42__" <TokenInfo> (261)
    "using" (262) 84
    "mod" (263) 5 15
    "typ" (264) 13
    "struct" (265)
    "enum" (266) 141
    "cls" (267) 14
    "if" (268) 68 69
    "then" (269) 68 69
    "else" (270) 69
    "match" (271)
    "with" (272)
    "import" (273) 16
    "extern" (274)
    "from" (275)
    "const" (276) 22
    "val" (277) 12 23
    "var" (278) 24
    "set" (279) 25
    "func" (280)
    "lambda" (281)
    "and" (282) 113
    "xor" (283) 115
    "or" (284) 117
    "not" (285) 91
    "out" (286) 148 160
    "inout" (287) 149 161
    "discard" (288) 26
    "as" (289) 16
    "42" <TokenInfo> (290) 60
    "0x2a" <TokenInfo> (291) 61
    "42u" <TokenInfo> (292) 62
    "0x2Au" <TokenInfo> (293) 63
    "4.2" <TokenInfo> (294) 30
    "\"dq-string-literal\"" <TokenInfo> (295) 32 65 67
    "'sq-string-literal'" <TokenInfo> (296) 31 64 66
    "." (297) 33 34 35 36 82 85 86
    ":" (298)
    "," (299) 40 41 50 122 123 135 140 146 151 173 175 177 179
    ";" (300) 3 6 7 11 42 43 73 74
    "::" (301) 83 84
    "(" (302) 48 49 50 51 80 81 157 169 170
    ")" (303) 48 49 50 51 80 81 157 169 170
    "[" (304) 34 36 171
    "]" (305) 34 36 171
    "{" (306) 1 8 9 52 70 71 72 131 132 133 141 157 166
    "}" (307) 1 8 9 52 70 71 72 131 132 133 141 157 166
    "->" (308) 142
    "*" (309) 93
    "/" (310) 94
    "%" (311) 95
    "+" (312) 89 98
    "-" (313) 90 99
    "<" (314) 102
    "<=" (315) 103
    ">" (316) 104
    ">=" (317) 105
    "=" (318) 12 13 22 23 24 25 158
    "==" (319) 108 121
    "!=" (320) 109
    "^" (321)
    "&" (322)
    "!" (323)
    "|" (324)
    "EOS" (325)
    ":<" (326) 119
    ">:" (327) 120
    "<null>" (328)


Nonterminals, with rules where they appear

    $accept (74)
        on left: 0
    script <pdm::ast::Script*> (75)
        on left: 1
        on right: 0
    script_header <std::vector<pdm::ast::HeaderStmt*>> (76)
        on left: 2 3
        on right: 1 3
    script_header_stmt <pdm::ast::HeaderStmt*> (77)
        on left: 4
        on right: 3
    script_field <pdm::ast::Script::Field*> (78)
        on left: 5
        on right: 6 7
    script_field_sl <std::vector<pdm::ast::Script::Field*>> (79)
        on left: 6 7
        on right: 1 7
    mod_exp <pdm::ast::ModExp*> (80)
        on left: 8 9
        on right: 5 15
    mod_field_sl <std::vector<pdm::ast::ModExp::Field*>> (81)
        on left: 10 11
        on right: 8 9 11
    mod_field <pdm::ast::ModExp::Field*> (82)
        on left: 12 13 14 15
        on right: 11
    import_stmt <pdm::ast::HeaderStmt*> (83)
        on left: 16
        on right: 4
    chain_prefix_stmt <pdm::ast::Stmt*> (84)
        on left: 17 18 19 20 21
        on right: 73 74
    const_stmt <pdm::ast::Stmt*> (85)
        on left: 22
        on right: 17
    val_stmt <pdm::ast::Stmt*> (86)
        on left: 23
        on right: 18
    var_stmt <pdm::ast::Stmt*> (87)
        on left: 24
        on right: 19
    set_stmt <pdm::ast::Stmt*> (88)
        on left: 25
        on right: 20
    discard_stmt <pdm::ast::Stmt*> (89)
        on left: 26
        on right: 21
    tid <TokenInfo> (90)
        on left: 27
        on right: 5 13 15 33 34 35 36 124 130 137 138 157 165
    vid <TokenInfo> (91)
        on left: 28
        on right: 12 54 59 136 158 159 160 161 162 163 164
    cid <TokenInfo> (92)
        on left: 29
        on right: 14 153 156
    floatl <TokenInfo> (93)
        on left: 30
        on right: 56
    stringl <TokenInfo> (94)
        on left: 31 32
        on right: 16
    mod_prefix <pdm::ast::ModAddress*> (95)
        on left: 33 34 35 36
        on right: 35 36 59 130 156
    expr <pdm::ast::Exp*> (96)
        on left: 37
        on right: 22 23 24 25 26 38 40 41 50 144 147 148 149 158
    long_exp <pdm::ast::Exp*> (97)
        on left: 38 39
        on right: 12 48 70 72
    expr_cl2 <std::vector<pdm::ast::Exp*>> (98)
        on left: 40 41
        on right: 41 51
    type_query_exp_sl <std::vector<pdm::ast::TypeQueryExp*>> (99)
        on left: 42 43
        on right: 43 157
    bracketed_exp <pdm::ast::Exp*> (100)
        on left: 44 45 46 47
        on right: 53 68 69 75 86
    paren_exp <pdm::ast::Exp*> (101)
        on left: 48
        on right: 44 84
    vtupleExpr <pdm::ast::Exp*> (102)
        on left: 49 50 51
        on right: 45
    vstructExpr <pdm::ast::Exp*> (103)
        on left: 52
        on right: 46
    primary_exp <pdm::ast::Exp*> (104)
        on left: 53 54 55 56 57 58 59
        on right: 69 76
    int_expr <pdm::ast::Exp*> (105)
        on left: 60 61 62 63
        on right: 55 85
    stringls <std::vector<pdm::ast::StringExp::Piece>> (106)
        on left: 64 65 66 67
        on right: 57 66 67
    if_exp <pdm::ast::Exp*> (107)
        on left: 68 69
        on right: 58
    chain_exp <pdm::ast::Exp*> (108)
        on left: 70 71 72
        on right: 47
    chain_prefix <std::vector<pdm::ast::Stmt*>> (109)
        on left: 73 74
        on right: 71 72 74
    lambda_exp <pdm::ast::Exp*> (110)
        on left: 75
        on right: 39
    postfix_exp <pdm::ast::Exp*> (111)
        on left: 76 77 78 79
        on right: 80 81 82 85 86 87
    vcall_exp <pdm::ast::Exp*> (112)
        on left: 80 81
        on right: 77
    dot_name_exp <pdm::ast::Exp*> (113)
        on left: 82 83 84
        on right: 78
    dot_index_exp <pdm::ast::Exp*> (114)
        on left: 85 86
        on right: 79
    unary_exp <pdm::ast::Exp*> (115)
        on left: 87 88
        on right: 88 96 97
    unary_op <pdm::ast::UnaryOperator> (116)
        on left: 89 90 91
        on right: 88
    binary_exp <pdm::ast::Exp*> (117)
        on left: 92
        on right: 37
    mul_binary_op <pdm::ast::BinaryOperator> (118)
        on left: 93 94 95
        on right: 97
    mul_binary_exp <pdm::ast::Exp*> (119)
        on left: 96 97
        on right: 97 100 101
    add_binary_op <pdm::ast::BinaryOperator> (120)
        on left: 98 99
        on right: 101
    add_binary_exp <pdm::ast::Exp*> (121)
        on left: 100 101
        on right: 101 106 107
    cmp_binary_op <pdm::ast::BinaryOperator> (122)
        on left: 102 103 104 105
        on right: 107
    cmp_binary_exp <pdm::ast::Exp*> (123)
        on left: 106 107
        on right: 107 110 111
    eq_binary_op <pdm::ast::BinaryOperator> (124)
        on left: 108 109
        on right: 111
    eq_binary_exp <pdm::ast::Exp*> (125)
        on left: 110 111
        on right: 111 112 113
    and_binary_exp <pdm::ast::Exp*> (126)
        on left: 112 113
        on right: 113 114 115
    xor_binary_exp <pdm::ast::Exp*> (127)
        on left: 114 115
        on right: 115 116 117
    or_binary_exp <pdm::ast::Exp*> (128)
        on left: 116 117
        on right: 92 117
    type_query_exp <pdm::ast::TypeQueryExp*> (129)
        on left: 118
        on right: 42 43
    type_query_op <pdm::ast::TypeQueryKind> (130)
        on left: 119 120 121
        on right: 118
    type_spec_cl2 <std::vector<pdm::ast::TypeSpec*>> (131)
        on left: 122 123
        on right: 123 132
    type_spec <pdm::ast::TypeSpec*> (132)
        on left: 124 125 126
        on right: 83 84 118 122 123 131 142 143 159 160 161 162 164
    long_type_spec <pdm::ast::TypeSpec*> (133)
        on left: 127 128 129
        on right: 13 136 138
    mod_prefix_tid <pdm::ast::TypeSpec*> (134)
        on left: 130
        on right: 125
    tuple_type_spec <pdm::ast::TypeSpec*> (135)
        on left: 131 132
        on right: 126
    struct_type_spec <pdm::ast::TypeSpec*> (136)
        on left: 133
        on right: 127
    struct_type_spec_field_cl <std::vector<pdm::ast::StructTypeSpec::Field*>> (137)
        on left: 134 135
        on right: 133 135
    struct_type_spec_field <pdm::ast::StructTypeSpec::Field*> (138)
        on left: 136
        on right: 134 135
    enum_type_spec_field <pdm::ast::EnumTypeSpec::Field*> (139)
        on left: 137 138
        on right: 139 140
    enum_type_spec_field_cl <std::vector<pdm::ast::EnumTypeSpec::Field*>> (140)
        on left: 139 140
        on right: 140 141
    enum_type_spec <pdm::ast::TypeSpec*> (141)
        on left: 141
        on right: 128
    fn_type_spec <pdm::ast::TypeSpec*> (142)
        on left: 142
        on right: 75 129
    targ <pdm::ast::TArg*> (143)
        on left: 143 144
        on right: 145 146
    targ_cl <std::vector<pdm::ast::TArg*>> (144)
        on left: 145 146
        on right: 34 36 146
    varg <pdm::ast::VArg*> (145)
        on left: 147 148 149
        on right: 150 151
    varg_cl <std::vector<pdm::ast::VArg*>> (146)
        on left: 150 151
        on right: 81 151
    class_spec <pdm::ast::ClassSpec*> (147)
        on left: 152
        on right: 157 165
    primary_class_spec <pdm::ast::ClassSpec*> (148)
        on left: 153 154 155
        on right: 152
    mod_prefix_cid_class_spec <pdm::ast::ClassSpec*> (149)
        on left: 156
        on right: 154
    class_exp_class_spec <pdm::ast::ClassSpec*> (150)
        on left: 157
        on right: 14 155
    struct_exp_field <pdm::ast::StructExp::Field*> (151)
        on left: 158
        on right: 178 179
    vpattern_field <pdm::ast::VPattern::Field*> (152)
        on left: 159 160 161
        on right: 172 173
    lpattern_field <pdm::ast::LPattern::Field*> (153)
        on left: 162 163
        on right: 167 174 175
    tpattern_field <pdm::ast::TPattern::Field*> (154)
        on left: 164 165
        on right: 176 177
    destructured_lpattern <pdm::ast::LPattern*> (155)
        on left: 166
        on right: 168
    lpattern <pdm::ast::LPattern*> (156)
        on left: 167 168
        on right: 22 23 24
    vpattern <pdm::ast::VPattern*> (157)
        on left: 169 170
        on right: 142
    tpattern <pdm::ast::TPattern*> (158)
        on left: 171
        on right: 9
    vpattern_field_cl <std::vector<pdm::ast::VPattern::Field*>> (159)
        on left: 172 173
        on right: 169 173
    lpattern_field_cl <std::vector<pdm::ast::LPattern::Field*>> (160)
        on left: 174 175
        on right: 166 175
    tpattern_field_cl <std::vector<pdm::ast::TPattern::Field*>> (161)
        on left: 176 177
        on right: 171 177
    struct_exp_field_cl <std::vector<pdm::ast::StructExp::Field*>> (162)
        on left: 178 179
        on right: 52 179


State 0

    0 $accept: • script $end

    $default  reduce using rule 2 (script_header)

    script         go to state 1
    script_header  go to state 2


State 1

    0 $accept: script • $end

    $end  shift, and go to state 3


State 2

    1 script: script_header • "{" script_field_sl "}"
    3 script_header: script_header • script_header_stmt ";"

    "import"  shift, and go to state 4
    "{"       shift, and go to state 5

    script_header_stmt  go to state 6
    import_stmt         go to state 7


State 3

    0 $accept: script $end •

    $default  accept


State 4

   16 import_stmt: "import" • stringl "as" stringl

    "\"dq-string-literal\""  shift, and go to state 8
    "'sq-string-literal'"    shift, and go to state 9

    stringl  go to state 10


State 5

    1 script: script_header "{" • script_field_sl "}"

    "mod"  shift, and go to state 11

    script_field     go to state 12
    script_field_sl  go to state 13


State 6

    3 script_header: script_header script_header_stmt • ";"

    ";"  shift, and go to state 14


State 7

    4 script_header_stmt: import_stmt •

    $default  reduce using rule 4 (script_header_stmt)


State 8

   32 stringl: "\"dq-string-literal\"" •

    $default  reduce using rule 32 (stringl)


State 9

   31 stringl: "'sq-string-literal'" •

    $default  reduce using rule 31 (stringl)


State 10

   16 import_stmt: "import" stringl • "as" stringl

    "as"  shift, and go to state 15


State 11

    5 script_field: "mod" • tid mod_exp

    "TypeId"  shift, and go to state 16

    tid  go to state 17


State 12

    6 script_field_sl: script_field • ";"

    ";"  shift, and go to state 18


State 13

    1 script: script_header "{" script_field_sl • "}"
    7 script_field_sl: script_field_sl • script_field ";"

    "mod"  shift, and go to state 11
    "}"    shift, and go to state 19

    script_field  go to state 20


State 14

    3 script_header: script_header script_header_stmt ";" •

    $default  reduce using rule 3 (script_header)


State 15

   16 import_stmt: "import" stringl "as" • stringl

    "\"dq-string-literal\""  shift, and go to state 8
    "'sq-string-literal'"    shift, and go to state 9

    stringl  go to state 21


State 16

   27 tid: "TypeId" •

    $default  reduce using rule 27 (tid)


State 17

    5 script_field: "mod" tid • mod_exp

    "["  shift, and go to state 22
    "{"  shift, and go to state 23

    mod_exp   go to state 24
    tpattern  go to state 25


State 18

    6 script_field_sl: script_field ";" •

    $default  reduce using rule 6 (script_field_sl)


State 19

    1 script: script_header "{" script_field_sl "}" •

    $default  reduce using rule 1 (script)


State 20

    7 script_field_sl: script_field_sl script_field • ";"

    ";"  shift, and go to state 26


State 21

   16 import_stmt: "import" stringl "as" stringl •

    $default  reduce using rule 16 (import_stmt)


State 22

  171 tpattern: "[" • tpattern_field_cl "]"

    "val_id"  shift, and go to state 27
    "TypeId"  shift, and go to state 16

    tid                go to state 28
    vid                go to state 29
    tpattern_field     go to state 30
    tpattern_field_cl  go to state 31


State 23

    8 mod_exp: "{" • mod_field_sl "}"

    $default  reduce using rule 10 (mod_field_sl)

    mod_field_sl  go to state 32


State 24

    5 script_field: "mod" tid mod_exp •

    $default  reduce using rule 5 (script_field)


State 25

    9 mod_exp: tpattern • "{" mod_field_sl "}"

    "{"  shift, and go to state 33


State 26

    7 script_field_sl: script_field_sl script_field ";" •

    $default  reduce using rule 7 (script_field_sl)


State 27

   28 vid: "val_id" •

    $default  reduce using rule 28 (vid)


State 28

  165 tpattern_field: tid • class_spec

    "TypeId"  shift, and go to state 16
    "CLS_ID"  shift, and go to state 34
    "("       shift, and go to state 35

    tid                        go to state 36
    cid                        go to state 37
    mod_prefix                 go to state 38
    class_spec                 go to state 39
    primary_class_spec         go to state 40
    mod_prefix_cid_class_spec  go to state 41
    class_exp_class_spec       go to state 42


State 29

  164 tpattern_field: vid • type_spec

    "TypeId"  shift, and go to state 16
    "{"       shift, and go to state 43

    tid              go to state 44
    mod_prefix       go to state 45
    type_spec        go to state 46
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48


State 30

  176 tpattern_field_cl: tpattern_field •

    $default  reduce using rule 176 (tpattern_field_cl)


State 31

  171 tpattern: "[" tpattern_field_cl • "]"
  177 tpattern_field_cl: tpattern_field_cl • "," tpattern_field

    ","  shift, and go to state 49
    "]"  shift, and go to state 50


State 32

    8 mod_exp: "{" mod_field_sl • "}"
   11 mod_field_sl: mod_field_sl • mod_field ";"

    "mod"  shift, and go to state 51
    "typ"  shift, and go to state 52
    "cls"  shift, and go to state 53
    "val"  shift, and go to state 54
    "}"    shift, and go to state 55

    mod_field  go to state 56


State 33

    9 mod_exp: tpattern "{" • mod_field_sl "}"

    $default  reduce using rule 10 (mod_field_sl)

    mod_field_sl  go to state 57


State 34

   29 cid: "CLS_ID" •

    $default  reduce using rule 29 (cid)


State 35

  157 class_exp_class_spec: "(" • tid class_spec ")" "{" type_query_exp_sl "}"

    "TypeId"  shift, and go to state 16

    tid  go to state 58


State 36

   33 mod_prefix: tid • "."
   34           | tid • "[" targ_cl "]" "."

    "."  shift, and go to state 59
    "["  shift, and go to state 60


State 37

  153 primary_class_spec: cid •

    $default  reduce using rule 153 (primary_class_spec)


State 38

   35 mod_prefix: mod_prefix • tid "."
   36           | mod_prefix • tid "[" targ_cl "]" "."
  156 mod_prefix_cid_class_spec: mod_prefix • cid

    "TypeId"  shift, and go to state 16
    "CLS_ID"  shift, and go to state 34

    tid  go to state 61
    cid  go to state 62


State 39

  165 tpattern_field: tid class_spec •

    $default  reduce using rule 165 (tpattern_field)


State 40

  152 class_spec: primary_class_spec •

    $default  reduce using rule 152 (class_spec)


State 41

  154 primary_class_spec: mod_prefix_cid_class_spec •

    $default  reduce using rule 154 (primary_class_spec)


State 42

  155 primary_class_spec: class_exp_class_spec •

    $default  reduce using rule 155 (primary_class_spec)


State 43

  131 tuple_type_spec: "{" • type_spec "}"
  132                | "{" • type_spec_cl2 "}"

    "TypeId"  shift, and go to state 16
    "{"       shift, and go to state 43

    tid              go to state 44
    mod_prefix       go to state 45
    type_spec_cl2    go to state 63
    type_spec        go to state 64
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48


State 44

   33 mod_prefix: tid • "."
   34           | tid • "[" targ_cl "]" "."
  124 type_spec: tid •

    "."  shift, and go to state 59
    "["  shift, and go to state 60

    $default  reduce using rule 124 (type_spec)


State 45

   35 mod_prefix: mod_prefix • tid "."
   36           | mod_prefix • tid "[" targ_cl "]" "."
  130 mod_prefix_tid: mod_prefix • tid

    "TypeId"  shift, and go to state 16

    tid  go to state 65


State 46

  164 tpattern_field: vid type_spec •

    $default  reduce using rule 164 (tpattern_field)


State 47

  125 type_spec: mod_prefix_tid •

    $default  reduce using rule 125 (type_spec)


State 48

  126 type_spec: tuple_type_spec •

    $default  reduce using rule 126 (type_spec)


State 49

  177 tpattern_field_cl: tpattern_field_cl "," • tpattern_field

    "val_id"  shift, and go to state 27
    "TypeId"  shift, and go to state 16

    tid             go to state 28
    vid             go to state 29
    tpattern_field  go to state 66


State 50

  171 tpattern: "[" tpattern_field_cl "]" •

    $default  reduce using rule 171 (tpattern)


State 51

   15 mod_field: "mod" • tid mod_exp

    "TypeId"  shift, and go to state 16

    tid  go to state 67


State 52

   13 mod_field: "typ" • tid "=" long_type_spec

    "TypeId"  shift, and go to state 16

    tid  go to state 68


State 53

   14 mod_field: "cls" • cid class_exp_class_spec

    "CLS_ID"  shift, and go to state 34

    cid  go to state 69


State 54

   12 mod_field: "val" • vid "=" long_exp

    "val_id"  shift, and go to state 27

    vid  go to state 70


State 55

    8 mod_exp: "{" mod_field_sl "}" •

    $default  reduce using rule 8 (mod_exp)


State 56

   11 mod_field_sl: mod_field_sl mod_field • ";"

    ";"  shift, and go to state 71


State 57

    9 mod_exp: tpattern "{" mod_field_sl • "}"
   11 mod_field_sl: mod_field_sl • mod_field ";"

    "mod"  shift, and go to state 51
    "typ"  shift, and go to state 52
    "cls"  shift, and go to state 53
    "val"  shift, and go to state 54
    "}"    shift, and go to state 72

    mod_field  go to state 56


State 58

  157 class_exp_class_spec: "(" tid • class_spec ")" "{" type_query_exp_sl "}"

    "TypeId"  shift, and go to state 16
    "CLS_ID"  shift, and go to state 34
    "("       shift, and go to state 35

    tid                        go to state 36
    cid                        go to state 37
    mod_prefix                 go to state 38
    class_spec                 go to state 73
    primary_class_spec         go to state 40
    mod_prefix_cid_class_spec  go to state 41
    class_exp_class_spec       go to state 42


State 59

   33 mod_prefix: tid "." •

    $default  reduce using rule 33 (mod_prefix)


State 60

   34 mod_prefix: tid "[" • targ_cl "]" "."

    "val_id"                 shift, and go to state 27
    "TypeId"                 shift, and go to state 16
    "if"                     shift, and go to state 74
    "not"                    shift, and go to state 75
    "42"                     shift, and go to state 76
    "0x2a"                   shift, and go to state 77
    "42u"                    shift, and go to state 78
    "0x2Au"                  shift, and go to state 79
    "4.2"                    shift, and go to state 80
    "\"dq-string-literal\""  shift, and go to state 81
    "'sq-string-literal'"    shift, and go to state 82
    "("                      shift, and go to state 83
    "{"                      shift, and go to state 84
    "+"                      shift, and go to state 85
    "-"                      shift, and go to state 86

    tid              go to state 44
    vid              go to state 87
    floatl           go to state 88
    mod_prefix       go to state 89
    expr             go to state 90
    bracketed_exp    go to state 91
    paren_exp        go to state 92
    vtupleExpr       go to state 93
    vstructExpr      go to state 94
    primary_exp      go to state 95
    int_expr         go to state 96
    stringls         go to state 97
    if_exp           go to state 98
    chain_exp        go to state 99
    postfix_exp      go to state 100
    vcall_exp        go to state 101
    dot_name_exp     go to state 102
    dot_index_exp    go to state 103
    unary_exp        go to state 104
    unary_op         go to state 105
    binary_exp       go to state 106
    mul_binary_exp   go to state 107
    add_binary_exp   go to state 108
    cmp_binary_exp   go to state 109
    eq_binary_exp    go to state 110
    and_binary_exp   go to state 111
    xor_binary_exp   go to state 112
    or_binary_exp    go to state 113
    type_spec        go to state 114
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48
    targ             go to state 115
    targ_cl          go to state 116


State 61

   35 mod_prefix: mod_prefix tid • "."
   36           | mod_prefix tid • "[" targ_cl "]" "."

    "."  shift, and go to state 117
    "["  shift, and go to state 118


State 62

  156 mod_prefix_cid_class_spec: mod_prefix cid •

    $default  reduce using rule 156 (mod_prefix_cid_class_spec)


State 63

  123 type_spec_cl2: type_spec_cl2 • "," type_spec
  132 tuple_type_spec: "{" type_spec_cl2 • "}"

    ","  shift, and go to state 119
    "}"  shift, and go to state 120


State 64

  122 type_spec_cl2: type_spec • "," type_spec
  131 tuple_type_spec: "{" type_spec • "}"

    ","  shift, and go to state 121
    "}"  shift, and go to state 122


State 65

   35 mod_prefix: mod_prefix tid • "."
   36           | mod_prefix tid • "[" targ_cl "]" "."
  130 mod_prefix_tid: mod_prefix tid •

    "."  shift, and go to state 117
    "["  shift, and go to state 118

    $default  reduce using rule 130 (mod_prefix_tid)


State 66

  177 tpattern_field_cl: tpattern_field_cl "," tpattern_field •

    $default  reduce using rule 177 (tpattern_field_cl)


State 67

   15 mod_field: "mod" tid • mod_exp

    "["  shift, and go to state 22
    "{"  shift, and go to state 23

    mod_exp   go to state 123
    tpattern  go to state 25


State 68

   13 mod_field: "typ" tid • "=" long_type_spec

    "="  shift, and go to state 124


State 69

   14 mod_field: "cls" cid • class_exp_class_spec

    "("  shift, and go to state 35

    class_exp_class_spec  go to state 125


State 70

   12 mod_field: "val" vid • "=" long_exp

    "="  shift, and go to state 126


State 71

   11 mod_field_sl: mod_field_sl mod_field ";" •

    $default  reduce using rule 11 (mod_field_sl)


State 72

    9 mod_exp: tpattern "{" mod_field_sl "}" •

    $default  reduce using rule 9 (mod_exp)


State 73

  157 class_exp_class_spec: "(" tid class_spec • ")" "{" type_query_exp_sl "}"

    ")"  shift, and go to state 127


State 74

   68 if_exp: "if" • bracketed_exp "then" bracketed_exp
   69       | "if" • bracketed_exp "then" bracketed_exp "else" primary_exp

    "("  shift, and go to state 83
    "{"  shift, and go to state 128

    bracketed_exp  go to state 129
    paren_exp      go to state 92
    vtupleExpr     go to state 93
    vstructExpr    go to state 94
    chain_exp      go to state 99


State 75

   91 unary_op: "not" •

    $default  reduce using rule 91 (unary_op)


State 76

   60 int_expr: "42" •

    $default  reduce using rule 60 (int_expr)


State 77

   61 int_expr: "0x2a" •

    $default  reduce using rule 61 (int_expr)


State 78

   62 int_expr: "42u" •

    $default  reduce using rule 62 (int_expr)


State 79

   63 int_expr: "0x2Au" •

    $default  reduce using rule 63 (int_expr)


State 80

   30 floatl: "4.2" •

    $default  reduce using rule 30 (floatl)


State 81

   65 stringls: "\"dq-string-literal\"" •

    $default  reduce using rule 65 (stringls)


State 82

   64 stringls: "'sq-string-literal'" •

    $default  reduce using rule 64 (stringls)


State 83

   48 paren_exp: "(" • long_exp ")"
   49 vtupleExpr: "(" • ")"
   50           | "(" • expr "," ")"
   51           | "(" • expr_cl2 ")"

    "val_id"                 shift, and go to state 27
    "TypeId"                 shift, and go to state 16
    "if"                     shift, and go to state 74
    "not"                    shift, and go to state 75
    "42"                     shift, and go to state 76
    "0x2a"                   shift, and go to state 77
    "42u"                    shift, and go to state 78
    "0x2Au"                  shift, and go to state 79
    "4.2"                    shift, and go to state 80
    "\"dq-string-literal\""  shift, and go to state 81
    "'sq-string-literal'"    shift, and go to state 82
    "("                      shift, and go to state 130
    ")"                      shift, and go to state 131
    "{"                      shift, and go to state 84
    "+"                      shift, and go to state 85
    "-"                      shift, and go to state 86

    tid              go to state 44
    vid              go to state 87
    floatl           go to state 88
    mod_prefix       go to state 89
    expr             go to state 132
    long_exp         go to state 133
    expr_cl2         go to state 134
    bracketed_exp    go to state 91
    paren_exp        go to state 92
    vtupleExpr       go to state 93
    vstructExpr      go to state 94
    primary_exp      go to state 95
    int_expr         go to state 96
    stringls         go to state 97
    if_exp           go to state 98
    chain_exp        go to state 99
    lambda_exp       go to state 135
    postfix_exp      go to state 100
    vcall_exp        go to state 101
    dot_name_exp     go to state 102
    dot_index_exp    go to state 103
    unary_exp        go to state 104
    unary_op         go to state 105
    binary_exp       go to state 106
    mul_binary_exp   go to state 107
    add_binary_exp   go to state 108
    cmp_binary_exp   go to state 109
    eq_binary_exp    go to state 110
    and_binary_exp   go to state 111
    xor_binary_exp   go to state 112
    or_binary_exp    go to state 113
    type_spec        go to state 136
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48
    fn_type_spec     go to state 137
    vpattern         go to state 138


State 84

   52 vstructExpr: "{" • struct_exp_field_cl "}"
   70 chain_exp: "{" • long_exp "}"
   71          | "{" • chain_prefix "}"
   72          | "{" • chain_prefix long_exp "}"
  131 tuple_type_spec: "{" • type_spec "}"
  132                | "{" • type_spec_cl2 "}"

    "val_id"                 shift, and go to state 27
    "TypeId"                 shift, and go to state 16
    "if"                     shift, and go to state 74
    "const"                  shift, and go to state 139
    "val"                    shift, and go to state 140
    "var"                    shift, and go to state 141
    "set"                    shift, and go to state 142
    "not"                    shift, and go to state 75
    "discard"                shift, and go to state 143
    "42"                     shift, and go to state 76
    "0x2a"                   shift, and go to state 77
    "42u"                    shift, and go to state 78
    "0x2Au"                  shift, and go to state 79
    "4.2"                    shift, and go to state 80
    "\"dq-string-literal\""  shift, and go to state 81
    "'sq-string-literal'"    shift, and go to state 82
    "("                      shift, and go to state 130
    "{"                      shift, and go to state 84
    "+"                      shift, and go to state 85
    "-"                      shift, and go to state 86

    chain_prefix_stmt    go to state 144
    const_stmt           go to state 145
    val_stmt             go to state 146
    var_stmt             go to state 147
    set_stmt             go to state 148
    discard_stmt         go to state 149
    tid                  go to state 44
    vid                  go to state 150
    floatl               go to state 88
    mod_prefix           go to state 89
    expr                 go to state 151
    long_exp             go to state 152
    bracketed_exp        go to state 91
    paren_exp            go to state 92
    vtupleExpr           go to state 93
    vstructExpr          go to state 94
    primary_exp          go to state 95
    int_expr             go to state 96
    stringls             go to state 97
    if_exp               go to state 98
    chain_exp            go to state 99
    chain_prefix         go to state 153
    lambda_exp           go to state 135
    postfix_exp          go to state 100
    vcall_exp            go to state 101
    dot_name_exp         go to state 102
    dot_index_exp        go to state 103
    unary_exp            go to state 104
    unary_op             go to state 105
    binary_exp           go to state 106
    mul_binary_exp       go to state 107
    add_binary_exp       go to state 108
    cmp_binary_exp       go to state 109
    eq_binary_exp        go to state 110
    and_binary_exp       go to state 111
    xor_binary_exp       go to state 112
    or_binary_exp        go to state 113
    type_spec_cl2        go to state 63
    type_spec            go to state 154
    mod_prefix_tid       go to state 47
    tuple_type_spec      go to state 48
    fn_type_spec         go to state 137
    struct_exp_field     go to state 155
    vpattern             go to state 138
    struct_exp_field_cl  go to state 156


State 85

   89 unary_op: "+" •

    $default  reduce using rule 89 (unary_op)


State 86

   90 unary_op: "-" •

    $default  reduce using rule 90 (unary_op)


State 87

   54 primary_exp: vid •

    $default  reduce using rule 54 (primary_exp)


State 88

   56 primary_exp: floatl •

    $default  reduce using rule 56 (primary_exp)


State 89

   35 mod_prefix: mod_prefix • tid "."
   36           | mod_prefix • tid "[" targ_cl "]" "."
   59 primary_exp: mod_prefix • vid
  130 mod_prefix_tid: mod_prefix • tid

    "val_id"  shift, and go to state 27
    "TypeId"  shift, and go to state 16

    tid  go to state 65
    vid  go to state 157


State 90

  144 targ: expr •

    $default  reduce using rule 144 (targ)


State 91

   53 primary_exp: bracketed_exp •

    $default  reduce using rule 53 (primary_exp)


State 92

   44 bracketed_exp: paren_exp •

    $default  reduce using rule 44 (bracketed_exp)


State 93

   45 bracketed_exp: vtupleExpr •

    $default  reduce using rule 45 (bracketed_exp)


State 94

   46 bracketed_exp: vstructExpr •

    $default  reduce using rule 46 (bracketed_exp)


State 95

   76 postfix_exp: primary_exp •

    $default  reduce using rule 76 (postfix_exp)


State 96

   55 primary_exp: int_expr •

    $default  reduce using rule 55 (primary_exp)


State 97

   57 primary_exp: stringls •
   66 stringls: stringls • "'sq-string-literal'"
   67         | stringls • "\"dq-string-literal\""

    "\"dq-string-literal\""  shift, and go to state 158
    "'sq-string-literal'"    shift, and go to state 159

    $default  reduce using rule 57 (primary_exp)


State 98

   58 primary_exp: if_exp •

    $default  reduce using rule 58 (primary_exp)


State 99

   47 bracketed_exp: chain_exp •

    $default  reduce using rule 47 (bracketed_exp)


State 100

   80 vcall_exp: postfix_exp • "(" ")"
   81          | postfix_exp • "(" varg_cl ")"
   82 dot_name_exp: postfix_exp • "." "val_id"
   85 dot_index_exp: postfix_exp • "." int_expr
   86              | postfix_exp • "." bracketed_exp
   87 unary_exp: postfix_exp •

    "."  shift, and go to state 160
    "("  shift, and go to state 161

    $default  reduce using rule 87 (unary_exp)


State 101

   77 postfix_exp: vcall_exp •

    $default  reduce using rule 77 (postfix_exp)


State 102

   78 postfix_exp: dot_name_exp •

    $default  reduce using rule 78 (postfix_exp)


State 103

   79 postfix_exp: dot_index_exp •

    $default  reduce using rule 79 (postfix_exp)


State 104

   96 mul_binary_exp: unary_exp •

    $default  reduce using rule 96 (mul_binary_exp)


State 105

   88 unary_exp: unary_op • unary_exp

    "val_id"                 shift, and go to state 27
    "TypeId"                 shift, and go to state 16
    "if"                     shift, and go to state 74
    "not"                    shift, and go to state 75
    "42"                     shift, and go to state 76
    "0x2a"                   shift, and go to state 77
    "42u"                    shift, and go to state 78
    "0x2Au"                  shift, and go to state 79
    "4.2"                    shift, and go to state 80
    "\"dq-string-literal\""  shift, and go to state 81
    "'sq-string-literal'"    shift, and go to state 82
    "("                      shift, and go to state 83
    "{"                      shift, and go to state 84
    "+"                      shift, and go to state 85
    "-"                      shift, and go to state 86

    tid              go to state 44
    vid              go to state 87
    floatl           go to state 88
    mod_prefix       go to state 89
    bracketed_exp    go to state 91
    paren_exp        go to state 92
    vtupleExpr       go to state 93
    vstructExpr      go to state 94
    primary_exp      go to state 95
    int_expr         go to state 96
    stringls         go to state 97
    if_exp           go to state 98
    chain_exp        go to state 99
    postfix_exp      go to state 100
    vcall_exp        go to state 101
    dot_name_exp     go to state 102
    dot_index_exp    go to state 103
    unary_exp        go to state 162
    unary_op         go to state 105
    type_spec        go to state 136
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48


State 106

   37 expr: binary_exp •

    $default  reduce using rule 37 (expr)


State 107

   97 mul_binary_exp: mul_binary_exp • mul_binary_op unary_exp
  100 add_binary_exp: mul_binary_exp •

    "*"  shift, and go to state 163
    "/"  shift, and go to state 164
    "%"  shift, and go to state 165

    $default  reduce using rule 100 (add_binary_exp)

    mul_binary_op  go to state 166


State 108

  101 add_binary_exp: add_binary_exp • add_binary_op mul_binary_exp
  106 cmp_binary_exp: add_binary_exp •

    "+"  shift, and go to state 167
    "-"  shift, and go to state 168

    $default  reduce using rule 106 (cmp_binary_exp)

    add_binary_op  go to state 169


State 109

  107 cmp_binary_exp: cmp_binary_exp • cmp_binary_op add_binary_exp
  110 eq_binary_exp: cmp_binary_exp •

    "<"   shift, and go to state 170
    "<="  shift, and go to state 171
    ">"   shift, and go to state 172
    ">="  shift, and go to state 173

    $default  reduce using rule 110 (eq_binary_exp)

    cmp_binary_op  go to state 174


State 110

  111 eq_binary_exp: eq_binary_exp • eq_binary_op cmp_binary_exp
  112 and_binary_exp: eq_binary_exp •

    "=="  shift, and go to state 175
    "!="  shift, and go to state 176

    $default  reduce using rule 112 (and_binary_exp)

    eq_binary_op  go to state 177


State 111

  113 and_binary_exp: and_binary_exp • "and" eq_binary_exp
  114 xor_binary_exp: and_binary_exp •

    "and"  shift, and go to state 178

    $default  reduce using rule 114 (xor_binary_exp)


State 112

  115 xor_binary_exp: xor_binary_exp • "xor" and_binary_exp
  116 or_binary_exp: xor_binary_exp •

    "xor"  shift, and go to state 179

    $default  reduce using rule 116 (or_binary_exp)


State 113

   92 binary_exp: or_binary_exp •
  117 or_binary_exp: or_binary_exp • "or" xor_binary_exp

    "or"  shift, and go to state 180

    $default  reduce using rule 92 (binary_exp)


State 114

   83 dot_name_exp: type_spec • "::" "TypeId"
   84             | type_spec • "::" "TypeId" "using" paren_exp
  143 targ: type_spec •

    "::"  shift, and go to state 181

    $default  reduce using rule 143 (targ)


State 115

  145 targ_cl: targ •

    $default  reduce using rule 145 (targ_cl)


State 116

   34 mod_prefix: tid "[" targ_cl • "]" "."
  146 targ_cl: targ_cl • "," targ

    ","  shift, and go to state 182
    "]"  shift, and go to state 183


State 117

   35 mod_prefix: mod_prefix tid "." •

    $default  reduce using rule 35 (mod_prefix)


State 118

   36 mod_prefix: mod_prefix tid "[" • targ_cl "]" "."

    "val_id"                 shift, and go to state 27
    "TypeId"                 shift, and go to state 16
    "if"                     shift, and go to state 74
    "not"                    shift, and go to state 75
    "42"                     shift, and go to state 76
    "0x2a"                   shift, and go to state 77
    "42u"                    shift, and go to state 78
    "0x2Au"                  shift, and go to state 79
    "4.2"                    shift, and go to state 80
    "\"dq-string-literal\""  shift, and go to state 81
    "'sq-string-literal'"    shift, and go to state 82
    "("                      shift, and go to state 83
    "{"                      shift, and go to state 84
    "+"                      shift, and go to state 85
    "-"                      shift, and go to state 86

    tid              go to state 44
    vid              go to state 87
    floatl           go to state 88
    mod_prefix       go to state 89
    expr             go to state 90
    bracketed_exp    go to state 91
    paren_exp        go to state 92
    vtupleExpr       go to state 93
    vstructExpr      go to state 94
    primary_exp      go to state 95
    int_expr         go to state 96
    stringls         go to state 97
    if_exp           go to state 98
    chain_exp        go to state 99
    postfix_exp      go to state 100
    vcall_exp        go to state 101
    dot_name_exp     go to state 102
    dot_index_exp    go to state 103
    unary_exp        go to state 104
    unary_op         go to state 105
    binary_exp       go to state 106
    mul_binary_exp   go to state 107
    add_binary_exp   go to state 108
    cmp_binary_exp   go to state 109
    eq_binary_exp    go to state 110
    and_binary_exp   go to state 111
    xor_binary_exp   go to state 112
    or_binary_exp    go to state 113
    type_spec        go to state 114
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48
    targ             go to state 115
    targ_cl          go to state 184


State 119

  123 type_spec_cl2: type_spec_cl2 "," • type_spec

    "TypeId"  shift, and go to state 16
    "{"       shift, and go to state 43

    tid              go to state 44
    mod_prefix       go to state 45
    type_spec        go to state 185
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48


State 120

  132 tuple_type_spec: "{" type_spec_cl2 "}" •

    $default  reduce using rule 132 (tuple_type_spec)


State 121

  122 type_spec_cl2: type_spec "," • type_spec

    "TypeId"  shift, and go to state 16
    "{"       shift, and go to state 43

    tid              go to state 44
    mod_prefix       go to state 45
    type_spec        go to state 186
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48


State 122

  131 tuple_type_spec: "{" type_spec "}" •

    $default  reduce using rule 131 (tuple_type_spec)


State 123

   15 mod_field: "mod" tid mod_exp •

    $default  reduce using rule 15 (mod_field)


State 124

   13 mod_field: "typ" tid "=" • long_type_spec

    "enum"  shift, and go to state 187
    "("     shift, and go to state 188
    "{"     shift, and go to state 189

    long_type_spec    go to state 190
    struct_type_spec  go to state 191
    enum_type_spec    go to state 192
    fn_type_spec      go to state 193
    vpattern          go to state 138


State 125

   14 mod_field: "cls" cid class_exp_class_spec •

    $default  reduce using rule 14 (mod_field)


State 126

   12 mod_field: "val" vid "=" • long_exp

    "val_id"                 shift, and go to state 27
    "TypeId"                 shift, and go to state 16
    "if"                     shift, and go to state 74
    "not"                    shift, and go to state 75
    "42"                     shift, and go to state 76
    "0x2a"                   shift, and go to state 77
    "42u"                    shift, and go to state 78
    "0x2Au"                  shift, and go to state 79
    "4.2"                    shift, and go to state 80
    "\"dq-string-literal\""  shift, and go to state 81
    "'sq-string-literal'"    shift, and go to state 82
    "("                      shift, and go to state 130
    "{"                      shift, and go to state 84
    "+"                      shift, and go to state 85
    "-"                      shift, and go to state 86

    tid              go to state 44
    vid              go to state 87
    floatl           go to state 88
    mod_prefix       go to state 89
    expr             go to state 151
    long_exp         go to state 194
    bracketed_exp    go to state 91
    paren_exp        go to state 92
    vtupleExpr       go to state 93
    vstructExpr      go to state 94
    primary_exp      go to state 95
    int_expr         go to state 96
    stringls         go to state 97
    if_exp           go to state 98
    chain_exp        go to state 99
    lambda_exp       go to state 135
    postfix_exp      go to state 100
    vcall_exp        go to state 101
    dot_name_exp     go to state 102
    dot_index_exp    go to state 103
    unary_exp        go to state 104
    unary_op         go to state 105
    binary_exp       go to state 106
    mul_binary_exp   go to state 107
    add_binary_exp   go to state 108
    cmp_binary_exp   go to state 109
    eq_binary_exp    go to state 110
    and_binary_exp   go to state 111
    xor_binary_exp   go to state 112
    or_binary_exp    go to state 113
    type_spec        go to state 136
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48
    fn_type_spec     go to state 137
    vpattern         go to state 138


State 127

  157 class_exp_class_spec: "(" tid class_spec ")" • "{" type_query_exp_sl "}"

    "{"  shift, and go to state 195


State 128

   52 vstructExpr: "{" • struct_exp_field_cl "}"
   70 chain_exp: "{" • long_exp "}"
   71          | "{" • chain_prefix "}"
   72          | "{" • chain_prefix long_exp "}"

    "val_id"                 shift, and go to state 27
    "TypeId"                 shift, and go to state 16
    "if"                     shift, and go to state 74
    "const"                  shift, and go to state 139
    "val"                    shift, and go to state 140
    "var"                    shift, and go to state 141
    "set"                    shift, and go to state 142
    "not"                    shift, and go to state 75
    "discard"                shift, and go to state 143
    "42"                     shift, and go to state 76
    "0x2a"                   shift, and go to state 77
    "42u"                    shift, and go to state 78
    "0x2Au"                  shift, and go to state 79
    "4.2"                    shift, and go to state 80
    "\"dq-string-literal\""  shift, and go to state 81
    "'sq-string-literal'"    shift, and go to state 82
    "("                      shift, and go to state 130
    "{"                      shift, and go to state 84
    "+"                      shift, and go to state 85
    "-"                      shift, and go to state 86

    chain_prefix_stmt    go to state 144
    const_stmt           go to state 145
    val_stmt             go to state 146
    var_stmt             go to state 147
    set_stmt             go to state 148
    discard_stmt         go to state 149
    tid                  go to state 44
    vid                  go to state 150
    floatl               go to state 88
    mod_prefix           go to state 89
    expr                 go to state 151
    long_exp             go to state 152
    bracketed_exp        go to state 91
    paren_exp            go to state 92
    vtupleExpr           go to state 93
    vstructExpr          go to state 94
    primary_exp          go to state 95
    int_expr             go to state 96
    stringls             go to state 97
    if_exp               go to state 98
    chain_exp            go to state 99
    chain_prefix         go to state 153
    lambda_exp           go to state 135
    postfix_exp          go to state 100
    vcall_exp            go to state 101
    dot_name_exp         go to state 102
    dot_index_exp        go to state 103
    unary_exp            go to state 104
    unary_op             go to state 105
    binary_exp           go to state 106
    mul_binary_exp       go to state 107
    add_binary_exp       go to state 108
    cmp_binary_exp       go to state 109
    eq_binary_exp        go to state 110
    and_binary_exp       go to state 111
    xor_binary_exp       go to state 112
    or_binary_exp        go to state 113
    type_spec            go to state 136
    mod_prefix_tid       go to state 47
    tuple_type_spec      go to state 48
    fn_type_spec         go to state 137
    struct_exp_field     go to state 155
    vpattern             go to state 138
    struct_exp_field_cl  go to state 156


State 129

   68 if_exp: "if" bracketed_exp • "then" bracketed_exp
   69       | "if" bracketed_exp • "then" bracketed_exp "else" primary_exp

    "then"  shift, and go to state 196


State 130

   48 paren_exp: "(" • long_exp ")"
   49 vtupleExpr: "(" • ")"
   50           | "(" • expr "," ")"
   51           | "(" • expr_cl2 ")"
  169 vpattern: "(" • vpattern_field_cl ")"
  170         | "(" • ")"

    "val_id"                 shift, and go to state 27
    "TypeId"                 shift, and go to state 16
    "if"                     shift, and go to state 74
    "not"                    shift, and go to state 75
    "out"                    shift, and go to state 197
    "inout"                  shift, and go to state 198
    "42"                     shift, and go to state 76
    "0x2a"                   shift, and go to state 77
    "42u"                    shift, and go to state 78
    "0x2Au"                  shift, and go to state 79
    "4.2"                    shift, and go to state 80
    "\"dq-string-literal\""  shift, and go to state 81
    "'sq-string-literal'"    shift, and go to state 82
    "("                      shift, and go to state 130
    ")"                      shift, and go to state 199
    "{"                      shift, and go to state 84
    "+"                      shift, and go to state 85
    "-"                      shift, and go to state 86

    tid                go to state 44
    vid                go to state 200
    floatl             go to state 88
    mod_prefix         go to state 89
    expr               go to state 132
    long_exp           go to state 133
    expr_cl2           go to state 134
    bracketed_exp      go to state 91
    paren_exp          go to state 92
    vtupleExpr         go to state 93
    vstructExpr        go to state 94
    primary_exp        go to state 95
    int_expr           go to state 96
    stringls           go to state 97
    if_exp             go to state 98
    chain_exp          go to state 99
    lambda_exp         go to state 135
    postfix_exp        go to state 100
    vcall_exp          go to state 101
    dot_name_exp       go to state 102
    dot_index_exp      go to state 103
    unary_exp          go to state 104
    unary_op           go to state 105
    binary_exp         go to state 106
    mul_binary_exp     go to state 107
    add_binary_exp     go to state 108
    cmp_binary_exp     go to state 109
    eq_binary_exp      go to state 110
    and_binary_exp     go to state 111
    xor_binary_exp     go to state 112
    or_binary_exp      go to state 113
    type_spec          go to state 136
    mod_prefix_tid     go to state 47
    tuple_type_spec    go to state 48
    fn_type_spec       go to state 137
    vpattern_field     go to state 201
    vpattern           go to state 138
    vpattern_field_cl  go to state 202


State 131

   49 vtupleExpr: "(" ")" •

    $default  reduce using rule 49 (vtupleExpr)


State 132

   38 long_exp: expr •
   40 expr_cl2: expr • "," expr
   50 vtupleExpr: "(" expr • "," ")"

    ","  shift, and go to state 203

    $default  reduce using rule 38 (long_exp)


State 133

   48 paren_exp: "(" long_exp • ")"

    ")"  shift, and go to state 204


State 134

   41 expr_cl2: expr_cl2 • "," expr
   51 vtupleExpr: "(" expr_cl2 • ")"

    ","  shift, and go to state 205
    ")"  shift, and go to state 206


State 135

   39 long_exp: lambda_exp •

    $default  reduce using rule 39 (long_exp)


State 136

   83 dot_name_exp: type_spec • "::" "TypeId"
   84             | type_spec • "::" "TypeId" "using" paren_exp

    "::"  shift, and go to state 181


State 137

   75 lambda_exp: fn_type_spec • bracketed_exp

    "("  shift, and go to state 83
    "{"  shift, and go to state 128

    bracketed_exp  go to state 207
    paren_exp      go to state 92
    vtupleExpr     go to state 93
    vstructExpr    go to state 94
    chain_exp      go to state 99


State 138

  142 fn_type_spec: vpattern • "->" type_spec

    "->"  shift, and go to state 208


State 139

   22 const_stmt: "const" • lpattern "=" expr

    "val_id"  shift, and go to state 27
    "{"       shift, and go to state 209

    vid                    go to state 210
    lpattern_field         go to state 211
    destructured_lpattern  go to state 212
    lpattern               go to state 213


State 140

   23 val_stmt: "val" • lpattern "=" expr

    "val_id"  shift, and go to state 27
    "{"       shift, and go to state 209

    vid                    go to state 210
    lpattern_field         go to state 211
    destructured_lpattern  go to state 212
    lpattern               go to state 214


State 141

   24 var_stmt: "var" • lpattern "=" expr

    "val_id"  shift, and go to state 27
    "{"       shift, and go to state 209

    vid                    go to state 210
    lpattern_field         go to state 211
    destructured_lpattern  go to state 212
    lpattern               go to state 215


State 142

   25 set_stmt: "set" • expr "=" expr

    "val_id"                 shift, and go to state 27
    "TypeId"                 shift, and go to state 16
    "if"                     shift, and go to state 74
    "not"                    shift, and go to state 75
    "42"                     shift, and go to state 76
    "0x2a"                   shift, and go to state 77
    "42u"                    shift, and go to state 78
    "0x2Au"                  shift, and go to state 79
    "4.2"                    shift, and go to state 80
    "\"dq-string-literal\""  shift, and go to state 81
    "'sq-string-literal'"    shift, and go to state 82
    "("                      shift, and go to state 83
    "{"                      shift, and go to state 84
    "+"                      shift, and go to state 85
    "-"                      shift, and go to state 86

    tid              go to state 44
    vid              go to state 87
    floatl           go to state 88
    mod_prefix       go to state 89
    expr             go to state 216
    bracketed_exp    go to state 91
    paren_exp        go to state 92
    vtupleExpr       go to state 93
    vstructExpr      go to state 94
    primary_exp      go to state 95
    int_expr         go to state 96
    stringls         go to state 97
    if_exp           go to state 98
    chain_exp        go to state 99
    postfix_exp      go to state 100
    vcall_exp        go to state 101
    dot_name_exp     go to state 102
    dot_index_exp    go to state 103
    unary_exp        go to state 104
    unary_op         go to state 105
    binary_exp       go to state 106
    mul_binary_exp   go to state 107
    add_binary_exp   go to state 108
    cmp_binary_exp   go to state 109
    eq_binary_exp    go to state 110
    and_binary_exp   go to state 111
    xor_binary_exp   go to state 112
    or_binary_exp    go to state 113
    type_spec        go to state 136
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48


State 143

   26 discard_stmt: "discard" • expr

    "val_id"                 shift, and go to state 27
    "TypeId"                 shift, and go to state 16
    "if"                     shift, and go to state 74
    "not"                    shift, and go to state 75
    "42"                     shift, and go to state 76
    "0x2a"                   shift, and go to state 77
    "42u"                    shift, and go to state 78
    "0x2Au"                  shift, and go to state 79
    "4.2"                    shift, and go to state 80
    "\"dq-string-literal\""  shift, and go to state 81
    "'sq-string-literal'"    shift, and go to state 82
    "("                      shift, and go to state 83
    "{"                      shift, and go to state 84
    "+"                      shift, and go to state 85
    "-"                      shift, and go to state 86

    tid              go to state 44
    vid              go to state 87
    floatl           go to state 88
    mod_prefix       go to state 89
    expr             go to state 217
    bracketed_exp    go to state 91
    paren_exp        go to state 92
    vtupleExpr       go to state 93
    vstructExpr      go to state 94
    primary_exp      go to state 95
    int_expr         go to state 96
    stringls         go to state 97
    if_exp           go to state 98
    chain_exp        go to state 99
    postfix_exp      go to state 100
    vcall_exp        go to state 101
    dot_name_exp     go to state 102
    dot_index_exp    go to state 103
    unary_exp        go to state 104
    unary_op         go to state 105
    binary_exp       go to state 106
    mul_binary_exp   go to state 107
    add_binary_exp   go to state 108
    cmp_binary_exp   go to state 109
    eq_binary_exp    go to state 110
    and_binary_exp   go to state 111
    xor_binary_exp   go to state 112
    or_binary_exp    go to state 113
    type_spec        go to state 136
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48


State 144

   73 chain_prefix: chain_prefix_stmt • ";"

    ";"  shift, and go to state 218


State 145

   17 chain_prefix_stmt: const_stmt •

    $default  reduce using rule 17 (chain_prefix_stmt)


State 146

   18 chain_prefix_stmt: val_stmt •

    $default  reduce using rule 18 (chain_prefix_stmt)


State 147

   19 chain_prefix_stmt: var_stmt •

    $default  reduce using rule 19 (chain_prefix_stmt)


State 148

   20 chain_prefix_stmt: set_stmt •

    $default  reduce using rule 20 (chain_prefix_stmt)


State 149

   21 chain_prefix_stmt: discard_stmt •

    $default  reduce using rule 21 (chain_prefix_stmt)


State 150

   54 primary_exp: vid •
  158 struct_exp_field: vid • "=" expr

    "="  shift, and go to state 219

    $default  reduce using rule 54 (primary_exp)


State 151

   38 long_exp: expr •

    $default  reduce using rule 38 (long_exp)


State 152

   70 chain_exp: "{" long_exp • "}"

    "}"  shift, and go to state 220


State 153

   71 chain_exp: "{" chain_prefix • "}"
   72          | "{" chain_prefix • long_exp "}"
   74 chain_prefix: chain_prefix • chain_prefix_stmt ";"

    "val_id"                 shift, and go to state 27
    "TypeId"                 shift, and go to state 16
    "if"                     shift, and go to state 74
    "const"                  shift, and go to state 139
    "val"                    shift, and go to state 140
    "var"                    shift, and go to state 141
    "set"                    shift, and go to state 142
    "not"                    shift, and go to state 75
    "discard"                shift, and go to state 143
    "42"                     shift, and go to state 76
    "0x2a"                   shift, and go to state 77
    "42u"                    shift, and go to state 78
    "0x2Au"                  shift, and go to state 79
    "4.2"                    shift, and go to state 80
    "\"dq-string-literal\""  shift, and go to state 81
    "'sq-string-literal'"    shift, and go to state 82
    "("                      shift, and go to state 130
    "{"                      shift, and go to state 84
    "}"                      shift, and go to state 221
    "+"                      shift, and go to state 85
    "-"                      shift, and go to state 86

    chain_prefix_stmt  go to state 222
    const_stmt         go to state 145
    val_stmt           go to state 146
    var_stmt           go to state 147
    set_stmt           go to state 148
    discard_stmt       go to state 149
    tid                go to state 44
    vid                go to state 87
    floatl             go to state 88
    mod_prefix         go to state 89
    expr               go to state 151
    long_exp           go to state 223
    bracketed_exp      go to state 91
    paren_exp          go to state 92
    vtupleExpr         go to state 93
    vstructExpr        go to state 94
    primary_exp        go to state 95
    int_expr           go to state 96
    stringls           go to state 97
    if_exp             go to state 98
    chain_exp          go to state 99
    lambda_exp         go to state 135
    postfix_exp        go to state 100
    vcall_exp          go to state 101
    dot_name_exp       go to state 102
    dot_index_exp      go to state 103
    unary_exp          go to state 104
    unary_op           go to state 105
    binary_exp         go to state 106
    mul_binary_exp     go to state 107
    add_binary_exp     go to state 108
    cmp_binary_exp     go to state 109
    eq_binary_exp      go to state 110
    and_binary_exp     go to state 111
    xor_binary_exp     go to state 112
    or_binary_exp      go to state 113
    type_spec          go to state 136
    mod_prefix_tid     go to state 47
    tuple_type_spec    go to state 48
    fn_type_spec       go to state 137
    vpattern           go to state 138


State 154

   83 dot_name_exp: type_spec • "::" "TypeId"
   84             | type_spec • "::" "TypeId" "using" paren_exp
  122 type_spec_cl2: type_spec • "," type_spec
  131 tuple_type_spec: "{" type_spec • "}"

    ","   shift, and go to state 121
    "::"  shift, and go to state 181
    "}"   shift, and go to state 122


State 155

  178 struct_exp_field_cl: struct_exp_field •

    $default  reduce using rule 178 (struct_exp_field_cl)


State 156

   52 vstructExpr: "{" struct_exp_field_cl • "}"
  179 struct_exp_field_cl: struct_exp_field_cl • "," struct_exp_field

    ","  shift, and go to state 224
    "}"  shift, and go to state 225


State 157

   59 primary_exp: mod_prefix vid •

    $default  reduce using rule 59 (primary_exp)


State 158

   67 stringls: stringls "\"dq-string-literal\"" •

    $default  reduce using rule 67 (stringls)


State 159

   66 stringls: stringls "'sq-string-literal'" •

    $default  reduce using rule 66 (stringls)


State 160

   82 dot_name_exp: postfix_exp "." • "val_id"
   85 dot_index_exp: postfix_exp "." • int_expr
   86              | postfix_exp "." • bracketed_exp

    "val_id"  shift, and go to state 226
    "42"      shift, and go to state 76
    "0x2a"    shift, and go to state 77
    "42u"     shift, and go to state 78
    "0x2Au"   shift, and go to state 79
    "("       shift, and go to state 83
    "{"       shift, and go to state 128

    bracketed_exp  go to state 227
    paren_exp      go to state 92
    vtupleExpr     go to state 93
    vstructExpr    go to state 94
    int_expr       go to state 228
    chain_exp      go to state 99


State 161

   80 vcall_exp: postfix_exp "(" • ")"
   81          | postfix_exp "(" • varg_cl ")"

    "val_id"                 shift, and go to state 27
    "TypeId"                 shift, and go to state 16
    "if"                     shift, and go to state 74
    "not"                    shift, and go to state 75
    "out"                    shift, and go to state 229
    "inout"                  shift, and go to state 230
    "42"                     shift, and go to state 76
    "0x2a"                   shift, and go to state 77
    "42u"                    shift, and go to state 78
    "0x2Au"                  shift, and go to state 79
    "4.2"                    shift, and go to state 80
    "\"dq-string-literal\""  shift, and go to state 81
    "'sq-string-literal'"    shift, and go to state 82
    "("                      shift, and go to state 83
    ")"                      shift, and go to state 231
    "{"                      shift, and go to state 84
    "+"                      shift, and go to state 85
    "-"                      shift, and go to state 86

    tid              go to state 44
    vid              go to state 87
    floatl           go to state 88
    mod_prefix       go to state 89
    expr             go to state 232
    bracketed_exp    go to state 91
    paren_exp        go to state 92
    vtupleExpr       go to state 93
    vstructExpr      go to state 94
    primary_exp      go to state 95
    int_expr         go to state 96
    stringls         go to state 97
    if_exp           go to state 98
    chain_exp        go to state 99
    postfix_exp      go to state 100
    vcall_exp        go to state 101
    dot_name_exp     go to state 102
    dot_index_exp    go to state 103
    unary_exp        go to state 104
    unary_op         go to state 105
    binary_exp       go to state 106
    mul_binary_exp   go to state 107
    add_binary_exp   go to state 108
    cmp_binary_exp   go to state 109
    eq_binary_exp    go to state 110
    and_binary_exp   go to state 111
    xor_binary_exp   go to state 112
    or_binary_exp    go to state 113
    type_spec        go to state 136
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48
    varg             go to state 233
    varg_cl          go to state 234


State 162

   88 unary_exp: unary_op unary_exp •

    $default  reduce using rule 88 (unary_exp)


State 163

   93 mul_binary_op: "*" •

    $default  reduce using rule 93 (mul_binary_op)


State 164

   94 mul_binary_op: "/" •

    $default  reduce using rule 94 (mul_binary_op)


State 165

   95 mul_binary_op: "%" •

    $default  reduce using rule 95 (mul_binary_op)


State 166

   97 mul_binary_exp: mul_binary_exp mul_binary_op • unary_exp

    "val_id"                 shift, and go to state 27
    "TypeId"                 shift, and go to state 16
    "if"                     shift, and go to state 74
    "not"                    shift, and go to state 75
    "42"                     shift, and go to state 76
    "0x2a"                   shift, and go to state 77
    "42u"                    shift, and go to state 78
    "0x2Au"                  shift, and go to state 79
    "4.2"                    shift, and go to state 80
    "\"dq-string-literal\""  shift, and go to state 81
    "'sq-string-literal'"    shift, and go to state 82
    "("                      shift, and go to state 83
    "{"                      shift, and go to state 84
    "+"                      shift, and go to state 85
    "-"                      shift, and go to state 86

    tid              go to state 44
    vid              go to state 87
    floatl           go to state 88
    mod_prefix       go to state 89
    bracketed_exp    go to state 91
    paren_exp        go to state 92
    vtupleExpr       go to state 93
    vstructExpr      go to state 94
    primary_exp      go to state 95
    int_expr         go to state 96
    stringls         go to state 97
    if_exp           go to state 98
    chain_exp        go to state 99
    postfix_exp      go to state 100
    vcall_exp        go to state 101
    dot_name_exp     go to state 102
    dot_index_exp    go to state 103
    unary_exp        go to state 235
    unary_op         go to state 105
    type_spec        go to state 136
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48


State 167

   98 add_binary_op: "+" •

    $default  reduce using rule 98 (add_binary_op)


State 168

   99 add_binary_op: "-" •

    $default  reduce using rule 99 (add_binary_op)


State 169

  101 add_binary_exp: add_binary_exp add_binary_op • mul_binary_exp

    "val_id"                 shift, and go to state 27
    "TypeId"                 shift, and go to state 16
    "if"                     shift, and go to state 74
    "not"                    shift, and go to state 75
    "42"                     shift, and go to state 76
    "0x2a"                   shift, and go to state 77
    "42u"                    shift, and go to state 78
    "0x2Au"                  shift, and go to state 79
    "4.2"                    shift, and go to state 80
    "\"dq-string-literal\""  shift, and go to state 81
    "'sq-string-literal'"    shift, and go to state 82
    "("                      shift, and go to state 83
    "{"                      shift, and go to state 84
    "+"                      shift, and go to state 85
    "-"                      shift, and go to state 86

    tid              go to state 44
    vid              go to state 87
    floatl           go to state 88
    mod_prefix       go to state 89
    bracketed_exp    go to state 91
    paren_exp        go to state 92
    vtupleExpr       go to state 93
    vstructExpr      go to state 94
    primary_exp      go to state 95
    int_expr         go to state 96
    stringls         go to state 97
    if_exp           go to state 98
    chain_exp        go to state 99
    postfix_exp      go to state 100
    vcall_exp        go to state 101
    dot_name_exp     go to state 102
    dot_index_exp    go to state 103
    unary_exp        go to state 104
    unary_op         go to state 105
    mul_binary_exp   go to state 236
    type_spec        go to state 136
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48


State 170

  102 cmp_binary_op: "<" •

    $default  reduce using rule 102 (cmp_binary_op)


State 171

  103 cmp_binary_op: "<=" •

    $default  reduce using rule 103 (cmp_binary_op)


State 172

  104 cmp_binary_op: ">" •

    $default  reduce using rule 104 (cmp_binary_op)


State 173

  105 cmp_binary_op: ">=" •

    $default  reduce using rule 105 (cmp_binary_op)


State 174

  107 cmp_binary_exp: cmp_binary_exp cmp_binary_op • add_binary_exp

    "val_id"                 shift, and go to state 27
    "TypeId"                 shift, and go to state 16
    "if"                     shift, and go to state 74
    "not"                    shift, and go to state 75
    "42"                     shift, and go to state 76
    "0x2a"                   shift, and go to state 77
    "42u"                    shift, and go to state 78
    "0x2Au"                  shift, and go to state 79
    "4.2"                    shift, and go to state 80
    "\"dq-string-literal\""  shift, and go to state 81
    "'sq-string-literal'"    shift, and go to state 82
    "("                      shift, and go to state 83
    "{"                      shift, and go to state 84
    "+"                      shift, and go to state 85
    "-"                      shift, and go to state 86

    tid              go to state 44
    vid              go to state 87
    floatl           go to state 88
    mod_prefix       go to state 89
    bracketed_exp    go to state 91
    paren_exp        go to state 92
    vtupleExpr       go to state 93
    vstructExpr      go to state 94
    primary_exp      go to state 95
    int_expr         go to state 96
    stringls         go to state 97
    if_exp           go to state 98
    chain_exp        go to state 99
    postfix_exp      go to state 100
    vcall_exp        go to state 101
    dot_name_exp     go to state 102
    dot_index_exp    go to state 103
    unary_exp        go to state 104
    unary_op         go to state 105
    mul_binary_exp   go to state 107
    add_binary_exp   go to state 237
    type_spec        go to state 136
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48


State 175

  108 eq_binary_op: "==" •

    $default  reduce using rule 108 (eq_binary_op)


State 176

  109 eq_binary_op: "!=" •

    $default  reduce using rule 109 (eq_binary_op)


State 177

  111 eq_binary_exp: eq_binary_exp eq_binary_op • cmp_binary_exp

    "val_id"                 shift, and go to state 27
    "TypeId"                 shift, and go to state 16
    "if"                     shift, and go to state 74
    "not"                    shift, and go to state 75
    "42"                     shift, and go to state 76
    "0x2a"                   shift, and go to state 77
    "42u"                    shift, and go to state 78
    "0x2Au"                  shift, and go to state 79
    "4.2"                    shift, and go to state 80
    "\"dq-string-literal\""  shift, and go to state 81
    "'sq-string-literal'"    shift, and go to state 82
    "("                      shift, and go to state 83
    "{"                      shift, and go to state 84
    "+"                      shift, and go to state 85
    "-"                      shift, and go to state 86

    tid              go to state 44
    vid              go to state 87
    floatl           go to state 88
    mod_prefix       go to state 89
    bracketed_exp    go to state 91
    paren_exp        go to state 92
    vtupleExpr       go to state 93
    vstructExpr      go to state 94
    primary_exp      go to state 95
    int_expr         go to state 96
    stringls         go to state 97
    if_exp           go to state 98
    chain_exp        go to state 99
    postfix_exp      go to state 100
    vcall_exp        go to state 101
    dot_name_exp     go to state 102
    dot_index_exp    go to state 103
    unary_exp        go to state 104
    unary_op         go to state 105
    mul_binary_exp   go to state 107
    add_binary_exp   go to state 108
    cmp_binary_exp   go to state 238
    type_spec        go to state 136
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48


State 178

  113 and_binary_exp: and_binary_exp "and" • eq_binary_exp

    "val_id"                 shift, and go to state 27
    "TypeId"                 shift, and go to state 16
    "if"                     shift, and go to state 74
    "not"                    shift, and go to state 75
    "42"                     shift, and go to state 76
    "0x2a"                   shift, and go to state 77
    "42u"                    shift, and go to state 78
    "0x2Au"                  shift, and go to state 79
    "4.2"                    shift, and go to state 80
    "\"dq-string-literal\""  shift, and go to state 81
    "'sq-string-literal'"    shift, and go to state 82
    "("                      shift, and go to state 83
    "{"                      shift, and go to state 84
    "+"                      shift, and go to state 85
    "-"                      shift, and go to state 86

    tid              go to state 44
    vid              go to state 87
    floatl           go to state 88
    mod_prefix       go to state 89
    bracketed_exp    go to state 91
    paren_exp        go to state 92
    vtupleExpr       go to state 93
    vstructExpr      go to state 94
    primary_exp      go to state 95
    int_expr         go to state 96
    stringls         go to state 97
    if_exp           go to state 98
    chain_exp        go to state 99
    postfix_exp      go to state 100
    vcall_exp        go to state 101
    dot_name_exp     go to state 102
    dot_index_exp    go to state 103
    unary_exp        go to state 104
    unary_op         go to state 105
    mul_binary_exp   go to state 107
    add_binary_exp   go to state 108
    cmp_binary_exp   go to state 109
    eq_binary_exp    go to state 239
    type_spec        go to state 136
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48


State 179

  115 xor_binary_exp: xor_binary_exp "xor" • and_binary_exp

    "val_id"                 shift, and go to state 27
    "TypeId"                 shift, and go to state 16
    "if"                     shift, and go to state 74
    "not"                    shift, and go to state 75
    "42"                     shift, and go to state 76
    "0x2a"                   shift, and go to state 77
    "42u"                    shift, and go to state 78
    "0x2Au"                  shift, and go to state 79
    "4.2"                    shift, and go to state 80
    "\"dq-string-literal\""  shift, and go to state 81
    "'sq-string-literal'"    shift, and go to state 82
    "("                      shift, and go to state 83
    "{"                      shift, and go to state 84
    "+"                      shift, and go to state 85
    "-"                      shift, and go to state 86

    tid              go to state 44
    vid              go to state 87
    floatl           go to state 88
    mod_prefix       go to state 89
    bracketed_exp    go to state 91
    paren_exp        go to state 92
    vtupleExpr       go to state 93
    vstructExpr      go to state 94
    primary_exp      go to state 95
    int_expr         go to state 96
    stringls         go to state 97
    if_exp           go to state 98
    chain_exp        go to state 99
    postfix_exp      go to state 100
    vcall_exp        go to state 101
    dot_name_exp     go to state 102
    dot_index_exp    go to state 103
    unary_exp        go to state 104
    unary_op         go to state 105
    mul_binary_exp   go to state 107
    add_binary_exp   go to state 108
    cmp_binary_exp   go to state 109
    eq_binary_exp    go to state 110
    and_binary_exp   go to state 240
    type_spec        go to state 136
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48


State 180

  117 or_binary_exp: or_binary_exp "or" • xor_binary_exp

    "val_id"                 shift, and go to state 27
    "TypeId"                 shift, and go to state 16
    "if"                     shift, and go to state 74
    "not"                    shift, and go to state 75
    "42"                     shift, and go to state 76
    "0x2a"                   shift, and go to state 77
    "42u"                    shift, and go to state 78
    "0x2Au"                  shift, and go to state 79
    "4.2"                    shift, and go to state 80
    "\"dq-string-literal\""  shift, and go to state 81
    "'sq-string-literal'"    shift, and go to state 82
    "("                      shift, and go to state 83
    "{"                      shift, and go to state 84
    "+"                      shift, and go to state 85
    "-"                      shift, and go to state 86

    tid              go to state 44
    vid              go to state 87
    floatl           go to state 88
    mod_prefix       go to state 89
    bracketed_exp    go to state 91
    paren_exp        go to state 92
    vtupleExpr       go to state 93
    vstructExpr      go to state 94
    primary_exp      go to state 95
    int_expr         go to state 96
    stringls         go to state 97
    if_exp           go to state 98
    chain_exp        go to state 99
    postfix_exp      go to state 100
    vcall_exp        go to state 101
    dot_name_exp     go to state 102
    dot_index_exp    go to state 103
    unary_exp        go to state 104
    unary_op         go to state 105
    mul_binary_exp   go to state 107
    add_binary_exp   go to state 108
    cmp_binary_exp   go to state 109
    eq_binary_exp    go to state 110
    and_binary_exp   go to state 111
    xor_binary_exp   go to state 241
    type_spec        go to state 136
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48


State 181

   83 dot_name_exp: type_spec "::" • "TypeId"
   84             | type_spec "::" • "TypeId" "using" paren_exp

    "TypeId"  shift, and go to state 242


State 182

  146 targ_cl: targ_cl "," • targ

    "val_id"                 shift, and go to state 27
    "TypeId"                 shift, and go to state 16
    "if"                     shift, and go to state 74
    "not"                    shift, and go to state 75
    "42"                     shift, and go to state 76
    "0x2a"                   shift, and go to state 77
    "42u"                    shift, and go to state 78
    "0x2Au"                  shift, and go to state 79
    "4.2"                    shift, and go to state 80
    "\"dq-string-literal\""  shift, and go to state 81
    "'sq-string-literal'"    shift, and go to state 82
    "("                      shift, and go to state 83
    "{"                      shift, and go to state 84
    "+"                      shift, and go to state 85
    "-"                      shift, and go to state 86

    tid              go to state 44
    vid              go to state 87
    floatl           go to state 88
    mod_prefix       go to state 89
    expr             go to state 90
    bracketed_exp    go to state 91
    paren_exp        go to state 92
    vtupleExpr       go to state 93
    vstructExpr      go to state 94
    primary_exp      go to state 95
    int_expr         go to state 96
    stringls         go to state 97
    if_exp           go to state 98
    chain_exp        go to state 99
    postfix_exp      go to state 100
    vcall_exp        go to state 101
    dot_name_exp     go to state 102
    dot_index_exp    go to state 103
    unary_exp        go to state 104
    unary_op         go to state 105
    binary_exp       go to state 106
    mul_binary_exp   go to state 107
    add_binary_exp   go to state 108
    cmp_binary_exp   go to state 109
    eq_binary_exp    go to state 110
    and_binary_exp   go to state 111
    xor_binary_exp   go to state 112
    or_binary_exp    go to state 113
    type_spec        go to state 114
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48
    targ             go to state 243


State 183

   34 mod_prefix: tid "[" targ_cl "]" • "."

    "."  shift, and go to state 244


State 184

   36 mod_prefix: mod_prefix tid "[" targ_cl • "]" "."
  146 targ_cl: targ_cl • "," targ

    ","  shift, and go to state 182
    "]"  shift, and go to state 245


State 185

  123 type_spec_cl2: type_spec_cl2 "," type_spec •

    $default  reduce using rule 123 (type_spec_cl2)


State 186

  122 type_spec_cl2: type_spec "," type_spec •

    $default  reduce using rule 122 (type_spec_cl2)


State 187

  141 enum_type_spec: "enum" • "{" enum_type_spec_field_cl "}"

    "{"  shift, and go to state 246


State 188

  169 vpattern: "(" • vpattern_field_cl ")"
  170         | "(" • ")"

    "val_id"  shift, and go to state 27
    "out"     shift, and go to state 197
    "inout"   shift, and go to state 198
    ")"       shift, and go to state 247

    vid                go to state 248
    vpattern_field     go to state 201
    vpattern_field_cl  go to state 202


State 189

  133 struct_type_spec: "{" • struct_type_spec_field_cl "}"

    "val_id"  shift, and go to state 27

    vid                        go to state 249
    struct_type_spec_field_cl  go to state 250
    struct_type_spec_field     go to state 251


State 190

   13 mod_field: "typ" tid "=" long_type_spec •

    $default  reduce using rule 13 (mod_field)


State 191

  127 long_type_spec: struct_type_spec •

    $default  reduce using rule 127 (long_type_spec)


State 192

  128 long_type_spec: enum_type_spec •

    $default  reduce using rule 128 (long_type_spec)


State 193

  129 long_type_spec: fn_type_spec •

    $default  reduce using rule 129 (long_type_spec)


State 194

   12 mod_field: "val" vid "=" long_exp •

    $default  reduce using rule 12 (mod_field)


State 195

  157 class_exp_class_spec: "(" tid class_spec ")" "{" • type_query_exp_sl "}"

    "TypeId"  shift, and go to state 16
    "{"       shift, and go to state 43

    tid                go to state 44
    mod_prefix         go to state 45
    type_query_exp_sl  go to state 252
    type_query_exp     go to state 253
    type_spec          go to state 254
    mod_prefix_tid     go to state 47
    tuple_type_spec    go to state 48


State 196

   68 if_exp: "if" bracketed_exp "then" • bracketed_exp
   69       | "if" bracketed_exp "then" • bracketed_exp "else" primary_exp

    "("  shift, and go to state 83
    "{"  shift, and go to state 128

    bracketed_exp  go to state 255
    paren_exp      go to state 92
    vtupleExpr     go to state 93
    vstructExpr    go to state 94
    chain_exp      go to state 99


State 197

  160 vpattern_field: "out" • vid type_spec

    "val_id"  shift, and go to state 27

    vid  go to state 256


State 198

  161 vpattern_field: "inout" • vid type_spec

    "val_id"  shift, and go to state 27

    vid  go to state 257


State 199

   49 vtupleExpr: "(" ")" •
  170 vpattern: "(" ")" •

    "->"      reduce using rule 170 (vpattern)
    $default  reduce using rule 49 (vtupleExpr)


State 200

   54 primary_exp: vid •
  159 vpattern_field: vid • type_spec

    "TypeId"  shift, and go to state 16
    "{"       shift, and go to state 43

    $default  reduce using rule 54 (primary_exp)

    tid              go to state 44
    mod_prefix       go to state 45
    type_spec        go to state 258
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48


State 201

  172 vpattern_field_cl: vpattern_field •

    $default  reduce using rule 172 (vpattern_field_cl)


State 202

  169 vpattern: "(" vpattern_field_cl • ")"
  173 vpattern_field_cl: vpattern_field_cl • "," vpattern_field

    ","  shift, and go to state 259
    ")"  shift, and go to state 260


State 203

   40 expr_cl2: expr "," • expr
   50 vtupleExpr: "(" expr "," • ")"

    "val_id"                 shift, and go to state 27
    "TypeId"                 shift, and go to state 16
    "if"                     shift, and go to state 74
    "not"                    shift, and go to state 75
    "42"                     shift, and go to state 76
    "0x2a"                   shift, and go to state 77
    "42u"                    shift, and go to state 78
    "0x2Au"                  shift, and go to state 79
    "4.2"                    shift, and go to state 80
    "\"dq-string-literal\""  shift, and go to state 81
    "'sq-string-literal'"    shift, and go to state 82
    "("                      shift, and go to state 83
    ")"                      shift, and go to state 261
    "{"                      shift, and go to state 84
    "+"                      shift, and go to state 85
    "-"                      shift, and go to state 86

    tid              go to state 44
    vid              go to state 87
    floatl           go to state 88
    mod_prefix       go to state 89
    expr             go to state 262
    bracketed_exp    go to state 91
    paren_exp        go to state 92
    vtupleExpr       go to state 93
    vstructExpr      go to state 94
    primary_exp      go to state 95
    int_expr         go to state 96
    stringls         go to state 97
    if_exp           go to state 98
    chain_exp        go to state 99
    postfix_exp      go to state 100
    vcall_exp        go to state 101
    dot_name_exp     go to state 102
    dot_index_exp    go to state 103
    unary_exp        go to state 104
    unary_op         go to state 105
    binary_exp       go to state 106
    mul_binary_exp   go to state 107
    add_binary_exp   go to state 108
    cmp_binary_exp   go to state 109
    eq_binary_exp    go to state 110
    and_binary_exp   go to state 111
    xor_binary_exp   go to state 112
    or_binary_exp    go to state 113
    type_spec        go to state 136
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48


State 204

   48 paren_exp: "(" long_exp ")" •

    $default  reduce using rule 48 (paren_exp)


State 205

   41 expr_cl2: expr_cl2 "," • expr

    "val_id"                 shift, and go to state 27
    "TypeId"                 shift, and go to state 16
    "if"                     shift, and go to state 74
    "not"                    shift, and go to state 75
    "42"                     shift, and go to state 76
    "0x2a"                   shift, and go to state 77
    "42u"                    shift, and go to state 78
    "0x2Au"                  shift, and go to state 79
    "4.2"                    shift, and go to state 80
    "\"dq-string-literal\""  shift, and go to state 81
    "'sq-string-literal'"    shift, and go to state 82
    "("                      shift, and go to state 83
    "{"                      shift, and go to state 84
    "+"                      shift, and go to state 85
    "-"                      shift, and go to state 86

    tid              go to state 44
    vid              go to state 87
    floatl           go to state 88
    mod_prefix       go to state 89
    expr             go to state 263
    bracketed_exp    go to state 91
    paren_exp        go to state 92
    vtupleExpr       go to state 93
    vstructExpr      go to state 94
    primary_exp      go to state 95
    int_expr         go to state 96
    stringls         go to state 97
    if_exp           go to state 98
    chain_exp        go to state 99
    postfix_exp      go to state 100
    vcall_exp        go to state 101
    dot_name_exp     go to state 102
    dot_index_exp    go to state 103
    unary_exp        go to state 104
    unary_op         go to state 105
    binary_exp       go to state 106
    mul_binary_exp   go to state 107
    add_binary_exp   go to state 108
    cmp_binary_exp   go to state 109
    eq_binary_exp    go to state 110
    and_binary_exp   go to state 111
    xor_binary_exp   go to state 112
    or_binary_exp    go to state 113
    type_spec        go to state 136
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48


State 206

   51 vtupleExpr: "(" expr_cl2 ")" •

    $default  reduce using rule 51 (vtupleExpr)


State 207

   75 lambda_exp: fn_type_spec bracketed_exp •

    $default  reduce using rule 75 (lambda_exp)


State 208

  142 fn_type_spec: vpattern "->" • type_spec

    "TypeId"  shift, and go to state 16
    "{"       shift, and go to state 43

    tid              go to state 44
    mod_prefix       go to state 45
    type_spec        go to state 264
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48


State 209

  166 destructured_lpattern: "{" • lpattern_field_cl "}"

    "val_id"  shift, and go to state 27

    vid                go to state 210
    lpattern_field     go to state 265
    lpattern_field_cl  go to state 266


State 210

  162 lpattern_field: vid • type_spec
  163               | vid •

    "TypeId"  shift, and go to state 16
    "{"       shift, and go to state 43

    $default  reduce using rule 163 (lpattern_field)

    tid              go to state 44
    mod_prefix       go to state 45
    type_spec        go to state 267
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48


State 211

  167 lpattern: lpattern_field •

    $default  reduce using rule 167 (lpattern)


State 212

  168 lpattern: destructured_lpattern •

    $default  reduce using rule 168 (lpattern)


State 213

   22 const_stmt: "const" lpattern • "=" expr

    "="  shift, and go to state 268


State 214

   23 val_stmt: "val" lpattern • "=" expr

    "="  shift, and go to state 269


State 215

   24 var_stmt: "var" lpattern • "=" expr

    "="  shift, and go to state 270


State 216

   25 set_stmt: "set" expr • "=" expr

    "="  shift, and go to state 271


State 217

   26 discard_stmt: "discard" expr •

    $default  reduce using rule 26 (discard_stmt)


State 218

   73 chain_prefix: chain_prefix_stmt ";" •

    $default  reduce using rule 73 (chain_prefix)


State 219

  158 struct_exp_field: vid "=" • expr

    "val_id"                 shift, and go to state 27
    "TypeId"                 shift, and go to state 16
    "if"                     shift, and go to state 74
    "not"                    shift, and go to state 75
    "42"                     shift, and go to state 76
    "0x2a"                   shift, and go to state 77
    "42u"                    shift, and go to state 78
    "0x2Au"                  shift, and go to state 79
    "4.2"                    shift, and go to state 80
    "\"dq-string-literal\""  shift, and go to state 81
    "'sq-string-literal'"    shift, and go to state 82
    "("                      shift, and go to state 83
    "{"                      shift, and go to state 84
    "+"                      shift, and go to state 85
    "-"                      shift, and go to state 86

    tid              go to state 44
    vid              go to state 87
    floatl           go to state 88
    mod_prefix       go to state 89
    expr             go to state 272
    bracketed_exp    go to state 91
    paren_exp        go to state 92
    vtupleExpr       go to state 93
    vstructExpr      go to state 94
    primary_exp      go to state 95
    int_expr         go to state 96
    stringls         go to state 97
    if_exp           go to state 98
    chain_exp        go to state 99
    postfix_exp      go to state 100
    vcall_exp        go to state 101
    dot_name_exp     go to state 102
    dot_index_exp    go to state 103
    unary_exp        go to state 104
    unary_op         go to state 105
    binary_exp       go to state 106
    mul_binary_exp   go to state 107
    add_binary_exp   go to state 108
    cmp_binary_exp   go to state 109
    eq_binary_exp    go to state 110
    and_binary_exp   go to state 111
    xor_binary_exp   go to state 112
    or_binary_exp    go to state 113
    type_spec        go to state 136
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48


State 220

   70 chain_exp: "{" long_exp "}" •

    $default  reduce using rule 70 (chain_exp)


State 221

   71 chain_exp: "{" chain_prefix "}" •

    $default  reduce using rule 71 (chain_exp)


State 222

   74 chain_prefix: chain_prefix chain_prefix_stmt • ";"

    ";"  shift, and go to state 273


State 223

   72 chain_exp: "{" chain_prefix long_exp • "}"

    "}"  shift, and go to state 274


State 224

  179 struct_exp_field_cl: struct_exp_field_cl "," • struct_exp_field

    "val_id"  shift, and go to state 27

    vid               go to state 275
    struct_exp_field  go to state 276


State 225

   52 vstructExpr: "{" struct_exp_field_cl "}" •

    $default  reduce using rule 52 (vstructExpr)


State 226

   82 dot_name_exp: postfix_exp "." "val_id" •

    $default  reduce using rule 82 (dot_name_exp)


State 227

   86 dot_index_exp: postfix_exp "." bracketed_exp •

    $default  reduce using rule 86 (dot_index_exp)


State 228

   85 dot_index_exp: postfix_exp "." int_expr •

    $default  reduce using rule 85 (dot_index_exp)


State 229

  148 varg: "out" • expr

    "val_id"                 shift, and go to state 27
    "TypeId"                 shift, and go to state 16
    "if"                     shift, and go to state 74
    "not"                    shift, and go to state 75
    "42"                     shift, and go to state 76
    "0x2a"                   shift, and go to state 77
    "42u"                    shift, and go to state 78
    "0x2Au"                  shift, and go to state 79
    "4.2"                    shift, and go to state 80
    "\"dq-string-literal\""  shift, and go to state 81
    "'sq-string-literal'"    shift, and go to state 82
    "("                      shift, and go to state 83
    "{"                      shift, and go to state 84
    "+"                      shift, and go to state 85
    "-"                      shift, and go to state 86

    tid              go to state 44
    vid              go to state 87
    floatl           go to state 88
    mod_prefix       go to state 89
    expr             go to state 277
    bracketed_exp    go to state 91
    paren_exp        go to state 92
    vtupleExpr       go to state 93
    vstructExpr      go to state 94
    primary_exp      go to state 95
    int_expr         go to state 96
    stringls         go to state 97
    if_exp           go to state 98
    chain_exp        go to state 99
    postfix_exp      go to state 100
    vcall_exp        go to state 101
    dot_name_exp     go to state 102
    dot_index_exp    go to state 103
    unary_exp        go to state 104
    unary_op         go to state 105
    binary_exp       go to state 106
    mul_binary_exp   go to state 107
    add_binary_exp   go to state 108
    cmp_binary_exp   go to state 109
    eq_binary_exp    go to state 110
    and_binary_exp   go to state 111
    xor_binary_exp   go to state 112
    or_binary_exp    go to state 113
    type_spec        go to state 136
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48


State 230

  149 varg: "inout" • expr

    "val_id"                 shift, and go to state 27
    "TypeId"                 shift, and go to state 16
    "if"                     shift, and go to state 74
    "not"                    shift, and go to state 75
    "42"                     shift, and go to state 76
    "0x2a"                   shift, and go to state 77
    "42u"                    shift, and go to state 78
    "0x2Au"                  shift, and go to state 79
    "4.2"                    shift, and go to state 80
    "\"dq-string-literal\""  shift, and go to state 81
    "'sq-string-literal'"    shift, and go to state 82
    "("                      shift, and go to state 83
    "{"                      shift, and go to state 84
    "+"                      shift, and go to state 85
    "-"                      shift, and go to state 86

    tid              go to state 44
    vid              go to state 87
    floatl           go to state 88
    mod_prefix       go to state 89
    expr             go to state 278
    bracketed_exp    go to state 91
    paren_exp        go to state 92
    vtupleExpr       go to state 93
    vstructExpr      go to state 94
    primary_exp      go to state 95
    int_expr         go to state 96
    stringls         go to state 97
    if_exp           go to state 98
    chain_exp        go to state 99
    postfix_exp      go to state 100
    vcall_exp        go to state 101
    dot_name_exp     go to state 102
    dot_index_exp    go to state 103
    unary_exp        go to state 104
    unary_op         go to state 105
    binary_exp       go to state 106
    mul_binary_exp   go to state 107
    add_binary_exp   go to state 108
    cmp_binary_exp   go to state 109
    eq_binary_exp    go to state 110
    and_binary_exp   go to state 111
    xor_binary_exp   go to state 112
    or_binary_exp    go to state 113
    type_spec        go to state 136
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48


State 231

   80 vcall_exp: postfix_exp "(" ")" •

    $default  reduce using rule 80 (vcall_exp)


State 232

  147 varg: expr •

    $default  reduce using rule 147 (varg)


State 233

  150 varg_cl: varg •

    $default  reduce using rule 150 (varg_cl)


State 234

   81 vcall_exp: postfix_exp "(" varg_cl • ")"
  151 varg_cl: varg_cl • "," varg

    ","  shift, and go to state 279
    ")"  shift, and go to state 280


State 235

   97 mul_binary_exp: mul_binary_exp mul_binary_op unary_exp •

    $default  reduce using rule 97 (mul_binary_exp)


State 236

   97 mul_binary_exp: mul_binary_exp • mul_binary_op unary_exp
  101 add_binary_exp: add_binary_exp add_binary_op mul_binary_exp •

    "*"  shift, and go to state 163
    "/"  shift, and go to state 164
    "%"  shift, and go to state 165

    $default  reduce using rule 101 (add_binary_exp)

    mul_binary_op  go to state 166


State 237

  101 add_binary_exp: add_binary_exp • add_binary_op mul_binary_exp
  107 cmp_binary_exp: cmp_binary_exp cmp_binary_op add_binary_exp •

    "+"  shift, and go to state 167
    "-"  shift, and go to state 168

    $default  reduce using rule 107 (cmp_binary_exp)

    add_binary_op  go to state 169


State 238

  107 cmp_binary_exp: cmp_binary_exp • cmp_binary_op add_binary_exp
  111 eq_binary_exp: eq_binary_exp eq_binary_op cmp_binary_exp •

    "<"   shift, and go to state 170
    "<="  shift, and go to state 171
    ">"   shift, and go to state 172
    ">="  shift, and go to state 173

    $default  reduce using rule 111 (eq_binary_exp)

    cmp_binary_op  go to state 174


State 239

  111 eq_binary_exp: eq_binary_exp • eq_binary_op cmp_binary_exp
  113 and_binary_exp: and_binary_exp "and" eq_binary_exp •

    "=="  shift, and go to state 175
    "!="  shift, and go to state 176

    $default  reduce using rule 113 (and_binary_exp)

    eq_binary_op  go to state 177


State 240

  113 and_binary_exp: and_binary_exp • "and" eq_binary_exp
  115 xor_binary_exp: xor_binary_exp "xor" and_binary_exp •

    "and"  shift, and go to state 178

    $default  reduce using rule 115 (xor_binary_exp)


State 241

  115 xor_binary_exp: xor_binary_exp • "xor" and_binary_exp
  117 or_binary_exp: or_binary_exp "or" xor_binary_exp •

    "xor"  shift, and go to state 179

    $default  reduce using rule 117 (or_binary_exp)


State 242

   83 dot_name_exp: type_spec "::" "TypeId" •
   84             | type_spec "::" "TypeId" • "using" paren_exp

    "using"  shift, and go to state 281

    $default  reduce using rule 83 (dot_name_exp)


State 243

  146 targ_cl: targ_cl "," targ •

    $default  reduce using rule 146 (targ_cl)


State 244

   34 mod_prefix: tid "[" targ_cl "]" "." •

    $default  reduce using rule 34 (mod_prefix)


State 245

   36 mod_prefix: mod_prefix tid "[" targ_cl "]" • "."

    "."  shift, and go to state 282


State 246

  141 enum_type_spec: "enum" "{" • enum_type_spec_field_cl "}"

    "TypeId"  shift, and go to state 16

    tid                      go to state 283
    enum_type_spec_field     go to state 284
    enum_type_spec_field_cl  go to state 285


State 247

  170 vpattern: "(" ")" •

    $default  reduce using rule 170 (vpattern)


State 248

  159 vpattern_field: vid • type_spec

    "TypeId"  shift, and go to state 16
    "{"       shift, and go to state 43

    tid              go to state 44
    mod_prefix       go to state 45
    type_spec        go to state 258
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48


State 249

  136 struct_type_spec_field: vid • long_type_spec

    "enum"  shift, and go to state 187
    "("     shift, and go to state 188
    "{"     shift, and go to state 189

    long_type_spec    go to state 286
    struct_type_spec  go to state 191
    enum_type_spec    go to state 192
    fn_type_spec      go to state 193
    vpattern          go to state 138


State 250

  133 struct_type_spec: "{" struct_type_spec_field_cl • "}"
  135 struct_type_spec_field_cl: struct_type_spec_field_cl • "," struct_type_spec_field

    ","  shift, and go to state 287
    "}"  shift, and go to state 288


State 251

  134 struct_type_spec_field_cl: struct_type_spec_field •

    $default  reduce using rule 134 (struct_type_spec_field_cl)


State 252

   43 type_query_exp_sl: type_query_exp_sl • type_query_exp ";"
  157 class_exp_class_spec: "(" tid class_spec ")" "{" type_query_exp_sl • "}"

    "TypeId"  shift, and go to state 16
    "{"       shift, and go to state 43
    "}"       shift, and go to state 289

    tid              go to state 44
    mod_prefix       go to state 45
    type_query_exp   go to state 290
    type_spec        go to state 254
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48


State 253

   42 type_query_exp_sl: type_query_exp • ";"

    ";"  shift, and go to state 291


State 254

  118 type_query_exp: type_spec • type_query_op type_spec

    "=="  shift, and go to state 292
    ":<"  shift, and go to state 293
    ">:"  shift, and go to state 294

    type_query_op  go to state 295


State 255

   68 if_exp: "if" bracketed_exp "then" bracketed_exp •
   69       | "if" bracketed_exp "then" bracketed_exp • "else" primary_exp

    "else"  shift, and go to state 296

    $default  reduce using rule 68 (if_exp)


State 256

  160 vpattern_field: "out" vid • type_spec

    "TypeId"  shift, and go to state 16
    "{"       shift, and go to state 43

    tid              go to state 44
    mod_prefix       go to state 45
    type_spec        go to state 297
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48


State 257

  161 vpattern_field: "inout" vid • type_spec

    "TypeId"  shift, and go to state 16
    "{"       shift, and go to state 43

    tid              go to state 44
    mod_prefix       go to state 45
    type_spec        go to state 298
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48


State 258

  159 vpattern_field: vid type_spec •

    $default  reduce using rule 159 (vpattern_field)


State 259

  173 vpattern_field_cl: vpattern_field_cl "," • vpattern_field

    "val_id"  shift, and go to state 27
    "out"     shift, and go to state 197
    "inout"   shift, and go to state 198

    vid             go to state 248
    vpattern_field  go to state 299


State 260

  169 vpattern: "(" vpattern_field_cl ")" •

    $default  reduce using rule 169 (vpattern)


State 261

   50 vtupleExpr: "(" expr "," ")" •

    $default  reduce using rule 50 (vtupleExpr)


State 262

   40 expr_cl2: expr "," expr •

    $default  reduce using rule 40 (expr_cl2)


State 263

   41 expr_cl2: expr_cl2 "," expr •

    $default  reduce using rule 41 (expr_cl2)


State 264

  142 fn_type_spec: vpattern "->" type_spec •

    $default  reduce using rule 142 (fn_type_spec)


State 265

  174 lpattern_field_cl: lpattern_field •

    $default  reduce using rule 174 (lpattern_field_cl)


State 266

  166 destructured_lpattern: "{" lpattern_field_cl • "}"
  175 lpattern_field_cl: lpattern_field_cl • "," lpattern_field

    ","  shift, and go to state 300
    "}"  shift, and go to state 301


State 267

  162 lpattern_field: vid type_spec •

    $default  reduce using rule 162 (lpattern_field)


State 268

   22 const_stmt: "const" lpattern "=" • expr

    "val_id"                 shift, and go to state 27
    "TypeId"                 shift, and go to state 16
    "if"                     shift, and go to state 74
    "not"                    shift, and go to state 75
    "42"                     shift, and go to state 76
    "0x2a"                   shift, and go to state 77
    "42u"                    shift, and go to state 78
    "0x2Au"                  shift, and go to state 79
    "4.2"                    shift, and go to state 80
    "\"dq-string-literal\""  shift, and go to state 81
    "'sq-string-literal'"    shift, and go to state 82
    "("                      shift, and go to state 83
    "{"                      shift, and go to state 84
    "+"                      shift, and go to state 85
    "-"                      shift, and go to state 86

    tid              go to state 44
    vid              go to state 87
    floatl           go to state 88
    mod_prefix       go to state 89
    expr             go to state 302
    bracketed_exp    go to state 91
    paren_exp        go to state 92
    vtupleExpr       go to state 93
    vstructExpr      go to state 94
    primary_exp      go to state 95
    int_expr         go to state 96
    stringls         go to state 97
    if_exp           go to state 98
    chain_exp        go to state 99
    postfix_exp      go to state 100
    vcall_exp        go to state 101
    dot_name_exp     go to state 102
    dot_index_exp    go to state 103
    unary_exp        go to state 104
    unary_op         go to state 105
    binary_exp       go to state 106
    mul_binary_exp   go to state 107
    add_binary_exp   go to state 108
    cmp_binary_exp   go to state 109
    eq_binary_exp    go to state 110
    and_binary_exp   go to state 111
    xor_binary_exp   go to state 112
    or_binary_exp    go to state 113
    type_spec        go to state 136
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48


State 269

   23 val_stmt: "val" lpattern "=" • expr

    "val_id"                 shift, and go to state 27
    "TypeId"                 shift, and go to state 16
    "if"                     shift, and go to state 74
    "not"                    shift, and go to state 75
    "42"                     shift, and go to state 76
    "0x2a"                   shift, and go to state 77
    "42u"                    shift, and go to state 78
    "0x2Au"                  shift, and go to state 79
    "4.2"                    shift, and go to state 80
    "\"dq-string-literal\""  shift, and go to state 81
    "'sq-string-literal'"    shift, and go to state 82
    "("                      shift, and go to state 83
    "{"                      shift, and go to state 84
    "+"                      shift, and go to state 85
    "-"                      shift, and go to state 86

    tid              go to state 44
    vid              go to state 87
    floatl           go to state 88
    mod_prefix       go to state 89
    expr             go to state 303
    bracketed_exp    go to state 91
    paren_exp        go to state 92
    vtupleExpr       go to state 93
    vstructExpr      go to state 94
    primary_exp      go to state 95
    int_expr         go to state 96
    stringls         go to state 97
    if_exp           go to state 98
    chain_exp        go to state 99
    postfix_exp      go to state 100
    vcall_exp        go to state 101
    dot_name_exp     go to state 102
    dot_index_exp    go to state 103
    unary_exp        go to state 104
    unary_op         go to state 105
    binary_exp       go to state 106
    mul_binary_exp   go to state 107
    add_binary_exp   go to state 108
    cmp_binary_exp   go to state 109
    eq_binary_exp    go to state 110
    and_binary_exp   go to state 111
    xor_binary_exp   go to state 112
    or_binary_exp    go to state 113
    type_spec        go to state 136
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48


State 270

   24 var_stmt: "var" lpattern "=" • expr

    "val_id"                 shift, and go to state 27
    "TypeId"                 shift, and go to state 16
    "if"                     shift, and go to state 74
    "not"                    shift, and go to state 75
    "42"                     shift, and go to state 76
    "0x2a"                   shift, and go to state 77
    "42u"                    shift, and go to state 78
    "0x2Au"                  shift, and go to state 79
    "4.2"                    shift, and go to state 80
    "\"dq-string-literal\""  shift, and go to state 81
    "'sq-string-literal'"    shift, and go to state 82
    "("                      shift, and go to state 83
    "{"                      shift, and go to state 84
    "+"                      shift, and go to state 85
    "-"                      shift, and go to state 86

    tid              go to state 44
    vid              go to state 87
    floatl           go to state 88
    mod_prefix       go to state 89
    expr             go to state 304
    bracketed_exp    go to state 91
    paren_exp        go to state 92
    vtupleExpr       go to state 93
    vstructExpr      go to state 94
    primary_exp      go to state 95
    int_expr         go to state 96
    stringls         go to state 97
    if_exp           go to state 98
    chain_exp        go to state 99
    postfix_exp      go to state 100
    vcall_exp        go to state 101
    dot_name_exp     go to state 102
    dot_index_exp    go to state 103
    unary_exp        go to state 104
    unary_op         go to state 105
    binary_exp       go to state 106
    mul_binary_exp   go to state 107
    add_binary_exp   go to state 108
    cmp_binary_exp   go to state 109
    eq_binary_exp    go to state 110
    and_binary_exp   go to state 111
    xor_binary_exp   go to state 112
    or_binary_exp    go to state 113
    type_spec        go to state 136
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48


State 271

   25 set_stmt: "set" expr "=" • expr

    "val_id"                 shift, and go to state 27
    "TypeId"                 shift, and go to state 16
    "if"                     shift, and go to state 74
    "not"                    shift, and go to state 75
    "42"                     shift, and go to state 76
    "0x2a"                   shift, and go to state 77
    "42u"                    shift, and go to state 78
    "0x2Au"                  shift, and go to state 79
    "4.2"                    shift, and go to state 80
    "\"dq-string-literal\""  shift, and go to state 81
    "'sq-string-literal'"    shift, and go to state 82
    "("                      shift, and go to state 83
    "{"                      shift, and go to state 84
    "+"                      shift, and go to state 85
    "-"                      shift, and go to state 86

    tid              go to state 44
    vid              go to state 87
    floatl           go to state 88
    mod_prefix       go to state 89
    expr             go to state 305
    bracketed_exp    go to state 91
    paren_exp        go to state 92
    vtupleExpr       go to state 93
    vstructExpr      go to state 94
    primary_exp      go to state 95
    int_expr         go to state 96
    stringls         go to state 97
    if_exp           go to state 98
    chain_exp        go to state 99
    postfix_exp      go to state 100
    vcall_exp        go to state 101
    dot_name_exp     go to state 102
    dot_index_exp    go to state 103
    unary_exp        go to state 104
    unary_op         go to state 105
    binary_exp       go to state 106
    mul_binary_exp   go to state 107
    add_binary_exp   go to state 108
    cmp_binary_exp   go to state 109
    eq_binary_exp    go to state 110
    and_binary_exp   go to state 111
    xor_binary_exp   go to state 112
    or_binary_exp    go to state 113
    type_spec        go to state 136
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48


State 272

  158 struct_exp_field: vid "=" expr •

    $default  reduce using rule 158 (struct_exp_field)


State 273

   74 chain_prefix: chain_prefix chain_prefix_stmt ";" •

    $default  reduce using rule 74 (chain_prefix)


State 274

   72 chain_exp: "{" chain_prefix long_exp "}" •

    $default  reduce using rule 72 (chain_exp)


State 275

  158 struct_exp_field: vid • "=" expr

    "="  shift, and go to state 219


State 276

  179 struct_exp_field_cl: struct_exp_field_cl "," struct_exp_field •

    $default  reduce using rule 179 (struct_exp_field_cl)


State 277

  148 varg: "out" expr •

    $default  reduce using rule 148 (varg)


State 278

  149 varg: "inout" expr •

    $default  reduce using rule 149 (varg)


State 279

  151 varg_cl: varg_cl "," • varg

    "val_id"                 shift, and go to state 27
    "TypeId"                 shift, and go to state 16
    "if"                     shift, and go to state 74
    "not"                    shift, and go to state 75
    "out"                    shift, and go to state 229
    "inout"                  shift, and go to state 230
    "42"                     shift, and go to state 76
    "0x2a"                   shift, and go to state 77
    "42u"                    shift, and go to state 78
    "0x2Au"                  shift, and go to state 79
    "4.2"                    shift, and go to state 80
    "\"dq-string-literal\""  shift, and go to state 81
    "'sq-string-literal'"    shift, and go to state 82
    "("                      shift, and go to state 83
    "{"                      shift, and go to state 84
    "+"                      shift, and go to state 85
    "-"                      shift, and go to state 86

    tid              go to state 44
    vid              go to state 87
    floatl           go to state 88
    mod_prefix       go to state 89
    expr             go to state 232
    bracketed_exp    go to state 91
    paren_exp        go to state 92
    vtupleExpr       go to state 93
    vstructExpr      go to state 94
    primary_exp      go to state 95
    int_expr         go to state 96
    stringls         go to state 97
    if_exp           go to state 98
    chain_exp        go to state 99
    postfix_exp      go to state 100
    vcall_exp        go to state 101
    dot_name_exp     go to state 102
    dot_index_exp    go to state 103
    unary_exp        go to state 104
    unary_op         go to state 105
    binary_exp       go to state 106
    mul_binary_exp   go to state 107
    add_binary_exp   go to state 108
    cmp_binary_exp   go to state 109
    eq_binary_exp    go to state 110
    and_binary_exp   go to state 111
    xor_binary_exp   go to state 112
    or_binary_exp    go to state 113
    type_spec        go to state 136
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48
    varg             go to state 306


State 280

   81 vcall_exp: postfix_exp "(" varg_cl ")" •

    $default  reduce using rule 81 (vcall_exp)


State 281

   84 dot_name_exp: type_spec "::" "TypeId" "using" • paren_exp

    "("  shift, and go to state 307

    paren_exp  go to state 308


State 282

   36 mod_prefix: mod_prefix tid "[" targ_cl "]" "." •

    $default  reduce using rule 36 (mod_prefix)


State 283

  137 enum_type_spec_field: tid •
  138                     | tid • long_type_spec

    "enum"  shift, and go to state 187
    "("     shift, and go to state 188
    "{"     shift, and go to state 189

    $default  reduce using rule 137 (enum_type_spec_field)

    long_type_spec    go to state 309
    struct_type_spec  go to state 191
    enum_type_spec    go to state 192
    fn_type_spec      go to state 193
    vpattern          go to state 138


State 284

  139 enum_type_spec_field_cl: enum_type_spec_field •

    $default  reduce using rule 139 (enum_type_spec_field_cl)


State 285

  140 enum_type_spec_field_cl: enum_type_spec_field_cl • "," enum_type_spec_field
  141 enum_type_spec: "enum" "{" enum_type_spec_field_cl • "}"

    ","  shift, and go to state 310
    "}"  shift, and go to state 311


State 286

  136 struct_type_spec_field: vid long_type_spec •

    $default  reduce using rule 136 (struct_type_spec_field)


State 287

  135 struct_type_spec_field_cl: struct_type_spec_field_cl "," • struct_type_spec_field

    "val_id"  shift, and go to state 27

    vid                     go to state 249
    struct_type_spec_field  go to state 312


State 288

  133 struct_type_spec: "{" struct_type_spec_field_cl "}" •

    $default  reduce using rule 133 (struct_type_spec)


State 289

  157 class_exp_class_spec: "(" tid class_spec ")" "{" type_query_exp_sl "}" •

    $default  reduce using rule 157 (class_exp_class_spec)


State 290

   43 type_query_exp_sl: type_query_exp_sl type_query_exp • ";"

    ";"  shift, and go to state 313


State 291

   42 type_query_exp_sl: type_query_exp ";" •

    $default  reduce using rule 42 (type_query_exp_sl)


State 292

  121 type_query_op: "==" •

    $default  reduce using rule 121 (type_query_op)


State 293

  119 type_query_op: ":<" •

    $default  reduce using rule 119 (type_query_op)


State 294

  120 type_query_op: ">:" •

    $default  reduce using rule 120 (type_query_op)


State 295

  118 type_query_exp: type_spec type_query_op • type_spec

    "TypeId"  shift, and go to state 16
    "{"       shift, and go to state 43

    tid              go to state 44
    mod_prefix       go to state 45
    type_spec        go to state 314
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48


State 296

   69 if_exp: "if" bracketed_exp "then" bracketed_exp "else" • primary_exp

    "val_id"                 shift, and go to state 27
    "TypeId"                 shift, and go to state 16
    "if"                     shift, and go to state 74
    "42"                     shift, and go to state 76
    "0x2a"                   shift, and go to state 77
    "42u"                    shift, and go to state 78
    "0x2Au"                  shift, and go to state 79
    "4.2"                    shift, and go to state 80
    "\"dq-string-literal\""  shift, and go to state 81
    "'sq-string-literal'"    shift, and go to state 82
    "("                      shift, and go to state 83
    "{"                      shift, and go to state 128

    tid            go to state 36
    vid            go to state 87
    floatl         go to state 88
    mod_prefix     go to state 315
    bracketed_exp  go to state 91
    paren_exp      go to state 92
    vtupleExpr     go to state 93
    vstructExpr    go to state 94
    primary_exp    go to state 316
    int_expr       go to state 96
    stringls       go to state 97
    if_exp         go to state 98
    chain_exp      go to state 99


State 297

  160 vpattern_field: "out" vid type_spec •

    $default  reduce using rule 160 (vpattern_field)


State 298

  161 vpattern_field: "inout" vid type_spec •

    $default  reduce using rule 161 (vpattern_field)


State 299

  173 vpattern_field_cl: vpattern_field_cl "," vpattern_field •

    $default  reduce using rule 173 (vpattern_field_cl)


State 300

  175 lpattern_field_cl: lpattern_field_cl "," • lpattern_field

    "val_id"  shift, and go to state 27

    vid             go to state 210
    lpattern_field  go to state 317


State 301

  166 destructured_lpattern: "{" lpattern_field_cl "}" •

    $default  reduce using rule 166 (destructured_lpattern)


State 302

   22 const_stmt: "const" lpattern "=" expr •

    $default  reduce using rule 22 (const_stmt)


State 303

   23 val_stmt: "val" lpattern "=" expr •

    $default  reduce using rule 23 (val_stmt)


State 304

   24 var_stmt: "var" lpattern "=" expr •

    $default  reduce using rule 24 (var_stmt)


State 305

   25 set_stmt: "set" expr "=" expr •

    $default  reduce using rule 25 (set_stmt)


State 306

  151 varg_cl: varg_cl "," varg •

    $default  reduce using rule 151 (varg_cl)


State 307

   48 paren_exp: "(" • long_exp ")"

    "val_id"                 shift, and go to state 27
    "TypeId"                 shift, and go to state 16
    "if"                     shift, and go to state 74
    "not"                    shift, and go to state 75
    "42"                     shift, and go to state 76
    "0x2a"                   shift, and go to state 77
    "42u"                    shift, and go to state 78
    "0x2Au"                  shift, and go to state 79
    "4.2"                    shift, and go to state 80
    "\"dq-string-literal\""  shift, and go to state 81
    "'sq-string-literal'"    shift, and go to state 82
    "("                      shift, and go to state 130
    "{"                      shift, and go to state 84
    "+"                      shift, and go to state 85
    "-"                      shift, and go to state 86

    tid              go to state 44
    vid              go to state 87
    floatl           go to state 88
    mod_prefix       go to state 89
    expr             go to state 151
    long_exp         go to state 133
    bracketed_exp    go to state 91
    paren_exp        go to state 92
    vtupleExpr       go to state 93
    vstructExpr      go to state 94
    primary_exp      go to state 95
    int_expr         go to state 96
    stringls         go to state 97
    if_exp           go to state 98
    chain_exp        go to state 99
    lambda_exp       go to state 135
    postfix_exp      go to state 100
    vcall_exp        go to state 101
    dot_name_exp     go to state 102
    dot_index_exp    go to state 103
    unary_exp        go to state 104
    unary_op         go to state 105
    binary_exp       go to state 106
    mul_binary_exp   go to state 107
    add_binary_exp   go to state 108
    cmp_binary_exp   go to state 109
    eq_binary_exp    go to state 110
    and_binary_exp   go to state 111
    xor_binary_exp   go to state 112
    or_binary_exp    go to state 113
    type_spec        go to state 136
    mod_prefix_tid   go to state 47
    tuple_type_spec  go to state 48
    fn_type_spec     go to state 137
    vpattern         go to state 138


State 308

   84 dot_name_exp: type_spec "::" "TypeId" "using" paren_exp •

    $default  reduce using rule 84 (dot_name_exp)


State 309

  138 enum_type_spec_field: tid long_type_spec •

    $default  reduce using rule 138 (enum_type_spec_field)


State 310

  140 enum_type_spec_field_cl: enum_type_spec_field_cl "," • enum_type_spec_field

    "TypeId"  shift, and go to state 16

    tid                   go to state 283
    enum_type_spec_field  go to state 318


State 311

  141 enum_type_spec: "enum" "{" enum_type_spec_field_cl "}" •

    $default  reduce using rule 141 (enum_type_spec)


State 312

  135 struct_type_spec_field_cl: struct_type_spec_field_cl "," struct_type_spec_field •

    $default  reduce using rule 135 (struct_type_spec_field_cl)


State 313

   43 type_query_exp_sl: type_query_exp_sl type_query_exp ";" •

    $default  reduce using rule 43 (type_query_exp_sl)


State 314

  118 type_query_exp: type_spec type_query_op type_spec •

    $default  reduce using rule 118 (type_query_exp)


State 315

   35 mod_prefix: mod_prefix • tid "."
   36           | mod_prefix • tid "[" targ_cl "]" "."
   59 primary_exp: mod_prefix • vid

    "val_id"  shift, and go to state 27
    "TypeId"  shift, and go to state 16

    tid  go to state 61
    vid  go to state 157


State 316

   69 if_exp: "if" bracketed_exp "then" bracketed_exp "else" primary_exp •

    $default  reduce using rule 69 (if_exp)


State 317

  175 lpattern_field_cl: lpattern_field_cl "," lpattern_field •

    $default  reduce using rule 175 (lpattern_field_cl)


State 318

  140 enum_type_spec_field_cl: enum_type_spec_field_cl "," enum_type_spec_field •

    $default  reduce using rule 140 (enum_type_spec_field_cl)
