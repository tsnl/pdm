Terminals unused in grammar

    "<__42__>"
    "match"
    "with"
    "&"
    "EOS"
    "<null>"


Grammar

    0 $accept: script $end

    1 script: scriptContent

    2 scriptContent: scriptContentStmt ";"
    3              | scriptContent scriptContentStmt ";"

    4 scriptContentStmt: mod_stmt
    5                  | import_stmt
    6                  | extern_stmt

    7 mod_stmt: "mod" "<TypeId>" "{" moduleContent "}"

    8 moduleContent: moduleContentStmt ";"
    9              | moduleContent moduleContentStmt ";"

   10 chain_prefix_stmt: const_stmt
   11                  | val_stmt
   12                  | var_stmt
   13                  | set_stmt
   14                  | discard_stmt

   15 const_stmt: "const" lpattern "=" expr

   16 val_stmt: "val" lpattern "=" expr

   17 var_stmt: "var" lpattern "=" expr

   18 set_stmt: "set" expr "=" expr

   19 discard_stmt: "discard" expr

   20 moduleContentStmt: fn_stmt
   21                  | type_stmt
   22                  | enum_stmt
   23                  | typeclass_stmt
   24                  | import_stmt
   25                  | mod_stmt
   26                  | using_stmt
   27                  | extern_stmt

   28 fn_stmt: "fn" vid vpattern "->" typespec "=" bracketed_exp
   29        | "fn" vid tpattern_seq vpattern "->" typespec "=" bracketed_exp
   30        | "fn" vid vpattern "=" bracketed_exp
   31        | "fn" vid tpattern_seq vpattern "=" bracketed_exp

   32 type_stmt: "type" tid "=" long_typespec
   33          | "type" tid tpattern_seq "=" long_typespec

   34 enum_stmt: "type" tid enum_field_pl
   35          | "type" tid tpattern_seq enum_field_pl

   36 enum_field_pl: "|" unprefixed_enum_field_pl

   37 unprefixed_enum_field_pl: enum_field
   38                         | unprefixed_enum_field_pl "|" enum_field

   39 enum_field: tid
   40           | tid "(" ")"
   41           | tid "(" typespec_cl1 ")"

   42 typeclass_stmt: "typeclass" tid "<" tid typespec ">" "=" "{" type_query_exp_sl "}"
   43               | "typeclass" tid "<" tid typespec ">" tpattern_seq "=" "{" type_query_exp_sl "}"

   44 using_stmt: "using" vid "." "*"
   45           | "using" vid "." vid "*"

   46 import_stmt: "import" tid "from" stringl "type" stringl

   47 extern_stmt: "extern" vid "from" expr

   48 tid: "<TypeId>"

   49 vid: "<val_id>"

   50 floatl: "4.2"

   51 stringl: "'sq-string-literal'"
   52        | "\"dq-string-literal\""

   53 mod_prefix: tid ":"
   54           | mod_prefix vid ":"

   55 expr: binary_exp

   56 long_exp: expr

   57 expr_cl0: %empty
   58         | expr_cl0 "," expr

   59 expr_cl2: expr "," expr
   60         | expr_cl2 "," expr

   61 type_query_exp_sl: type_query_exp ";"
   62                  | type_query_exp_sl type_query_exp ";"

   63 bracketed_exp: unit_exp
   64              | paren_exp
   65              | vtupleExpr
   66              | vstructExpr
   67              | chain_exp

   68 unit_exp: "(" ")"
   69         | "{" "}"

   70 paren_exp: "(" long_exp ")"

   71 vtupleExpr: "(" expr "," ")"
   72           | "(" expr_cl2 ")"

   73 vstructExpr: "{" struct_exp_field_cl "}"

   74 primary_exp: bracketed_exp
   75            | vid
   76            | int_expr
   77            | floatl
   78            | stringls
   79            | if_exp
   80            | lambda_exp

   81 int_expr: "42"
   82         | "0x2a"

   83 stringls: "'sq-string-literal'"
   84         | "\"dq-string-literal\""
   85         | stringls "'sq-string-literal'"
   86         | stringls "\"dq-string-literal\""

   87 if_exp: "if" bracketed_exp "then" bracketed_exp
   88       | "if" bracketed_exp "then" bracketed_exp "else" primary_exp

   89 chain_exp: "{" expr "}"
   90          | "{" chain_prefix "}"
   91          | "{" chain_prefix expr "}"

   92 chain_prefix: chain_prefix_stmt ";"
   93             | chain_prefix chain_prefix_stmt ";"

   94 lambda_exp: "lambda" vpattern "=" bracketed_exp

   95 postfix_exp: primary_exp
   96            | tcall_exp
   97            | vcall_exp
   98            | dot_name_exp
   99            | dot_index_exp

  100 tcall_exp: postfix_exp "[" targ_cl "]"

  101 vcall_exp: postfix_exp "(" ")"
  102          | postfix_exp "(" varg_cl ")"

  103 dot_name_exp: postfix_exp "." "<val_id>"
  104             | postfix_exp "." "<TypeId>" "(" expr_cl0 ")"
  105             | mod_prefix "<val_id>"

  106 dot_index_exp: postfix_exp "." int_expr
  107              | postfix_exp "." bracketed_exp

  108 unary_exp: postfix_exp
  109          | unary_op unary_exp

  110 unary_op: "+"
  111         | "-"
  112         | "*"
  113         | "^"
  114         | "not"

  115 binary_exp: or_binary_exp

  116 mul_binary_op: "*"
  117              | "/"
  118              | "%"

  119 mul_binary_exp: unary_exp
  120               | mul_binary_exp mul_binary_op unary_exp

  121 add_binary_op: "+"
  122              | "-"

  123 add_binary_exp: mul_binary_exp
  124               | add_binary_exp add_binary_op mul_binary_exp

  125 cmp_binary_op: "<"
  126              | "<="
  127              | ">"
  128              | ">="

  129 cmp_binary_exp: add_binary_exp
  130               | cmp_binary_exp cmp_binary_op add_binary_exp

  131 eq_binary_op: "=="
  132             | "!="

  133 eq_binary_exp: cmp_binary_exp
  134              | eq_binary_exp eq_binary_op cmp_binary_exp

  135 and_binary_exp: eq_binary_exp
  136               | and_binary_exp "and" eq_binary_exp

  137 xor_binary_exp: and_binary_exp
  138               | xor_binary_exp "xor" and_binary_exp

  139 or_binary_exp: xor_binary_exp
  140              | or_binary_exp "or" xor_binary_exp

  141 type_query_exp: typespec type_query_op typespec

  142 type_query_op: ":<"
  143              | ">:"
  144              | "::"

  145 typespec: unary_typespec

  146 typespec_cl1: typespec
  147             | typespec_cl1 "," typespec

  148 typespec_cl2: typespec "," typespec
  149             | typespec_cl2 "," typespec

  150 struct_typespec_field: vid typespec

  151 struct_typespec_field_cl: struct_typespec_field
  152                         | struct_typespec_field_cl "," struct_typespec_field

  153 primary_typespec: tid
  154                 | paren_typespec
  155                 | tuple_typespec
  156                 | mod_prefix_tid
  157                 | fn_typespec

  158 paren_typespec: "(" typespec ")"

  159 tuple_typespec: "(" typespec "," ")"
  160               | "(" typespec_cl2 ")"

  161 mod_prefix_tid: mod_prefix tid

  162 fn_typespec: "Fn" vpattern primary_typespec

  163 postfix_typespec: primary_typespec
  164                 | tcall_typespec

  165 tcall_typespec: postfix_typespec "[" targ_cl "]"

  166 unary_typespec: postfix_typespec

  167 long_typespec: unary_typespec
  168              | struct_typespec

  169 struct_typespec: "{" struct_typespec_field_cl "}"

  170 targ: typespec
  171     | expr

  172 targ_cl: targ
  173        | targ_cl "," targ

  174 varg: expr
  175     | "out" expr
  176     | "inout" expr

  177 varg_cl: varg
  178        | varg_cl "," varg

  179 struct_exp_field: vid "=" expr

  180 vpattern_field: vid typespec
  181               | "out" vid typespec
  182               | "inout" vid typespec

  183 lpattern_field: vid typespec
  184               | vid

  185 tpattern_field: vid typespec
  186               | tid typespec

  187 destructured_lpattern: "(" lpattern_field_cl ")"

  188 lpattern: lpattern_field
  189         | destructured_lpattern

  190 vpattern: "(" vpattern_field_cl ")"
  191         | "(" ")"

  192 tpattern: "[" tpattern_field_cl "]"
  193         | "!" "[" tpattern_field_cl "]"

  194 vpattern_field_cl: vpattern_field
  195                  | vpattern_field_cl "," vpattern_field

  196 lpattern_field_cl: lpattern_field
  197                  | lpattern_field_cl "," lpattern_field

  198 tpattern_field_cl: tpattern_field
  199                  | tpattern_field_cl "," tpattern_field

  200 struct_exp_field_cl: struct_exp_field
  201                    | struct_exp_field_cl "," struct_exp_field

  202 tpattern_seq: tpattern
  203             | tpattern_seq tpattern


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    "<val_id>" <TokenInfo> (258) 49 103 105
    "<TypeId>" <TokenInfo> (259) 7 48 104
    "<__42__>" <TokenInfo> (260)
    "using" (261) 44 45
    "mod" (262) 7
    "if" (263) 87 88
    "then" (264) 87 88
    "else" (265) 88
    "match" (266)
    "with" (267)
    "import" (268) 46
    "extern" (269) 47
    "from" (270) 46 47
    "const" (271) 15
    "val" (272) 16
    "var" (273) 17
    "set" (274) 18
    "fn" (275) 28 29 30 31
    "lambda" (276) 94
    "Fn" (277) 162
    "type" (278) 32 33 34 35 46
    "and" (279) 136
    "xor" (280) 138
    "or" (281) 140
    "not" (282) 114
    "typeclass" (283) 42 43
    "out" (284) 175 181
    "inout" (285) 176 182
    "discard" (286) 19
    "42" <TokenInfo> (287) 81
    "0x2a" <TokenInfo> (288) 82
    "4.2" <TokenInfo> (289) 50
    "\"dq-string-literal\"" <TokenInfo> (290) 52 84 86
    "'sq-string-literal'" <TokenInfo> (291) 51 83 85
    "." (292) 44 45 103 104 106 107
    ":" (293) 53 54
    "," (294) 58 59 60 71 147 148 149 152 159 173 178 195 197 199 201
    ";" (295) 2 3 8 9 61 62 92 93
    "::" (296) 144
    "(" (297) 40 41 68 70 71 72 101 102 104 158 159 160 187 190 191
    ")" (298) 40 41 68 70 71 72 101 102 104 158 159 160 187 190 191
    "[" (299) 100 165 192 193
    "]" (300) 100 165 192 193
    "{" (301) 7 42 43 69 73 89 90 91 169
    "}" (302) 7 42 43 69 73 89 90 91 169
    "->" (303) 28 29
    "*" (304) 44 45 112 116
    "/" (305) 117
    "%" (306) 118
    "+" (307) 110 121
    "-" (308) 111 122
    "<" (309) 42 43 125
    "<=" (310) 126
    ">" (311) 42 43 127
    ">=" (312) 128
    "=" (313) 15 16 17 18 28 29 30 31 32 33 42 43 94 179
    "==" (314) 131
    "!=" (315) 132
    "^" (316) 113
    "&" (317)
    "!" (318) 193
    "|" (319) 36 38
    "EOS" (320)
    ":<" (321) 142
    ">:" (322) 143
    "<null>" (323)


Nonterminals, with rules where they appear

    $accept (69)
        on left: 0
    script <pdm::ast::Script*> (70)
        on left: 1
        on right: 0
    scriptContent <std::vector<pdm::ast::Stmt*>> (71)
        on left: 2 3
        on right: 1 3
    scriptContentStmt <pdm::ast::Stmt*> (72)
        on left: 4 5 6
        on right: 2 3
    mod_stmt <pdm::ast::Stmt*> (73)
        on left: 7
        on right: 4 25
    moduleContent <std::vector<pdm::ast::Stmt*>> (74)
        on left: 8 9
        on right: 7 9
    chain_prefix_stmt <pdm::ast::Stmt*> (75)
        on left: 10 11 12 13 14
        on right: 92 93
    const_stmt <pdm::ast::Stmt*> (76)
        on left: 15
        on right: 10
    val_stmt <pdm::ast::Stmt*> (77)
        on left: 16
        on right: 11
    var_stmt <pdm::ast::Stmt*> (78)
        on left: 17
        on right: 12
    set_stmt <pdm::ast::Stmt*> (79)
        on left: 18
        on right: 13
    discard_stmt <pdm::ast::Stmt*> (80)
        on left: 19
        on right: 14
    moduleContentStmt <pdm::ast::Stmt*> (81)
        on left: 20 21 22 23 24 25 26 27
        on right: 8 9
    fn_stmt <pdm::ast::Stmt*> (82)
        on left: 28 29 30 31
        on right: 20
    type_stmt <pdm::ast::Stmt*> (83)
        on left: 32 33
        on right: 21
    enum_stmt <pdm::ast::Stmt*> (84)
        on left: 34 35
        on right: 22
    enum_field_pl <std::vector<pdm::ast::EnumStmt::Field*>> (85)
        on left: 36
        on right: 34 35
    unprefixed_enum_field_pl <std::vector<pdm::ast::EnumStmt::Field*>> (86)
        on left: 37 38
        on right: 36 38
    enum_field <pdm::ast::EnumStmt::Field*> (87)
        on left: 39 40 41
        on right: 37 38
    typeclass_stmt <pdm::ast::Stmt*> (88)
        on left: 42 43
        on right: 23
    using_stmt <pdm::ast::Stmt*> (89)
        on left: 44 45
        on right: 26
    import_stmt <pdm::ast::Stmt*> (90)
        on left: 46
        on right: 5 24
    extern_stmt <pdm::ast::Stmt*> (91)
        on left: 47
        on right: 6 27
    tid <TokenInfo> (92)
        on left: 48
        on right: 32 33 34 35 39 40 41 42 43 46 53 153 161 186
    vid <TokenInfo> (93)
        on left: 49
        on right: 28 29 30 31 44 45 47 54 75 150 179 180 181 182 183 184 185
    floatl <TokenInfo> (94)
        on left: 50
        on right: 77
    stringl <TokenInfo> (95)
        on left: 51 52
        on right: 46
    mod_prefix <std::vector<pdm::intern::String>> (96)
        on left: 53 54
        on right: 54 105 161
    expr <pdm::ast::Exp*> (97)
        on left: 55
        on right: 15 16 17 18 19 47 56 58 59 60 71 89 91 171 174 175 176 179
    long_exp <pdm::ast::Exp*> (98)
        on left: 56
        on right: 70
    expr_cl0 <std::vector<pdm::ast::Exp*>> (99)
        on left: 57 58
        on right: 58 104
    expr_cl2 <std::vector<pdm::ast::Exp*>> (100)
        on left: 59 60
        on right: 60 72
    type_query_exp_sl <std::vector<pdm::ast::TypeQueryExp*>> (101)
        on left: 61 62
        on right: 42 43 62
    bracketed_exp <pdm::ast::Exp*> (102)
        on left: 63 64 65 66 67
        on right: 28 29 30 31 74 87 88 94 107
    unit_exp <pdm::ast::Exp*> (103)
        on left: 68 69
        on right: 63
    paren_exp <pdm::ast::Exp*> (104)
        on left: 70
        on right: 64
    vtupleExpr <pdm::ast::Exp*> (105)
        on left: 71 72
        on right: 65
    vstructExpr <pdm::ast::Exp*> (106)
        on left: 73
        on right: 66
    primary_exp <pdm::ast::Exp*> (107)
        on left: 74 75 76 77 78 79 80
        on right: 88 95
    int_expr <pdm::ast::Exp*> (108)
        on left: 81 82
        on right: 76 106
    stringls <std::vector<pdm::ast::StringExp::Piece>> (109)
        on left: 83 84 85 86
        on right: 78 85 86
    if_exp <pdm::ast::Exp*> (110)
        on left: 87 88
        on right: 79
    chain_exp <pdm::ast::Exp*> (111)
        on left: 89 90 91
        on right: 67
    chain_prefix <std::vector<pdm::ast::Stmt*>> (112)
        on left: 92 93
        on right: 90 91 93
    lambda_exp <pdm::ast::Exp*> (113)
        on left: 94
        on right: 80
    postfix_exp <pdm::ast::Exp*> (114)
        on left: 95 96 97 98 99
        on right: 100 101 102 103 104 106 107 108
    tcall_exp <pdm::ast::Exp*> (115)
        on left: 100
        on right: 96
    vcall_exp <pdm::ast::Exp*> (116)
        on left: 101 102
        on right: 97
    dot_name_exp <pdm::ast::Exp*> (117)
        on left: 103 104 105
        on right: 98
    dot_index_exp <pdm::ast::Exp*> (118)
        on left: 106 107
        on right: 99
    unary_exp <pdm::ast::Exp*> (119)
        on left: 108 109
        on right: 109 119 120
    unary_op <pdm::ast::UnaryOperator> (120)
        on left: 110 111 112 113 114
        on right: 109
    binary_exp <pdm::ast::Exp*> (121)
        on left: 115
        on right: 55
    mul_binary_op <pdm::ast::BinaryOperator> (122)
        on left: 116 117 118
        on right: 120
    mul_binary_exp <pdm::ast::Exp*> (123)
        on left: 119 120
        on right: 120 123 124
    add_binary_op <pdm::ast::BinaryOperator> (124)
        on left: 121 122
        on right: 124
    add_binary_exp <pdm::ast::Exp*> (125)
        on left: 123 124
        on right: 124 129 130
    cmp_binary_op <pdm::ast::BinaryOperator> (126)
        on left: 125 126 127 128
        on right: 130
    cmp_binary_exp <pdm::ast::Exp*> (127)
        on left: 129 130
        on right: 130 133 134
    eq_binary_op <pdm::ast::BinaryOperator> (128)
        on left: 131 132
        on right: 134
    eq_binary_exp <pdm::ast::Exp*> (129)
        on left: 133 134
        on right: 134 135 136
    and_binary_exp <pdm::ast::Exp*> (130)
        on left: 135 136
        on right: 136 137 138
    xor_binary_exp <pdm::ast::Exp*> (131)
        on left: 137 138
        on right: 138 139 140
    or_binary_exp <pdm::ast::Exp*> (132)
        on left: 139 140
        on right: 115 140
    type_query_exp <pdm::ast::TypeQueryExp*> (133)
        on left: 141
        on right: 61 62
    type_query_op <pdm::ast::TypeQueryKind> (134)
        on left: 142 143 144
        on right: 141
    typespec <pdm::ast::Typespec*> (135)
        on left: 145
        on right: 28 29 42 43 141 146 147 148 149 150 158 159 170 180 181 182 183 185 186
    typespec_cl1 <std::vector<pdm::ast::Typespec*>> (136)
        on left: 146 147
        on right: 41 147
    typespec_cl2 <std::vector<pdm::ast::Typespec*>> (137)
        on left: 148 149
        on right: 149 160
    struct_typespec_field <pdm::ast::StructTypespec::Field*> (138)
        on left: 150
        on right: 151 152
    struct_typespec_field_cl <std::vector<pdm::ast::StructTypespec::Field*>> (139)
        on left: 151 152
        on right: 152 169
    primary_typespec <pdm::ast::Typespec*> (140)
        on left: 153 154 155 156 157
        on right: 162 163
    paren_typespec <pdm::ast::Typespec*> (141)
        on left: 158
        on right: 154
    tuple_typespec <pdm::ast::Typespec*> (142)
        on left: 159 160
        on right: 155
    mod_prefix_tid <pdm::ast::Typespec*> (143)
        on left: 161
        on right: 156
    fn_typespec <pdm::ast::Typespec*> (144)
        on left: 162
        on right: 157
    postfix_typespec <pdm::ast::Typespec*> (145)
        on left: 163 164
        on right: 165 166
    tcall_typespec <pdm::ast::Typespec*> (146)
        on left: 165
        on right: 164
    unary_typespec <pdm::ast::Typespec*> (147)
        on left: 166
        on right: 145 167
    long_typespec <pdm::ast::Typespec*> (148)
        on left: 167 168
        on right: 32 33
    struct_typespec <pdm::ast::Typespec*> (149)
        on left: 169
        on right: 168
    targ <pdm::ast::TArg*> (150)
        on left: 170 171
        on right: 172 173
    targ_cl <std::vector<pdm::ast::TArg*>> (151)
        on left: 172 173
        on right: 100 165 173
    varg <pdm::ast::VArg*> (152)
        on left: 174 175 176
        on right: 177 178
    varg_cl <std::vector<pdm::ast::VArg*>> (153)
        on left: 177 178
        on right: 102 178
    struct_exp_field <pdm::ast::StructExp::Field*> (154)
        on left: 179
        on right: 200 201
    vpattern_field <pdm::ast::VPattern::Field*> (155)
        on left: 180 181 182
        on right: 194 195
    lpattern_field <pdm::ast::LPattern::Field*> (156)
        on left: 183 184
        on right: 188 196 197
    tpattern_field <pdm::ast::TPattern::Field*> (157)
        on left: 185 186
        on right: 198 199
    destructured_lpattern <pdm::ast::LPattern*> (158)
        on left: 187
        on right: 189
    lpattern <pdm::ast::LPattern*> (159)
        on left: 188 189
        on right: 15 16 17
    vpattern <pdm::ast::VPattern*> (160)
        on left: 190 191
        on right: 28 29 30 31 94 162
    tpattern <pdm::ast::TPattern*> (161)
        on left: 192 193
        on right: 202 203
    vpattern_field_cl <std::vector<pdm::ast::VPattern::Field*>> (162)
        on left: 194 195
        on right: 190 195
    lpattern_field_cl <std::vector<pdm::ast::LPattern::Field*>> (163)
        on left: 196 197
        on right: 187 197
    tpattern_field_cl <std::vector<pdm::ast::TPattern::Field*>> (164)
        on left: 198 199
        on right: 192 193 199
    struct_exp_field_cl <std::vector<pdm::ast::StructExp::Field*>> (165)
        on left: 200 201
        on right: 73 201
    tpattern_seq <std::vector<pdm::ast::TPattern*>> (166)
        on left: 202 203
        on right: 29 31 33 35 43 203


State 0

    0 $accept: • script $end

    "mod"     shift, and go to state 1
    "import"  shift, and go to state 2
    "extern"  shift, and go to state 3

    script             go to state 4
    scriptContent      go to state 5
    scriptContentStmt  go to state 6
    mod_stmt           go to state 7
    import_stmt        go to state 8
    extern_stmt        go to state 9


State 1

    7 mod_stmt: "mod" • "<TypeId>" "{" moduleContent "}"

    "<TypeId>"  shift, and go to state 10


State 2

   46 import_stmt: "import" • tid "from" stringl "type" stringl

    "<TypeId>"  shift, and go to state 11

    tid  go to state 12


State 3

   47 extern_stmt: "extern" • vid "from" expr

    "<val_id>"  shift, and go to state 13

    vid  go to state 14


State 4

    0 $accept: script • $end

    $end  shift, and go to state 15


State 5

    1 script: scriptContent •
    3 scriptContent: scriptContent • scriptContentStmt ";"

    "mod"     shift, and go to state 1
    "import"  shift, and go to state 2
    "extern"  shift, and go to state 3

    $default  reduce using rule 1 (script)

    scriptContentStmt  go to state 16
    mod_stmt           go to state 7
    import_stmt        go to state 8
    extern_stmt        go to state 9


State 6

    2 scriptContent: scriptContentStmt • ";"

    ";"  shift, and go to state 17


State 7

    4 scriptContentStmt: mod_stmt •

    $default  reduce using rule 4 (scriptContentStmt)


State 8

    5 scriptContentStmt: import_stmt •

    $default  reduce using rule 5 (scriptContentStmt)


State 9

    6 scriptContentStmt: extern_stmt •

    $default  reduce using rule 6 (scriptContentStmt)


State 10

    7 mod_stmt: "mod" "<TypeId>" • "{" moduleContent "}"

    "{"  shift, and go to state 18


State 11

   48 tid: "<TypeId>" •

    $default  reduce using rule 48 (tid)


State 12

   46 import_stmt: "import" tid • "from" stringl "type" stringl

    "from"  shift, and go to state 19


State 13

   49 vid: "<val_id>" •

    $default  reduce using rule 49 (vid)


State 14

   47 extern_stmt: "extern" vid • "from" expr

    "from"  shift, and go to state 20


State 15

    0 $accept: script $end •

    $default  accept


State 16

    3 scriptContent: scriptContent scriptContentStmt • ";"

    ";"  shift, and go to state 21


State 17

    2 scriptContent: scriptContentStmt ";" •

    $default  reduce using rule 2 (scriptContent)


State 18

    7 mod_stmt: "mod" "<TypeId>" "{" • moduleContent "}"

    "using"      shift, and go to state 22
    "mod"        shift, and go to state 1
    "import"     shift, and go to state 2
    "extern"     shift, and go to state 3
    "fn"         shift, and go to state 23
    "type"       shift, and go to state 24
    "typeclass"  shift, and go to state 25

    mod_stmt           go to state 26
    moduleContent      go to state 27
    moduleContentStmt  go to state 28
    fn_stmt            go to state 29
    type_stmt          go to state 30
    enum_stmt          go to state 31
    typeclass_stmt     go to state 32
    using_stmt         go to state 33
    import_stmt        go to state 34
    extern_stmt        go to state 35


State 19

   46 import_stmt: "import" tid "from" • stringl "type" stringl

    "\"dq-string-literal\""  shift, and go to state 36
    "'sq-string-literal'"    shift, and go to state 37

    stringl  go to state 38


State 20

   47 extern_stmt: "extern" vid "from" • expr

    "<val_id>"               shift, and go to state 13
    "<TypeId>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "lambda"                 shift, and go to state 40
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    tid             go to state 53
    vid             go to state 54
    floatl          go to state 55
    mod_prefix      go to state 56
    expr            go to state 57
    bracketed_exp   go to state 58
    unit_exp        go to state 59
    paren_exp       go to state 60
    vtupleExpr      go to state 61
    vstructExpr     go to state 62
    primary_exp     go to state 63
    int_expr        go to state 64
    stringls        go to state 65
    if_exp          go to state 66
    chain_exp       go to state 67
    lambda_exp      go to state 68
    postfix_exp     go to state 69
    tcall_exp       go to state 70
    vcall_exp       go to state 71
    dot_name_exp    go to state 72
    dot_index_exp   go to state 73
    unary_exp       go to state 74
    unary_op        go to state 75
    binary_exp      go to state 76
    mul_binary_exp  go to state 77
    add_binary_exp  go to state 78
    cmp_binary_exp  go to state 79
    eq_binary_exp   go to state 80
    and_binary_exp  go to state 81
    xor_binary_exp  go to state 82
    or_binary_exp   go to state 83


State 21

    3 scriptContent: scriptContent scriptContentStmt ";" •

    $default  reduce using rule 3 (scriptContent)


State 22

   44 using_stmt: "using" • vid "." "*"
   45           | "using" • vid "." vid "*"

    "<val_id>"  shift, and go to state 13

    vid  go to state 84


State 23

   28 fn_stmt: "fn" • vid vpattern "->" typespec "=" bracketed_exp
   29        | "fn" • vid tpattern_seq vpattern "->" typespec "=" bracketed_exp
   30        | "fn" • vid vpattern "=" bracketed_exp
   31        | "fn" • vid tpattern_seq vpattern "=" bracketed_exp

    "<val_id>"  shift, and go to state 13

    vid  go to state 85


State 24

   32 type_stmt: "type" • tid "=" long_typespec
   33          | "type" • tid tpattern_seq "=" long_typespec
   34 enum_stmt: "type" • tid enum_field_pl
   35          | "type" • tid tpattern_seq enum_field_pl

    "<TypeId>"  shift, and go to state 11

    tid  go to state 86


State 25

   42 typeclass_stmt: "typeclass" • tid "<" tid typespec ">" "=" "{" type_query_exp_sl "}"
   43               | "typeclass" • tid "<" tid typespec ">" tpattern_seq "=" "{" type_query_exp_sl "}"

    "<TypeId>"  shift, and go to state 11

    tid  go to state 87


State 26

   25 moduleContentStmt: mod_stmt •

    $default  reduce using rule 25 (moduleContentStmt)


State 27

    7 mod_stmt: "mod" "<TypeId>" "{" moduleContent • "}"
    9 moduleContent: moduleContent • moduleContentStmt ";"

    "using"      shift, and go to state 22
    "mod"        shift, and go to state 1
    "import"     shift, and go to state 2
    "extern"     shift, and go to state 3
    "fn"         shift, and go to state 23
    "type"       shift, and go to state 24
    "typeclass"  shift, and go to state 25
    "}"          shift, and go to state 88

    mod_stmt           go to state 26
    moduleContentStmt  go to state 89
    fn_stmt            go to state 29
    type_stmt          go to state 30
    enum_stmt          go to state 31
    typeclass_stmt     go to state 32
    using_stmt         go to state 33
    import_stmt        go to state 34
    extern_stmt        go to state 35


State 28

    8 moduleContent: moduleContentStmt • ";"

    ";"  shift, and go to state 90


State 29

   20 moduleContentStmt: fn_stmt •

    $default  reduce using rule 20 (moduleContentStmt)


State 30

   21 moduleContentStmt: type_stmt •

    $default  reduce using rule 21 (moduleContentStmt)


State 31

   22 moduleContentStmt: enum_stmt •

    $default  reduce using rule 22 (moduleContentStmt)


State 32

   23 moduleContentStmt: typeclass_stmt •

    $default  reduce using rule 23 (moduleContentStmt)


State 33

   26 moduleContentStmt: using_stmt •

    $default  reduce using rule 26 (moduleContentStmt)


State 34

   24 moduleContentStmt: import_stmt •

    $default  reduce using rule 24 (moduleContentStmt)


State 35

   27 moduleContentStmt: extern_stmt •

    $default  reduce using rule 27 (moduleContentStmt)


State 36

   52 stringl: "\"dq-string-literal\"" •

    $default  reduce using rule 52 (stringl)


State 37

   51 stringl: "'sq-string-literal'" •

    $default  reduce using rule 51 (stringl)


State 38

   46 import_stmt: "import" tid "from" stringl • "type" stringl

    "type"  shift, and go to state 91


State 39

   87 if_exp: "if" • bracketed_exp "then" bracketed_exp
   88       | "if" • bracketed_exp "then" bracketed_exp "else" primary_exp

    "("  shift, and go to state 47
    "{"  shift, and go to state 48

    bracketed_exp  go to state 92
    unit_exp       go to state 59
    paren_exp      go to state 60
    vtupleExpr     go to state 61
    vstructExpr    go to state 62
    chain_exp      go to state 67


State 40

   94 lambda_exp: "lambda" • vpattern "=" bracketed_exp

    "("  shift, and go to state 93

    vpattern  go to state 94


State 41

  114 unary_op: "not" •

    $default  reduce using rule 114 (unary_op)


State 42

   81 int_expr: "42" •

    $default  reduce using rule 81 (int_expr)


State 43

   82 int_expr: "0x2a" •

    $default  reduce using rule 82 (int_expr)


State 44

   50 floatl: "4.2" •

    $default  reduce using rule 50 (floatl)


State 45

   84 stringls: "\"dq-string-literal\"" •

    $default  reduce using rule 84 (stringls)


State 46

   83 stringls: "'sq-string-literal'" •

    $default  reduce using rule 83 (stringls)


State 47

   68 unit_exp: "(" • ")"
   70 paren_exp: "(" • long_exp ")"
   71 vtupleExpr: "(" • expr "," ")"
   72           | "(" • expr_cl2 ")"

    "<val_id>"               shift, and go to state 13
    "<TypeId>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "lambda"                 shift, and go to state 40
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    ")"                      shift, and go to state 95
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    tid             go to state 53
    vid             go to state 54
    floatl          go to state 55
    mod_prefix      go to state 56
    expr            go to state 96
    long_exp        go to state 97
    expr_cl2        go to state 98
    bracketed_exp   go to state 58
    unit_exp        go to state 59
    paren_exp       go to state 60
    vtupleExpr      go to state 61
    vstructExpr     go to state 62
    primary_exp     go to state 63
    int_expr        go to state 64
    stringls        go to state 65
    if_exp          go to state 66
    chain_exp       go to state 67
    lambda_exp      go to state 68
    postfix_exp     go to state 69
    tcall_exp       go to state 70
    vcall_exp       go to state 71
    dot_name_exp    go to state 72
    dot_index_exp   go to state 73
    unary_exp       go to state 74
    unary_op        go to state 75
    binary_exp      go to state 76
    mul_binary_exp  go to state 77
    add_binary_exp  go to state 78
    cmp_binary_exp  go to state 79
    eq_binary_exp   go to state 80
    and_binary_exp  go to state 81
    xor_binary_exp  go to state 82
    or_binary_exp   go to state 83


State 48

   69 unit_exp: "{" • "}"
   73 vstructExpr: "{" • struct_exp_field_cl "}"
   89 chain_exp: "{" • expr "}"
   90          | "{" • chain_prefix "}"
   91          | "{" • chain_prefix expr "}"

    "<val_id>"               shift, and go to state 13
    "<TypeId>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "const"                  shift, and go to state 99
    "val"                    shift, and go to state 100
    "var"                    shift, and go to state 101
    "set"                    shift, and go to state 102
    "lambda"                 shift, and go to state 40
    "not"                    shift, and go to state 41
    "discard"                shift, and go to state 103
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48
    "}"                      shift, and go to state 104
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    chain_prefix_stmt    go to state 105
    const_stmt           go to state 106
    val_stmt             go to state 107
    var_stmt             go to state 108
    set_stmt             go to state 109
    discard_stmt         go to state 110
    tid                  go to state 53
    vid                  go to state 111
    floatl               go to state 55
    mod_prefix           go to state 56
    expr                 go to state 112
    bracketed_exp        go to state 58
    unit_exp             go to state 59
    paren_exp            go to state 60
    vtupleExpr           go to state 61
    vstructExpr          go to state 62
    primary_exp          go to state 63
    int_expr             go to state 64
    stringls             go to state 65
    if_exp               go to state 66
    chain_exp            go to state 67
    chain_prefix         go to state 113
    lambda_exp           go to state 68
    postfix_exp          go to state 69
    tcall_exp            go to state 70
    vcall_exp            go to state 71
    dot_name_exp         go to state 72
    dot_index_exp        go to state 73
    unary_exp            go to state 74
    unary_op             go to state 75
    binary_exp           go to state 76
    mul_binary_exp       go to state 77
    add_binary_exp       go to state 78
    cmp_binary_exp       go to state 79
    eq_binary_exp        go to state 80
    and_binary_exp       go to state 81
    xor_binary_exp       go to state 82
    or_binary_exp        go to state 83
    struct_exp_field     go to state 114
    struct_exp_field_cl  go to state 115


State 49

  112 unary_op: "*" •

    $default  reduce using rule 112 (unary_op)


State 50

  110 unary_op: "+" •

    $default  reduce using rule 110 (unary_op)


State 51

  111 unary_op: "-" •

    $default  reduce using rule 111 (unary_op)


State 52

  113 unary_op: "^" •

    $default  reduce using rule 113 (unary_op)


State 53

   53 mod_prefix: tid • ":"

    ":"  shift, and go to state 116


State 54

   75 primary_exp: vid •

    $default  reduce using rule 75 (primary_exp)


State 55

   77 primary_exp: floatl •

    $default  reduce using rule 77 (primary_exp)


State 56

   54 mod_prefix: mod_prefix • vid ":"
  105 dot_name_exp: mod_prefix • "<val_id>"

    "<val_id>"  shift, and go to state 117

    vid  go to state 118


State 57

   47 extern_stmt: "extern" vid "from" expr •

    $default  reduce using rule 47 (extern_stmt)


State 58

   74 primary_exp: bracketed_exp •

    $default  reduce using rule 74 (primary_exp)


State 59

   63 bracketed_exp: unit_exp •

    $default  reduce using rule 63 (bracketed_exp)


State 60

   64 bracketed_exp: paren_exp •

    $default  reduce using rule 64 (bracketed_exp)


State 61

   65 bracketed_exp: vtupleExpr •

    $default  reduce using rule 65 (bracketed_exp)


State 62

   66 bracketed_exp: vstructExpr •

    $default  reduce using rule 66 (bracketed_exp)


State 63

   95 postfix_exp: primary_exp •

    $default  reduce using rule 95 (postfix_exp)


State 64

   76 primary_exp: int_expr •

    $default  reduce using rule 76 (primary_exp)


State 65

   78 primary_exp: stringls •
   85 stringls: stringls • "'sq-string-literal'"
   86         | stringls • "\"dq-string-literal\""

    "\"dq-string-literal\""  shift, and go to state 119
    "'sq-string-literal'"    shift, and go to state 120

    $default  reduce using rule 78 (primary_exp)


State 66

   79 primary_exp: if_exp •

    $default  reduce using rule 79 (primary_exp)


State 67

   67 bracketed_exp: chain_exp •

    $default  reduce using rule 67 (bracketed_exp)


State 68

   80 primary_exp: lambda_exp •

    $default  reduce using rule 80 (primary_exp)


State 69

  100 tcall_exp: postfix_exp • "[" targ_cl "]"
  101 vcall_exp: postfix_exp • "(" ")"
  102          | postfix_exp • "(" varg_cl ")"
  103 dot_name_exp: postfix_exp • "." "<val_id>"
  104             | postfix_exp • "." "<TypeId>" "(" expr_cl0 ")"
  106 dot_index_exp: postfix_exp • "." int_expr
  107              | postfix_exp • "." bracketed_exp
  108 unary_exp: postfix_exp •

    "."  shift, and go to state 121
    "("  shift, and go to state 122
    "["  shift, and go to state 123

    $default  reduce using rule 108 (unary_exp)


State 70

   96 postfix_exp: tcall_exp •

    $default  reduce using rule 96 (postfix_exp)


State 71

   97 postfix_exp: vcall_exp •

    $default  reduce using rule 97 (postfix_exp)


State 72

   98 postfix_exp: dot_name_exp •

    $default  reduce using rule 98 (postfix_exp)


State 73

   99 postfix_exp: dot_index_exp •

    $default  reduce using rule 99 (postfix_exp)


State 74

  119 mul_binary_exp: unary_exp •

    $default  reduce using rule 119 (mul_binary_exp)


State 75

  109 unary_exp: unary_op • unary_exp

    "<val_id>"               shift, and go to state 13
    "<TypeId>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "lambda"                 shift, and go to state 40
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    tid            go to state 53
    vid            go to state 54
    floatl         go to state 55
    mod_prefix     go to state 56
    bracketed_exp  go to state 58
    unit_exp       go to state 59
    paren_exp      go to state 60
    vtupleExpr     go to state 61
    vstructExpr    go to state 62
    primary_exp    go to state 63
    int_expr       go to state 64
    stringls       go to state 65
    if_exp         go to state 66
    chain_exp      go to state 67
    lambda_exp     go to state 68
    postfix_exp    go to state 69
    tcall_exp      go to state 70
    vcall_exp      go to state 71
    dot_name_exp   go to state 72
    dot_index_exp  go to state 73
    unary_exp      go to state 124
    unary_op       go to state 75


State 76

   55 expr: binary_exp •

    $default  reduce using rule 55 (expr)


State 77

  120 mul_binary_exp: mul_binary_exp • mul_binary_op unary_exp
  123 add_binary_exp: mul_binary_exp •

    "*"  shift, and go to state 125
    "/"  shift, and go to state 126
    "%"  shift, and go to state 127

    $default  reduce using rule 123 (add_binary_exp)

    mul_binary_op  go to state 128


State 78

  124 add_binary_exp: add_binary_exp • add_binary_op mul_binary_exp
  129 cmp_binary_exp: add_binary_exp •

    "+"  shift, and go to state 129
    "-"  shift, and go to state 130

    $default  reduce using rule 129 (cmp_binary_exp)

    add_binary_op  go to state 131


State 79

  130 cmp_binary_exp: cmp_binary_exp • cmp_binary_op add_binary_exp
  133 eq_binary_exp: cmp_binary_exp •

    "<"   shift, and go to state 132
    "<="  shift, and go to state 133
    ">"   shift, and go to state 134
    ">="  shift, and go to state 135

    $default  reduce using rule 133 (eq_binary_exp)

    cmp_binary_op  go to state 136


State 80

  134 eq_binary_exp: eq_binary_exp • eq_binary_op cmp_binary_exp
  135 and_binary_exp: eq_binary_exp •

    "=="  shift, and go to state 137
    "!="  shift, and go to state 138

    $default  reduce using rule 135 (and_binary_exp)

    eq_binary_op  go to state 139


State 81

  136 and_binary_exp: and_binary_exp • "and" eq_binary_exp
  137 xor_binary_exp: and_binary_exp •

    "and"  shift, and go to state 140

    $default  reduce using rule 137 (xor_binary_exp)


State 82

  138 xor_binary_exp: xor_binary_exp • "xor" and_binary_exp
  139 or_binary_exp: xor_binary_exp •

    "xor"  shift, and go to state 141

    $default  reduce using rule 139 (or_binary_exp)


State 83

  115 binary_exp: or_binary_exp •
  140 or_binary_exp: or_binary_exp • "or" xor_binary_exp

    "or"  shift, and go to state 142

    $default  reduce using rule 115 (binary_exp)


State 84

   44 using_stmt: "using" vid • "." "*"
   45           | "using" vid • "." vid "*"

    "."  shift, and go to state 143


State 85

   28 fn_stmt: "fn" vid • vpattern "->" typespec "=" bracketed_exp
   29        | "fn" vid • tpattern_seq vpattern "->" typespec "=" bracketed_exp
   30        | "fn" vid • vpattern "=" bracketed_exp
   31        | "fn" vid • tpattern_seq vpattern "=" bracketed_exp

    "("  shift, and go to state 93
    "["  shift, and go to state 144
    "!"  shift, and go to state 145

    vpattern      go to state 146
    tpattern      go to state 147
    tpattern_seq  go to state 148


State 86

   32 type_stmt: "type" tid • "=" long_typespec
   33          | "type" tid • tpattern_seq "=" long_typespec
   34 enum_stmt: "type" tid • enum_field_pl
   35          | "type" tid • tpattern_seq enum_field_pl

    "["  shift, and go to state 144
    "="  shift, and go to state 149
    "!"  shift, and go to state 145
    "|"  shift, and go to state 150

    enum_field_pl  go to state 151
    tpattern       go to state 147
    tpattern_seq   go to state 152


State 87

   42 typeclass_stmt: "typeclass" tid • "<" tid typespec ">" "=" "{" type_query_exp_sl "}"
   43               | "typeclass" tid • "<" tid typespec ">" tpattern_seq "=" "{" type_query_exp_sl "}"

    "<"  shift, and go to state 153


State 88

    7 mod_stmt: "mod" "<TypeId>" "{" moduleContent "}" •

    $default  reduce using rule 7 (mod_stmt)


State 89

    9 moduleContent: moduleContent moduleContentStmt • ";"

    ";"  shift, and go to state 154


State 90

    8 moduleContent: moduleContentStmt ";" •

    $default  reduce using rule 8 (moduleContent)


State 91

   46 import_stmt: "import" tid "from" stringl "type" • stringl

    "\"dq-string-literal\""  shift, and go to state 36
    "'sq-string-literal'"    shift, and go to state 37

    stringl  go to state 155


State 92

   87 if_exp: "if" bracketed_exp • "then" bracketed_exp
   88       | "if" bracketed_exp • "then" bracketed_exp "else" primary_exp

    "then"  shift, and go to state 156


State 93

  190 vpattern: "(" • vpattern_field_cl ")"
  191         | "(" • ")"

    "<val_id>"  shift, and go to state 13
    "out"       shift, and go to state 157
    "inout"     shift, and go to state 158
    ")"         shift, and go to state 159

    vid                go to state 160
    vpattern_field     go to state 161
    vpattern_field_cl  go to state 162


State 94

   94 lambda_exp: "lambda" vpattern • "=" bracketed_exp

    "="  shift, and go to state 163


State 95

   68 unit_exp: "(" ")" •

    $default  reduce using rule 68 (unit_exp)


State 96

   56 long_exp: expr •
   59 expr_cl2: expr • "," expr
   71 vtupleExpr: "(" expr • "," ")"

    ","  shift, and go to state 164

    $default  reduce using rule 56 (long_exp)


State 97

   70 paren_exp: "(" long_exp • ")"

    ")"  shift, and go to state 165


State 98

   60 expr_cl2: expr_cl2 • "," expr
   72 vtupleExpr: "(" expr_cl2 • ")"

    ","  shift, and go to state 166
    ")"  shift, and go to state 167


State 99

   15 const_stmt: "const" • lpattern "=" expr

    "<val_id>"  shift, and go to state 13
    "("         shift, and go to state 168

    vid                    go to state 169
    lpattern_field         go to state 170
    destructured_lpattern  go to state 171
    lpattern               go to state 172


State 100

   16 val_stmt: "val" • lpattern "=" expr

    "<val_id>"  shift, and go to state 13
    "("         shift, and go to state 168

    vid                    go to state 169
    lpattern_field         go to state 170
    destructured_lpattern  go to state 171
    lpattern               go to state 173


State 101

   17 var_stmt: "var" • lpattern "=" expr

    "<val_id>"  shift, and go to state 13
    "("         shift, and go to state 168

    vid                    go to state 169
    lpattern_field         go to state 170
    destructured_lpattern  go to state 171
    lpattern               go to state 174


State 102

   18 set_stmt: "set" • expr "=" expr

    "<val_id>"               shift, and go to state 13
    "<TypeId>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "lambda"                 shift, and go to state 40
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    tid             go to state 53
    vid             go to state 54
    floatl          go to state 55
    mod_prefix      go to state 56
    expr            go to state 175
    bracketed_exp   go to state 58
    unit_exp        go to state 59
    paren_exp       go to state 60
    vtupleExpr      go to state 61
    vstructExpr     go to state 62
    primary_exp     go to state 63
    int_expr        go to state 64
    stringls        go to state 65
    if_exp          go to state 66
    chain_exp       go to state 67
    lambda_exp      go to state 68
    postfix_exp     go to state 69
    tcall_exp       go to state 70
    vcall_exp       go to state 71
    dot_name_exp    go to state 72
    dot_index_exp   go to state 73
    unary_exp       go to state 74
    unary_op        go to state 75
    binary_exp      go to state 76
    mul_binary_exp  go to state 77
    add_binary_exp  go to state 78
    cmp_binary_exp  go to state 79
    eq_binary_exp   go to state 80
    and_binary_exp  go to state 81
    xor_binary_exp  go to state 82
    or_binary_exp   go to state 83


State 103

   19 discard_stmt: "discard" • expr

    "<val_id>"               shift, and go to state 13
    "<TypeId>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "lambda"                 shift, and go to state 40
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    tid             go to state 53
    vid             go to state 54
    floatl          go to state 55
    mod_prefix      go to state 56
    expr            go to state 176
    bracketed_exp   go to state 58
    unit_exp        go to state 59
    paren_exp       go to state 60
    vtupleExpr      go to state 61
    vstructExpr     go to state 62
    primary_exp     go to state 63
    int_expr        go to state 64
    stringls        go to state 65
    if_exp          go to state 66
    chain_exp       go to state 67
    lambda_exp      go to state 68
    postfix_exp     go to state 69
    tcall_exp       go to state 70
    vcall_exp       go to state 71
    dot_name_exp    go to state 72
    dot_index_exp   go to state 73
    unary_exp       go to state 74
    unary_op        go to state 75
    binary_exp      go to state 76
    mul_binary_exp  go to state 77
    add_binary_exp  go to state 78
    cmp_binary_exp  go to state 79
    eq_binary_exp   go to state 80
    and_binary_exp  go to state 81
    xor_binary_exp  go to state 82
    or_binary_exp   go to state 83


State 104

   69 unit_exp: "{" "}" •

    $default  reduce using rule 69 (unit_exp)


State 105

   92 chain_prefix: chain_prefix_stmt • ";"

    ";"  shift, and go to state 177


State 106

   10 chain_prefix_stmt: const_stmt •

    $default  reduce using rule 10 (chain_prefix_stmt)


State 107

   11 chain_prefix_stmt: val_stmt •

    $default  reduce using rule 11 (chain_prefix_stmt)


State 108

   12 chain_prefix_stmt: var_stmt •

    $default  reduce using rule 12 (chain_prefix_stmt)


State 109

   13 chain_prefix_stmt: set_stmt •

    $default  reduce using rule 13 (chain_prefix_stmt)


State 110

   14 chain_prefix_stmt: discard_stmt •

    $default  reduce using rule 14 (chain_prefix_stmt)


State 111

   75 primary_exp: vid •
  179 struct_exp_field: vid • "=" expr

    "="  shift, and go to state 178

    $default  reduce using rule 75 (primary_exp)


State 112

   89 chain_exp: "{" expr • "}"

    "}"  shift, and go to state 179


State 113

   90 chain_exp: "{" chain_prefix • "}"
   91          | "{" chain_prefix • expr "}"
   93 chain_prefix: chain_prefix • chain_prefix_stmt ";"

    "<val_id>"               shift, and go to state 13
    "<TypeId>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "const"                  shift, and go to state 99
    "val"                    shift, and go to state 100
    "var"                    shift, and go to state 101
    "set"                    shift, and go to state 102
    "lambda"                 shift, and go to state 40
    "not"                    shift, and go to state 41
    "discard"                shift, and go to state 103
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48
    "}"                      shift, and go to state 180
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    chain_prefix_stmt  go to state 181
    const_stmt         go to state 106
    val_stmt           go to state 107
    var_stmt           go to state 108
    set_stmt           go to state 109
    discard_stmt       go to state 110
    tid                go to state 53
    vid                go to state 54
    floatl             go to state 55
    mod_prefix         go to state 56
    expr               go to state 182
    bracketed_exp      go to state 58
    unit_exp           go to state 59
    paren_exp          go to state 60
    vtupleExpr         go to state 61
    vstructExpr        go to state 62
    primary_exp        go to state 63
    int_expr           go to state 64
    stringls           go to state 65
    if_exp             go to state 66
    chain_exp          go to state 67
    lambda_exp         go to state 68
    postfix_exp        go to state 69
    tcall_exp          go to state 70
    vcall_exp          go to state 71
    dot_name_exp       go to state 72
    dot_index_exp      go to state 73
    unary_exp          go to state 74
    unary_op           go to state 75
    binary_exp         go to state 76
    mul_binary_exp     go to state 77
    add_binary_exp     go to state 78
    cmp_binary_exp     go to state 79
    eq_binary_exp      go to state 80
    and_binary_exp     go to state 81
    xor_binary_exp     go to state 82
    or_binary_exp      go to state 83


State 114

  200 struct_exp_field_cl: struct_exp_field •

    $default  reduce using rule 200 (struct_exp_field_cl)


State 115

   73 vstructExpr: "{" struct_exp_field_cl • "}"
  201 struct_exp_field_cl: struct_exp_field_cl • "," struct_exp_field

    ","  shift, and go to state 183
    "}"  shift, and go to state 184


State 116

   53 mod_prefix: tid ":" •

    $default  reduce using rule 53 (mod_prefix)


State 117

   49 vid: "<val_id>" •
  105 dot_name_exp: mod_prefix "<val_id>" •

    ":"       reduce using rule 49 (vid)
    $default  reduce using rule 105 (dot_name_exp)


State 118

   54 mod_prefix: mod_prefix vid • ":"

    ":"  shift, and go to state 185


State 119

   86 stringls: stringls "\"dq-string-literal\"" •

    $default  reduce using rule 86 (stringls)


State 120

   85 stringls: stringls "'sq-string-literal'" •

    $default  reduce using rule 85 (stringls)


State 121

  103 dot_name_exp: postfix_exp "." • "<val_id>"
  104             | postfix_exp "." • "<TypeId>" "(" expr_cl0 ")"
  106 dot_index_exp: postfix_exp "." • int_expr
  107              | postfix_exp "." • bracketed_exp

    "<val_id>"  shift, and go to state 186
    "<TypeId>"  shift, and go to state 187
    "42"        shift, and go to state 42
    "0x2a"      shift, and go to state 43
    "("         shift, and go to state 47
    "{"         shift, and go to state 48

    bracketed_exp  go to state 188
    unit_exp       go to state 59
    paren_exp      go to state 60
    vtupleExpr     go to state 61
    vstructExpr    go to state 62
    int_expr       go to state 189
    chain_exp      go to state 67


State 122

  101 vcall_exp: postfix_exp "(" • ")"
  102          | postfix_exp "(" • varg_cl ")"

    "<val_id>"               shift, and go to state 13
    "<TypeId>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "lambda"                 shift, and go to state 40
    "not"                    shift, and go to state 41
    "out"                    shift, and go to state 190
    "inout"                  shift, and go to state 191
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    ")"                      shift, and go to state 192
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    tid             go to state 53
    vid             go to state 54
    floatl          go to state 55
    mod_prefix      go to state 56
    expr            go to state 193
    bracketed_exp   go to state 58
    unit_exp        go to state 59
    paren_exp       go to state 60
    vtupleExpr      go to state 61
    vstructExpr     go to state 62
    primary_exp     go to state 63
    int_expr        go to state 64
    stringls        go to state 65
    if_exp          go to state 66
    chain_exp       go to state 67
    lambda_exp      go to state 68
    postfix_exp     go to state 69
    tcall_exp       go to state 70
    vcall_exp       go to state 71
    dot_name_exp    go to state 72
    dot_index_exp   go to state 73
    unary_exp       go to state 74
    unary_op        go to state 75
    binary_exp      go to state 76
    mul_binary_exp  go to state 77
    add_binary_exp  go to state 78
    cmp_binary_exp  go to state 79
    eq_binary_exp   go to state 80
    and_binary_exp  go to state 81
    xor_binary_exp  go to state 82
    or_binary_exp   go to state 83
    varg            go to state 194
    varg_cl         go to state 195


State 123

  100 tcall_exp: postfix_exp "[" • targ_cl "]"

    "<val_id>"               shift, and go to state 13
    "<TypeId>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "lambda"                 shift, and go to state 40
    "Fn"                     shift, and go to state 196
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 197
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    tid               go to state 198
    vid               go to state 54
    floatl            go to state 55
    mod_prefix        go to state 199
    expr              go to state 200
    bracketed_exp     go to state 58
    unit_exp          go to state 59
    paren_exp         go to state 60
    vtupleExpr        go to state 61
    vstructExpr       go to state 62
    primary_exp       go to state 63
    int_expr          go to state 64
    stringls          go to state 65
    if_exp            go to state 66
    chain_exp         go to state 67
    lambda_exp        go to state 68
    postfix_exp       go to state 69
    tcall_exp         go to state 70
    vcall_exp         go to state 71
    dot_name_exp      go to state 72
    dot_index_exp     go to state 73
    unary_exp         go to state 74
    unary_op          go to state 75
    binary_exp        go to state 76
    mul_binary_exp    go to state 77
    add_binary_exp    go to state 78
    cmp_binary_exp    go to state 79
    eq_binary_exp     go to state 80
    and_binary_exp    go to state 81
    xor_binary_exp    go to state 82
    or_binary_exp     go to state 83
    typespec          go to state 201
    primary_typespec  go to state 202
    paren_typespec    go to state 203
    tuple_typespec    go to state 204
    mod_prefix_tid    go to state 205
    fn_typespec       go to state 206
    postfix_typespec  go to state 207
    tcall_typespec    go to state 208
    unary_typespec    go to state 209
    targ              go to state 210
    targ_cl           go to state 211


State 124

  109 unary_exp: unary_op unary_exp •

    $default  reduce using rule 109 (unary_exp)


State 125

  116 mul_binary_op: "*" •

    $default  reduce using rule 116 (mul_binary_op)


State 126

  117 mul_binary_op: "/" •

    $default  reduce using rule 117 (mul_binary_op)


State 127

  118 mul_binary_op: "%" •

    $default  reduce using rule 118 (mul_binary_op)


State 128

  120 mul_binary_exp: mul_binary_exp mul_binary_op • unary_exp

    "<val_id>"               shift, and go to state 13
    "<TypeId>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "lambda"                 shift, and go to state 40
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    tid            go to state 53
    vid            go to state 54
    floatl         go to state 55
    mod_prefix     go to state 56
    bracketed_exp  go to state 58
    unit_exp       go to state 59
    paren_exp      go to state 60
    vtupleExpr     go to state 61
    vstructExpr    go to state 62
    primary_exp    go to state 63
    int_expr       go to state 64
    stringls       go to state 65
    if_exp         go to state 66
    chain_exp      go to state 67
    lambda_exp     go to state 68
    postfix_exp    go to state 69
    tcall_exp      go to state 70
    vcall_exp      go to state 71
    dot_name_exp   go to state 72
    dot_index_exp  go to state 73
    unary_exp      go to state 212
    unary_op       go to state 75


State 129

  121 add_binary_op: "+" •

    $default  reduce using rule 121 (add_binary_op)


State 130

  122 add_binary_op: "-" •

    $default  reduce using rule 122 (add_binary_op)


State 131

  124 add_binary_exp: add_binary_exp add_binary_op • mul_binary_exp

    "<val_id>"               shift, and go to state 13
    "<TypeId>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "lambda"                 shift, and go to state 40
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    tid             go to state 53
    vid             go to state 54
    floatl          go to state 55
    mod_prefix      go to state 56
    bracketed_exp   go to state 58
    unit_exp        go to state 59
    paren_exp       go to state 60
    vtupleExpr      go to state 61
    vstructExpr     go to state 62
    primary_exp     go to state 63
    int_expr        go to state 64
    stringls        go to state 65
    if_exp          go to state 66
    chain_exp       go to state 67
    lambda_exp      go to state 68
    postfix_exp     go to state 69
    tcall_exp       go to state 70
    vcall_exp       go to state 71
    dot_name_exp    go to state 72
    dot_index_exp   go to state 73
    unary_exp       go to state 74
    unary_op        go to state 75
    mul_binary_exp  go to state 213


State 132

  125 cmp_binary_op: "<" •

    $default  reduce using rule 125 (cmp_binary_op)


State 133

  126 cmp_binary_op: "<=" •

    $default  reduce using rule 126 (cmp_binary_op)


State 134

  127 cmp_binary_op: ">" •

    $default  reduce using rule 127 (cmp_binary_op)


State 135

  128 cmp_binary_op: ">=" •

    $default  reduce using rule 128 (cmp_binary_op)


State 136

  130 cmp_binary_exp: cmp_binary_exp cmp_binary_op • add_binary_exp

    "<val_id>"               shift, and go to state 13
    "<TypeId>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "lambda"                 shift, and go to state 40
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    tid             go to state 53
    vid             go to state 54
    floatl          go to state 55
    mod_prefix      go to state 56
    bracketed_exp   go to state 58
    unit_exp        go to state 59
    paren_exp       go to state 60
    vtupleExpr      go to state 61
    vstructExpr     go to state 62
    primary_exp     go to state 63
    int_expr        go to state 64
    stringls        go to state 65
    if_exp          go to state 66
    chain_exp       go to state 67
    lambda_exp      go to state 68
    postfix_exp     go to state 69
    tcall_exp       go to state 70
    vcall_exp       go to state 71
    dot_name_exp    go to state 72
    dot_index_exp   go to state 73
    unary_exp       go to state 74
    unary_op        go to state 75
    mul_binary_exp  go to state 77
    add_binary_exp  go to state 214


State 137

  131 eq_binary_op: "==" •

    $default  reduce using rule 131 (eq_binary_op)


State 138

  132 eq_binary_op: "!=" •

    $default  reduce using rule 132 (eq_binary_op)


State 139

  134 eq_binary_exp: eq_binary_exp eq_binary_op • cmp_binary_exp

    "<val_id>"               shift, and go to state 13
    "<TypeId>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "lambda"                 shift, and go to state 40
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    tid             go to state 53
    vid             go to state 54
    floatl          go to state 55
    mod_prefix      go to state 56
    bracketed_exp   go to state 58
    unit_exp        go to state 59
    paren_exp       go to state 60
    vtupleExpr      go to state 61
    vstructExpr     go to state 62
    primary_exp     go to state 63
    int_expr        go to state 64
    stringls        go to state 65
    if_exp          go to state 66
    chain_exp       go to state 67
    lambda_exp      go to state 68
    postfix_exp     go to state 69
    tcall_exp       go to state 70
    vcall_exp       go to state 71
    dot_name_exp    go to state 72
    dot_index_exp   go to state 73
    unary_exp       go to state 74
    unary_op        go to state 75
    mul_binary_exp  go to state 77
    add_binary_exp  go to state 78
    cmp_binary_exp  go to state 215


State 140

  136 and_binary_exp: and_binary_exp "and" • eq_binary_exp

    "<val_id>"               shift, and go to state 13
    "<TypeId>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "lambda"                 shift, and go to state 40
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    tid             go to state 53
    vid             go to state 54
    floatl          go to state 55
    mod_prefix      go to state 56
    bracketed_exp   go to state 58
    unit_exp        go to state 59
    paren_exp       go to state 60
    vtupleExpr      go to state 61
    vstructExpr     go to state 62
    primary_exp     go to state 63
    int_expr        go to state 64
    stringls        go to state 65
    if_exp          go to state 66
    chain_exp       go to state 67
    lambda_exp      go to state 68
    postfix_exp     go to state 69
    tcall_exp       go to state 70
    vcall_exp       go to state 71
    dot_name_exp    go to state 72
    dot_index_exp   go to state 73
    unary_exp       go to state 74
    unary_op        go to state 75
    mul_binary_exp  go to state 77
    add_binary_exp  go to state 78
    cmp_binary_exp  go to state 79
    eq_binary_exp   go to state 216


State 141

  138 xor_binary_exp: xor_binary_exp "xor" • and_binary_exp

    "<val_id>"               shift, and go to state 13
    "<TypeId>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "lambda"                 shift, and go to state 40
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    tid             go to state 53
    vid             go to state 54
    floatl          go to state 55
    mod_prefix      go to state 56
    bracketed_exp   go to state 58
    unit_exp        go to state 59
    paren_exp       go to state 60
    vtupleExpr      go to state 61
    vstructExpr     go to state 62
    primary_exp     go to state 63
    int_expr        go to state 64
    stringls        go to state 65
    if_exp          go to state 66
    chain_exp       go to state 67
    lambda_exp      go to state 68
    postfix_exp     go to state 69
    tcall_exp       go to state 70
    vcall_exp       go to state 71
    dot_name_exp    go to state 72
    dot_index_exp   go to state 73
    unary_exp       go to state 74
    unary_op        go to state 75
    mul_binary_exp  go to state 77
    add_binary_exp  go to state 78
    cmp_binary_exp  go to state 79
    eq_binary_exp   go to state 80
    and_binary_exp  go to state 217


State 142

  140 or_binary_exp: or_binary_exp "or" • xor_binary_exp

    "<val_id>"               shift, and go to state 13
    "<TypeId>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "lambda"                 shift, and go to state 40
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    tid             go to state 53
    vid             go to state 54
    floatl          go to state 55
    mod_prefix      go to state 56
    bracketed_exp   go to state 58
    unit_exp        go to state 59
    paren_exp       go to state 60
    vtupleExpr      go to state 61
    vstructExpr     go to state 62
    primary_exp     go to state 63
    int_expr        go to state 64
    stringls        go to state 65
    if_exp          go to state 66
    chain_exp       go to state 67
    lambda_exp      go to state 68
    postfix_exp     go to state 69
    tcall_exp       go to state 70
    vcall_exp       go to state 71
    dot_name_exp    go to state 72
    dot_index_exp   go to state 73
    unary_exp       go to state 74
    unary_op        go to state 75
    mul_binary_exp  go to state 77
    add_binary_exp  go to state 78
    cmp_binary_exp  go to state 79
    eq_binary_exp   go to state 80
    and_binary_exp  go to state 81
    xor_binary_exp  go to state 218


State 143

   44 using_stmt: "using" vid "." • "*"
   45           | "using" vid "." • vid "*"

    "<val_id>"  shift, and go to state 13
    "*"         shift, and go to state 219

    vid  go to state 220


State 144

  192 tpattern: "[" • tpattern_field_cl "]"

    "<val_id>"  shift, and go to state 13
    "<TypeId>"  shift, and go to state 11

    tid                go to state 221
    vid                go to state 222
    tpattern_field     go to state 223
    tpattern_field_cl  go to state 224


State 145

  193 tpattern: "!" • "[" tpattern_field_cl "]"

    "["  shift, and go to state 225


State 146

   28 fn_stmt: "fn" vid vpattern • "->" typespec "=" bracketed_exp
   30        | "fn" vid vpattern • "=" bracketed_exp

    "->"  shift, and go to state 226
    "="   shift, and go to state 227


State 147

  202 tpattern_seq: tpattern •

    $default  reduce using rule 202 (tpattern_seq)


State 148

   29 fn_stmt: "fn" vid tpattern_seq • vpattern "->" typespec "=" bracketed_exp
   31        | "fn" vid tpattern_seq • vpattern "=" bracketed_exp
  203 tpattern_seq: tpattern_seq • tpattern

    "("  shift, and go to state 93
    "["  shift, and go to state 144
    "!"  shift, and go to state 145

    vpattern  go to state 228
    tpattern  go to state 229


State 149

   32 type_stmt: "type" tid "=" • long_typespec

    "<TypeId>"  shift, and go to state 11
    "Fn"        shift, and go to state 196
    "("         shift, and go to state 230
    "{"         shift, and go to state 231

    tid               go to state 198
    mod_prefix        go to state 232
    primary_typespec  go to state 202
    paren_typespec    go to state 203
    tuple_typespec    go to state 204
    mod_prefix_tid    go to state 205
    fn_typespec       go to state 206
    postfix_typespec  go to state 207
    tcall_typespec    go to state 208
    unary_typespec    go to state 233
    long_typespec     go to state 234
    struct_typespec   go to state 235


State 150

   36 enum_field_pl: "|" • unprefixed_enum_field_pl

    "<TypeId>"  shift, and go to state 11

    unprefixed_enum_field_pl  go to state 236
    enum_field                go to state 237
    tid                       go to state 238


State 151

   34 enum_stmt: "type" tid enum_field_pl •

    $default  reduce using rule 34 (enum_stmt)


State 152

   33 type_stmt: "type" tid tpattern_seq • "=" long_typespec
   35 enum_stmt: "type" tid tpattern_seq • enum_field_pl
  203 tpattern_seq: tpattern_seq • tpattern

    "["  shift, and go to state 144
    "="  shift, and go to state 239
    "!"  shift, and go to state 145
    "|"  shift, and go to state 150

    enum_field_pl  go to state 240
    tpattern       go to state 229


State 153

   42 typeclass_stmt: "typeclass" tid "<" • tid typespec ">" "=" "{" type_query_exp_sl "}"
   43               | "typeclass" tid "<" • tid typespec ">" tpattern_seq "=" "{" type_query_exp_sl "}"

    "<TypeId>"  shift, and go to state 11

    tid  go to state 241


State 154

    9 moduleContent: moduleContent moduleContentStmt ";" •

    $default  reduce using rule 9 (moduleContent)


State 155

   46 import_stmt: "import" tid "from" stringl "type" stringl •

    $default  reduce using rule 46 (import_stmt)


State 156

   87 if_exp: "if" bracketed_exp "then" • bracketed_exp
   88       | "if" bracketed_exp "then" • bracketed_exp "else" primary_exp

    "("  shift, and go to state 47
    "{"  shift, and go to state 48

    bracketed_exp  go to state 242
    unit_exp       go to state 59
    paren_exp      go to state 60
    vtupleExpr     go to state 61
    vstructExpr    go to state 62
    chain_exp      go to state 67


State 157

  181 vpattern_field: "out" • vid typespec

    "<val_id>"  shift, and go to state 13

    vid  go to state 243


State 158

  182 vpattern_field: "inout" • vid typespec

    "<val_id>"  shift, and go to state 13

    vid  go to state 244


State 159

  191 vpattern: "(" ")" •

    $default  reduce using rule 191 (vpattern)


State 160

  180 vpattern_field: vid • typespec

    "<TypeId>"  shift, and go to state 11
    "Fn"        shift, and go to state 196
    "("         shift, and go to state 230

    tid               go to state 198
    mod_prefix        go to state 232
    typespec          go to state 245
    primary_typespec  go to state 202
    paren_typespec    go to state 203
    tuple_typespec    go to state 204
    mod_prefix_tid    go to state 205
    fn_typespec       go to state 206
    postfix_typespec  go to state 207
    tcall_typespec    go to state 208
    unary_typespec    go to state 209


State 161

  194 vpattern_field_cl: vpattern_field •

    $default  reduce using rule 194 (vpattern_field_cl)


State 162

  190 vpattern: "(" vpattern_field_cl • ")"
  195 vpattern_field_cl: vpattern_field_cl • "," vpattern_field

    ","  shift, and go to state 246
    ")"  shift, and go to state 247


State 163

   94 lambda_exp: "lambda" vpattern "=" • bracketed_exp

    "("  shift, and go to state 47
    "{"  shift, and go to state 48

    bracketed_exp  go to state 248
    unit_exp       go to state 59
    paren_exp      go to state 60
    vtupleExpr     go to state 61
    vstructExpr    go to state 62
    chain_exp      go to state 67


State 164

   59 expr_cl2: expr "," • expr
   71 vtupleExpr: "(" expr "," • ")"

    "<val_id>"               shift, and go to state 13
    "<TypeId>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "lambda"                 shift, and go to state 40
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    ")"                      shift, and go to state 249
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    tid             go to state 53
    vid             go to state 54
    floatl          go to state 55
    mod_prefix      go to state 56
    expr            go to state 250
    bracketed_exp   go to state 58
    unit_exp        go to state 59
    paren_exp       go to state 60
    vtupleExpr      go to state 61
    vstructExpr     go to state 62
    primary_exp     go to state 63
    int_expr        go to state 64
    stringls        go to state 65
    if_exp          go to state 66
    chain_exp       go to state 67
    lambda_exp      go to state 68
    postfix_exp     go to state 69
    tcall_exp       go to state 70
    vcall_exp       go to state 71
    dot_name_exp    go to state 72
    dot_index_exp   go to state 73
    unary_exp       go to state 74
    unary_op        go to state 75
    binary_exp      go to state 76
    mul_binary_exp  go to state 77
    add_binary_exp  go to state 78
    cmp_binary_exp  go to state 79
    eq_binary_exp   go to state 80
    and_binary_exp  go to state 81
    xor_binary_exp  go to state 82
    or_binary_exp   go to state 83


State 165

   70 paren_exp: "(" long_exp ")" •

    $default  reduce using rule 70 (paren_exp)


State 166

   60 expr_cl2: expr_cl2 "," • expr

    "<val_id>"               shift, and go to state 13
    "<TypeId>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "lambda"                 shift, and go to state 40
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    tid             go to state 53
    vid             go to state 54
    floatl          go to state 55
    mod_prefix      go to state 56
    expr            go to state 251
    bracketed_exp   go to state 58
    unit_exp        go to state 59
    paren_exp       go to state 60
    vtupleExpr      go to state 61
    vstructExpr     go to state 62
    primary_exp     go to state 63
    int_expr        go to state 64
    stringls        go to state 65
    if_exp          go to state 66
    chain_exp       go to state 67
    lambda_exp      go to state 68
    postfix_exp     go to state 69
    tcall_exp       go to state 70
    vcall_exp       go to state 71
    dot_name_exp    go to state 72
    dot_index_exp   go to state 73
    unary_exp       go to state 74
    unary_op        go to state 75
    binary_exp      go to state 76
    mul_binary_exp  go to state 77
    add_binary_exp  go to state 78
    cmp_binary_exp  go to state 79
    eq_binary_exp   go to state 80
    and_binary_exp  go to state 81
    xor_binary_exp  go to state 82
    or_binary_exp   go to state 83


State 167

   72 vtupleExpr: "(" expr_cl2 ")" •

    $default  reduce using rule 72 (vtupleExpr)


State 168

  187 destructured_lpattern: "(" • lpattern_field_cl ")"

    "<val_id>"  shift, and go to state 13

    vid                go to state 169
    lpattern_field     go to state 252
    lpattern_field_cl  go to state 253


State 169

  183 lpattern_field: vid • typespec
  184               | vid •

    "<TypeId>"  shift, and go to state 11
    "Fn"        shift, and go to state 196
    "("         shift, and go to state 230

    $default  reduce using rule 184 (lpattern_field)

    tid               go to state 198
    mod_prefix        go to state 232
    typespec          go to state 254
    primary_typespec  go to state 202
    paren_typespec    go to state 203
    tuple_typespec    go to state 204
    mod_prefix_tid    go to state 205
    fn_typespec       go to state 206
    postfix_typespec  go to state 207
    tcall_typespec    go to state 208
    unary_typespec    go to state 209


State 170

  188 lpattern: lpattern_field •

    $default  reduce using rule 188 (lpattern)


State 171

  189 lpattern: destructured_lpattern •

    $default  reduce using rule 189 (lpattern)


State 172

   15 const_stmt: "const" lpattern • "=" expr

    "="  shift, and go to state 255


State 173

   16 val_stmt: "val" lpattern • "=" expr

    "="  shift, and go to state 256


State 174

   17 var_stmt: "var" lpattern • "=" expr

    "="  shift, and go to state 257


State 175

   18 set_stmt: "set" expr • "=" expr

    "="  shift, and go to state 258


State 176

   19 discard_stmt: "discard" expr •

    $default  reduce using rule 19 (discard_stmt)


State 177

   92 chain_prefix: chain_prefix_stmt ";" •

    $default  reduce using rule 92 (chain_prefix)


State 178

  179 struct_exp_field: vid "=" • expr

    "<val_id>"               shift, and go to state 13
    "<TypeId>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "lambda"                 shift, and go to state 40
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    tid             go to state 53
    vid             go to state 54
    floatl          go to state 55
    mod_prefix      go to state 56
    expr            go to state 259
    bracketed_exp   go to state 58
    unit_exp        go to state 59
    paren_exp       go to state 60
    vtupleExpr      go to state 61
    vstructExpr     go to state 62
    primary_exp     go to state 63
    int_expr        go to state 64
    stringls        go to state 65
    if_exp          go to state 66
    chain_exp       go to state 67
    lambda_exp      go to state 68
    postfix_exp     go to state 69
    tcall_exp       go to state 70
    vcall_exp       go to state 71
    dot_name_exp    go to state 72
    dot_index_exp   go to state 73
    unary_exp       go to state 74
    unary_op        go to state 75
    binary_exp      go to state 76
    mul_binary_exp  go to state 77
    add_binary_exp  go to state 78
    cmp_binary_exp  go to state 79
    eq_binary_exp   go to state 80
    and_binary_exp  go to state 81
    xor_binary_exp  go to state 82
    or_binary_exp   go to state 83


State 179

   89 chain_exp: "{" expr "}" •

    $default  reduce using rule 89 (chain_exp)


State 180

   90 chain_exp: "{" chain_prefix "}" •

    $default  reduce using rule 90 (chain_exp)


State 181

   93 chain_prefix: chain_prefix chain_prefix_stmt • ";"

    ";"  shift, and go to state 260


State 182

   91 chain_exp: "{" chain_prefix expr • "}"

    "}"  shift, and go to state 261


State 183

  201 struct_exp_field_cl: struct_exp_field_cl "," • struct_exp_field

    "<val_id>"  shift, and go to state 13

    vid               go to state 262
    struct_exp_field  go to state 263


State 184

   73 vstructExpr: "{" struct_exp_field_cl "}" •

    $default  reduce using rule 73 (vstructExpr)


State 185

   54 mod_prefix: mod_prefix vid ":" •

    $default  reduce using rule 54 (mod_prefix)


State 186

  103 dot_name_exp: postfix_exp "." "<val_id>" •

    $default  reduce using rule 103 (dot_name_exp)


State 187

  104 dot_name_exp: postfix_exp "." "<TypeId>" • "(" expr_cl0 ")"

    "("  shift, and go to state 264


State 188

  107 dot_index_exp: postfix_exp "." bracketed_exp •

    $default  reduce using rule 107 (dot_index_exp)


State 189

  106 dot_index_exp: postfix_exp "." int_expr •

    $default  reduce using rule 106 (dot_index_exp)


State 190

  175 varg: "out" • expr

    "<val_id>"               shift, and go to state 13
    "<TypeId>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "lambda"                 shift, and go to state 40
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    tid             go to state 53
    vid             go to state 54
    floatl          go to state 55
    mod_prefix      go to state 56
    expr            go to state 265
    bracketed_exp   go to state 58
    unit_exp        go to state 59
    paren_exp       go to state 60
    vtupleExpr      go to state 61
    vstructExpr     go to state 62
    primary_exp     go to state 63
    int_expr        go to state 64
    stringls        go to state 65
    if_exp          go to state 66
    chain_exp       go to state 67
    lambda_exp      go to state 68
    postfix_exp     go to state 69
    tcall_exp       go to state 70
    vcall_exp       go to state 71
    dot_name_exp    go to state 72
    dot_index_exp   go to state 73
    unary_exp       go to state 74
    unary_op        go to state 75
    binary_exp      go to state 76
    mul_binary_exp  go to state 77
    add_binary_exp  go to state 78
    cmp_binary_exp  go to state 79
    eq_binary_exp   go to state 80
    and_binary_exp  go to state 81
    xor_binary_exp  go to state 82
    or_binary_exp   go to state 83


State 191

  176 varg: "inout" • expr

    "<val_id>"               shift, and go to state 13
    "<TypeId>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "lambda"                 shift, and go to state 40
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    tid             go to state 53
    vid             go to state 54
    floatl          go to state 55
    mod_prefix      go to state 56
    expr            go to state 266
    bracketed_exp   go to state 58
    unit_exp        go to state 59
    paren_exp       go to state 60
    vtupleExpr      go to state 61
    vstructExpr     go to state 62
    primary_exp     go to state 63
    int_expr        go to state 64
    stringls        go to state 65
    if_exp          go to state 66
    chain_exp       go to state 67
    lambda_exp      go to state 68
    postfix_exp     go to state 69
    tcall_exp       go to state 70
    vcall_exp       go to state 71
    dot_name_exp    go to state 72
    dot_index_exp   go to state 73
    unary_exp       go to state 74
    unary_op        go to state 75
    binary_exp      go to state 76
    mul_binary_exp  go to state 77
    add_binary_exp  go to state 78
    cmp_binary_exp  go to state 79
    eq_binary_exp   go to state 80
    and_binary_exp  go to state 81
    xor_binary_exp  go to state 82
    or_binary_exp   go to state 83


State 192

  101 vcall_exp: postfix_exp "(" ")" •

    $default  reduce using rule 101 (vcall_exp)


State 193

  174 varg: expr •

    $default  reduce using rule 174 (varg)


State 194

  177 varg_cl: varg •

    $default  reduce using rule 177 (varg_cl)


State 195

  102 vcall_exp: postfix_exp "(" varg_cl • ")"
  178 varg_cl: varg_cl • "," varg

    ","  shift, and go to state 267
    ")"  shift, and go to state 268


State 196

  162 fn_typespec: "Fn" • vpattern primary_typespec

    "("  shift, and go to state 93

    vpattern  go to state 269


State 197

   68 unit_exp: "(" • ")"
   70 paren_exp: "(" • long_exp ")"
   71 vtupleExpr: "(" • expr "," ")"
   72           | "(" • expr_cl2 ")"
  158 paren_typespec: "(" • typespec ")"
  159 tuple_typespec: "(" • typespec "," ")"
  160               | "(" • typespec_cl2 ")"

    "<val_id>"               shift, and go to state 13
    "<TypeId>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "lambda"                 shift, and go to state 40
    "Fn"                     shift, and go to state 196
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 197
    ")"                      shift, and go to state 95
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    tid               go to state 198
    vid               go to state 54
    floatl            go to state 55
    mod_prefix        go to state 199
    expr              go to state 96
    long_exp          go to state 97
    expr_cl2          go to state 98
    bracketed_exp     go to state 58
    unit_exp          go to state 59
    paren_exp         go to state 60
    vtupleExpr        go to state 61
    vstructExpr       go to state 62
    primary_exp       go to state 63
    int_expr          go to state 64
    stringls          go to state 65
    if_exp            go to state 66
    chain_exp         go to state 67
    lambda_exp        go to state 68
    postfix_exp       go to state 69
    tcall_exp         go to state 70
    vcall_exp         go to state 71
    dot_name_exp      go to state 72
    dot_index_exp     go to state 73
    unary_exp         go to state 74
    unary_op          go to state 75
    binary_exp        go to state 76
    mul_binary_exp    go to state 77
    add_binary_exp    go to state 78
    cmp_binary_exp    go to state 79
    eq_binary_exp     go to state 80
    and_binary_exp    go to state 81
    xor_binary_exp    go to state 82
    or_binary_exp     go to state 83
    typespec          go to state 270
    typespec_cl2      go to state 271
    primary_typespec  go to state 202
    paren_typespec    go to state 203
    tuple_typespec    go to state 204
    mod_prefix_tid    go to state 205
    fn_typespec       go to state 206
    postfix_typespec  go to state 207
    tcall_typespec    go to state 208
    unary_typespec    go to state 209


State 198

   53 mod_prefix: tid • ":"
  153 primary_typespec: tid •

    ":"  shift, and go to state 116

    $default  reduce using rule 153 (primary_typespec)


State 199

   54 mod_prefix: mod_prefix • vid ":"
  105 dot_name_exp: mod_prefix • "<val_id>"
  161 mod_prefix_tid: mod_prefix • tid

    "<val_id>"  shift, and go to state 117
    "<TypeId>"  shift, and go to state 11

    tid  go to state 272
    vid  go to state 118


State 200

  171 targ: expr •

    $default  reduce using rule 171 (targ)


State 201

  170 targ: typespec •

    $default  reduce using rule 170 (targ)


State 202

  163 postfix_typespec: primary_typespec •

    $default  reduce using rule 163 (postfix_typespec)


State 203

  154 primary_typespec: paren_typespec •

    $default  reduce using rule 154 (primary_typespec)


State 204

  155 primary_typespec: tuple_typespec •

    $default  reduce using rule 155 (primary_typespec)


State 205

  156 primary_typespec: mod_prefix_tid •

    $default  reduce using rule 156 (primary_typespec)


State 206

  157 primary_typespec: fn_typespec •

    $default  reduce using rule 157 (primary_typespec)


State 207

  165 tcall_typespec: postfix_typespec • "[" targ_cl "]"
  166 unary_typespec: postfix_typespec •

    "["  shift, and go to state 273

    $default  reduce using rule 166 (unary_typespec)


State 208

  164 postfix_typespec: tcall_typespec •

    $default  reduce using rule 164 (postfix_typespec)


State 209

  145 typespec: unary_typespec •

    $default  reduce using rule 145 (typespec)


State 210

  172 targ_cl: targ •

    $default  reduce using rule 172 (targ_cl)


State 211

  100 tcall_exp: postfix_exp "[" targ_cl • "]"
  173 targ_cl: targ_cl • "," targ

    ","  shift, and go to state 274
    "]"  shift, and go to state 275


State 212

  120 mul_binary_exp: mul_binary_exp mul_binary_op unary_exp •

    $default  reduce using rule 120 (mul_binary_exp)


State 213

  120 mul_binary_exp: mul_binary_exp • mul_binary_op unary_exp
  124 add_binary_exp: add_binary_exp add_binary_op mul_binary_exp •

    "*"  shift, and go to state 125
    "/"  shift, and go to state 126
    "%"  shift, and go to state 127

    $default  reduce using rule 124 (add_binary_exp)

    mul_binary_op  go to state 128


State 214

  124 add_binary_exp: add_binary_exp • add_binary_op mul_binary_exp
  130 cmp_binary_exp: cmp_binary_exp cmp_binary_op add_binary_exp •

    "+"  shift, and go to state 129
    "-"  shift, and go to state 130

    $default  reduce using rule 130 (cmp_binary_exp)

    add_binary_op  go to state 131


State 215

  130 cmp_binary_exp: cmp_binary_exp • cmp_binary_op add_binary_exp
  134 eq_binary_exp: eq_binary_exp eq_binary_op cmp_binary_exp •

    "<"   shift, and go to state 132
    "<="  shift, and go to state 133
    ">"   shift, and go to state 134
    ">="  shift, and go to state 135

    $default  reduce using rule 134 (eq_binary_exp)

    cmp_binary_op  go to state 136


State 216

  134 eq_binary_exp: eq_binary_exp • eq_binary_op cmp_binary_exp
  136 and_binary_exp: and_binary_exp "and" eq_binary_exp •

    "=="  shift, and go to state 137
    "!="  shift, and go to state 138

    $default  reduce using rule 136 (and_binary_exp)

    eq_binary_op  go to state 139


State 217

  136 and_binary_exp: and_binary_exp • "and" eq_binary_exp
  138 xor_binary_exp: xor_binary_exp "xor" and_binary_exp •

    "and"  shift, and go to state 140

    $default  reduce using rule 138 (xor_binary_exp)


State 218

  138 xor_binary_exp: xor_binary_exp • "xor" and_binary_exp
  140 or_binary_exp: or_binary_exp "or" xor_binary_exp •

    "xor"  shift, and go to state 141

    $default  reduce using rule 140 (or_binary_exp)


State 219

   44 using_stmt: "using" vid "." "*" •

    $default  reduce using rule 44 (using_stmt)


State 220

   45 using_stmt: "using" vid "." vid • "*"

    "*"  shift, and go to state 276


State 221

  186 tpattern_field: tid • typespec

    "<TypeId>"  shift, and go to state 11
    "Fn"        shift, and go to state 196
    "("         shift, and go to state 230

    tid               go to state 198
    mod_prefix        go to state 232
    typespec          go to state 277
    primary_typespec  go to state 202
    paren_typespec    go to state 203
    tuple_typespec    go to state 204
    mod_prefix_tid    go to state 205
    fn_typespec       go to state 206
    postfix_typespec  go to state 207
    tcall_typespec    go to state 208
    unary_typespec    go to state 209


State 222

  185 tpattern_field: vid • typespec

    "<TypeId>"  shift, and go to state 11
    "Fn"        shift, and go to state 196
    "("         shift, and go to state 230

    tid               go to state 198
    mod_prefix        go to state 232
    typespec          go to state 278
    primary_typespec  go to state 202
    paren_typespec    go to state 203
    tuple_typespec    go to state 204
    mod_prefix_tid    go to state 205
    fn_typespec       go to state 206
    postfix_typespec  go to state 207
    tcall_typespec    go to state 208
    unary_typespec    go to state 209


State 223

  198 tpattern_field_cl: tpattern_field •

    $default  reduce using rule 198 (tpattern_field_cl)


State 224

  192 tpattern: "[" tpattern_field_cl • "]"
  199 tpattern_field_cl: tpattern_field_cl • "," tpattern_field

    ","  shift, and go to state 279
    "]"  shift, and go to state 280


State 225

  193 tpattern: "!" "[" • tpattern_field_cl "]"

    "<val_id>"  shift, and go to state 13
    "<TypeId>"  shift, and go to state 11

    tid                go to state 221
    vid                go to state 222
    tpattern_field     go to state 223
    tpattern_field_cl  go to state 281


State 226

   28 fn_stmt: "fn" vid vpattern "->" • typespec "=" bracketed_exp

    "<TypeId>"  shift, and go to state 11
    "Fn"        shift, and go to state 196
    "("         shift, and go to state 230

    tid               go to state 198
    mod_prefix        go to state 232
    typespec          go to state 282
    primary_typespec  go to state 202
    paren_typespec    go to state 203
    tuple_typespec    go to state 204
    mod_prefix_tid    go to state 205
    fn_typespec       go to state 206
    postfix_typespec  go to state 207
    tcall_typespec    go to state 208
    unary_typespec    go to state 209


State 227

   30 fn_stmt: "fn" vid vpattern "=" • bracketed_exp

    "("  shift, and go to state 47
    "{"  shift, and go to state 48

    bracketed_exp  go to state 283
    unit_exp       go to state 59
    paren_exp      go to state 60
    vtupleExpr     go to state 61
    vstructExpr    go to state 62
    chain_exp      go to state 67


State 228

   29 fn_stmt: "fn" vid tpattern_seq vpattern • "->" typespec "=" bracketed_exp
   31        | "fn" vid tpattern_seq vpattern • "=" bracketed_exp

    "->"  shift, and go to state 284
    "="   shift, and go to state 285


State 229

  203 tpattern_seq: tpattern_seq tpattern •

    $default  reduce using rule 203 (tpattern_seq)


State 230

  158 paren_typespec: "(" • typespec ")"
  159 tuple_typespec: "(" • typespec "," ")"
  160               | "(" • typespec_cl2 ")"

    "<TypeId>"  shift, and go to state 11
    "Fn"        shift, and go to state 196
    "("         shift, and go to state 230

    tid               go to state 198
    mod_prefix        go to state 232
    typespec          go to state 270
    typespec_cl2      go to state 271
    primary_typespec  go to state 202
    paren_typespec    go to state 203
    tuple_typespec    go to state 204
    mod_prefix_tid    go to state 205
    fn_typespec       go to state 206
    postfix_typespec  go to state 207
    tcall_typespec    go to state 208
    unary_typespec    go to state 209


State 231

  169 struct_typespec: "{" • struct_typespec_field_cl "}"

    "<val_id>"  shift, and go to state 13

    vid                       go to state 286
    struct_typespec_field     go to state 287
    struct_typespec_field_cl  go to state 288


State 232

   54 mod_prefix: mod_prefix • vid ":"
  161 mod_prefix_tid: mod_prefix • tid

    "<val_id>"  shift, and go to state 13
    "<TypeId>"  shift, and go to state 11

    tid  go to state 272
    vid  go to state 118


State 233

  167 long_typespec: unary_typespec •

    $default  reduce using rule 167 (long_typespec)


State 234

   32 type_stmt: "type" tid "=" long_typespec •

    $default  reduce using rule 32 (type_stmt)


State 235

  168 long_typespec: struct_typespec •

    $default  reduce using rule 168 (long_typespec)


State 236

   36 enum_field_pl: "|" unprefixed_enum_field_pl •
   38 unprefixed_enum_field_pl: unprefixed_enum_field_pl • "|" enum_field

    "|"  shift, and go to state 289

    $default  reduce using rule 36 (enum_field_pl)


State 237

   37 unprefixed_enum_field_pl: enum_field •

    $default  reduce using rule 37 (unprefixed_enum_field_pl)


State 238

   39 enum_field: tid •
   40           | tid • "(" ")"
   41           | tid • "(" typespec_cl1 ")"

    "("  shift, and go to state 290

    $default  reduce using rule 39 (enum_field)


State 239

   33 type_stmt: "type" tid tpattern_seq "=" • long_typespec

    "<TypeId>"  shift, and go to state 11
    "Fn"        shift, and go to state 196
    "("         shift, and go to state 230
    "{"         shift, and go to state 231

    tid               go to state 198
    mod_prefix        go to state 232
    primary_typespec  go to state 202
    paren_typespec    go to state 203
    tuple_typespec    go to state 204
    mod_prefix_tid    go to state 205
    fn_typespec       go to state 206
    postfix_typespec  go to state 207
    tcall_typespec    go to state 208
    unary_typespec    go to state 233
    long_typespec     go to state 291
    struct_typespec   go to state 235


State 240

   35 enum_stmt: "type" tid tpattern_seq enum_field_pl •

    $default  reduce using rule 35 (enum_stmt)


State 241

   42 typeclass_stmt: "typeclass" tid "<" tid • typespec ">" "=" "{" type_query_exp_sl "}"
   43               | "typeclass" tid "<" tid • typespec ">" tpattern_seq "=" "{" type_query_exp_sl "}"

    "<TypeId>"  shift, and go to state 11
    "Fn"        shift, and go to state 196
    "("         shift, and go to state 230

    tid               go to state 198
    mod_prefix        go to state 232
    typespec          go to state 292
    primary_typespec  go to state 202
    paren_typespec    go to state 203
    tuple_typespec    go to state 204
    mod_prefix_tid    go to state 205
    fn_typespec       go to state 206
    postfix_typespec  go to state 207
    tcall_typespec    go to state 208
    unary_typespec    go to state 209


State 242

   87 if_exp: "if" bracketed_exp "then" bracketed_exp •
   88       | "if" bracketed_exp "then" bracketed_exp • "else" primary_exp

    "else"  shift, and go to state 293

    $default  reduce using rule 87 (if_exp)


State 243

  181 vpattern_field: "out" vid • typespec

    "<TypeId>"  shift, and go to state 11
    "Fn"        shift, and go to state 196
    "("         shift, and go to state 230

    tid               go to state 198
    mod_prefix        go to state 232
    typespec          go to state 294
    primary_typespec  go to state 202
    paren_typespec    go to state 203
    tuple_typespec    go to state 204
    mod_prefix_tid    go to state 205
    fn_typespec       go to state 206
    postfix_typespec  go to state 207
    tcall_typespec    go to state 208
    unary_typespec    go to state 209


State 244

  182 vpattern_field: "inout" vid • typespec

    "<TypeId>"  shift, and go to state 11
    "Fn"        shift, and go to state 196
    "("         shift, and go to state 230

    tid               go to state 198
    mod_prefix        go to state 232
    typespec          go to state 295
    primary_typespec  go to state 202
    paren_typespec    go to state 203
    tuple_typespec    go to state 204
    mod_prefix_tid    go to state 205
    fn_typespec       go to state 206
    postfix_typespec  go to state 207
    tcall_typespec    go to state 208
    unary_typespec    go to state 209


State 245

  180 vpattern_field: vid typespec •

    $default  reduce using rule 180 (vpattern_field)


State 246

  195 vpattern_field_cl: vpattern_field_cl "," • vpattern_field

    "<val_id>"  shift, and go to state 13
    "out"       shift, and go to state 157
    "inout"     shift, and go to state 158

    vid             go to state 160
    vpattern_field  go to state 296


State 247

  190 vpattern: "(" vpattern_field_cl ")" •

    $default  reduce using rule 190 (vpattern)


State 248

   94 lambda_exp: "lambda" vpattern "=" bracketed_exp •

    $default  reduce using rule 94 (lambda_exp)


State 249

   71 vtupleExpr: "(" expr "," ")" •

    $default  reduce using rule 71 (vtupleExpr)


State 250

   59 expr_cl2: expr "," expr •

    $default  reduce using rule 59 (expr_cl2)


State 251

   60 expr_cl2: expr_cl2 "," expr •

    $default  reduce using rule 60 (expr_cl2)


State 252

  196 lpattern_field_cl: lpattern_field •

    $default  reduce using rule 196 (lpattern_field_cl)


State 253

  187 destructured_lpattern: "(" lpattern_field_cl • ")"
  197 lpattern_field_cl: lpattern_field_cl • "," lpattern_field

    ","  shift, and go to state 297
    ")"  shift, and go to state 298


State 254

  183 lpattern_field: vid typespec •

    $default  reduce using rule 183 (lpattern_field)


State 255

   15 const_stmt: "const" lpattern "=" • expr

    "<val_id>"               shift, and go to state 13
    "<TypeId>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "lambda"                 shift, and go to state 40
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    tid             go to state 53
    vid             go to state 54
    floatl          go to state 55
    mod_prefix      go to state 56
    expr            go to state 299
    bracketed_exp   go to state 58
    unit_exp        go to state 59
    paren_exp       go to state 60
    vtupleExpr      go to state 61
    vstructExpr     go to state 62
    primary_exp     go to state 63
    int_expr        go to state 64
    stringls        go to state 65
    if_exp          go to state 66
    chain_exp       go to state 67
    lambda_exp      go to state 68
    postfix_exp     go to state 69
    tcall_exp       go to state 70
    vcall_exp       go to state 71
    dot_name_exp    go to state 72
    dot_index_exp   go to state 73
    unary_exp       go to state 74
    unary_op        go to state 75
    binary_exp      go to state 76
    mul_binary_exp  go to state 77
    add_binary_exp  go to state 78
    cmp_binary_exp  go to state 79
    eq_binary_exp   go to state 80
    and_binary_exp  go to state 81
    xor_binary_exp  go to state 82
    or_binary_exp   go to state 83


State 256

   16 val_stmt: "val" lpattern "=" • expr

    "<val_id>"               shift, and go to state 13
    "<TypeId>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "lambda"                 shift, and go to state 40
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    tid             go to state 53
    vid             go to state 54
    floatl          go to state 55
    mod_prefix      go to state 56
    expr            go to state 300
    bracketed_exp   go to state 58
    unit_exp        go to state 59
    paren_exp       go to state 60
    vtupleExpr      go to state 61
    vstructExpr     go to state 62
    primary_exp     go to state 63
    int_expr        go to state 64
    stringls        go to state 65
    if_exp          go to state 66
    chain_exp       go to state 67
    lambda_exp      go to state 68
    postfix_exp     go to state 69
    tcall_exp       go to state 70
    vcall_exp       go to state 71
    dot_name_exp    go to state 72
    dot_index_exp   go to state 73
    unary_exp       go to state 74
    unary_op        go to state 75
    binary_exp      go to state 76
    mul_binary_exp  go to state 77
    add_binary_exp  go to state 78
    cmp_binary_exp  go to state 79
    eq_binary_exp   go to state 80
    and_binary_exp  go to state 81
    xor_binary_exp  go to state 82
    or_binary_exp   go to state 83


State 257

   17 var_stmt: "var" lpattern "=" • expr

    "<val_id>"               shift, and go to state 13
    "<TypeId>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "lambda"                 shift, and go to state 40
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    tid             go to state 53
    vid             go to state 54
    floatl          go to state 55
    mod_prefix      go to state 56
    expr            go to state 301
    bracketed_exp   go to state 58
    unit_exp        go to state 59
    paren_exp       go to state 60
    vtupleExpr      go to state 61
    vstructExpr     go to state 62
    primary_exp     go to state 63
    int_expr        go to state 64
    stringls        go to state 65
    if_exp          go to state 66
    chain_exp       go to state 67
    lambda_exp      go to state 68
    postfix_exp     go to state 69
    tcall_exp       go to state 70
    vcall_exp       go to state 71
    dot_name_exp    go to state 72
    dot_index_exp   go to state 73
    unary_exp       go to state 74
    unary_op        go to state 75
    binary_exp      go to state 76
    mul_binary_exp  go to state 77
    add_binary_exp  go to state 78
    cmp_binary_exp  go to state 79
    eq_binary_exp   go to state 80
    and_binary_exp  go to state 81
    xor_binary_exp  go to state 82
    or_binary_exp   go to state 83


State 258

   18 set_stmt: "set" expr "=" • expr

    "<val_id>"               shift, and go to state 13
    "<TypeId>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "lambda"                 shift, and go to state 40
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    tid             go to state 53
    vid             go to state 54
    floatl          go to state 55
    mod_prefix      go to state 56
    expr            go to state 302
    bracketed_exp   go to state 58
    unit_exp        go to state 59
    paren_exp       go to state 60
    vtupleExpr      go to state 61
    vstructExpr     go to state 62
    primary_exp     go to state 63
    int_expr        go to state 64
    stringls        go to state 65
    if_exp          go to state 66
    chain_exp       go to state 67
    lambda_exp      go to state 68
    postfix_exp     go to state 69
    tcall_exp       go to state 70
    vcall_exp       go to state 71
    dot_name_exp    go to state 72
    dot_index_exp   go to state 73
    unary_exp       go to state 74
    unary_op        go to state 75
    binary_exp      go to state 76
    mul_binary_exp  go to state 77
    add_binary_exp  go to state 78
    cmp_binary_exp  go to state 79
    eq_binary_exp   go to state 80
    and_binary_exp  go to state 81
    xor_binary_exp  go to state 82
    or_binary_exp   go to state 83


State 259

  179 struct_exp_field: vid "=" expr •

    $default  reduce using rule 179 (struct_exp_field)


State 260

   93 chain_prefix: chain_prefix chain_prefix_stmt ";" •

    $default  reduce using rule 93 (chain_prefix)


State 261

   91 chain_exp: "{" chain_prefix expr "}" •

    $default  reduce using rule 91 (chain_exp)


State 262

  179 struct_exp_field: vid • "=" expr

    "="  shift, and go to state 178


State 263

  201 struct_exp_field_cl: struct_exp_field_cl "," struct_exp_field •

    $default  reduce using rule 201 (struct_exp_field_cl)


State 264

  104 dot_name_exp: postfix_exp "." "<TypeId>" "(" • expr_cl0 ")"

    $default  reduce using rule 57 (expr_cl0)

    expr_cl0  go to state 303


State 265

  175 varg: "out" expr •

    $default  reduce using rule 175 (varg)


State 266

  176 varg: "inout" expr •

    $default  reduce using rule 176 (varg)


State 267

  178 varg_cl: varg_cl "," • varg

    "<val_id>"               shift, and go to state 13
    "<TypeId>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "lambda"                 shift, and go to state 40
    "not"                    shift, and go to state 41
    "out"                    shift, and go to state 190
    "inout"                  shift, and go to state 191
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    tid             go to state 53
    vid             go to state 54
    floatl          go to state 55
    mod_prefix      go to state 56
    expr            go to state 193
    bracketed_exp   go to state 58
    unit_exp        go to state 59
    paren_exp       go to state 60
    vtupleExpr      go to state 61
    vstructExpr     go to state 62
    primary_exp     go to state 63
    int_expr        go to state 64
    stringls        go to state 65
    if_exp          go to state 66
    chain_exp       go to state 67
    lambda_exp      go to state 68
    postfix_exp     go to state 69
    tcall_exp       go to state 70
    vcall_exp       go to state 71
    dot_name_exp    go to state 72
    dot_index_exp   go to state 73
    unary_exp       go to state 74
    unary_op        go to state 75
    binary_exp      go to state 76
    mul_binary_exp  go to state 77
    add_binary_exp  go to state 78
    cmp_binary_exp  go to state 79
    eq_binary_exp   go to state 80
    and_binary_exp  go to state 81
    xor_binary_exp  go to state 82
    or_binary_exp   go to state 83
    varg            go to state 304


State 268

  102 vcall_exp: postfix_exp "(" varg_cl ")" •

    $default  reduce using rule 102 (vcall_exp)


State 269

  162 fn_typespec: "Fn" vpattern • primary_typespec

    "<TypeId>"  shift, and go to state 11
    "Fn"        shift, and go to state 196
    "("         shift, and go to state 230

    tid               go to state 198
    mod_prefix        go to state 232
    primary_typespec  go to state 305
    paren_typespec    go to state 203
    tuple_typespec    go to state 204
    mod_prefix_tid    go to state 205
    fn_typespec       go to state 206


State 270

  148 typespec_cl2: typespec • "," typespec
  158 paren_typespec: "(" typespec • ")"
  159 tuple_typespec: "(" typespec • "," ")"

    ","  shift, and go to state 306
    ")"  shift, and go to state 307


State 271

  149 typespec_cl2: typespec_cl2 • "," typespec
  160 tuple_typespec: "(" typespec_cl2 • ")"

    ","  shift, and go to state 308
    ")"  shift, and go to state 309


State 272

  161 mod_prefix_tid: mod_prefix tid •

    $default  reduce using rule 161 (mod_prefix_tid)


State 273

  165 tcall_typespec: postfix_typespec "[" • targ_cl "]"

    "<val_id>"               shift, and go to state 13
    "<TypeId>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "lambda"                 shift, and go to state 40
    "Fn"                     shift, and go to state 196
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 197
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    tid               go to state 198
    vid               go to state 54
    floatl            go to state 55
    mod_prefix        go to state 199
    expr              go to state 200
    bracketed_exp     go to state 58
    unit_exp          go to state 59
    paren_exp         go to state 60
    vtupleExpr        go to state 61
    vstructExpr       go to state 62
    primary_exp       go to state 63
    int_expr          go to state 64
    stringls          go to state 65
    if_exp            go to state 66
    chain_exp         go to state 67
    lambda_exp        go to state 68
    postfix_exp       go to state 69
    tcall_exp         go to state 70
    vcall_exp         go to state 71
    dot_name_exp      go to state 72
    dot_index_exp     go to state 73
    unary_exp         go to state 74
    unary_op          go to state 75
    binary_exp        go to state 76
    mul_binary_exp    go to state 77
    add_binary_exp    go to state 78
    cmp_binary_exp    go to state 79
    eq_binary_exp     go to state 80
    and_binary_exp    go to state 81
    xor_binary_exp    go to state 82
    or_binary_exp     go to state 83
    typespec          go to state 201
    primary_typespec  go to state 202
    paren_typespec    go to state 203
    tuple_typespec    go to state 204
    mod_prefix_tid    go to state 205
    fn_typespec       go to state 206
    postfix_typespec  go to state 207
    tcall_typespec    go to state 208
    unary_typespec    go to state 209
    targ              go to state 210
    targ_cl           go to state 310


State 274

  173 targ_cl: targ_cl "," • targ

    "<val_id>"               shift, and go to state 13
    "<TypeId>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "lambda"                 shift, and go to state 40
    "Fn"                     shift, and go to state 196
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 197
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    tid               go to state 198
    vid               go to state 54
    floatl            go to state 55
    mod_prefix        go to state 199
    expr              go to state 200
    bracketed_exp     go to state 58
    unit_exp          go to state 59
    paren_exp         go to state 60
    vtupleExpr        go to state 61
    vstructExpr       go to state 62
    primary_exp       go to state 63
    int_expr          go to state 64
    stringls          go to state 65
    if_exp            go to state 66
    chain_exp         go to state 67
    lambda_exp        go to state 68
    postfix_exp       go to state 69
    tcall_exp         go to state 70
    vcall_exp         go to state 71
    dot_name_exp      go to state 72
    dot_index_exp     go to state 73
    unary_exp         go to state 74
    unary_op          go to state 75
    binary_exp        go to state 76
    mul_binary_exp    go to state 77
    add_binary_exp    go to state 78
    cmp_binary_exp    go to state 79
    eq_binary_exp     go to state 80
    and_binary_exp    go to state 81
    xor_binary_exp    go to state 82
    or_binary_exp     go to state 83
    typespec          go to state 201
    primary_typespec  go to state 202
    paren_typespec    go to state 203
    tuple_typespec    go to state 204
    mod_prefix_tid    go to state 205
    fn_typespec       go to state 206
    postfix_typespec  go to state 207
    tcall_typespec    go to state 208
    unary_typespec    go to state 209
    targ              go to state 311


State 275

  100 tcall_exp: postfix_exp "[" targ_cl "]" •

    $default  reduce using rule 100 (tcall_exp)


State 276

   45 using_stmt: "using" vid "." vid "*" •

    $default  reduce using rule 45 (using_stmt)


State 277

  186 tpattern_field: tid typespec •

    $default  reduce using rule 186 (tpattern_field)


State 278

  185 tpattern_field: vid typespec •

    $default  reduce using rule 185 (tpattern_field)


State 279

  199 tpattern_field_cl: tpattern_field_cl "," • tpattern_field

    "<val_id>"  shift, and go to state 13
    "<TypeId>"  shift, and go to state 11

    tid             go to state 221
    vid             go to state 222
    tpattern_field  go to state 312


State 280

  192 tpattern: "[" tpattern_field_cl "]" •

    $default  reduce using rule 192 (tpattern)


State 281

  193 tpattern: "!" "[" tpattern_field_cl • "]"
  199 tpattern_field_cl: tpattern_field_cl • "," tpattern_field

    ","  shift, and go to state 279
    "]"  shift, and go to state 313


State 282

   28 fn_stmt: "fn" vid vpattern "->" typespec • "=" bracketed_exp

    "="  shift, and go to state 314


State 283

   30 fn_stmt: "fn" vid vpattern "=" bracketed_exp •

    $default  reduce using rule 30 (fn_stmt)


State 284

   29 fn_stmt: "fn" vid tpattern_seq vpattern "->" • typespec "=" bracketed_exp

    "<TypeId>"  shift, and go to state 11
    "Fn"        shift, and go to state 196
    "("         shift, and go to state 230

    tid               go to state 198
    mod_prefix        go to state 232
    typespec          go to state 315
    primary_typespec  go to state 202
    paren_typespec    go to state 203
    tuple_typespec    go to state 204
    mod_prefix_tid    go to state 205
    fn_typespec       go to state 206
    postfix_typespec  go to state 207
    tcall_typespec    go to state 208
    unary_typespec    go to state 209


State 285

   31 fn_stmt: "fn" vid tpattern_seq vpattern "=" • bracketed_exp

    "("  shift, and go to state 47
    "{"  shift, and go to state 48

    bracketed_exp  go to state 316
    unit_exp       go to state 59
    paren_exp      go to state 60
    vtupleExpr     go to state 61
    vstructExpr    go to state 62
    chain_exp      go to state 67


State 286

  150 struct_typespec_field: vid • typespec

    "<TypeId>"  shift, and go to state 11
    "Fn"        shift, and go to state 196
    "("         shift, and go to state 230

    tid               go to state 198
    mod_prefix        go to state 232
    typespec          go to state 317
    primary_typespec  go to state 202
    paren_typespec    go to state 203
    tuple_typespec    go to state 204
    mod_prefix_tid    go to state 205
    fn_typespec       go to state 206
    postfix_typespec  go to state 207
    tcall_typespec    go to state 208
    unary_typespec    go to state 209


State 287

  151 struct_typespec_field_cl: struct_typespec_field •

    $default  reduce using rule 151 (struct_typespec_field_cl)


State 288

  152 struct_typespec_field_cl: struct_typespec_field_cl • "," struct_typespec_field
  169 struct_typespec: "{" struct_typespec_field_cl • "}"

    ","  shift, and go to state 318
    "}"  shift, and go to state 319


State 289

   38 unprefixed_enum_field_pl: unprefixed_enum_field_pl "|" • enum_field

    "<TypeId>"  shift, and go to state 11

    enum_field  go to state 320
    tid         go to state 238


State 290

   40 enum_field: tid "(" • ")"
   41           | tid "(" • typespec_cl1 ")"

    "<TypeId>"  shift, and go to state 11
    "Fn"        shift, and go to state 196
    "("         shift, and go to state 230
    ")"         shift, and go to state 321

    tid               go to state 198
    mod_prefix        go to state 232
    typespec          go to state 322
    typespec_cl1      go to state 323
    primary_typespec  go to state 202
    paren_typespec    go to state 203
    tuple_typespec    go to state 204
    mod_prefix_tid    go to state 205
    fn_typespec       go to state 206
    postfix_typespec  go to state 207
    tcall_typespec    go to state 208
    unary_typespec    go to state 209


State 291

   33 type_stmt: "type" tid tpattern_seq "=" long_typespec •

    $default  reduce using rule 33 (type_stmt)


State 292

   42 typeclass_stmt: "typeclass" tid "<" tid typespec • ">" "=" "{" type_query_exp_sl "}"
   43               | "typeclass" tid "<" tid typespec • ">" tpattern_seq "=" "{" type_query_exp_sl "}"

    ">"  shift, and go to state 324


State 293

   88 if_exp: "if" bracketed_exp "then" bracketed_exp "else" • primary_exp

    "<val_id>"               shift, and go to state 13
    "if"                     shift, and go to state 39
    "lambda"                 shift, and go to state 40
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48

    vid            go to state 54
    floatl         go to state 55
    bracketed_exp  go to state 58
    unit_exp       go to state 59
    paren_exp      go to state 60
    vtupleExpr     go to state 61
    vstructExpr    go to state 62
    primary_exp    go to state 325
    int_expr       go to state 64
    stringls       go to state 65
    if_exp         go to state 66
    chain_exp      go to state 67
    lambda_exp     go to state 68


State 294

  181 vpattern_field: "out" vid typespec •

    $default  reduce using rule 181 (vpattern_field)


State 295

  182 vpattern_field: "inout" vid typespec •

    $default  reduce using rule 182 (vpattern_field)


State 296

  195 vpattern_field_cl: vpattern_field_cl "," vpattern_field •

    $default  reduce using rule 195 (vpattern_field_cl)


State 297

  197 lpattern_field_cl: lpattern_field_cl "," • lpattern_field

    "<val_id>"  shift, and go to state 13

    vid             go to state 169
    lpattern_field  go to state 326


State 298

  187 destructured_lpattern: "(" lpattern_field_cl ")" •

    $default  reduce using rule 187 (destructured_lpattern)


State 299

   15 const_stmt: "const" lpattern "=" expr •

    $default  reduce using rule 15 (const_stmt)


State 300

   16 val_stmt: "val" lpattern "=" expr •

    $default  reduce using rule 16 (val_stmt)


State 301

   17 var_stmt: "var" lpattern "=" expr •

    $default  reduce using rule 17 (var_stmt)


State 302

   18 set_stmt: "set" expr "=" expr •

    $default  reduce using rule 18 (set_stmt)


State 303

   58 expr_cl0: expr_cl0 • "," expr
  104 dot_name_exp: postfix_exp "." "<TypeId>" "(" expr_cl0 • ")"

    ","  shift, and go to state 327
    ")"  shift, and go to state 328


State 304

  178 varg_cl: varg_cl "," varg •

    $default  reduce using rule 178 (varg_cl)


State 305

  162 fn_typespec: "Fn" vpattern primary_typespec •

    $default  reduce using rule 162 (fn_typespec)


State 306

  148 typespec_cl2: typespec "," • typespec
  159 tuple_typespec: "(" typespec "," • ")"

    "<TypeId>"  shift, and go to state 11
    "Fn"        shift, and go to state 196
    "("         shift, and go to state 230
    ")"         shift, and go to state 329

    tid               go to state 198
    mod_prefix        go to state 232
    typespec          go to state 330
    primary_typespec  go to state 202
    paren_typespec    go to state 203
    tuple_typespec    go to state 204
    mod_prefix_tid    go to state 205
    fn_typespec       go to state 206
    postfix_typespec  go to state 207
    tcall_typespec    go to state 208
    unary_typespec    go to state 209


State 307

  158 paren_typespec: "(" typespec ")" •

    $default  reduce using rule 158 (paren_typespec)


State 308

  149 typespec_cl2: typespec_cl2 "," • typespec

    "<TypeId>"  shift, and go to state 11
    "Fn"        shift, and go to state 196
    "("         shift, and go to state 230

    tid               go to state 198
    mod_prefix        go to state 232
    typespec          go to state 331
    primary_typespec  go to state 202
    paren_typespec    go to state 203
    tuple_typespec    go to state 204
    mod_prefix_tid    go to state 205
    fn_typespec       go to state 206
    postfix_typespec  go to state 207
    tcall_typespec    go to state 208
    unary_typespec    go to state 209


State 309

  160 tuple_typespec: "(" typespec_cl2 ")" •

    $default  reduce using rule 160 (tuple_typespec)


State 310

  165 tcall_typespec: postfix_typespec "[" targ_cl • "]"
  173 targ_cl: targ_cl • "," targ

    ","  shift, and go to state 274
    "]"  shift, and go to state 332


State 311

  173 targ_cl: targ_cl "," targ •

    $default  reduce using rule 173 (targ_cl)


State 312

  199 tpattern_field_cl: tpattern_field_cl "," tpattern_field •

    $default  reduce using rule 199 (tpattern_field_cl)


State 313

  193 tpattern: "!" "[" tpattern_field_cl "]" •

    $default  reduce using rule 193 (tpattern)


State 314

   28 fn_stmt: "fn" vid vpattern "->" typespec "=" • bracketed_exp

    "("  shift, and go to state 47
    "{"  shift, and go to state 48

    bracketed_exp  go to state 333
    unit_exp       go to state 59
    paren_exp      go to state 60
    vtupleExpr     go to state 61
    vstructExpr    go to state 62
    chain_exp      go to state 67


State 315

   29 fn_stmt: "fn" vid tpattern_seq vpattern "->" typespec • "=" bracketed_exp

    "="  shift, and go to state 334


State 316

   31 fn_stmt: "fn" vid tpattern_seq vpattern "=" bracketed_exp •

    $default  reduce using rule 31 (fn_stmt)


State 317

  150 struct_typespec_field: vid typespec •

    $default  reduce using rule 150 (struct_typespec_field)


State 318

  152 struct_typespec_field_cl: struct_typespec_field_cl "," • struct_typespec_field

    "<val_id>"  shift, and go to state 13

    vid                    go to state 286
    struct_typespec_field  go to state 335


State 319

  169 struct_typespec: "{" struct_typespec_field_cl "}" •

    $default  reduce using rule 169 (struct_typespec)


State 320

   38 unprefixed_enum_field_pl: unprefixed_enum_field_pl "|" enum_field •

    $default  reduce using rule 38 (unprefixed_enum_field_pl)


State 321

   40 enum_field: tid "(" ")" •

    $default  reduce using rule 40 (enum_field)


State 322

  146 typespec_cl1: typespec •

    $default  reduce using rule 146 (typespec_cl1)


State 323

   41 enum_field: tid "(" typespec_cl1 • ")"
  147 typespec_cl1: typespec_cl1 • "," typespec

    ","  shift, and go to state 336
    ")"  shift, and go to state 337


State 324

   42 typeclass_stmt: "typeclass" tid "<" tid typespec ">" • "=" "{" type_query_exp_sl "}"
   43               | "typeclass" tid "<" tid typespec ">" • tpattern_seq "=" "{" type_query_exp_sl "}"

    "["  shift, and go to state 144
    "="  shift, and go to state 338
    "!"  shift, and go to state 145

    tpattern      go to state 147
    tpattern_seq  go to state 339


State 325

   88 if_exp: "if" bracketed_exp "then" bracketed_exp "else" primary_exp •

    $default  reduce using rule 88 (if_exp)


State 326

  197 lpattern_field_cl: lpattern_field_cl "," lpattern_field •

    $default  reduce using rule 197 (lpattern_field_cl)


State 327

   58 expr_cl0: expr_cl0 "," • expr

    "<val_id>"               shift, and go to state 13
    "<TypeId>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "lambda"                 shift, and go to state 40
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    tid             go to state 53
    vid             go to state 54
    floatl          go to state 55
    mod_prefix      go to state 56
    expr            go to state 340
    bracketed_exp   go to state 58
    unit_exp        go to state 59
    paren_exp       go to state 60
    vtupleExpr      go to state 61
    vstructExpr     go to state 62
    primary_exp     go to state 63
    int_expr        go to state 64
    stringls        go to state 65
    if_exp          go to state 66
    chain_exp       go to state 67
    lambda_exp      go to state 68
    postfix_exp     go to state 69
    tcall_exp       go to state 70
    vcall_exp       go to state 71
    dot_name_exp    go to state 72
    dot_index_exp   go to state 73
    unary_exp       go to state 74
    unary_op        go to state 75
    binary_exp      go to state 76
    mul_binary_exp  go to state 77
    add_binary_exp  go to state 78
    cmp_binary_exp  go to state 79
    eq_binary_exp   go to state 80
    and_binary_exp  go to state 81
    xor_binary_exp  go to state 82
    or_binary_exp   go to state 83


State 328

  104 dot_name_exp: postfix_exp "." "<TypeId>" "(" expr_cl0 ")" •

    $default  reduce using rule 104 (dot_name_exp)


State 329

  159 tuple_typespec: "(" typespec "," ")" •

    $default  reduce using rule 159 (tuple_typespec)


State 330

  148 typespec_cl2: typespec "," typespec •

    $default  reduce using rule 148 (typespec_cl2)


State 331

  149 typespec_cl2: typespec_cl2 "," typespec •

    $default  reduce using rule 149 (typespec_cl2)


State 332

  165 tcall_typespec: postfix_typespec "[" targ_cl "]" •

    $default  reduce using rule 165 (tcall_typespec)


State 333

   28 fn_stmt: "fn" vid vpattern "->" typespec "=" bracketed_exp •

    $default  reduce using rule 28 (fn_stmt)


State 334

   29 fn_stmt: "fn" vid tpattern_seq vpattern "->" typespec "=" • bracketed_exp

    "("  shift, and go to state 47
    "{"  shift, and go to state 48

    bracketed_exp  go to state 341
    unit_exp       go to state 59
    paren_exp      go to state 60
    vtupleExpr     go to state 61
    vstructExpr    go to state 62
    chain_exp      go to state 67


State 335

  152 struct_typespec_field_cl: struct_typespec_field_cl "," struct_typespec_field •

    $default  reduce using rule 152 (struct_typespec_field_cl)


State 336

  147 typespec_cl1: typespec_cl1 "," • typespec

    "<TypeId>"  shift, and go to state 11
    "Fn"        shift, and go to state 196
    "("         shift, and go to state 230

    tid               go to state 198
    mod_prefix        go to state 232
    typespec          go to state 342
    primary_typespec  go to state 202
    paren_typespec    go to state 203
    tuple_typespec    go to state 204
    mod_prefix_tid    go to state 205
    fn_typespec       go to state 206
    postfix_typespec  go to state 207
    tcall_typespec    go to state 208
    unary_typespec    go to state 209


State 337

   41 enum_field: tid "(" typespec_cl1 ")" •

    $default  reduce using rule 41 (enum_field)


State 338

   42 typeclass_stmt: "typeclass" tid "<" tid typespec ">" "=" • "{" type_query_exp_sl "}"

    "{"  shift, and go to state 343


State 339

   43 typeclass_stmt: "typeclass" tid "<" tid typespec ">" tpattern_seq • "=" "{" type_query_exp_sl "}"
  203 tpattern_seq: tpattern_seq • tpattern

    "["  shift, and go to state 144
    "="  shift, and go to state 344
    "!"  shift, and go to state 145

    tpattern  go to state 229


State 340

   58 expr_cl0: expr_cl0 "," expr •

    $default  reduce using rule 58 (expr_cl0)


State 341

   29 fn_stmt: "fn" vid tpattern_seq vpattern "->" typespec "=" bracketed_exp •

    $default  reduce using rule 29 (fn_stmt)


State 342

  147 typespec_cl1: typespec_cl1 "," typespec •

    $default  reduce using rule 147 (typespec_cl1)


State 343

   42 typeclass_stmt: "typeclass" tid "<" tid typespec ">" "=" "{" • type_query_exp_sl "}"

    "<TypeId>"  shift, and go to state 11
    "Fn"        shift, and go to state 196
    "("         shift, and go to state 230

    tid                go to state 198
    mod_prefix         go to state 232
    type_query_exp_sl  go to state 345
    type_query_exp     go to state 346
    typespec           go to state 347
    primary_typespec   go to state 202
    paren_typespec     go to state 203
    tuple_typespec     go to state 204
    mod_prefix_tid     go to state 205
    fn_typespec        go to state 206
    postfix_typespec   go to state 207
    tcall_typespec     go to state 208
    unary_typespec     go to state 209


State 344

   43 typeclass_stmt: "typeclass" tid "<" tid typespec ">" tpattern_seq "=" • "{" type_query_exp_sl "}"

    "{"  shift, and go to state 348


State 345

   42 typeclass_stmt: "typeclass" tid "<" tid typespec ">" "=" "{" type_query_exp_sl • "}"
   62 type_query_exp_sl: type_query_exp_sl • type_query_exp ";"

    "<TypeId>"  shift, and go to state 11
    "Fn"        shift, and go to state 196
    "("         shift, and go to state 230
    "}"         shift, and go to state 349

    tid               go to state 198
    mod_prefix        go to state 232
    type_query_exp    go to state 350
    typespec          go to state 347
    primary_typespec  go to state 202
    paren_typespec    go to state 203
    tuple_typespec    go to state 204
    mod_prefix_tid    go to state 205
    fn_typespec       go to state 206
    postfix_typespec  go to state 207
    tcall_typespec    go to state 208
    unary_typespec    go to state 209


State 346

   61 type_query_exp_sl: type_query_exp • ";"

    ";"  shift, and go to state 351


State 347

  141 type_query_exp: typespec • type_query_op typespec

    "::"  shift, and go to state 352
    ":<"  shift, and go to state 353
    ">:"  shift, and go to state 354

    type_query_op  go to state 355


State 348

   43 typeclass_stmt: "typeclass" tid "<" tid typespec ">" tpattern_seq "=" "{" • type_query_exp_sl "}"

    "<TypeId>"  shift, and go to state 11
    "Fn"        shift, and go to state 196
    "("         shift, and go to state 230

    tid                go to state 198
    mod_prefix         go to state 232
    type_query_exp_sl  go to state 356
    type_query_exp     go to state 346
    typespec           go to state 347
    primary_typespec   go to state 202
    paren_typespec     go to state 203
    tuple_typespec     go to state 204
    mod_prefix_tid     go to state 205
    fn_typespec        go to state 206
    postfix_typespec   go to state 207
    tcall_typespec     go to state 208
    unary_typespec     go to state 209


State 349

   42 typeclass_stmt: "typeclass" tid "<" tid typespec ">" "=" "{" type_query_exp_sl "}" •

    $default  reduce using rule 42 (typeclass_stmt)


State 350

   62 type_query_exp_sl: type_query_exp_sl type_query_exp • ";"

    ";"  shift, and go to state 357


State 351

   61 type_query_exp_sl: type_query_exp ";" •

    $default  reduce using rule 61 (type_query_exp_sl)


State 352

  144 type_query_op: "::" •

    $default  reduce using rule 144 (type_query_op)


State 353

  142 type_query_op: ":<" •

    $default  reduce using rule 142 (type_query_op)


State 354

  143 type_query_op: ">:" •

    $default  reduce using rule 143 (type_query_op)


State 355

  141 type_query_exp: typespec type_query_op • typespec

    "<TypeId>"  shift, and go to state 11
    "Fn"        shift, and go to state 196
    "("         shift, and go to state 230

    tid               go to state 198
    mod_prefix        go to state 232
    typespec          go to state 358
    primary_typespec  go to state 202
    paren_typespec    go to state 203
    tuple_typespec    go to state 204
    mod_prefix_tid    go to state 205
    fn_typespec       go to state 206
    postfix_typespec  go to state 207
    tcall_typespec    go to state 208
    unary_typespec    go to state 209


State 356

   43 typeclass_stmt: "typeclass" tid "<" tid typespec ">" tpattern_seq "=" "{" type_query_exp_sl • "}"
   62 type_query_exp_sl: type_query_exp_sl • type_query_exp ";"

    "<TypeId>"  shift, and go to state 11
    "Fn"        shift, and go to state 196
    "("         shift, and go to state 230
    "}"         shift, and go to state 359

    tid               go to state 198
    mod_prefix        go to state 232
    type_query_exp    go to state 350
    typespec          go to state 347
    primary_typespec  go to state 202
    paren_typespec    go to state 203
    tuple_typespec    go to state 204
    mod_prefix_tid    go to state 205
    fn_typespec       go to state 206
    postfix_typespec  go to state 207
    tcall_typespec    go to state 208
    unary_typespec    go to state 209


State 357

   62 type_query_exp_sl: type_query_exp_sl type_query_exp ";" •

    $default  reduce using rule 62 (type_query_exp_sl)


State 358

  141 type_query_exp: typespec type_query_op typespec •

    $default  reduce using rule 141 (type_query_exp)


State 359

   43 typeclass_stmt: "typeclass" tid "<" tid typespec ">" tpattern_seq "=" "{" type_query_exp_sl "}" •

    $default  reduce using rule 43 (typeclass_stmt)
