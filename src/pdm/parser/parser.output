Terminals unused in grammar

    "<__42__>"
    "match"
    "with"
    ":"
    "&"
    "EOS"
    "<null>"


State 99 conflicts: 1 shift/reduce


Grammar

    0 $accept: script $end

    1 script: scriptContent

    2 scriptContent: scriptContentStmt ";"
    3              | scriptContent scriptContentStmt ";"

    4 scriptContentStmt: mod_stmt
    5                  | import_stmt
    6                  | extern_stmt

    7 mod_stmt: "mod" "<val_id>" "{" moduleContent "}"

    8 moduleContent: moduleContentStmt ";"
    9              | moduleContent moduleContentStmt ";"

   10 chain_prefix_stmt: const_stmt
   11                  | val_stmt
   12                  | var_stmt
   13                  | set_stmt
   14                  | discard_stmt

   15 const_stmt: "const" lpattern_naked "=" expr

   16 val_stmt: "val" lpattern_naked "=" expr

   17 var_stmt: "var" lpattern_naked "=" expr

   18 set_stmt: "set" expr "=" expr

   19 discard_stmt: expr

   20 moduleContentStmt: fn_stmt
   21                  | type_stmt
   22                  | enum_stmt
   23                  | typeclass_stmt
   24                  | import_stmt
   25                  | mod_stmt
   26                  | using_stmt
   27                  | extern_stmt

   28 fn_stmt: "fn" vid vpattern "->" typespec "=" bracketed_exp
   29        | "fn" vid tpattern_seq vpattern "->" typespec "=" bracketed_exp
   30        | "fn" vid vpattern "=" bracketed_exp
   31        | "fn" vid tpattern_seq vpattern "=" bracketed_exp

   32 type_stmt: "type" tid "=" long_typespec
   33          | "type" tid tpattern_seq "=" long_typespec

   34 enum_stmt: "enum" tid enum_field_pl

   35 enum_field_pl: "|" unprefixed_enum_field_pl
   36              | unprefixed_enum_field_pl

   37 unprefixed_enum_field_pl: enum_field
   38                         | unprefixed_enum_field_pl "|" enum_field

   39 enum_field: tid
   40           | tid "(" ")"
   41           | tid "(" typespec_cl1 ")"

   42 typeclass_stmt: "typeclass" tid "<" tid typespec ">" "=" "{" expr_sl "}"
   43               | "typeclass" tid "<" tid typespec ">" tpattern_seq "=" "{" expr_sl "}"

   44 using_stmt: "using" bracketed_exp

   45 import_stmt: "import" vid "from" stringl "type" stringl

   46 extern_stmt: "extern" vid "from" expr

   47 tid: "<TypeId>"

   48 vid: "<val_id>"

   49 floatl: "4.2"

   50 stringl: "'sq-string-literal'"
   51        | "\"dq-string-literal\""

   52 expr: binary_exp

   53 long_exp: type_query_exp

   54 expr_cl2: expr "," expr
   55         | expr_cl2 "," expr

   56 expr_sl: expr ";"
   57        | expr_sl expr ";"

   58 bracketed_exp: unit_exp
   59              | paren_exp
   60              | vtupleExpr
   61              | vstructExpr
   62              | chain_exp

   63 unit_exp: "(" ")"
   64         | "{" "}"

   65 paren_exp: "(" long_exp ")"

   66 vtupleExpr: "(" expr "," ")"
   67           | "(" expr_cl2 ")"

   68 vstructExpr: "{" struct_exp_field_cl "}"

   69 primary_exp: bracketed_exp
   70            | vid
   71            | int_expr
   72            | floatl
   73            | stringls
   74            | if_exp
   75            | lambda_exp

   76 int_expr: "42"
   77         | "0x2a"

   78 stringls: "'sq-string-literal'"
   79         | "\"dq-string-literal\""
   80         | stringls "'sq-string-literal'"
   81         | stringls "\"dq-string-literal\""

   82 if_exp: "if" bracketed_exp "then" bracketed_exp
   83       | "if" bracketed_exp "then" bracketed_exp "else" primary_exp

   84 chain_exp: "{" expr "}"
   85          | "{" chain_prefix "}"
   86          | "{" chain_prefix expr "}"

   87 chain_prefix: chain_prefix_stmt ";"
   88             | chain_prefix chain_prefix_stmt ";"

   89 lambda_exp: "fn" vpattern "=" bracketed_exp

   90 postfix_exp: primary_exp
   91            | tcall_exp
   92            | vcall_exp
   93            | dot_name_exp
   94            | dot_index_exp

   95 tcall_exp: postfix_exp "[" targ_cl "]"

   96 vcall_exp: postfix_exp "(" ")"
   97          | postfix_exp "(" varg_cl ")"

   98 dot_name_exp: postfix_exp "." "<val_id>"
   99             | postfix_exp "." "<TypeId>"

  100 dot_index_exp: postfix_exp "." int_expr
  101              | postfix_exp "." bracketed_exp

  102 unary_exp: postfix_exp
  103          | unary_op unary_exp

  104 unary_op: "+"
  105         | "-"
  106         | "*"
  107         | "^"
  108         | "not"

  109 binary_exp: or_binary_exp

  110 mul_binary_op: "*"
  111              | "/"
  112              | "%"

  113 mul_binary_exp: unary_exp
  114               | mul_binary_exp mul_binary_op unary_exp

  115 add_binary_op: "+"
  116              | "-"

  117 add_binary_exp: mul_binary_exp
  118               | add_binary_exp add_binary_op mul_binary_exp

  119 cmp_binary_op: "<"
  120              | "<="
  121              | ">"
  122              | ">="

  123 cmp_binary_exp: add_binary_exp
  124               | cmp_binary_exp cmp_binary_op add_binary_exp

  125 eq_binary_op: "=="
  126             | "!="

  127 eq_binary_exp: cmp_binary_exp
  128              | eq_binary_exp eq_binary_op cmp_binary_exp

  129 and_binary_exp: eq_binary_exp
  130               | and_binary_exp "and" eq_binary_exp

  131 xor_binary_exp: and_binary_exp
  132               | xor_binary_exp "xor" and_binary_exp

  133 or_binary_exp: xor_binary_exp
  134              | or_binary_exp "or" xor_binary_exp

  135 type_query_exp: binary_exp
  136               | typespec type_query_op typespec

  137 type_query_op: ":<"
  138              | ">:"
  139              | "::"

  140 typespec: unary_typespec

  141 typespec_cl1: typespec
  142             | typespec_cl1 "," typespec

  143 typespec_cl2: typespec "," typespec
  144             | typespec_cl2 "," typespec

  145 struct_typespec_field: vid typespec

  146 struct_typespec_field_cl: struct_typespec_field
  147                         | struct_typespec_field_cl "," struct_typespec_field

  148 primary_typespec: tid
  149                 | paren_typespec
  150                 | tuple_typespec
  151                 | mod_prefix_tid
  152                 | fn_typespec

  153 paren_typespec: "(" typespec ")"

  154 tuple_typespec: "(" typespec "," ")"
  155               | "(" typespec_cl2 ")"

  156 mod_prefix_tid: mod_prefix tid

  157 mod_prefix: vid "."
  158           | mod_prefix vid "."

  159 fn_typespec: "Fn" vpattern primary_typespec

  160 postfix_typespec: primary_typespec
  161                 | tcall_typespec
  162                 | dot_typespec

  163 tcall_typespec: postfix_typespec "[" targ_cl "]"

  164 dot_typespec: postfix_typespec "." "<val_id>"

  165 unary_typespec: postfix_typespec

  166 long_typespec: unary_typespec
  167              | struct_typespec

  168 struct_typespec: "{" struct_typespec_field_cl "}"

  169 targ: typespec
  170     | expr

  171 targ_cl: targ
  172        | targ_cl "," targ

  173 varg: expr
  174     | "out" expr
  175     | "inout" expr

  176 varg_cl: varg
  177        | varg_cl "," varg

  178 struct_exp_field: vid "=" expr

  179 vpattern_field: vid typespec
  180               | "out" vid typespec
  181               | "inout" vid typespec

  182 lpattern_field: vid typespec
  183               | vid

  184 tpattern_field: vid typespec
  185               | tid typespec

  186 lpattern: "(" lpattern_field_cl ")"
  187         | "(" ")"

  188 lpattern_naked: lpattern_field
  189               | lpattern

  190 vpattern: "(" vpattern_field_cl ")"
  191         | "(" ")"

  192 tpattern: "[" tpattern_field_cl "]"
  193         | "!" "[" tpattern_field_cl "]"

  194 vpattern_field_cl: vpattern_field
  195                  | vpattern_field_cl "," vpattern_field

  196 lpattern_field_cl: lpattern_field
  197                  | lpattern_field_cl "," lpattern_field

  198 tpattern_field_cl: tpattern_field
  199                  | tpattern_field_cl "," tpattern_field

  200 struct_exp_field_cl: struct_exp_field
  201                    | struct_exp_field_cl "," struct_exp_field

  202 tpattern_seq: tpattern
  203             | tpattern_seq tpattern


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    "<val_id>" <TokenInfo> (258) 7 48 98 164
    "<TypeId>" <TokenInfo> (259) 47 99
    "<__42__>" <TokenInfo> (260)
    "using" (261) 44
    "mod" (262) 7
    "if" (263) 82 83
    "then" (264) 82 83
    "else" (265) 83
    "match" (266)
    "with" (267)
    "import" (268) 45
    "extern" (269) 46
    "from" (270) 45 46
    "const" (271) 15
    "val" (272) 16
    "var" (273) 17
    "set" (274) 18
    "fn" (275) 28 29 30 31 89
    "Fn" (276) 159
    "type" (277) 32 33 45
    "enum" (278) 34
    "and" (279) 130
    "xor" (280) 132
    "or" (281) 134
    "not" (282) 108
    "typeclass" (283) 42 43
    "out" (284) 174 180
    "inout" (285) 175 181
    "42" <TokenInfo> (286) 76
    "0x2a" <TokenInfo> (287) 77
    "4.2" <TokenInfo> (288) 49
    "\"dq-string-literal\"" <TokenInfo> (289) 51 79 81
    "'sq-string-literal'" <TokenInfo> (290) 50 78 80
    "." (291) 98 99 100 101 157 158 164
    ":" (292)
    "," (293) 54 55 66 142 143 144 147 154 172 177 195 197 199 201
    ";" (294) 2 3 8 9 56 57 87 88
    "::" (295) 139
    "(" (296) 40 41 63 65 66 67 96 97 153 154 155 186 187 190 191
    ")" (297) 40 41 63 65 66 67 96 97 153 154 155 186 187 190 191
    "[" (298) 95 163 192 193
    "]" (299) 95 163 192 193
    "{" (300) 7 42 43 64 68 84 85 86 168
    "}" (301) 7 42 43 64 68 84 85 86 168
    "->" (302) 28 29
    "*" (303) 106 110
    "/" (304) 111
    "%" (305) 112
    "+" (306) 104 115
    "-" (307) 105 116
    "<" (308) 42 43 119
    "<=" (309) 120
    ">" (310) 42 43 121
    ">=" (311) 122
    "=" (312) 15 16 17 18 28 29 30 31 32 33 42 43 89 178
    "==" (313) 125
    "!=" (314) 126
    "^" (315) 107
    "&" (316)
    "!" (317) 193
    "|" (318) 35 38
    "EOS" (319)
    ":<" (320) 137
    ">:" (321) 138
    "<null>" (322)


Nonterminals, with rules where they appear

    $accept (68)
        on left: 0
    script <pdm::ast::Script*> (69)
        on left: 1
        on right: 0
    scriptContent <std::vector<pdm::ast::Stmt*>> (70)
        on left: 2 3
        on right: 1 3
    scriptContentStmt <pdm::ast::Stmt*> (71)
        on left: 4 5 6
        on right: 2 3
    mod_stmt <pdm::ast::Stmt*> (72)
        on left: 7
        on right: 4 25
    moduleContent <std::vector<pdm::ast::Stmt*>> (73)
        on left: 8 9
        on right: 7 9
    chain_prefix_stmt <pdm::ast::Stmt*> (74)
        on left: 10 11 12 13 14
        on right: 87 88
    const_stmt <pdm::ast::Stmt*> (75)
        on left: 15
        on right: 10
    val_stmt <pdm::ast::Stmt*> (76)
        on left: 16
        on right: 11
    var_stmt <pdm::ast::Stmt*> (77)
        on left: 17
        on right: 12
    set_stmt <pdm::ast::Stmt*> (78)
        on left: 18
        on right: 13
    discard_stmt <pdm::ast::Stmt*> (79)
        on left: 19
        on right: 14
    moduleContentStmt <pdm::ast::Stmt*> (80)
        on left: 20 21 22 23 24 25 26 27
        on right: 8 9
    fn_stmt <pdm::ast::Stmt*> (81)
        on left: 28 29 30 31
        on right: 20
    type_stmt <pdm::ast::Stmt*> (82)
        on left: 32 33
        on right: 21
    enum_stmt <pdm::ast::Stmt*> (83)
        on left: 34
        on right: 22
    enum_field_pl <std::vector<pdm::ast::EnumStmt::Field*>> (84)
        on left: 35 36
        on right: 34
    unprefixed_enum_field_pl <std::vector<pdm::ast::EnumStmt::Field*>> (85)
        on left: 37 38
        on right: 35 36 38
    enum_field <pdm::ast::EnumStmt::Field*> (86)
        on left: 39 40 41
        on right: 37 38
    typeclass_stmt <pdm::ast::Stmt*> (87)
        on left: 42 43
        on right: 23
    using_stmt <pdm::ast::Stmt*> (88)
        on left: 44
        on right: 26
    import_stmt <pdm::ast::Stmt*> (89)
        on left: 45
        on right: 5 24
    extern_stmt <pdm::ast::Stmt*> (90)
        on left: 46
        on right: 6 27
    tid <TokenInfo> (91)
        on left: 47
        on right: 32 33 34 39 40 41 42 43 148 156 185
    vid <TokenInfo> (92)
        on left: 48
        on right: 28 29 30 31 45 46 70 145 157 158 178 179 180 181 182 183 184
    floatl <TokenInfo> (93)
        on left: 49
        on right: 72
    stringl <TokenInfo> (94)
        on left: 50 51
        on right: 45
    expr <pdm::ast::Exp*> (95)
        on left: 52
        on right: 15 16 17 18 19 46 54 55 56 57 66 84 86 170 173 174 175 178
    long_exp <pdm::ast::Exp*> (96)
        on left: 53
        on right: 65
    expr_cl2 <std::vector<pdm::ast::Exp*>> (97)
        on left: 54 55
        on right: 55 67
    expr_sl <std::vector<pdm::ast::Exp*>> (98)
        on left: 56 57
        on right: 42 43 57
    bracketed_exp <pdm::ast::Exp*> (99)
        on left: 58 59 60 61 62
        on right: 28 29 30 31 44 69 82 83 89 101
    unit_exp <pdm::ast::Exp*> (100)
        on left: 63 64
        on right: 58
    paren_exp <pdm::ast::Exp*> (101)
        on left: 65
        on right: 59
    vtupleExpr <pdm::ast::Exp*> (102)
        on left: 66 67
        on right: 60
    vstructExpr <pdm::ast::Exp*> (103)
        on left: 68
        on right: 61
    primary_exp <pdm::ast::Exp*> (104)
        on left: 69 70 71 72 73 74 75
        on right: 83 90
    int_expr <pdm::ast::Exp*> (105)
        on left: 76 77
        on right: 71 100
    stringls <std::vector<pdm::ast::StringExp::Piece>> (106)
        on left: 78 79 80 81
        on right: 73 80 81
    if_exp <pdm::ast::Exp*> (107)
        on left: 82 83
        on right: 74
    chain_exp <pdm::ast::Exp*> (108)
        on left: 84 85 86
        on right: 62
    chain_prefix <std::vector<pdm::ast::Stmt*>> (109)
        on left: 87 88
        on right: 85 86 88
    lambda_exp <pdm::ast::Exp*> (110)
        on left: 89
        on right: 75
    postfix_exp <pdm::ast::Exp*> (111)
        on left: 90 91 92 93 94
        on right: 95 96 97 98 99 100 101 102
    tcall_exp <pdm::ast::Exp*> (112)
        on left: 95
        on right: 91
    vcall_exp <pdm::ast::Exp*> (113)
        on left: 96 97
        on right: 92
    dot_name_exp <pdm::ast::Exp*> (114)
        on left: 98 99
        on right: 93
    dot_index_exp <pdm::ast::Exp*> (115)
        on left: 100 101
        on right: 94
    unary_exp <pdm::ast::Exp*> (116)
        on left: 102 103
        on right: 103 113 114
    unary_op <pdm::ast::UnaryOperator> (117)
        on left: 104 105 106 107 108
        on right: 103
    binary_exp <pdm::ast::Exp*> (118)
        on left: 109
        on right: 52 135
    mul_binary_op <pdm::ast::BinaryOperator> (119)
        on left: 110 111 112
        on right: 114
    mul_binary_exp <pdm::ast::Exp*> (120)
        on left: 113 114
        on right: 114 117 118
    add_binary_op <pdm::ast::BinaryOperator> (121)
        on left: 115 116
        on right: 118
    add_binary_exp <pdm::ast::Exp*> (122)
        on left: 117 118
        on right: 118 123 124
    cmp_binary_op <pdm::ast::BinaryOperator> (123)
        on left: 119 120 121 122
        on right: 124
    cmp_binary_exp <pdm::ast::Exp*> (124)
        on left: 123 124
        on right: 124 127 128
    eq_binary_op <pdm::ast::BinaryOperator> (125)
        on left: 125 126
        on right: 128
    eq_binary_exp <pdm::ast::Exp*> (126)
        on left: 127 128
        on right: 128 129 130
    and_binary_exp <pdm::ast::Exp*> (127)
        on left: 129 130
        on right: 130 131 132
    xor_binary_exp <pdm::ast::Exp*> (128)
        on left: 131 132
        on right: 132 133 134
    or_binary_exp <pdm::ast::Exp*> (129)
        on left: 133 134
        on right: 109 134
    type_query_exp <pdm::ast::Exp*> (130)
        on left: 135 136
        on right: 53
    type_query_op <pdm::ast::TypeQueryKind> (131)
        on left: 137 138 139
        on right: 136
    typespec <pdm::ast::Typespec*> (132)
        on left: 140
        on right: 28 29 42 43 136 141 142 143 144 145 153 154 169 179 180 181 182 184 185
    typespec_cl1 <std::vector<pdm::ast::Typespec*>> (133)
        on left: 141 142
        on right: 41 142
    typespec_cl2 <std::vector<pdm::ast::Typespec*>> (134)
        on left: 143 144
        on right: 144 155
    struct_typespec_field <pdm::ast::StructTypespec::Field*> (135)
        on left: 145
        on right: 146 147
    struct_typespec_field_cl <std::vector<pdm::ast::StructTypespec::Field*>> (136)
        on left: 146 147
        on right: 147 168
    primary_typespec <pdm::ast::Typespec*> (137)
        on left: 148 149 150 151 152
        on right: 159 160
    paren_typespec <pdm::ast::Typespec*> (138)
        on left: 153
        on right: 149
    tuple_typespec <pdm::ast::Typespec*> (139)
        on left: 154 155
        on right: 150
    mod_prefix_tid <pdm::ast::Typespec*> (140)
        on left: 156
        on right: 151
    mod_prefix <std::vector<pdm::intern::String>> (141)
        on left: 157 158
        on right: 156 158
    fn_typespec <pdm::ast::Typespec*> (142)
        on left: 159
        on right: 152
    postfix_typespec <pdm::ast::Typespec*> (143)
        on left: 160 161 162
        on right: 163 164 165
    tcall_typespec <pdm::ast::Typespec*> (144)
        on left: 163
        on right: 161
    dot_typespec <pdm::ast::Typespec*> (145)
        on left: 164
        on right: 162
    unary_typespec <pdm::ast::Typespec*> (146)
        on left: 165
        on right: 140 166
    long_typespec <pdm::ast::Typespec*> (147)
        on left: 166 167
        on right: 32 33
    struct_typespec <pdm::ast::Typespec*> (148)
        on left: 168
        on right: 167
    targ <pdm::ast::TArg*> (149)
        on left: 169 170
        on right: 171 172
    targ_cl <std::vector<pdm::ast::TArg*>> (150)
        on left: 171 172
        on right: 95 163 172
    varg <pdm::ast::VArg*> (151)
        on left: 173 174 175
        on right: 176 177
    varg_cl <std::vector<pdm::ast::VArg*>> (152)
        on left: 176 177
        on right: 97 177
    struct_exp_field <pdm::ast::StructExp::Field*> (153)
        on left: 178
        on right: 200 201
    vpattern_field <pdm::ast::VPattern::Field*> (154)
        on left: 179 180 181
        on right: 194 195
    lpattern_field <pdm::ast::LPattern::Field*> (155)
        on left: 182 183
        on right: 188 196 197
    tpattern_field <pdm::ast::TPattern::Field*> (156)
        on left: 184 185
        on right: 198 199
    lpattern <pdm::ast::LPattern*> (157)
        on left: 186 187
        on right: 189
    lpattern_naked <pdm::ast::LPattern*> (158)
        on left: 188 189
        on right: 15 16 17
    vpattern <pdm::ast::VPattern*> (159)
        on left: 190 191
        on right: 28 29 30 31 89 159
    tpattern <pdm::ast::TPattern*> (160)
        on left: 192 193
        on right: 202 203
    vpattern_field_cl <std::vector<pdm::ast::VPattern::Field*>> (161)
        on left: 194 195
        on right: 190 195
    lpattern_field_cl <std::vector<pdm::ast::LPattern::Field*>> (162)
        on left: 196 197
        on right: 186 197
    tpattern_field_cl <std::vector<pdm::ast::TPattern::Field*>> (163)
        on left: 198 199
        on right: 192 193 199
    struct_exp_field_cl <std::vector<pdm::ast::StructExp::Field*>> (164)
        on left: 200 201
        on right: 68 201
    tpattern_seq <std::vector<pdm::ast::TPattern*>> (165)
        on left: 202 203
        on right: 29 31 33 43 203


State 0

    0 $accept: • script $end

    "mod"     shift, and go to state 1
    "import"  shift, and go to state 2
    "extern"  shift, and go to state 3

    script             go to state 4
    scriptContent      go to state 5
    scriptContentStmt  go to state 6
    mod_stmt           go to state 7
    import_stmt        go to state 8
    extern_stmt        go to state 9


State 1

    7 mod_stmt: "mod" • "<val_id>" "{" moduleContent "}"

    "<val_id>"  shift, and go to state 10


State 2

   45 import_stmt: "import" • vid "from" stringl "type" stringl

    "<val_id>"  shift, and go to state 11

    vid  go to state 12


State 3

   46 extern_stmt: "extern" • vid "from" expr

    "<val_id>"  shift, and go to state 11

    vid  go to state 13


State 4

    0 $accept: script • $end

    $end  shift, and go to state 14


State 5

    1 script: scriptContent •
    3 scriptContent: scriptContent • scriptContentStmt ";"

    "mod"     shift, and go to state 1
    "import"  shift, and go to state 2
    "extern"  shift, and go to state 3

    $default  reduce using rule 1 (script)

    scriptContentStmt  go to state 15
    mod_stmt           go to state 7
    import_stmt        go to state 8
    extern_stmt        go to state 9


State 6

    2 scriptContent: scriptContentStmt • ";"

    ";"  shift, and go to state 16


State 7

    4 scriptContentStmt: mod_stmt •

    $default  reduce using rule 4 (scriptContentStmt)


State 8

    5 scriptContentStmt: import_stmt •

    $default  reduce using rule 5 (scriptContentStmt)


State 9

    6 scriptContentStmt: extern_stmt •

    $default  reduce using rule 6 (scriptContentStmt)


State 10

    7 mod_stmt: "mod" "<val_id>" • "{" moduleContent "}"

    "{"  shift, and go to state 17


State 11

   48 vid: "<val_id>" •

    $default  reduce using rule 48 (vid)


State 12

   45 import_stmt: "import" vid • "from" stringl "type" stringl

    "from"  shift, and go to state 18


State 13

   46 extern_stmt: "extern" vid • "from" expr

    "from"  shift, and go to state 19


State 14

    0 $accept: script $end •

    $default  accept


State 15

    3 scriptContent: scriptContent scriptContentStmt • ";"

    ";"  shift, and go to state 20


State 16

    2 scriptContent: scriptContentStmt ";" •

    $default  reduce using rule 2 (scriptContent)


State 17

    7 mod_stmt: "mod" "<val_id>" "{" • moduleContent "}"

    "using"      shift, and go to state 21
    "mod"        shift, and go to state 1
    "import"     shift, and go to state 2
    "extern"     shift, and go to state 3
    "fn"         shift, and go to state 22
    "type"       shift, and go to state 23
    "enum"       shift, and go to state 24
    "typeclass"  shift, and go to state 25

    mod_stmt           go to state 26
    moduleContent      go to state 27
    moduleContentStmt  go to state 28
    fn_stmt            go to state 29
    type_stmt          go to state 30
    enum_stmt          go to state 31
    typeclass_stmt     go to state 32
    using_stmt         go to state 33
    import_stmt        go to state 34
    extern_stmt        go to state 35


State 18

   45 import_stmt: "import" vid "from" • stringl "type" stringl

    "\"dq-string-literal\""  shift, and go to state 36
    "'sq-string-literal'"    shift, and go to state 37

    stringl  go to state 38


State 19

   46 extern_stmt: "extern" vid "from" • expr

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "fn"                     shift, and go to state 40
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    vid             go to state 53
    floatl          go to state 54
    expr            go to state 55
    bracketed_exp   go to state 56
    unit_exp        go to state 57
    paren_exp       go to state 58
    vtupleExpr      go to state 59
    vstructExpr     go to state 60
    primary_exp     go to state 61
    int_expr        go to state 62
    stringls        go to state 63
    if_exp          go to state 64
    chain_exp       go to state 65
    lambda_exp      go to state 66
    postfix_exp     go to state 67
    tcall_exp       go to state 68
    vcall_exp       go to state 69
    dot_name_exp    go to state 70
    dot_index_exp   go to state 71
    unary_exp       go to state 72
    unary_op        go to state 73
    binary_exp      go to state 74
    mul_binary_exp  go to state 75
    add_binary_exp  go to state 76
    cmp_binary_exp  go to state 77
    eq_binary_exp   go to state 78
    and_binary_exp  go to state 79
    xor_binary_exp  go to state 80
    or_binary_exp   go to state 81


State 20

    3 scriptContent: scriptContent scriptContentStmt ";" •

    $default  reduce using rule 3 (scriptContent)


State 21

   44 using_stmt: "using" • bracketed_exp

    "("  shift, and go to state 47
    "{"  shift, and go to state 48

    bracketed_exp  go to state 82
    unit_exp       go to state 57
    paren_exp      go to state 58
    vtupleExpr     go to state 59
    vstructExpr    go to state 60
    chain_exp      go to state 65


State 22

   28 fn_stmt: "fn" • vid vpattern "->" typespec "=" bracketed_exp
   29        | "fn" • vid tpattern_seq vpattern "->" typespec "=" bracketed_exp
   30        | "fn" • vid vpattern "=" bracketed_exp
   31        | "fn" • vid tpattern_seq vpattern "=" bracketed_exp

    "<val_id>"  shift, and go to state 11

    vid  go to state 83


State 23

   32 type_stmt: "type" • tid "=" long_typespec
   33          | "type" • tid tpattern_seq "=" long_typespec

    "<TypeId>"  shift, and go to state 84

    tid  go to state 85


State 24

   34 enum_stmt: "enum" • tid enum_field_pl

    "<TypeId>"  shift, and go to state 84

    tid  go to state 86


State 25

   42 typeclass_stmt: "typeclass" • tid "<" tid typespec ">" "=" "{" expr_sl "}"
   43               | "typeclass" • tid "<" tid typespec ">" tpattern_seq "=" "{" expr_sl "}"

    "<TypeId>"  shift, and go to state 84

    tid  go to state 87


State 26

   25 moduleContentStmt: mod_stmt •

    $default  reduce using rule 25 (moduleContentStmt)


State 27

    7 mod_stmt: "mod" "<val_id>" "{" moduleContent • "}"
    9 moduleContent: moduleContent • moduleContentStmt ";"

    "using"      shift, and go to state 21
    "mod"        shift, and go to state 1
    "import"     shift, and go to state 2
    "extern"     shift, and go to state 3
    "fn"         shift, and go to state 22
    "type"       shift, and go to state 23
    "enum"       shift, and go to state 24
    "typeclass"  shift, and go to state 25
    "}"          shift, and go to state 88

    mod_stmt           go to state 26
    moduleContentStmt  go to state 89
    fn_stmt            go to state 29
    type_stmt          go to state 30
    enum_stmt          go to state 31
    typeclass_stmt     go to state 32
    using_stmt         go to state 33
    import_stmt        go to state 34
    extern_stmt        go to state 35


State 28

    8 moduleContent: moduleContentStmt • ";"

    ";"  shift, and go to state 90


State 29

   20 moduleContentStmt: fn_stmt •

    $default  reduce using rule 20 (moduleContentStmt)


State 30

   21 moduleContentStmt: type_stmt •

    $default  reduce using rule 21 (moduleContentStmt)


State 31

   22 moduleContentStmt: enum_stmt •

    $default  reduce using rule 22 (moduleContentStmt)


State 32

   23 moduleContentStmt: typeclass_stmt •

    $default  reduce using rule 23 (moduleContentStmt)


State 33

   26 moduleContentStmt: using_stmt •

    $default  reduce using rule 26 (moduleContentStmt)


State 34

   24 moduleContentStmt: import_stmt •

    $default  reduce using rule 24 (moduleContentStmt)


State 35

   27 moduleContentStmt: extern_stmt •

    $default  reduce using rule 27 (moduleContentStmt)


State 36

   51 stringl: "\"dq-string-literal\"" •

    $default  reduce using rule 51 (stringl)


State 37

   50 stringl: "'sq-string-literal'" •

    $default  reduce using rule 50 (stringl)


State 38

   45 import_stmt: "import" vid "from" stringl • "type" stringl

    "type"  shift, and go to state 91


State 39

   82 if_exp: "if" • bracketed_exp "then" bracketed_exp
   83       | "if" • bracketed_exp "then" bracketed_exp "else" primary_exp

    "("  shift, and go to state 47
    "{"  shift, and go to state 48

    bracketed_exp  go to state 92
    unit_exp       go to state 57
    paren_exp      go to state 58
    vtupleExpr     go to state 59
    vstructExpr    go to state 60
    chain_exp      go to state 65


State 40

   89 lambda_exp: "fn" • vpattern "=" bracketed_exp

    "("  shift, and go to state 93

    vpattern  go to state 94


State 41

  108 unary_op: "not" •

    $default  reduce using rule 108 (unary_op)


State 42

   76 int_expr: "42" •

    $default  reduce using rule 76 (int_expr)


State 43

   77 int_expr: "0x2a" •

    $default  reduce using rule 77 (int_expr)


State 44

   49 floatl: "4.2" •

    $default  reduce using rule 49 (floatl)


State 45

   79 stringls: "\"dq-string-literal\"" •

    $default  reduce using rule 79 (stringls)


State 46

   78 stringls: "'sq-string-literal'" •

    $default  reduce using rule 78 (stringls)


State 47

   63 unit_exp: "(" • ")"
   65 paren_exp: "(" • long_exp ")"
   66 vtupleExpr: "(" • expr "," ")"
   67           | "(" • expr_cl2 ")"

    "<val_id>"               shift, and go to state 11
    "<TypeId>"               shift, and go to state 84
    "if"                     shift, and go to state 39
    "fn"                     shift, and go to state 40
    "Fn"                     shift, and go to state 95
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 96
    ")"                      shift, and go to state 97
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    tid               go to state 98
    vid               go to state 99
    floatl            go to state 54
    expr              go to state 100
    long_exp          go to state 101
    expr_cl2          go to state 102
    bracketed_exp     go to state 56
    unit_exp          go to state 57
    paren_exp         go to state 58
    vtupleExpr        go to state 59
    vstructExpr       go to state 60
    primary_exp       go to state 61
    int_expr          go to state 62
    stringls          go to state 63
    if_exp            go to state 64
    chain_exp         go to state 65
    lambda_exp        go to state 66
    postfix_exp       go to state 67
    tcall_exp         go to state 68
    vcall_exp         go to state 69
    dot_name_exp      go to state 70
    dot_index_exp     go to state 71
    unary_exp         go to state 72
    unary_op          go to state 73
    binary_exp        go to state 103
    mul_binary_exp    go to state 75
    add_binary_exp    go to state 76
    cmp_binary_exp    go to state 77
    eq_binary_exp     go to state 78
    and_binary_exp    go to state 79
    xor_binary_exp    go to state 80
    or_binary_exp     go to state 81
    type_query_exp    go to state 104
    typespec          go to state 105
    primary_typespec  go to state 106
    paren_typespec    go to state 107
    tuple_typespec    go to state 108
    mod_prefix_tid    go to state 109
    mod_prefix        go to state 110
    fn_typespec       go to state 111
    postfix_typespec  go to state 112
    tcall_typespec    go to state 113
    dot_typespec      go to state 114
    unary_typespec    go to state 115


State 48

   64 unit_exp: "{" • "}"
   68 vstructExpr: "{" • struct_exp_field_cl "}"
   84 chain_exp: "{" • expr "}"
   85          | "{" • chain_prefix "}"
   86          | "{" • chain_prefix expr "}"

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "const"                  shift, and go to state 116
    "val"                    shift, and go to state 117
    "var"                    shift, and go to state 118
    "set"                    shift, and go to state 119
    "fn"                     shift, and go to state 40
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48
    "}"                      shift, and go to state 120
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    chain_prefix_stmt    go to state 121
    const_stmt           go to state 122
    val_stmt             go to state 123
    var_stmt             go to state 124
    set_stmt             go to state 125
    discard_stmt         go to state 126
    vid                  go to state 127
    floatl               go to state 54
    expr                 go to state 128
    bracketed_exp        go to state 56
    unit_exp             go to state 57
    paren_exp            go to state 58
    vtupleExpr           go to state 59
    vstructExpr          go to state 60
    primary_exp          go to state 61
    int_expr             go to state 62
    stringls             go to state 63
    if_exp               go to state 64
    chain_exp            go to state 65
    chain_prefix         go to state 129
    lambda_exp           go to state 66
    postfix_exp          go to state 67
    tcall_exp            go to state 68
    vcall_exp            go to state 69
    dot_name_exp         go to state 70
    dot_index_exp        go to state 71
    unary_exp            go to state 72
    unary_op             go to state 73
    binary_exp           go to state 74
    mul_binary_exp       go to state 75
    add_binary_exp       go to state 76
    cmp_binary_exp       go to state 77
    eq_binary_exp        go to state 78
    and_binary_exp       go to state 79
    xor_binary_exp       go to state 80
    or_binary_exp        go to state 81
    struct_exp_field     go to state 130
    struct_exp_field_cl  go to state 131


State 49

  106 unary_op: "*" •

    $default  reduce using rule 106 (unary_op)


State 50

  104 unary_op: "+" •

    $default  reduce using rule 104 (unary_op)


State 51

  105 unary_op: "-" •

    $default  reduce using rule 105 (unary_op)


State 52

  107 unary_op: "^" •

    $default  reduce using rule 107 (unary_op)


State 53

   70 primary_exp: vid •

    $default  reduce using rule 70 (primary_exp)


State 54

   72 primary_exp: floatl •

    $default  reduce using rule 72 (primary_exp)


State 55

   46 extern_stmt: "extern" vid "from" expr •

    $default  reduce using rule 46 (extern_stmt)


State 56

   69 primary_exp: bracketed_exp •

    $default  reduce using rule 69 (primary_exp)


State 57

   58 bracketed_exp: unit_exp •

    $default  reduce using rule 58 (bracketed_exp)


State 58

   59 bracketed_exp: paren_exp •

    $default  reduce using rule 59 (bracketed_exp)


State 59

   60 bracketed_exp: vtupleExpr •

    $default  reduce using rule 60 (bracketed_exp)


State 60

   61 bracketed_exp: vstructExpr •

    $default  reduce using rule 61 (bracketed_exp)


State 61

   90 postfix_exp: primary_exp •

    $default  reduce using rule 90 (postfix_exp)


State 62

   71 primary_exp: int_expr •

    $default  reduce using rule 71 (primary_exp)


State 63

   73 primary_exp: stringls •
   80 stringls: stringls • "'sq-string-literal'"
   81         | stringls • "\"dq-string-literal\""

    "\"dq-string-literal\""  shift, and go to state 132
    "'sq-string-literal'"    shift, and go to state 133

    $default  reduce using rule 73 (primary_exp)


State 64

   74 primary_exp: if_exp •

    $default  reduce using rule 74 (primary_exp)


State 65

   62 bracketed_exp: chain_exp •

    $default  reduce using rule 62 (bracketed_exp)


State 66

   75 primary_exp: lambda_exp •

    $default  reduce using rule 75 (primary_exp)


State 67

   95 tcall_exp: postfix_exp • "[" targ_cl "]"
   96 vcall_exp: postfix_exp • "(" ")"
   97          | postfix_exp • "(" varg_cl ")"
   98 dot_name_exp: postfix_exp • "." "<val_id>"
   99             | postfix_exp • "." "<TypeId>"
  100 dot_index_exp: postfix_exp • "." int_expr
  101              | postfix_exp • "." bracketed_exp
  102 unary_exp: postfix_exp •

    "."  shift, and go to state 134
    "("  shift, and go to state 135
    "["  shift, and go to state 136

    $default  reduce using rule 102 (unary_exp)


State 68

   91 postfix_exp: tcall_exp •

    $default  reduce using rule 91 (postfix_exp)


State 69

   92 postfix_exp: vcall_exp •

    $default  reduce using rule 92 (postfix_exp)


State 70

   93 postfix_exp: dot_name_exp •

    $default  reduce using rule 93 (postfix_exp)


State 71

   94 postfix_exp: dot_index_exp •

    $default  reduce using rule 94 (postfix_exp)


State 72

  113 mul_binary_exp: unary_exp •

    $default  reduce using rule 113 (mul_binary_exp)


State 73

  103 unary_exp: unary_op • unary_exp

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "fn"                     shift, and go to state 40
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    vid            go to state 53
    floatl         go to state 54
    bracketed_exp  go to state 56
    unit_exp       go to state 57
    paren_exp      go to state 58
    vtupleExpr     go to state 59
    vstructExpr    go to state 60
    primary_exp    go to state 61
    int_expr       go to state 62
    stringls       go to state 63
    if_exp         go to state 64
    chain_exp      go to state 65
    lambda_exp     go to state 66
    postfix_exp    go to state 67
    tcall_exp      go to state 68
    vcall_exp      go to state 69
    dot_name_exp   go to state 70
    dot_index_exp  go to state 71
    unary_exp      go to state 137
    unary_op       go to state 73


State 74

   52 expr: binary_exp •

    $default  reduce using rule 52 (expr)


State 75

  114 mul_binary_exp: mul_binary_exp • mul_binary_op unary_exp
  117 add_binary_exp: mul_binary_exp •

    "*"  shift, and go to state 138
    "/"  shift, and go to state 139
    "%"  shift, and go to state 140

    $default  reduce using rule 117 (add_binary_exp)

    mul_binary_op  go to state 141


State 76

  118 add_binary_exp: add_binary_exp • add_binary_op mul_binary_exp
  123 cmp_binary_exp: add_binary_exp •

    "+"  shift, and go to state 142
    "-"  shift, and go to state 143

    $default  reduce using rule 123 (cmp_binary_exp)

    add_binary_op  go to state 144


State 77

  124 cmp_binary_exp: cmp_binary_exp • cmp_binary_op add_binary_exp
  127 eq_binary_exp: cmp_binary_exp •

    "<"   shift, and go to state 145
    "<="  shift, and go to state 146
    ">"   shift, and go to state 147
    ">="  shift, and go to state 148

    $default  reduce using rule 127 (eq_binary_exp)

    cmp_binary_op  go to state 149


State 78

  128 eq_binary_exp: eq_binary_exp • eq_binary_op cmp_binary_exp
  129 and_binary_exp: eq_binary_exp •

    "=="  shift, and go to state 150
    "!="  shift, and go to state 151

    $default  reduce using rule 129 (and_binary_exp)

    eq_binary_op  go to state 152


State 79

  130 and_binary_exp: and_binary_exp • "and" eq_binary_exp
  131 xor_binary_exp: and_binary_exp •

    "and"  shift, and go to state 153

    $default  reduce using rule 131 (xor_binary_exp)


State 80

  132 xor_binary_exp: xor_binary_exp • "xor" and_binary_exp
  133 or_binary_exp: xor_binary_exp •

    "xor"  shift, and go to state 154

    $default  reduce using rule 133 (or_binary_exp)


State 81

  109 binary_exp: or_binary_exp •
  134 or_binary_exp: or_binary_exp • "or" xor_binary_exp

    "or"  shift, and go to state 155

    $default  reduce using rule 109 (binary_exp)


State 82

   44 using_stmt: "using" bracketed_exp •

    $default  reduce using rule 44 (using_stmt)


State 83

   28 fn_stmt: "fn" vid • vpattern "->" typespec "=" bracketed_exp
   29        | "fn" vid • tpattern_seq vpattern "->" typespec "=" bracketed_exp
   30        | "fn" vid • vpattern "=" bracketed_exp
   31        | "fn" vid • tpattern_seq vpattern "=" bracketed_exp

    "("  shift, and go to state 93
    "["  shift, and go to state 156
    "!"  shift, and go to state 157

    vpattern      go to state 158
    tpattern      go to state 159
    tpattern_seq  go to state 160


State 84

   47 tid: "<TypeId>" •

    $default  reduce using rule 47 (tid)


State 85

   32 type_stmt: "type" tid • "=" long_typespec
   33          | "type" tid • tpattern_seq "=" long_typespec

    "["  shift, and go to state 156
    "="  shift, and go to state 161
    "!"  shift, and go to state 157

    tpattern      go to state 159
    tpattern_seq  go to state 162


State 86

   34 enum_stmt: "enum" tid • enum_field_pl

    "<TypeId>"  shift, and go to state 84
    "|"         shift, and go to state 163

    enum_field_pl             go to state 164
    unprefixed_enum_field_pl  go to state 165
    enum_field                go to state 166
    tid                       go to state 167


State 87

   42 typeclass_stmt: "typeclass" tid • "<" tid typespec ">" "=" "{" expr_sl "}"
   43               | "typeclass" tid • "<" tid typespec ">" tpattern_seq "=" "{" expr_sl "}"

    "<"  shift, and go to state 168


State 88

    7 mod_stmt: "mod" "<val_id>" "{" moduleContent "}" •

    $default  reduce using rule 7 (mod_stmt)


State 89

    9 moduleContent: moduleContent moduleContentStmt • ";"

    ";"  shift, and go to state 169


State 90

    8 moduleContent: moduleContentStmt ";" •

    $default  reduce using rule 8 (moduleContent)


State 91

   45 import_stmt: "import" vid "from" stringl "type" • stringl

    "\"dq-string-literal\""  shift, and go to state 36
    "'sq-string-literal'"    shift, and go to state 37

    stringl  go to state 170


State 92

   82 if_exp: "if" bracketed_exp • "then" bracketed_exp
   83       | "if" bracketed_exp • "then" bracketed_exp "else" primary_exp

    "then"  shift, and go to state 171


State 93

  190 vpattern: "(" • vpattern_field_cl ")"
  191         | "(" • ")"

    "<val_id>"  shift, and go to state 11
    "out"       shift, and go to state 172
    "inout"     shift, and go to state 173
    ")"         shift, and go to state 174

    vid                go to state 175
    vpattern_field     go to state 176
    vpattern_field_cl  go to state 177


State 94

   89 lambda_exp: "fn" vpattern • "=" bracketed_exp

    "="  shift, and go to state 178


State 95

  159 fn_typespec: "Fn" • vpattern primary_typespec

    "("  shift, and go to state 93

    vpattern  go to state 179


State 96

   63 unit_exp: "(" • ")"
   65 paren_exp: "(" • long_exp ")"
   66 vtupleExpr: "(" • expr "," ")"
   67           | "(" • expr_cl2 ")"
  153 paren_typespec: "(" • typespec ")"
  154 tuple_typespec: "(" • typespec "," ")"
  155               | "(" • typespec_cl2 ")"

    "<val_id>"               shift, and go to state 11
    "<TypeId>"               shift, and go to state 84
    "if"                     shift, and go to state 39
    "fn"                     shift, and go to state 40
    "Fn"                     shift, and go to state 95
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 96
    ")"                      shift, and go to state 97
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    tid               go to state 98
    vid               go to state 99
    floatl            go to state 54
    expr              go to state 100
    long_exp          go to state 101
    expr_cl2          go to state 102
    bracketed_exp     go to state 56
    unit_exp          go to state 57
    paren_exp         go to state 58
    vtupleExpr        go to state 59
    vstructExpr       go to state 60
    primary_exp       go to state 61
    int_expr          go to state 62
    stringls          go to state 63
    if_exp            go to state 64
    chain_exp         go to state 65
    lambda_exp        go to state 66
    postfix_exp       go to state 67
    tcall_exp         go to state 68
    vcall_exp         go to state 69
    dot_name_exp      go to state 70
    dot_index_exp     go to state 71
    unary_exp         go to state 72
    unary_op          go to state 73
    binary_exp        go to state 103
    mul_binary_exp    go to state 75
    add_binary_exp    go to state 76
    cmp_binary_exp    go to state 77
    eq_binary_exp     go to state 78
    and_binary_exp    go to state 79
    xor_binary_exp    go to state 80
    or_binary_exp     go to state 81
    type_query_exp    go to state 104
    typespec          go to state 180
    typespec_cl2      go to state 181
    primary_typespec  go to state 106
    paren_typespec    go to state 107
    tuple_typespec    go to state 108
    mod_prefix_tid    go to state 109
    mod_prefix        go to state 110
    fn_typespec       go to state 111
    postfix_typespec  go to state 112
    tcall_typespec    go to state 113
    dot_typespec      go to state 114
    unary_typespec    go to state 115


State 97

   63 unit_exp: "(" ")" •

    $default  reduce using rule 63 (unit_exp)


State 98

  148 primary_typespec: tid •

    $default  reduce using rule 148 (primary_typespec)


State 99

   70 primary_exp: vid •
  157 mod_prefix: vid • "."

    "."  shift, and go to state 182

    "."       [reduce using rule 70 (primary_exp)]
    $default  reduce using rule 70 (primary_exp)


State 100

   54 expr_cl2: expr • "," expr
   66 vtupleExpr: "(" expr • "," ")"

    ","  shift, and go to state 183


State 101

   65 paren_exp: "(" long_exp • ")"

    ")"  shift, and go to state 184


State 102

   55 expr_cl2: expr_cl2 • "," expr
   67 vtupleExpr: "(" expr_cl2 • ")"

    ","  shift, and go to state 185
    ")"  shift, and go to state 186


State 103

   52 expr: binary_exp •
  135 type_query_exp: binary_exp •

    ")"       reduce using rule 135 (type_query_exp)
    $default  reduce using rule 52 (expr)


State 104

   53 long_exp: type_query_exp •

    $default  reduce using rule 53 (long_exp)


State 105

  136 type_query_exp: typespec • type_query_op typespec

    "::"  shift, and go to state 187
    ":<"  shift, and go to state 188
    ">:"  shift, and go to state 189

    type_query_op  go to state 190


State 106

  160 postfix_typespec: primary_typespec •

    $default  reduce using rule 160 (postfix_typespec)


State 107

  149 primary_typespec: paren_typespec •

    $default  reduce using rule 149 (primary_typespec)


State 108

  150 primary_typespec: tuple_typespec •

    $default  reduce using rule 150 (primary_typespec)


State 109

  151 primary_typespec: mod_prefix_tid •

    $default  reduce using rule 151 (primary_typespec)


State 110

  156 mod_prefix_tid: mod_prefix • tid
  158 mod_prefix: mod_prefix • vid "."

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84

    tid  go to state 191
    vid  go to state 192


State 111

  152 primary_typespec: fn_typespec •

    $default  reduce using rule 152 (primary_typespec)


State 112

  163 tcall_typespec: postfix_typespec • "[" targ_cl "]"
  164 dot_typespec: postfix_typespec • "." "<val_id>"
  165 unary_typespec: postfix_typespec •

    "."  shift, and go to state 193
    "["  shift, and go to state 194

    $default  reduce using rule 165 (unary_typespec)


State 113

  161 postfix_typespec: tcall_typespec •

    $default  reduce using rule 161 (postfix_typespec)


State 114

  162 postfix_typespec: dot_typespec •

    $default  reduce using rule 162 (postfix_typespec)


State 115

  140 typespec: unary_typespec •

    $default  reduce using rule 140 (typespec)


State 116

   15 const_stmt: "const" • lpattern_naked "=" expr

    "<val_id>"  shift, and go to state 11
    "("         shift, and go to state 195

    vid             go to state 196
    lpattern_field  go to state 197
    lpattern        go to state 198
    lpattern_naked  go to state 199


State 117

   16 val_stmt: "val" • lpattern_naked "=" expr

    "<val_id>"  shift, and go to state 11
    "("         shift, and go to state 195

    vid             go to state 196
    lpattern_field  go to state 197
    lpattern        go to state 198
    lpattern_naked  go to state 200


State 118

   17 var_stmt: "var" • lpattern_naked "=" expr

    "<val_id>"  shift, and go to state 11
    "("         shift, and go to state 195

    vid             go to state 196
    lpattern_field  go to state 197
    lpattern        go to state 198
    lpattern_naked  go to state 201


State 119

   18 set_stmt: "set" • expr "=" expr

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "fn"                     shift, and go to state 40
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    vid             go to state 53
    floatl          go to state 54
    expr            go to state 202
    bracketed_exp   go to state 56
    unit_exp        go to state 57
    paren_exp       go to state 58
    vtupleExpr      go to state 59
    vstructExpr     go to state 60
    primary_exp     go to state 61
    int_expr        go to state 62
    stringls        go to state 63
    if_exp          go to state 64
    chain_exp       go to state 65
    lambda_exp      go to state 66
    postfix_exp     go to state 67
    tcall_exp       go to state 68
    vcall_exp       go to state 69
    dot_name_exp    go to state 70
    dot_index_exp   go to state 71
    unary_exp       go to state 72
    unary_op        go to state 73
    binary_exp      go to state 74
    mul_binary_exp  go to state 75
    add_binary_exp  go to state 76
    cmp_binary_exp  go to state 77
    eq_binary_exp   go to state 78
    and_binary_exp  go to state 79
    xor_binary_exp  go to state 80
    or_binary_exp   go to state 81


State 120

   64 unit_exp: "{" "}" •

    $default  reduce using rule 64 (unit_exp)


State 121

   87 chain_prefix: chain_prefix_stmt • ";"

    ";"  shift, and go to state 203


State 122

   10 chain_prefix_stmt: const_stmt •

    $default  reduce using rule 10 (chain_prefix_stmt)


State 123

   11 chain_prefix_stmt: val_stmt •

    $default  reduce using rule 11 (chain_prefix_stmt)


State 124

   12 chain_prefix_stmt: var_stmt •

    $default  reduce using rule 12 (chain_prefix_stmt)


State 125

   13 chain_prefix_stmt: set_stmt •

    $default  reduce using rule 13 (chain_prefix_stmt)


State 126

   14 chain_prefix_stmt: discard_stmt •

    $default  reduce using rule 14 (chain_prefix_stmt)


State 127

   70 primary_exp: vid •
  178 struct_exp_field: vid • "=" expr

    "="  shift, and go to state 204

    $default  reduce using rule 70 (primary_exp)


State 128

   19 discard_stmt: expr •
   84 chain_exp: "{" expr • "}"

    "}"  shift, and go to state 205

    $default  reduce using rule 19 (discard_stmt)


State 129

   85 chain_exp: "{" chain_prefix • "}"
   86          | "{" chain_prefix • expr "}"
   88 chain_prefix: chain_prefix • chain_prefix_stmt ";"

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "const"                  shift, and go to state 116
    "val"                    shift, and go to state 117
    "var"                    shift, and go to state 118
    "set"                    shift, and go to state 119
    "fn"                     shift, and go to state 40
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48
    "}"                      shift, and go to state 206
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    chain_prefix_stmt  go to state 207
    const_stmt         go to state 122
    val_stmt           go to state 123
    var_stmt           go to state 124
    set_stmt           go to state 125
    discard_stmt       go to state 126
    vid                go to state 53
    floatl             go to state 54
    expr               go to state 208
    bracketed_exp      go to state 56
    unit_exp           go to state 57
    paren_exp          go to state 58
    vtupleExpr         go to state 59
    vstructExpr        go to state 60
    primary_exp        go to state 61
    int_expr           go to state 62
    stringls           go to state 63
    if_exp             go to state 64
    chain_exp          go to state 65
    lambda_exp         go to state 66
    postfix_exp        go to state 67
    tcall_exp          go to state 68
    vcall_exp          go to state 69
    dot_name_exp       go to state 70
    dot_index_exp      go to state 71
    unary_exp          go to state 72
    unary_op           go to state 73
    binary_exp         go to state 74
    mul_binary_exp     go to state 75
    add_binary_exp     go to state 76
    cmp_binary_exp     go to state 77
    eq_binary_exp      go to state 78
    and_binary_exp     go to state 79
    xor_binary_exp     go to state 80
    or_binary_exp      go to state 81


State 130

  200 struct_exp_field_cl: struct_exp_field •

    $default  reduce using rule 200 (struct_exp_field_cl)


State 131

   68 vstructExpr: "{" struct_exp_field_cl • "}"
  201 struct_exp_field_cl: struct_exp_field_cl • "," struct_exp_field

    ","  shift, and go to state 209
    "}"  shift, and go to state 210


State 132

   81 stringls: stringls "\"dq-string-literal\"" •

    $default  reduce using rule 81 (stringls)


State 133

   80 stringls: stringls "'sq-string-literal'" •

    $default  reduce using rule 80 (stringls)


State 134

   98 dot_name_exp: postfix_exp "." • "<val_id>"
   99             | postfix_exp "." • "<TypeId>"
  100 dot_index_exp: postfix_exp "." • int_expr
  101              | postfix_exp "." • bracketed_exp

    "<val_id>"  shift, and go to state 211
    "<TypeId>"  shift, and go to state 212
    "42"        shift, and go to state 42
    "0x2a"      shift, and go to state 43
    "("         shift, and go to state 47
    "{"         shift, and go to state 48

    bracketed_exp  go to state 213
    unit_exp       go to state 57
    paren_exp      go to state 58
    vtupleExpr     go to state 59
    vstructExpr    go to state 60
    int_expr       go to state 214
    chain_exp      go to state 65


State 135

   96 vcall_exp: postfix_exp "(" • ")"
   97          | postfix_exp "(" • varg_cl ")"

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "fn"                     shift, and go to state 40
    "not"                    shift, and go to state 41
    "out"                    shift, and go to state 215
    "inout"                  shift, and go to state 216
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    ")"                      shift, and go to state 217
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    vid             go to state 53
    floatl          go to state 54
    expr            go to state 218
    bracketed_exp   go to state 56
    unit_exp        go to state 57
    paren_exp       go to state 58
    vtupleExpr      go to state 59
    vstructExpr     go to state 60
    primary_exp     go to state 61
    int_expr        go to state 62
    stringls        go to state 63
    if_exp          go to state 64
    chain_exp       go to state 65
    lambda_exp      go to state 66
    postfix_exp     go to state 67
    tcall_exp       go to state 68
    vcall_exp       go to state 69
    dot_name_exp    go to state 70
    dot_index_exp   go to state 71
    unary_exp       go to state 72
    unary_op        go to state 73
    binary_exp      go to state 74
    mul_binary_exp  go to state 75
    add_binary_exp  go to state 76
    cmp_binary_exp  go to state 77
    eq_binary_exp   go to state 78
    and_binary_exp  go to state 79
    xor_binary_exp  go to state 80
    or_binary_exp   go to state 81
    varg            go to state 219
    varg_cl         go to state 220


State 136

   95 tcall_exp: postfix_exp "[" • targ_cl "]"

    "<val_id>"               shift, and go to state 11
    "<TypeId>"               shift, and go to state 84
    "if"                     shift, and go to state 39
    "fn"                     shift, and go to state 40
    "Fn"                     shift, and go to state 95
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 96
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    tid               go to state 98
    vid               go to state 99
    floatl            go to state 54
    expr              go to state 221
    bracketed_exp     go to state 56
    unit_exp          go to state 57
    paren_exp         go to state 58
    vtupleExpr        go to state 59
    vstructExpr       go to state 60
    primary_exp       go to state 61
    int_expr          go to state 62
    stringls          go to state 63
    if_exp            go to state 64
    chain_exp         go to state 65
    lambda_exp        go to state 66
    postfix_exp       go to state 67
    tcall_exp         go to state 68
    vcall_exp         go to state 69
    dot_name_exp      go to state 70
    dot_index_exp     go to state 71
    unary_exp         go to state 72
    unary_op          go to state 73
    binary_exp        go to state 74
    mul_binary_exp    go to state 75
    add_binary_exp    go to state 76
    cmp_binary_exp    go to state 77
    eq_binary_exp     go to state 78
    and_binary_exp    go to state 79
    xor_binary_exp    go to state 80
    or_binary_exp     go to state 81
    typespec          go to state 222
    primary_typespec  go to state 106
    paren_typespec    go to state 107
    tuple_typespec    go to state 108
    mod_prefix_tid    go to state 109
    mod_prefix        go to state 110
    fn_typespec       go to state 111
    postfix_typespec  go to state 112
    tcall_typespec    go to state 113
    dot_typespec      go to state 114
    unary_typespec    go to state 115
    targ              go to state 223
    targ_cl           go to state 224


State 137

  103 unary_exp: unary_op unary_exp •

    $default  reduce using rule 103 (unary_exp)


State 138

  110 mul_binary_op: "*" •

    $default  reduce using rule 110 (mul_binary_op)


State 139

  111 mul_binary_op: "/" •

    $default  reduce using rule 111 (mul_binary_op)


State 140

  112 mul_binary_op: "%" •

    $default  reduce using rule 112 (mul_binary_op)


State 141

  114 mul_binary_exp: mul_binary_exp mul_binary_op • unary_exp

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "fn"                     shift, and go to state 40
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    vid            go to state 53
    floatl         go to state 54
    bracketed_exp  go to state 56
    unit_exp       go to state 57
    paren_exp      go to state 58
    vtupleExpr     go to state 59
    vstructExpr    go to state 60
    primary_exp    go to state 61
    int_expr       go to state 62
    stringls       go to state 63
    if_exp         go to state 64
    chain_exp      go to state 65
    lambda_exp     go to state 66
    postfix_exp    go to state 67
    tcall_exp      go to state 68
    vcall_exp      go to state 69
    dot_name_exp   go to state 70
    dot_index_exp  go to state 71
    unary_exp      go to state 225
    unary_op       go to state 73


State 142

  115 add_binary_op: "+" •

    $default  reduce using rule 115 (add_binary_op)


State 143

  116 add_binary_op: "-" •

    $default  reduce using rule 116 (add_binary_op)


State 144

  118 add_binary_exp: add_binary_exp add_binary_op • mul_binary_exp

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "fn"                     shift, and go to state 40
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    vid             go to state 53
    floatl          go to state 54
    bracketed_exp   go to state 56
    unit_exp        go to state 57
    paren_exp       go to state 58
    vtupleExpr      go to state 59
    vstructExpr     go to state 60
    primary_exp     go to state 61
    int_expr        go to state 62
    stringls        go to state 63
    if_exp          go to state 64
    chain_exp       go to state 65
    lambda_exp      go to state 66
    postfix_exp     go to state 67
    tcall_exp       go to state 68
    vcall_exp       go to state 69
    dot_name_exp    go to state 70
    dot_index_exp   go to state 71
    unary_exp       go to state 72
    unary_op        go to state 73
    mul_binary_exp  go to state 226


State 145

  119 cmp_binary_op: "<" •

    $default  reduce using rule 119 (cmp_binary_op)


State 146

  120 cmp_binary_op: "<=" •

    $default  reduce using rule 120 (cmp_binary_op)


State 147

  121 cmp_binary_op: ">" •

    $default  reduce using rule 121 (cmp_binary_op)


State 148

  122 cmp_binary_op: ">=" •

    $default  reduce using rule 122 (cmp_binary_op)


State 149

  124 cmp_binary_exp: cmp_binary_exp cmp_binary_op • add_binary_exp

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "fn"                     shift, and go to state 40
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    vid             go to state 53
    floatl          go to state 54
    bracketed_exp   go to state 56
    unit_exp        go to state 57
    paren_exp       go to state 58
    vtupleExpr      go to state 59
    vstructExpr     go to state 60
    primary_exp     go to state 61
    int_expr        go to state 62
    stringls        go to state 63
    if_exp          go to state 64
    chain_exp       go to state 65
    lambda_exp      go to state 66
    postfix_exp     go to state 67
    tcall_exp       go to state 68
    vcall_exp       go to state 69
    dot_name_exp    go to state 70
    dot_index_exp   go to state 71
    unary_exp       go to state 72
    unary_op        go to state 73
    mul_binary_exp  go to state 75
    add_binary_exp  go to state 227


State 150

  125 eq_binary_op: "==" •

    $default  reduce using rule 125 (eq_binary_op)


State 151

  126 eq_binary_op: "!=" •

    $default  reduce using rule 126 (eq_binary_op)


State 152

  128 eq_binary_exp: eq_binary_exp eq_binary_op • cmp_binary_exp

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "fn"                     shift, and go to state 40
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    vid             go to state 53
    floatl          go to state 54
    bracketed_exp   go to state 56
    unit_exp        go to state 57
    paren_exp       go to state 58
    vtupleExpr      go to state 59
    vstructExpr     go to state 60
    primary_exp     go to state 61
    int_expr        go to state 62
    stringls        go to state 63
    if_exp          go to state 64
    chain_exp       go to state 65
    lambda_exp      go to state 66
    postfix_exp     go to state 67
    tcall_exp       go to state 68
    vcall_exp       go to state 69
    dot_name_exp    go to state 70
    dot_index_exp   go to state 71
    unary_exp       go to state 72
    unary_op        go to state 73
    mul_binary_exp  go to state 75
    add_binary_exp  go to state 76
    cmp_binary_exp  go to state 228


State 153

  130 and_binary_exp: and_binary_exp "and" • eq_binary_exp

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "fn"                     shift, and go to state 40
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    vid             go to state 53
    floatl          go to state 54
    bracketed_exp   go to state 56
    unit_exp        go to state 57
    paren_exp       go to state 58
    vtupleExpr      go to state 59
    vstructExpr     go to state 60
    primary_exp     go to state 61
    int_expr        go to state 62
    stringls        go to state 63
    if_exp          go to state 64
    chain_exp       go to state 65
    lambda_exp      go to state 66
    postfix_exp     go to state 67
    tcall_exp       go to state 68
    vcall_exp       go to state 69
    dot_name_exp    go to state 70
    dot_index_exp   go to state 71
    unary_exp       go to state 72
    unary_op        go to state 73
    mul_binary_exp  go to state 75
    add_binary_exp  go to state 76
    cmp_binary_exp  go to state 77
    eq_binary_exp   go to state 229


State 154

  132 xor_binary_exp: xor_binary_exp "xor" • and_binary_exp

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "fn"                     shift, and go to state 40
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    vid             go to state 53
    floatl          go to state 54
    bracketed_exp   go to state 56
    unit_exp        go to state 57
    paren_exp       go to state 58
    vtupleExpr      go to state 59
    vstructExpr     go to state 60
    primary_exp     go to state 61
    int_expr        go to state 62
    stringls        go to state 63
    if_exp          go to state 64
    chain_exp       go to state 65
    lambda_exp      go to state 66
    postfix_exp     go to state 67
    tcall_exp       go to state 68
    vcall_exp       go to state 69
    dot_name_exp    go to state 70
    dot_index_exp   go to state 71
    unary_exp       go to state 72
    unary_op        go to state 73
    mul_binary_exp  go to state 75
    add_binary_exp  go to state 76
    cmp_binary_exp  go to state 77
    eq_binary_exp   go to state 78
    and_binary_exp  go to state 230


State 155

  134 or_binary_exp: or_binary_exp "or" • xor_binary_exp

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "fn"                     shift, and go to state 40
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    vid             go to state 53
    floatl          go to state 54
    bracketed_exp   go to state 56
    unit_exp        go to state 57
    paren_exp       go to state 58
    vtupleExpr      go to state 59
    vstructExpr     go to state 60
    primary_exp     go to state 61
    int_expr        go to state 62
    stringls        go to state 63
    if_exp          go to state 64
    chain_exp       go to state 65
    lambda_exp      go to state 66
    postfix_exp     go to state 67
    tcall_exp       go to state 68
    vcall_exp       go to state 69
    dot_name_exp    go to state 70
    dot_index_exp   go to state 71
    unary_exp       go to state 72
    unary_op        go to state 73
    mul_binary_exp  go to state 75
    add_binary_exp  go to state 76
    cmp_binary_exp  go to state 77
    eq_binary_exp   go to state 78
    and_binary_exp  go to state 79
    xor_binary_exp  go to state 231


State 156

  192 tpattern: "[" • tpattern_field_cl "]"

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84

    tid                go to state 232
    vid                go to state 233
    tpattern_field     go to state 234
    tpattern_field_cl  go to state 235


State 157

  193 tpattern: "!" • "[" tpattern_field_cl "]"

    "["  shift, and go to state 236


State 158

   28 fn_stmt: "fn" vid vpattern • "->" typespec "=" bracketed_exp
   30        | "fn" vid vpattern • "=" bracketed_exp

    "->"  shift, and go to state 237
    "="   shift, and go to state 238


State 159

  202 tpattern_seq: tpattern •

    $default  reduce using rule 202 (tpattern_seq)


State 160

   29 fn_stmt: "fn" vid tpattern_seq • vpattern "->" typespec "=" bracketed_exp
   31        | "fn" vid tpattern_seq • vpattern "=" bracketed_exp
  203 tpattern_seq: tpattern_seq • tpattern

    "("  shift, and go to state 93
    "["  shift, and go to state 156
    "!"  shift, and go to state 157

    vpattern  go to state 239
    tpattern  go to state 240


State 161

   32 type_stmt: "type" tid "=" • long_typespec

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84
    "Fn"        shift, and go to state 95
    "("         shift, and go to state 241
    "{"         shift, and go to state 242

    tid               go to state 98
    vid               go to state 243
    primary_typespec  go to state 106
    paren_typespec    go to state 107
    tuple_typespec    go to state 108
    mod_prefix_tid    go to state 109
    mod_prefix        go to state 110
    fn_typespec       go to state 111
    postfix_typespec  go to state 112
    tcall_typespec    go to state 113
    dot_typespec      go to state 114
    unary_typespec    go to state 244
    long_typespec     go to state 245
    struct_typespec   go to state 246


State 162

   33 type_stmt: "type" tid tpattern_seq • "=" long_typespec
  203 tpattern_seq: tpattern_seq • tpattern

    "["  shift, and go to state 156
    "="  shift, and go to state 247
    "!"  shift, and go to state 157

    tpattern  go to state 240


State 163

   35 enum_field_pl: "|" • unprefixed_enum_field_pl

    "<TypeId>"  shift, and go to state 84

    unprefixed_enum_field_pl  go to state 248
    enum_field                go to state 166
    tid                       go to state 167


State 164

   34 enum_stmt: "enum" tid enum_field_pl •

    $default  reduce using rule 34 (enum_stmt)


State 165

   36 enum_field_pl: unprefixed_enum_field_pl •
   38 unprefixed_enum_field_pl: unprefixed_enum_field_pl • "|" enum_field

    "|"  shift, and go to state 249

    $default  reduce using rule 36 (enum_field_pl)


State 166

   37 unprefixed_enum_field_pl: enum_field •

    $default  reduce using rule 37 (unprefixed_enum_field_pl)


State 167

   39 enum_field: tid •
   40           | tid • "(" ")"
   41           | tid • "(" typespec_cl1 ")"

    "("  shift, and go to state 250

    $default  reduce using rule 39 (enum_field)


State 168

   42 typeclass_stmt: "typeclass" tid "<" • tid typespec ">" "=" "{" expr_sl "}"
   43               | "typeclass" tid "<" • tid typespec ">" tpattern_seq "=" "{" expr_sl "}"

    "<TypeId>"  shift, and go to state 84

    tid  go to state 251


State 169

    9 moduleContent: moduleContent moduleContentStmt ";" •

    $default  reduce using rule 9 (moduleContent)


State 170

   45 import_stmt: "import" vid "from" stringl "type" stringl •

    $default  reduce using rule 45 (import_stmt)


State 171

   82 if_exp: "if" bracketed_exp "then" • bracketed_exp
   83       | "if" bracketed_exp "then" • bracketed_exp "else" primary_exp

    "("  shift, and go to state 47
    "{"  shift, and go to state 48

    bracketed_exp  go to state 252
    unit_exp       go to state 57
    paren_exp      go to state 58
    vtupleExpr     go to state 59
    vstructExpr    go to state 60
    chain_exp      go to state 65


State 172

  180 vpattern_field: "out" • vid typespec

    "<val_id>"  shift, and go to state 11

    vid  go to state 253


State 173

  181 vpattern_field: "inout" • vid typespec

    "<val_id>"  shift, and go to state 11

    vid  go to state 254


State 174

  191 vpattern: "(" ")" •

    $default  reduce using rule 191 (vpattern)


State 175

  179 vpattern_field: vid • typespec

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84
    "Fn"        shift, and go to state 95
    "("         shift, and go to state 241

    tid               go to state 98
    vid               go to state 243
    typespec          go to state 255
    primary_typespec  go to state 106
    paren_typespec    go to state 107
    tuple_typespec    go to state 108
    mod_prefix_tid    go to state 109
    mod_prefix        go to state 110
    fn_typespec       go to state 111
    postfix_typespec  go to state 112
    tcall_typespec    go to state 113
    dot_typespec      go to state 114
    unary_typespec    go to state 115


State 176

  194 vpattern_field_cl: vpattern_field •

    $default  reduce using rule 194 (vpattern_field_cl)


State 177

  190 vpattern: "(" vpattern_field_cl • ")"
  195 vpattern_field_cl: vpattern_field_cl • "," vpattern_field

    ","  shift, and go to state 256
    ")"  shift, and go to state 257


State 178

   89 lambda_exp: "fn" vpattern "=" • bracketed_exp

    "("  shift, and go to state 47
    "{"  shift, and go to state 48

    bracketed_exp  go to state 258
    unit_exp       go to state 57
    paren_exp      go to state 58
    vtupleExpr     go to state 59
    vstructExpr    go to state 60
    chain_exp      go to state 65


State 179

  159 fn_typespec: "Fn" vpattern • primary_typespec

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84
    "Fn"        shift, and go to state 95
    "("         shift, and go to state 241

    tid               go to state 98
    vid               go to state 243
    primary_typespec  go to state 259
    paren_typespec    go to state 107
    tuple_typespec    go to state 108
    mod_prefix_tid    go to state 109
    mod_prefix        go to state 110
    fn_typespec       go to state 111


State 180

  136 type_query_exp: typespec • type_query_op typespec
  143 typespec_cl2: typespec • "," typespec
  153 paren_typespec: "(" typespec • ")"
  154 tuple_typespec: "(" typespec • "," ")"

    ","   shift, and go to state 260
    "::"  shift, and go to state 187
    ")"   shift, and go to state 261
    ":<"  shift, and go to state 188
    ">:"  shift, and go to state 189

    type_query_op  go to state 190


State 181

  144 typespec_cl2: typespec_cl2 • "," typespec
  155 tuple_typespec: "(" typespec_cl2 • ")"

    ","  shift, and go to state 262
    ")"  shift, and go to state 263


State 182

  157 mod_prefix: vid "." •

    $default  reduce using rule 157 (mod_prefix)


State 183

   54 expr_cl2: expr "," • expr
   66 vtupleExpr: "(" expr "," • ")"

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "fn"                     shift, and go to state 40
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    ")"                      shift, and go to state 264
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    vid             go to state 53
    floatl          go to state 54
    expr            go to state 265
    bracketed_exp   go to state 56
    unit_exp        go to state 57
    paren_exp       go to state 58
    vtupleExpr      go to state 59
    vstructExpr     go to state 60
    primary_exp     go to state 61
    int_expr        go to state 62
    stringls        go to state 63
    if_exp          go to state 64
    chain_exp       go to state 65
    lambda_exp      go to state 66
    postfix_exp     go to state 67
    tcall_exp       go to state 68
    vcall_exp       go to state 69
    dot_name_exp    go to state 70
    dot_index_exp   go to state 71
    unary_exp       go to state 72
    unary_op        go to state 73
    binary_exp      go to state 74
    mul_binary_exp  go to state 75
    add_binary_exp  go to state 76
    cmp_binary_exp  go to state 77
    eq_binary_exp   go to state 78
    and_binary_exp  go to state 79
    xor_binary_exp  go to state 80
    or_binary_exp   go to state 81


State 184

   65 paren_exp: "(" long_exp ")" •

    $default  reduce using rule 65 (paren_exp)


State 185

   55 expr_cl2: expr_cl2 "," • expr

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "fn"                     shift, and go to state 40
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    vid             go to state 53
    floatl          go to state 54
    expr            go to state 266
    bracketed_exp   go to state 56
    unit_exp        go to state 57
    paren_exp       go to state 58
    vtupleExpr      go to state 59
    vstructExpr     go to state 60
    primary_exp     go to state 61
    int_expr        go to state 62
    stringls        go to state 63
    if_exp          go to state 64
    chain_exp       go to state 65
    lambda_exp      go to state 66
    postfix_exp     go to state 67
    tcall_exp       go to state 68
    vcall_exp       go to state 69
    dot_name_exp    go to state 70
    dot_index_exp   go to state 71
    unary_exp       go to state 72
    unary_op        go to state 73
    binary_exp      go to state 74
    mul_binary_exp  go to state 75
    add_binary_exp  go to state 76
    cmp_binary_exp  go to state 77
    eq_binary_exp   go to state 78
    and_binary_exp  go to state 79
    xor_binary_exp  go to state 80
    or_binary_exp   go to state 81


State 186

   67 vtupleExpr: "(" expr_cl2 ")" •

    $default  reduce using rule 67 (vtupleExpr)


State 187

  139 type_query_op: "::" •

    $default  reduce using rule 139 (type_query_op)


State 188

  137 type_query_op: ":<" •

    $default  reduce using rule 137 (type_query_op)


State 189

  138 type_query_op: ">:" •

    $default  reduce using rule 138 (type_query_op)


State 190

  136 type_query_exp: typespec type_query_op • typespec

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84
    "Fn"        shift, and go to state 95
    "("         shift, and go to state 241

    tid               go to state 98
    vid               go to state 243
    typespec          go to state 267
    primary_typespec  go to state 106
    paren_typespec    go to state 107
    tuple_typespec    go to state 108
    mod_prefix_tid    go to state 109
    mod_prefix        go to state 110
    fn_typespec       go to state 111
    postfix_typespec  go to state 112
    tcall_typespec    go to state 113
    dot_typespec      go to state 114
    unary_typespec    go to state 115


State 191

  156 mod_prefix_tid: mod_prefix tid •

    $default  reduce using rule 156 (mod_prefix_tid)


State 192

  158 mod_prefix: mod_prefix vid • "."

    "."  shift, and go to state 268


State 193

  164 dot_typespec: postfix_typespec "." • "<val_id>"

    "<val_id>"  shift, and go to state 269


State 194

  163 tcall_typespec: postfix_typespec "[" • targ_cl "]"

    "<val_id>"               shift, and go to state 11
    "<TypeId>"               shift, and go to state 84
    "if"                     shift, and go to state 39
    "fn"                     shift, and go to state 40
    "Fn"                     shift, and go to state 95
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 96
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    tid               go to state 98
    vid               go to state 99
    floatl            go to state 54
    expr              go to state 221
    bracketed_exp     go to state 56
    unit_exp          go to state 57
    paren_exp         go to state 58
    vtupleExpr        go to state 59
    vstructExpr       go to state 60
    primary_exp       go to state 61
    int_expr          go to state 62
    stringls          go to state 63
    if_exp            go to state 64
    chain_exp         go to state 65
    lambda_exp        go to state 66
    postfix_exp       go to state 67
    tcall_exp         go to state 68
    vcall_exp         go to state 69
    dot_name_exp      go to state 70
    dot_index_exp     go to state 71
    unary_exp         go to state 72
    unary_op          go to state 73
    binary_exp        go to state 74
    mul_binary_exp    go to state 75
    add_binary_exp    go to state 76
    cmp_binary_exp    go to state 77
    eq_binary_exp     go to state 78
    and_binary_exp    go to state 79
    xor_binary_exp    go to state 80
    or_binary_exp     go to state 81
    typespec          go to state 222
    primary_typespec  go to state 106
    paren_typespec    go to state 107
    tuple_typespec    go to state 108
    mod_prefix_tid    go to state 109
    mod_prefix        go to state 110
    fn_typespec       go to state 111
    postfix_typespec  go to state 112
    tcall_typespec    go to state 113
    dot_typespec      go to state 114
    unary_typespec    go to state 115
    targ              go to state 223
    targ_cl           go to state 270


State 195

  186 lpattern: "(" • lpattern_field_cl ")"
  187         | "(" • ")"

    "<val_id>"  shift, and go to state 11
    ")"         shift, and go to state 271

    vid                go to state 196
    lpattern_field     go to state 272
    lpattern_field_cl  go to state 273


State 196

  182 lpattern_field: vid • typespec
  183               | vid •

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84
    "Fn"        shift, and go to state 95
    "("         shift, and go to state 241

    $default  reduce using rule 183 (lpattern_field)

    tid               go to state 98
    vid               go to state 243
    typespec          go to state 274
    primary_typespec  go to state 106
    paren_typespec    go to state 107
    tuple_typespec    go to state 108
    mod_prefix_tid    go to state 109
    mod_prefix        go to state 110
    fn_typespec       go to state 111
    postfix_typespec  go to state 112
    tcall_typespec    go to state 113
    dot_typespec      go to state 114
    unary_typespec    go to state 115


State 197

  188 lpattern_naked: lpattern_field •

    $default  reduce using rule 188 (lpattern_naked)


State 198

  189 lpattern_naked: lpattern •

    $default  reduce using rule 189 (lpattern_naked)


State 199

   15 const_stmt: "const" lpattern_naked • "=" expr

    "="  shift, and go to state 275


State 200

   16 val_stmt: "val" lpattern_naked • "=" expr

    "="  shift, and go to state 276


State 201

   17 var_stmt: "var" lpattern_naked • "=" expr

    "="  shift, and go to state 277


State 202

   18 set_stmt: "set" expr • "=" expr

    "="  shift, and go to state 278


State 203

   87 chain_prefix: chain_prefix_stmt ";" •

    $default  reduce using rule 87 (chain_prefix)


State 204

  178 struct_exp_field: vid "=" • expr

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "fn"                     shift, and go to state 40
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    vid             go to state 53
    floatl          go to state 54
    expr            go to state 279
    bracketed_exp   go to state 56
    unit_exp        go to state 57
    paren_exp       go to state 58
    vtupleExpr      go to state 59
    vstructExpr     go to state 60
    primary_exp     go to state 61
    int_expr        go to state 62
    stringls        go to state 63
    if_exp          go to state 64
    chain_exp       go to state 65
    lambda_exp      go to state 66
    postfix_exp     go to state 67
    tcall_exp       go to state 68
    vcall_exp       go to state 69
    dot_name_exp    go to state 70
    dot_index_exp   go to state 71
    unary_exp       go to state 72
    unary_op        go to state 73
    binary_exp      go to state 74
    mul_binary_exp  go to state 75
    add_binary_exp  go to state 76
    cmp_binary_exp  go to state 77
    eq_binary_exp   go to state 78
    and_binary_exp  go to state 79
    xor_binary_exp  go to state 80
    or_binary_exp   go to state 81


State 205

   84 chain_exp: "{" expr "}" •

    $default  reduce using rule 84 (chain_exp)


State 206

   85 chain_exp: "{" chain_prefix "}" •

    $default  reduce using rule 85 (chain_exp)


State 207

   88 chain_prefix: chain_prefix chain_prefix_stmt • ";"

    ";"  shift, and go to state 280


State 208

   19 discard_stmt: expr •
   86 chain_exp: "{" chain_prefix expr • "}"

    "}"  shift, and go to state 281

    $default  reduce using rule 19 (discard_stmt)


State 209

  201 struct_exp_field_cl: struct_exp_field_cl "," • struct_exp_field

    "<val_id>"  shift, and go to state 11

    vid               go to state 282
    struct_exp_field  go to state 283


State 210

   68 vstructExpr: "{" struct_exp_field_cl "}" •

    $default  reduce using rule 68 (vstructExpr)


State 211

   98 dot_name_exp: postfix_exp "." "<val_id>" •

    $default  reduce using rule 98 (dot_name_exp)


State 212

   99 dot_name_exp: postfix_exp "." "<TypeId>" •

    $default  reduce using rule 99 (dot_name_exp)


State 213

  101 dot_index_exp: postfix_exp "." bracketed_exp •

    $default  reduce using rule 101 (dot_index_exp)


State 214

  100 dot_index_exp: postfix_exp "." int_expr •

    $default  reduce using rule 100 (dot_index_exp)


State 215

  174 varg: "out" • expr

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "fn"                     shift, and go to state 40
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    vid             go to state 53
    floatl          go to state 54
    expr            go to state 284
    bracketed_exp   go to state 56
    unit_exp        go to state 57
    paren_exp       go to state 58
    vtupleExpr      go to state 59
    vstructExpr     go to state 60
    primary_exp     go to state 61
    int_expr        go to state 62
    stringls        go to state 63
    if_exp          go to state 64
    chain_exp       go to state 65
    lambda_exp      go to state 66
    postfix_exp     go to state 67
    tcall_exp       go to state 68
    vcall_exp       go to state 69
    dot_name_exp    go to state 70
    dot_index_exp   go to state 71
    unary_exp       go to state 72
    unary_op        go to state 73
    binary_exp      go to state 74
    mul_binary_exp  go to state 75
    add_binary_exp  go to state 76
    cmp_binary_exp  go to state 77
    eq_binary_exp   go to state 78
    and_binary_exp  go to state 79
    xor_binary_exp  go to state 80
    or_binary_exp   go to state 81


State 216

  175 varg: "inout" • expr

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "fn"                     shift, and go to state 40
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    vid             go to state 53
    floatl          go to state 54
    expr            go to state 285
    bracketed_exp   go to state 56
    unit_exp        go to state 57
    paren_exp       go to state 58
    vtupleExpr      go to state 59
    vstructExpr     go to state 60
    primary_exp     go to state 61
    int_expr        go to state 62
    stringls        go to state 63
    if_exp          go to state 64
    chain_exp       go to state 65
    lambda_exp      go to state 66
    postfix_exp     go to state 67
    tcall_exp       go to state 68
    vcall_exp       go to state 69
    dot_name_exp    go to state 70
    dot_index_exp   go to state 71
    unary_exp       go to state 72
    unary_op        go to state 73
    binary_exp      go to state 74
    mul_binary_exp  go to state 75
    add_binary_exp  go to state 76
    cmp_binary_exp  go to state 77
    eq_binary_exp   go to state 78
    and_binary_exp  go to state 79
    xor_binary_exp  go to state 80
    or_binary_exp   go to state 81


State 217

   96 vcall_exp: postfix_exp "(" ")" •

    $default  reduce using rule 96 (vcall_exp)


State 218

  173 varg: expr •

    $default  reduce using rule 173 (varg)


State 219

  176 varg_cl: varg •

    $default  reduce using rule 176 (varg_cl)


State 220

   97 vcall_exp: postfix_exp "(" varg_cl • ")"
  177 varg_cl: varg_cl • "," varg

    ","  shift, and go to state 286
    ")"  shift, and go to state 287


State 221

  170 targ: expr •

    $default  reduce using rule 170 (targ)


State 222

  169 targ: typespec •

    $default  reduce using rule 169 (targ)


State 223

  171 targ_cl: targ •

    $default  reduce using rule 171 (targ_cl)


State 224

   95 tcall_exp: postfix_exp "[" targ_cl • "]"
  172 targ_cl: targ_cl • "," targ

    ","  shift, and go to state 288
    "]"  shift, and go to state 289


State 225

  114 mul_binary_exp: mul_binary_exp mul_binary_op unary_exp •

    $default  reduce using rule 114 (mul_binary_exp)


State 226

  114 mul_binary_exp: mul_binary_exp • mul_binary_op unary_exp
  118 add_binary_exp: add_binary_exp add_binary_op mul_binary_exp •

    "*"  shift, and go to state 138
    "/"  shift, and go to state 139
    "%"  shift, and go to state 140

    $default  reduce using rule 118 (add_binary_exp)

    mul_binary_op  go to state 141


State 227

  118 add_binary_exp: add_binary_exp • add_binary_op mul_binary_exp
  124 cmp_binary_exp: cmp_binary_exp cmp_binary_op add_binary_exp •

    "+"  shift, and go to state 142
    "-"  shift, and go to state 143

    $default  reduce using rule 124 (cmp_binary_exp)

    add_binary_op  go to state 144


State 228

  124 cmp_binary_exp: cmp_binary_exp • cmp_binary_op add_binary_exp
  128 eq_binary_exp: eq_binary_exp eq_binary_op cmp_binary_exp •

    "<"   shift, and go to state 145
    "<="  shift, and go to state 146
    ">"   shift, and go to state 147
    ">="  shift, and go to state 148

    $default  reduce using rule 128 (eq_binary_exp)

    cmp_binary_op  go to state 149


State 229

  128 eq_binary_exp: eq_binary_exp • eq_binary_op cmp_binary_exp
  130 and_binary_exp: and_binary_exp "and" eq_binary_exp •

    "=="  shift, and go to state 150
    "!="  shift, and go to state 151

    $default  reduce using rule 130 (and_binary_exp)

    eq_binary_op  go to state 152


State 230

  130 and_binary_exp: and_binary_exp • "and" eq_binary_exp
  132 xor_binary_exp: xor_binary_exp "xor" and_binary_exp •

    "and"  shift, and go to state 153

    $default  reduce using rule 132 (xor_binary_exp)


State 231

  132 xor_binary_exp: xor_binary_exp • "xor" and_binary_exp
  134 or_binary_exp: or_binary_exp "or" xor_binary_exp •

    "xor"  shift, and go to state 154

    $default  reduce using rule 134 (or_binary_exp)


State 232

  185 tpattern_field: tid • typespec

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84
    "Fn"        shift, and go to state 95
    "("         shift, and go to state 241

    tid               go to state 98
    vid               go to state 243
    typespec          go to state 290
    primary_typespec  go to state 106
    paren_typespec    go to state 107
    tuple_typespec    go to state 108
    mod_prefix_tid    go to state 109
    mod_prefix        go to state 110
    fn_typespec       go to state 111
    postfix_typespec  go to state 112
    tcall_typespec    go to state 113
    dot_typespec      go to state 114
    unary_typespec    go to state 115


State 233

  184 tpattern_field: vid • typespec

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84
    "Fn"        shift, and go to state 95
    "("         shift, and go to state 241

    tid               go to state 98
    vid               go to state 243
    typespec          go to state 291
    primary_typespec  go to state 106
    paren_typespec    go to state 107
    tuple_typespec    go to state 108
    mod_prefix_tid    go to state 109
    mod_prefix        go to state 110
    fn_typespec       go to state 111
    postfix_typespec  go to state 112
    tcall_typespec    go to state 113
    dot_typespec      go to state 114
    unary_typespec    go to state 115


State 234

  198 tpattern_field_cl: tpattern_field •

    $default  reduce using rule 198 (tpattern_field_cl)


State 235

  192 tpattern: "[" tpattern_field_cl • "]"
  199 tpattern_field_cl: tpattern_field_cl • "," tpattern_field

    ","  shift, and go to state 292
    "]"  shift, and go to state 293


State 236

  193 tpattern: "!" "[" • tpattern_field_cl "]"

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84

    tid                go to state 232
    vid                go to state 233
    tpattern_field     go to state 234
    tpattern_field_cl  go to state 294


State 237

   28 fn_stmt: "fn" vid vpattern "->" • typespec "=" bracketed_exp

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84
    "Fn"        shift, and go to state 95
    "("         shift, and go to state 241

    tid               go to state 98
    vid               go to state 243
    typespec          go to state 295
    primary_typespec  go to state 106
    paren_typespec    go to state 107
    tuple_typespec    go to state 108
    mod_prefix_tid    go to state 109
    mod_prefix        go to state 110
    fn_typespec       go to state 111
    postfix_typespec  go to state 112
    tcall_typespec    go to state 113
    dot_typespec      go to state 114
    unary_typespec    go to state 115


State 238

   30 fn_stmt: "fn" vid vpattern "=" • bracketed_exp

    "("  shift, and go to state 47
    "{"  shift, and go to state 48

    bracketed_exp  go to state 296
    unit_exp       go to state 57
    paren_exp      go to state 58
    vtupleExpr     go to state 59
    vstructExpr    go to state 60
    chain_exp      go to state 65


State 239

   29 fn_stmt: "fn" vid tpattern_seq vpattern • "->" typespec "=" bracketed_exp
   31        | "fn" vid tpattern_seq vpattern • "=" bracketed_exp

    "->"  shift, and go to state 297
    "="   shift, and go to state 298


State 240

  203 tpattern_seq: tpattern_seq tpattern •

    $default  reduce using rule 203 (tpattern_seq)


State 241

  153 paren_typespec: "(" • typespec ")"
  154 tuple_typespec: "(" • typespec "," ")"
  155               | "(" • typespec_cl2 ")"

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84
    "Fn"        shift, and go to state 95
    "("         shift, and go to state 241

    tid               go to state 98
    vid               go to state 243
    typespec          go to state 299
    typespec_cl2      go to state 181
    primary_typespec  go to state 106
    paren_typespec    go to state 107
    tuple_typespec    go to state 108
    mod_prefix_tid    go to state 109
    mod_prefix        go to state 110
    fn_typespec       go to state 111
    postfix_typespec  go to state 112
    tcall_typespec    go to state 113
    dot_typespec      go to state 114
    unary_typespec    go to state 115


State 242

  168 struct_typespec: "{" • struct_typespec_field_cl "}"

    "<val_id>"  shift, and go to state 11

    vid                       go to state 300
    struct_typespec_field     go to state 301
    struct_typespec_field_cl  go to state 302


State 243

  157 mod_prefix: vid • "."

    "."  shift, and go to state 182


State 244

  166 long_typespec: unary_typespec •

    $default  reduce using rule 166 (long_typespec)


State 245

   32 type_stmt: "type" tid "=" long_typespec •

    $default  reduce using rule 32 (type_stmt)


State 246

  167 long_typespec: struct_typespec •

    $default  reduce using rule 167 (long_typespec)


State 247

   33 type_stmt: "type" tid tpattern_seq "=" • long_typespec

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84
    "Fn"        shift, and go to state 95
    "("         shift, and go to state 241
    "{"         shift, and go to state 242

    tid               go to state 98
    vid               go to state 243
    primary_typespec  go to state 106
    paren_typespec    go to state 107
    tuple_typespec    go to state 108
    mod_prefix_tid    go to state 109
    mod_prefix        go to state 110
    fn_typespec       go to state 111
    postfix_typespec  go to state 112
    tcall_typespec    go to state 113
    dot_typespec      go to state 114
    unary_typespec    go to state 244
    long_typespec     go to state 303
    struct_typespec   go to state 246


State 248

   35 enum_field_pl: "|" unprefixed_enum_field_pl •
   38 unprefixed_enum_field_pl: unprefixed_enum_field_pl • "|" enum_field

    "|"  shift, and go to state 249

    $default  reduce using rule 35 (enum_field_pl)


State 249

   38 unprefixed_enum_field_pl: unprefixed_enum_field_pl "|" • enum_field

    "<TypeId>"  shift, and go to state 84

    enum_field  go to state 304
    tid         go to state 167


State 250

   40 enum_field: tid "(" • ")"
   41           | tid "(" • typespec_cl1 ")"

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84
    "Fn"        shift, and go to state 95
    "("         shift, and go to state 241
    ")"         shift, and go to state 305

    tid               go to state 98
    vid               go to state 243
    typespec          go to state 306
    typespec_cl1      go to state 307
    primary_typespec  go to state 106
    paren_typespec    go to state 107
    tuple_typespec    go to state 108
    mod_prefix_tid    go to state 109
    mod_prefix        go to state 110
    fn_typespec       go to state 111
    postfix_typespec  go to state 112
    tcall_typespec    go to state 113
    dot_typespec      go to state 114
    unary_typespec    go to state 115


State 251

   42 typeclass_stmt: "typeclass" tid "<" tid • typespec ">" "=" "{" expr_sl "}"
   43               | "typeclass" tid "<" tid • typespec ">" tpattern_seq "=" "{" expr_sl "}"

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84
    "Fn"        shift, and go to state 95
    "("         shift, and go to state 241

    tid               go to state 98
    vid               go to state 243
    typespec          go to state 308
    primary_typespec  go to state 106
    paren_typespec    go to state 107
    tuple_typespec    go to state 108
    mod_prefix_tid    go to state 109
    mod_prefix        go to state 110
    fn_typespec       go to state 111
    postfix_typespec  go to state 112
    tcall_typespec    go to state 113
    dot_typespec      go to state 114
    unary_typespec    go to state 115


State 252

   82 if_exp: "if" bracketed_exp "then" bracketed_exp •
   83       | "if" bracketed_exp "then" bracketed_exp • "else" primary_exp

    "else"  shift, and go to state 309

    $default  reduce using rule 82 (if_exp)


State 253

  180 vpattern_field: "out" vid • typespec

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84
    "Fn"        shift, and go to state 95
    "("         shift, and go to state 241

    tid               go to state 98
    vid               go to state 243
    typespec          go to state 310
    primary_typespec  go to state 106
    paren_typespec    go to state 107
    tuple_typespec    go to state 108
    mod_prefix_tid    go to state 109
    mod_prefix        go to state 110
    fn_typespec       go to state 111
    postfix_typespec  go to state 112
    tcall_typespec    go to state 113
    dot_typespec      go to state 114
    unary_typespec    go to state 115


State 254

  181 vpattern_field: "inout" vid • typespec

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84
    "Fn"        shift, and go to state 95
    "("         shift, and go to state 241

    tid               go to state 98
    vid               go to state 243
    typespec          go to state 311
    primary_typespec  go to state 106
    paren_typespec    go to state 107
    tuple_typespec    go to state 108
    mod_prefix_tid    go to state 109
    mod_prefix        go to state 110
    fn_typespec       go to state 111
    postfix_typespec  go to state 112
    tcall_typespec    go to state 113
    dot_typespec      go to state 114
    unary_typespec    go to state 115


State 255

  179 vpattern_field: vid typespec •

    $default  reduce using rule 179 (vpattern_field)


State 256

  195 vpattern_field_cl: vpattern_field_cl "," • vpattern_field

    "<val_id>"  shift, and go to state 11
    "out"       shift, and go to state 172
    "inout"     shift, and go to state 173

    vid             go to state 175
    vpattern_field  go to state 312


State 257

  190 vpattern: "(" vpattern_field_cl ")" •

    $default  reduce using rule 190 (vpattern)


State 258

   89 lambda_exp: "fn" vpattern "=" bracketed_exp •

    $default  reduce using rule 89 (lambda_exp)


State 259

  159 fn_typespec: "Fn" vpattern primary_typespec •

    $default  reduce using rule 159 (fn_typespec)


State 260

  143 typespec_cl2: typespec "," • typespec
  154 tuple_typespec: "(" typespec "," • ")"

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84
    "Fn"        shift, and go to state 95
    "("         shift, and go to state 241
    ")"         shift, and go to state 313

    tid               go to state 98
    vid               go to state 243
    typespec          go to state 314
    primary_typespec  go to state 106
    paren_typespec    go to state 107
    tuple_typespec    go to state 108
    mod_prefix_tid    go to state 109
    mod_prefix        go to state 110
    fn_typespec       go to state 111
    postfix_typespec  go to state 112
    tcall_typespec    go to state 113
    dot_typespec      go to state 114
    unary_typespec    go to state 115


State 261

  153 paren_typespec: "(" typespec ")" •

    $default  reduce using rule 153 (paren_typespec)


State 262

  144 typespec_cl2: typespec_cl2 "," • typespec

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84
    "Fn"        shift, and go to state 95
    "("         shift, and go to state 241

    tid               go to state 98
    vid               go to state 243
    typespec          go to state 315
    primary_typespec  go to state 106
    paren_typespec    go to state 107
    tuple_typespec    go to state 108
    mod_prefix_tid    go to state 109
    mod_prefix        go to state 110
    fn_typespec       go to state 111
    postfix_typespec  go to state 112
    tcall_typespec    go to state 113
    dot_typespec      go to state 114
    unary_typespec    go to state 115


State 263

  155 tuple_typespec: "(" typespec_cl2 ")" •

    $default  reduce using rule 155 (tuple_typespec)


State 264

   66 vtupleExpr: "(" expr "," ")" •

    $default  reduce using rule 66 (vtupleExpr)


State 265

   54 expr_cl2: expr "," expr •

    $default  reduce using rule 54 (expr_cl2)


State 266

   55 expr_cl2: expr_cl2 "," expr •

    $default  reduce using rule 55 (expr_cl2)


State 267

  136 type_query_exp: typespec type_query_op typespec •

    $default  reduce using rule 136 (type_query_exp)


State 268

  158 mod_prefix: mod_prefix vid "." •

    $default  reduce using rule 158 (mod_prefix)


State 269

  164 dot_typespec: postfix_typespec "." "<val_id>" •

    $default  reduce using rule 164 (dot_typespec)


State 270

  163 tcall_typespec: postfix_typespec "[" targ_cl • "]"
  172 targ_cl: targ_cl • "," targ

    ","  shift, and go to state 288
    "]"  shift, and go to state 316


State 271

  187 lpattern: "(" ")" •

    $default  reduce using rule 187 (lpattern)


State 272

  196 lpattern_field_cl: lpattern_field •

    $default  reduce using rule 196 (lpattern_field_cl)


State 273

  186 lpattern: "(" lpattern_field_cl • ")"
  197 lpattern_field_cl: lpattern_field_cl • "," lpattern_field

    ","  shift, and go to state 317
    ")"  shift, and go to state 318


State 274

  182 lpattern_field: vid typespec •

    $default  reduce using rule 182 (lpattern_field)


State 275

   15 const_stmt: "const" lpattern_naked "=" • expr

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "fn"                     shift, and go to state 40
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    vid             go to state 53
    floatl          go to state 54
    expr            go to state 319
    bracketed_exp   go to state 56
    unit_exp        go to state 57
    paren_exp       go to state 58
    vtupleExpr      go to state 59
    vstructExpr     go to state 60
    primary_exp     go to state 61
    int_expr        go to state 62
    stringls        go to state 63
    if_exp          go to state 64
    chain_exp       go to state 65
    lambda_exp      go to state 66
    postfix_exp     go to state 67
    tcall_exp       go to state 68
    vcall_exp       go to state 69
    dot_name_exp    go to state 70
    dot_index_exp   go to state 71
    unary_exp       go to state 72
    unary_op        go to state 73
    binary_exp      go to state 74
    mul_binary_exp  go to state 75
    add_binary_exp  go to state 76
    cmp_binary_exp  go to state 77
    eq_binary_exp   go to state 78
    and_binary_exp  go to state 79
    xor_binary_exp  go to state 80
    or_binary_exp   go to state 81


State 276

   16 val_stmt: "val" lpattern_naked "=" • expr

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "fn"                     shift, and go to state 40
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    vid             go to state 53
    floatl          go to state 54
    expr            go to state 320
    bracketed_exp   go to state 56
    unit_exp        go to state 57
    paren_exp       go to state 58
    vtupleExpr      go to state 59
    vstructExpr     go to state 60
    primary_exp     go to state 61
    int_expr        go to state 62
    stringls        go to state 63
    if_exp          go to state 64
    chain_exp       go to state 65
    lambda_exp      go to state 66
    postfix_exp     go to state 67
    tcall_exp       go to state 68
    vcall_exp       go to state 69
    dot_name_exp    go to state 70
    dot_index_exp   go to state 71
    unary_exp       go to state 72
    unary_op        go to state 73
    binary_exp      go to state 74
    mul_binary_exp  go to state 75
    add_binary_exp  go to state 76
    cmp_binary_exp  go to state 77
    eq_binary_exp   go to state 78
    and_binary_exp  go to state 79
    xor_binary_exp  go to state 80
    or_binary_exp   go to state 81


State 277

   17 var_stmt: "var" lpattern_naked "=" • expr

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "fn"                     shift, and go to state 40
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    vid             go to state 53
    floatl          go to state 54
    expr            go to state 321
    bracketed_exp   go to state 56
    unit_exp        go to state 57
    paren_exp       go to state 58
    vtupleExpr      go to state 59
    vstructExpr     go to state 60
    primary_exp     go to state 61
    int_expr        go to state 62
    stringls        go to state 63
    if_exp          go to state 64
    chain_exp       go to state 65
    lambda_exp      go to state 66
    postfix_exp     go to state 67
    tcall_exp       go to state 68
    vcall_exp       go to state 69
    dot_name_exp    go to state 70
    dot_index_exp   go to state 71
    unary_exp       go to state 72
    unary_op        go to state 73
    binary_exp      go to state 74
    mul_binary_exp  go to state 75
    add_binary_exp  go to state 76
    cmp_binary_exp  go to state 77
    eq_binary_exp   go to state 78
    and_binary_exp  go to state 79
    xor_binary_exp  go to state 80
    or_binary_exp   go to state 81


State 278

   18 set_stmt: "set" expr "=" • expr

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "fn"                     shift, and go to state 40
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    vid             go to state 53
    floatl          go to state 54
    expr            go to state 322
    bracketed_exp   go to state 56
    unit_exp        go to state 57
    paren_exp       go to state 58
    vtupleExpr      go to state 59
    vstructExpr     go to state 60
    primary_exp     go to state 61
    int_expr        go to state 62
    stringls        go to state 63
    if_exp          go to state 64
    chain_exp       go to state 65
    lambda_exp      go to state 66
    postfix_exp     go to state 67
    tcall_exp       go to state 68
    vcall_exp       go to state 69
    dot_name_exp    go to state 70
    dot_index_exp   go to state 71
    unary_exp       go to state 72
    unary_op        go to state 73
    binary_exp      go to state 74
    mul_binary_exp  go to state 75
    add_binary_exp  go to state 76
    cmp_binary_exp  go to state 77
    eq_binary_exp   go to state 78
    and_binary_exp  go to state 79
    xor_binary_exp  go to state 80
    or_binary_exp   go to state 81


State 279

  178 struct_exp_field: vid "=" expr •

    $default  reduce using rule 178 (struct_exp_field)


State 280

   88 chain_prefix: chain_prefix chain_prefix_stmt ";" •

    $default  reduce using rule 88 (chain_prefix)


State 281

   86 chain_exp: "{" chain_prefix expr "}" •

    $default  reduce using rule 86 (chain_exp)


State 282

  178 struct_exp_field: vid • "=" expr

    "="  shift, and go to state 204


State 283

  201 struct_exp_field_cl: struct_exp_field_cl "," struct_exp_field •

    $default  reduce using rule 201 (struct_exp_field_cl)


State 284

  174 varg: "out" expr •

    $default  reduce using rule 174 (varg)


State 285

  175 varg: "inout" expr •

    $default  reduce using rule 175 (varg)


State 286

  177 varg_cl: varg_cl "," • varg

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "fn"                     shift, and go to state 40
    "not"                    shift, and go to state 41
    "out"                    shift, and go to state 215
    "inout"                  shift, and go to state 216
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    vid             go to state 53
    floatl          go to state 54
    expr            go to state 218
    bracketed_exp   go to state 56
    unit_exp        go to state 57
    paren_exp       go to state 58
    vtupleExpr      go to state 59
    vstructExpr     go to state 60
    primary_exp     go to state 61
    int_expr        go to state 62
    stringls        go to state 63
    if_exp          go to state 64
    chain_exp       go to state 65
    lambda_exp      go to state 66
    postfix_exp     go to state 67
    tcall_exp       go to state 68
    vcall_exp       go to state 69
    dot_name_exp    go to state 70
    dot_index_exp   go to state 71
    unary_exp       go to state 72
    unary_op        go to state 73
    binary_exp      go to state 74
    mul_binary_exp  go to state 75
    add_binary_exp  go to state 76
    cmp_binary_exp  go to state 77
    eq_binary_exp   go to state 78
    and_binary_exp  go to state 79
    xor_binary_exp  go to state 80
    or_binary_exp   go to state 81
    varg            go to state 323


State 287

   97 vcall_exp: postfix_exp "(" varg_cl ")" •

    $default  reduce using rule 97 (vcall_exp)


State 288

  172 targ_cl: targ_cl "," • targ

    "<val_id>"               shift, and go to state 11
    "<TypeId>"               shift, and go to state 84
    "if"                     shift, and go to state 39
    "fn"                     shift, and go to state 40
    "Fn"                     shift, and go to state 95
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 96
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    tid               go to state 98
    vid               go to state 99
    floatl            go to state 54
    expr              go to state 221
    bracketed_exp     go to state 56
    unit_exp          go to state 57
    paren_exp         go to state 58
    vtupleExpr        go to state 59
    vstructExpr       go to state 60
    primary_exp       go to state 61
    int_expr          go to state 62
    stringls          go to state 63
    if_exp            go to state 64
    chain_exp         go to state 65
    lambda_exp        go to state 66
    postfix_exp       go to state 67
    tcall_exp         go to state 68
    vcall_exp         go to state 69
    dot_name_exp      go to state 70
    dot_index_exp     go to state 71
    unary_exp         go to state 72
    unary_op          go to state 73
    binary_exp        go to state 74
    mul_binary_exp    go to state 75
    add_binary_exp    go to state 76
    cmp_binary_exp    go to state 77
    eq_binary_exp     go to state 78
    and_binary_exp    go to state 79
    xor_binary_exp    go to state 80
    or_binary_exp     go to state 81
    typespec          go to state 222
    primary_typespec  go to state 106
    paren_typespec    go to state 107
    tuple_typespec    go to state 108
    mod_prefix_tid    go to state 109
    mod_prefix        go to state 110
    fn_typespec       go to state 111
    postfix_typespec  go to state 112
    tcall_typespec    go to state 113
    dot_typespec      go to state 114
    unary_typespec    go to state 115
    targ              go to state 324


State 289

   95 tcall_exp: postfix_exp "[" targ_cl "]" •

    $default  reduce using rule 95 (tcall_exp)


State 290

  185 tpattern_field: tid typespec •

    $default  reduce using rule 185 (tpattern_field)


State 291

  184 tpattern_field: vid typespec •

    $default  reduce using rule 184 (tpattern_field)


State 292

  199 tpattern_field_cl: tpattern_field_cl "," • tpattern_field

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84

    tid             go to state 232
    vid             go to state 233
    tpattern_field  go to state 325


State 293

  192 tpattern: "[" tpattern_field_cl "]" •

    $default  reduce using rule 192 (tpattern)


State 294

  193 tpattern: "!" "[" tpattern_field_cl • "]"
  199 tpattern_field_cl: tpattern_field_cl • "," tpattern_field

    ","  shift, and go to state 292
    "]"  shift, and go to state 326


State 295

   28 fn_stmt: "fn" vid vpattern "->" typespec • "=" bracketed_exp

    "="  shift, and go to state 327


State 296

   30 fn_stmt: "fn" vid vpattern "=" bracketed_exp •

    $default  reduce using rule 30 (fn_stmt)


State 297

   29 fn_stmt: "fn" vid tpattern_seq vpattern "->" • typespec "=" bracketed_exp

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84
    "Fn"        shift, and go to state 95
    "("         shift, and go to state 241

    tid               go to state 98
    vid               go to state 243
    typespec          go to state 328
    primary_typespec  go to state 106
    paren_typespec    go to state 107
    tuple_typespec    go to state 108
    mod_prefix_tid    go to state 109
    mod_prefix        go to state 110
    fn_typespec       go to state 111
    postfix_typespec  go to state 112
    tcall_typespec    go to state 113
    dot_typespec      go to state 114
    unary_typespec    go to state 115


State 298

   31 fn_stmt: "fn" vid tpattern_seq vpattern "=" • bracketed_exp

    "("  shift, and go to state 47
    "{"  shift, and go to state 48

    bracketed_exp  go to state 329
    unit_exp       go to state 57
    paren_exp      go to state 58
    vtupleExpr     go to state 59
    vstructExpr    go to state 60
    chain_exp      go to state 65


State 299

  143 typespec_cl2: typespec • "," typespec
  153 paren_typespec: "(" typespec • ")"
  154 tuple_typespec: "(" typespec • "," ")"

    ","  shift, and go to state 260
    ")"  shift, and go to state 261


State 300

  145 struct_typespec_field: vid • typespec

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84
    "Fn"        shift, and go to state 95
    "("         shift, and go to state 241

    tid               go to state 98
    vid               go to state 243
    typespec          go to state 330
    primary_typespec  go to state 106
    paren_typespec    go to state 107
    tuple_typespec    go to state 108
    mod_prefix_tid    go to state 109
    mod_prefix        go to state 110
    fn_typespec       go to state 111
    postfix_typespec  go to state 112
    tcall_typespec    go to state 113
    dot_typespec      go to state 114
    unary_typespec    go to state 115


State 301

  146 struct_typespec_field_cl: struct_typespec_field •

    $default  reduce using rule 146 (struct_typespec_field_cl)


State 302

  147 struct_typespec_field_cl: struct_typespec_field_cl • "," struct_typespec_field
  168 struct_typespec: "{" struct_typespec_field_cl • "}"

    ","  shift, and go to state 331
    "}"  shift, and go to state 332


State 303

   33 type_stmt: "type" tid tpattern_seq "=" long_typespec •

    $default  reduce using rule 33 (type_stmt)


State 304

   38 unprefixed_enum_field_pl: unprefixed_enum_field_pl "|" enum_field •

    $default  reduce using rule 38 (unprefixed_enum_field_pl)


State 305

   40 enum_field: tid "(" ")" •

    $default  reduce using rule 40 (enum_field)


State 306

  141 typespec_cl1: typespec •

    $default  reduce using rule 141 (typespec_cl1)


State 307

   41 enum_field: tid "(" typespec_cl1 • ")"
  142 typespec_cl1: typespec_cl1 • "," typespec

    ","  shift, and go to state 333
    ")"  shift, and go to state 334


State 308

   42 typeclass_stmt: "typeclass" tid "<" tid typespec • ">" "=" "{" expr_sl "}"
   43               | "typeclass" tid "<" tid typespec • ">" tpattern_seq "=" "{" expr_sl "}"

    ">"  shift, and go to state 335


State 309

   83 if_exp: "if" bracketed_exp "then" bracketed_exp "else" • primary_exp

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "fn"                     shift, and go to state 40
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48

    vid            go to state 53
    floatl         go to state 54
    bracketed_exp  go to state 56
    unit_exp       go to state 57
    paren_exp      go to state 58
    vtupleExpr     go to state 59
    vstructExpr    go to state 60
    primary_exp    go to state 336
    int_expr       go to state 62
    stringls       go to state 63
    if_exp         go to state 64
    chain_exp      go to state 65
    lambda_exp     go to state 66


State 310

  180 vpattern_field: "out" vid typespec •

    $default  reduce using rule 180 (vpattern_field)


State 311

  181 vpattern_field: "inout" vid typespec •

    $default  reduce using rule 181 (vpattern_field)


State 312

  195 vpattern_field_cl: vpattern_field_cl "," vpattern_field •

    $default  reduce using rule 195 (vpattern_field_cl)


State 313

  154 tuple_typespec: "(" typespec "," ")" •

    $default  reduce using rule 154 (tuple_typespec)


State 314

  143 typespec_cl2: typespec "," typespec •

    $default  reduce using rule 143 (typespec_cl2)


State 315

  144 typespec_cl2: typespec_cl2 "," typespec •

    $default  reduce using rule 144 (typespec_cl2)


State 316

  163 tcall_typespec: postfix_typespec "[" targ_cl "]" •

    $default  reduce using rule 163 (tcall_typespec)


State 317

  197 lpattern_field_cl: lpattern_field_cl "," • lpattern_field

    "<val_id>"  shift, and go to state 11

    vid             go to state 196
    lpattern_field  go to state 337


State 318

  186 lpattern: "(" lpattern_field_cl ")" •

    $default  reduce using rule 186 (lpattern)


State 319

   15 const_stmt: "const" lpattern_naked "=" expr •

    $default  reduce using rule 15 (const_stmt)


State 320

   16 val_stmt: "val" lpattern_naked "=" expr •

    $default  reduce using rule 16 (val_stmt)


State 321

   17 var_stmt: "var" lpattern_naked "=" expr •

    $default  reduce using rule 17 (var_stmt)


State 322

   18 set_stmt: "set" expr "=" expr •

    $default  reduce using rule 18 (set_stmt)


State 323

  177 varg_cl: varg_cl "," varg •

    $default  reduce using rule 177 (varg_cl)


State 324

  172 targ_cl: targ_cl "," targ •

    $default  reduce using rule 172 (targ_cl)


State 325

  199 tpattern_field_cl: tpattern_field_cl "," tpattern_field •

    $default  reduce using rule 199 (tpattern_field_cl)


State 326

  193 tpattern: "!" "[" tpattern_field_cl "]" •

    $default  reduce using rule 193 (tpattern)


State 327

   28 fn_stmt: "fn" vid vpattern "->" typespec "=" • bracketed_exp

    "("  shift, and go to state 47
    "{"  shift, and go to state 48

    bracketed_exp  go to state 338
    unit_exp       go to state 57
    paren_exp      go to state 58
    vtupleExpr     go to state 59
    vstructExpr    go to state 60
    chain_exp      go to state 65


State 328

   29 fn_stmt: "fn" vid tpattern_seq vpattern "->" typespec • "=" bracketed_exp

    "="  shift, and go to state 339


State 329

   31 fn_stmt: "fn" vid tpattern_seq vpattern "=" bracketed_exp •

    $default  reduce using rule 31 (fn_stmt)


State 330

  145 struct_typespec_field: vid typespec •

    $default  reduce using rule 145 (struct_typespec_field)


State 331

  147 struct_typespec_field_cl: struct_typespec_field_cl "," • struct_typespec_field

    "<val_id>"  shift, and go to state 11

    vid                    go to state 300
    struct_typespec_field  go to state 340


State 332

  168 struct_typespec: "{" struct_typespec_field_cl "}" •

    $default  reduce using rule 168 (struct_typespec)


State 333

  142 typespec_cl1: typespec_cl1 "," • typespec

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84
    "Fn"        shift, and go to state 95
    "("         shift, and go to state 241

    tid               go to state 98
    vid               go to state 243
    typespec          go to state 341
    primary_typespec  go to state 106
    paren_typespec    go to state 107
    tuple_typespec    go to state 108
    mod_prefix_tid    go to state 109
    mod_prefix        go to state 110
    fn_typespec       go to state 111
    postfix_typespec  go to state 112
    tcall_typespec    go to state 113
    dot_typespec      go to state 114
    unary_typespec    go to state 115


State 334

   41 enum_field: tid "(" typespec_cl1 ")" •

    $default  reduce using rule 41 (enum_field)


State 335

   42 typeclass_stmt: "typeclass" tid "<" tid typespec ">" • "=" "{" expr_sl "}"
   43               | "typeclass" tid "<" tid typespec ">" • tpattern_seq "=" "{" expr_sl "}"

    "["  shift, and go to state 156
    "="  shift, and go to state 342
    "!"  shift, and go to state 157

    tpattern      go to state 159
    tpattern_seq  go to state 343


State 336

   83 if_exp: "if" bracketed_exp "then" bracketed_exp "else" primary_exp •

    $default  reduce using rule 83 (if_exp)


State 337

  197 lpattern_field_cl: lpattern_field_cl "," lpattern_field •

    $default  reduce using rule 197 (lpattern_field_cl)


State 338

   28 fn_stmt: "fn" vid vpattern "->" typespec "=" bracketed_exp •

    $default  reduce using rule 28 (fn_stmt)


State 339

   29 fn_stmt: "fn" vid tpattern_seq vpattern "->" typespec "=" • bracketed_exp

    "("  shift, and go to state 47
    "{"  shift, and go to state 48

    bracketed_exp  go to state 344
    unit_exp       go to state 57
    paren_exp      go to state 58
    vtupleExpr     go to state 59
    vstructExpr    go to state 60
    chain_exp      go to state 65


State 340

  147 struct_typespec_field_cl: struct_typespec_field_cl "," struct_typespec_field •

    $default  reduce using rule 147 (struct_typespec_field_cl)


State 341

  142 typespec_cl1: typespec_cl1 "," typespec •

    $default  reduce using rule 142 (typespec_cl1)


State 342

   42 typeclass_stmt: "typeclass" tid "<" tid typespec ">" "=" • "{" expr_sl "}"

    "{"  shift, and go to state 345


State 343

   43 typeclass_stmt: "typeclass" tid "<" tid typespec ">" tpattern_seq • "=" "{" expr_sl "}"
  203 tpattern_seq: tpattern_seq • tpattern

    "["  shift, and go to state 156
    "="  shift, and go to state 346
    "!"  shift, and go to state 157

    tpattern  go to state 240


State 344

   29 fn_stmt: "fn" vid tpattern_seq vpattern "->" typespec "=" bracketed_exp •

    $default  reduce using rule 29 (fn_stmt)


State 345

   42 typeclass_stmt: "typeclass" tid "<" tid typespec ">" "=" "{" • expr_sl "}"

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "fn"                     shift, and go to state 40
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    vid             go to state 53
    floatl          go to state 54
    expr            go to state 347
    expr_sl         go to state 348
    bracketed_exp   go to state 56
    unit_exp        go to state 57
    paren_exp       go to state 58
    vtupleExpr      go to state 59
    vstructExpr     go to state 60
    primary_exp     go to state 61
    int_expr        go to state 62
    stringls        go to state 63
    if_exp          go to state 64
    chain_exp       go to state 65
    lambda_exp      go to state 66
    postfix_exp     go to state 67
    tcall_exp       go to state 68
    vcall_exp       go to state 69
    dot_name_exp    go to state 70
    dot_index_exp   go to state 71
    unary_exp       go to state 72
    unary_op        go to state 73
    binary_exp      go to state 74
    mul_binary_exp  go to state 75
    add_binary_exp  go to state 76
    cmp_binary_exp  go to state 77
    eq_binary_exp   go to state 78
    and_binary_exp  go to state 79
    xor_binary_exp  go to state 80
    or_binary_exp   go to state 81


State 346

   43 typeclass_stmt: "typeclass" tid "<" tid typespec ">" tpattern_seq "=" • "{" expr_sl "}"

    "{"  shift, and go to state 349


State 347

   56 expr_sl: expr • ";"

    ";"  shift, and go to state 350


State 348

   42 typeclass_stmt: "typeclass" tid "<" tid typespec ">" "=" "{" expr_sl • "}"
   57 expr_sl: expr_sl • expr ";"

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "fn"                     shift, and go to state 40
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48
    "}"                      shift, and go to state 351
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    vid             go to state 53
    floatl          go to state 54
    expr            go to state 352
    bracketed_exp   go to state 56
    unit_exp        go to state 57
    paren_exp       go to state 58
    vtupleExpr      go to state 59
    vstructExpr     go to state 60
    primary_exp     go to state 61
    int_expr        go to state 62
    stringls        go to state 63
    if_exp          go to state 64
    chain_exp       go to state 65
    lambda_exp      go to state 66
    postfix_exp     go to state 67
    tcall_exp       go to state 68
    vcall_exp       go to state 69
    dot_name_exp    go to state 70
    dot_index_exp   go to state 71
    unary_exp       go to state 72
    unary_op        go to state 73
    binary_exp      go to state 74
    mul_binary_exp  go to state 75
    add_binary_exp  go to state 76
    cmp_binary_exp  go to state 77
    eq_binary_exp   go to state 78
    and_binary_exp  go to state 79
    xor_binary_exp  go to state 80
    or_binary_exp   go to state 81


State 349

   43 typeclass_stmt: "typeclass" tid "<" tid typespec ">" tpattern_seq "=" "{" • expr_sl "}"

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "fn"                     shift, and go to state 40
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    vid             go to state 53
    floatl          go to state 54
    expr            go to state 347
    expr_sl         go to state 353
    bracketed_exp   go to state 56
    unit_exp        go to state 57
    paren_exp       go to state 58
    vtupleExpr      go to state 59
    vstructExpr     go to state 60
    primary_exp     go to state 61
    int_expr        go to state 62
    stringls        go to state 63
    if_exp          go to state 64
    chain_exp       go to state 65
    lambda_exp      go to state 66
    postfix_exp     go to state 67
    tcall_exp       go to state 68
    vcall_exp       go to state 69
    dot_name_exp    go to state 70
    dot_index_exp   go to state 71
    unary_exp       go to state 72
    unary_op        go to state 73
    binary_exp      go to state 74
    mul_binary_exp  go to state 75
    add_binary_exp  go to state 76
    cmp_binary_exp  go to state 77
    eq_binary_exp   go to state 78
    and_binary_exp  go to state 79
    xor_binary_exp  go to state 80
    or_binary_exp   go to state 81


State 350

   56 expr_sl: expr ";" •

    $default  reduce using rule 56 (expr_sl)


State 351

   42 typeclass_stmt: "typeclass" tid "<" tid typespec ">" "=" "{" expr_sl "}" •

    $default  reduce using rule 42 (typeclass_stmt)


State 352

   57 expr_sl: expr_sl expr • ";"

    ";"  shift, and go to state 354


State 353

   43 typeclass_stmt: "typeclass" tid "<" tid typespec ">" tpattern_seq "=" "{" expr_sl • "}"
   57 expr_sl: expr_sl • expr ";"

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "fn"                     shift, and go to state 40
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48
    "}"                      shift, and go to state 355
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    vid             go to state 53
    floatl          go to state 54
    expr            go to state 352
    bracketed_exp   go to state 56
    unit_exp        go to state 57
    paren_exp       go to state 58
    vtupleExpr      go to state 59
    vstructExpr     go to state 60
    primary_exp     go to state 61
    int_expr        go to state 62
    stringls        go to state 63
    if_exp          go to state 64
    chain_exp       go to state 65
    lambda_exp      go to state 66
    postfix_exp     go to state 67
    tcall_exp       go to state 68
    vcall_exp       go to state 69
    dot_name_exp    go to state 70
    dot_index_exp   go to state 71
    unary_exp       go to state 72
    unary_op        go to state 73
    binary_exp      go to state 74
    mul_binary_exp  go to state 75
    add_binary_exp  go to state 76
    cmp_binary_exp  go to state 77
    eq_binary_exp   go to state 78
    and_binary_exp  go to state 79
    xor_binary_exp  go to state 80
    or_binary_exp   go to state 81


State 354

   57 expr_sl: expr_sl expr ";" •

    $default  reduce using rule 57 (expr_sl)


State 355

   43 typeclass_stmt: "typeclass" tid "<" tid typespec ">" tpattern_seq "=" "{" expr_sl "}" •

    $default  reduce using rule 43 (typeclass_stmt)
