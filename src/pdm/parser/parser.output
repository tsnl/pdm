Terminals unused in grammar

    "<__42__>"
    "match"
    "with"
    "&"
    "EOS"
    "<null>"


Grammar

    0 $accept: script $end

    1 script: scriptContent

    2 scriptContent: scriptContentStmt ";"
    3              | scriptContent scriptContentStmt ";"

    4 scriptContentStmt: mod_stmt
    5                  | import_stmt
    6                  | extern_stmt

    7 mod_stmt: "mod" "<val_id>" "{" moduleContent "}"

    8 moduleContent: moduleContentStmt ";"
    9              | moduleContent moduleContentStmt ";"

   10 chain_prefix_stmt: const_stmt
   11                  | val_stmt
   12                  | var_stmt
   13                  | set_stmt
   14                  | discard_stmt

   15 const_stmt: "const" lpattern "=" expr

   16 val_stmt: "val" lpattern "=" expr

   17 var_stmt: "var" lpattern "=" expr

   18 set_stmt: "set" expr "=" expr

   19 discard_stmt: "discard" expr

   20 moduleContentStmt: fn_stmt
   21                  | type_stmt
   22                  | enum_stmt
   23                  | typeclass_stmt
   24                  | import_stmt
   25                  | mod_stmt
   26                  | using_stmt
   27                  | extern_stmt

   28 fn_stmt: "fn" vid vpattern "->" typespec "=" bracketed_exp
   29        | "fn" vid tpattern_seq vpattern "->" typespec "=" bracketed_exp
   30        | "fn" vid vpattern "=" bracketed_exp
   31        | "fn" vid tpattern_seq vpattern "=" bracketed_exp

   32 type_stmt: "type" tid "=" long_typespec
   33          | "type" tid tpattern_seq "=" long_typespec

   34 enum_stmt: "type" tid enum_field_pl
   35          | "type" tid tpattern_seq enum_field_pl

   36 enum_field_pl: "|" unprefixed_enum_field_pl

   37 unprefixed_enum_field_pl: enum_field
   38                         | unprefixed_enum_field_pl "|" enum_field

   39 enum_field: tid
   40           | tid "(" ")"
   41           | tid "(" typespec_cl1 ")"

   42 typeclass_stmt: "typeclass" tid "<" tid typespec ">" "=" "{" type_query_exp_sl "}"
   43               | "typeclass" tid "<" tid typespec ">" tpattern_seq "=" "{" type_query_exp_sl "}"

   44 using_stmt: "using" vid "." "*"
   45           | "using" vid "." vid "*"

   46 import_stmt: "import" vid "from" stringl "type" stringl

   47 extern_stmt: "extern" vid "from" expr

   48 tid: "<TypeId>"

   49 vid: "<val_id>"

   50 floatl: "4.2"

   51 stringl: "'sq-string-literal'"
   52        | "\"dq-string-literal\""

   53 mod_prefix: vid ":"
   54           | mod_prefix vid ":"

   55 expr: binary_exp

   56 long_exp: type_query_exp
   57         | expr

   58 expr_cl2: expr "," expr
   59         | expr_cl2 "," expr

   60 type_query_exp_sl: type_query_exp ";"
   61                  | type_query_exp_sl type_query_exp ";"

   62 bracketed_exp: unit_exp
   63              | paren_exp
   64              | vtupleExpr
   65              | vstructExpr
   66              | chain_exp

   67 unit_exp: "(" ")"
   68         | "{" "}"

   69 paren_exp: "(" long_exp ")"

   70 vtupleExpr: "(" expr "," ")"
   71           | "(" expr_cl2 ")"

   72 vstructExpr: "{" struct_exp_field_cl "}"

   73 primary_exp: bracketed_exp
   74            | vid
   75            | int_expr
   76            | floatl
   77            | stringls
   78            | if_exp
   79            | lambda_exp

   80 int_expr: "42"
   81         | "0x2a"

   82 stringls: "'sq-string-literal'"
   83         | "\"dq-string-literal\""
   84         | stringls "'sq-string-literal'"
   85         | stringls "\"dq-string-literal\""

   86 if_exp: "if" bracketed_exp "then" bracketed_exp
   87       | "if" bracketed_exp "then" bracketed_exp "else" primary_exp

   88 chain_exp: "{" expr "}"
   89          | "{" chain_prefix "}"
   90          | "{" chain_prefix expr "}"

   91 chain_prefix: chain_prefix_stmt ";"
   92             | chain_prefix chain_prefix_stmt ";"

   93 lambda_exp: "lambda" vpattern "=" bracketed_exp

   94 postfix_exp: primary_exp
   95            | tcall_exp
   96            | vcall_exp
   97            | dot_name_exp
   98            | dot_index_exp

   99 tcall_exp: postfix_exp "[" targ_cl "]"

  100 vcall_exp: postfix_exp "(" ")"
  101          | postfix_exp "(" varg_cl ")"

  102 dot_name_exp: postfix_exp "." "<val_id>"
  103             | postfix_exp "." "<TypeId>"
  104             | mod_prefix "<val_id>"

  105 dot_index_exp: postfix_exp "." int_expr
  106              | postfix_exp "." bracketed_exp

  107 unary_exp: postfix_exp
  108          | unary_op unary_exp

  109 unary_op: "+"
  110         | "-"
  111         | "*"
  112         | "^"
  113         | "not"

  114 binary_exp: or_binary_exp

  115 mul_binary_op: "*"
  116              | "/"
  117              | "%"

  118 mul_binary_exp: unary_exp
  119               | mul_binary_exp mul_binary_op unary_exp

  120 add_binary_op: "+"
  121              | "-"

  122 add_binary_exp: mul_binary_exp
  123               | add_binary_exp add_binary_op mul_binary_exp

  124 cmp_binary_op: "<"
  125              | "<="
  126              | ">"
  127              | ">="

  128 cmp_binary_exp: add_binary_exp
  129               | cmp_binary_exp cmp_binary_op add_binary_exp

  130 eq_binary_op: "=="
  131             | "!="

  132 eq_binary_exp: cmp_binary_exp
  133              | eq_binary_exp eq_binary_op cmp_binary_exp

  134 and_binary_exp: eq_binary_exp
  135               | and_binary_exp "and" eq_binary_exp

  136 xor_binary_exp: and_binary_exp
  137               | xor_binary_exp "xor" and_binary_exp

  138 or_binary_exp: xor_binary_exp
  139              | or_binary_exp "or" xor_binary_exp

  140 type_query_exp: typespec type_query_op typespec

  141 type_query_op: ":<"
  142              | ">:"
  143              | "::"

  144 typespec: unary_typespec

  145 typespec_cl1: typespec
  146             | typespec_cl1 "," typespec

  147 typespec_cl2: typespec "," typespec
  148             | typespec_cl2 "," typespec

  149 struct_typespec_field: vid typespec

  150 struct_typespec_field_cl: struct_typespec_field
  151                         | struct_typespec_field_cl "," struct_typespec_field

  152 primary_typespec: tid
  153                 | paren_typespec
  154                 | tuple_typespec
  155                 | mod_prefix_tid
  156                 | fn_typespec

  157 paren_typespec: "(" typespec ")"

  158 tuple_typespec: "(" typespec "," ")"
  159               | "(" typespec_cl2 ")"

  160 mod_prefix_tid: mod_prefix tid

  161 fn_typespec: "Fn" vpattern primary_typespec

  162 postfix_typespec: primary_typespec
  163                 | tcall_typespec
  164                 | dot_typespec

  165 tcall_typespec: postfix_typespec "[" targ_cl "]"

  166 dot_typespec: postfix_typespec "." "<val_id>"

  167 unary_typespec: postfix_typespec

  168 long_typespec: unary_typespec
  169              | struct_typespec

  170 struct_typespec: "{" struct_typespec_field_cl "}"

  171 targ: typespec
  172     | expr

  173 targ_cl: targ
  174        | targ_cl "," targ

  175 varg: expr
  176     | "out" expr
  177     | "inout" expr

  178 varg_cl: varg
  179        | varg_cl "," varg

  180 struct_exp_field: vid "=" expr

  181 vpattern_field: vid typespec
  182               | "out" vid typespec
  183               | "inout" vid typespec

  184 lpattern_field: vid typespec
  185               | vid

  186 tpattern_field: vid typespec
  187               | tid typespec

  188 destructured_lpattern: "(" lpattern_field_cl ")"

  189 lpattern: lpattern_field
  190         | destructured_lpattern

  191 vpattern: "(" vpattern_field_cl ")"
  192         | "(" ")"

  193 tpattern: "[" tpattern_field_cl "]"
  194         | "!" "[" tpattern_field_cl "]"

  195 vpattern_field_cl: vpattern_field
  196                  | vpattern_field_cl "," vpattern_field

  197 lpattern_field_cl: lpattern_field
  198                  | lpattern_field_cl "," lpattern_field

  199 tpattern_field_cl: tpattern_field
  200                  | tpattern_field_cl "," tpattern_field

  201 struct_exp_field_cl: struct_exp_field
  202                    | struct_exp_field_cl "," struct_exp_field

  203 tpattern_seq: tpattern
  204             | tpattern_seq tpattern


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    "<val_id>" <TokenInfo> (258) 7 49 102 104 166
    "<TypeId>" <TokenInfo> (259) 48 103
    "<__42__>" <TokenInfo> (260)
    "using" (261) 44 45
    "mod" (262) 7
    "if" (263) 86 87
    "then" (264) 86 87
    "else" (265) 87
    "match" (266)
    "with" (267)
    "import" (268) 46
    "extern" (269) 47
    "from" (270) 46 47
    "const" (271) 15
    "val" (272) 16
    "var" (273) 17
    "set" (274) 18
    "fn" (275) 28 29 30 31
    "lambda" (276) 93
    "Fn" (277) 161
    "type" (278) 32 33 34 35 46
    "and" (279) 135
    "xor" (280) 137
    "or" (281) 139
    "not" (282) 113
    "typeclass" (283) 42 43
    "out" (284) 176 182
    "inout" (285) 177 183
    "discard" (286) 19
    "42" <TokenInfo> (287) 80
    "0x2a" <TokenInfo> (288) 81
    "4.2" <TokenInfo> (289) 50
    "\"dq-string-literal\"" <TokenInfo> (290) 52 83 85
    "'sq-string-literal'" <TokenInfo> (291) 51 82 84
    "." (292) 44 45 102 103 105 106 166
    ":" (293) 53 54
    "," (294) 58 59 70 146 147 148 151 158 174 179 196 198 200 202
    ";" (295) 2 3 8 9 60 61 91 92
    "::" (296) 143
    "(" (297) 40 41 67 69 70 71 100 101 157 158 159 188 191 192
    ")" (298) 40 41 67 69 70 71 100 101 157 158 159 188 191 192
    "[" (299) 99 165 193 194
    "]" (300) 99 165 193 194
    "{" (301) 7 42 43 68 72 88 89 90 170
    "}" (302) 7 42 43 68 72 88 89 90 170
    "->" (303) 28 29
    "*" (304) 44 45 111 115
    "/" (305) 116
    "%" (306) 117
    "+" (307) 109 120
    "-" (308) 110 121
    "<" (309) 42 43 124
    "<=" (310) 125
    ">" (311) 42 43 126
    ">=" (312) 127
    "=" (313) 15 16 17 18 28 29 30 31 32 33 42 43 93 180
    "==" (314) 130
    "!=" (315) 131
    "^" (316) 112
    "&" (317)
    "!" (318) 194
    "|" (319) 36 38
    "EOS" (320)
    ":<" (321) 141
    ">:" (322) 142
    "<null>" (323)


Nonterminals, with rules where they appear

    $accept (69)
        on left: 0
    script <pdm::ast::Script*> (70)
        on left: 1
        on right: 0
    scriptContent <std::vector<pdm::ast::Stmt*>> (71)
        on left: 2 3
        on right: 1 3
    scriptContentStmt <pdm::ast::Stmt*> (72)
        on left: 4 5 6
        on right: 2 3
    mod_stmt <pdm::ast::Stmt*> (73)
        on left: 7
        on right: 4 25
    moduleContent <std::vector<pdm::ast::Stmt*>> (74)
        on left: 8 9
        on right: 7 9
    chain_prefix_stmt <pdm::ast::Stmt*> (75)
        on left: 10 11 12 13 14
        on right: 91 92
    const_stmt <pdm::ast::Stmt*> (76)
        on left: 15
        on right: 10
    val_stmt <pdm::ast::Stmt*> (77)
        on left: 16
        on right: 11
    var_stmt <pdm::ast::Stmt*> (78)
        on left: 17
        on right: 12
    set_stmt <pdm::ast::Stmt*> (79)
        on left: 18
        on right: 13
    discard_stmt <pdm::ast::Stmt*> (80)
        on left: 19
        on right: 14
    moduleContentStmt <pdm::ast::Stmt*> (81)
        on left: 20 21 22 23 24 25 26 27
        on right: 8 9
    fn_stmt <pdm::ast::Stmt*> (82)
        on left: 28 29 30 31
        on right: 20
    type_stmt <pdm::ast::Stmt*> (83)
        on left: 32 33
        on right: 21
    enum_stmt <pdm::ast::Stmt*> (84)
        on left: 34 35
        on right: 22
    enum_field_pl <std::vector<pdm::ast::EnumStmt::Field*>> (85)
        on left: 36
        on right: 34 35
    unprefixed_enum_field_pl <std::vector<pdm::ast::EnumStmt::Field*>> (86)
        on left: 37 38
        on right: 36 38
    enum_field <pdm::ast::EnumStmt::Field*> (87)
        on left: 39 40 41
        on right: 37 38
    typeclass_stmt <pdm::ast::Stmt*> (88)
        on left: 42 43
        on right: 23
    using_stmt <pdm::ast::Stmt*> (89)
        on left: 44 45
        on right: 26
    import_stmt <pdm::ast::Stmt*> (90)
        on left: 46
        on right: 5 24
    extern_stmt <pdm::ast::Stmt*> (91)
        on left: 47
        on right: 6 27
    tid <TokenInfo> (92)
        on left: 48
        on right: 32 33 34 35 39 40 41 42 43 152 160 187
    vid <TokenInfo> (93)
        on left: 49
        on right: 28 29 30 31 44 45 46 47 53 54 74 149 180 181 182 183 184 185 186
    floatl <TokenInfo> (94)
        on left: 50
        on right: 76
    stringl <TokenInfo> (95)
        on left: 51 52
        on right: 46
    mod_prefix <std::vector<pdm::intern::String>> (96)
        on left: 53 54
        on right: 54 104 160
    expr <pdm::ast::Exp*> (97)
        on left: 55
        on right: 15 16 17 18 19 47 57 58 59 70 88 90 172 175 176 177 180
    long_exp <pdm::ast::Exp*> (98)
        on left: 56 57
        on right: 69
    expr_cl2 <std::vector<pdm::ast::Exp*>> (99)
        on left: 58 59
        on right: 59 71
    type_query_exp_sl <std::vector<pdm::ast::TypeQueryExp*>> (100)
        on left: 60 61
        on right: 42 43 61
    bracketed_exp <pdm::ast::Exp*> (101)
        on left: 62 63 64 65 66
        on right: 28 29 30 31 73 86 87 93 106
    unit_exp <pdm::ast::Exp*> (102)
        on left: 67 68
        on right: 62
    paren_exp <pdm::ast::Exp*> (103)
        on left: 69
        on right: 63
    vtupleExpr <pdm::ast::Exp*> (104)
        on left: 70 71
        on right: 64
    vstructExpr <pdm::ast::Exp*> (105)
        on left: 72
        on right: 65
    primary_exp <pdm::ast::Exp*> (106)
        on left: 73 74 75 76 77 78 79
        on right: 87 94
    int_expr <pdm::ast::Exp*> (107)
        on left: 80 81
        on right: 75 105
    stringls <std::vector<pdm::ast::StringExp::Piece>> (108)
        on left: 82 83 84 85
        on right: 77 84 85
    if_exp <pdm::ast::Exp*> (109)
        on left: 86 87
        on right: 78
    chain_exp <pdm::ast::Exp*> (110)
        on left: 88 89 90
        on right: 66
    chain_prefix <std::vector<pdm::ast::Stmt*>> (111)
        on left: 91 92
        on right: 89 90 92
    lambda_exp <pdm::ast::Exp*> (112)
        on left: 93
        on right: 79
    postfix_exp <pdm::ast::Exp*> (113)
        on left: 94 95 96 97 98
        on right: 99 100 101 102 103 105 106 107
    tcall_exp <pdm::ast::Exp*> (114)
        on left: 99
        on right: 95
    vcall_exp <pdm::ast::Exp*> (115)
        on left: 100 101
        on right: 96
    dot_name_exp <pdm::ast::Exp*> (116)
        on left: 102 103 104
        on right: 97
    dot_index_exp <pdm::ast::Exp*> (117)
        on left: 105 106
        on right: 98
    unary_exp <pdm::ast::Exp*> (118)
        on left: 107 108
        on right: 108 118 119
    unary_op <pdm::ast::UnaryOperator> (119)
        on left: 109 110 111 112 113
        on right: 108
    binary_exp <pdm::ast::Exp*> (120)
        on left: 114
        on right: 55
    mul_binary_op <pdm::ast::BinaryOperator> (121)
        on left: 115 116 117
        on right: 119
    mul_binary_exp <pdm::ast::Exp*> (122)
        on left: 118 119
        on right: 119 122 123
    add_binary_op <pdm::ast::BinaryOperator> (123)
        on left: 120 121
        on right: 123
    add_binary_exp <pdm::ast::Exp*> (124)
        on left: 122 123
        on right: 123 128 129
    cmp_binary_op <pdm::ast::BinaryOperator> (125)
        on left: 124 125 126 127
        on right: 129
    cmp_binary_exp <pdm::ast::Exp*> (126)
        on left: 128 129
        on right: 129 132 133
    eq_binary_op <pdm::ast::BinaryOperator> (127)
        on left: 130 131
        on right: 133
    eq_binary_exp <pdm::ast::Exp*> (128)
        on left: 132 133
        on right: 133 134 135
    and_binary_exp <pdm::ast::Exp*> (129)
        on left: 134 135
        on right: 135 136 137
    xor_binary_exp <pdm::ast::Exp*> (130)
        on left: 136 137
        on right: 137 138 139
    or_binary_exp <pdm::ast::Exp*> (131)
        on left: 138 139
        on right: 114 139
    type_query_exp <pdm::ast::TypeQueryExp*> (132)
        on left: 140
        on right: 56 60 61
    type_query_op <pdm::ast::TypeQueryKind> (133)
        on left: 141 142 143
        on right: 140
    typespec <pdm::ast::Typespec*> (134)
        on left: 144
        on right: 28 29 42 43 140 145 146 147 148 149 157 158 171 181 182 183 184 186 187
    typespec_cl1 <std::vector<pdm::ast::Typespec*>> (135)
        on left: 145 146
        on right: 41 146
    typespec_cl2 <std::vector<pdm::ast::Typespec*>> (136)
        on left: 147 148
        on right: 148 159
    struct_typespec_field <pdm::ast::StructTypespec::Field*> (137)
        on left: 149
        on right: 150 151
    struct_typespec_field_cl <std::vector<pdm::ast::StructTypespec::Field*>> (138)
        on left: 150 151
        on right: 151 170
    primary_typespec <pdm::ast::Typespec*> (139)
        on left: 152 153 154 155 156
        on right: 161 162
    paren_typespec <pdm::ast::Typespec*> (140)
        on left: 157
        on right: 153
    tuple_typespec <pdm::ast::Typespec*> (141)
        on left: 158 159
        on right: 154
    mod_prefix_tid <pdm::ast::Typespec*> (142)
        on left: 160
        on right: 155
    fn_typespec <pdm::ast::Typespec*> (143)
        on left: 161
        on right: 156
    postfix_typespec <pdm::ast::Typespec*> (144)
        on left: 162 163 164
        on right: 165 166 167
    tcall_typespec <pdm::ast::Typespec*> (145)
        on left: 165
        on right: 163
    dot_typespec <pdm::ast::Typespec*> (146)
        on left: 166
        on right: 164
    unary_typespec <pdm::ast::Typespec*> (147)
        on left: 167
        on right: 144 168
    long_typespec <pdm::ast::Typespec*> (148)
        on left: 168 169
        on right: 32 33
    struct_typespec <pdm::ast::Typespec*> (149)
        on left: 170
        on right: 169
    targ <pdm::ast::TArg*> (150)
        on left: 171 172
        on right: 173 174
    targ_cl <std::vector<pdm::ast::TArg*>> (151)
        on left: 173 174
        on right: 99 165 174
    varg <pdm::ast::VArg*> (152)
        on left: 175 176 177
        on right: 178 179
    varg_cl <std::vector<pdm::ast::VArg*>> (153)
        on left: 178 179
        on right: 101 179
    struct_exp_field <pdm::ast::StructExp::Field*> (154)
        on left: 180
        on right: 201 202
    vpattern_field <pdm::ast::VPattern::Field*> (155)
        on left: 181 182 183
        on right: 195 196
    lpattern_field <pdm::ast::LPattern::Field*> (156)
        on left: 184 185
        on right: 189 197 198
    tpattern_field <pdm::ast::TPattern::Field*> (157)
        on left: 186 187
        on right: 199 200
    destructured_lpattern <pdm::ast::LPattern*> (158)
        on left: 188
        on right: 190
    lpattern <pdm::ast::LPattern*> (159)
        on left: 189 190
        on right: 15 16 17
    vpattern <pdm::ast::VPattern*> (160)
        on left: 191 192
        on right: 28 29 30 31 93 161
    tpattern <pdm::ast::TPattern*> (161)
        on left: 193 194
        on right: 203 204
    vpattern_field_cl <std::vector<pdm::ast::VPattern::Field*>> (162)
        on left: 195 196
        on right: 191 196
    lpattern_field_cl <std::vector<pdm::ast::LPattern::Field*>> (163)
        on left: 197 198
        on right: 188 198
    tpattern_field_cl <std::vector<pdm::ast::TPattern::Field*>> (164)
        on left: 199 200
        on right: 193 194 200
    struct_exp_field_cl <std::vector<pdm::ast::StructExp::Field*>> (165)
        on left: 201 202
        on right: 72 202
    tpattern_seq <std::vector<pdm::ast::TPattern*>> (166)
        on left: 203 204
        on right: 29 31 33 35 43 204


State 0

    0 $accept: • script $end

    "mod"     shift, and go to state 1
    "import"  shift, and go to state 2
    "extern"  shift, and go to state 3

    script             go to state 4
    scriptContent      go to state 5
    scriptContentStmt  go to state 6
    mod_stmt           go to state 7
    import_stmt        go to state 8
    extern_stmt        go to state 9


State 1

    7 mod_stmt: "mod" • "<val_id>" "{" moduleContent "}"

    "<val_id>"  shift, and go to state 10


State 2

   46 import_stmt: "import" • vid "from" stringl "type" stringl

    "<val_id>"  shift, and go to state 11

    vid  go to state 12


State 3

   47 extern_stmt: "extern" • vid "from" expr

    "<val_id>"  shift, and go to state 11

    vid  go to state 13


State 4

    0 $accept: script • $end

    $end  shift, and go to state 14


State 5

    1 script: scriptContent •
    3 scriptContent: scriptContent • scriptContentStmt ";"

    "mod"     shift, and go to state 1
    "import"  shift, and go to state 2
    "extern"  shift, and go to state 3

    $default  reduce using rule 1 (script)

    scriptContentStmt  go to state 15
    mod_stmt           go to state 7
    import_stmt        go to state 8
    extern_stmt        go to state 9


State 6

    2 scriptContent: scriptContentStmt • ";"

    ";"  shift, and go to state 16


State 7

    4 scriptContentStmt: mod_stmt •

    $default  reduce using rule 4 (scriptContentStmt)


State 8

    5 scriptContentStmt: import_stmt •

    $default  reduce using rule 5 (scriptContentStmt)


State 9

    6 scriptContentStmt: extern_stmt •

    $default  reduce using rule 6 (scriptContentStmt)


State 10

    7 mod_stmt: "mod" "<val_id>" • "{" moduleContent "}"

    "{"  shift, and go to state 17


State 11

   49 vid: "<val_id>" •

    $default  reduce using rule 49 (vid)


State 12

   46 import_stmt: "import" vid • "from" stringl "type" stringl

    "from"  shift, and go to state 18


State 13

   47 extern_stmt: "extern" vid • "from" expr

    "from"  shift, and go to state 19


State 14

    0 $accept: script $end •

    $default  accept


State 15

    3 scriptContent: scriptContent scriptContentStmt • ";"

    ";"  shift, and go to state 20


State 16

    2 scriptContent: scriptContentStmt ";" •

    $default  reduce using rule 2 (scriptContent)


State 17

    7 mod_stmt: "mod" "<val_id>" "{" • moduleContent "}"

    "using"      shift, and go to state 21
    "mod"        shift, and go to state 1
    "import"     shift, and go to state 2
    "extern"     shift, and go to state 3
    "fn"         shift, and go to state 22
    "type"       shift, and go to state 23
    "typeclass"  shift, and go to state 24

    mod_stmt           go to state 25
    moduleContent      go to state 26
    moduleContentStmt  go to state 27
    fn_stmt            go to state 28
    type_stmt          go to state 29
    enum_stmt          go to state 30
    typeclass_stmt     go to state 31
    using_stmt         go to state 32
    import_stmt        go to state 33
    extern_stmt        go to state 34


State 18

   46 import_stmt: "import" vid "from" • stringl "type" stringl

    "\"dq-string-literal\""  shift, and go to state 35
    "'sq-string-literal'"    shift, and go to state 36

    stringl  go to state 37


State 19

   47 extern_stmt: "extern" vid "from" • expr

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "lambda"                 shift, and go to state 39
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    vid             go to state 52
    floatl          go to state 53
    mod_prefix      go to state 54
    expr            go to state 55
    bracketed_exp   go to state 56
    unit_exp        go to state 57
    paren_exp       go to state 58
    vtupleExpr      go to state 59
    vstructExpr     go to state 60
    primary_exp     go to state 61
    int_expr        go to state 62
    stringls        go to state 63
    if_exp          go to state 64
    chain_exp       go to state 65
    lambda_exp      go to state 66
    postfix_exp     go to state 67
    tcall_exp       go to state 68
    vcall_exp       go to state 69
    dot_name_exp    go to state 70
    dot_index_exp   go to state 71
    unary_exp       go to state 72
    unary_op        go to state 73
    binary_exp      go to state 74
    mul_binary_exp  go to state 75
    add_binary_exp  go to state 76
    cmp_binary_exp  go to state 77
    eq_binary_exp   go to state 78
    and_binary_exp  go to state 79
    xor_binary_exp  go to state 80
    or_binary_exp   go to state 81


State 20

    3 scriptContent: scriptContent scriptContentStmt ";" •

    $default  reduce using rule 3 (scriptContent)


State 21

   44 using_stmt: "using" • vid "." "*"
   45           | "using" • vid "." vid "*"

    "<val_id>"  shift, and go to state 11

    vid  go to state 82


State 22

   28 fn_stmt: "fn" • vid vpattern "->" typespec "=" bracketed_exp
   29        | "fn" • vid tpattern_seq vpattern "->" typespec "=" bracketed_exp
   30        | "fn" • vid vpattern "=" bracketed_exp
   31        | "fn" • vid tpattern_seq vpattern "=" bracketed_exp

    "<val_id>"  shift, and go to state 11

    vid  go to state 83


State 23

   32 type_stmt: "type" • tid "=" long_typespec
   33          | "type" • tid tpattern_seq "=" long_typespec
   34 enum_stmt: "type" • tid enum_field_pl
   35          | "type" • tid tpattern_seq enum_field_pl

    "<TypeId>"  shift, and go to state 84

    tid  go to state 85


State 24

   42 typeclass_stmt: "typeclass" • tid "<" tid typespec ">" "=" "{" type_query_exp_sl "}"
   43               | "typeclass" • tid "<" tid typespec ">" tpattern_seq "=" "{" type_query_exp_sl "}"

    "<TypeId>"  shift, and go to state 84

    tid  go to state 86


State 25

   25 moduleContentStmt: mod_stmt •

    $default  reduce using rule 25 (moduleContentStmt)


State 26

    7 mod_stmt: "mod" "<val_id>" "{" moduleContent • "}"
    9 moduleContent: moduleContent • moduleContentStmt ";"

    "using"      shift, and go to state 21
    "mod"        shift, and go to state 1
    "import"     shift, and go to state 2
    "extern"     shift, and go to state 3
    "fn"         shift, and go to state 22
    "type"       shift, and go to state 23
    "typeclass"  shift, and go to state 24
    "}"          shift, and go to state 87

    mod_stmt           go to state 25
    moduleContentStmt  go to state 88
    fn_stmt            go to state 28
    type_stmt          go to state 29
    enum_stmt          go to state 30
    typeclass_stmt     go to state 31
    using_stmt         go to state 32
    import_stmt        go to state 33
    extern_stmt        go to state 34


State 27

    8 moduleContent: moduleContentStmt • ";"

    ";"  shift, and go to state 89


State 28

   20 moduleContentStmt: fn_stmt •

    $default  reduce using rule 20 (moduleContentStmt)


State 29

   21 moduleContentStmt: type_stmt •

    $default  reduce using rule 21 (moduleContentStmt)


State 30

   22 moduleContentStmt: enum_stmt •

    $default  reduce using rule 22 (moduleContentStmt)


State 31

   23 moduleContentStmt: typeclass_stmt •

    $default  reduce using rule 23 (moduleContentStmt)


State 32

   26 moduleContentStmt: using_stmt •

    $default  reduce using rule 26 (moduleContentStmt)


State 33

   24 moduleContentStmt: import_stmt •

    $default  reduce using rule 24 (moduleContentStmt)


State 34

   27 moduleContentStmt: extern_stmt •

    $default  reduce using rule 27 (moduleContentStmt)


State 35

   52 stringl: "\"dq-string-literal\"" •

    $default  reduce using rule 52 (stringl)


State 36

   51 stringl: "'sq-string-literal'" •

    $default  reduce using rule 51 (stringl)


State 37

   46 import_stmt: "import" vid "from" stringl • "type" stringl

    "type"  shift, and go to state 90


State 38

   86 if_exp: "if" • bracketed_exp "then" bracketed_exp
   87       | "if" • bracketed_exp "then" bracketed_exp "else" primary_exp

    "("  shift, and go to state 46
    "{"  shift, and go to state 47

    bracketed_exp  go to state 91
    unit_exp       go to state 57
    paren_exp      go to state 58
    vtupleExpr     go to state 59
    vstructExpr    go to state 60
    chain_exp      go to state 65


State 39

   93 lambda_exp: "lambda" • vpattern "=" bracketed_exp

    "("  shift, and go to state 92

    vpattern  go to state 93


State 40

  113 unary_op: "not" •

    $default  reduce using rule 113 (unary_op)


State 41

   80 int_expr: "42" •

    $default  reduce using rule 80 (int_expr)


State 42

   81 int_expr: "0x2a" •

    $default  reduce using rule 81 (int_expr)


State 43

   50 floatl: "4.2" •

    $default  reduce using rule 50 (floatl)


State 44

   83 stringls: "\"dq-string-literal\"" •

    $default  reduce using rule 83 (stringls)


State 45

   82 stringls: "'sq-string-literal'" •

    $default  reduce using rule 82 (stringls)


State 46

   67 unit_exp: "(" • ")"
   69 paren_exp: "(" • long_exp ")"
   70 vtupleExpr: "(" • expr "," ")"
   71           | "(" • expr_cl2 ")"

    "<val_id>"               shift, and go to state 11
    "<TypeId>"               shift, and go to state 84
    "if"                     shift, and go to state 38
    "lambda"                 shift, and go to state 39
    "Fn"                     shift, and go to state 94
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 95
    ")"                      shift, and go to state 96
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    tid               go to state 97
    vid               go to state 52
    floatl            go to state 53
    mod_prefix        go to state 98
    expr              go to state 99
    long_exp          go to state 100
    expr_cl2          go to state 101
    bracketed_exp     go to state 56
    unit_exp          go to state 57
    paren_exp         go to state 58
    vtupleExpr        go to state 59
    vstructExpr       go to state 60
    primary_exp       go to state 61
    int_expr          go to state 62
    stringls          go to state 63
    if_exp            go to state 64
    chain_exp         go to state 65
    lambda_exp        go to state 66
    postfix_exp       go to state 67
    tcall_exp         go to state 68
    vcall_exp         go to state 69
    dot_name_exp      go to state 70
    dot_index_exp     go to state 71
    unary_exp         go to state 72
    unary_op          go to state 73
    binary_exp        go to state 74
    mul_binary_exp    go to state 75
    add_binary_exp    go to state 76
    cmp_binary_exp    go to state 77
    eq_binary_exp     go to state 78
    and_binary_exp    go to state 79
    xor_binary_exp    go to state 80
    or_binary_exp     go to state 81
    type_query_exp    go to state 102
    typespec          go to state 103
    primary_typespec  go to state 104
    paren_typespec    go to state 105
    tuple_typespec    go to state 106
    mod_prefix_tid    go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 112


State 47

   68 unit_exp: "{" • "}"
   72 vstructExpr: "{" • struct_exp_field_cl "}"
   88 chain_exp: "{" • expr "}"
   89          | "{" • chain_prefix "}"
   90          | "{" • chain_prefix expr "}"

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "const"                  shift, and go to state 113
    "val"                    shift, and go to state 114
    "var"                    shift, and go to state 115
    "set"                    shift, and go to state 116
    "lambda"                 shift, and go to state 39
    "not"                    shift, and go to state 40
    "discard"                shift, and go to state 117
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    "{"                      shift, and go to state 47
    "}"                      shift, and go to state 118
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    chain_prefix_stmt    go to state 119
    const_stmt           go to state 120
    val_stmt             go to state 121
    var_stmt             go to state 122
    set_stmt             go to state 123
    discard_stmt         go to state 124
    vid                  go to state 125
    floatl               go to state 53
    mod_prefix           go to state 54
    expr                 go to state 126
    bracketed_exp        go to state 56
    unit_exp             go to state 57
    paren_exp            go to state 58
    vtupleExpr           go to state 59
    vstructExpr          go to state 60
    primary_exp          go to state 61
    int_expr             go to state 62
    stringls             go to state 63
    if_exp               go to state 64
    chain_exp            go to state 65
    chain_prefix         go to state 127
    lambda_exp           go to state 66
    postfix_exp          go to state 67
    tcall_exp            go to state 68
    vcall_exp            go to state 69
    dot_name_exp         go to state 70
    dot_index_exp        go to state 71
    unary_exp            go to state 72
    unary_op             go to state 73
    binary_exp           go to state 74
    mul_binary_exp       go to state 75
    add_binary_exp       go to state 76
    cmp_binary_exp       go to state 77
    eq_binary_exp        go to state 78
    and_binary_exp       go to state 79
    xor_binary_exp       go to state 80
    or_binary_exp        go to state 81
    struct_exp_field     go to state 128
    struct_exp_field_cl  go to state 129


State 48

  111 unary_op: "*" •

    $default  reduce using rule 111 (unary_op)


State 49

  109 unary_op: "+" •

    $default  reduce using rule 109 (unary_op)


State 50

  110 unary_op: "-" •

    $default  reduce using rule 110 (unary_op)


State 51

  112 unary_op: "^" •

    $default  reduce using rule 112 (unary_op)


State 52

   53 mod_prefix: vid • ":"
   74 primary_exp: vid •

    ":"  shift, and go to state 130

    $default  reduce using rule 74 (primary_exp)


State 53

   76 primary_exp: floatl •

    $default  reduce using rule 76 (primary_exp)


State 54

   54 mod_prefix: mod_prefix • vid ":"
  104 dot_name_exp: mod_prefix • "<val_id>"

    "<val_id>"  shift, and go to state 131

    vid  go to state 132


State 55

   47 extern_stmt: "extern" vid "from" expr •

    $default  reduce using rule 47 (extern_stmt)


State 56

   73 primary_exp: bracketed_exp •

    $default  reduce using rule 73 (primary_exp)


State 57

   62 bracketed_exp: unit_exp •

    $default  reduce using rule 62 (bracketed_exp)


State 58

   63 bracketed_exp: paren_exp •

    $default  reduce using rule 63 (bracketed_exp)


State 59

   64 bracketed_exp: vtupleExpr •

    $default  reduce using rule 64 (bracketed_exp)


State 60

   65 bracketed_exp: vstructExpr •

    $default  reduce using rule 65 (bracketed_exp)


State 61

   94 postfix_exp: primary_exp •

    $default  reduce using rule 94 (postfix_exp)


State 62

   75 primary_exp: int_expr •

    $default  reduce using rule 75 (primary_exp)


State 63

   77 primary_exp: stringls •
   84 stringls: stringls • "'sq-string-literal'"
   85         | stringls • "\"dq-string-literal\""

    "\"dq-string-literal\""  shift, and go to state 133
    "'sq-string-literal'"    shift, and go to state 134

    $default  reduce using rule 77 (primary_exp)


State 64

   78 primary_exp: if_exp •

    $default  reduce using rule 78 (primary_exp)


State 65

   66 bracketed_exp: chain_exp •

    $default  reduce using rule 66 (bracketed_exp)


State 66

   79 primary_exp: lambda_exp •

    $default  reduce using rule 79 (primary_exp)


State 67

   99 tcall_exp: postfix_exp • "[" targ_cl "]"
  100 vcall_exp: postfix_exp • "(" ")"
  101          | postfix_exp • "(" varg_cl ")"
  102 dot_name_exp: postfix_exp • "." "<val_id>"
  103             | postfix_exp • "." "<TypeId>"
  105 dot_index_exp: postfix_exp • "." int_expr
  106              | postfix_exp • "." bracketed_exp
  107 unary_exp: postfix_exp •

    "."  shift, and go to state 135
    "("  shift, and go to state 136
    "["  shift, and go to state 137

    $default  reduce using rule 107 (unary_exp)


State 68

   95 postfix_exp: tcall_exp •

    $default  reduce using rule 95 (postfix_exp)


State 69

   96 postfix_exp: vcall_exp •

    $default  reduce using rule 96 (postfix_exp)


State 70

   97 postfix_exp: dot_name_exp •

    $default  reduce using rule 97 (postfix_exp)


State 71

   98 postfix_exp: dot_index_exp •

    $default  reduce using rule 98 (postfix_exp)


State 72

  118 mul_binary_exp: unary_exp •

    $default  reduce using rule 118 (mul_binary_exp)


State 73

  108 unary_exp: unary_op • unary_exp

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "lambda"                 shift, and go to state 39
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    vid            go to state 52
    floatl         go to state 53
    mod_prefix     go to state 54
    bracketed_exp  go to state 56
    unit_exp       go to state 57
    paren_exp      go to state 58
    vtupleExpr     go to state 59
    vstructExpr    go to state 60
    primary_exp    go to state 61
    int_expr       go to state 62
    stringls       go to state 63
    if_exp         go to state 64
    chain_exp      go to state 65
    lambda_exp     go to state 66
    postfix_exp    go to state 67
    tcall_exp      go to state 68
    vcall_exp      go to state 69
    dot_name_exp   go to state 70
    dot_index_exp  go to state 71
    unary_exp      go to state 138
    unary_op       go to state 73


State 74

   55 expr: binary_exp •

    $default  reduce using rule 55 (expr)


State 75

  119 mul_binary_exp: mul_binary_exp • mul_binary_op unary_exp
  122 add_binary_exp: mul_binary_exp •

    "*"  shift, and go to state 139
    "/"  shift, and go to state 140
    "%"  shift, and go to state 141

    $default  reduce using rule 122 (add_binary_exp)

    mul_binary_op  go to state 142


State 76

  123 add_binary_exp: add_binary_exp • add_binary_op mul_binary_exp
  128 cmp_binary_exp: add_binary_exp •

    "+"  shift, and go to state 143
    "-"  shift, and go to state 144

    $default  reduce using rule 128 (cmp_binary_exp)

    add_binary_op  go to state 145


State 77

  129 cmp_binary_exp: cmp_binary_exp • cmp_binary_op add_binary_exp
  132 eq_binary_exp: cmp_binary_exp •

    "<"   shift, and go to state 146
    "<="  shift, and go to state 147
    ">"   shift, and go to state 148
    ">="  shift, and go to state 149

    $default  reduce using rule 132 (eq_binary_exp)

    cmp_binary_op  go to state 150


State 78

  133 eq_binary_exp: eq_binary_exp • eq_binary_op cmp_binary_exp
  134 and_binary_exp: eq_binary_exp •

    "=="  shift, and go to state 151
    "!="  shift, and go to state 152

    $default  reduce using rule 134 (and_binary_exp)

    eq_binary_op  go to state 153


State 79

  135 and_binary_exp: and_binary_exp • "and" eq_binary_exp
  136 xor_binary_exp: and_binary_exp •

    "and"  shift, and go to state 154

    $default  reduce using rule 136 (xor_binary_exp)


State 80

  137 xor_binary_exp: xor_binary_exp • "xor" and_binary_exp
  138 or_binary_exp: xor_binary_exp •

    "xor"  shift, and go to state 155

    $default  reduce using rule 138 (or_binary_exp)


State 81

  114 binary_exp: or_binary_exp •
  139 or_binary_exp: or_binary_exp • "or" xor_binary_exp

    "or"  shift, and go to state 156

    $default  reduce using rule 114 (binary_exp)


State 82

   44 using_stmt: "using" vid • "." "*"
   45           | "using" vid • "." vid "*"

    "."  shift, and go to state 157


State 83

   28 fn_stmt: "fn" vid • vpattern "->" typespec "=" bracketed_exp
   29        | "fn" vid • tpattern_seq vpattern "->" typespec "=" bracketed_exp
   30        | "fn" vid • vpattern "=" bracketed_exp
   31        | "fn" vid • tpattern_seq vpattern "=" bracketed_exp

    "("  shift, and go to state 92
    "["  shift, and go to state 158
    "!"  shift, and go to state 159

    vpattern      go to state 160
    tpattern      go to state 161
    tpattern_seq  go to state 162


State 84

   48 tid: "<TypeId>" •

    $default  reduce using rule 48 (tid)


State 85

   32 type_stmt: "type" tid • "=" long_typespec
   33          | "type" tid • tpattern_seq "=" long_typespec
   34 enum_stmt: "type" tid • enum_field_pl
   35          | "type" tid • tpattern_seq enum_field_pl

    "["  shift, and go to state 158
    "="  shift, and go to state 163
    "!"  shift, and go to state 159
    "|"  shift, and go to state 164

    enum_field_pl  go to state 165
    tpattern       go to state 161
    tpattern_seq   go to state 166


State 86

   42 typeclass_stmt: "typeclass" tid • "<" tid typespec ">" "=" "{" type_query_exp_sl "}"
   43               | "typeclass" tid • "<" tid typespec ">" tpattern_seq "=" "{" type_query_exp_sl "}"

    "<"  shift, and go to state 167


State 87

    7 mod_stmt: "mod" "<val_id>" "{" moduleContent "}" •

    $default  reduce using rule 7 (mod_stmt)


State 88

    9 moduleContent: moduleContent moduleContentStmt • ";"

    ";"  shift, and go to state 168


State 89

    8 moduleContent: moduleContentStmt ";" •

    $default  reduce using rule 8 (moduleContent)


State 90

   46 import_stmt: "import" vid "from" stringl "type" • stringl

    "\"dq-string-literal\""  shift, and go to state 35
    "'sq-string-literal'"    shift, and go to state 36

    stringl  go to state 169


State 91

   86 if_exp: "if" bracketed_exp • "then" bracketed_exp
   87       | "if" bracketed_exp • "then" bracketed_exp "else" primary_exp

    "then"  shift, and go to state 170


State 92

  191 vpattern: "(" • vpattern_field_cl ")"
  192         | "(" • ")"

    "<val_id>"  shift, and go to state 11
    "out"       shift, and go to state 171
    "inout"     shift, and go to state 172
    ")"         shift, and go to state 173

    vid                go to state 174
    vpattern_field     go to state 175
    vpattern_field_cl  go to state 176


State 93

   93 lambda_exp: "lambda" vpattern • "=" bracketed_exp

    "="  shift, and go to state 177


State 94

  161 fn_typespec: "Fn" • vpattern primary_typespec

    "("  shift, and go to state 92

    vpattern  go to state 178


State 95

   67 unit_exp: "(" • ")"
   69 paren_exp: "(" • long_exp ")"
   70 vtupleExpr: "(" • expr "," ")"
   71           | "(" • expr_cl2 ")"
  157 paren_typespec: "(" • typespec ")"
  158 tuple_typespec: "(" • typespec "," ")"
  159               | "(" • typespec_cl2 ")"

    "<val_id>"               shift, and go to state 11
    "<TypeId>"               shift, and go to state 84
    "if"                     shift, and go to state 38
    "lambda"                 shift, and go to state 39
    "Fn"                     shift, and go to state 94
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 95
    ")"                      shift, and go to state 96
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    tid               go to state 97
    vid               go to state 52
    floatl            go to state 53
    mod_prefix        go to state 98
    expr              go to state 99
    long_exp          go to state 100
    expr_cl2          go to state 101
    bracketed_exp     go to state 56
    unit_exp          go to state 57
    paren_exp         go to state 58
    vtupleExpr        go to state 59
    vstructExpr       go to state 60
    primary_exp       go to state 61
    int_expr          go to state 62
    stringls          go to state 63
    if_exp            go to state 64
    chain_exp         go to state 65
    lambda_exp        go to state 66
    postfix_exp       go to state 67
    tcall_exp         go to state 68
    vcall_exp         go to state 69
    dot_name_exp      go to state 70
    dot_index_exp     go to state 71
    unary_exp         go to state 72
    unary_op          go to state 73
    binary_exp        go to state 74
    mul_binary_exp    go to state 75
    add_binary_exp    go to state 76
    cmp_binary_exp    go to state 77
    eq_binary_exp     go to state 78
    and_binary_exp    go to state 79
    xor_binary_exp    go to state 80
    or_binary_exp     go to state 81
    type_query_exp    go to state 102
    typespec          go to state 179
    typespec_cl2      go to state 180
    primary_typespec  go to state 104
    paren_typespec    go to state 105
    tuple_typespec    go to state 106
    mod_prefix_tid    go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 112


State 96

   67 unit_exp: "(" ")" •

    $default  reduce using rule 67 (unit_exp)


State 97

  152 primary_typespec: tid •

    $default  reduce using rule 152 (primary_typespec)


State 98

   54 mod_prefix: mod_prefix • vid ":"
  104 dot_name_exp: mod_prefix • "<val_id>"
  160 mod_prefix_tid: mod_prefix • tid

    "<val_id>"  shift, and go to state 131
    "<TypeId>"  shift, and go to state 84

    tid  go to state 181
    vid  go to state 132


State 99

   57 long_exp: expr •
   58 expr_cl2: expr • "," expr
   70 vtupleExpr: "(" expr • "," ")"

    ","  shift, and go to state 182

    $default  reduce using rule 57 (long_exp)


State 100

   69 paren_exp: "(" long_exp • ")"

    ")"  shift, and go to state 183


State 101

   59 expr_cl2: expr_cl2 • "," expr
   71 vtupleExpr: "(" expr_cl2 • ")"

    ","  shift, and go to state 184
    ")"  shift, and go to state 185


State 102

   56 long_exp: type_query_exp •

    $default  reduce using rule 56 (long_exp)


State 103

  140 type_query_exp: typespec • type_query_op typespec

    "::"  shift, and go to state 186
    ":<"  shift, and go to state 187
    ">:"  shift, and go to state 188

    type_query_op  go to state 189


State 104

  162 postfix_typespec: primary_typespec •

    $default  reduce using rule 162 (postfix_typespec)


State 105

  153 primary_typespec: paren_typespec •

    $default  reduce using rule 153 (primary_typespec)


State 106

  154 primary_typespec: tuple_typespec •

    $default  reduce using rule 154 (primary_typespec)


State 107

  155 primary_typespec: mod_prefix_tid •

    $default  reduce using rule 155 (primary_typespec)


State 108

  156 primary_typespec: fn_typespec •

    $default  reduce using rule 156 (primary_typespec)


State 109

  165 tcall_typespec: postfix_typespec • "[" targ_cl "]"
  166 dot_typespec: postfix_typespec • "." "<val_id>"
  167 unary_typespec: postfix_typespec •

    "."  shift, and go to state 190
    "["  shift, and go to state 191

    $default  reduce using rule 167 (unary_typespec)


State 110

  163 postfix_typespec: tcall_typespec •

    $default  reduce using rule 163 (postfix_typespec)


State 111

  164 postfix_typespec: dot_typespec •

    $default  reduce using rule 164 (postfix_typespec)


State 112

  144 typespec: unary_typespec •

    $default  reduce using rule 144 (typespec)


State 113

   15 const_stmt: "const" • lpattern "=" expr

    "<val_id>"  shift, and go to state 11
    "("         shift, and go to state 192

    vid                    go to state 193
    lpattern_field         go to state 194
    destructured_lpattern  go to state 195
    lpattern               go to state 196


State 114

   16 val_stmt: "val" • lpattern "=" expr

    "<val_id>"  shift, and go to state 11
    "("         shift, and go to state 192

    vid                    go to state 193
    lpattern_field         go to state 194
    destructured_lpattern  go to state 195
    lpattern               go to state 197


State 115

   17 var_stmt: "var" • lpattern "=" expr

    "<val_id>"  shift, and go to state 11
    "("         shift, and go to state 192

    vid                    go to state 193
    lpattern_field         go to state 194
    destructured_lpattern  go to state 195
    lpattern               go to state 198


State 116

   18 set_stmt: "set" • expr "=" expr

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "lambda"                 shift, and go to state 39
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    vid             go to state 52
    floatl          go to state 53
    mod_prefix      go to state 54
    expr            go to state 199
    bracketed_exp   go to state 56
    unit_exp        go to state 57
    paren_exp       go to state 58
    vtupleExpr      go to state 59
    vstructExpr     go to state 60
    primary_exp     go to state 61
    int_expr        go to state 62
    stringls        go to state 63
    if_exp          go to state 64
    chain_exp       go to state 65
    lambda_exp      go to state 66
    postfix_exp     go to state 67
    tcall_exp       go to state 68
    vcall_exp       go to state 69
    dot_name_exp    go to state 70
    dot_index_exp   go to state 71
    unary_exp       go to state 72
    unary_op        go to state 73
    binary_exp      go to state 74
    mul_binary_exp  go to state 75
    add_binary_exp  go to state 76
    cmp_binary_exp  go to state 77
    eq_binary_exp   go to state 78
    and_binary_exp  go to state 79
    xor_binary_exp  go to state 80
    or_binary_exp   go to state 81


State 117

   19 discard_stmt: "discard" • expr

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "lambda"                 shift, and go to state 39
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    vid             go to state 52
    floatl          go to state 53
    mod_prefix      go to state 54
    expr            go to state 200
    bracketed_exp   go to state 56
    unit_exp        go to state 57
    paren_exp       go to state 58
    vtupleExpr      go to state 59
    vstructExpr     go to state 60
    primary_exp     go to state 61
    int_expr        go to state 62
    stringls        go to state 63
    if_exp          go to state 64
    chain_exp       go to state 65
    lambda_exp      go to state 66
    postfix_exp     go to state 67
    tcall_exp       go to state 68
    vcall_exp       go to state 69
    dot_name_exp    go to state 70
    dot_index_exp   go to state 71
    unary_exp       go to state 72
    unary_op        go to state 73
    binary_exp      go to state 74
    mul_binary_exp  go to state 75
    add_binary_exp  go to state 76
    cmp_binary_exp  go to state 77
    eq_binary_exp   go to state 78
    and_binary_exp  go to state 79
    xor_binary_exp  go to state 80
    or_binary_exp   go to state 81


State 118

   68 unit_exp: "{" "}" •

    $default  reduce using rule 68 (unit_exp)


State 119

   91 chain_prefix: chain_prefix_stmt • ";"

    ";"  shift, and go to state 201


State 120

   10 chain_prefix_stmt: const_stmt •

    $default  reduce using rule 10 (chain_prefix_stmt)


State 121

   11 chain_prefix_stmt: val_stmt •

    $default  reduce using rule 11 (chain_prefix_stmt)


State 122

   12 chain_prefix_stmt: var_stmt •

    $default  reduce using rule 12 (chain_prefix_stmt)


State 123

   13 chain_prefix_stmt: set_stmt •

    $default  reduce using rule 13 (chain_prefix_stmt)


State 124

   14 chain_prefix_stmt: discard_stmt •

    $default  reduce using rule 14 (chain_prefix_stmt)


State 125

   53 mod_prefix: vid • ":"
   74 primary_exp: vid •
  180 struct_exp_field: vid • "=" expr

    ":"  shift, and go to state 130
    "="  shift, and go to state 202

    $default  reduce using rule 74 (primary_exp)


State 126

   88 chain_exp: "{" expr • "}"

    "}"  shift, and go to state 203


State 127

   89 chain_exp: "{" chain_prefix • "}"
   90          | "{" chain_prefix • expr "}"
   92 chain_prefix: chain_prefix • chain_prefix_stmt ";"

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "const"                  shift, and go to state 113
    "val"                    shift, and go to state 114
    "var"                    shift, and go to state 115
    "set"                    shift, and go to state 116
    "lambda"                 shift, and go to state 39
    "not"                    shift, and go to state 40
    "discard"                shift, and go to state 117
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    "{"                      shift, and go to state 47
    "}"                      shift, and go to state 204
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    chain_prefix_stmt  go to state 205
    const_stmt         go to state 120
    val_stmt           go to state 121
    var_stmt           go to state 122
    set_stmt           go to state 123
    discard_stmt       go to state 124
    vid                go to state 52
    floatl             go to state 53
    mod_prefix         go to state 54
    expr               go to state 206
    bracketed_exp      go to state 56
    unit_exp           go to state 57
    paren_exp          go to state 58
    vtupleExpr         go to state 59
    vstructExpr        go to state 60
    primary_exp        go to state 61
    int_expr           go to state 62
    stringls           go to state 63
    if_exp             go to state 64
    chain_exp          go to state 65
    lambda_exp         go to state 66
    postfix_exp        go to state 67
    tcall_exp          go to state 68
    vcall_exp          go to state 69
    dot_name_exp       go to state 70
    dot_index_exp      go to state 71
    unary_exp          go to state 72
    unary_op           go to state 73
    binary_exp         go to state 74
    mul_binary_exp     go to state 75
    add_binary_exp     go to state 76
    cmp_binary_exp     go to state 77
    eq_binary_exp      go to state 78
    and_binary_exp     go to state 79
    xor_binary_exp     go to state 80
    or_binary_exp      go to state 81


State 128

  201 struct_exp_field_cl: struct_exp_field •

    $default  reduce using rule 201 (struct_exp_field_cl)


State 129

   72 vstructExpr: "{" struct_exp_field_cl • "}"
  202 struct_exp_field_cl: struct_exp_field_cl • "," struct_exp_field

    ","  shift, and go to state 207
    "}"  shift, and go to state 208


State 130

   53 mod_prefix: vid ":" •

    $default  reduce using rule 53 (mod_prefix)


State 131

   49 vid: "<val_id>" •
  104 dot_name_exp: mod_prefix "<val_id>" •

    ":"       reduce using rule 49 (vid)
    $default  reduce using rule 104 (dot_name_exp)


State 132

   54 mod_prefix: mod_prefix vid • ":"

    ":"  shift, and go to state 209


State 133

   85 stringls: stringls "\"dq-string-literal\"" •

    $default  reduce using rule 85 (stringls)


State 134

   84 stringls: stringls "'sq-string-literal'" •

    $default  reduce using rule 84 (stringls)


State 135

  102 dot_name_exp: postfix_exp "." • "<val_id>"
  103             | postfix_exp "." • "<TypeId>"
  105 dot_index_exp: postfix_exp "." • int_expr
  106              | postfix_exp "." • bracketed_exp

    "<val_id>"  shift, and go to state 210
    "<TypeId>"  shift, and go to state 211
    "42"        shift, and go to state 41
    "0x2a"      shift, and go to state 42
    "("         shift, and go to state 46
    "{"         shift, and go to state 47

    bracketed_exp  go to state 212
    unit_exp       go to state 57
    paren_exp      go to state 58
    vtupleExpr     go to state 59
    vstructExpr    go to state 60
    int_expr       go to state 213
    chain_exp      go to state 65


State 136

  100 vcall_exp: postfix_exp "(" • ")"
  101          | postfix_exp "(" • varg_cl ")"

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "lambda"                 shift, and go to state 39
    "not"                    shift, and go to state 40
    "out"                    shift, and go to state 214
    "inout"                  shift, and go to state 215
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    ")"                      shift, and go to state 216
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    vid             go to state 52
    floatl          go to state 53
    mod_prefix      go to state 54
    expr            go to state 217
    bracketed_exp   go to state 56
    unit_exp        go to state 57
    paren_exp       go to state 58
    vtupleExpr      go to state 59
    vstructExpr     go to state 60
    primary_exp     go to state 61
    int_expr        go to state 62
    stringls        go to state 63
    if_exp          go to state 64
    chain_exp       go to state 65
    lambda_exp      go to state 66
    postfix_exp     go to state 67
    tcall_exp       go to state 68
    vcall_exp       go to state 69
    dot_name_exp    go to state 70
    dot_index_exp   go to state 71
    unary_exp       go to state 72
    unary_op        go to state 73
    binary_exp      go to state 74
    mul_binary_exp  go to state 75
    add_binary_exp  go to state 76
    cmp_binary_exp  go to state 77
    eq_binary_exp   go to state 78
    and_binary_exp  go to state 79
    xor_binary_exp  go to state 80
    or_binary_exp   go to state 81
    varg            go to state 218
    varg_cl         go to state 219


State 137

   99 tcall_exp: postfix_exp "[" • targ_cl "]"

    "<val_id>"               shift, and go to state 11
    "<TypeId>"               shift, and go to state 84
    "if"                     shift, and go to state 38
    "lambda"                 shift, and go to state 39
    "Fn"                     shift, and go to state 94
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 95
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    tid               go to state 97
    vid               go to state 52
    floatl            go to state 53
    mod_prefix        go to state 98
    expr              go to state 220
    bracketed_exp     go to state 56
    unit_exp          go to state 57
    paren_exp         go to state 58
    vtupleExpr        go to state 59
    vstructExpr       go to state 60
    primary_exp       go to state 61
    int_expr          go to state 62
    stringls          go to state 63
    if_exp            go to state 64
    chain_exp         go to state 65
    lambda_exp        go to state 66
    postfix_exp       go to state 67
    tcall_exp         go to state 68
    vcall_exp         go to state 69
    dot_name_exp      go to state 70
    dot_index_exp     go to state 71
    unary_exp         go to state 72
    unary_op          go to state 73
    binary_exp        go to state 74
    mul_binary_exp    go to state 75
    add_binary_exp    go to state 76
    cmp_binary_exp    go to state 77
    eq_binary_exp     go to state 78
    and_binary_exp    go to state 79
    xor_binary_exp    go to state 80
    or_binary_exp     go to state 81
    typespec          go to state 221
    primary_typespec  go to state 104
    paren_typespec    go to state 105
    tuple_typespec    go to state 106
    mod_prefix_tid    go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 112
    targ              go to state 222
    targ_cl           go to state 223


State 138

  108 unary_exp: unary_op unary_exp •

    $default  reduce using rule 108 (unary_exp)


State 139

  115 mul_binary_op: "*" •

    $default  reduce using rule 115 (mul_binary_op)


State 140

  116 mul_binary_op: "/" •

    $default  reduce using rule 116 (mul_binary_op)


State 141

  117 mul_binary_op: "%" •

    $default  reduce using rule 117 (mul_binary_op)


State 142

  119 mul_binary_exp: mul_binary_exp mul_binary_op • unary_exp

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "lambda"                 shift, and go to state 39
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    vid            go to state 52
    floatl         go to state 53
    mod_prefix     go to state 54
    bracketed_exp  go to state 56
    unit_exp       go to state 57
    paren_exp      go to state 58
    vtupleExpr     go to state 59
    vstructExpr    go to state 60
    primary_exp    go to state 61
    int_expr       go to state 62
    stringls       go to state 63
    if_exp         go to state 64
    chain_exp      go to state 65
    lambda_exp     go to state 66
    postfix_exp    go to state 67
    tcall_exp      go to state 68
    vcall_exp      go to state 69
    dot_name_exp   go to state 70
    dot_index_exp  go to state 71
    unary_exp      go to state 224
    unary_op       go to state 73


State 143

  120 add_binary_op: "+" •

    $default  reduce using rule 120 (add_binary_op)


State 144

  121 add_binary_op: "-" •

    $default  reduce using rule 121 (add_binary_op)


State 145

  123 add_binary_exp: add_binary_exp add_binary_op • mul_binary_exp

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "lambda"                 shift, and go to state 39
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    vid             go to state 52
    floatl          go to state 53
    mod_prefix      go to state 54
    bracketed_exp   go to state 56
    unit_exp        go to state 57
    paren_exp       go to state 58
    vtupleExpr      go to state 59
    vstructExpr     go to state 60
    primary_exp     go to state 61
    int_expr        go to state 62
    stringls        go to state 63
    if_exp          go to state 64
    chain_exp       go to state 65
    lambda_exp      go to state 66
    postfix_exp     go to state 67
    tcall_exp       go to state 68
    vcall_exp       go to state 69
    dot_name_exp    go to state 70
    dot_index_exp   go to state 71
    unary_exp       go to state 72
    unary_op        go to state 73
    mul_binary_exp  go to state 225


State 146

  124 cmp_binary_op: "<" •

    $default  reduce using rule 124 (cmp_binary_op)


State 147

  125 cmp_binary_op: "<=" •

    $default  reduce using rule 125 (cmp_binary_op)


State 148

  126 cmp_binary_op: ">" •

    $default  reduce using rule 126 (cmp_binary_op)


State 149

  127 cmp_binary_op: ">=" •

    $default  reduce using rule 127 (cmp_binary_op)


State 150

  129 cmp_binary_exp: cmp_binary_exp cmp_binary_op • add_binary_exp

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "lambda"                 shift, and go to state 39
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    vid             go to state 52
    floatl          go to state 53
    mod_prefix      go to state 54
    bracketed_exp   go to state 56
    unit_exp        go to state 57
    paren_exp       go to state 58
    vtupleExpr      go to state 59
    vstructExpr     go to state 60
    primary_exp     go to state 61
    int_expr        go to state 62
    stringls        go to state 63
    if_exp          go to state 64
    chain_exp       go to state 65
    lambda_exp      go to state 66
    postfix_exp     go to state 67
    tcall_exp       go to state 68
    vcall_exp       go to state 69
    dot_name_exp    go to state 70
    dot_index_exp   go to state 71
    unary_exp       go to state 72
    unary_op        go to state 73
    mul_binary_exp  go to state 75
    add_binary_exp  go to state 226


State 151

  130 eq_binary_op: "==" •

    $default  reduce using rule 130 (eq_binary_op)


State 152

  131 eq_binary_op: "!=" •

    $default  reduce using rule 131 (eq_binary_op)


State 153

  133 eq_binary_exp: eq_binary_exp eq_binary_op • cmp_binary_exp

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "lambda"                 shift, and go to state 39
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    vid             go to state 52
    floatl          go to state 53
    mod_prefix      go to state 54
    bracketed_exp   go to state 56
    unit_exp        go to state 57
    paren_exp       go to state 58
    vtupleExpr      go to state 59
    vstructExpr     go to state 60
    primary_exp     go to state 61
    int_expr        go to state 62
    stringls        go to state 63
    if_exp          go to state 64
    chain_exp       go to state 65
    lambda_exp      go to state 66
    postfix_exp     go to state 67
    tcall_exp       go to state 68
    vcall_exp       go to state 69
    dot_name_exp    go to state 70
    dot_index_exp   go to state 71
    unary_exp       go to state 72
    unary_op        go to state 73
    mul_binary_exp  go to state 75
    add_binary_exp  go to state 76
    cmp_binary_exp  go to state 227


State 154

  135 and_binary_exp: and_binary_exp "and" • eq_binary_exp

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "lambda"                 shift, and go to state 39
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    vid             go to state 52
    floatl          go to state 53
    mod_prefix      go to state 54
    bracketed_exp   go to state 56
    unit_exp        go to state 57
    paren_exp       go to state 58
    vtupleExpr      go to state 59
    vstructExpr     go to state 60
    primary_exp     go to state 61
    int_expr        go to state 62
    stringls        go to state 63
    if_exp          go to state 64
    chain_exp       go to state 65
    lambda_exp      go to state 66
    postfix_exp     go to state 67
    tcall_exp       go to state 68
    vcall_exp       go to state 69
    dot_name_exp    go to state 70
    dot_index_exp   go to state 71
    unary_exp       go to state 72
    unary_op        go to state 73
    mul_binary_exp  go to state 75
    add_binary_exp  go to state 76
    cmp_binary_exp  go to state 77
    eq_binary_exp   go to state 228


State 155

  137 xor_binary_exp: xor_binary_exp "xor" • and_binary_exp

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "lambda"                 shift, and go to state 39
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    vid             go to state 52
    floatl          go to state 53
    mod_prefix      go to state 54
    bracketed_exp   go to state 56
    unit_exp        go to state 57
    paren_exp       go to state 58
    vtupleExpr      go to state 59
    vstructExpr     go to state 60
    primary_exp     go to state 61
    int_expr        go to state 62
    stringls        go to state 63
    if_exp          go to state 64
    chain_exp       go to state 65
    lambda_exp      go to state 66
    postfix_exp     go to state 67
    tcall_exp       go to state 68
    vcall_exp       go to state 69
    dot_name_exp    go to state 70
    dot_index_exp   go to state 71
    unary_exp       go to state 72
    unary_op        go to state 73
    mul_binary_exp  go to state 75
    add_binary_exp  go to state 76
    cmp_binary_exp  go to state 77
    eq_binary_exp   go to state 78
    and_binary_exp  go to state 229


State 156

  139 or_binary_exp: or_binary_exp "or" • xor_binary_exp

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "lambda"                 shift, and go to state 39
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    vid             go to state 52
    floatl          go to state 53
    mod_prefix      go to state 54
    bracketed_exp   go to state 56
    unit_exp        go to state 57
    paren_exp       go to state 58
    vtupleExpr      go to state 59
    vstructExpr     go to state 60
    primary_exp     go to state 61
    int_expr        go to state 62
    stringls        go to state 63
    if_exp          go to state 64
    chain_exp       go to state 65
    lambda_exp      go to state 66
    postfix_exp     go to state 67
    tcall_exp       go to state 68
    vcall_exp       go to state 69
    dot_name_exp    go to state 70
    dot_index_exp   go to state 71
    unary_exp       go to state 72
    unary_op        go to state 73
    mul_binary_exp  go to state 75
    add_binary_exp  go to state 76
    cmp_binary_exp  go to state 77
    eq_binary_exp   go to state 78
    and_binary_exp  go to state 79
    xor_binary_exp  go to state 230


State 157

   44 using_stmt: "using" vid "." • "*"
   45           | "using" vid "." • vid "*"

    "<val_id>"  shift, and go to state 11
    "*"         shift, and go to state 231

    vid  go to state 232


State 158

  193 tpattern: "[" • tpattern_field_cl "]"

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84

    tid                go to state 233
    vid                go to state 234
    tpattern_field     go to state 235
    tpattern_field_cl  go to state 236


State 159

  194 tpattern: "!" • "[" tpattern_field_cl "]"

    "["  shift, and go to state 237


State 160

   28 fn_stmt: "fn" vid vpattern • "->" typespec "=" bracketed_exp
   30        | "fn" vid vpattern • "=" bracketed_exp

    "->"  shift, and go to state 238
    "="   shift, and go to state 239


State 161

  203 tpattern_seq: tpattern •

    $default  reduce using rule 203 (tpattern_seq)


State 162

   29 fn_stmt: "fn" vid tpattern_seq • vpattern "->" typespec "=" bracketed_exp
   31        | "fn" vid tpattern_seq • vpattern "=" bracketed_exp
  204 tpattern_seq: tpattern_seq • tpattern

    "("  shift, and go to state 92
    "["  shift, and go to state 158
    "!"  shift, and go to state 159

    vpattern  go to state 240
    tpattern  go to state 241


State 163

   32 type_stmt: "type" tid "=" • long_typespec

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84
    "Fn"        shift, and go to state 94
    "("         shift, and go to state 242
    "{"         shift, and go to state 243

    tid               go to state 97
    vid               go to state 244
    mod_prefix        go to state 245
    primary_typespec  go to state 104
    paren_typespec    go to state 105
    tuple_typespec    go to state 106
    mod_prefix_tid    go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 246
    long_typespec     go to state 247
    struct_typespec   go to state 248


State 164

   36 enum_field_pl: "|" • unprefixed_enum_field_pl

    "<TypeId>"  shift, and go to state 84

    unprefixed_enum_field_pl  go to state 249
    enum_field                go to state 250
    tid                       go to state 251


State 165

   34 enum_stmt: "type" tid enum_field_pl •

    $default  reduce using rule 34 (enum_stmt)


State 166

   33 type_stmt: "type" tid tpattern_seq • "=" long_typespec
   35 enum_stmt: "type" tid tpattern_seq • enum_field_pl
  204 tpattern_seq: tpattern_seq • tpattern

    "["  shift, and go to state 158
    "="  shift, and go to state 252
    "!"  shift, and go to state 159
    "|"  shift, and go to state 164

    enum_field_pl  go to state 253
    tpattern       go to state 241


State 167

   42 typeclass_stmt: "typeclass" tid "<" • tid typespec ">" "=" "{" type_query_exp_sl "}"
   43               | "typeclass" tid "<" • tid typespec ">" tpattern_seq "=" "{" type_query_exp_sl "}"

    "<TypeId>"  shift, and go to state 84

    tid  go to state 254


State 168

    9 moduleContent: moduleContent moduleContentStmt ";" •

    $default  reduce using rule 9 (moduleContent)


State 169

   46 import_stmt: "import" vid "from" stringl "type" stringl •

    $default  reduce using rule 46 (import_stmt)


State 170

   86 if_exp: "if" bracketed_exp "then" • bracketed_exp
   87       | "if" bracketed_exp "then" • bracketed_exp "else" primary_exp

    "("  shift, and go to state 46
    "{"  shift, and go to state 47

    bracketed_exp  go to state 255
    unit_exp       go to state 57
    paren_exp      go to state 58
    vtupleExpr     go to state 59
    vstructExpr    go to state 60
    chain_exp      go to state 65


State 171

  182 vpattern_field: "out" • vid typespec

    "<val_id>"  shift, and go to state 11

    vid  go to state 256


State 172

  183 vpattern_field: "inout" • vid typespec

    "<val_id>"  shift, and go to state 11

    vid  go to state 257


State 173

  192 vpattern: "(" ")" •

    $default  reduce using rule 192 (vpattern)


State 174

  181 vpattern_field: vid • typespec

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84
    "Fn"        shift, and go to state 94
    "("         shift, and go to state 242

    tid               go to state 97
    vid               go to state 244
    mod_prefix        go to state 245
    typespec          go to state 258
    primary_typespec  go to state 104
    paren_typespec    go to state 105
    tuple_typespec    go to state 106
    mod_prefix_tid    go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 112


State 175

  195 vpattern_field_cl: vpattern_field •

    $default  reduce using rule 195 (vpattern_field_cl)


State 176

  191 vpattern: "(" vpattern_field_cl • ")"
  196 vpattern_field_cl: vpattern_field_cl • "," vpattern_field

    ","  shift, and go to state 259
    ")"  shift, and go to state 260


State 177

   93 lambda_exp: "lambda" vpattern "=" • bracketed_exp

    "("  shift, and go to state 46
    "{"  shift, and go to state 47

    bracketed_exp  go to state 261
    unit_exp       go to state 57
    paren_exp      go to state 58
    vtupleExpr     go to state 59
    vstructExpr    go to state 60
    chain_exp      go to state 65


State 178

  161 fn_typespec: "Fn" vpattern • primary_typespec

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84
    "Fn"        shift, and go to state 94
    "("         shift, and go to state 242

    tid               go to state 97
    vid               go to state 244
    mod_prefix        go to state 245
    primary_typespec  go to state 262
    paren_typespec    go to state 105
    tuple_typespec    go to state 106
    mod_prefix_tid    go to state 107
    fn_typespec       go to state 108


State 179

  140 type_query_exp: typespec • type_query_op typespec
  147 typespec_cl2: typespec • "," typespec
  157 paren_typespec: "(" typespec • ")"
  158 tuple_typespec: "(" typespec • "," ")"

    ","   shift, and go to state 263
    "::"  shift, and go to state 186
    ")"   shift, and go to state 264
    ":<"  shift, and go to state 187
    ">:"  shift, and go to state 188

    type_query_op  go to state 189


State 180

  148 typespec_cl2: typespec_cl2 • "," typespec
  159 tuple_typespec: "(" typespec_cl2 • ")"

    ","  shift, and go to state 265
    ")"  shift, and go to state 266


State 181

  160 mod_prefix_tid: mod_prefix tid •

    $default  reduce using rule 160 (mod_prefix_tid)


State 182

   58 expr_cl2: expr "," • expr
   70 vtupleExpr: "(" expr "," • ")"

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "lambda"                 shift, and go to state 39
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    ")"                      shift, and go to state 267
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    vid             go to state 52
    floatl          go to state 53
    mod_prefix      go to state 54
    expr            go to state 268
    bracketed_exp   go to state 56
    unit_exp        go to state 57
    paren_exp       go to state 58
    vtupleExpr      go to state 59
    vstructExpr     go to state 60
    primary_exp     go to state 61
    int_expr        go to state 62
    stringls        go to state 63
    if_exp          go to state 64
    chain_exp       go to state 65
    lambda_exp      go to state 66
    postfix_exp     go to state 67
    tcall_exp       go to state 68
    vcall_exp       go to state 69
    dot_name_exp    go to state 70
    dot_index_exp   go to state 71
    unary_exp       go to state 72
    unary_op        go to state 73
    binary_exp      go to state 74
    mul_binary_exp  go to state 75
    add_binary_exp  go to state 76
    cmp_binary_exp  go to state 77
    eq_binary_exp   go to state 78
    and_binary_exp  go to state 79
    xor_binary_exp  go to state 80
    or_binary_exp   go to state 81


State 183

   69 paren_exp: "(" long_exp ")" •

    $default  reduce using rule 69 (paren_exp)


State 184

   59 expr_cl2: expr_cl2 "," • expr

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "lambda"                 shift, and go to state 39
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    vid             go to state 52
    floatl          go to state 53
    mod_prefix      go to state 54
    expr            go to state 269
    bracketed_exp   go to state 56
    unit_exp        go to state 57
    paren_exp       go to state 58
    vtupleExpr      go to state 59
    vstructExpr     go to state 60
    primary_exp     go to state 61
    int_expr        go to state 62
    stringls        go to state 63
    if_exp          go to state 64
    chain_exp       go to state 65
    lambda_exp      go to state 66
    postfix_exp     go to state 67
    tcall_exp       go to state 68
    vcall_exp       go to state 69
    dot_name_exp    go to state 70
    dot_index_exp   go to state 71
    unary_exp       go to state 72
    unary_op        go to state 73
    binary_exp      go to state 74
    mul_binary_exp  go to state 75
    add_binary_exp  go to state 76
    cmp_binary_exp  go to state 77
    eq_binary_exp   go to state 78
    and_binary_exp  go to state 79
    xor_binary_exp  go to state 80
    or_binary_exp   go to state 81


State 185

   71 vtupleExpr: "(" expr_cl2 ")" •

    $default  reduce using rule 71 (vtupleExpr)


State 186

  143 type_query_op: "::" •

    $default  reduce using rule 143 (type_query_op)


State 187

  141 type_query_op: ":<" •

    $default  reduce using rule 141 (type_query_op)


State 188

  142 type_query_op: ">:" •

    $default  reduce using rule 142 (type_query_op)


State 189

  140 type_query_exp: typespec type_query_op • typespec

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84
    "Fn"        shift, and go to state 94
    "("         shift, and go to state 242

    tid               go to state 97
    vid               go to state 244
    mod_prefix        go to state 245
    typespec          go to state 270
    primary_typespec  go to state 104
    paren_typespec    go to state 105
    tuple_typespec    go to state 106
    mod_prefix_tid    go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 112


State 190

  166 dot_typespec: postfix_typespec "." • "<val_id>"

    "<val_id>"  shift, and go to state 271


State 191

  165 tcall_typespec: postfix_typespec "[" • targ_cl "]"

    "<val_id>"               shift, and go to state 11
    "<TypeId>"               shift, and go to state 84
    "if"                     shift, and go to state 38
    "lambda"                 shift, and go to state 39
    "Fn"                     shift, and go to state 94
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 95
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    tid               go to state 97
    vid               go to state 52
    floatl            go to state 53
    mod_prefix        go to state 98
    expr              go to state 220
    bracketed_exp     go to state 56
    unit_exp          go to state 57
    paren_exp         go to state 58
    vtupleExpr        go to state 59
    vstructExpr       go to state 60
    primary_exp       go to state 61
    int_expr          go to state 62
    stringls          go to state 63
    if_exp            go to state 64
    chain_exp         go to state 65
    lambda_exp        go to state 66
    postfix_exp       go to state 67
    tcall_exp         go to state 68
    vcall_exp         go to state 69
    dot_name_exp      go to state 70
    dot_index_exp     go to state 71
    unary_exp         go to state 72
    unary_op          go to state 73
    binary_exp        go to state 74
    mul_binary_exp    go to state 75
    add_binary_exp    go to state 76
    cmp_binary_exp    go to state 77
    eq_binary_exp     go to state 78
    and_binary_exp    go to state 79
    xor_binary_exp    go to state 80
    or_binary_exp     go to state 81
    typespec          go to state 221
    primary_typespec  go to state 104
    paren_typespec    go to state 105
    tuple_typespec    go to state 106
    mod_prefix_tid    go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 112
    targ              go to state 222
    targ_cl           go to state 272


State 192

  188 destructured_lpattern: "(" • lpattern_field_cl ")"

    "<val_id>"  shift, and go to state 11

    vid                go to state 193
    lpattern_field     go to state 273
    lpattern_field_cl  go to state 274


State 193

  184 lpattern_field: vid • typespec
  185               | vid •

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84
    "Fn"        shift, and go to state 94
    "("         shift, and go to state 242

    $default  reduce using rule 185 (lpattern_field)

    tid               go to state 97
    vid               go to state 244
    mod_prefix        go to state 245
    typespec          go to state 275
    primary_typespec  go to state 104
    paren_typespec    go to state 105
    tuple_typespec    go to state 106
    mod_prefix_tid    go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 112


State 194

  189 lpattern: lpattern_field •

    $default  reduce using rule 189 (lpattern)


State 195

  190 lpattern: destructured_lpattern •

    $default  reduce using rule 190 (lpattern)


State 196

   15 const_stmt: "const" lpattern • "=" expr

    "="  shift, and go to state 276


State 197

   16 val_stmt: "val" lpattern • "=" expr

    "="  shift, and go to state 277


State 198

   17 var_stmt: "var" lpattern • "=" expr

    "="  shift, and go to state 278


State 199

   18 set_stmt: "set" expr • "=" expr

    "="  shift, and go to state 279


State 200

   19 discard_stmt: "discard" expr •

    $default  reduce using rule 19 (discard_stmt)


State 201

   91 chain_prefix: chain_prefix_stmt ";" •

    $default  reduce using rule 91 (chain_prefix)


State 202

  180 struct_exp_field: vid "=" • expr

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "lambda"                 shift, and go to state 39
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    vid             go to state 52
    floatl          go to state 53
    mod_prefix      go to state 54
    expr            go to state 280
    bracketed_exp   go to state 56
    unit_exp        go to state 57
    paren_exp       go to state 58
    vtupleExpr      go to state 59
    vstructExpr     go to state 60
    primary_exp     go to state 61
    int_expr        go to state 62
    stringls        go to state 63
    if_exp          go to state 64
    chain_exp       go to state 65
    lambda_exp      go to state 66
    postfix_exp     go to state 67
    tcall_exp       go to state 68
    vcall_exp       go to state 69
    dot_name_exp    go to state 70
    dot_index_exp   go to state 71
    unary_exp       go to state 72
    unary_op        go to state 73
    binary_exp      go to state 74
    mul_binary_exp  go to state 75
    add_binary_exp  go to state 76
    cmp_binary_exp  go to state 77
    eq_binary_exp   go to state 78
    and_binary_exp  go to state 79
    xor_binary_exp  go to state 80
    or_binary_exp   go to state 81


State 203

   88 chain_exp: "{" expr "}" •

    $default  reduce using rule 88 (chain_exp)


State 204

   89 chain_exp: "{" chain_prefix "}" •

    $default  reduce using rule 89 (chain_exp)


State 205

   92 chain_prefix: chain_prefix chain_prefix_stmt • ";"

    ";"  shift, and go to state 281


State 206

   90 chain_exp: "{" chain_prefix expr • "}"

    "}"  shift, and go to state 282


State 207

  202 struct_exp_field_cl: struct_exp_field_cl "," • struct_exp_field

    "<val_id>"  shift, and go to state 11

    vid               go to state 283
    struct_exp_field  go to state 284


State 208

   72 vstructExpr: "{" struct_exp_field_cl "}" •

    $default  reduce using rule 72 (vstructExpr)


State 209

   54 mod_prefix: mod_prefix vid ":" •

    $default  reduce using rule 54 (mod_prefix)


State 210

  102 dot_name_exp: postfix_exp "." "<val_id>" •

    $default  reduce using rule 102 (dot_name_exp)


State 211

  103 dot_name_exp: postfix_exp "." "<TypeId>" •

    $default  reduce using rule 103 (dot_name_exp)


State 212

  106 dot_index_exp: postfix_exp "." bracketed_exp •

    $default  reduce using rule 106 (dot_index_exp)


State 213

  105 dot_index_exp: postfix_exp "." int_expr •

    $default  reduce using rule 105 (dot_index_exp)


State 214

  176 varg: "out" • expr

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "lambda"                 shift, and go to state 39
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    vid             go to state 52
    floatl          go to state 53
    mod_prefix      go to state 54
    expr            go to state 285
    bracketed_exp   go to state 56
    unit_exp        go to state 57
    paren_exp       go to state 58
    vtupleExpr      go to state 59
    vstructExpr     go to state 60
    primary_exp     go to state 61
    int_expr        go to state 62
    stringls        go to state 63
    if_exp          go to state 64
    chain_exp       go to state 65
    lambda_exp      go to state 66
    postfix_exp     go to state 67
    tcall_exp       go to state 68
    vcall_exp       go to state 69
    dot_name_exp    go to state 70
    dot_index_exp   go to state 71
    unary_exp       go to state 72
    unary_op        go to state 73
    binary_exp      go to state 74
    mul_binary_exp  go to state 75
    add_binary_exp  go to state 76
    cmp_binary_exp  go to state 77
    eq_binary_exp   go to state 78
    and_binary_exp  go to state 79
    xor_binary_exp  go to state 80
    or_binary_exp   go to state 81


State 215

  177 varg: "inout" • expr

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "lambda"                 shift, and go to state 39
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    vid             go to state 52
    floatl          go to state 53
    mod_prefix      go to state 54
    expr            go to state 286
    bracketed_exp   go to state 56
    unit_exp        go to state 57
    paren_exp       go to state 58
    vtupleExpr      go to state 59
    vstructExpr     go to state 60
    primary_exp     go to state 61
    int_expr        go to state 62
    stringls        go to state 63
    if_exp          go to state 64
    chain_exp       go to state 65
    lambda_exp      go to state 66
    postfix_exp     go to state 67
    tcall_exp       go to state 68
    vcall_exp       go to state 69
    dot_name_exp    go to state 70
    dot_index_exp   go to state 71
    unary_exp       go to state 72
    unary_op        go to state 73
    binary_exp      go to state 74
    mul_binary_exp  go to state 75
    add_binary_exp  go to state 76
    cmp_binary_exp  go to state 77
    eq_binary_exp   go to state 78
    and_binary_exp  go to state 79
    xor_binary_exp  go to state 80
    or_binary_exp   go to state 81


State 216

  100 vcall_exp: postfix_exp "(" ")" •

    $default  reduce using rule 100 (vcall_exp)


State 217

  175 varg: expr •

    $default  reduce using rule 175 (varg)


State 218

  178 varg_cl: varg •

    $default  reduce using rule 178 (varg_cl)


State 219

  101 vcall_exp: postfix_exp "(" varg_cl • ")"
  179 varg_cl: varg_cl • "," varg

    ","  shift, and go to state 287
    ")"  shift, and go to state 288


State 220

  172 targ: expr •

    $default  reduce using rule 172 (targ)


State 221

  171 targ: typespec •

    $default  reduce using rule 171 (targ)


State 222

  173 targ_cl: targ •

    $default  reduce using rule 173 (targ_cl)


State 223

   99 tcall_exp: postfix_exp "[" targ_cl • "]"
  174 targ_cl: targ_cl • "," targ

    ","  shift, and go to state 289
    "]"  shift, and go to state 290


State 224

  119 mul_binary_exp: mul_binary_exp mul_binary_op unary_exp •

    $default  reduce using rule 119 (mul_binary_exp)


State 225

  119 mul_binary_exp: mul_binary_exp • mul_binary_op unary_exp
  123 add_binary_exp: add_binary_exp add_binary_op mul_binary_exp •

    "*"  shift, and go to state 139
    "/"  shift, and go to state 140
    "%"  shift, and go to state 141

    $default  reduce using rule 123 (add_binary_exp)

    mul_binary_op  go to state 142


State 226

  123 add_binary_exp: add_binary_exp • add_binary_op mul_binary_exp
  129 cmp_binary_exp: cmp_binary_exp cmp_binary_op add_binary_exp •

    "+"  shift, and go to state 143
    "-"  shift, and go to state 144

    $default  reduce using rule 129 (cmp_binary_exp)

    add_binary_op  go to state 145


State 227

  129 cmp_binary_exp: cmp_binary_exp • cmp_binary_op add_binary_exp
  133 eq_binary_exp: eq_binary_exp eq_binary_op cmp_binary_exp •

    "<"   shift, and go to state 146
    "<="  shift, and go to state 147
    ">"   shift, and go to state 148
    ">="  shift, and go to state 149

    $default  reduce using rule 133 (eq_binary_exp)

    cmp_binary_op  go to state 150


State 228

  133 eq_binary_exp: eq_binary_exp • eq_binary_op cmp_binary_exp
  135 and_binary_exp: and_binary_exp "and" eq_binary_exp •

    "=="  shift, and go to state 151
    "!="  shift, and go to state 152

    $default  reduce using rule 135 (and_binary_exp)

    eq_binary_op  go to state 153


State 229

  135 and_binary_exp: and_binary_exp • "and" eq_binary_exp
  137 xor_binary_exp: xor_binary_exp "xor" and_binary_exp •

    "and"  shift, and go to state 154

    $default  reduce using rule 137 (xor_binary_exp)


State 230

  137 xor_binary_exp: xor_binary_exp • "xor" and_binary_exp
  139 or_binary_exp: or_binary_exp "or" xor_binary_exp •

    "xor"  shift, and go to state 155

    $default  reduce using rule 139 (or_binary_exp)


State 231

   44 using_stmt: "using" vid "." "*" •

    $default  reduce using rule 44 (using_stmt)


State 232

   45 using_stmt: "using" vid "." vid • "*"

    "*"  shift, and go to state 291


State 233

  187 tpattern_field: tid • typespec

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84
    "Fn"        shift, and go to state 94
    "("         shift, and go to state 242

    tid               go to state 97
    vid               go to state 244
    mod_prefix        go to state 245
    typespec          go to state 292
    primary_typespec  go to state 104
    paren_typespec    go to state 105
    tuple_typespec    go to state 106
    mod_prefix_tid    go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 112


State 234

  186 tpattern_field: vid • typespec

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84
    "Fn"        shift, and go to state 94
    "("         shift, and go to state 242

    tid               go to state 97
    vid               go to state 244
    mod_prefix        go to state 245
    typespec          go to state 293
    primary_typespec  go to state 104
    paren_typespec    go to state 105
    tuple_typespec    go to state 106
    mod_prefix_tid    go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 112


State 235

  199 tpattern_field_cl: tpattern_field •

    $default  reduce using rule 199 (tpattern_field_cl)


State 236

  193 tpattern: "[" tpattern_field_cl • "]"
  200 tpattern_field_cl: tpattern_field_cl • "," tpattern_field

    ","  shift, and go to state 294
    "]"  shift, and go to state 295


State 237

  194 tpattern: "!" "[" • tpattern_field_cl "]"

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84

    tid                go to state 233
    vid                go to state 234
    tpattern_field     go to state 235
    tpattern_field_cl  go to state 296


State 238

   28 fn_stmt: "fn" vid vpattern "->" • typespec "=" bracketed_exp

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84
    "Fn"        shift, and go to state 94
    "("         shift, and go to state 242

    tid               go to state 97
    vid               go to state 244
    mod_prefix        go to state 245
    typespec          go to state 297
    primary_typespec  go to state 104
    paren_typespec    go to state 105
    tuple_typespec    go to state 106
    mod_prefix_tid    go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 112


State 239

   30 fn_stmt: "fn" vid vpattern "=" • bracketed_exp

    "("  shift, and go to state 46
    "{"  shift, and go to state 47

    bracketed_exp  go to state 298
    unit_exp       go to state 57
    paren_exp      go to state 58
    vtupleExpr     go to state 59
    vstructExpr    go to state 60
    chain_exp      go to state 65


State 240

   29 fn_stmt: "fn" vid tpattern_seq vpattern • "->" typespec "=" bracketed_exp
   31        | "fn" vid tpattern_seq vpattern • "=" bracketed_exp

    "->"  shift, and go to state 299
    "="   shift, and go to state 300


State 241

  204 tpattern_seq: tpattern_seq tpattern •

    $default  reduce using rule 204 (tpattern_seq)


State 242

  157 paren_typespec: "(" • typespec ")"
  158 tuple_typespec: "(" • typespec "," ")"
  159               | "(" • typespec_cl2 ")"

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84
    "Fn"        shift, and go to state 94
    "("         shift, and go to state 242

    tid               go to state 97
    vid               go to state 244
    mod_prefix        go to state 245
    typespec          go to state 301
    typespec_cl2      go to state 180
    primary_typespec  go to state 104
    paren_typespec    go to state 105
    tuple_typespec    go to state 106
    mod_prefix_tid    go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 112


State 243

  170 struct_typespec: "{" • struct_typespec_field_cl "}"

    "<val_id>"  shift, and go to state 11

    vid                       go to state 302
    struct_typespec_field     go to state 303
    struct_typespec_field_cl  go to state 304


State 244

   53 mod_prefix: vid • ":"

    ":"  shift, and go to state 130


State 245

   54 mod_prefix: mod_prefix • vid ":"
  160 mod_prefix_tid: mod_prefix • tid

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84

    tid  go to state 181
    vid  go to state 132


State 246

  168 long_typespec: unary_typespec •

    $default  reduce using rule 168 (long_typespec)


State 247

   32 type_stmt: "type" tid "=" long_typespec •

    $default  reduce using rule 32 (type_stmt)


State 248

  169 long_typespec: struct_typespec •

    $default  reduce using rule 169 (long_typespec)


State 249

   36 enum_field_pl: "|" unprefixed_enum_field_pl •
   38 unprefixed_enum_field_pl: unprefixed_enum_field_pl • "|" enum_field

    "|"  shift, and go to state 305

    $default  reduce using rule 36 (enum_field_pl)


State 250

   37 unprefixed_enum_field_pl: enum_field •

    $default  reduce using rule 37 (unprefixed_enum_field_pl)


State 251

   39 enum_field: tid •
   40           | tid • "(" ")"
   41           | tid • "(" typespec_cl1 ")"

    "("  shift, and go to state 306

    $default  reduce using rule 39 (enum_field)


State 252

   33 type_stmt: "type" tid tpattern_seq "=" • long_typespec

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84
    "Fn"        shift, and go to state 94
    "("         shift, and go to state 242
    "{"         shift, and go to state 243

    tid               go to state 97
    vid               go to state 244
    mod_prefix        go to state 245
    primary_typespec  go to state 104
    paren_typespec    go to state 105
    tuple_typespec    go to state 106
    mod_prefix_tid    go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 246
    long_typespec     go to state 307
    struct_typespec   go to state 248


State 253

   35 enum_stmt: "type" tid tpattern_seq enum_field_pl •

    $default  reduce using rule 35 (enum_stmt)


State 254

   42 typeclass_stmt: "typeclass" tid "<" tid • typespec ">" "=" "{" type_query_exp_sl "}"
   43               | "typeclass" tid "<" tid • typespec ">" tpattern_seq "=" "{" type_query_exp_sl "}"

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84
    "Fn"        shift, and go to state 94
    "("         shift, and go to state 242

    tid               go to state 97
    vid               go to state 244
    mod_prefix        go to state 245
    typespec          go to state 308
    primary_typespec  go to state 104
    paren_typespec    go to state 105
    tuple_typespec    go to state 106
    mod_prefix_tid    go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 112


State 255

   86 if_exp: "if" bracketed_exp "then" bracketed_exp •
   87       | "if" bracketed_exp "then" bracketed_exp • "else" primary_exp

    "else"  shift, and go to state 309

    $default  reduce using rule 86 (if_exp)


State 256

  182 vpattern_field: "out" vid • typespec

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84
    "Fn"        shift, and go to state 94
    "("         shift, and go to state 242

    tid               go to state 97
    vid               go to state 244
    mod_prefix        go to state 245
    typespec          go to state 310
    primary_typespec  go to state 104
    paren_typespec    go to state 105
    tuple_typespec    go to state 106
    mod_prefix_tid    go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 112


State 257

  183 vpattern_field: "inout" vid • typespec

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84
    "Fn"        shift, and go to state 94
    "("         shift, and go to state 242

    tid               go to state 97
    vid               go to state 244
    mod_prefix        go to state 245
    typespec          go to state 311
    primary_typespec  go to state 104
    paren_typespec    go to state 105
    tuple_typespec    go to state 106
    mod_prefix_tid    go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 112


State 258

  181 vpattern_field: vid typespec •

    $default  reduce using rule 181 (vpattern_field)


State 259

  196 vpattern_field_cl: vpattern_field_cl "," • vpattern_field

    "<val_id>"  shift, and go to state 11
    "out"       shift, and go to state 171
    "inout"     shift, and go to state 172

    vid             go to state 174
    vpattern_field  go to state 312


State 260

  191 vpattern: "(" vpattern_field_cl ")" •

    $default  reduce using rule 191 (vpattern)


State 261

   93 lambda_exp: "lambda" vpattern "=" bracketed_exp •

    $default  reduce using rule 93 (lambda_exp)


State 262

  161 fn_typespec: "Fn" vpattern primary_typespec •

    $default  reduce using rule 161 (fn_typespec)


State 263

  147 typespec_cl2: typespec "," • typespec
  158 tuple_typespec: "(" typespec "," • ")"

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84
    "Fn"        shift, and go to state 94
    "("         shift, and go to state 242
    ")"         shift, and go to state 313

    tid               go to state 97
    vid               go to state 244
    mod_prefix        go to state 245
    typespec          go to state 314
    primary_typespec  go to state 104
    paren_typespec    go to state 105
    tuple_typespec    go to state 106
    mod_prefix_tid    go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 112


State 264

  157 paren_typespec: "(" typespec ")" •

    $default  reduce using rule 157 (paren_typespec)


State 265

  148 typespec_cl2: typespec_cl2 "," • typespec

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84
    "Fn"        shift, and go to state 94
    "("         shift, and go to state 242

    tid               go to state 97
    vid               go to state 244
    mod_prefix        go to state 245
    typespec          go to state 315
    primary_typespec  go to state 104
    paren_typespec    go to state 105
    tuple_typespec    go to state 106
    mod_prefix_tid    go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 112


State 266

  159 tuple_typespec: "(" typespec_cl2 ")" •

    $default  reduce using rule 159 (tuple_typespec)


State 267

   70 vtupleExpr: "(" expr "," ")" •

    $default  reduce using rule 70 (vtupleExpr)


State 268

   58 expr_cl2: expr "," expr •

    $default  reduce using rule 58 (expr_cl2)


State 269

   59 expr_cl2: expr_cl2 "," expr •

    $default  reduce using rule 59 (expr_cl2)


State 270

  140 type_query_exp: typespec type_query_op typespec •

    $default  reduce using rule 140 (type_query_exp)


State 271

  166 dot_typespec: postfix_typespec "." "<val_id>" •

    $default  reduce using rule 166 (dot_typespec)


State 272

  165 tcall_typespec: postfix_typespec "[" targ_cl • "]"
  174 targ_cl: targ_cl • "," targ

    ","  shift, and go to state 289
    "]"  shift, and go to state 316


State 273

  197 lpattern_field_cl: lpattern_field •

    $default  reduce using rule 197 (lpattern_field_cl)


State 274

  188 destructured_lpattern: "(" lpattern_field_cl • ")"
  198 lpattern_field_cl: lpattern_field_cl • "," lpattern_field

    ","  shift, and go to state 317
    ")"  shift, and go to state 318


State 275

  184 lpattern_field: vid typespec •

    $default  reduce using rule 184 (lpattern_field)


State 276

   15 const_stmt: "const" lpattern "=" • expr

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "lambda"                 shift, and go to state 39
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    vid             go to state 52
    floatl          go to state 53
    mod_prefix      go to state 54
    expr            go to state 319
    bracketed_exp   go to state 56
    unit_exp        go to state 57
    paren_exp       go to state 58
    vtupleExpr      go to state 59
    vstructExpr     go to state 60
    primary_exp     go to state 61
    int_expr        go to state 62
    stringls        go to state 63
    if_exp          go to state 64
    chain_exp       go to state 65
    lambda_exp      go to state 66
    postfix_exp     go to state 67
    tcall_exp       go to state 68
    vcall_exp       go to state 69
    dot_name_exp    go to state 70
    dot_index_exp   go to state 71
    unary_exp       go to state 72
    unary_op        go to state 73
    binary_exp      go to state 74
    mul_binary_exp  go to state 75
    add_binary_exp  go to state 76
    cmp_binary_exp  go to state 77
    eq_binary_exp   go to state 78
    and_binary_exp  go to state 79
    xor_binary_exp  go to state 80
    or_binary_exp   go to state 81


State 277

   16 val_stmt: "val" lpattern "=" • expr

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "lambda"                 shift, and go to state 39
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    vid             go to state 52
    floatl          go to state 53
    mod_prefix      go to state 54
    expr            go to state 320
    bracketed_exp   go to state 56
    unit_exp        go to state 57
    paren_exp       go to state 58
    vtupleExpr      go to state 59
    vstructExpr     go to state 60
    primary_exp     go to state 61
    int_expr        go to state 62
    stringls        go to state 63
    if_exp          go to state 64
    chain_exp       go to state 65
    lambda_exp      go to state 66
    postfix_exp     go to state 67
    tcall_exp       go to state 68
    vcall_exp       go to state 69
    dot_name_exp    go to state 70
    dot_index_exp   go to state 71
    unary_exp       go to state 72
    unary_op        go to state 73
    binary_exp      go to state 74
    mul_binary_exp  go to state 75
    add_binary_exp  go to state 76
    cmp_binary_exp  go to state 77
    eq_binary_exp   go to state 78
    and_binary_exp  go to state 79
    xor_binary_exp  go to state 80
    or_binary_exp   go to state 81


State 278

   17 var_stmt: "var" lpattern "=" • expr

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "lambda"                 shift, and go to state 39
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    vid             go to state 52
    floatl          go to state 53
    mod_prefix      go to state 54
    expr            go to state 321
    bracketed_exp   go to state 56
    unit_exp        go to state 57
    paren_exp       go to state 58
    vtupleExpr      go to state 59
    vstructExpr     go to state 60
    primary_exp     go to state 61
    int_expr        go to state 62
    stringls        go to state 63
    if_exp          go to state 64
    chain_exp       go to state 65
    lambda_exp      go to state 66
    postfix_exp     go to state 67
    tcall_exp       go to state 68
    vcall_exp       go to state 69
    dot_name_exp    go to state 70
    dot_index_exp   go to state 71
    unary_exp       go to state 72
    unary_op        go to state 73
    binary_exp      go to state 74
    mul_binary_exp  go to state 75
    add_binary_exp  go to state 76
    cmp_binary_exp  go to state 77
    eq_binary_exp   go to state 78
    and_binary_exp  go to state 79
    xor_binary_exp  go to state 80
    or_binary_exp   go to state 81


State 279

   18 set_stmt: "set" expr "=" • expr

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "lambda"                 shift, and go to state 39
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    vid             go to state 52
    floatl          go to state 53
    mod_prefix      go to state 54
    expr            go to state 322
    bracketed_exp   go to state 56
    unit_exp        go to state 57
    paren_exp       go to state 58
    vtupleExpr      go to state 59
    vstructExpr     go to state 60
    primary_exp     go to state 61
    int_expr        go to state 62
    stringls        go to state 63
    if_exp          go to state 64
    chain_exp       go to state 65
    lambda_exp      go to state 66
    postfix_exp     go to state 67
    tcall_exp       go to state 68
    vcall_exp       go to state 69
    dot_name_exp    go to state 70
    dot_index_exp   go to state 71
    unary_exp       go to state 72
    unary_op        go to state 73
    binary_exp      go to state 74
    mul_binary_exp  go to state 75
    add_binary_exp  go to state 76
    cmp_binary_exp  go to state 77
    eq_binary_exp   go to state 78
    and_binary_exp  go to state 79
    xor_binary_exp  go to state 80
    or_binary_exp   go to state 81


State 280

  180 struct_exp_field: vid "=" expr •

    $default  reduce using rule 180 (struct_exp_field)


State 281

   92 chain_prefix: chain_prefix chain_prefix_stmt ";" •

    $default  reduce using rule 92 (chain_prefix)


State 282

   90 chain_exp: "{" chain_prefix expr "}" •

    $default  reduce using rule 90 (chain_exp)


State 283

  180 struct_exp_field: vid • "=" expr

    "="  shift, and go to state 202


State 284

  202 struct_exp_field_cl: struct_exp_field_cl "," struct_exp_field •

    $default  reduce using rule 202 (struct_exp_field_cl)


State 285

  176 varg: "out" expr •

    $default  reduce using rule 176 (varg)


State 286

  177 varg: "inout" expr •

    $default  reduce using rule 177 (varg)


State 287

  179 varg_cl: varg_cl "," • varg

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "lambda"                 shift, and go to state 39
    "not"                    shift, and go to state 40
    "out"                    shift, and go to state 214
    "inout"                  shift, and go to state 215
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    vid             go to state 52
    floatl          go to state 53
    mod_prefix      go to state 54
    expr            go to state 217
    bracketed_exp   go to state 56
    unit_exp        go to state 57
    paren_exp       go to state 58
    vtupleExpr      go to state 59
    vstructExpr     go to state 60
    primary_exp     go to state 61
    int_expr        go to state 62
    stringls        go to state 63
    if_exp          go to state 64
    chain_exp       go to state 65
    lambda_exp      go to state 66
    postfix_exp     go to state 67
    tcall_exp       go to state 68
    vcall_exp       go to state 69
    dot_name_exp    go to state 70
    dot_index_exp   go to state 71
    unary_exp       go to state 72
    unary_op        go to state 73
    binary_exp      go to state 74
    mul_binary_exp  go to state 75
    add_binary_exp  go to state 76
    cmp_binary_exp  go to state 77
    eq_binary_exp   go to state 78
    and_binary_exp  go to state 79
    xor_binary_exp  go to state 80
    or_binary_exp   go to state 81
    varg            go to state 323


State 288

  101 vcall_exp: postfix_exp "(" varg_cl ")" •

    $default  reduce using rule 101 (vcall_exp)


State 289

  174 targ_cl: targ_cl "," • targ

    "<val_id>"               shift, and go to state 11
    "<TypeId>"               shift, and go to state 84
    "if"                     shift, and go to state 38
    "lambda"                 shift, and go to state 39
    "Fn"                     shift, and go to state 94
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 95
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    tid               go to state 97
    vid               go to state 52
    floatl            go to state 53
    mod_prefix        go to state 98
    expr              go to state 220
    bracketed_exp     go to state 56
    unit_exp          go to state 57
    paren_exp         go to state 58
    vtupleExpr        go to state 59
    vstructExpr       go to state 60
    primary_exp       go to state 61
    int_expr          go to state 62
    stringls          go to state 63
    if_exp            go to state 64
    chain_exp         go to state 65
    lambda_exp        go to state 66
    postfix_exp       go to state 67
    tcall_exp         go to state 68
    vcall_exp         go to state 69
    dot_name_exp      go to state 70
    dot_index_exp     go to state 71
    unary_exp         go to state 72
    unary_op          go to state 73
    binary_exp        go to state 74
    mul_binary_exp    go to state 75
    add_binary_exp    go to state 76
    cmp_binary_exp    go to state 77
    eq_binary_exp     go to state 78
    and_binary_exp    go to state 79
    xor_binary_exp    go to state 80
    or_binary_exp     go to state 81
    typespec          go to state 221
    primary_typespec  go to state 104
    paren_typespec    go to state 105
    tuple_typespec    go to state 106
    mod_prefix_tid    go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 112
    targ              go to state 324


State 290

   99 tcall_exp: postfix_exp "[" targ_cl "]" •

    $default  reduce using rule 99 (tcall_exp)


State 291

   45 using_stmt: "using" vid "." vid "*" •

    $default  reduce using rule 45 (using_stmt)


State 292

  187 tpattern_field: tid typespec •

    $default  reduce using rule 187 (tpattern_field)


State 293

  186 tpattern_field: vid typespec •

    $default  reduce using rule 186 (tpattern_field)


State 294

  200 tpattern_field_cl: tpattern_field_cl "," • tpattern_field

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84

    tid             go to state 233
    vid             go to state 234
    tpattern_field  go to state 325


State 295

  193 tpattern: "[" tpattern_field_cl "]" •

    $default  reduce using rule 193 (tpattern)


State 296

  194 tpattern: "!" "[" tpattern_field_cl • "]"
  200 tpattern_field_cl: tpattern_field_cl • "," tpattern_field

    ","  shift, and go to state 294
    "]"  shift, and go to state 326


State 297

   28 fn_stmt: "fn" vid vpattern "->" typespec • "=" bracketed_exp

    "="  shift, and go to state 327


State 298

   30 fn_stmt: "fn" vid vpattern "=" bracketed_exp •

    $default  reduce using rule 30 (fn_stmt)


State 299

   29 fn_stmt: "fn" vid tpattern_seq vpattern "->" • typespec "=" bracketed_exp

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84
    "Fn"        shift, and go to state 94
    "("         shift, and go to state 242

    tid               go to state 97
    vid               go to state 244
    mod_prefix        go to state 245
    typespec          go to state 328
    primary_typespec  go to state 104
    paren_typespec    go to state 105
    tuple_typespec    go to state 106
    mod_prefix_tid    go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 112


State 300

   31 fn_stmt: "fn" vid tpattern_seq vpattern "=" • bracketed_exp

    "("  shift, and go to state 46
    "{"  shift, and go to state 47

    bracketed_exp  go to state 329
    unit_exp       go to state 57
    paren_exp      go to state 58
    vtupleExpr     go to state 59
    vstructExpr    go to state 60
    chain_exp      go to state 65


State 301

  147 typespec_cl2: typespec • "," typespec
  157 paren_typespec: "(" typespec • ")"
  158 tuple_typespec: "(" typespec • "," ")"

    ","  shift, and go to state 263
    ")"  shift, and go to state 264


State 302

  149 struct_typespec_field: vid • typespec

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84
    "Fn"        shift, and go to state 94
    "("         shift, and go to state 242

    tid               go to state 97
    vid               go to state 244
    mod_prefix        go to state 245
    typespec          go to state 330
    primary_typespec  go to state 104
    paren_typespec    go to state 105
    tuple_typespec    go to state 106
    mod_prefix_tid    go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 112


State 303

  150 struct_typespec_field_cl: struct_typespec_field •

    $default  reduce using rule 150 (struct_typespec_field_cl)


State 304

  151 struct_typespec_field_cl: struct_typespec_field_cl • "," struct_typespec_field
  170 struct_typespec: "{" struct_typespec_field_cl • "}"

    ","  shift, and go to state 331
    "}"  shift, and go to state 332


State 305

   38 unprefixed_enum_field_pl: unprefixed_enum_field_pl "|" • enum_field

    "<TypeId>"  shift, and go to state 84

    enum_field  go to state 333
    tid         go to state 251


State 306

   40 enum_field: tid "(" • ")"
   41           | tid "(" • typespec_cl1 ")"

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84
    "Fn"        shift, and go to state 94
    "("         shift, and go to state 242
    ")"         shift, and go to state 334

    tid               go to state 97
    vid               go to state 244
    mod_prefix        go to state 245
    typespec          go to state 335
    typespec_cl1      go to state 336
    primary_typespec  go to state 104
    paren_typespec    go to state 105
    tuple_typespec    go to state 106
    mod_prefix_tid    go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 112


State 307

   33 type_stmt: "type" tid tpattern_seq "=" long_typespec •

    $default  reduce using rule 33 (type_stmt)


State 308

   42 typeclass_stmt: "typeclass" tid "<" tid typespec • ">" "=" "{" type_query_exp_sl "}"
   43               | "typeclass" tid "<" tid typespec • ">" tpattern_seq "=" "{" type_query_exp_sl "}"

    ">"  shift, and go to state 337


State 309

   87 if_exp: "if" bracketed_exp "then" bracketed_exp "else" • primary_exp

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "lambda"                 shift, and go to state 39
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    "{"                      shift, and go to state 47

    vid            go to state 338
    floatl         go to state 53
    bracketed_exp  go to state 56
    unit_exp       go to state 57
    paren_exp      go to state 58
    vtupleExpr     go to state 59
    vstructExpr    go to state 60
    primary_exp    go to state 339
    int_expr       go to state 62
    stringls       go to state 63
    if_exp         go to state 64
    chain_exp      go to state 65
    lambda_exp     go to state 66


State 310

  182 vpattern_field: "out" vid typespec •

    $default  reduce using rule 182 (vpattern_field)


State 311

  183 vpattern_field: "inout" vid typespec •

    $default  reduce using rule 183 (vpattern_field)


State 312

  196 vpattern_field_cl: vpattern_field_cl "," vpattern_field •

    $default  reduce using rule 196 (vpattern_field_cl)


State 313

  158 tuple_typespec: "(" typespec "," ")" •

    $default  reduce using rule 158 (tuple_typespec)


State 314

  147 typespec_cl2: typespec "," typespec •

    $default  reduce using rule 147 (typespec_cl2)


State 315

  148 typespec_cl2: typespec_cl2 "," typespec •

    $default  reduce using rule 148 (typespec_cl2)


State 316

  165 tcall_typespec: postfix_typespec "[" targ_cl "]" •

    $default  reduce using rule 165 (tcall_typespec)


State 317

  198 lpattern_field_cl: lpattern_field_cl "," • lpattern_field

    "<val_id>"  shift, and go to state 11

    vid             go to state 193
    lpattern_field  go to state 340


State 318

  188 destructured_lpattern: "(" lpattern_field_cl ")" •

    $default  reduce using rule 188 (destructured_lpattern)


State 319

   15 const_stmt: "const" lpattern "=" expr •

    $default  reduce using rule 15 (const_stmt)


State 320

   16 val_stmt: "val" lpattern "=" expr •

    $default  reduce using rule 16 (val_stmt)


State 321

   17 var_stmt: "var" lpattern "=" expr •

    $default  reduce using rule 17 (var_stmt)


State 322

   18 set_stmt: "set" expr "=" expr •

    $default  reduce using rule 18 (set_stmt)


State 323

  179 varg_cl: varg_cl "," varg •

    $default  reduce using rule 179 (varg_cl)


State 324

  174 targ_cl: targ_cl "," targ •

    $default  reduce using rule 174 (targ_cl)


State 325

  200 tpattern_field_cl: tpattern_field_cl "," tpattern_field •

    $default  reduce using rule 200 (tpattern_field_cl)


State 326

  194 tpattern: "!" "[" tpattern_field_cl "]" •

    $default  reduce using rule 194 (tpattern)


State 327

   28 fn_stmt: "fn" vid vpattern "->" typespec "=" • bracketed_exp

    "("  shift, and go to state 46
    "{"  shift, and go to state 47

    bracketed_exp  go to state 341
    unit_exp       go to state 57
    paren_exp      go to state 58
    vtupleExpr     go to state 59
    vstructExpr    go to state 60
    chain_exp      go to state 65


State 328

   29 fn_stmt: "fn" vid tpattern_seq vpattern "->" typespec • "=" bracketed_exp

    "="  shift, and go to state 342


State 329

   31 fn_stmt: "fn" vid tpattern_seq vpattern "=" bracketed_exp •

    $default  reduce using rule 31 (fn_stmt)


State 330

  149 struct_typespec_field: vid typespec •

    $default  reduce using rule 149 (struct_typespec_field)


State 331

  151 struct_typespec_field_cl: struct_typespec_field_cl "," • struct_typespec_field

    "<val_id>"  shift, and go to state 11

    vid                    go to state 302
    struct_typespec_field  go to state 343


State 332

  170 struct_typespec: "{" struct_typespec_field_cl "}" •

    $default  reduce using rule 170 (struct_typespec)


State 333

   38 unprefixed_enum_field_pl: unprefixed_enum_field_pl "|" enum_field •

    $default  reduce using rule 38 (unprefixed_enum_field_pl)


State 334

   40 enum_field: tid "(" ")" •

    $default  reduce using rule 40 (enum_field)


State 335

  145 typespec_cl1: typespec •

    $default  reduce using rule 145 (typespec_cl1)


State 336

   41 enum_field: tid "(" typespec_cl1 • ")"
  146 typespec_cl1: typespec_cl1 • "," typespec

    ","  shift, and go to state 344
    ")"  shift, and go to state 345


State 337

   42 typeclass_stmt: "typeclass" tid "<" tid typespec ">" • "=" "{" type_query_exp_sl "}"
   43               | "typeclass" tid "<" tid typespec ">" • tpattern_seq "=" "{" type_query_exp_sl "}"

    "["  shift, and go to state 158
    "="  shift, and go to state 346
    "!"  shift, and go to state 159

    tpattern      go to state 161
    tpattern_seq  go to state 347


State 338

   74 primary_exp: vid •

    $default  reduce using rule 74 (primary_exp)


State 339

   87 if_exp: "if" bracketed_exp "then" bracketed_exp "else" primary_exp •

    $default  reduce using rule 87 (if_exp)


State 340

  198 lpattern_field_cl: lpattern_field_cl "," lpattern_field •

    $default  reduce using rule 198 (lpattern_field_cl)


State 341

   28 fn_stmt: "fn" vid vpattern "->" typespec "=" bracketed_exp •

    $default  reduce using rule 28 (fn_stmt)


State 342

   29 fn_stmt: "fn" vid tpattern_seq vpattern "->" typespec "=" • bracketed_exp

    "("  shift, and go to state 46
    "{"  shift, and go to state 47

    bracketed_exp  go to state 348
    unit_exp       go to state 57
    paren_exp      go to state 58
    vtupleExpr     go to state 59
    vstructExpr    go to state 60
    chain_exp      go to state 65


State 343

  151 struct_typespec_field_cl: struct_typespec_field_cl "," struct_typespec_field •

    $default  reduce using rule 151 (struct_typespec_field_cl)


State 344

  146 typespec_cl1: typespec_cl1 "," • typespec

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84
    "Fn"        shift, and go to state 94
    "("         shift, and go to state 242

    tid               go to state 97
    vid               go to state 244
    mod_prefix        go to state 245
    typespec          go to state 349
    primary_typespec  go to state 104
    paren_typespec    go to state 105
    tuple_typespec    go to state 106
    mod_prefix_tid    go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 112


State 345

   41 enum_field: tid "(" typespec_cl1 ")" •

    $default  reduce using rule 41 (enum_field)


State 346

   42 typeclass_stmt: "typeclass" tid "<" tid typespec ">" "=" • "{" type_query_exp_sl "}"

    "{"  shift, and go to state 350


State 347

   43 typeclass_stmt: "typeclass" tid "<" tid typespec ">" tpattern_seq • "=" "{" type_query_exp_sl "}"
  204 tpattern_seq: tpattern_seq • tpattern

    "["  shift, and go to state 158
    "="  shift, and go to state 351
    "!"  shift, and go to state 159

    tpattern  go to state 241


State 348

   29 fn_stmt: "fn" vid tpattern_seq vpattern "->" typespec "=" bracketed_exp •

    $default  reduce using rule 29 (fn_stmt)


State 349

  146 typespec_cl1: typespec_cl1 "," typespec •

    $default  reduce using rule 146 (typespec_cl1)


State 350

   42 typeclass_stmt: "typeclass" tid "<" tid typespec ">" "=" "{" • type_query_exp_sl "}"

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84
    "Fn"        shift, and go to state 94
    "("         shift, and go to state 242

    tid                go to state 97
    vid                go to state 244
    mod_prefix         go to state 245
    type_query_exp_sl  go to state 352
    type_query_exp     go to state 353
    typespec           go to state 103
    primary_typespec   go to state 104
    paren_typespec     go to state 105
    tuple_typespec     go to state 106
    mod_prefix_tid     go to state 107
    fn_typespec        go to state 108
    postfix_typespec   go to state 109
    tcall_typespec     go to state 110
    dot_typespec       go to state 111
    unary_typespec     go to state 112


State 351

   43 typeclass_stmt: "typeclass" tid "<" tid typespec ">" tpattern_seq "=" • "{" type_query_exp_sl "}"

    "{"  shift, and go to state 354


State 352

   42 typeclass_stmt: "typeclass" tid "<" tid typespec ">" "=" "{" type_query_exp_sl • "}"
   61 type_query_exp_sl: type_query_exp_sl • type_query_exp ";"

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84
    "Fn"        shift, and go to state 94
    "("         shift, and go to state 242
    "}"         shift, and go to state 355

    tid               go to state 97
    vid               go to state 244
    mod_prefix        go to state 245
    type_query_exp    go to state 356
    typespec          go to state 103
    primary_typespec  go to state 104
    paren_typespec    go to state 105
    tuple_typespec    go to state 106
    mod_prefix_tid    go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 112


State 353

   60 type_query_exp_sl: type_query_exp • ";"

    ";"  shift, and go to state 357


State 354

   43 typeclass_stmt: "typeclass" tid "<" tid typespec ">" tpattern_seq "=" "{" • type_query_exp_sl "}"

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84
    "Fn"        shift, and go to state 94
    "("         shift, and go to state 242

    tid                go to state 97
    vid                go to state 244
    mod_prefix         go to state 245
    type_query_exp_sl  go to state 358
    type_query_exp     go to state 353
    typespec           go to state 103
    primary_typespec   go to state 104
    paren_typespec     go to state 105
    tuple_typespec     go to state 106
    mod_prefix_tid     go to state 107
    fn_typespec        go to state 108
    postfix_typespec   go to state 109
    tcall_typespec     go to state 110
    dot_typespec       go to state 111
    unary_typespec     go to state 112


State 355

   42 typeclass_stmt: "typeclass" tid "<" tid typespec ">" "=" "{" type_query_exp_sl "}" •

    $default  reduce using rule 42 (typeclass_stmt)


State 356

   61 type_query_exp_sl: type_query_exp_sl type_query_exp • ";"

    ";"  shift, and go to state 359


State 357

   60 type_query_exp_sl: type_query_exp ";" •

    $default  reduce using rule 60 (type_query_exp_sl)


State 358

   43 typeclass_stmt: "typeclass" tid "<" tid typespec ">" tpattern_seq "=" "{" type_query_exp_sl • "}"
   61 type_query_exp_sl: type_query_exp_sl • type_query_exp ";"

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84
    "Fn"        shift, and go to state 94
    "("         shift, and go to state 242
    "}"         shift, and go to state 360

    tid               go to state 97
    vid               go to state 244
    mod_prefix        go to state 245
    type_query_exp    go to state 356
    typespec          go to state 103
    primary_typespec  go to state 104
    paren_typespec    go to state 105
    tuple_typespec    go to state 106
    mod_prefix_tid    go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 112


State 359

   61 type_query_exp_sl: type_query_exp_sl type_query_exp ";" •

    $default  reduce using rule 61 (type_query_exp_sl)


State 360

   43 typeclass_stmt: "typeclass" tid "<" tid typespec ">" tpattern_seq "=" "{" type_query_exp_sl "}" •

    $default  reduce using rule 43 (typeclass_stmt)
