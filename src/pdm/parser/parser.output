Terminals unused in grammar

    "__42__"
    "struct"
    "then"
    "match"
    "with"
    "extern"
    "as"
    "for"
    "CORE_PROFILE"
    "BROWSER_PROFILE"
    "NATIVE_PROFILE"
    ":"
    "->"
    "^"
    "&"
    "!"
    "|"
    "EOS"
    "<null>"


Grammar

    0 $accept: script $end

    1 script: script_header script_field_sl

    2 script_header: %empty
    3              | script_header script_header_stmt ";"

    4 script_header_stmt: import_stmt

    5 script_field: "mod" vid native_mod_exp

    6 script_field_sl: script_field ";"
    7                | script_field_sl script_field ";"

    8 native_mod_exp: "{" mod_field_sl "}"
    9               | tpattern "{" mod_field_sl "}"
   10               | "{" "}"
   11               | tpattern "{" "}"

   12 mod_field_sl: mod_field ";"
   13             | mod_field_sl mod_field ";"

   14 mod_field: vid "=" long_exp
   15          | tid "=" type_spec
   16          | cid "=" class_spec
   17          | "mod" vid native_mod_exp

   18 import_stmt: "imports" "{" import_field_group_sl0 "}"

   19 import_field_group_sl0: %empty
   20                       | import_field_group_sl0 import_field_group ";"

   21 import_field_group: import_field_cl1 "from" stringl

   22 import_field_cl1: vid
   23                 | import_field_cl1 "," vid

   24 chain_prefix_stmt: const_stmt
   25                  | val_stmt
   26                  | var_stmt
   27                  | set_stmt
   28                  | discard_stmt

   29 const_stmt: "const" lpattern "=" expr

   30 val_stmt: "val" lpattern "=" expr

   31 var_stmt: "var" lpattern "=" expr

   32 set_stmt: "set" expr "=" expr

   33 discard_stmt: "discard" expr

   34 tid: "TypeId"

   35 vid: "val_id"

   36 cid: "CLS_ID"

   37 floatl: "4.2"

   38 stringl: "'sq-string-literal'"
   39        | "\"dq-string-literal\""

   40 mod_prefix: vid "::"
   41           | vid "[" targ_cl "]" "::"
   42           | mod_prefix vid "::"
   43           | mod_prefix vid "[" targ_cl "]" "::"

   44 expr: binary_exp

   45 long_exp: expr
   46         | lambda_exp

   47 expr_cl2: expr "," expr
   48         | expr_cl2 "," expr

   49 type_query_exp_sl0: %empty
   50                   | type_query_exp_sl0 type_query_exp ";"

   51 bracketed_exp: paren_exp
   52              | vtupleExpr
   53              | vstructExpr
   54              | chain_exp

   55 paren_exp: "(" long_exp ")"

   56 vtupleExpr: "(" ")"
   57           | "(" expr "," ")"
   58           | "(" expr_cl2 ")"

   59 vstructExpr: "{" struct_exp_field_cl "}"

   60 primary_exp: bracketed_exp
   61            | vid
   62            | int_expr
   63            | floatl
   64            | stringls
   65            | if_exp
   66            | mod_prefix vid

   67 int_expr: "42"
   68         | "0x2a"
   69         | "42u"
   70         | "0x2Au"

   71 stringls: "'sq-string-literal'"
   72         | "\"dq-string-literal\""
   73         | stringls "'sq-string-literal'"
   74         | stringls "\"dq-string-literal\""

   75 if_exp: "if" bracketed_exp bracketed_exp
   76       | "if" bracketed_exp bracketed_exp "else" primary_exp

   77 chain_exp: "{" "}"
   78          | "{" long_exp "}"
   79          | "{" chain_prefix "}"
   80          | "{" chain_prefix long_exp "}"

   81 chain_prefix: chain_prefix_stmt ";"
   82             | chain_prefix chain_prefix_stmt ";"

   83 lambda_exp: fn_type_spec bracketed_exp

   84 postfix_exp: primary_exp
   85            | vcall_exp
   86            | dot_name_exp
   87            | dot_index_exp

   88 vcall_exp: postfix_exp "(" ")"
   89          | postfix_exp "(" varg_cl ")"

   90 dot_name_exp: postfix_exp "." "val_id"
   91             | type_spec "::" "TypeId"
   92             | type_spec "::" "TypeId" "using" paren_exp

   93 dot_index_exp: postfix_exp "." int_expr
   94              | postfix_exp "." bracketed_exp

   95 unary_exp: postfix_exp
   96          | unary_op unary_exp

   97 unary_op: "+"
   98         | "-"
   99         | "not"

  100 binary_exp: or_binary_exp

  101 mul_binary_op: "*"
  102              | "/"
  103              | "%"

  104 mul_binary_exp: unary_exp
  105               | mul_binary_exp mul_binary_op unary_exp

  106 add_binary_op: "+"
  107              | "-"

  108 add_binary_exp: mul_binary_exp
  109               | add_binary_exp add_binary_op mul_binary_exp

  110 cmp_binary_op: "<"
  111              | "<="
  112              | ">"
  113              | ">="

  114 cmp_binary_exp: add_binary_exp
  115               | cmp_binary_exp cmp_binary_op add_binary_exp

  116 eq_binary_op: "=="
  117             | "!="

  118 eq_binary_exp: cmp_binary_exp
  119              | eq_binary_exp eq_binary_op cmp_binary_exp

  120 and_binary_exp: eq_binary_exp
  121               | and_binary_exp "and" eq_binary_exp

  122 xor_binary_exp: and_binary_exp
  123               | xor_binary_exp "xor" and_binary_exp

  124 or_binary_exp: xor_binary_exp
  125              | or_binary_exp "or" xor_binary_exp

  126 type_query_exp: type_spec type_query_op type_spec

  127 type_query_op: ":<"
  128              | ">:"
  129              | "=="

  130 type_spec_cl2: type_spec "," type_spec
  131              | type_spec_cl2 "," type_spec

  132 type_spec: tid
  133          | mod_prefix_tid
  134          | tuple_type_spec
  135          | array_type_spec
  136          | struct_type_spec
  137          | enum_type_spec
  138          | fn_type_spec

  139 mod_prefix_tid: mod_prefix tid

  140 tuple_type_spec: "{" type_spec "}"
  141                | "{" type_spec_cl2 "}"

  142 array_type_spec: "[" type_spec "*" expr "]"

  143 struct_type_spec: "{" struct_type_spec_field_cl "}"

  144 struct_type_spec_field_cl: struct_type_spec_field
  145                          | struct_type_spec_field_cl "," struct_type_spec_field

  146 struct_type_spec_field: vid type_spec

  147 enum_type_spec_field: tid
  148                     | tid type_spec

  149 enum_type_spec_field_cl: enum_type_spec_field
  150                        | enum_type_spec_field_cl "," enum_type_spec_field

  151 enum_type_spec: "enum" "{" enum_type_spec_field_cl "}"

  152 fn_type_spec: "fn" vpattern type_spec

  153 targ: type_spec
  154     | expr

  155 targ_cl: targ
  156        | targ_cl "," targ

  157 varg: expr
  158     | "out" expr
  159     | "inout" expr

  160 varg_cl: varg
  161        | varg_cl "," varg

  162 class_spec: primary_class_spec

  163 primary_class_spec: cid
  164                   | mod_prefix_cid_class_spec
  165                   | class_exp_class_spec

  166 mod_prefix_cid_class_spec: mod_prefix cid

  167 class_exp_class_spec: "typeclass" "(" tid class_spec ")" "{" type_query_exp_sl0 "}"

  168 struct_exp_field: vid "=" expr

  169 vpattern_field: vid type_spec
  170               | "out" vid type_spec
  171               | "inout" vid type_spec

  172 lpattern_field: vid type_spec
  173               | vid

  174 tpattern_field: vid type_spec
  175               | tid class_spec

  176 destructured_lpattern: "{" lpattern_field_cl "}"

  177 lpattern: lpattern_field
  178         | destructured_lpattern

  179 vpattern: "(" vpattern_field_cl ")"
  180         | "(" ")"

  181 tpattern: "[" tpattern_field_cl1 "]"

  182 vpattern_field_cl: vpattern_field
  183                  | vpattern_field_cl "," vpattern_field

  184 lpattern_field_cl: lpattern_field
  185                  | lpattern_field_cl "," lpattern_field

  186 tpattern_field_cl1: tpattern_field
  187                   | tpattern_field_cl1 "," tpattern_field

  188 struct_exp_field_cl: struct_exp_field
  189                    | struct_exp_field_cl "," struct_exp_field


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    "val_id" <TokenInfo> (258) 35 90
    "TypeId" <TokenInfo> (259) 34 91 92
    "CLS_ID" <TokenInfo> (260) 36
    "__42__" <TokenInfo> (261)
    "using" (262) 92
    "mod" (263) 5 17
    "struct" (264)
    "enum" (265) 151
    "typeclass" (266) 167
    "if" (267) 75 76
    "then" (268)
    "else" (269) 76
    "match" (270)
    "with" (271)
    "imports" (272) 18
    "extern" (273)
    "from" (274) 21
    "const" (275) 29
    "val" (276) 30
    "var" (277) 31
    "set" (278) 32
    "fn" (279) 152
    "and" (280) 121
    "xor" (281) 123
    "or" (282) 125
    "not" (283) 99
    "out" (284) 158 170
    "inout" (285) 159 171
    "discard" (286) 33
    "as" (287)
    "for" (288)
    "CORE_PROFILE" (289)
    "BROWSER_PROFILE" (290)
    "NATIVE_PROFILE" (291)
    "42" <TokenInfo> (292) 67
    "0x2a" <TokenInfo> (293) 68
    "42u" <TokenInfo> (294) 69
    "0x2Au" <TokenInfo> (295) 70
    "4.2" <TokenInfo> (296) 37
    "\"dq-string-literal\"" <TokenInfo> (297) 39 72 74
    "'sq-string-literal'" <TokenInfo> (298) 38 71 73
    "." (299) 90 93 94
    ":" (300)
    "," (301) 23 47 48 57 130 131 145 150 156 161 183 185 187 189
    ";" (302) 3 6 7 12 13 20 50 81 82
    "::" (303) 40 41 42 43 91 92
    "(" (304) 55 56 57 58 88 89 167 179 180
    ")" (305) 55 56 57 58 88 89 167 179 180
    "[" (306) 41 43 142 181
    "]" (307) 41 43 142 181
    "{" (308) 8 9 10 11 18 59 77 78 79 80 140 141 143 151 167 176
    "}" (309) 8 9 10 11 18 59 77 78 79 80 140 141 143 151 167 176
    "->" (310)
    "*" (311) 101 142
    "/" (312) 102
    "%" (313) 103
    "+" (314) 97 106
    "-" (315) 98 107
    "<" (316) 110
    "<=" (317) 111
    ">" (318) 112
    ">=" (319) 113
    "=" (320) 14 15 16 29 30 31 32 168
    "==" (321) 116 129
    "!=" (322) 117
    "^" (323)
    "&" (324)
    "!" (325)
    "|" (326)
    "EOS" (327)
    ":<" (328) 127
    ">:" (329) 128
    "<null>" (330)


Nonterminals, with rules where they appear

    $accept (76)
        on left: 0
    script <pdm::ast::Script*> (77)
        on left: 1
        on right: 0
    script_header <std::vector<pdm::ast::HeaderStmt*>> (78)
        on left: 2 3
        on right: 1 3
    script_header_stmt <pdm::ast::HeaderStmt*> (79)
        on left: 4
        on right: 3
    script_field <pdm::ast::Script::Field*> (80)
        on left: 5
        on right: 6 7
    script_field_sl <std::vector<pdm::ast::Script::Field*>> (81)
        on left: 6 7
        on right: 1 7
    native_mod_exp <pdm::ast::BaseModExp*> (82)
        on left: 8 9 10 11
        on right: 5 17
    mod_field_sl <std::vector<pdm::ast::BaseModExp::Field*>> (83)
        on left: 12 13
        on right: 8 9 13
    mod_field <pdm::ast::BaseModExp::Field*> (84)
        on left: 14 15 16 17
        on right: 12 13
    import_stmt <pdm::ast::HeaderStmt*> (85)
        on left: 18
        on right: 4
    import_field_group_sl0 <std::vector<ast::ImportStmt::FieldGroup*>> (86)
        on left: 19 20
        on right: 18 20
    import_field_group <ast::ImportStmt::FieldGroup*> (87)
        on left: 21
        on right: 20
    import_field_cl1 <std::vector<ast::ImportStmt::Field*>> (88)
        on left: 22 23
        on right: 21 23
    chain_prefix_stmt <pdm::ast::Stmt*> (89)
        on left: 24 25 26 27 28
        on right: 81 82
    const_stmt <pdm::ast::Stmt*> (90)
        on left: 29
        on right: 24
    val_stmt <pdm::ast::Stmt*> (91)
        on left: 30
        on right: 25
    var_stmt <pdm::ast::Stmt*> (92)
        on left: 31
        on right: 26
    set_stmt <pdm::ast::Stmt*> (93)
        on left: 32
        on right: 27
    discard_stmt <pdm::ast::Stmt*> (94)
        on left: 33
        on right: 28
    tid <TokenInfo> (95)
        on left: 34
        on right: 15 132 139 147 148 167 175
    vid <TokenInfo> (96)
        on left: 35
        on right: 5 14 17 22 23 40 41 42 43 61 66 146 168 169 170 171 172 173 174
    cid <TokenInfo> (97)
        on left: 36
        on right: 16 163 166
    floatl <TokenInfo> (98)
        on left: 37
        on right: 63
    stringl <TokenInfo> (99)
        on left: 38 39
        on right: 21
    mod_prefix <pdm::ast::ModAddress*> (100)
        on left: 40 41 42 43
        on right: 42 43 66 139 166
    expr <pdm::ast::Exp*> (101)
        on left: 44
        on right: 29 30 31 32 33 45 47 48 57 142 154 157 158 159 168
    long_exp <pdm::ast::Exp*> (102)
        on left: 45 46
        on right: 14 55 78 80
    expr_cl2 <std::vector<pdm::ast::Exp*>> (103)
        on left: 47 48
        on right: 48 58
    type_query_exp_sl0 <std::vector<pdm::ast::TypeQueryExp*>> (104)
        on left: 49 50
        on right: 50 167
    bracketed_exp <pdm::ast::Exp*> (105)
        on left: 51 52 53 54
        on right: 60 75 76 83 94
    paren_exp <pdm::ast::Exp*> (106)
        on left: 55
        on right: 51 92
    vtupleExpr <pdm::ast::Exp*> (107)
        on left: 56 57 58
        on right: 52
    vstructExpr <pdm::ast::Exp*> (108)
        on left: 59
        on right: 53
    primary_exp <pdm::ast::Exp*> (109)
        on left: 60 61 62 63 64 65 66
        on right: 76 84
    int_expr <pdm::ast::Exp*> (110)
        on left: 67 68 69 70
        on right: 62 93
    stringls <std::vector<pdm::ast::StringExp::Piece>> (111)
        on left: 71 72 73 74
        on right: 64 73 74
    if_exp <pdm::ast::Exp*> (112)
        on left: 75 76
        on right: 65
    chain_exp <pdm::ast::Exp*> (113)
        on left: 77 78 79 80
        on right: 54
    chain_prefix <std::vector<pdm::ast::Stmt*>> (114)
        on left: 81 82
        on right: 79 80 82
    lambda_exp <pdm::ast::Exp*> (115)
        on left: 83
        on right: 46
    postfix_exp <pdm::ast::Exp*> (116)
        on left: 84 85 86 87
        on right: 88 89 90 93 94 95
    vcall_exp <pdm::ast::Exp*> (117)
        on left: 88 89
        on right: 85
    dot_name_exp <pdm::ast::Exp*> (118)
        on left: 90 91 92
        on right: 86
    dot_index_exp <pdm::ast::Exp*> (119)
        on left: 93 94
        on right: 87
    unary_exp <pdm::ast::Exp*> (120)
        on left: 95 96
        on right: 96 104 105
    unary_op <pdm::ast::UnaryOperator> (121)
        on left: 97 98 99
        on right: 96
    binary_exp <pdm::ast::Exp*> (122)
        on left: 100
        on right: 44
    mul_binary_op <pdm::ast::BinaryOperator> (123)
        on left: 101 102 103
        on right: 105
    mul_binary_exp <pdm::ast::Exp*> (124)
        on left: 104 105
        on right: 105 108 109
    add_binary_op <pdm::ast::BinaryOperator> (125)
        on left: 106 107
        on right: 109
    add_binary_exp <pdm::ast::Exp*> (126)
        on left: 108 109
        on right: 109 114 115
    cmp_binary_op <pdm::ast::BinaryOperator> (127)
        on left: 110 111 112 113
        on right: 115
    cmp_binary_exp <pdm::ast::Exp*> (128)
        on left: 114 115
        on right: 115 118 119
    eq_binary_op <pdm::ast::BinaryOperator> (129)
        on left: 116 117
        on right: 119
    eq_binary_exp <pdm::ast::Exp*> (130)
        on left: 118 119
        on right: 119 120 121
    and_binary_exp <pdm::ast::Exp*> (131)
        on left: 120 121
        on right: 121 122 123
    xor_binary_exp <pdm::ast::Exp*> (132)
        on left: 122 123
        on right: 123 124 125
    or_binary_exp <pdm::ast::Exp*> (133)
        on left: 124 125
        on right: 100 125
    type_query_exp <pdm::ast::TypeQueryExp*> (134)
        on left: 126
        on right: 50
    type_query_op <pdm::ast::TypeQueryKind> (135)
        on left: 127 128 129
        on right: 126
    type_spec_cl2 <std::vector<pdm::ast::TypeSpec*>> (136)
        on left: 130 131
        on right: 131 141
    type_spec <pdm::ast::TypeSpec*> (137)
        on left: 132 133 134 135 136 137 138
        on right: 15 91 92 126 130 131 140 142 146 148 152 153 169 170 171 172 174
    mod_prefix_tid <pdm::ast::TypeSpec*> (138)
        on left: 139
        on right: 133
    tuple_type_spec <pdm::ast::TypeSpec*> (139)
        on left: 140 141
        on right: 134
    array_type_spec <pdm::ast::TypeSpec*> (140)
        on left: 142
        on right: 135
    struct_type_spec <pdm::ast::TypeSpec*> (141)
        on left: 143
        on right: 136
    struct_type_spec_field_cl <std::vector<pdm::ast::StructTypeSpec::Field*>> (142)
        on left: 144 145
        on right: 143 145
    struct_type_spec_field <pdm::ast::StructTypeSpec::Field*> (143)
        on left: 146
        on right: 144 145
    enum_type_spec_field <pdm::ast::EnumTypeSpec::Field*> (144)
        on left: 147 148
        on right: 149 150
    enum_type_spec_field_cl <std::vector<pdm::ast::EnumTypeSpec::Field*>> (145)
        on left: 149 150
        on right: 150 151
    enum_type_spec <pdm::ast::TypeSpec*> (146)
        on left: 151
        on right: 137
    fn_type_spec <pdm::ast::FnTypeSpec*> (147)
        on left: 152
        on right: 83 138
    targ <pdm::ast::TArg*> (148)
        on left: 153 154
        on right: 155 156
    targ_cl <std::vector<pdm::ast::TArg*>> (149)
        on left: 155 156
        on right: 41 43 156
    varg <pdm::ast::VArg*> (150)
        on left: 157 158 159
        on right: 160 161
    varg_cl <std::vector<pdm::ast::VArg*>> (151)
        on left: 160 161
        on right: 89 161
    class_spec <pdm::ast::ClassSpec*> (152)
        on left: 162
        on right: 16 167 175
    primary_class_spec <pdm::ast::ClassSpec*> (153)
        on left: 163 164 165
        on right: 162
    mod_prefix_cid_class_spec <pdm::ast::ClassSpec*> (154)
        on left: 166
        on right: 164
    class_exp_class_spec <pdm::ast::ClassSpec*> (155)
        on left: 167
        on right: 165
    struct_exp_field <pdm::ast::StructExp::Field*> (156)
        on left: 168
        on right: 188 189
    vpattern_field <pdm::ast::VPattern::Field*> (157)
        on left: 169 170 171
        on right: 182 183
    lpattern_field <pdm::ast::LPattern::Field*> (158)
        on left: 172 173
        on right: 177 184 185
    tpattern_field <pdm::ast::TPattern::Field*> (159)
        on left: 174 175
        on right: 186 187
    destructured_lpattern <pdm::ast::LPattern*> (160)
        on left: 176
        on right: 178
    lpattern <pdm::ast::LPattern*> (161)
        on left: 177 178
        on right: 29 30 31
    vpattern <pdm::ast::VPattern*> (162)
        on left: 179 180
        on right: 152
    tpattern <pdm::ast::TPattern*> (163)
        on left: 181
        on right: 9 11
    vpattern_field_cl <std::vector<pdm::ast::VPattern::Field*>> (164)
        on left: 182 183
        on right: 179 183
    lpattern_field_cl <std::vector<pdm::ast::LPattern::Field*>> (165)
        on left: 184 185
        on right: 176 185
    tpattern_field_cl1 <std::vector<pdm::ast::TPattern::Field*>> (166)
        on left: 186 187
        on right: 181 187
    struct_exp_field_cl <std::vector<pdm::ast::StructExp::Field*>> (167)
        on left: 188 189
        on right: 59 189


State 0

    0 $accept: • script $end

    $default  reduce using rule 2 (script_header)

    script         go to state 1
    script_header  go to state 2


State 1

    0 $accept: script • $end

    $end  shift, and go to state 3


State 2

    1 script: script_header • script_field_sl
    3 script_header: script_header • script_header_stmt ";"

    "mod"      shift, and go to state 4
    "imports"  shift, and go to state 5

    script_header_stmt  go to state 6
    script_field        go to state 7
    script_field_sl     go to state 8
    import_stmt         go to state 9


State 3

    0 $accept: script $end •

    $default  accept


State 4

    5 script_field: "mod" • vid native_mod_exp

    "val_id"  shift, and go to state 10

    vid  go to state 11


State 5

   18 import_stmt: "imports" • "{" import_field_group_sl0 "}"

    "{"  shift, and go to state 12


State 6

    3 script_header: script_header script_header_stmt • ";"

    ";"  shift, and go to state 13


State 7

    6 script_field_sl: script_field • ";"

    ";"  shift, and go to state 14


State 8

    1 script: script_header script_field_sl •
    7 script_field_sl: script_field_sl • script_field ";"

    "mod"  shift, and go to state 4

    $default  reduce using rule 1 (script)

    script_field  go to state 15


State 9

    4 script_header_stmt: import_stmt •

    $default  reduce using rule 4 (script_header_stmt)


State 10

   35 vid: "val_id" •

    $default  reduce using rule 35 (vid)


State 11

    5 script_field: "mod" vid • native_mod_exp

    "["  shift, and go to state 16
    "{"  shift, and go to state 17

    native_mod_exp  go to state 18
    tpattern        go to state 19


State 12

   18 import_stmt: "imports" "{" • import_field_group_sl0 "}"

    $default  reduce using rule 19 (import_field_group_sl0)

    import_field_group_sl0  go to state 20


State 13

    3 script_header: script_header script_header_stmt ";" •

    $default  reduce using rule 3 (script_header)


State 14

    6 script_field_sl: script_field ";" •

    $default  reduce using rule 6 (script_field_sl)


State 15

    7 script_field_sl: script_field_sl script_field • ";"

    ";"  shift, and go to state 21


State 16

  181 tpattern: "[" • tpattern_field_cl1 "]"

    "val_id"  shift, and go to state 10
    "TypeId"  shift, and go to state 22

    tid                 go to state 23
    vid                 go to state 24
    tpattern_field      go to state 25
    tpattern_field_cl1  go to state 26


State 17

    8 native_mod_exp: "{" • mod_field_sl "}"
   10               | "{" • "}"

    "val_id"  shift, and go to state 10
    "TypeId"  shift, and go to state 22
    "CLS_ID"  shift, and go to state 27
    "mod"     shift, and go to state 28
    "}"       shift, and go to state 29

    mod_field_sl  go to state 30
    mod_field     go to state 31
    tid           go to state 32
    vid           go to state 33
    cid           go to state 34


State 18

    5 script_field: "mod" vid native_mod_exp •

    $default  reduce using rule 5 (script_field)


State 19

    9 native_mod_exp: tpattern • "{" mod_field_sl "}"
   11               | tpattern • "{" "}"

    "{"  shift, and go to state 35


State 20

   18 import_stmt: "imports" "{" import_field_group_sl0 • "}"
   20 import_field_group_sl0: import_field_group_sl0 • import_field_group ";"

    "val_id"  shift, and go to state 10
    "}"       shift, and go to state 36

    import_field_group  go to state 37
    import_field_cl1    go to state 38
    vid                 go to state 39


State 21

    7 script_field_sl: script_field_sl script_field ";" •

    $default  reduce using rule 7 (script_field_sl)


State 22

   34 tid: "TypeId" •

    $default  reduce using rule 34 (tid)


State 23

  175 tpattern_field: tid • class_spec

    "val_id"     shift, and go to state 10
    "CLS_ID"     shift, and go to state 27
    "typeclass"  shift, and go to state 40

    vid                        go to state 41
    cid                        go to state 42
    mod_prefix                 go to state 43
    class_spec                 go to state 44
    primary_class_spec         go to state 45
    mod_prefix_cid_class_spec  go to state 46
    class_exp_class_spec       go to state 47


State 24

  174 tpattern_field: vid • type_spec

    "val_id"  shift, and go to state 10
    "TypeId"  shift, and go to state 22
    "enum"    shift, and go to state 48
    "fn"      shift, and go to state 49
    "["       shift, and go to state 50
    "{"       shift, and go to state 51

    tid               go to state 52
    vid               go to state 41
    mod_prefix        go to state 53
    type_spec         go to state 54
    mod_prefix_tid    go to state 55
    tuple_type_spec   go to state 56
    array_type_spec   go to state 57
    struct_type_spec  go to state 58
    enum_type_spec    go to state 59
    fn_type_spec      go to state 60


State 25

  186 tpattern_field_cl1: tpattern_field •

    $default  reduce using rule 186 (tpattern_field_cl1)


State 26

  181 tpattern: "[" tpattern_field_cl1 • "]"
  187 tpattern_field_cl1: tpattern_field_cl1 • "," tpattern_field

    ","  shift, and go to state 61
    "]"  shift, and go to state 62


State 27

   36 cid: "CLS_ID" •

    $default  reduce using rule 36 (cid)


State 28

   17 mod_field: "mod" • vid native_mod_exp

    "val_id"  shift, and go to state 10

    vid  go to state 63


State 29

   10 native_mod_exp: "{" "}" •

    $default  reduce using rule 10 (native_mod_exp)


State 30

    8 native_mod_exp: "{" mod_field_sl • "}"
   13 mod_field_sl: mod_field_sl • mod_field ";"

    "val_id"  shift, and go to state 10
    "TypeId"  shift, and go to state 22
    "CLS_ID"  shift, and go to state 27
    "mod"     shift, and go to state 28
    "}"       shift, and go to state 64

    mod_field  go to state 65
    tid        go to state 32
    vid        go to state 33
    cid        go to state 34


State 31

   12 mod_field_sl: mod_field • ";"

    ";"  shift, and go to state 66


State 32

   15 mod_field: tid • "=" type_spec

    "="  shift, and go to state 67


State 33

   14 mod_field: vid • "=" long_exp

    "="  shift, and go to state 68


State 34

   16 mod_field: cid • "=" class_spec

    "="  shift, and go to state 69


State 35

    9 native_mod_exp: tpattern "{" • mod_field_sl "}"
   11               | tpattern "{" • "}"

    "val_id"  shift, and go to state 10
    "TypeId"  shift, and go to state 22
    "CLS_ID"  shift, and go to state 27
    "mod"     shift, and go to state 28
    "}"       shift, and go to state 70

    mod_field_sl  go to state 71
    mod_field     go to state 31
    tid           go to state 32
    vid           go to state 33
    cid           go to state 34


State 36

   18 import_stmt: "imports" "{" import_field_group_sl0 "}" •

    $default  reduce using rule 18 (import_stmt)


State 37

   20 import_field_group_sl0: import_field_group_sl0 import_field_group • ";"

    ";"  shift, and go to state 72


State 38

   21 import_field_group: import_field_cl1 • "from" stringl
   23 import_field_cl1: import_field_cl1 • "," vid

    "from"  shift, and go to state 73
    ","     shift, and go to state 74


State 39

   22 import_field_cl1: vid •

    $default  reduce using rule 22 (import_field_cl1)


State 40

  167 class_exp_class_spec: "typeclass" • "(" tid class_spec ")" "{" type_query_exp_sl0 "}"

    "("  shift, and go to state 75


State 41

   40 mod_prefix: vid • "::"
   41           | vid • "[" targ_cl "]" "::"

    "::"  shift, and go to state 76
    "["   shift, and go to state 77


State 42

  163 primary_class_spec: cid •

    $default  reduce using rule 163 (primary_class_spec)


State 43

   42 mod_prefix: mod_prefix • vid "::"
   43           | mod_prefix • vid "[" targ_cl "]" "::"
  166 mod_prefix_cid_class_spec: mod_prefix • cid

    "val_id"  shift, and go to state 10
    "CLS_ID"  shift, and go to state 27

    vid  go to state 78
    cid  go to state 79


State 44

  175 tpattern_field: tid class_spec •

    $default  reduce using rule 175 (tpattern_field)


State 45

  162 class_spec: primary_class_spec •

    $default  reduce using rule 162 (class_spec)


State 46

  164 primary_class_spec: mod_prefix_cid_class_spec •

    $default  reduce using rule 164 (primary_class_spec)


State 47

  165 primary_class_spec: class_exp_class_spec •

    $default  reduce using rule 165 (primary_class_spec)


State 48

  151 enum_type_spec: "enum" • "{" enum_type_spec_field_cl "}"

    "{"  shift, and go to state 80


State 49

  152 fn_type_spec: "fn" • vpattern type_spec

    "("  shift, and go to state 81

    vpattern  go to state 82


State 50

  142 array_type_spec: "[" • type_spec "*" expr "]"

    "val_id"  shift, and go to state 10
    "TypeId"  shift, and go to state 22
    "enum"    shift, and go to state 48
    "fn"      shift, and go to state 49
    "["       shift, and go to state 50
    "{"       shift, and go to state 51

    tid               go to state 52
    vid               go to state 41
    mod_prefix        go to state 53
    type_spec         go to state 83
    mod_prefix_tid    go to state 55
    tuple_type_spec   go to state 56
    array_type_spec   go to state 57
    struct_type_spec  go to state 58
    enum_type_spec    go to state 59
    fn_type_spec      go to state 60


State 51

  140 tuple_type_spec: "{" • type_spec "}"
  141                | "{" • type_spec_cl2 "}"
  143 struct_type_spec: "{" • struct_type_spec_field_cl "}"

    "val_id"  shift, and go to state 10
    "TypeId"  shift, and go to state 22
    "enum"    shift, and go to state 48
    "fn"      shift, and go to state 49
    "["       shift, and go to state 50
    "{"       shift, and go to state 51

    tid                        go to state 52
    vid                        go to state 84
    mod_prefix                 go to state 53
    type_spec_cl2              go to state 85
    type_spec                  go to state 86
    mod_prefix_tid             go to state 55
    tuple_type_spec            go to state 56
    array_type_spec            go to state 57
    struct_type_spec           go to state 58
    struct_type_spec_field_cl  go to state 87
    struct_type_spec_field     go to state 88
    enum_type_spec             go to state 59
    fn_type_spec               go to state 60


State 52

  132 type_spec: tid •

    $default  reduce using rule 132 (type_spec)


State 53

   42 mod_prefix: mod_prefix • vid "::"
   43           | mod_prefix • vid "[" targ_cl "]" "::"
  139 mod_prefix_tid: mod_prefix • tid

    "val_id"  shift, and go to state 10
    "TypeId"  shift, and go to state 22

    tid  go to state 89
    vid  go to state 78


State 54

  174 tpattern_field: vid type_spec •

    $default  reduce using rule 174 (tpattern_field)


State 55

  133 type_spec: mod_prefix_tid •

    $default  reduce using rule 133 (type_spec)


State 56

  134 type_spec: tuple_type_spec •

    $default  reduce using rule 134 (type_spec)


State 57

  135 type_spec: array_type_spec •

    $default  reduce using rule 135 (type_spec)


State 58

  136 type_spec: struct_type_spec •

    $default  reduce using rule 136 (type_spec)


State 59

  137 type_spec: enum_type_spec •

    $default  reduce using rule 137 (type_spec)


State 60

  138 type_spec: fn_type_spec •

    $default  reduce using rule 138 (type_spec)


State 61

  187 tpattern_field_cl1: tpattern_field_cl1 "," • tpattern_field

    "val_id"  shift, and go to state 10
    "TypeId"  shift, and go to state 22

    tid             go to state 23
    vid             go to state 24
    tpattern_field  go to state 90


State 62

  181 tpattern: "[" tpattern_field_cl1 "]" •

    $default  reduce using rule 181 (tpattern)


State 63

   17 mod_field: "mod" vid • native_mod_exp

    "["  shift, and go to state 16
    "{"  shift, and go to state 17

    native_mod_exp  go to state 91
    tpattern        go to state 19


State 64

    8 native_mod_exp: "{" mod_field_sl "}" •

    $default  reduce using rule 8 (native_mod_exp)


State 65

   13 mod_field_sl: mod_field_sl mod_field • ";"

    ";"  shift, and go to state 92


State 66

   12 mod_field_sl: mod_field ";" •

    $default  reduce using rule 12 (mod_field_sl)


State 67

   15 mod_field: tid "=" • type_spec

    "val_id"  shift, and go to state 10
    "TypeId"  shift, and go to state 22
    "enum"    shift, and go to state 48
    "fn"      shift, and go to state 49
    "["       shift, and go to state 50
    "{"       shift, and go to state 51

    tid               go to state 52
    vid               go to state 41
    mod_prefix        go to state 53
    type_spec         go to state 93
    mod_prefix_tid    go to state 55
    tuple_type_spec   go to state 56
    array_type_spec   go to state 57
    struct_type_spec  go to state 58
    enum_type_spec    go to state 59
    fn_type_spec      go to state 60


State 68

   14 mod_field: vid "=" • long_exp

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 48
    "if"                     shift, and go to state 94
    "fn"                     shift, and go to state 49
    "not"                    shift, and go to state 95
    "42"                     shift, and go to state 96
    "0x2a"                   shift, and go to state 97
    "42u"                    shift, and go to state 98
    "0x2Au"                  shift, and go to state 99
    "4.2"                    shift, and go to state 100
    "\"dq-string-literal\""  shift, and go to state 101
    "'sq-string-literal'"    shift, and go to state 102
    "("                      shift, and go to state 103
    "["                      shift, and go to state 50
    "{"                      shift, and go to state 104
    "+"                      shift, and go to state 105
    "-"                      shift, and go to state 106

    tid               go to state 52
    vid               go to state 107
    floatl            go to state 108
    mod_prefix        go to state 109
    expr              go to state 110
    long_exp          go to state 111
    bracketed_exp     go to state 112
    paren_exp         go to state 113
    vtupleExpr        go to state 114
    vstructExpr       go to state 115
    primary_exp       go to state 116
    int_expr          go to state 117
    stringls          go to state 118
    if_exp            go to state 119
    chain_exp         go to state 120
    lambda_exp        go to state 121
    postfix_exp       go to state 122
    vcall_exp         go to state 123
    dot_name_exp      go to state 124
    dot_index_exp     go to state 125
    unary_exp         go to state 126
    unary_op          go to state 127
    binary_exp        go to state 128
    mul_binary_exp    go to state 129
    add_binary_exp    go to state 130
    cmp_binary_exp    go to state 131
    eq_binary_exp     go to state 132
    and_binary_exp    go to state 133
    xor_binary_exp    go to state 134
    or_binary_exp     go to state 135
    type_spec         go to state 136
    mod_prefix_tid    go to state 55
    tuple_type_spec   go to state 56
    array_type_spec   go to state 57
    struct_type_spec  go to state 58
    enum_type_spec    go to state 59
    fn_type_spec      go to state 137


State 69

   16 mod_field: cid "=" • class_spec

    "val_id"     shift, and go to state 10
    "CLS_ID"     shift, and go to state 27
    "typeclass"  shift, and go to state 40

    vid                        go to state 41
    cid                        go to state 42
    mod_prefix                 go to state 43
    class_spec                 go to state 138
    primary_class_spec         go to state 45
    mod_prefix_cid_class_spec  go to state 46
    class_exp_class_spec       go to state 47


State 70

   11 native_mod_exp: tpattern "{" "}" •

    $default  reduce using rule 11 (native_mod_exp)


State 71

    9 native_mod_exp: tpattern "{" mod_field_sl • "}"
   13 mod_field_sl: mod_field_sl • mod_field ";"

    "val_id"  shift, and go to state 10
    "TypeId"  shift, and go to state 22
    "CLS_ID"  shift, and go to state 27
    "mod"     shift, and go to state 28
    "}"       shift, and go to state 139

    mod_field  go to state 65
    tid        go to state 32
    vid        go to state 33
    cid        go to state 34


State 72

   20 import_field_group_sl0: import_field_group_sl0 import_field_group ";" •

    $default  reduce using rule 20 (import_field_group_sl0)


State 73

   21 import_field_group: import_field_cl1 "from" • stringl

    "\"dq-string-literal\""  shift, and go to state 140
    "'sq-string-literal'"    shift, and go to state 141

    stringl  go to state 142


State 74

   23 import_field_cl1: import_field_cl1 "," • vid

    "val_id"  shift, and go to state 10

    vid  go to state 143


State 75

  167 class_exp_class_spec: "typeclass" "(" • tid class_spec ")" "{" type_query_exp_sl0 "}"

    "TypeId"  shift, and go to state 22

    tid  go to state 144


State 76

   40 mod_prefix: vid "::" •

    $default  reduce using rule 40 (mod_prefix)


State 77

   41 mod_prefix: vid "[" • targ_cl "]" "::"

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 48
    "if"                     shift, and go to state 94
    "fn"                     shift, and go to state 49
    "not"                    shift, and go to state 95
    "42"                     shift, and go to state 96
    "0x2a"                   shift, and go to state 97
    "42u"                    shift, and go to state 98
    "0x2Au"                  shift, and go to state 99
    "4.2"                    shift, and go to state 100
    "\"dq-string-literal\""  shift, and go to state 101
    "'sq-string-literal'"    shift, and go to state 102
    "("                      shift, and go to state 103
    "["                      shift, and go to state 50
    "{"                      shift, and go to state 104
    "+"                      shift, and go to state 105
    "-"                      shift, and go to state 106

    tid               go to state 52
    vid               go to state 107
    floatl            go to state 108
    mod_prefix        go to state 109
    expr              go to state 145
    bracketed_exp     go to state 112
    paren_exp         go to state 113
    vtupleExpr        go to state 114
    vstructExpr       go to state 115
    primary_exp       go to state 116
    int_expr          go to state 117
    stringls          go to state 118
    if_exp            go to state 119
    chain_exp         go to state 120
    postfix_exp       go to state 122
    vcall_exp         go to state 123
    dot_name_exp      go to state 124
    dot_index_exp     go to state 125
    unary_exp         go to state 126
    unary_op          go to state 127
    binary_exp        go to state 128
    mul_binary_exp    go to state 129
    add_binary_exp    go to state 130
    cmp_binary_exp    go to state 131
    eq_binary_exp     go to state 132
    and_binary_exp    go to state 133
    xor_binary_exp    go to state 134
    or_binary_exp     go to state 135
    type_spec         go to state 146
    mod_prefix_tid    go to state 55
    tuple_type_spec   go to state 56
    array_type_spec   go to state 57
    struct_type_spec  go to state 58
    enum_type_spec    go to state 59
    fn_type_spec      go to state 60
    targ              go to state 147
    targ_cl           go to state 148


State 78

   42 mod_prefix: mod_prefix vid • "::"
   43           | mod_prefix vid • "[" targ_cl "]" "::"

    "::"  shift, and go to state 149
    "["   shift, and go to state 150


State 79

  166 mod_prefix_cid_class_spec: mod_prefix cid •

    $default  reduce using rule 166 (mod_prefix_cid_class_spec)


State 80

  151 enum_type_spec: "enum" "{" • enum_type_spec_field_cl "}"

    "TypeId"  shift, and go to state 22

    tid                      go to state 151
    enum_type_spec_field     go to state 152
    enum_type_spec_field_cl  go to state 153


State 81

  179 vpattern: "(" • vpattern_field_cl ")"
  180         | "(" • ")"

    "val_id"  shift, and go to state 10
    "out"     shift, and go to state 154
    "inout"   shift, and go to state 155
    ")"       shift, and go to state 156

    vid                go to state 157
    vpattern_field     go to state 158
    vpattern_field_cl  go to state 159


State 82

  152 fn_type_spec: "fn" vpattern • type_spec

    "val_id"  shift, and go to state 10
    "TypeId"  shift, and go to state 22
    "enum"    shift, and go to state 48
    "fn"      shift, and go to state 49
    "["       shift, and go to state 50
    "{"       shift, and go to state 51

    tid               go to state 52
    vid               go to state 41
    mod_prefix        go to state 53
    type_spec         go to state 160
    mod_prefix_tid    go to state 55
    tuple_type_spec   go to state 56
    array_type_spec   go to state 57
    struct_type_spec  go to state 58
    enum_type_spec    go to state 59
    fn_type_spec      go to state 60


State 83

  142 array_type_spec: "[" type_spec • "*" expr "]"

    "*"  shift, and go to state 161


State 84

   40 mod_prefix: vid • "::"
   41           | vid • "[" targ_cl "]" "::"
  146 struct_type_spec_field: vid • type_spec

    "val_id"  shift, and go to state 10
    "TypeId"  shift, and go to state 22
    "enum"    shift, and go to state 48
    "fn"      shift, and go to state 49
    "::"      shift, and go to state 76
    "["       shift, and go to state 162
    "{"       shift, and go to state 51

    tid               go to state 52
    vid               go to state 41
    mod_prefix        go to state 53
    type_spec         go to state 163
    mod_prefix_tid    go to state 55
    tuple_type_spec   go to state 56
    array_type_spec   go to state 57
    struct_type_spec  go to state 58
    enum_type_spec    go to state 59
    fn_type_spec      go to state 60


State 85

  131 type_spec_cl2: type_spec_cl2 • "," type_spec
  141 tuple_type_spec: "{" type_spec_cl2 • "}"

    ","  shift, and go to state 164
    "}"  shift, and go to state 165


State 86

  130 type_spec_cl2: type_spec • "," type_spec
  140 tuple_type_spec: "{" type_spec • "}"

    ","  shift, and go to state 166
    "}"  shift, and go to state 167


State 87

  143 struct_type_spec: "{" struct_type_spec_field_cl • "}"
  145 struct_type_spec_field_cl: struct_type_spec_field_cl • "," struct_type_spec_field

    ","  shift, and go to state 168
    "}"  shift, and go to state 169


State 88

  144 struct_type_spec_field_cl: struct_type_spec_field •

    $default  reduce using rule 144 (struct_type_spec_field_cl)


State 89

  139 mod_prefix_tid: mod_prefix tid •

    $default  reduce using rule 139 (mod_prefix_tid)


State 90

  187 tpattern_field_cl1: tpattern_field_cl1 "," tpattern_field •

    $default  reduce using rule 187 (tpattern_field_cl1)


State 91

   17 mod_field: "mod" vid native_mod_exp •

    $default  reduce using rule 17 (mod_field)


State 92

   13 mod_field_sl: mod_field_sl mod_field ";" •

    $default  reduce using rule 13 (mod_field_sl)


State 93

   15 mod_field: tid "=" type_spec •

    $default  reduce using rule 15 (mod_field)


State 94

   75 if_exp: "if" • bracketed_exp bracketed_exp
   76       | "if" • bracketed_exp bracketed_exp "else" primary_exp

    "("  shift, and go to state 103
    "{"  shift, and go to state 170

    bracketed_exp  go to state 171
    paren_exp      go to state 113
    vtupleExpr     go to state 114
    vstructExpr    go to state 115
    chain_exp      go to state 120


State 95

   99 unary_op: "not" •

    $default  reduce using rule 99 (unary_op)


State 96

   67 int_expr: "42" •

    $default  reduce using rule 67 (int_expr)


State 97

   68 int_expr: "0x2a" •

    $default  reduce using rule 68 (int_expr)


State 98

   69 int_expr: "42u" •

    $default  reduce using rule 69 (int_expr)


State 99

   70 int_expr: "0x2Au" •

    $default  reduce using rule 70 (int_expr)


State 100

   37 floatl: "4.2" •

    $default  reduce using rule 37 (floatl)


State 101

   72 stringls: "\"dq-string-literal\"" •

    $default  reduce using rule 72 (stringls)


State 102

   71 stringls: "'sq-string-literal'" •

    $default  reduce using rule 71 (stringls)


State 103

   55 paren_exp: "(" • long_exp ")"
   56 vtupleExpr: "(" • ")"
   57           | "(" • expr "," ")"
   58           | "(" • expr_cl2 ")"

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 48
    "if"                     shift, and go to state 94
    "fn"                     shift, and go to state 49
    "not"                    shift, and go to state 95
    "42"                     shift, and go to state 96
    "0x2a"                   shift, and go to state 97
    "42u"                    shift, and go to state 98
    "0x2Au"                  shift, and go to state 99
    "4.2"                    shift, and go to state 100
    "\"dq-string-literal\""  shift, and go to state 101
    "'sq-string-literal'"    shift, and go to state 102
    "("                      shift, and go to state 103
    ")"                      shift, and go to state 172
    "["                      shift, and go to state 50
    "{"                      shift, and go to state 104
    "+"                      shift, and go to state 105
    "-"                      shift, and go to state 106

    tid               go to state 52
    vid               go to state 107
    floatl            go to state 108
    mod_prefix        go to state 109
    expr              go to state 173
    long_exp          go to state 174
    expr_cl2          go to state 175
    bracketed_exp     go to state 112
    paren_exp         go to state 113
    vtupleExpr        go to state 114
    vstructExpr       go to state 115
    primary_exp       go to state 116
    int_expr          go to state 117
    stringls          go to state 118
    if_exp            go to state 119
    chain_exp         go to state 120
    lambda_exp        go to state 121
    postfix_exp       go to state 122
    vcall_exp         go to state 123
    dot_name_exp      go to state 124
    dot_index_exp     go to state 125
    unary_exp         go to state 126
    unary_op          go to state 127
    binary_exp        go to state 128
    mul_binary_exp    go to state 129
    add_binary_exp    go to state 130
    cmp_binary_exp    go to state 131
    eq_binary_exp     go to state 132
    and_binary_exp    go to state 133
    xor_binary_exp    go to state 134
    or_binary_exp     go to state 135
    type_spec         go to state 136
    mod_prefix_tid    go to state 55
    tuple_type_spec   go to state 56
    array_type_spec   go to state 57
    struct_type_spec  go to state 58
    enum_type_spec    go to state 59
    fn_type_spec      go to state 137


State 104

   59 vstructExpr: "{" • struct_exp_field_cl "}"
   77 chain_exp: "{" • "}"
   78          | "{" • long_exp "}"
   79          | "{" • chain_prefix "}"
   80          | "{" • chain_prefix long_exp "}"
  140 tuple_type_spec: "{" • type_spec "}"
  141                | "{" • type_spec_cl2 "}"
  143 struct_type_spec: "{" • struct_type_spec_field_cl "}"

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 48
    "if"                     shift, and go to state 94
    "const"                  shift, and go to state 176
    "val"                    shift, and go to state 177
    "var"                    shift, and go to state 178
    "set"                    shift, and go to state 179
    "fn"                     shift, and go to state 49
    "not"                    shift, and go to state 95
    "discard"                shift, and go to state 180
    "42"                     shift, and go to state 96
    "0x2a"                   shift, and go to state 97
    "42u"                    shift, and go to state 98
    "0x2Au"                  shift, and go to state 99
    "4.2"                    shift, and go to state 100
    "\"dq-string-literal\""  shift, and go to state 101
    "'sq-string-literal'"    shift, and go to state 102
    "("                      shift, and go to state 103
    "["                      shift, and go to state 50
    "{"                      shift, and go to state 104
    "}"                      shift, and go to state 181
    "+"                      shift, and go to state 105
    "-"                      shift, and go to state 106

    chain_prefix_stmt          go to state 182
    const_stmt                 go to state 183
    val_stmt                   go to state 184
    var_stmt                   go to state 185
    set_stmt                   go to state 186
    discard_stmt               go to state 187
    tid                        go to state 52
    vid                        go to state 188
    floatl                     go to state 108
    mod_prefix                 go to state 109
    expr                       go to state 110
    long_exp                   go to state 189
    bracketed_exp              go to state 112
    paren_exp                  go to state 113
    vtupleExpr                 go to state 114
    vstructExpr                go to state 115
    primary_exp                go to state 116
    int_expr                   go to state 117
    stringls                   go to state 118
    if_exp                     go to state 119
    chain_exp                  go to state 120
    chain_prefix               go to state 190
    lambda_exp                 go to state 121
    postfix_exp                go to state 122
    vcall_exp                  go to state 123
    dot_name_exp               go to state 124
    dot_index_exp              go to state 125
    unary_exp                  go to state 126
    unary_op                   go to state 127
    binary_exp                 go to state 128
    mul_binary_exp             go to state 129
    add_binary_exp             go to state 130
    cmp_binary_exp             go to state 131
    eq_binary_exp              go to state 132
    and_binary_exp             go to state 133
    xor_binary_exp             go to state 134
    or_binary_exp              go to state 135
    type_spec_cl2              go to state 85
    type_spec                  go to state 191
    mod_prefix_tid             go to state 55
    tuple_type_spec            go to state 56
    array_type_spec            go to state 57
    struct_type_spec           go to state 58
    struct_type_spec_field_cl  go to state 87
    struct_type_spec_field     go to state 88
    enum_type_spec             go to state 59
    fn_type_spec               go to state 137
    struct_exp_field           go to state 192
    struct_exp_field_cl        go to state 193


State 105

   97 unary_op: "+" •

    $default  reduce using rule 97 (unary_op)


State 106

   98 unary_op: "-" •

    $default  reduce using rule 98 (unary_op)


State 107

   40 mod_prefix: vid • "::"
   41           | vid • "[" targ_cl "]" "::"
   61 primary_exp: vid •

    "::"  shift, and go to state 76
    "["   shift, and go to state 77

    $default  reduce using rule 61 (primary_exp)


State 108

   63 primary_exp: floatl •

    $default  reduce using rule 63 (primary_exp)


State 109

   42 mod_prefix: mod_prefix • vid "::"
   43           | mod_prefix • vid "[" targ_cl "]" "::"
   66 primary_exp: mod_prefix • vid
  139 mod_prefix_tid: mod_prefix • tid

    "val_id"  shift, and go to state 10
    "TypeId"  shift, and go to state 22

    tid  go to state 89
    vid  go to state 194


State 110

   45 long_exp: expr •

    $default  reduce using rule 45 (long_exp)


State 111

   14 mod_field: vid "=" long_exp •

    $default  reduce using rule 14 (mod_field)


State 112

   60 primary_exp: bracketed_exp •

    $default  reduce using rule 60 (primary_exp)


State 113

   51 bracketed_exp: paren_exp •

    $default  reduce using rule 51 (bracketed_exp)


State 114

   52 bracketed_exp: vtupleExpr •

    $default  reduce using rule 52 (bracketed_exp)


State 115

   53 bracketed_exp: vstructExpr •

    $default  reduce using rule 53 (bracketed_exp)


State 116

   84 postfix_exp: primary_exp •

    $default  reduce using rule 84 (postfix_exp)


State 117

   62 primary_exp: int_expr •

    $default  reduce using rule 62 (primary_exp)


State 118

   64 primary_exp: stringls •
   73 stringls: stringls • "'sq-string-literal'"
   74         | stringls • "\"dq-string-literal\""

    "\"dq-string-literal\""  shift, and go to state 195
    "'sq-string-literal'"    shift, and go to state 196

    $default  reduce using rule 64 (primary_exp)


State 119

   65 primary_exp: if_exp •

    $default  reduce using rule 65 (primary_exp)


State 120

   54 bracketed_exp: chain_exp •

    $default  reduce using rule 54 (bracketed_exp)


State 121

   46 long_exp: lambda_exp •

    $default  reduce using rule 46 (long_exp)


State 122

   88 vcall_exp: postfix_exp • "(" ")"
   89          | postfix_exp • "(" varg_cl ")"
   90 dot_name_exp: postfix_exp • "." "val_id"
   93 dot_index_exp: postfix_exp • "." int_expr
   94              | postfix_exp • "." bracketed_exp
   95 unary_exp: postfix_exp •

    "."  shift, and go to state 197
    "("  shift, and go to state 198

    $default  reduce using rule 95 (unary_exp)


State 123

   85 postfix_exp: vcall_exp •

    $default  reduce using rule 85 (postfix_exp)


State 124

   86 postfix_exp: dot_name_exp •

    $default  reduce using rule 86 (postfix_exp)


State 125

   87 postfix_exp: dot_index_exp •

    $default  reduce using rule 87 (postfix_exp)


State 126

  104 mul_binary_exp: unary_exp •

    $default  reduce using rule 104 (mul_binary_exp)


State 127

   96 unary_exp: unary_op • unary_exp

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 48
    "if"                     shift, and go to state 94
    "fn"                     shift, and go to state 49
    "not"                    shift, and go to state 95
    "42"                     shift, and go to state 96
    "0x2a"                   shift, and go to state 97
    "42u"                    shift, and go to state 98
    "0x2Au"                  shift, and go to state 99
    "4.2"                    shift, and go to state 100
    "\"dq-string-literal\""  shift, and go to state 101
    "'sq-string-literal'"    shift, and go to state 102
    "("                      shift, and go to state 103
    "["                      shift, and go to state 50
    "{"                      shift, and go to state 104
    "+"                      shift, and go to state 105
    "-"                      shift, and go to state 106

    tid               go to state 52
    vid               go to state 107
    floatl            go to state 108
    mod_prefix        go to state 109
    bracketed_exp     go to state 112
    paren_exp         go to state 113
    vtupleExpr        go to state 114
    vstructExpr       go to state 115
    primary_exp       go to state 116
    int_expr          go to state 117
    stringls          go to state 118
    if_exp            go to state 119
    chain_exp         go to state 120
    postfix_exp       go to state 122
    vcall_exp         go to state 123
    dot_name_exp      go to state 124
    dot_index_exp     go to state 125
    unary_exp         go to state 199
    unary_op          go to state 127
    type_spec         go to state 136
    mod_prefix_tid    go to state 55
    tuple_type_spec   go to state 56
    array_type_spec   go to state 57
    struct_type_spec  go to state 58
    enum_type_spec    go to state 59
    fn_type_spec      go to state 60


State 128

   44 expr: binary_exp •

    $default  reduce using rule 44 (expr)


State 129

  105 mul_binary_exp: mul_binary_exp • mul_binary_op unary_exp
  108 add_binary_exp: mul_binary_exp •

    "*"  shift, and go to state 200
    "/"  shift, and go to state 201
    "%"  shift, and go to state 202

    $default  reduce using rule 108 (add_binary_exp)

    mul_binary_op  go to state 203


State 130

  109 add_binary_exp: add_binary_exp • add_binary_op mul_binary_exp
  114 cmp_binary_exp: add_binary_exp •

    "+"  shift, and go to state 204
    "-"  shift, and go to state 205

    $default  reduce using rule 114 (cmp_binary_exp)

    add_binary_op  go to state 206


State 131

  115 cmp_binary_exp: cmp_binary_exp • cmp_binary_op add_binary_exp
  118 eq_binary_exp: cmp_binary_exp •

    "<"   shift, and go to state 207
    "<="  shift, and go to state 208
    ">"   shift, and go to state 209
    ">="  shift, and go to state 210

    $default  reduce using rule 118 (eq_binary_exp)

    cmp_binary_op  go to state 211


State 132

  119 eq_binary_exp: eq_binary_exp • eq_binary_op cmp_binary_exp
  120 and_binary_exp: eq_binary_exp •

    "=="  shift, and go to state 212
    "!="  shift, and go to state 213

    $default  reduce using rule 120 (and_binary_exp)

    eq_binary_op  go to state 214


State 133

  121 and_binary_exp: and_binary_exp • "and" eq_binary_exp
  122 xor_binary_exp: and_binary_exp •

    "and"  shift, and go to state 215

    $default  reduce using rule 122 (xor_binary_exp)


State 134

  123 xor_binary_exp: xor_binary_exp • "xor" and_binary_exp
  124 or_binary_exp: xor_binary_exp •

    "xor"  shift, and go to state 216

    $default  reduce using rule 124 (or_binary_exp)


State 135

  100 binary_exp: or_binary_exp •
  125 or_binary_exp: or_binary_exp • "or" xor_binary_exp

    "or"  shift, and go to state 217

    $default  reduce using rule 100 (binary_exp)


State 136

   91 dot_name_exp: type_spec • "::" "TypeId"
   92             | type_spec • "::" "TypeId" "using" paren_exp

    "::"  shift, and go to state 218


State 137

   83 lambda_exp: fn_type_spec • bracketed_exp
  138 type_spec: fn_type_spec •

    "("  shift, and go to state 103
    "{"  shift, and go to state 170

    $default  reduce using rule 138 (type_spec)

    bracketed_exp  go to state 219
    paren_exp      go to state 113
    vtupleExpr     go to state 114
    vstructExpr    go to state 115
    chain_exp      go to state 120


State 138

   16 mod_field: cid "=" class_spec •

    $default  reduce using rule 16 (mod_field)


State 139

    9 native_mod_exp: tpattern "{" mod_field_sl "}" •

    $default  reduce using rule 9 (native_mod_exp)


State 140

   39 stringl: "\"dq-string-literal\"" •

    $default  reduce using rule 39 (stringl)


State 141

   38 stringl: "'sq-string-literal'" •

    $default  reduce using rule 38 (stringl)


State 142

   21 import_field_group: import_field_cl1 "from" stringl •

    $default  reduce using rule 21 (import_field_group)


State 143

   23 import_field_cl1: import_field_cl1 "," vid •

    $default  reduce using rule 23 (import_field_cl1)


State 144

  167 class_exp_class_spec: "typeclass" "(" tid • class_spec ")" "{" type_query_exp_sl0 "}"

    "val_id"     shift, and go to state 10
    "CLS_ID"     shift, and go to state 27
    "typeclass"  shift, and go to state 40

    vid                        go to state 41
    cid                        go to state 42
    mod_prefix                 go to state 43
    class_spec                 go to state 220
    primary_class_spec         go to state 45
    mod_prefix_cid_class_spec  go to state 46
    class_exp_class_spec       go to state 47


State 145

  154 targ: expr •

    $default  reduce using rule 154 (targ)


State 146

   91 dot_name_exp: type_spec • "::" "TypeId"
   92             | type_spec • "::" "TypeId" "using" paren_exp
  153 targ: type_spec •

    "::"  shift, and go to state 218

    $default  reduce using rule 153 (targ)


State 147

  155 targ_cl: targ •

    $default  reduce using rule 155 (targ_cl)


State 148

   41 mod_prefix: vid "[" targ_cl • "]" "::"
  156 targ_cl: targ_cl • "," targ

    ","  shift, and go to state 221
    "]"  shift, and go to state 222


State 149

   42 mod_prefix: mod_prefix vid "::" •

    $default  reduce using rule 42 (mod_prefix)


State 150

   43 mod_prefix: mod_prefix vid "[" • targ_cl "]" "::"

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 48
    "if"                     shift, and go to state 94
    "fn"                     shift, and go to state 49
    "not"                    shift, and go to state 95
    "42"                     shift, and go to state 96
    "0x2a"                   shift, and go to state 97
    "42u"                    shift, and go to state 98
    "0x2Au"                  shift, and go to state 99
    "4.2"                    shift, and go to state 100
    "\"dq-string-literal\""  shift, and go to state 101
    "'sq-string-literal'"    shift, and go to state 102
    "("                      shift, and go to state 103
    "["                      shift, and go to state 50
    "{"                      shift, and go to state 104
    "+"                      shift, and go to state 105
    "-"                      shift, and go to state 106

    tid               go to state 52
    vid               go to state 107
    floatl            go to state 108
    mod_prefix        go to state 109
    expr              go to state 145
    bracketed_exp     go to state 112
    paren_exp         go to state 113
    vtupleExpr        go to state 114
    vstructExpr       go to state 115
    primary_exp       go to state 116
    int_expr          go to state 117
    stringls          go to state 118
    if_exp            go to state 119
    chain_exp         go to state 120
    postfix_exp       go to state 122
    vcall_exp         go to state 123
    dot_name_exp      go to state 124
    dot_index_exp     go to state 125
    unary_exp         go to state 126
    unary_op          go to state 127
    binary_exp        go to state 128
    mul_binary_exp    go to state 129
    add_binary_exp    go to state 130
    cmp_binary_exp    go to state 131
    eq_binary_exp     go to state 132
    and_binary_exp    go to state 133
    xor_binary_exp    go to state 134
    or_binary_exp     go to state 135
    type_spec         go to state 146
    mod_prefix_tid    go to state 55
    tuple_type_spec   go to state 56
    array_type_spec   go to state 57
    struct_type_spec  go to state 58
    enum_type_spec    go to state 59
    fn_type_spec      go to state 60
    targ              go to state 147
    targ_cl           go to state 223


State 151

  147 enum_type_spec_field: tid •
  148                     | tid • type_spec

    "val_id"  shift, and go to state 10
    "TypeId"  shift, and go to state 22
    "enum"    shift, and go to state 48
    "fn"      shift, and go to state 49
    "["       shift, and go to state 50
    "{"       shift, and go to state 51

    $default  reduce using rule 147 (enum_type_spec_field)

    tid               go to state 52
    vid               go to state 41
    mod_prefix        go to state 53
    type_spec         go to state 224
    mod_prefix_tid    go to state 55
    tuple_type_spec   go to state 56
    array_type_spec   go to state 57
    struct_type_spec  go to state 58
    enum_type_spec    go to state 59
    fn_type_spec      go to state 60


State 152

  149 enum_type_spec_field_cl: enum_type_spec_field •

    $default  reduce using rule 149 (enum_type_spec_field_cl)


State 153

  150 enum_type_spec_field_cl: enum_type_spec_field_cl • "," enum_type_spec_field
  151 enum_type_spec: "enum" "{" enum_type_spec_field_cl • "}"

    ","  shift, and go to state 225
    "}"  shift, and go to state 226


State 154

  170 vpattern_field: "out" • vid type_spec

    "val_id"  shift, and go to state 10

    vid  go to state 227


State 155

  171 vpattern_field: "inout" • vid type_spec

    "val_id"  shift, and go to state 10

    vid  go to state 228


State 156

  180 vpattern: "(" ")" •

    $default  reduce using rule 180 (vpattern)


State 157

  169 vpattern_field: vid • type_spec

    "val_id"  shift, and go to state 10
    "TypeId"  shift, and go to state 22
    "enum"    shift, and go to state 48
    "fn"      shift, and go to state 49
    "["       shift, and go to state 50
    "{"       shift, and go to state 51

    tid               go to state 52
    vid               go to state 41
    mod_prefix        go to state 53
    type_spec         go to state 229
    mod_prefix_tid    go to state 55
    tuple_type_spec   go to state 56
    array_type_spec   go to state 57
    struct_type_spec  go to state 58
    enum_type_spec    go to state 59
    fn_type_spec      go to state 60


State 158

  182 vpattern_field_cl: vpattern_field •

    $default  reduce using rule 182 (vpattern_field_cl)


State 159

  179 vpattern: "(" vpattern_field_cl • ")"
  183 vpattern_field_cl: vpattern_field_cl • "," vpattern_field

    ","  shift, and go to state 230
    ")"  shift, and go to state 231


State 160

  152 fn_type_spec: "fn" vpattern type_spec •

    $default  reduce using rule 152 (fn_type_spec)


State 161

  142 array_type_spec: "[" type_spec "*" • expr "]"

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 48
    "if"                     shift, and go to state 94
    "fn"                     shift, and go to state 49
    "not"                    shift, and go to state 95
    "42"                     shift, and go to state 96
    "0x2a"                   shift, and go to state 97
    "42u"                    shift, and go to state 98
    "0x2Au"                  shift, and go to state 99
    "4.2"                    shift, and go to state 100
    "\"dq-string-literal\""  shift, and go to state 101
    "'sq-string-literal'"    shift, and go to state 102
    "("                      shift, and go to state 103
    "["                      shift, and go to state 50
    "{"                      shift, and go to state 104
    "+"                      shift, and go to state 105
    "-"                      shift, and go to state 106

    tid               go to state 52
    vid               go to state 107
    floatl            go to state 108
    mod_prefix        go to state 109
    expr              go to state 232
    bracketed_exp     go to state 112
    paren_exp         go to state 113
    vtupleExpr        go to state 114
    vstructExpr       go to state 115
    primary_exp       go to state 116
    int_expr          go to state 117
    stringls          go to state 118
    if_exp            go to state 119
    chain_exp         go to state 120
    postfix_exp       go to state 122
    vcall_exp         go to state 123
    dot_name_exp      go to state 124
    dot_index_exp     go to state 125
    unary_exp         go to state 126
    unary_op          go to state 127
    binary_exp        go to state 128
    mul_binary_exp    go to state 129
    add_binary_exp    go to state 130
    cmp_binary_exp    go to state 131
    eq_binary_exp     go to state 132
    and_binary_exp    go to state 133
    xor_binary_exp    go to state 134
    or_binary_exp     go to state 135
    type_spec         go to state 136
    mod_prefix_tid    go to state 55
    tuple_type_spec   go to state 56
    array_type_spec   go to state 57
    struct_type_spec  go to state 58
    enum_type_spec    go to state 59
    fn_type_spec      go to state 60


State 162

   41 mod_prefix: vid "[" • targ_cl "]" "::"
  142 array_type_spec: "[" • type_spec "*" expr "]"

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 48
    "if"                     shift, and go to state 94
    "fn"                     shift, and go to state 49
    "not"                    shift, and go to state 95
    "42"                     shift, and go to state 96
    "0x2a"                   shift, and go to state 97
    "42u"                    shift, and go to state 98
    "0x2Au"                  shift, and go to state 99
    "4.2"                    shift, and go to state 100
    "\"dq-string-literal\""  shift, and go to state 101
    "'sq-string-literal'"    shift, and go to state 102
    "("                      shift, and go to state 103
    "["                      shift, and go to state 50
    "{"                      shift, and go to state 104
    "+"                      shift, and go to state 105
    "-"                      shift, and go to state 106

    tid               go to state 52
    vid               go to state 107
    floatl            go to state 108
    mod_prefix        go to state 109
    expr              go to state 145
    bracketed_exp     go to state 112
    paren_exp         go to state 113
    vtupleExpr        go to state 114
    vstructExpr       go to state 115
    primary_exp       go to state 116
    int_expr          go to state 117
    stringls          go to state 118
    if_exp            go to state 119
    chain_exp         go to state 120
    postfix_exp       go to state 122
    vcall_exp         go to state 123
    dot_name_exp      go to state 124
    dot_index_exp     go to state 125
    unary_exp         go to state 126
    unary_op          go to state 127
    binary_exp        go to state 128
    mul_binary_exp    go to state 129
    add_binary_exp    go to state 130
    cmp_binary_exp    go to state 131
    eq_binary_exp     go to state 132
    and_binary_exp    go to state 133
    xor_binary_exp    go to state 134
    or_binary_exp     go to state 135
    type_spec         go to state 233
    mod_prefix_tid    go to state 55
    tuple_type_spec   go to state 56
    array_type_spec   go to state 57
    struct_type_spec  go to state 58
    enum_type_spec    go to state 59
    fn_type_spec      go to state 60
    targ              go to state 147
    targ_cl           go to state 148


State 163

  146 struct_type_spec_field: vid type_spec •

    $default  reduce using rule 146 (struct_type_spec_field)


State 164

  131 type_spec_cl2: type_spec_cl2 "," • type_spec

    "val_id"  shift, and go to state 10
    "TypeId"  shift, and go to state 22
    "enum"    shift, and go to state 48
    "fn"      shift, and go to state 49
    "["       shift, and go to state 50
    "{"       shift, and go to state 51

    tid               go to state 52
    vid               go to state 41
    mod_prefix        go to state 53
    type_spec         go to state 234
    mod_prefix_tid    go to state 55
    tuple_type_spec   go to state 56
    array_type_spec   go to state 57
    struct_type_spec  go to state 58
    enum_type_spec    go to state 59
    fn_type_spec      go to state 60


State 165

  141 tuple_type_spec: "{" type_spec_cl2 "}" •

    $default  reduce using rule 141 (tuple_type_spec)


State 166

  130 type_spec_cl2: type_spec "," • type_spec

    "val_id"  shift, and go to state 10
    "TypeId"  shift, and go to state 22
    "enum"    shift, and go to state 48
    "fn"      shift, and go to state 49
    "["       shift, and go to state 50
    "{"       shift, and go to state 51

    tid               go to state 52
    vid               go to state 41
    mod_prefix        go to state 53
    type_spec         go to state 235
    mod_prefix_tid    go to state 55
    tuple_type_spec   go to state 56
    array_type_spec   go to state 57
    struct_type_spec  go to state 58
    enum_type_spec    go to state 59
    fn_type_spec      go to state 60


State 167

  140 tuple_type_spec: "{" type_spec "}" •

    $default  reduce using rule 140 (tuple_type_spec)


State 168

  145 struct_type_spec_field_cl: struct_type_spec_field_cl "," • struct_type_spec_field

    "val_id"  shift, and go to state 10

    vid                     go to state 236
    struct_type_spec_field  go to state 237


State 169

  143 struct_type_spec: "{" struct_type_spec_field_cl "}" •

    $default  reduce using rule 143 (struct_type_spec)


State 170

   59 vstructExpr: "{" • struct_exp_field_cl "}"
   77 chain_exp: "{" • "}"
   78          | "{" • long_exp "}"
   79          | "{" • chain_prefix "}"
   80          | "{" • chain_prefix long_exp "}"

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 48
    "if"                     shift, and go to state 94
    "const"                  shift, and go to state 176
    "val"                    shift, and go to state 177
    "var"                    shift, and go to state 178
    "set"                    shift, and go to state 179
    "fn"                     shift, and go to state 49
    "not"                    shift, and go to state 95
    "discard"                shift, and go to state 180
    "42"                     shift, and go to state 96
    "0x2a"                   shift, and go to state 97
    "42u"                    shift, and go to state 98
    "0x2Au"                  shift, and go to state 99
    "4.2"                    shift, and go to state 100
    "\"dq-string-literal\""  shift, and go to state 101
    "'sq-string-literal'"    shift, and go to state 102
    "("                      shift, and go to state 103
    "["                      shift, and go to state 50
    "{"                      shift, and go to state 104
    "}"                      shift, and go to state 181
    "+"                      shift, and go to state 105
    "-"                      shift, and go to state 106

    chain_prefix_stmt    go to state 182
    const_stmt           go to state 183
    val_stmt             go to state 184
    var_stmt             go to state 185
    set_stmt             go to state 186
    discard_stmt         go to state 187
    tid                  go to state 52
    vid                  go to state 238
    floatl               go to state 108
    mod_prefix           go to state 109
    expr                 go to state 110
    long_exp             go to state 189
    bracketed_exp        go to state 112
    paren_exp            go to state 113
    vtupleExpr           go to state 114
    vstructExpr          go to state 115
    primary_exp          go to state 116
    int_expr             go to state 117
    stringls             go to state 118
    if_exp               go to state 119
    chain_exp            go to state 120
    chain_prefix         go to state 190
    lambda_exp           go to state 121
    postfix_exp          go to state 122
    vcall_exp            go to state 123
    dot_name_exp         go to state 124
    dot_index_exp        go to state 125
    unary_exp            go to state 126
    unary_op             go to state 127
    binary_exp           go to state 128
    mul_binary_exp       go to state 129
    add_binary_exp       go to state 130
    cmp_binary_exp       go to state 131
    eq_binary_exp        go to state 132
    and_binary_exp       go to state 133
    xor_binary_exp       go to state 134
    or_binary_exp        go to state 135
    type_spec            go to state 136
    mod_prefix_tid       go to state 55
    tuple_type_spec      go to state 56
    array_type_spec      go to state 57
    struct_type_spec     go to state 58
    enum_type_spec       go to state 59
    fn_type_spec         go to state 137
    struct_exp_field     go to state 192
    struct_exp_field_cl  go to state 193


State 171

   75 if_exp: "if" bracketed_exp • bracketed_exp
   76       | "if" bracketed_exp • bracketed_exp "else" primary_exp

    "("  shift, and go to state 103
    "{"  shift, and go to state 170

    bracketed_exp  go to state 239
    paren_exp      go to state 113
    vtupleExpr     go to state 114
    vstructExpr    go to state 115
    chain_exp      go to state 120


State 172

   56 vtupleExpr: "(" ")" •

    $default  reduce using rule 56 (vtupleExpr)


State 173

   45 long_exp: expr •
   47 expr_cl2: expr • "," expr
   57 vtupleExpr: "(" expr • "," ")"

    ","  shift, and go to state 240

    $default  reduce using rule 45 (long_exp)


State 174

   55 paren_exp: "(" long_exp • ")"

    ")"  shift, and go to state 241


State 175

   48 expr_cl2: expr_cl2 • "," expr
   58 vtupleExpr: "(" expr_cl2 • ")"

    ","  shift, and go to state 242
    ")"  shift, and go to state 243


State 176

   29 const_stmt: "const" • lpattern "=" expr

    "val_id"  shift, and go to state 10
    "{"       shift, and go to state 244

    vid                    go to state 245
    lpattern_field         go to state 246
    destructured_lpattern  go to state 247
    lpattern               go to state 248


State 177

   30 val_stmt: "val" • lpattern "=" expr

    "val_id"  shift, and go to state 10
    "{"       shift, and go to state 244

    vid                    go to state 245
    lpattern_field         go to state 246
    destructured_lpattern  go to state 247
    lpattern               go to state 249


State 178

   31 var_stmt: "var" • lpattern "=" expr

    "val_id"  shift, and go to state 10
    "{"       shift, and go to state 244

    vid                    go to state 245
    lpattern_field         go to state 246
    destructured_lpattern  go to state 247
    lpattern               go to state 250


State 179

   32 set_stmt: "set" • expr "=" expr

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 48
    "if"                     shift, and go to state 94
    "fn"                     shift, and go to state 49
    "not"                    shift, and go to state 95
    "42"                     shift, and go to state 96
    "0x2a"                   shift, and go to state 97
    "42u"                    shift, and go to state 98
    "0x2Au"                  shift, and go to state 99
    "4.2"                    shift, and go to state 100
    "\"dq-string-literal\""  shift, and go to state 101
    "'sq-string-literal'"    shift, and go to state 102
    "("                      shift, and go to state 103
    "["                      shift, and go to state 50
    "{"                      shift, and go to state 104
    "+"                      shift, and go to state 105
    "-"                      shift, and go to state 106

    tid               go to state 52
    vid               go to state 107
    floatl            go to state 108
    mod_prefix        go to state 109
    expr              go to state 251
    bracketed_exp     go to state 112
    paren_exp         go to state 113
    vtupleExpr        go to state 114
    vstructExpr       go to state 115
    primary_exp       go to state 116
    int_expr          go to state 117
    stringls          go to state 118
    if_exp            go to state 119
    chain_exp         go to state 120
    postfix_exp       go to state 122
    vcall_exp         go to state 123
    dot_name_exp      go to state 124
    dot_index_exp     go to state 125
    unary_exp         go to state 126
    unary_op          go to state 127
    binary_exp        go to state 128
    mul_binary_exp    go to state 129
    add_binary_exp    go to state 130
    cmp_binary_exp    go to state 131
    eq_binary_exp     go to state 132
    and_binary_exp    go to state 133
    xor_binary_exp    go to state 134
    or_binary_exp     go to state 135
    type_spec         go to state 136
    mod_prefix_tid    go to state 55
    tuple_type_spec   go to state 56
    array_type_spec   go to state 57
    struct_type_spec  go to state 58
    enum_type_spec    go to state 59
    fn_type_spec      go to state 60


State 180

   33 discard_stmt: "discard" • expr

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 48
    "if"                     shift, and go to state 94
    "fn"                     shift, and go to state 49
    "not"                    shift, and go to state 95
    "42"                     shift, and go to state 96
    "0x2a"                   shift, and go to state 97
    "42u"                    shift, and go to state 98
    "0x2Au"                  shift, and go to state 99
    "4.2"                    shift, and go to state 100
    "\"dq-string-literal\""  shift, and go to state 101
    "'sq-string-literal'"    shift, and go to state 102
    "("                      shift, and go to state 103
    "["                      shift, and go to state 50
    "{"                      shift, and go to state 104
    "+"                      shift, and go to state 105
    "-"                      shift, and go to state 106

    tid               go to state 52
    vid               go to state 107
    floatl            go to state 108
    mod_prefix        go to state 109
    expr              go to state 252
    bracketed_exp     go to state 112
    paren_exp         go to state 113
    vtupleExpr        go to state 114
    vstructExpr       go to state 115
    primary_exp       go to state 116
    int_expr          go to state 117
    stringls          go to state 118
    if_exp            go to state 119
    chain_exp         go to state 120
    postfix_exp       go to state 122
    vcall_exp         go to state 123
    dot_name_exp      go to state 124
    dot_index_exp     go to state 125
    unary_exp         go to state 126
    unary_op          go to state 127
    binary_exp        go to state 128
    mul_binary_exp    go to state 129
    add_binary_exp    go to state 130
    cmp_binary_exp    go to state 131
    eq_binary_exp     go to state 132
    and_binary_exp    go to state 133
    xor_binary_exp    go to state 134
    or_binary_exp     go to state 135
    type_spec         go to state 136
    mod_prefix_tid    go to state 55
    tuple_type_spec   go to state 56
    array_type_spec   go to state 57
    struct_type_spec  go to state 58
    enum_type_spec    go to state 59
    fn_type_spec      go to state 60


State 181

   77 chain_exp: "{" "}" •

    $default  reduce using rule 77 (chain_exp)


State 182

   81 chain_prefix: chain_prefix_stmt • ";"

    ";"  shift, and go to state 253


State 183

   24 chain_prefix_stmt: const_stmt •

    $default  reduce using rule 24 (chain_prefix_stmt)


State 184

   25 chain_prefix_stmt: val_stmt •

    $default  reduce using rule 25 (chain_prefix_stmt)


State 185

   26 chain_prefix_stmt: var_stmt •

    $default  reduce using rule 26 (chain_prefix_stmt)


State 186

   27 chain_prefix_stmt: set_stmt •

    $default  reduce using rule 27 (chain_prefix_stmt)


State 187

   28 chain_prefix_stmt: discard_stmt •

    $default  reduce using rule 28 (chain_prefix_stmt)


State 188

   40 mod_prefix: vid • "::"
   41           | vid • "[" targ_cl "]" "::"
   61 primary_exp: vid •
  146 struct_type_spec_field: vid • type_spec
  168 struct_exp_field: vid • "=" expr

    "val_id"  shift, and go to state 10
    "TypeId"  shift, and go to state 22
    "enum"    shift, and go to state 48
    "fn"      shift, and go to state 49
    "::"      shift, and go to state 76
    "["       shift, and go to state 162
    "{"       shift, and go to state 51
    "="       shift, and go to state 254

    $default  reduce using rule 61 (primary_exp)

    tid               go to state 52
    vid               go to state 41
    mod_prefix        go to state 53
    type_spec         go to state 163
    mod_prefix_tid    go to state 55
    tuple_type_spec   go to state 56
    array_type_spec   go to state 57
    struct_type_spec  go to state 58
    enum_type_spec    go to state 59
    fn_type_spec      go to state 60


State 189

   78 chain_exp: "{" long_exp • "}"

    "}"  shift, and go to state 255


State 190

   79 chain_exp: "{" chain_prefix • "}"
   80          | "{" chain_prefix • long_exp "}"
   82 chain_prefix: chain_prefix • chain_prefix_stmt ";"

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 48
    "if"                     shift, and go to state 94
    "const"                  shift, and go to state 176
    "val"                    shift, and go to state 177
    "var"                    shift, and go to state 178
    "set"                    shift, and go to state 179
    "fn"                     shift, and go to state 49
    "not"                    shift, and go to state 95
    "discard"                shift, and go to state 180
    "42"                     shift, and go to state 96
    "0x2a"                   shift, and go to state 97
    "42u"                    shift, and go to state 98
    "0x2Au"                  shift, and go to state 99
    "4.2"                    shift, and go to state 100
    "\"dq-string-literal\""  shift, and go to state 101
    "'sq-string-literal'"    shift, and go to state 102
    "("                      shift, and go to state 103
    "["                      shift, and go to state 50
    "{"                      shift, and go to state 104
    "}"                      shift, and go to state 256
    "+"                      shift, and go to state 105
    "-"                      shift, and go to state 106

    chain_prefix_stmt  go to state 257
    const_stmt         go to state 183
    val_stmt           go to state 184
    var_stmt           go to state 185
    set_stmt           go to state 186
    discard_stmt       go to state 187
    tid                go to state 52
    vid                go to state 107
    floatl             go to state 108
    mod_prefix         go to state 109
    expr               go to state 110
    long_exp           go to state 258
    bracketed_exp      go to state 112
    paren_exp          go to state 113
    vtupleExpr         go to state 114
    vstructExpr        go to state 115
    primary_exp        go to state 116
    int_expr           go to state 117
    stringls           go to state 118
    if_exp             go to state 119
    chain_exp          go to state 120
    lambda_exp         go to state 121
    postfix_exp        go to state 122
    vcall_exp          go to state 123
    dot_name_exp       go to state 124
    dot_index_exp      go to state 125
    unary_exp          go to state 126
    unary_op           go to state 127
    binary_exp         go to state 128
    mul_binary_exp     go to state 129
    add_binary_exp     go to state 130
    cmp_binary_exp     go to state 131
    eq_binary_exp      go to state 132
    and_binary_exp     go to state 133
    xor_binary_exp     go to state 134
    or_binary_exp      go to state 135
    type_spec          go to state 136
    mod_prefix_tid     go to state 55
    tuple_type_spec    go to state 56
    array_type_spec    go to state 57
    struct_type_spec   go to state 58
    enum_type_spec     go to state 59
    fn_type_spec       go to state 137


State 191

   91 dot_name_exp: type_spec • "::" "TypeId"
   92             | type_spec • "::" "TypeId" "using" paren_exp
  130 type_spec_cl2: type_spec • "," type_spec
  140 tuple_type_spec: "{" type_spec • "}"

    ","   shift, and go to state 166
    "::"  shift, and go to state 218
    "}"   shift, and go to state 167


State 192

  188 struct_exp_field_cl: struct_exp_field •

    $default  reduce using rule 188 (struct_exp_field_cl)


State 193

   59 vstructExpr: "{" struct_exp_field_cl • "}"
  189 struct_exp_field_cl: struct_exp_field_cl • "," struct_exp_field

    ","  shift, and go to state 259
    "}"  shift, and go to state 260


State 194

   42 mod_prefix: mod_prefix vid • "::"
   43           | mod_prefix vid • "[" targ_cl "]" "::"
   66 primary_exp: mod_prefix vid •

    "::"  shift, and go to state 149
    "["   shift, and go to state 150

    $default  reduce using rule 66 (primary_exp)


State 195

   74 stringls: stringls "\"dq-string-literal\"" •

    $default  reduce using rule 74 (stringls)


State 196

   73 stringls: stringls "'sq-string-literal'" •

    $default  reduce using rule 73 (stringls)


State 197

   90 dot_name_exp: postfix_exp "." • "val_id"
   93 dot_index_exp: postfix_exp "." • int_expr
   94              | postfix_exp "." • bracketed_exp

    "val_id"  shift, and go to state 261
    "42"      shift, and go to state 96
    "0x2a"    shift, and go to state 97
    "42u"     shift, and go to state 98
    "0x2Au"   shift, and go to state 99
    "("       shift, and go to state 103
    "{"       shift, and go to state 170

    bracketed_exp  go to state 262
    paren_exp      go to state 113
    vtupleExpr     go to state 114
    vstructExpr    go to state 115
    int_expr       go to state 263
    chain_exp      go to state 120


State 198

   88 vcall_exp: postfix_exp "(" • ")"
   89          | postfix_exp "(" • varg_cl ")"

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 48
    "if"                     shift, and go to state 94
    "fn"                     shift, and go to state 49
    "not"                    shift, and go to state 95
    "out"                    shift, and go to state 264
    "inout"                  shift, and go to state 265
    "42"                     shift, and go to state 96
    "0x2a"                   shift, and go to state 97
    "42u"                    shift, and go to state 98
    "0x2Au"                  shift, and go to state 99
    "4.2"                    shift, and go to state 100
    "\"dq-string-literal\""  shift, and go to state 101
    "'sq-string-literal'"    shift, and go to state 102
    "("                      shift, and go to state 103
    ")"                      shift, and go to state 266
    "["                      shift, and go to state 50
    "{"                      shift, and go to state 104
    "+"                      shift, and go to state 105
    "-"                      shift, and go to state 106

    tid               go to state 52
    vid               go to state 107
    floatl            go to state 108
    mod_prefix        go to state 109
    expr              go to state 267
    bracketed_exp     go to state 112
    paren_exp         go to state 113
    vtupleExpr        go to state 114
    vstructExpr       go to state 115
    primary_exp       go to state 116
    int_expr          go to state 117
    stringls          go to state 118
    if_exp            go to state 119
    chain_exp         go to state 120
    postfix_exp       go to state 122
    vcall_exp         go to state 123
    dot_name_exp      go to state 124
    dot_index_exp     go to state 125
    unary_exp         go to state 126
    unary_op          go to state 127
    binary_exp        go to state 128
    mul_binary_exp    go to state 129
    add_binary_exp    go to state 130
    cmp_binary_exp    go to state 131
    eq_binary_exp     go to state 132
    and_binary_exp    go to state 133
    xor_binary_exp    go to state 134
    or_binary_exp     go to state 135
    type_spec         go to state 136
    mod_prefix_tid    go to state 55
    tuple_type_spec   go to state 56
    array_type_spec   go to state 57
    struct_type_spec  go to state 58
    enum_type_spec    go to state 59
    fn_type_spec      go to state 60
    varg              go to state 268
    varg_cl           go to state 269


State 199

   96 unary_exp: unary_op unary_exp •

    $default  reduce using rule 96 (unary_exp)


State 200

  101 mul_binary_op: "*" •

    $default  reduce using rule 101 (mul_binary_op)


State 201

  102 mul_binary_op: "/" •

    $default  reduce using rule 102 (mul_binary_op)


State 202

  103 mul_binary_op: "%" •

    $default  reduce using rule 103 (mul_binary_op)


State 203

  105 mul_binary_exp: mul_binary_exp mul_binary_op • unary_exp

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 48
    "if"                     shift, and go to state 94
    "fn"                     shift, and go to state 49
    "not"                    shift, and go to state 95
    "42"                     shift, and go to state 96
    "0x2a"                   shift, and go to state 97
    "42u"                    shift, and go to state 98
    "0x2Au"                  shift, and go to state 99
    "4.2"                    shift, and go to state 100
    "\"dq-string-literal\""  shift, and go to state 101
    "'sq-string-literal'"    shift, and go to state 102
    "("                      shift, and go to state 103
    "["                      shift, and go to state 50
    "{"                      shift, and go to state 104
    "+"                      shift, and go to state 105
    "-"                      shift, and go to state 106

    tid               go to state 52
    vid               go to state 107
    floatl            go to state 108
    mod_prefix        go to state 109
    bracketed_exp     go to state 112
    paren_exp         go to state 113
    vtupleExpr        go to state 114
    vstructExpr       go to state 115
    primary_exp       go to state 116
    int_expr          go to state 117
    stringls          go to state 118
    if_exp            go to state 119
    chain_exp         go to state 120
    postfix_exp       go to state 122
    vcall_exp         go to state 123
    dot_name_exp      go to state 124
    dot_index_exp     go to state 125
    unary_exp         go to state 270
    unary_op          go to state 127
    type_spec         go to state 136
    mod_prefix_tid    go to state 55
    tuple_type_spec   go to state 56
    array_type_spec   go to state 57
    struct_type_spec  go to state 58
    enum_type_spec    go to state 59
    fn_type_spec      go to state 60


State 204

  106 add_binary_op: "+" •

    $default  reduce using rule 106 (add_binary_op)


State 205

  107 add_binary_op: "-" •

    $default  reduce using rule 107 (add_binary_op)


State 206

  109 add_binary_exp: add_binary_exp add_binary_op • mul_binary_exp

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 48
    "if"                     shift, and go to state 94
    "fn"                     shift, and go to state 49
    "not"                    shift, and go to state 95
    "42"                     shift, and go to state 96
    "0x2a"                   shift, and go to state 97
    "42u"                    shift, and go to state 98
    "0x2Au"                  shift, and go to state 99
    "4.2"                    shift, and go to state 100
    "\"dq-string-literal\""  shift, and go to state 101
    "'sq-string-literal'"    shift, and go to state 102
    "("                      shift, and go to state 103
    "["                      shift, and go to state 50
    "{"                      shift, and go to state 104
    "+"                      shift, and go to state 105
    "-"                      shift, and go to state 106

    tid               go to state 52
    vid               go to state 107
    floatl            go to state 108
    mod_prefix        go to state 109
    bracketed_exp     go to state 112
    paren_exp         go to state 113
    vtupleExpr        go to state 114
    vstructExpr       go to state 115
    primary_exp       go to state 116
    int_expr          go to state 117
    stringls          go to state 118
    if_exp            go to state 119
    chain_exp         go to state 120
    postfix_exp       go to state 122
    vcall_exp         go to state 123
    dot_name_exp      go to state 124
    dot_index_exp     go to state 125
    unary_exp         go to state 126
    unary_op          go to state 127
    mul_binary_exp    go to state 271
    type_spec         go to state 136
    mod_prefix_tid    go to state 55
    tuple_type_spec   go to state 56
    array_type_spec   go to state 57
    struct_type_spec  go to state 58
    enum_type_spec    go to state 59
    fn_type_spec      go to state 60


State 207

  110 cmp_binary_op: "<" •

    $default  reduce using rule 110 (cmp_binary_op)


State 208

  111 cmp_binary_op: "<=" •

    $default  reduce using rule 111 (cmp_binary_op)


State 209

  112 cmp_binary_op: ">" •

    $default  reduce using rule 112 (cmp_binary_op)


State 210

  113 cmp_binary_op: ">=" •

    $default  reduce using rule 113 (cmp_binary_op)


State 211

  115 cmp_binary_exp: cmp_binary_exp cmp_binary_op • add_binary_exp

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 48
    "if"                     shift, and go to state 94
    "fn"                     shift, and go to state 49
    "not"                    shift, and go to state 95
    "42"                     shift, and go to state 96
    "0x2a"                   shift, and go to state 97
    "42u"                    shift, and go to state 98
    "0x2Au"                  shift, and go to state 99
    "4.2"                    shift, and go to state 100
    "\"dq-string-literal\""  shift, and go to state 101
    "'sq-string-literal'"    shift, and go to state 102
    "("                      shift, and go to state 103
    "["                      shift, and go to state 50
    "{"                      shift, and go to state 104
    "+"                      shift, and go to state 105
    "-"                      shift, and go to state 106

    tid               go to state 52
    vid               go to state 107
    floatl            go to state 108
    mod_prefix        go to state 109
    bracketed_exp     go to state 112
    paren_exp         go to state 113
    vtupleExpr        go to state 114
    vstructExpr       go to state 115
    primary_exp       go to state 116
    int_expr          go to state 117
    stringls          go to state 118
    if_exp            go to state 119
    chain_exp         go to state 120
    postfix_exp       go to state 122
    vcall_exp         go to state 123
    dot_name_exp      go to state 124
    dot_index_exp     go to state 125
    unary_exp         go to state 126
    unary_op          go to state 127
    mul_binary_exp    go to state 129
    add_binary_exp    go to state 272
    type_spec         go to state 136
    mod_prefix_tid    go to state 55
    tuple_type_spec   go to state 56
    array_type_spec   go to state 57
    struct_type_spec  go to state 58
    enum_type_spec    go to state 59
    fn_type_spec      go to state 60


State 212

  116 eq_binary_op: "==" •

    $default  reduce using rule 116 (eq_binary_op)


State 213

  117 eq_binary_op: "!=" •

    $default  reduce using rule 117 (eq_binary_op)


State 214

  119 eq_binary_exp: eq_binary_exp eq_binary_op • cmp_binary_exp

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 48
    "if"                     shift, and go to state 94
    "fn"                     shift, and go to state 49
    "not"                    shift, and go to state 95
    "42"                     shift, and go to state 96
    "0x2a"                   shift, and go to state 97
    "42u"                    shift, and go to state 98
    "0x2Au"                  shift, and go to state 99
    "4.2"                    shift, and go to state 100
    "\"dq-string-literal\""  shift, and go to state 101
    "'sq-string-literal'"    shift, and go to state 102
    "("                      shift, and go to state 103
    "["                      shift, and go to state 50
    "{"                      shift, and go to state 104
    "+"                      shift, and go to state 105
    "-"                      shift, and go to state 106

    tid               go to state 52
    vid               go to state 107
    floatl            go to state 108
    mod_prefix        go to state 109
    bracketed_exp     go to state 112
    paren_exp         go to state 113
    vtupleExpr        go to state 114
    vstructExpr       go to state 115
    primary_exp       go to state 116
    int_expr          go to state 117
    stringls          go to state 118
    if_exp            go to state 119
    chain_exp         go to state 120
    postfix_exp       go to state 122
    vcall_exp         go to state 123
    dot_name_exp      go to state 124
    dot_index_exp     go to state 125
    unary_exp         go to state 126
    unary_op          go to state 127
    mul_binary_exp    go to state 129
    add_binary_exp    go to state 130
    cmp_binary_exp    go to state 273
    type_spec         go to state 136
    mod_prefix_tid    go to state 55
    tuple_type_spec   go to state 56
    array_type_spec   go to state 57
    struct_type_spec  go to state 58
    enum_type_spec    go to state 59
    fn_type_spec      go to state 60


State 215

  121 and_binary_exp: and_binary_exp "and" • eq_binary_exp

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 48
    "if"                     shift, and go to state 94
    "fn"                     shift, and go to state 49
    "not"                    shift, and go to state 95
    "42"                     shift, and go to state 96
    "0x2a"                   shift, and go to state 97
    "42u"                    shift, and go to state 98
    "0x2Au"                  shift, and go to state 99
    "4.2"                    shift, and go to state 100
    "\"dq-string-literal\""  shift, and go to state 101
    "'sq-string-literal'"    shift, and go to state 102
    "("                      shift, and go to state 103
    "["                      shift, and go to state 50
    "{"                      shift, and go to state 104
    "+"                      shift, and go to state 105
    "-"                      shift, and go to state 106

    tid               go to state 52
    vid               go to state 107
    floatl            go to state 108
    mod_prefix        go to state 109
    bracketed_exp     go to state 112
    paren_exp         go to state 113
    vtupleExpr        go to state 114
    vstructExpr       go to state 115
    primary_exp       go to state 116
    int_expr          go to state 117
    stringls          go to state 118
    if_exp            go to state 119
    chain_exp         go to state 120
    postfix_exp       go to state 122
    vcall_exp         go to state 123
    dot_name_exp      go to state 124
    dot_index_exp     go to state 125
    unary_exp         go to state 126
    unary_op          go to state 127
    mul_binary_exp    go to state 129
    add_binary_exp    go to state 130
    cmp_binary_exp    go to state 131
    eq_binary_exp     go to state 274
    type_spec         go to state 136
    mod_prefix_tid    go to state 55
    tuple_type_spec   go to state 56
    array_type_spec   go to state 57
    struct_type_spec  go to state 58
    enum_type_spec    go to state 59
    fn_type_spec      go to state 60


State 216

  123 xor_binary_exp: xor_binary_exp "xor" • and_binary_exp

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 48
    "if"                     shift, and go to state 94
    "fn"                     shift, and go to state 49
    "not"                    shift, and go to state 95
    "42"                     shift, and go to state 96
    "0x2a"                   shift, and go to state 97
    "42u"                    shift, and go to state 98
    "0x2Au"                  shift, and go to state 99
    "4.2"                    shift, and go to state 100
    "\"dq-string-literal\""  shift, and go to state 101
    "'sq-string-literal'"    shift, and go to state 102
    "("                      shift, and go to state 103
    "["                      shift, and go to state 50
    "{"                      shift, and go to state 104
    "+"                      shift, and go to state 105
    "-"                      shift, and go to state 106

    tid               go to state 52
    vid               go to state 107
    floatl            go to state 108
    mod_prefix        go to state 109
    bracketed_exp     go to state 112
    paren_exp         go to state 113
    vtupleExpr        go to state 114
    vstructExpr       go to state 115
    primary_exp       go to state 116
    int_expr          go to state 117
    stringls          go to state 118
    if_exp            go to state 119
    chain_exp         go to state 120
    postfix_exp       go to state 122
    vcall_exp         go to state 123
    dot_name_exp      go to state 124
    dot_index_exp     go to state 125
    unary_exp         go to state 126
    unary_op          go to state 127
    mul_binary_exp    go to state 129
    add_binary_exp    go to state 130
    cmp_binary_exp    go to state 131
    eq_binary_exp     go to state 132
    and_binary_exp    go to state 275
    type_spec         go to state 136
    mod_prefix_tid    go to state 55
    tuple_type_spec   go to state 56
    array_type_spec   go to state 57
    struct_type_spec  go to state 58
    enum_type_spec    go to state 59
    fn_type_spec      go to state 60


State 217

  125 or_binary_exp: or_binary_exp "or" • xor_binary_exp

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 48
    "if"                     shift, and go to state 94
    "fn"                     shift, and go to state 49
    "not"                    shift, and go to state 95
    "42"                     shift, and go to state 96
    "0x2a"                   shift, and go to state 97
    "42u"                    shift, and go to state 98
    "0x2Au"                  shift, and go to state 99
    "4.2"                    shift, and go to state 100
    "\"dq-string-literal\""  shift, and go to state 101
    "'sq-string-literal'"    shift, and go to state 102
    "("                      shift, and go to state 103
    "["                      shift, and go to state 50
    "{"                      shift, and go to state 104
    "+"                      shift, and go to state 105
    "-"                      shift, and go to state 106

    tid               go to state 52
    vid               go to state 107
    floatl            go to state 108
    mod_prefix        go to state 109
    bracketed_exp     go to state 112
    paren_exp         go to state 113
    vtupleExpr        go to state 114
    vstructExpr       go to state 115
    primary_exp       go to state 116
    int_expr          go to state 117
    stringls          go to state 118
    if_exp            go to state 119
    chain_exp         go to state 120
    postfix_exp       go to state 122
    vcall_exp         go to state 123
    dot_name_exp      go to state 124
    dot_index_exp     go to state 125
    unary_exp         go to state 126
    unary_op          go to state 127
    mul_binary_exp    go to state 129
    add_binary_exp    go to state 130
    cmp_binary_exp    go to state 131
    eq_binary_exp     go to state 132
    and_binary_exp    go to state 133
    xor_binary_exp    go to state 276
    type_spec         go to state 136
    mod_prefix_tid    go to state 55
    tuple_type_spec   go to state 56
    array_type_spec   go to state 57
    struct_type_spec  go to state 58
    enum_type_spec    go to state 59
    fn_type_spec      go to state 60


State 218

   91 dot_name_exp: type_spec "::" • "TypeId"
   92             | type_spec "::" • "TypeId" "using" paren_exp

    "TypeId"  shift, and go to state 277


State 219

   83 lambda_exp: fn_type_spec bracketed_exp •

    $default  reduce using rule 83 (lambda_exp)


State 220

  167 class_exp_class_spec: "typeclass" "(" tid class_spec • ")" "{" type_query_exp_sl0 "}"

    ")"  shift, and go to state 278


State 221

  156 targ_cl: targ_cl "," • targ

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 48
    "if"                     shift, and go to state 94
    "fn"                     shift, and go to state 49
    "not"                    shift, and go to state 95
    "42"                     shift, and go to state 96
    "0x2a"                   shift, and go to state 97
    "42u"                    shift, and go to state 98
    "0x2Au"                  shift, and go to state 99
    "4.2"                    shift, and go to state 100
    "\"dq-string-literal\""  shift, and go to state 101
    "'sq-string-literal'"    shift, and go to state 102
    "("                      shift, and go to state 103
    "["                      shift, and go to state 50
    "{"                      shift, and go to state 104
    "+"                      shift, and go to state 105
    "-"                      shift, and go to state 106

    tid               go to state 52
    vid               go to state 107
    floatl            go to state 108
    mod_prefix        go to state 109
    expr              go to state 145
    bracketed_exp     go to state 112
    paren_exp         go to state 113
    vtupleExpr        go to state 114
    vstructExpr       go to state 115
    primary_exp       go to state 116
    int_expr          go to state 117
    stringls          go to state 118
    if_exp            go to state 119
    chain_exp         go to state 120
    postfix_exp       go to state 122
    vcall_exp         go to state 123
    dot_name_exp      go to state 124
    dot_index_exp     go to state 125
    unary_exp         go to state 126
    unary_op          go to state 127
    binary_exp        go to state 128
    mul_binary_exp    go to state 129
    add_binary_exp    go to state 130
    cmp_binary_exp    go to state 131
    eq_binary_exp     go to state 132
    and_binary_exp    go to state 133
    xor_binary_exp    go to state 134
    or_binary_exp     go to state 135
    type_spec         go to state 146
    mod_prefix_tid    go to state 55
    tuple_type_spec   go to state 56
    array_type_spec   go to state 57
    struct_type_spec  go to state 58
    enum_type_spec    go to state 59
    fn_type_spec      go to state 60
    targ              go to state 279


State 222

   41 mod_prefix: vid "[" targ_cl "]" • "::"

    "::"  shift, and go to state 280


State 223

   43 mod_prefix: mod_prefix vid "[" targ_cl • "]" "::"
  156 targ_cl: targ_cl • "," targ

    ","  shift, and go to state 221
    "]"  shift, and go to state 281


State 224

  148 enum_type_spec_field: tid type_spec •

    $default  reduce using rule 148 (enum_type_spec_field)


State 225

  150 enum_type_spec_field_cl: enum_type_spec_field_cl "," • enum_type_spec_field

    "TypeId"  shift, and go to state 22

    tid                   go to state 151
    enum_type_spec_field  go to state 282


State 226

  151 enum_type_spec: "enum" "{" enum_type_spec_field_cl "}" •

    $default  reduce using rule 151 (enum_type_spec)


State 227

  170 vpattern_field: "out" vid • type_spec

    "val_id"  shift, and go to state 10
    "TypeId"  shift, and go to state 22
    "enum"    shift, and go to state 48
    "fn"      shift, and go to state 49
    "["       shift, and go to state 50
    "{"       shift, and go to state 51

    tid               go to state 52
    vid               go to state 41
    mod_prefix        go to state 53
    type_spec         go to state 283
    mod_prefix_tid    go to state 55
    tuple_type_spec   go to state 56
    array_type_spec   go to state 57
    struct_type_spec  go to state 58
    enum_type_spec    go to state 59
    fn_type_spec      go to state 60


State 228

  171 vpattern_field: "inout" vid • type_spec

    "val_id"  shift, and go to state 10
    "TypeId"  shift, and go to state 22
    "enum"    shift, and go to state 48
    "fn"      shift, and go to state 49
    "["       shift, and go to state 50
    "{"       shift, and go to state 51

    tid               go to state 52
    vid               go to state 41
    mod_prefix        go to state 53
    type_spec         go to state 284
    mod_prefix_tid    go to state 55
    tuple_type_spec   go to state 56
    array_type_spec   go to state 57
    struct_type_spec  go to state 58
    enum_type_spec    go to state 59
    fn_type_spec      go to state 60


State 229

  169 vpattern_field: vid type_spec •

    $default  reduce using rule 169 (vpattern_field)


State 230

  183 vpattern_field_cl: vpattern_field_cl "," • vpattern_field

    "val_id"  shift, and go to state 10
    "out"     shift, and go to state 154
    "inout"   shift, and go to state 155

    vid             go to state 157
    vpattern_field  go to state 285


State 231

  179 vpattern: "(" vpattern_field_cl ")" •

    $default  reduce using rule 179 (vpattern)


State 232

  142 array_type_spec: "[" type_spec "*" expr • "]"

    "]"  shift, and go to state 286


State 233

   91 dot_name_exp: type_spec • "::" "TypeId"
   92             | type_spec • "::" "TypeId" "using" paren_exp
  142 array_type_spec: "[" type_spec • "*" expr "]"
  153 targ: type_spec •

    "::"  shift, and go to state 218
    "*"   shift, and go to state 161

    $default  reduce using rule 153 (targ)


State 234

  131 type_spec_cl2: type_spec_cl2 "," type_spec •

    $default  reduce using rule 131 (type_spec_cl2)


State 235

  130 type_spec_cl2: type_spec "," type_spec •

    $default  reduce using rule 130 (type_spec_cl2)


State 236

  146 struct_type_spec_field: vid • type_spec

    "val_id"  shift, and go to state 10
    "TypeId"  shift, and go to state 22
    "enum"    shift, and go to state 48
    "fn"      shift, and go to state 49
    "["       shift, and go to state 50
    "{"       shift, and go to state 51

    tid               go to state 52
    vid               go to state 41
    mod_prefix        go to state 53
    type_spec         go to state 163
    mod_prefix_tid    go to state 55
    tuple_type_spec   go to state 56
    array_type_spec   go to state 57
    struct_type_spec  go to state 58
    enum_type_spec    go to state 59
    fn_type_spec      go to state 60


State 237

  145 struct_type_spec_field_cl: struct_type_spec_field_cl "," struct_type_spec_field •

    $default  reduce using rule 145 (struct_type_spec_field_cl)


State 238

   40 mod_prefix: vid • "::"
   41           | vid • "[" targ_cl "]" "::"
   61 primary_exp: vid •
  168 struct_exp_field: vid • "=" expr

    "::"  shift, and go to state 76
    "["   shift, and go to state 77
    "="   shift, and go to state 254

    $default  reduce using rule 61 (primary_exp)


State 239

   75 if_exp: "if" bracketed_exp bracketed_exp •
   76       | "if" bracketed_exp bracketed_exp • "else" primary_exp

    "else"  shift, and go to state 287

    $default  reduce using rule 75 (if_exp)


State 240

   47 expr_cl2: expr "," • expr
   57 vtupleExpr: "(" expr "," • ")"

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 48
    "if"                     shift, and go to state 94
    "fn"                     shift, and go to state 49
    "not"                    shift, and go to state 95
    "42"                     shift, and go to state 96
    "0x2a"                   shift, and go to state 97
    "42u"                    shift, and go to state 98
    "0x2Au"                  shift, and go to state 99
    "4.2"                    shift, and go to state 100
    "\"dq-string-literal\""  shift, and go to state 101
    "'sq-string-literal'"    shift, and go to state 102
    "("                      shift, and go to state 103
    ")"                      shift, and go to state 288
    "["                      shift, and go to state 50
    "{"                      shift, and go to state 104
    "+"                      shift, and go to state 105
    "-"                      shift, and go to state 106

    tid               go to state 52
    vid               go to state 107
    floatl            go to state 108
    mod_prefix        go to state 109
    expr              go to state 289
    bracketed_exp     go to state 112
    paren_exp         go to state 113
    vtupleExpr        go to state 114
    vstructExpr       go to state 115
    primary_exp       go to state 116
    int_expr          go to state 117
    stringls          go to state 118
    if_exp            go to state 119
    chain_exp         go to state 120
    postfix_exp       go to state 122
    vcall_exp         go to state 123
    dot_name_exp      go to state 124
    dot_index_exp     go to state 125
    unary_exp         go to state 126
    unary_op          go to state 127
    binary_exp        go to state 128
    mul_binary_exp    go to state 129
    add_binary_exp    go to state 130
    cmp_binary_exp    go to state 131
    eq_binary_exp     go to state 132
    and_binary_exp    go to state 133
    xor_binary_exp    go to state 134
    or_binary_exp     go to state 135
    type_spec         go to state 136
    mod_prefix_tid    go to state 55
    tuple_type_spec   go to state 56
    array_type_spec   go to state 57
    struct_type_spec  go to state 58
    enum_type_spec    go to state 59
    fn_type_spec      go to state 60


State 241

   55 paren_exp: "(" long_exp ")" •

    $default  reduce using rule 55 (paren_exp)


State 242

   48 expr_cl2: expr_cl2 "," • expr

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 48
    "if"                     shift, and go to state 94
    "fn"                     shift, and go to state 49
    "not"                    shift, and go to state 95
    "42"                     shift, and go to state 96
    "0x2a"                   shift, and go to state 97
    "42u"                    shift, and go to state 98
    "0x2Au"                  shift, and go to state 99
    "4.2"                    shift, and go to state 100
    "\"dq-string-literal\""  shift, and go to state 101
    "'sq-string-literal'"    shift, and go to state 102
    "("                      shift, and go to state 103
    "["                      shift, and go to state 50
    "{"                      shift, and go to state 104
    "+"                      shift, and go to state 105
    "-"                      shift, and go to state 106

    tid               go to state 52
    vid               go to state 107
    floatl            go to state 108
    mod_prefix        go to state 109
    expr              go to state 290
    bracketed_exp     go to state 112
    paren_exp         go to state 113
    vtupleExpr        go to state 114
    vstructExpr       go to state 115
    primary_exp       go to state 116
    int_expr          go to state 117
    stringls          go to state 118
    if_exp            go to state 119
    chain_exp         go to state 120
    postfix_exp       go to state 122
    vcall_exp         go to state 123
    dot_name_exp      go to state 124
    dot_index_exp     go to state 125
    unary_exp         go to state 126
    unary_op          go to state 127
    binary_exp        go to state 128
    mul_binary_exp    go to state 129
    add_binary_exp    go to state 130
    cmp_binary_exp    go to state 131
    eq_binary_exp     go to state 132
    and_binary_exp    go to state 133
    xor_binary_exp    go to state 134
    or_binary_exp     go to state 135
    type_spec         go to state 136
    mod_prefix_tid    go to state 55
    tuple_type_spec   go to state 56
    array_type_spec   go to state 57
    struct_type_spec  go to state 58
    enum_type_spec    go to state 59
    fn_type_spec      go to state 60


State 243

   58 vtupleExpr: "(" expr_cl2 ")" •

    $default  reduce using rule 58 (vtupleExpr)


State 244

  176 destructured_lpattern: "{" • lpattern_field_cl "}"

    "val_id"  shift, and go to state 10

    vid                go to state 245
    lpattern_field     go to state 291
    lpattern_field_cl  go to state 292


State 245

  172 lpattern_field: vid • type_spec
  173               | vid •

    "val_id"  shift, and go to state 10
    "TypeId"  shift, and go to state 22
    "enum"    shift, and go to state 48
    "fn"      shift, and go to state 49
    "["       shift, and go to state 50
    "{"       shift, and go to state 51

    $default  reduce using rule 173 (lpattern_field)

    tid               go to state 52
    vid               go to state 41
    mod_prefix        go to state 53
    type_spec         go to state 293
    mod_prefix_tid    go to state 55
    tuple_type_spec   go to state 56
    array_type_spec   go to state 57
    struct_type_spec  go to state 58
    enum_type_spec    go to state 59
    fn_type_spec      go to state 60


State 246

  177 lpattern: lpattern_field •

    $default  reduce using rule 177 (lpattern)


State 247

  178 lpattern: destructured_lpattern •

    $default  reduce using rule 178 (lpattern)


State 248

   29 const_stmt: "const" lpattern • "=" expr

    "="  shift, and go to state 294


State 249

   30 val_stmt: "val" lpattern • "=" expr

    "="  shift, and go to state 295


State 250

   31 var_stmt: "var" lpattern • "=" expr

    "="  shift, and go to state 296


State 251

   32 set_stmt: "set" expr • "=" expr

    "="  shift, and go to state 297


State 252

   33 discard_stmt: "discard" expr •

    $default  reduce using rule 33 (discard_stmt)


State 253

   81 chain_prefix: chain_prefix_stmt ";" •

    $default  reduce using rule 81 (chain_prefix)


State 254

  168 struct_exp_field: vid "=" • expr

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 48
    "if"                     shift, and go to state 94
    "fn"                     shift, and go to state 49
    "not"                    shift, and go to state 95
    "42"                     shift, and go to state 96
    "0x2a"                   shift, and go to state 97
    "42u"                    shift, and go to state 98
    "0x2Au"                  shift, and go to state 99
    "4.2"                    shift, and go to state 100
    "\"dq-string-literal\""  shift, and go to state 101
    "'sq-string-literal'"    shift, and go to state 102
    "("                      shift, and go to state 103
    "["                      shift, and go to state 50
    "{"                      shift, and go to state 104
    "+"                      shift, and go to state 105
    "-"                      shift, and go to state 106

    tid               go to state 52
    vid               go to state 107
    floatl            go to state 108
    mod_prefix        go to state 109
    expr              go to state 298
    bracketed_exp     go to state 112
    paren_exp         go to state 113
    vtupleExpr        go to state 114
    vstructExpr       go to state 115
    primary_exp       go to state 116
    int_expr          go to state 117
    stringls          go to state 118
    if_exp            go to state 119
    chain_exp         go to state 120
    postfix_exp       go to state 122
    vcall_exp         go to state 123
    dot_name_exp      go to state 124
    dot_index_exp     go to state 125
    unary_exp         go to state 126
    unary_op          go to state 127
    binary_exp        go to state 128
    mul_binary_exp    go to state 129
    add_binary_exp    go to state 130
    cmp_binary_exp    go to state 131
    eq_binary_exp     go to state 132
    and_binary_exp    go to state 133
    xor_binary_exp    go to state 134
    or_binary_exp     go to state 135
    type_spec         go to state 136
    mod_prefix_tid    go to state 55
    tuple_type_spec   go to state 56
    array_type_spec   go to state 57
    struct_type_spec  go to state 58
    enum_type_spec    go to state 59
    fn_type_spec      go to state 60


State 255

   78 chain_exp: "{" long_exp "}" •

    $default  reduce using rule 78 (chain_exp)


State 256

   79 chain_exp: "{" chain_prefix "}" •

    $default  reduce using rule 79 (chain_exp)


State 257

   82 chain_prefix: chain_prefix chain_prefix_stmt • ";"

    ";"  shift, and go to state 299


State 258

   80 chain_exp: "{" chain_prefix long_exp • "}"

    "}"  shift, and go to state 300


State 259

  189 struct_exp_field_cl: struct_exp_field_cl "," • struct_exp_field

    "val_id"  shift, and go to state 10

    vid               go to state 301
    struct_exp_field  go to state 302


State 260

   59 vstructExpr: "{" struct_exp_field_cl "}" •

    $default  reduce using rule 59 (vstructExpr)


State 261

   90 dot_name_exp: postfix_exp "." "val_id" •

    $default  reduce using rule 90 (dot_name_exp)


State 262

   94 dot_index_exp: postfix_exp "." bracketed_exp •

    $default  reduce using rule 94 (dot_index_exp)


State 263

   93 dot_index_exp: postfix_exp "." int_expr •

    $default  reduce using rule 93 (dot_index_exp)


State 264

  158 varg: "out" • expr

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 48
    "if"                     shift, and go to state 94
    "fn"                     shift, and go to state 49
    "not"                    shift, and go to state 95
    "42"                     shift, and go to state 96
    "0x2a"                   shift, and go to state 97
    "42u"                    shift, and go to state 98
    "0x2Au"                  shift, and go to state 99
    "4.2"                    shift, and go to state 100
    "\"dq-string-literal\""  shift, and go to state 101
    "'sq-string-literal'"    shift, and go to state 102
    "("                      shift, and go to state 103
    "["                      shift, and go to state 50
    "{"                      shift, and go to state 104
    "+"                      shift, and go to state 105
    "-"                      shift, and go to state 106

    tid               go to state 52
    vid               go to state 107
    floatl            go to state 108
    mod_prefix        go to state 109
    expr              go to state 303
    bracketed_exp     go to state 112
    paren_exp         go to state 113
    vtupleExpr        go to state 114
    vstructExpr       go to state 115
    primary_exp       go to state 116
    int_expr          go to state 117
    stringls          go to state 118
    if_exp            go to state 119
    chain_exp         go to state 120
    postfix_exp       go to state 122
    vcall_exp         go to state 123
    dot_name_exp      go to state 124
    dot_index_exp     go to state 125
    unary_exp         go to state 126
    unary_op          go to state 127
    binary_exp        go to state 128
    mul_binary_exp    go to state 129
    add_binary_exp    go to state 130
    cmp_binary_exp    go to state 131
    eq_binary_exp     go to state 132
    and_binary_exp    go to state 133
    xor_binary_exp    go to state 134
    or_binary_exp     go to state 135
    type_spec         go to state 136
    mod_prefix_tid    go to state 55
    tuple_type_spec   go to state 56
    array_type_spec   go to state 57
    struct_type_spec  go to state 58
    enum_type_spec    go to state 59
    fn_type_spec      go to state 60


State 265

  159 varg: "inout" • expr

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 48
    "if"                     shift, and go to state 94
    "fn"                     shift, and go to state 49
    "not"                    shift, and go to state 95
    "42"                     shift, and go to state 96
    "0x2a"                   shift, and go to state 97
    "42u"                    shift, and go to state 98
    "0x2Au"                  shift, and go to state 99
    "4.2"                    shift, and go to state 100
    "\"dq-string-literal\""  shift, and go to state 101
    "'sq-string-literal'"    shift, and go to state 102
    "("                      shift, and go to state 103
    "["                      shift, and go to state 50
    "{"                      shift, and go to state 104
    "+"                      shift, and go to state 105
    "-"                      shift, and go to state 106

    tid               go to state 52
    vid               go to state 107
    floatl            go to state 108
    mod_prefix        go to state 109
    expr              go to state 304
    bracketed_exp     go to state 112
    paren_exp         go to state 113
    vtupleExpr        go to state 114
    vstructExpr       go to state 115
    primary_exp       go to state 116
    int_expr          go to state 117
    stringls          go to state 118
    if_exp            go to state 119
    chain_exp         go to state 120
    postfix_exp       go to state 122
    vcall_exp         go to state 123
    dot_name_exp      go to state 124
    dot_index_exp     go to state 125
    unary_exp         go to state 126
    unary_op          go to state 127
    binary_exp        go to state 128
    mul_binary_exp    go to state 129
    add_binary_exp    go to state 130
    cmp_binary_exp    go to state 131
    eq_binary_exp     go to state 132
    and_binary_exp    go to state 133
    xor_binary_exp    go to state 134
    or_binary_exp     go to state 135
    type_spec         go to state 136
    mod_prefix_tid    go to state 55
    tuple_type_spec   go to state 56
    array_type_spec   go to state 57
    struct_type_spec  go to state 58
    enum_type_spec    go to state 59
    fn_type_spec      go to state 60


State 266

   88 vcall_exp: postfix_exp "(" ")" •

    $default  reduce using rule 88 (vcall_exp)


State 267

  157 varg: expr •

    $default  reduce using rule 157 (varg)


State 268

  160 varg_cl: varg •

    $default  reduce using rule 160 (varg_cl)


State 269

   89 vcall_exp: postfix_exp "(" varg_cl • ")"
  161 varg_cl: varg_cl • "," varg

    ","  shift, and go to state 305
    ")"  shift, and go to state 306


State 270

  105 mul_binary_exp: mul_binary_exp mul_binary_op unary_exp •

    $default  reduce using rule 105 (mul_binary_exp)


State 271

  105 mul_binary_exp: mul_binary_exp • mul_binary_op unary_exp
  109 add_binary_exp: add_binary_exp add_binary_op mul_binary_exp •

    "*"  shift, and go to state 200
    "/"  shift, and go to state 201
    "%"  shift, and go to state 202

    $default  reduce using rule 109 (add_binary_exp)

    mul_binary_op  go to state 203


State 272

  109 add_binary_exp: add_binary_exp • add_binary_op mul_binary_exp
  115 cmp_binary_exp: cmp_binary_exp cmp_binary_op add_binary_exp •

    "+"  shift, and go to state 204
    "-"  shift, and go to state 205

    $default  reduce using rule 115 (cmp_binary_exp)

    add_binary_op  go to state 206


State 273

  115 cmp_binary_exp: cmp_binary_exp • cmp_binary_op add_binary_exp
  119 eq_binary_exp: eq_binary_exp eq_binary_op cmp_binary_exp •

    "<"   shift, and go to state 207
    "<="  shift, and go to state 208
    ">"   shift, and go to state 209
    ">="  shift, and go to state 210

    $default  reduce using rule 119 (eq_binary_exp)

    cmp_binary_op  go to state 211


State 274

  119 eq_binary_exp: eq_binary_exp • eq_binary_op cmp_binary_exp
  121 and_binary_exp: and_binary_exp "and" eq_binary_exp •

    "=="  shift, and go to state 212
    "!="  shift, and go to state 213

    $default  reduce using rule 121 (and_binary_exp)

    eq_binary_op  go to state 214


State 275

  121 and_binary_exp: and_binary_exp • "and" eq_binary_exp
  123 xor_binary_exp: xor_binary_exp "xor" and_binary_exp •

    "and"  shift, and go to state 215

    $default  reduce using rule 123 (xor_binary_exp)


State 276

  123 xor_binary_exp: xor_binary_exp • "xor" and_binary_exp
  125 or_binary_exp: or_binary_exp "or" xor_binary_exp •

    "xor"  shift, and go to state 216

    $default  reduce using rule 125 (or_binary_exp)


State 277

   91 dot_name_exp: type_spec "::" "TypeId" •
   92             | type_spec "::" "TypeId" • "using" paren_exp

    "using"  shift, and go to state 307

    $default  reduce using rule 91 (dot_name_exp)


State 278

  167 class_exp_class_spec: "typeclass" "(" tid class_spec ")" • "{" type_query_exp_sl0 "}"

    "{"  shift, and go to state 308


State 279

  156 targ_cl: targ_cl "," targ •

    $default  reduce using rule 156 (targ_cl)


State 280

   41 mod_prefix: vid "[" targ_cl "]" "::" •

    $default  reduce using rule 41 (mod_prefix)


State 281

   43 mod_prefix: mod_prefix vid "[" targ_cl "]" • "::"

    "::"  shift, and go to state 309


State 282

  150 enum_type_spec_field_cl: enum_type_spec_field_cl "," enum_type_spec_field •

    $default  reduce using rule 150 (enum_type_spec_field_cl)


State 283

  170 vpattern_field: "out" vid type_spec •

    $default  reduce using rule 170 (vpattern_field)


State 284

  171 vpattern_field: "inout" vid type_spec •

    $default  reduce using rule 171 (vpattern_field)


State 285

  183 vpattern_field_cl: vpattern_field_cl "," vpattern_field •

    $default  reduce using rule 183 (vpattern_field_cl)


State 286

  142 array_type_spec: "[" type_spec "*" expr "]" •

    $default  reduce using rule 142 (array_type_spec)


State 287

   76 if_exp: "if" bracketed_exp bracketed_exp "else" • primary_exp

    "val_id"                 shift, and go to state 10
    "if"                     shift, and go to state 94
    "42"                     shift, and go to state 96
    "0x2a"                   shift, and go to state 97
    "42u"                    shift, and go to state 98
    "0x2Au"                  shift, and go to state 99
    "4.2"                    shift, and go to state 100
    "\"dq-string-literal\""  shift, and go to state 101
    "'sq-string-literal'"    shift, and go to state 102
    "("                      shift, and go to state 103
    "{"                      shift, and go to state 170

    vid            go to state 107
    floatl         go to state 108
    mod_prefix     go to state 310
    bracketed_exp  go to state 112
    paren_exp      go to state 113
    vtupleExpr     go to state 114
    vstructExpr    go to state 115
    primary_exp    go to state 311
    int_expr       go to state 117
    stringls       go to state 118
    if_exp         go to state 119
    chain_exp      go to state 120


State 288

   57 vtupleExpr: "(" expr "," ")" •

    $default  reduce using rule 57 (vtupleExpr)


State 289

   47 expr_cl2: expr "," expr •

    $default  reduce using rule 47 (expr_cl2)


State 290

   48 expr_cl2: expr_cl2 "," expr •

    $default  reduce using rule 48 (expr_cl2)


State 291

  184 lpattern_field_cl: lpattern_field •

    $default  reduce using rule 184 (lpattern_field_cl)


State 292

  176 destructured_lpattern: "{" lpattern_field_cl • "}"
  185 lpattern_field_cl: lpattern_field_cl • "," lpattern_field

    ","  shift, and go to state 312
    "}"  shift, and go to state 313


State 293

  172 lpattern_field: vid type_spec •

    $default  reduce using rule 172 (lpattern_field)


State 294

   29 const_stmt: "const" lpattern "=" • expr

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 48
    "if"                     shift, and go to state 94
    "fn"                     shift, and go to state 49
    "not"                    shift, and go to state 95
    "42"                     shift, and go to state 96
    "0x2a"                   shift, and go to state 97
    "42u"                    shift, and go to state 98
    "0x2Au"                  shift, and go to state 99
    "4.2"                    shift, and go to state 100
    "\"dq-string-literal\""  shift, and go to state 101
    "'sq-string-literal'"    shift, and go to state 102
    "("                      shift, and go to state 103
    "["                      shift, and go to state 50
    "{"                      shift, and go to state 104
    "+"                      shift, and go to state 105
    "-"                      shift, and go to state 106

    tid               go to state 52
    vid               go to state 107
    floatl            go to state 108
    mod_prefix        go to state 109
    expr              go to state 314
    bracketed_exp     go to state 112
    paren_exp         go to state 113
    vtupleExpr        go to state 114
    vstructExpr       go to state 115
    primary_exp       go to state 116
    int_expr          go to state 117
    stringls          go to state 118
    if_exp            go to state 119
    chain_exp         go to state 120
    postfix_exp       go to state 122
    vcall_exp         go to state 123
    dot_name_exp      go to state 124
    dot_index_exp     go to state 125
    unary_exp         go to state 126
    unary_op          go to state 127
    binary_exp        go to state 128
    mul_binary_exp    go to state 129
    add_binary_exp    go to state 130
    cmp_binary_exp    go to state 131
    eq_binary_exp     go to state 132
    and_binary_exp    go to state 133
    xor_binary_exp    go to state 134
    or_binary_exp     go to state 135
    type_spec         go to state 136
    mod_prefix_tid    go to state 55
    tuple_type_spec   go to state 56
    array_type_spec   go to state 57
    struct_type_spec  go to state 58
    enum_type_spec    go to state 59
    fn_type_spec      go to state 60


State 295

   30 val_stmt: "val" lpattern "=" • expr

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 48
    "if"                     shift, and go to state 94
    "fn"                     shift, and go to state 49
    "not"                    shift, and go to state 95
    "42"                     shift, and go to state 96
    "0x2a"                   shift, and go to state 97
    "42u"                    shift, and go to state 98
    "0x2Au"                  shift, and go to state 99
    "4.2"                    shift, and go to state 100
    "\"dq-string-literal\""  shift, and go to state 101
    "'sq-string-literal'"    shift, and go to state 102
    "("                      shift, and go to state 103
    "["                      shift, and go to state 50
    "{"                      shift, and go to state 104
    "+"                      shift, and go to state 105
    "-"                      shift, and go to state 106

    tid               go to state 52
    vid               go to state 107
    floatl            go to state 108
    mod_prefix        go to state 109
    expr              go to state 315
    bracketed_exp     go to state 112
    paren_exp         go to state 113
    vtupleExpr        go to state 114
    vstructExpr       go to state 115
    primary_exp       go to state 116
    int_expr          go to state 117
    stringls          go to state 118
    if_exp            go to state 119
    chain_exp         go to state 120
    postfix_exp       go to state 122
    vcall_exp         go to state 123
    dot_name_exp      go to state 124
    dot_index_exp     go to state 125
    unary_exp         go to state 126
    unary_op          go to state 127
    binary_exp        go to state 128
    mul_binary_exp    go to state 129
    add_binary_exp    go to state 130
    cmp_binary_exp    go to state 131
    eq_binary_exp     go to state 132
    and_binary_exp    go to state 133
    xor_binary_exp    go to state 134
    or_binary_exp     go to state 135
    type_spec         go to state 136
    mod_prefix_tid    go to state 55
    tuple_type_spec   go to state 56
    array_type_spec   go to state 57
    struct_type_spec  go to state 58
    enum_type_spec    go to state 59
    fn_type_spec      go to state 60


State 296

   31 var_stmt: "var" lpattern "=" • expr

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 48
    "if"                     shift, and go to state 94
    "fn"                     shift, and go to state 49
    "not"                    shift, and go to state 95
    "42"                     shift, and go to state 96
    "0x2a"                   shift, and go to state 97
    "42u"                    shift, and go to state 98
    "0x2Au"                  shift, and go to state 99
    "4.2"                    shift, and go to state 100
    "\"dq-string-literal\""  shift, and go to state 101
    "'sq-string-literal'"    shift, and go to state 102
    "("                      shift, and go to state 103
    "["                      shift, and go to state 50
    "{"                      shift, and go to state 104
    "+"                      shift, and go to state 105
    "-"                      shift, and go to state 106

    tid               go to state 52
    vid               go to state 107
    floatl            go to state 108
    mod_prefix        go to state 109
    expr              go to state 316
    bracketed_exp     go to state 112
    paren_exp         go to state 113
    vtupleExpr        go to state 114
    vstructExpr       go to state 115
    primary_exp       go to state 116
    int_expr          go to state 117
    stringls          go to state 118
    if_exp            go to state 119
    chain_exp         go to state 120
    postfix_exp       go to state 122
    vcall_exp         go to state 123
    dot_name_exp      go to state 124
    dot_index_exp     go to state 125
    unary_exp         go to state 126
    unary_op          go to state 127
    binary_exp        go to state 128
    mul_binary_exp    go to state 129
    add_binary_exp    go to state 130
    cmp_binary_exp    go to state 131
    eq_binary_exp     go to state 132
    and_binary_exp    go to state 133
    xor_binary_exp    go to state 134
    or_binary_exp     go to state 135
    type_spec         go to state 136
    mod_prefix_tid    go to state 55
    tuple_type_spec   go to state 56
    array_type_spec   go to state 57
    struct_type_spec  go to state 58
    enum_type_spec    go to state 59
    fn_type_spec      go to state 60


State 297

   32 set_stmt: "set" expr "=" • expr

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 48
    "if"                     shift, and go to state 94
    "fn"                     shift, and go to state 49
    "not"                    shift, and go to state 95
    "42"                     shift, and go to state 96
    "0x2a"                   shift, and go to state 97
    "42u"                    shift, and go to state 98
    "0x2Au"                  shift, and go to state 99
    "4.2"                    shift, and go to state 100
    "\"dq-string-literal\""  shift, and go to state 101
    "'sq-string-literal'"    shift, and go to state 102
    "("                      shift, and go to state 103
    "["                      shift, and go to state 50
    "{"                      shift, and go to state 104
    "+"                      shift, and go to state 105
    "-"                      shift, and go to state 106

    tid               go to state 52
    vid               go to state 107
    floatl            go to state 108
    mod_prefix        go to state 109
    expr              go to state 317
    bracketed_exp     go to state 112
    paren_exp         go to state 113
    vtupleExpr        go to state 114
    vstructExpr       go to state 115
    primary_exp       go to state 116
    int_expr          go to state 117
    stringls          go to state 118
    if_exp            go to state 119
    chain_exp         go to state 120
    postfix_exp       go to state 122
    vcall_exp         go to state 123
    dot_name_exp      go to state 124
    dot_index_exp     go to state 125
    unary_exp         go to state 126
    unary_op          go to state 127
    binary_exp        go to state 128
    mul_binary_exp    go to state 129
    add_binary_exp    go to state 130
    cmp_binary_exp    go to state 131
    eq_binary_exp     go to state 132
    and_binary_exp    go to state 133
    xor_binary_exp    go to state 134
    or_binary_exp     go to state 135
    type_spec         go to state 136
    mod_prefix_tid    go to state 55
    tuple_type_spec   go to state 56
    array_type_spec   go to state 57
    struct_type_spec  go to state 58
    enum_type_spec    go to state 59
    fn_type_spec      go to state 60


State 298

  168 struct_exp_field: vid "=" expr •

    $default  reduce using rule 168 (struct_exp_field)


State 299

   82 chain_prefix: chain_prefix chain_prefix_stmt ";" •

    $default  reduce using rule 82 (chain_prefix)


State 300

   80 chain_exp: "{" chain_prefix long_exp "}" •

    $default  reduce using rule 80 (chain_exp)


State 301

  168 struct_exp_field: vid • "=" expr

    "="  shift, and go to state 254


State 302

  189 struct_exp_field_cl: struct_exp_field_cl "," struct_exp_field •

    $default  reduce using rule 189 (struct_exp_field_cl)


State 303

  158 varg: "out" expr •

    $default  reduce using rule 158 (varg)


State 304

  159 varg: "inout" expr •

    $default  reduce using rule 159 (varg)


State 305

  161 varg_cl: varg_cl "," • varg

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 48
    "if"                     shift, and go to state 94
    "fn"                     shift, and go to state 49
    "not"                    shift, and go to state 95
    "out"                    shift, and go to state 264
    "inout"                  shift, and go to state 265
    "42"                     shift, and go to state 96
    "0x2a"                   shift, and go to state 97
    "42u"                    shift, and go to state 98
    "0x2Au"                  shift, and go to state 99
    "4.2"                    shift, and go to state 100
    "\"dq-string-literal\""  shift, and go to state 101
    "'sq-string-literal'"    shift, and go to state 102
    "("                      shift, and go to state 103
    "["                      shift, and go to state 50
    "{"                      shift, and go to state 104
    "+"                      shift, and go to state 105
    "-"                      shift, and go to state 106

    tid               go to state 52
    vid               go to state 107
    floatl            go to state 108
    mod_prefix        go to state 109
    expr              go to state 267
    bracketed_exp     go to state 112
    paren_exp         go to state 113
    vtupleExpr        go to state 114
    vstructExpr       go to state 115
    primary_exp       go to state 116
    int_expr          go to state 117
    stringls          go to state 118
    if_exp            go to state 119
    chain_exp         go to state 120
    postfix_exp       go to state 122
    vcall_exp         go to state 123
    dot_name_exp      go to state 124
    dot_index_exp     go to state 125
    unary_exp         go to state 126
    unary_op          go to state 127
    binary_exp        go to state 128
    mul_binary_exp    go to state 129
    add_binary_exp    go to state 130
    cmp_binary_exp    go to state 131
    eq_binary_exp     go to state 132
    and_binary_exp    go to state 133
    xor_binary_exp    go to state 134
    or_binary_exp     go to state 135
    type_spec         go to state 136
    mod_prefix_tid    go to state 55
    tuple_type_spec   go to state 56
    array_type_spec   go to state 57
    struct_type_spec  go to state 58
    enum_type_spec    go to state 59
    fn_type_spec      go to state 60
    varg              go to state 318


State 306

   89 vcall_exp: postfix_exp "(" varg_cl ")" •

    $default  reduce using rule 89 (vcall_exp)


State 307

   92 dot_name_exp: type_spec "::" "TypeId" "using" • paren_exp

    "("  shift, and go to state 319

    paren_exp  go to state 320


State 308

  167 class_exp_class_spec: "typeclass" "(" tid class_spec ")" "{" • type_query_exp_sl0 "}"

    $default  reduce using rule 49 (type_query_exp_sl0)

    type_query_exp_sl0  go to state 321


State 309

   43 mod_prefix: mod_prefix vid "[" targ_cl "]" "::" •

    $default  reduce using rule 43 (mod_prefix)


State 310

   42 mod_prefix: mod_prefix • vid "::"
   43           | mod_prefix • vid "[" targ_cl "]" "::"
   66 primary_exp: mod_prefix • vid

    "val_id"  shift, and go to state 10

    vid  go to state 194


State 311

   76 if_exp: "if" bracketed_exp bracketed_exp "else" primary_exp •

    $default  reduce using rule 76 (if_exp)


State 312

  185 lpattern_field_cl: lpattern_field_cl "," • lpattern_field

    "val_id"  shift, and go to state 10

    vid             go to state 245
    lpattern_field  go to state 322


State 313

  176 destructured_lpattern: "{" lpattern_field_cl "}" •

    $default  reduce using rule 176 (destructured_lpattern)


State 314

   29 const_stmt: "const" lpattern "=" expr •

    $default  reduce using rule 29 (const_stmt)


State 315

   30 val_stmt: "val" lpattern "=" expr •

    $default  reduce using rule 30 (val_stmt)


State 316

   31 var_stmt: "var" lpattern "=" expr •

    $default  reduce using rule 31 (var_stmt)


State 317

   32 set_stmt: "set" expr "=" expr •

    $default  reduce using rule 32 (set_stmt)


State 318

  161 varg_cl: varg_cl "," varg •

    $default  reduce using rule 161 (varg_cl)


State 319

   55 paren_exp: "(" • long_exp ")"

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 48
    "if"                     shift, and go to state 94
    "fn"                     shift, and go to state 49
    "not"                    shift, and go to state 95
    "42"                     shift, and go to state 96
    "0x2a"                   shift, and go to state 97
    "42u"                    shift, and go to state 98
    "0x2Au"                  shift, and go to state 99
    "4.2"                    shift, and go to state 100
    "\"dq-string-literal\""  shift, and go to state 101
    "'sq-string-literal'"    shift, and go to state 102
    "("                      shift, and go to state 103
    "["                      shift, and go to state 50
    "{"                      shift, and go to state 104
    "+"                      shift, and go to state 105
    "-"                      shift, and go to state 106

    tid               go to state 52
    vid               go to state 107
    floatl            go to state 108
    mod_prefix        go to state 109
    expr              go to state 110
    long_exp          go to state 174
    bracketed_exp     go to state 112
    paren_exp         go to state 113
    vtupleExpr        go to state 114
    vstructExpr       go to state 115
    primary_exp       go to state 116
    int_expr          go to state 117
    stringls          go to state 118
    if_exp            go to state 119
    chain_exp         go to state 120
    lambda_exp        go to state 121
    postfix_exp       go to state 122
    vcall_exp         go to state 123
    dot_name_exp      go to state 124
    dot_index_exp     go to state 125
    unary_exp         go to state 126
    unary_op          go to state 127
    binary_exp        go to state 128
    mul_binary_exp    go to state 129
    add_binary_exp    go to state 130
    cmp_binary_exp    go to state 131
    eq_binary_exp     go to state 132
    and_binary_exp    go to state 133
    xor_binary_exp    go to state 134
    or_binary_exp     go to state 135
    type_spec         go to state 136
    mod_prefix_tid    go to state 55
    tuple_type_spec   go to state 56
    array_type_spec   go to state 57
    struct_type_spec  go to state 58
    enum_type_spec    go to state 59
    fn_type_spec      go to state 137


State 320

   92 dot_name_exp: type_spec "::" "TypeId" "using" paren_exp •

    $default  reduce using rule 92 (dot_name_exp)


State 321

   50 type_query_exp_sl0: type_query_exp_sl0 • type_query_exp ";"
  167 class_exp_class_spec: "typeclass" "(" tid class_spec ")" "{" type_query_exp_sl0 • "}"

    "val_id"  shift, and go to state 10
    "TypeId"  shift, and go to state 22
    "enum"    shift, and go to state 48
    "fn"      shift, and go to state 49
    "["       shift, and go to state 50
    "{"       shift, and go to state 51
    "}"       shift, and go to state 323

    tid               go to state 52
    vid               go to state 41
    mod_prefix        go to state 53
    type_query_exp    go to state 324
    type_spec         go to state 325
    mod_prefix_tid    go to state 55
    tuple_type_spec   go to state 56
    array_type_spec   go to state 57
    struct_type_spec  go to state 58
    enum_type_spec    go to state 59
    fn_type_spec      go to state 60


State 322

  185 lpattern_field_cl: lpattern_field_cl "," lpattern_field •

    $default  reduce using rule 185 (lpattern_field_cl)


State 323

  167 class_exp_class_spec: "typeclass" "(" tid class_spec ")" "{" type_query_exp_sl0 "}" •

    $default  reduce using rule 167 (class_exp_class_spec)


State 324

   50 type_query_exp_sl0: type_query_exp_sl0 type_query_exp • ";"

    ";"  shift, and go to state 326


State 325

  126 type_query_exp: type_spec • type_query_op type_spec

    "=="  shift, and go to state 327
    ":<"  shift, and go to state 328
    ">:"  shift, and go to state 329

    type_query_op  go to state 330


State 326

   50 type_query_exp_sl0: type_query_exp_sl0 type_query_exp ";" •

    $default  reduce using rule 50 (type_query_exp_sl0)


State 327

  129 type_query_op: "==" •

    $default  reduce using rule 129 (type_query_op)


State 328

  127 type_query_op: ":<" •

    $default  reduce using rule 127 (type_query_op)


State 329

  128 type_query_op: ">:" •

    $default  reduce using rule 128 (type_query_op)


State 330

  126 type_query_exp: type_spec type_query_op • type_spec

    "val_id"  shift, and go to state 10
    "TypeId"  shift, and go to state 22
    "enum"    shift, and go to state 48
    "fn"      shift, and go to state 49
    "["       shift, and go to state 50
    "{"       shift, and go to state 51

    tid               go to state 52
    vid               go to state 41
    mod_prefix        go to state 53
    type_spec         go to state 331
    mod_prefix_tid    go to state 55
    tuple_type_spec   go to state 56
    array_type_spec   go to state 57
    struct_type_spec  go to state 58
    enum_type_spec    go to state 59
    fn_type_spec      go to state 60


State 331

  126 type_query_exp: type_spec type_query_op type_spec •

    $default  reduce using rule 126 (type_query_exp)
