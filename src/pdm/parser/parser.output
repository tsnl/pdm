Terminals unused in grammar

    "<__42__>"
    "match"
    "with"
    ":"
    "&"
    "EOS"
    "<null>"


State 99 conflicts: 1 shift/reduce


Grammar

    0 $accept: script $end

    1 script: scriptContent

    2 scriptContent: scriptContentStmt ";"
    3              | scriptContent scriptContentStmt ";"

    4 scriptContentStmt: mod_stmt
    5                  | import_stmt
    6                  | extern_stmt

    7 mod_stmt: "mod" "<val_id>" "{" moduleContent "}"

    8 moduleContent: moduleContentStmt ";"
    9              | moduleContent moduleContentStmt ";"

   10 chain_prefix_stmt: const_stmt
   11                  | val_stmt
   12                  | var_stmt
   13                  | set_stmt
   14                  | discard_stmt

   15 const_stmt: "const" lpattern_naked "=" expr

   16 val_stmt: "val" lpattern_naked "=" expr

   17 var_stmt: "var" lpattern_naked "=" expr

   18 set_stmt: "set" expr "=" expr

   19 discard_stmt: "discard" expr

   20 moduleContentStmt: fn_stmt
   21                  | type_stmt
   22                  | enum_stmt
   23                  | typeclass_stmt
   24                  | import_stmt
   25                  | mod_stmt
   26                  | using_stmt
   27                  | extern_stmt

   28 fn_stmt: "fn" vid vpattern "->" typespec "=" bracketed_exp
   29        | "fn" vid tpattern_seq vpattern "->" typespec "=" bracketed_exp
   30        | "fn" vid vpattern "=" bracketed_exp
   31        | "fn" vid tpattern_seq vpattern "=" bracketed_exp

   32 type_stmt: "type" tid "=" long_typespec
   33          | "type" tid tpattern_seq "=" long_typespec

   34 enum_stmt: "enum" tid enum_field_pl

   35 enum_field_pl: "|" unprefixed_enum_field_pl
   36              | unprefixed_enum_field_pl

   37 unprefixed_enum_field_pl: enum_field
   38                         | unprefixed_enum_field_pl "|" enum_field

   39 enum_field: tid
   40           | tid "(" ")"
   41           | tid "(" typespec_cl1 ")"

   42 typeclass_stmt: "typeclass" tid "<" tid typespec ">" "=" "{" type_query_exp_sl "}"
   43               | "typeclass" tid "<" tid typespec ">" tpattern_seq "=" "{" type_query_exp_sl "}"

   44 using_stmt: "using" vid "." "*"
   45           | "using" vid "." vid "*"

   46 import_stmt: "import" vid "from" stringl "type" stringl

   47 extern_stmt: "extern" vid "from" expr

   48 tid: "<TypeId>"

   49 vid: "<val_id>"

   50 floatl: "4.2"

   51 stringl: "'sq-string-literal'"
   52        | "\"dq-string-literal\""

   53 expr: binary_exp

   54 long_exp: type_query_exp
   55         | expr

   56 expr_cl2: expr "," expr
   57         | expr_cl2 "," expr

   58 type_query_exp_sl: type_query_exp ";"
   59                  | type_query_exp_sl type_query_exp ";"

   60 bracketed_exp: unit_exp
   61              | paren_exp
   62              | vtupleExpr
   63              | vstructExpr
   64              | chain_exp

   65 unit_exp: "(" ")"
   66         | "{" "}"

   67 paren_exp: "(" long_exp ")"

   68 vtupleExpr: "(" expr "," ")"
   69           | "(" expr_cl2 ")"

   70 vstructExpr: "{" struct_exp_field_cl "}"

   71 primary_exp: bracketed_exp
   72            | vid
   73            | int_expr
   74            | floatl
   75            | stringls
   76            | if_exp
   77            | lambda_exp

   78 int_expr: "42"
   79         | "0x2a"

   80 stringls: "'sq-string-literal'"
   81         | "\"dq-string-literal\""
   82         | stringls "'sq-string-literal'"
   83         | stringls "\"dq-string-literal\""

   84 if_exp: "if" bracketed_exp "then" bracketed_exp
   85       | "if" bracketed_exp "then" bracketed_exp "else" primary_exp

   86 chain_exp: "{" expr "}"
   87          | "{" chain_prefix "}"
   88          | "{" chain_prefix expr "}"

   89 chain_prefix: chain_prefix_stmt ";"
   90             | chain_prefix chain_prefix_stmt ";"

   91 lambda_exp: "fn" vpattern "=" bracketed_exp

   92 postfix_exp: primary_exp
   93            | tcall_exp
   94            | vcall_exp
   95            | dot_name_exp
   96            | dot_index_exp

   97 tcall_exp: postfix_exp "[" targ_cl "]"

   98 vcall_exp: postfix_exp "(" ")"
   99          | postfix_exp "(" varg_cl ")"

  100 dot_name_exp: postfix_exp "." "<val_id>"
  101             | postfix_exp "." "<TypeId>"

  102 dot_index_exp: postfix_exp "." int_expr
  103              | postfix_exp "." bracketed_exp

  104 unary_exp: postfix_exp
  105          | unary_op unary_exp

  106 unary_op: "+"
  107         | "-"
  108         | "*"
  109         | "^"
  110         | "not"

  111 binary_exp: or_binary_exp

  112 mul_binary_op: "*"
  113              | "/"
  114              | "%"

  115 mul_binary_exp: unary_exp
  116               | mul_binary_exp mul_binary_op unary_exp

  117 add_binary_op: "+"
  118              | "-"

  119 add_binary_exp: mul_binary_exp
  120               | add_binary_exp add_binary_op mul_binary_exp

  121 cmp_binary_op: "<"
  122              | "<="
  123              | ">"
  124              | ">="

  125 cmp_binary_exp: add_binary_exp
  126               | cmp_binary_exp cmp_binary_op add_binary_exp

  127 eq_binary_op: "=="
  128             | "!="

  129 eq_binary_exp: cmp_binary_exp
  130              | eq_binary_exp eq_binary_op cmp_binary_exp

  131 and_binary_exp: eq_binary_exp
  132               | and_binary_exp "and" eq_binary_exp

  133 xor_binary_exp: and_binary_exp
  134               | xor_binary_exp "xor" and_binary_exp

  135 or_binary_exp: xor_binary_exp
  136              | or_binary_exp "or" xor_binary_exp

  137 type_query_exp: typespec type_query_op typespec

  138 type_query_op: ":<"
  139              | ">:"
  140              | "::"

  141 typespec: unary_typespec

  142 typespec_cl1: typespec
  143             | typespec_cl1 "," typespec

  144 typespec_cl2: typespec "," typespec
  145             | typespec_cl2 "," typespec

  146 struct_typespec_field: vid typespec

  147 struct_typespec_field_cl: struct_typespec_field
  148                         | struct_typespec_field_cl "," struct_typespec_field

  149 primary_typespec: tid
  150                 | paren_typespec
  151                 | tuple_typespec
  152                 | mod_prefix_tid
  153                 | fn_typespec

  154 paren_typespec: "(" typespec ")"

  155 tuple_typespec: "(" typespec "," ")"
  156               | "(" typespec_cl2 ")"

  157 mod_prefix_tid: mod_prefix tid

  158 mod_prefix: vid "."
  159           | mod_prefix vid "."

  160 fn_typespec: "Fn" vpattern primary_typespec

  161 postfix_typespec: primary_typespec
  162                 | tcall_typespec
  163                 | dot_typespec

  164 tcall_typespec: postfix_typespec "[" targ_cl "]"

  165 dot_typespec: postfix_typespec "." "<val_id>"

  166 unary_typespec: postfix_typespec

  167 long_typespec: unary_typespec
  168              | struct_typespec

  169 struct_typespec: "{" struct_typespec_field_cl "}"

  170 targ: typespec
  171     | expr

  172 targ_cl: targ
  173        | targ_cl "," targ

  174 varg: expr
  175     | "out" expr
  176     | "inout" expr

  177 varg_cl: varg
  178        | varg_cl "," varg

  179 struct_exp_field: vid "=" expr

  180 vpattern_field: vid typespec
  181               | "out" vid typespec
  182               | "inout" vid typespec

  183 lpattern_field: vid typespec
  184               | vid

  185 tpattern_field: vid typespec
  186               | tid typespec

  187 lpattern: "(" lpattern_field_cl ")"
  188         | "(" ")"

  189 lpattern_naked: lpattern_field
  190               | lpattern

  191 vpattern: "(" vpattern_field_cl ")"
  192         | "(" ")"

  193 tpattern: "[" tpattern_field_cl "]"
  194         | "!" "[" tpattern_field_cl "]"

  195 vpattern_field_cl: vpattern_field
  196                  | vpattern_field_cl "," vpattern_field

  197 lpattern_field_cl: lpattern_field
  198                  | lpattern_field_cl "," lpattern_field

  199 tpattern_field_cl: tpattern_field
  200                  | tpattern_field_cl "," tpattern_field

  201 struct_exp_field_cl: struct_exp_field
  202                    | struct_exp_field_cl "," struct_exp_field

  203 tpattern_seq: tpattern
  204             | tpattern_seq tpattern


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    "<val_id>" <TokenInfo> (258) 7 49 100 165
    "<TypeId>" <TokenInfo> (259) 48 101
    "<__42__>" <TokenInfo> (260)
    "using" (261) 44 45
    "mod" (262) 7
    "if" (263) 84 85
    "then" (264) 84 85
    "else" (265) 85
    "match" (266)
    "with" (267)
    "import" (268) 46
    "extern" (269) 47
    "from" (270) 46 47
    "const" (271) 15
    "val" (272) 16
    "var" (273) 17
    "set" (274) 18
    "fn" (275) 28 29 30 31 91
    "Fn" (276) 160
    "type" (277) 32 33 46
    "enum" (278) 34
    "and" (279) 132
    "xor" (280) 134
    "or" (281) 136
    "not" (282) 110
    "typeclass" (283) 42 43
    "out" (284) 175 181
    "inout" (285) 176 182
    "discard" (286) 19
    "42" <TokenInfo> (287) 78
    "0x2a" <TokenInfo> (288) 79
    "4.2" <TokenInfo> (289) 50
    "\"dq-string-literal\"" <TokenInfo> (290) 52 81 83
    "'sq-string-literal'" <TokenInfo> (291) 51 80 82
    "." (292) 44 45 100 101 102 103 158 159 165
    ":" (293)
    "," (294) 56 57 68 143 144 145 148 155 173 178 196 198 200 202
    ";" (295) 2 3 8 9 58 59 89 90
    "::" (296) 140
    "(" (297) 40 41 65 67 68 69 98 99 154 155 156 187 188 191 192
    ")" (298) 40 41 65 67 68 69 98 99 154 155 156 187 188 191 192
    "[" (299) 97 164 193 194
    "]" (300) 97 164 193 194
    "{" (301) 7 42 43 66 70 86 87 88 169
    "}" (302) 7 42 43 66 70 86 87 88 169
    "->" (303) 28 29
    "*" (304) 44 45 108 112
    "/" (305) 113
    "%" (306) 114
    "+" (307) 106 117
    "-" (308) 107 118
    "<" (309) 42 43 121
    "<=" (310) 122
    ">" (311) 42 43 123
    ">=" (312) 124
    "=" (313) 15 16 17 18 28 29 30 31 32 33 42 43 91 179
    "==" (314) 127
    "!=" (315) 128
    "^" (316) 109
    "&" (317)
    "!" (318) 194
    "|" (319) 35 38
    "EOS" (320)
    ":<" (321) 138
    ">:" (322) 139
    "<null>" (323)


Nonterminals, with rules where they appear

    $accept (69)
        on left: 0
    script <pdm::ast::Script*> (70)
        on left: 1
        on right: 0
    scriptContent <std::vector<pdm::ast::Stmt*>> (71)
        on left: 2 3
        on right: 1 3
    scriptContentStmt <pdm::ast::Stmt*> (72)
        on left: 4 5 6
        on right: 2 3
    mod_stmt <pdm::ast::Stmt*> (73)
        on left: 7
        on right: 4 25
    moduleContent <std::vector<pdm::ast::Stmt*>> (74)
        on left: 8 9
        on right: 7 9
    chain_prefix_stmt <pdm::ast::Stmt*> (75)
        on left: 10 11 12 13 14
        on right: 89 90
    const_stmt <pdm::ast::Stmt*> (76)
        on left: 15
        on right: 10
    val_stmt <pdm::ast::Stmt*> (77)
        on left: 16
        on right: 11
    var_stmt <pdm::ast::Stmt*> (78)
        on left: 17
        on right: 12
    set_stmt <pdm::ast::Stmt*> (79)
        on left: 18
        on right: 13
    discard_stmt <pdm::ast::Stmt*> (80)
        on left: 19
        on right: 14
    moduleContentStmt <pdm::ast::Stmt*> (81)
        on left: 20 21 22 23 24 25 26 27
        on right: 8 9
    fn_stmt <pdm::ast::Stmt*> (82)
        on left: 28 29 30 31
        on right: 20
    type_stmt <pdm::ast::Stmt*> (83)
        on left: 32 33
        on right: 21
    enum_stmt <pdm::ast::Stmt*> (84)
        on left: 34
        on right: 22
    enum_field_pl <std::vector<pdm::ast::EnumStmt::Field*>> (85)
        on left: 35 36
        on right: 34
    unprefixed_enum_field_pl <std::vector<pdm::ast::EnumStmt::Field*>> (86)
        on left: 37 38
        on right: 35 36 38
    enum_field <pdm::ast::EnumStmt::Field*> (87)
        on left: 39 40 41
        on right: 37 38
    typeclass_stmt <pdm::ast::Stmt*> (88)
        on left: 42 43
        on right: 23
    using_stmt <pdm::ast::Stmt*> (89)
        on left: 44 45
        on right: 26
    import_stmt <pdm::ast::Stmt*> (90)
        on left: 46
        on right: 5 24
    extern_stmt <pdm::ast::Stmt*> (91)
        on left: 47
        on right: 6 27
    tid <TokenInfo> (92)
        on left: 48
        on right: 32 33 34 39 40 41 42 43 149 157 186
    vid <TokenInfo> (93)
        on left: 49
        on right: 28 29 30 31 44 45 46 47 72 146 158 159 179 180 181 182 183 184 185
    floatl <TokenInfo> (94)
        on left: 50
        on right: 74
    stringl <TokenInfo> (95)
        on left: 51 52
        on right: 46
    expr <pdm::ast::Exp*> (96)
        on left: 53
        on right: 15 16 17 18 19 47 55 56 57 68 86 88 171 174 175 176 179
    long_exp <pdm::ast::Exp*> (97)
        on left: 54 55
        on right: 67
    expr_cl2 <std::vector<pdm::ast::Exp*>> (98)
        on left: 56 57
        on right: 57 69
    type_query_exp_sl <std::vector<pdm::ast::TypeQueryExp*>> (99)
        on left: 58 59
        on right: 42 43 59
    bracketed_exp <pdm::ast::Exp*> (100)
        on left: 60 61 62 63 64
        on right: 28 29 30 31 71 84 85 91 103
    unit_exp <pdm::ast::Exp*> (101)
        on left: 65 66
        on right: 60
    paren_exp <pdm::ast::Exp*> (102)
        on left: 67
        on right: 61
    vtupleExpr <pdm::ast::Exp*> (103)
        on left: 68 69
        on right: 62
    vstructExpr <pdm::ast::Exp*> (104)
        on left: 70
        on right: 63
    primary_exp <pdm::ast::Exp*> (105)
        on left: 71 72 73 74 75 76 77
        on right: 85 92
    int_expr <pdm::ast::Exp*> (106)
        on left: 78 79
        on right: 73 102
    stringls <std::vector<pdm::ast::StringExp::Piece>> (107)
        on left: 80 81 82 83
        on right: 75 82 83
    if_exp <pdm::ast::Exp*> (108)
        on left: 84 85
        on right: 76
    chain_exp <pdm::ast::Exp*> (109)
        on left: 86 87 88
        on right: 64
    chain_prefix <std::vector<pdm::ast::Stmt*>> (110)
        on left: 89 90
        on right: 87 88 90
    lambda_exp <pdm::ast::Exp*> (111)
        on left: 91
        on right: 77
    postfix_exp <pdm::ast::Exp*> (112)
        on left: 92 93 94 95 96
        on right: 97 98 99 100 101 102 103 104
    tcall_exp <pdm::ast::Exp*> (113)
        on left: 97
        on right: 93
    vcall_exp <pdm::ast::Exp*> (114)
        on left: 98 99
        on right: 94
    dot_name_exp <pdm::ast::Exp*> (115)
        on left: 100 101
        on right: 95
    dot_index_exp <pdm::ast::Exp*> (116)
        on left: 102 103
        on right: 96
    unary_exp <pdm::ast::Exp*> (117)
        on left: 104 105
        on right: 105 115 116
    unary_op <pdm::ast::UnaryOperator> (118)
        on left: 106 107 108 109 110
        on right: 105
    binary_exp <pdm::ast::Exp*> (119)
        on left: 111
        on right: 53
    mul_binary_op <pdm::ast::BinaryOperator> (120)
        on left: 112 113 114
        on right: 116
    mul_binary_exp <pdm::ast::Exp*> (121)
        on left: 115 116
        on right: 116 119 120
    add_binary_op <pdm::ast::BinaryOperator> (122)
        on left: 117 118
        on right: 120
    add_binary_exp <pdm::ast::Exp*> (123)
        on left: 119 120
        on right: 120 125 126
    cmp_binary_op <pdm::ast::BinaryOperator> (124)
        on left: 121 122 123 124
        on right: 126
    cmp_binary_exp <pdm::ast::Exp*> (125)
        on left: 125 126
        on right: 126 129 130
    eq_binary_op <pdm::ast::BinaryOperator> (126)
        on left: 127 128
        on right: 130
    eq_binary_exp <pdm::ast::Exp*> (127)
        on left: 129 130
        on right: 130 131 132
    and_binary_exp <pdm::ast::Exp*> (128)
        on left: 131 132
        on right: 132 133 134
    xor_binary_exp <pdm::ast::Exp*> (129)
        on left: 133 134
        on right: 134 135 136
    or_binary_exp <pdm::ast::Exp*> (130)
        on left: 135 136
        on right: 111 136
    type_query_exp <pdm::ast::TypeQueryExp*> (131)
        on left: 137
        on right: 54 58 59
    type_query_op <pdm::ast::TypeQueryKind> (132)
        on left: 138 139 140
        on right: 137
    typespec <pdm::ast::Typespec*> (133)
        on left: 141
        on right: 28 29 42 43 137 142 143 144 145 146 154 155 170 180 181 182 183 185 186
    typespec_cl1 <std::vector<pdm::ast::Typespec*>> (134)
        on left: 142 143
        on right: 41 143
    typespec_cl2 <std::vector<pdm::ast::Typespec*>> (135)
        on left: 144 145
        on right: 145 156
    struct_typespec_field <pdm::ast::StructTypespec::Field*> (136)
        on left: 146
        on right: 147 148
    struct_typespec_field_cl <std::vector<pdm::ast::StructTypespec::Field*>> (137)
        on left: 147 148
        on right: 148 169
    primary_typespec <pdm::ast::Typespec*> (138)
        on left: 149 150 151 152 153
        on right: 160 161
    paren_typespec <pdm::ast::Typespec*> (139)
        on left: 154
        on right: 150
    tuple_typespec <pdm::ast::Typespec*> (140)
        on left: 155 156
        on right: 151
    mod_prefix_tid <pdm::ast::Typespec*> (141)
        on left: 157
        on right: 152
    mod_prefix <std::vector<pdm::intern::String>> (142)
        on left: 158 159
        on right: 157 159
    fn_typespec <pdm::ast::Typespec*> (143)
        on left: 160
        on right: 153
    postfix_typespec <pdm::ast::Typespec*> (144)
        on left: 161 162 163
        on right: 164 165 166
    tcall_typespec <pdm::ast::Typespec*> (145)
        on left: 164
        on right: 162
    dot_typespec <pdm::ast::Typespec*> (146)
        on left: 165
        on right: 163
    unary_typespec <pdm::ast::Typespec*> (147)
        on left: 166
        on right: 141 167
    long_typespec <pdm::ast::Typespec*> (148)
        on left: 167 168
        on right: 32 33
    struct_typespec <pdm::ast::Typespec*> (149)
        on left: 169
        on right: 168
    targ <pdm::ast::TArg*> (150)
        on left: 170 171
        on right: 172 173
    targ_cl <std::vector<pdm::ast::TArg*>> (151)
        on left: 172 173
        on right: 97 164 173
    varg <pdm::ast::VArg*> (152)
        on left: 174 175 176
        on right: 177 178
    varg_cl <std::vector<pdm::ast::VArg*>> (153)
        on left: 177 178
        on right: 99 178
    struct_exp_field <pdm::ast::StructExp::Field*> (154)
        on left: 179
        on right: 201 202
    vpattern_field <pdm::ast::VPattern::Field*> (155)
        on left: 180 181 182
        on right: 195 196
    lpattern_field <pdm::ast::LPattern::Field*> (156)
        on left: 183 184
        on right: 189 197 198
    tpattern_field <pdm::ast::TPattern::Field*> (157)
        on left: 185 186
        on right: 199 200
    lpattern <pdm::ast::LPattern*> (158)
        on left: 187 188
        on right: 190
    lpattern_naked <pdm::ast::LPattern*> (159)
        on left: 189 190
        on right: 15 16 17
    vpattern <pdm::ast::VPattern*> (160)
        on left: 191 192
        on right: 28 29 30 31 91 160
    tpattern <pdm::ast::TPattern*> (161)
        on left: 193 194
        on right: 203 204
    vpattern_field_cl <std::vector<pdm::ast::VPattern::Field*>> (162)
        on left: 195 196
        on right: 191 196
    lpattern_field_cl <std::vector<pdm::ast::LPattern::Field*>> (163)
        on left: 197 198
        on right: 187 198
    tpattern_field_cl <std::vector<pdm::ast::TPattern::Field*>> (164)
        on left: 199 200
        on right: 193 194 200
    struct_exp_field_cl <std::vector<pdm::ast::StructExp::Field*>> (165)
        on left: 201 202
        on right: 70 202
    tpattern_seq <std::vector<pdm::ast::TPattern*>> (166)
        on left: 203 204
        on right: 29 31 33 43 204


State 0

    0 $accept: • script $end

    "mod"     shift, and go to state 1
    "import"  shift, and go to state 2
    "extern"  shift, and go to state 3

    script             go to state 4
    scriptContent      go to state 5
    scriptContentStmt  go to state 6
    mod_stmt           go to state 7
    import_stmt        go to state 8
    extern_stmt        go to state 9


State 1

    7 mod_stmt: "mod" • "<val_id>" "{" moduleContent "}"

    "<val_id>"  shift, and go to state 10


State 2

   46 import_stmt: "import" • vid "from" stringl "type" stringl

    "<val_id>"  shift, and go to state 11

    vid  go to state 12


State 3

   47 extern_stmt: "extern" • vid "from" expr

    "<val_id>"  shift, and go to state 11

    vid  go to state 13


State 4

    0 $accept: script • $end

    $end  shift, and go to state 14


State 5

    1 script: scriptContent •
    3 scriptContent: scriptContent • scriptContentStmt ";"

    "mod"     shift, and go to state 1
    "import"  shift, and go to state 2
    "extern"  shift, and go to state 3

    $default  reduce using rule 1 (script)

    scriptContentStmt  go to state 15
    mod_stmt           go to state 7
    import_stmt        go to state 8
    extern_stmt        go to state 9


State 6

    2 scriptContent: scriptContentStmt • ";"

    ";"  shift, and go to state 16


State 7

    4 scriptContentStmt: mod_stmt •

    $default  reduce using rule 4 (scriptContentStmt)


State 8

    5 scriptContentStmt: import_stmt •

    $default  reduce using rule 5 (scriptContentStmt)


State 9

    6 scriptContentStmt: extern_stmt •

    $default  reduce using rule 6 (scriptContentStmt)


State 10

    7 mod_stmt: "mod" "<val_id>" • "{" moduleContent "}"

    "{"  shift, and go to state 17


State 11

   49 vid: "<val_id>" •

    $default  reduce using rule 49 (vid)


State 12

   46 import_stmt: "import" vid • "from" stringl "type" stringl

    "from"  shift, and go to state 18


State 13

   47 extern_stmt: "extern" vid • "from" expr

    "from"  shift, and go to state 19


State 14

    0 $accept: script $end •

    $default  accept


State 15

    3 scriptContent: scriptContent scriptContentStmt • ";"

    ";"  shift, and go to state 20


State 16

    2 scriptContent: scriptContentStmt ";" •

    $default  reduce using rule 2 (scriptContent)


State 17

    7 mod_stmt: "mod" "<val_id>" "{" • moduleContent "}"

    "using"      shift, and go to state 21
    "mod"        shift, and go to state 1
    "import"     shift, and go to state 2
    "extern"     shift, and go to state 3
    "fn"         shift, and go to state 22
    "type"       shift, and go to state 23
    "enum"       shift, and go to state 24
    "typeclass"  shift, and go to state 25

    mod_stmt           go to state 26
    moduleContent      go to state 27
    moduleContentStmt  go to state 28
    fn_stmt            go to state 29
    type_stmt          go to state 30
    enum_stmt          go to state 31
    typeclass_stmt     go to state 32
    using_stmt         go to state 33
    import_stmt        go to state 34
    extern_stmt        go to state 35


State 18

   46 import_stmt: "import" vid "from" • stringl "type" stringl

    "\"dq-string-literal\""  shift, and go to state 36
    "'sq-string-literal'"    shift, and go to state 37

    stringl  go to state 38


State 19

   47 extern_stmt: "extern" vid "from" • expr

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "fn"                     shift, and go to state 40
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    vid             go to state 53
    floatl          go to state 54
    expr            go to state 55
    bracketed_exp   go to state 56
    unit_exp        go to state 57
    paren_exp       go to state 58
    vtupleExpr      go to state 59
    vstructExpr     go to state 60
    primary_exp     go to state 61
    int_expr        go to state 62
    stringls        go to state 63
    if_exp          go to state 64
    chain_exp       go to state 65
    lambda_exp      go to state 66
    postfix_exp     go to state 67
    tcall_exp       go to state 68
    vcall_exp       go to state 69
    dot_name_exp    go to state 70
    dot_index_exp   go to state 71
    unary_exp       go to state 72
    unary_op        go to state 73
    binary_exp      go to state 74
    mul_binary_exp  go to state 75
    add_binary_exp  go to state 76
    cmp_binary_exp  go to state 77
    eq_binary_exp   go to state 78
    and_binary_exp  go to state 79
    xor_binary_exp  go to state 80
    or_binary_exp   go to state 81


State 20

    3 scriptContent: scriptContent scriptContentStmt ";" •

    $default  reduce using rule 3 (scriptContent)


State 21

   44 using_stmt: "using" • vid "." "*"
   45           | "using" • vid "." vid "*"

    "<val_id>"  shift, and go to state 11

    vid  go to state 82


State 22

   28 fn_stmt: "fn" • vid vpattern "->" typespec "=" bracketed_exp
   29        | "fn" • vid tpattern_seq vpattern "->" typespec "=" bracketed_exp
   30        | "fn" • vid vpattern "=" bracketed_exp
   31        | "fn" • vid tpattern_seq vpattern "=" bracketed_exp

    "<val_id>"  shift, and go to state 11

    vid  go to state 83


State 23

   32 type_stmt: "type" • tid "=" long_typespec
   33          | "type" • tid tpattern_seq "=" long_typespec

    "<TypeId>"  shift, and go to state 84

    tid  go to state 85


State 24

   34 enum_stmt: "enum" • tid enum_field_pl

    "<TypeId>"  shift, and go to state 84

    tid  go to state 86


State 25

   42 typeclass_stmt: "typeclass" • tid "<" tid typespec ">" "=" "{" type_query_exp_sl "}"
   43               | "typeclass" • tid "<" tid typespec ">" tpattern_seq "=" "{" type_query_exp_sl "}"

    "<TypeId>"  shift, and go to state 84

    tid  go to state 87


State 26

   25 moduleContentStmt: mod_stmt •

    $default  reduce using rule 25 (moduleContentStmt)


State 27

    7 mod_stmt: "mod" "<val_id>" "{" moduleContent • "}"
    9 moduleContent: moduleContent • moduleContentStmt ";"

    "using"      shift, and go to state 21
    "mod"        shift, and go to state 1
    "import"     shift, and go to state 2
    "extern"     shift, and go to state 3
    "fn"         shift, and go to state 22
    "type"       shift, and go to state 23
    "enum"       shift, and go to state 24
    "typeclass"  shift, and go to state 25
    "}"          shift, and go to state 88

    mod_stmt           go to state 26
    moduleContentStmt  go to state 89
    fn_stmt            go to state 29
    type_stmt          go to state 30
    enum_stmt          go to state 31
    typeclass_stmt     go to state 32
    using_stmt         go to state 33
    import_stmt        go to state 34
    extern_stmt        go to state 35


State 28

    8 moduleContent: moduleContentStmt • ";"

    ";"  shift, and go to state 90


State 29

   20 moduleContentStmt: fn_stmt •

    $default  reduce using rule 20 (moduleContentStmt)


State 30

   21 moduleContentStmt: type_stmt •

    $default  reduce using rule 21 (moduleContentStmt)


State 31

   22 moduleContentStmt: enum_stmt •

    $default  reduce using rule 22 (moduleContentStmt)


State 32

   23 moduleContentStmt: typeclass_stmt •

    $default  reduce using rule 23 (moduleContentStmt)


State 33

   26 moduleContentStmt: using_stmt •

    $default  reduce using rule 26 (moduleContentStmt)


State 34

   24 moduleContentStmt: import_stmt •

    $default  reduce using rule 24 (moduleContentStmt)


State 35

   27 moduleContentStmt: extern_stmt •

    $default  reduce using rule 27 (moduleContentStmt)


State 36

   52 stringl: "\"dq-string-literal\"" •

    $default  reduce using rule 52 (stringl)


State 37

   51 stringl: "'sq-string-literal'" •

    $default  reduce using rule 51 (stringl)


State 38

   46 import_stmt: "import" vid "from" stringl • "type" stringl

    "type"  shift, and go to state 91


State 39

   84 if_exp: "if" • bracketed_exp "then" bracketed_exp
   85       | "if" • bracketed_exp "then" bracketed_exp "else" primary_exp

    "("  shift, and go to state 47
    "{"  shift, and go to state 48

    bracketed_exp  go to state 92
    unit_exp       go to state 57
    paren_exp      go to state 58
    vtupleExpr     go to state 59
    vstructExpr    go to state 60
    chain_exp      go to state 65


State 40

   91 lambda_exp: "fn" • vpattern "=" bracketed_exp

    "("  shift, and go to state 93

    vpattern  go to state 94


State 41

  110 unary_op: "not" •

    $default  reduce using rule 110 (unary_op)


State 42

   78 int_expr: "42" •

    $default  reduce using rule 78 (int_expr)


State 43

   79 int_expr: "0x2a" •

    $default  reduce using rule 79 (int_expr)


State 44

   50 floatl: "4.2" •

    $default  reduce using rule 50 (floatl)


State 45

   81 stringls: "\"dq-string-literal\"" •

    $default  reduce using rule 81 (stringls)


State 46

   80 stringls: "'sq-string-literal'" •

    $default  reduce using rule 80 (stringls)


State 47

   65 unit_exp: "(" • ")"
   67 paren_exp: "(" • long_exp ")"
   68 vtupleExpr: "(" • expr "," ")"
   69           | "(" • expr_cl2 ")"

    "<val_id>"               shift, and go to state 11
    "<TypeId>"               shift, and go to state 84
    "if"                     shift, and go to state 39
    "fn"                     shift, and go to state 40
    "Fn"                     shift, and go to state 95
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 96
    ")"                      shift, and go to state 97
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    tid               go to state 98
    vid               go to state 99
    floatl            go to state 54
    expr              go to state 100
    long_exp          go to state 101
    expr_cl2          go to state 102
    bracketed_exp     go to state 56
    unit_exp          go to state 57
    paren_exp         go to state 58
    vtupleExpr        go to state 59
    vstructExpr       go to state 60
    primary_exp       go to state 61
    int_expr          go to state 62
    stringls          go to state 63
    if_exp            go to state 64
    chain_exp         go to state 65
    lambda_exp        go to state 66
    postfix_exp       go to state 67
    tcall_exp         go to state 68
    vcall_exp         go to state 69
    dot_name_exp      go to state 70
    dot_index_exp     go to state 71
    unary_exp         go to state 72
    unary_op          go to state 73
    binary_exp        go to state 74
    mul_binary_exp    go to state 75
    add_binary_exp    go to state 76
    cmp_binary_exp    go to state 77
    eq_binary_exp     go to state 78
    and_binary_exp    go to state 79
    xor_binary_exp    go to state 80
    or_binary_exp     go to state 81
    type_query_exp    go to state 103
    typespec          go to state 104
    primary_typespec  go to state 105
    paren_typespec    go to state 106
    tuple_typespec    go to state 107
    mod_prefix_tid    go to state 108
    mod_prefix        go to state 109
    fn_typespec       go to state 110
    postfix_typespec  go to state 111
    tcall_typespec    go to state 112
    dot_typespec      go to state 113
    unary_typespec    go to state 114


State 48

   66 unit_exp: "{" • "}"
   70 vstructExpr: "{" • struct_exp_field_cl "}"
   86 chain_exp: "{" • expr "}"
   87          | "{" • chain_prefix "}"
   88          | "{" • chain_prefix expr "}"

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "const"                  shift, and go to state 115
    "val"                    shift, and go to state 116
    "var"                    shift, and go to state 117
    "set"                    shift, and go to state 118
    "fn"                     shift, and go to state 40
    "not"                    shift, and go to state 41
    "discard"                shift, and go to state 119
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48
    "}"                      shift, and go to state 120
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    chain_prefix_stmt    go to state 121
    const_stmt           go to state 122
    val_stmt             go to state 123
    var_stmt             go to state 124
    set_stmt             go to state 125
    discard_stmt         go to state 126
    vid                  go to state 127
    floatl               go to state 54
    expr                 go to state 128
    bracketed_exp        go to state 56
    unit_exp             go to state 57
    paren_exp            go to state 58
    vtupleExpr           go to state 59
    vstructExpr          go to state 60
    primary_exp          go to state 61
    int_expr             go to state 62
    stringls             go to state 63
    if_exp               go to state 64
    chain_exp            go to state 65
    chain_prefix         go to state 129
    lambda_exp           go to state 66
    postfix_exp          go to state 67
    tcall_exp            go to state 68
    vcall_exp            go to state 69
    dot_name_exp         go to state 70
    dot_index_exp        go to state 71
    unary_exp            go to state 72
    unary_op             go to state 73
    binary_exp           go to state 74
    mul_binary_exp       go to state 75
    add_binary_exp       go to state 76
    cmp_binary_exp       go to state 77
    eq_binary_exp        go to state 78
    and_binary_exp       go to state 79
    xor_binary_exp       go to state 80
    or_binary_exp        go to state 81
    struct_exp_field     go to state 130
    struct_exp_field_cl  go to state 131


State 49

  108 unary_op: "*" •

    $default  reduce using rule 108 (unary_op)


State 50

  106 unary_op: "+" •

    $default  reduce using rule 106 (unary_op)


State 51

  107 unary_op: "-" •

    $default  reduce using rule 107 (unary_op)


State 52

  109 unary_op: "^" •

    $default  reduce using rule 109 (unary_op)


State 53

   72 primary_exp: vid •

    $default  reduce using rule 72 (primary_exp)


State 54

   74 primary_exp: floatl •

    $default  reduce using rule 74 (primary_exp)


State 55

   47 extern_stmt: "extern" vid "from" expr •

    $default  reduce using rule 47 (extern_stmt)


State 56

   71 primary_exp: bracketed_exp •

    $default  reduce using rule 71 (primary_exp)


State 57

   60 bracketed_exp: unit_exp •

    $default  reduce using rule 60 (bracketed_exp)


State 58

   61 bracketed_exp: paren_exp •

    $default  reduce using rule 61 (bracketed_exp)


State 59

   62 bracketed_exp: vtupleExpr •

    $default  reduce using rule 62 (bracketed_exp)


State 60

   63 bracketed_exp: vstructExpr •

    $default  reduce using rule 63 (bracketed_exp)


State 61

   92 postfix_exp: primary_exp •

    $default  reduce using rule 92 (postfix_exp)


State 62

   73 primary_exp: int_expr •

    $default  reduce using rule 73 (primary_exp)


State 63

   75 primary_exp: stringls •
   82 stringls: stringls • "'sq-string-literal'"
   83         | stringls • "\"dq-string-literal\""

    "\"dq-string-literal\""  shift, and go to state 132
    "'sq-string-literal'"    shift, and go to state 133

    $default  reduce using rule 75 (primary_exp)


State 64

   76 primary_exp: if_exp •

    $default  reduce using rule 76 (primary_exp)


State 65

   64 bracketed_exp: chain_exp •

    $default  reduce using rule 64 (bracketed_exp)


State 66

   77 primary_exp: lambda_exp •

    $default  reduce using rule 77 (primary_exp)


State 67

   97 tcall_exp: postfix_exp • "[" targ_cl "]"
   98 vcall_exp: postfix_exp • "(" ")"
   99          | postfix_exp • "(" varg_cl ")"
  100 dot_name_exp: postfix_exp • "." "<val_id>"
  101             | postfix_exp • "." "<TypeId>"
  102 dot_index_exp: postfix_exp • "." int_expr
  103              | postfix_exp • "." bracketed_exp
  104 unary_exp: postfix_exp •

    "."  shift, and go to state 134
    "("  shift, and go to state 135
    "["  shift, and go to state 136

    $default  reduce using rule 104 (unary_exp)


State 68

   93 postfix_exp: tcall_exp •

    $default  reduce using rule 93 (postfix_exp)


State 69

   94 postfix_exp: vcall_exp •

    $default  reduce using rule 94 (postfix_exp)


State 70

   95 postfix_exp: dot_name_exp •

    $default  reduce using rule 95 (postfix_exp)


State 71

   96 postfix_exp: dot_index_exp •

    $default  reduce using rule 96 (postfix_exp)


State 72

  115 mul_binary_exp: unary_exp •

    $default  reduce using rule 115 (mul_binary_exp)


State 73

  105 unary_exp: unary_op • unary_exp

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "fn"                     shift, and go to state 40
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    vid            go to state 53
    floatl         go to state 54
    bracketed_exp  go to state 56
    unit_exp       go to state 57
    paren_exp      go to state 58
    vtupleExpr     go to state 59
    vstructExpr    go to state 60
    primary_exp    go to state 61
    int_expr       go to state 62
    stringls       go to state 63
    if_exp         go to state 64
    chain_exp      go to state 65
    lambda_exp     go to state 66
    postfix_exp    go to state 67
    tcall_exp      go to state 68
    vcall_exp      go to state 69
    dot_name_exp   go to state 70
    dot_index_exp  go to state 71
    unary_exp      go to state 137
    unary_op       go to state 73


State 74

   53 expr: binary_exp •

    $default  reduce using rule 53 (expr)


State 75

  116 mul_binary_exp: mul_binary_exp • mul_binary_op unary_exp
  119 add_binary_exp: mul_binary_exp •

    "*"  shift, and go to state 138
    "/"  shift, and go to state 139
    "%"  shift, and go to state 140

    $default  reduce using rule 119 (add_binary_exp)

    mul_binary_op  go to state 141


State 76

  120 add_binary_exp: add_binary_exp • add_binary_op mul_binary_exp
  125 cmp_binary_exp: add_binary_exp •

    "+"  shift, and go to state 142
    "-"  shift, and go to state 143

    $default  reduce using rule 125 (cmp_binary_exp)

    add_binary_op  go to state 144


State 77

  126 cmp_binary_exp: cmp_binary_exp • cmp_binary_op add_binary_exp
  129 eq_binary_exp: cmp_binary_exp •

    "<"   shift, and go to state 145
    "<="  shift, and go to state 146
    ">"   shift, and go to state 147
    ">="  shift, and go to state 148

    $default  reduce using rule 129 (eq_binary_exp)

    cmp_binary_op  go to state 149


State 78

  130 eq_binary_exp: eq_binary_exp • eq_binary_op cmp_binary_exp
  131 and_binary_exp: eq_binary_exp •

    "=="  shift, and go to state 150
    "!="  shift, and go to state 151

    $default  reduce using rule 131 (and_binary_exp)

    eq_binary_op  go to state 152


State 79

  132 and_binary_exp: and_binary_exp • "and" eq_binary_exp
  133 xor_binary_exp: and_binary_exp •

    "and"  shift, and go to state 153

    $default  reduce using rule 133 (xor_binary_exp)


State 80

  134 xor_binary_exp: xor_binary_exp • "xor" and_binary_exp
  135 or_binary_exp: xor_binary_exp •

    "xor"  shift, and go to state 154

    $default  reduce using rule 135 (or_binary_exp)


State 81

  111 binary_exp: or_binary_exp •
  136 or_binary_exp: or_binary_exp • "or" xor_binary_exp

    "or"  shift, and go to state 155

    $default  reduce using rule 111 (binary_exp)


State 82

   44 using_stmt: "using" vid • "." "*"
   45           | "using" vid • "." vid "*"

    "."  shift, and go to state 156


State 83

   28 fn_stmt: "fn" vid • vpattern "->" typespec "=" bracketed_exp
   29        | "fn" vid • tpattern_seq vpattern "->" typespec "=" bracketed_exp
   30        | "fn" vid • vpattern "=" bracketed_exp
   31        | "fn" vid • tpattern_seq vpattern "=" bracketed_exp

    "("  shift, and go to state 93
    "["  shift, and go to state 157
    "!"  shift, and go to state 158

    vpattern      go to state 159
    tpattern      go to state 160
    tpattern_seq  go to state 161


State 84

   48 tid: "<TypeId>" •

    $default  reduce using rule 48 (tid)


State 85

   32 type_stmt: "type" tid • "=" long_typespec
   33          | "type" tid • tpattern_seq "=" long_typespec

    "["  shift, and go to state 157
    "="  shift, and go to state 162
    "!"  shift, and go to state 158

    tpattern      go to state 160
    tpattern_seq  go to state 163


State 86

   34 enum_stmt: "enum" tid • enum_field_pl

    "<TypeId>"  shift, and go to state 84
    "|"         shift, and go to state 164

    enum_field_pl             go to state 165
    unprefixed_enum_field_pl  go to state 166
    enum_field                go to state 167
    tid                       go to state 168


State 87

   42 typeclass_stmt: "typeclass" tid • "<" tid typespec ">" "=" "{" type_query_exp_sl "}"
   43               | "typeclass" tid • "<" tid typespec ">" tpattern_seq "=" "{" type_query_exp_sl "}"

    "<"  shift, and go to state 169


State 88

    7 mod_stmt: "mod" "<val_id>" "{" moduleContent "}" •

    $default  reduce using rule 7 (mod_stmt)


State 89

    9 moduleContent: moduleContent moduleContentStmt • ";"

    ";"  shift, and go to state 170


State 90

    8 moduleContent: moduleContentStmt ";" •

    $default  reduce using rule 8 (moduleContent)


State 91

   46 import_stmt: "import" vid "from" stringl "type" • stringl

    "\"dq-string-literal\""  shift, and go to state 36
    "'sq-string-literal'"    shift, and go to state 37

    stringl  go to state 171


State 92

   84 if_exp: "if" bracketed_exp • "then" bracketed_exp
   85       | "if" bracketed_exp • "then" bracketed_exp "else" primary_exp

    "then"  shift, and go to state 172


State 93

  191 vpattern: "(" • vpattern_field_cl ")"
  192         | "(" • ")"

    "<val_id>"  shift, and go to state 11
    "out"       shift, and go to state 173
    "inout"     shift, and go to state 174
    ")"         shift, and go to state 175

    vid                go to state 176
    vpattern_field     go to state 177
    vpattern_field_cl  go to state 178


State 94

   91 lambda_exp: "fn" vpattern • "=" bracketed_exp

    "="  shift, and go to state 179


State 95

  160 fn_typespec: "Fn" • vpattern primary_typespec

    "("  shift, and go to state 93

    vpattern  go to state 180


State 96

   65 unit_exp: "(" • ")"
   67 paren_exp: "(" • long_exp ")"
   68 vtupleExpr: "(" • expr "," ")"
   69           | "(" • expr_cl2 ")"
  154 paren_typespec: "(" • typespec ")"
  155 tuple_typespec: "(" • typespec "," ")"
  156               | "(" • typespec_cl2 ")"

    "<val_id>"               shift, and go to state 11
    "<TypeId>"               shift, and go to state 84
    "if"                     shift, and go to state 39
    "fn"                     shift, and go to state 40
    "Fn"                     shift, and go to state 95
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 96
    ")"                      shift, and go to state 97
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    tid               go to state 98
    vid               go to state 99
    floatl            go to state 54
    expr              go to state 100
    long_exp          go to state 101
    expr_cl2          go to state 102
    bracketed_exp     go to state 56
    unit_exp          go to state 57
    paren_exp         go to state 58
    vtupleExpr        go to state 59
    vstructExpr       go to state 60
    primary_exp       go to state 61
    int_expr          go to state 62
    stringls          go to state 63
    if_exp            go to state 64
    chain_exp         go to state 65
    lambda_exp        go to state 66
    postfix_exp       go to state 67
    tcall_exp         go to state 68
    vcall_exp         go to state 69
    dot_name_exp      go to state 70
    dot_index_exp     go to state 71
    unary_exp         go to state 72
    unary_op          go to state 73
    binary_exp        go to state 74
    mul_binary_exp    go to state 75
    add_binary_exp    go to state 76
    cmp_binary_exp    go to state 77
    eq_binary_exp     go to state 78
    and_binary_exp    go to state 79
    xor_binary_exp    go to state 80
    or_binary_exp     go to state 81
    type_query_exp    go to state 103
    typespec          go to state 181
    typespec_cl2      go to state 182
    primary_typespec  go to state 105
    paren_typespec    go to state 106
    tuple_typespec    go to state 107
    mod_prefix_tid    go to state 108
    mod_prefix        go to state 109
    fn_typespec       go to state 110
    postfix_typespec  go to state 111
    tcall_typespec    go to state 112
    dot_typespec      go to state 113
    unary_typespec    go to state 114


State 97

   65 unit_exp: "(" ")" •

    $default  reduce using rule 65 (unit_exp)


State 98

  149 primary_typespec: tid •

    $default  reduce using rule 149 (primary_typespec)


State 99

   72 primary_exp: vid •
  158 mod_prefix: vid • "."

    "."  shift, and go to state 183

    "."       [reduce using rule 72 (primary_exp)]
    $default  reduce using rule 72 (primary_exp)


State 100

   55 long_exp: expr •
   56 expr_cl2: expr • "," expr
   68 vtupleExpr: "(" expr • "," ")"

    ","  shift, and go to state 184

    $default  reduce using rule 55 (long_exp)


State 101

   67 paren_exp: "(" long_exp • ")"

    ")"  shift, and go to state 185


State 102

   57 expr_cl2: expr_cl2 • "," expr
   69 vtupleExpr: "(" expr_cl2 • ")"

    ","  shift, and go to state 186
    ")"  shift, and go to state 187


State 103

   54 long_exp: type_query_exp •

    $default  reduce using rule 54 (long_exp)


State 104

  137 type_query_exp: typespec • type_query_op typespec

    "::"  shift, and go to state 188
    ":<"  shift, and go to state 189
    ">:"  shift, and go to state 190

    type_query_op  go to state 191


State 105

  161 postfix_typespec: primary_typespec •

    $default  reduce using rule 161 (postfix_typespec)


State 106

  150 primary_typespec: paren_typespec •

    $default  reduce using rule 150 (primary_typespec)


State 107

  151 primary_typespec: tuple_typespec •

    $default  reduce using rule 151 (primary_typespec)


State 108

  152 primary_typespec: mod_prefix_tid •

    $default  reduce using rule 152 (primary_typespec)


State 109

  157 mod_prefix_tid: mod_prefix • tid
  159 mod_prefix: mod_prefix • vid "."

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84

    tid  go to state 192
    vid  go to state 193


State 110

  153 primary_typespec: fn_typespec •

    $default  reduce using rule 153 (primary_typespec)


State 111

  164 tcall_typespec: postfix_typespec • "[" targ_cl "]"
  165 dot_typespec: postfix_typespec • "." "<val_id>"
  166 unary_typespec: postfix_typespec •

    "."  shift, and go to state 194
    "["  shift, and go to state 195

    $default  reduce using rule 166 (unary_typespec)


State 112

  162 postfix_typespec: tcall_typespec •

    $default  reduce using rule 162 (postfix_typespec)


State 113

  163 postfix_typespec: dot_typespec •

    $default  reduce using rule 163 (postfix_typespec)


State 114

  141 typespec: unary_typespec •

    $default  reduce using rule 141 (typespec)


State 115

   15 const_stmt: "const" • lpattern_naked "=" expr

    "<val_id>"  shift, and go to state 11
    "("         shift, and go to state 196

    vid             go to state 197
    lpattern_field  go to state 198
    lpattern        go to state 199
    lpattern_naked  go to state 200


State 116

   16 val_stmt: "val" • lpattern_naked "=" expr

    "<val_id>"  shift, and go to state 11
    "("         shift, and go to state 196

    vid             go to state 197
    lpattern_field  go to state 198
    lpattern        go to state 199
    lpattern_naked  go to state 201


State 117

   17 var_stmt: "var" • lpattern_naked "=" expr

    "<val_id>"  shift, and go to state 11
    "("         shift, and go to state 196

    vid             go to state 197
    lpattern_field  go to state 198
    lpattern        go to state 199
    lpattern_naked  go to state 202


State 118

   18 set_stmt: "set" • expr "=" expr

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "fn"                     shift, and go to state 40
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    vid             go to state 53
    floatl          go to state 54
    expr            go to state 203
    bracketed_exp   go to state 56
    unit_exp        go to state 57
    paren_exp       go to state 58
    vtupleExpr      go to state 59
    vstructExpr     go to state 60
    primary_exp     go to state 61
    int_expr        go to state 62
    stringls        go to state 63
    if_exp          go to state 64
    chain_exp       go to state 65
    lambda_exp      go to state 66
    postfix_exp     go to state 67
    tcall_exp       go to state 68
    vcall_exp       go to state 69
    dot_name_exp    go to state 70
    dot_index_exp   go to state 71
    unary_exp       go to state 72
    unary_op        go to state 73
    binary_exp      go to state 74
    mul_binary_exp  go to state 75
    add_binary_exp  go to state 76
    cmp_binary_exp  go to state 77
    eq_binary_exp   go to state 78
    and_binary_exp  go to state 79
    xor_binary_exp  go to state 80
    or_binary_exp   go to state 81


State 119

   19 discard_stmt: "discard" • expr

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "fn"                     shift, and go to state 40
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    vid             go to state 53
    floatl          go to state 54
    expr            go to state 204
    bracketed_exp   go to state 56
    unit_exp        go to state 57
    paren_exp       go to state 58
    vtupleExpr      go to state 59
    vstructExpr     go to state 60
    primary_exp     go to state 61
    int_expr        go to state 62
    stringls        go to state 63
    if_exp          go to state 64
    chain_exp       go to state 65
    lambda_exp      go to state 66
    postfix_exp     go to state 67
    tcall_exp       go to state 68
    vcall_exp       go to state 69
    dot_name_exp    go to state 70
    dot_index_exp   go to state 71
    unary_exp       go to state 72
    unary_op        go to state 73
    binary_exp      go to state 74
    mul_binary_exp  go to state 75
    add_binary_exp  go to state 76
    cmp_binary_exp  go to state 77
    eq_binary_exp   go to state 78
    and_binary_exp  go to state 79
    xor_binary_exp  go to state 80
    or_binary_exp   go to state 81


State 120

   66 unit_exp: "{" "}" •

    $default  reduce using rule 66 (unit_exp)


State 121

   89 chain_prefix: chain_prefix_stmt • ";"

    ";"  shift, and go to state 205


State 122

   10 chain_prefix_stmt: const_stmt •

    $default  reduce using rule 10 (chain_prefix_stmt)


State 123

   11 chain_prefix_stmt: val_stmt •

    $default  reduce using rule 11 (chain_prefix_stmt)


State 124

   12 chain_prefix_stmt: var_stmt •

    $default  reduce using rule 12 (chain_prefix_stmt)


State 125

   13 chain_prefix_stmt: set_stmt •

    $default  reduce using rule 13 (chain_prefix_stmt)


State 126

   14 chain_prefix_stmt: discard_stmt •

    $default  reduce using rule 14 (chain_prefix_stmt)


State 127

   72 primary_exp: vid •
  179 struct_exp_field: vid • "=" expr

    "="  shift, and go to state 206

    $default  reduce using rule 72 (primary_exp)


State 128

   86 chain_exp: "{" expr • "}"

    "}"  shift, and go to state 207


State 129

   87 chain_exp: "{" chain_prefix • "}"
   88          | "{" chain_prefix • expr "}"
   90 chain_prefix: chain_prefix • chain_prefix_stmt ";"

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "const"                  shift, and go to state 115
    "val"                    shift, and go to state 116
    "var"                    shift, and go to state 117
    "set"                    shift, and go to state 118
    "fn"                     shift, and go to state 40
    "not"                    shift, and go to state 41
    "discard"                shift, and go to state 119
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48
    "}"                      shift, and go to state 208
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    chain_prefix_stmt  go to state 209
    const_stmt         go to state 122
    val_stmt           go to state 123
    var_stmt           go to state 124
    set_stmt           go to state 125
    discard_stmt       go to state 126
    vid                go to state 53
    floatl             go to state 54
    expr               go to state 210
    bracketed_exp      go to state 56
    unit_exp           go to state 57
    paren_exp          go to state 58
    vtupleExpr         go to state 59
    vstructExpr        go to state 60
    primary_exp        go to state 61
    int_expr           go to state 62
    stringls           go to state 63
    if_exp             go to state 64
    chain_exp          go to state 65
    lambda_exp         go to state 66
    postfix_exp        go to state 67
    tcall_exp          go to state 68
    vcall_exp          go to state 69
    dot_name_exp       go to state 70
    dot_index_exp      go to state 71
    unary_exp          go to state 72
    unary_op           go to state 73
    binary_exp         go to state 74
    mul_binary_exp     go to state 75
    add_binary_exp     go to state 76
    cmp_binary_exp     go to state 77
    eq_binary_exp      go to state 78
    and_binary_exp     go to state 79
    xor_binary_exp     go to state 80
    or_binary_exp      go to state 81


State 130

  201 struct_exp_field_cl: struct_exp_field •

    $default  reduce using rule 201 (struct_exp_field_cl)


State 131

   70 vstructExpr: "{" struct_exp_field_cl • "}"
  202 struct_exp_field_cl: struct_exp_field_cl • "," struct_exp_field

    ","  shift, and go to state 211
    "}"  shift, and go to state 212


State 132

   83 stringls: stringls "\"dq-string-literal\"" •

    $default  reduce using rule 83 (stringls)


State 133

   82 stringls: stringls "'sq-string-literal'" •

    $default  reduce using rule 82 (stringls)


State 134

  100 dot_name_exp: postfix_exp "." • "<val_id>"
  101             | postfix_exp "." • "<TypeId>"
  102 dot_index_exp: postfix_exp "." • int_expr
  103              | postfix_exp "." • bracketed_exp

    "<val_id>"  shift, and go to state 213
    "<TypeId>"  shift, and go to state 214
    "42"        shift, and go to state 42
    "0x2a"      shift, and go to state 43
    "("         shift, and go to state 47
    "{"         shift, and go to state 48

    bracketed_exp  go to state 215
    unit_exp       go to state 57
    paren_exp      go to state 58
    vtupleExpr     go to state 59
    vstructExpr    go to state 60
    int_expr       go to state 216
    chain_exp      go to state 65


State 135

   98 vcall_exp: postfix_exp "(" • ")"
   99          | postfix_exp "(" • varg_cl ")"

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "fn"                     shift, and go to state 40
    "not"                    shift, and go to state 41
    "out"                    shift, and go to state 217
    "inout"                  shift, and go to state 218
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    ")"                      shift, and go to state 219
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    vid             go to state 53
    floatl          go to state 54
    expr            go to state 220
    bracketed_exp   go to state 56
    unit_exp        go to state 57
    paren_exp       go to state 58
    vtupleExpr      go to state 59
    vstructExpr     go to state 60
    primary_exp     go to state 61
    int_expr        go to state 62
    stringls        go to state 63
    if_exp          go to state 64
    chain_exp       go to state 65
    lambda_exp      go to state 66
    postfix_exp     go to state 67
    tcall_exp       go to state 68
    vcall_exp       go to state 69
    dot_name_exp    go to state 70
    dot_index_exp   go to state 71
    unary_exp       go to state 72
    unary_op        go to state 73
    binary_exp      go to state 74
    mul_binary_exp  go to state 75
    add_binary_exp  go to state 76
    cmp_binary_exp  go to state 77
    eq_binary_exp   go to state 78
    and_binary_exp  go to state 79
    xor_binary_exp  go to state 80
    or_binary_exp   go to state 81
    varg            go to state 221
    varg_cl         go to state 222


State 136

   97 tcall_exp: postfix_exp "[" • targ_cl "]"

    "<val_id>"               shift, and go to state 11
    "<TypeId>"               shift, and go to state 84
    "if"                     shift, and go to state 39
    "fn"                     shift, and go to state 40
    "Fn"                     shift, and go to state 95
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 96
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    tid               go to state 98
    vid               go to state 99
    floatl            go to state 54
    expr              go to state 223
    bracketed_exp     go to state 56
    unit_exp          go to state 57
    paren_exp         go to state 58
    vtupleExpr        go to state 59
    vstructExpr       go to state 60
    primary_exp       go to state 61
    int_expr          go to state 62
    stringls          go to state 63
    if_exp            go to state 64
    chain_exp         go to state 65
    lambda_exp        go to state 66
    postfix_exp       go to state 67
    tcall_exp         go to state 68
    vcall_exp         go to state 69
    dot_name_exp      go to state 70
    dot_index_exp     go to state 71
    unary_exp         go to state 72
    unary_op          go to state 73
    binary_exp        go to state 74
    mul_binary_exp    go to state 75
    add_binary_exp    go to state 76
    cmp_binary_exp    go to state 77
    eq_binary_exp     go to state 78
    and_binary_exp    go to state 79
    xor_binary_exp    go to state 80
    or_binary_exp     go to state 81
    typespec          go to state 224
    primary_typespec  go to state 105
    paren_typespec    go to state 106
    tuple_typespec    go to state 107
    mod_prefix_tid    go to state 108
    mod_prefix        go to state 109
    fn_typespec       go to state 110
    postfix_typespec  go to state 111
    tcall_typespec    go to state 112
    dot_typespec      go to state 113
    unary_typespec    go to state 114
    targ              go to state 225
    targ_cl           go to state 226


State 137

  105 unary_exp: unary_op unary_exp •

    $default  reduce using rule 105 (unary_exp)


State 138

  112 mul_binary_op: "*" •

    $default  reduce using rule 112 (mul_binary_op)


State 139

  113 mul_binary_op: "/" •

    $default  reduce using rule 113 (mul_binary_op)


State 140

  114 mul_binary_op: "%" •

    $default  reduce using rule 114 (mul_binary_op)


State 141

  116 mul_binary_exp: mul_binary_exp mul_binary_op • unary_exp

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "fn"                     shift, and go to state 40
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    vid            go to state 53
    floatl         go to state 54
    bracketed_exp  go to state 56
    unit_exp       go to state 57
    paren_exp      go to state 58
    vtupleExpr     go to state 59
    vstructExpr    go to state 60
    primary_exp    go to state 61
    int_expr       go to state 62
    stringls       go to state 63
    if_exp         go to state 64
    chain_exp      go to state 65
    lambda_exp     go to state 66
    postfix_exp    go to state 67
    tcall_exp      go to state 68
    vcall_exp      go to state 69
    dot_name_exp   go to state 70
    dot_index_exp  go to state 71
    unary_exp      go to state 227
    unary_op       go to state 73


State 142

  117 add_binary_op: "+" •

    $default  reduce using rule 117 (add_binary_op)


State 143

  118 add_binary_op: "-" •

    $default  reduce using rule 118 (add_binary_op)


State 144

  120 add_binary_exp: add_binary_exp add_binary_op • mul_binary_exp

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "fn"                     shift, and go to state 40
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    vid             go to state 53
    floatl          go to state 54
    bracketed_exp   go to state 56
    unit_exp        go to state 57
    paren_exp       go to state 58
    vtupleExpr      go to state 59
    vstructExpr     go to state 60
    primary_exp     go to state 61
    int_expr        go to state 62
    stringls        go to state 63
    if_exp          go to state 64
    chain_exp       go to state 65
    lambda_exp      go to state 66
    postfix_exp     go to state 67
    tcall_exp       go to state 68
    vcall_exp       go to state 69
    dot_name_exp    go to state 70
    dot_index_exp   go to state 71
    unary_exp       go to state 72
    unary_op        go to state 73
    mul_binary_exp  go to state 228


State 145

  121 cmp_binary_op: "<" •

    $default  reduce using rule 121 (cmp_binary_op)


State 146

  122 cmp_binary_op: "<=" •

    $default  reduce using rule 122 (cmp_binary_op)


State 147

  123 cmp_binary_op: ">" •

    $default  reduce using rule 123 (cmp_binary_op)


State 148

  124 cmp_binary_op: ">=" •

    $default  reduce using rule 124 (cmp_binary_op)


State 149

  126 cmp_binary_exp: cmp_binary_exp cmp_binary_op • add_binary_exp

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "fn"                     shift, and go to state 40
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    vid             go to state 53
    floatl          go to state 54
    bracketed_exp   go to state 56
    unit_exp        go to state 57
    paren_exp       go to state 58
    vtupleExpr      go to state 59
    vstructExpr     go to state 60
    primary_exp     go to state 61
    int_expr        go to state 62
    stringls        go to state 63
    if_exp          go to state 64
    chain_exp       go to state 65
    lambda_exp      go to state 66
    postfix_exp     go to state 67
    tcall_exp       go to state 68
    vcall_exp       go to state 69
    dot_name_exp    go to state 70
    dot_index_exp   go to state 71
    unary_exp       go to state 72
    unary_op        go to state 73
    mul_binary_exp  go to state 75
    add_binary_exp  go to state 229


State 150

  127 eq_binary_op: "==" •

    $default  reduce using rule 127 (eq_binary_op)


State 151

  128 eq_binary_op: "!=" •

    $default  reduce using rule 128 (eq_binary_op)


State 152

  130 eq_binary_exp: eq_binary_exp eq_binary_op • cmp_binary_exp

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "fn"                     shift, and go to state 40
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    vid             go to state 53
    floatl          go to state 54
    bracketed_exp   go to state 56
    unit_exp        go to state 57
    paren_exp       go to state 58
    vtupleExpr      go to state 59
    vstructExpr     go to state 60
    primary_exp     go to state 61
    int_expr        go to state 62
    stringls        go to state 63
    if_exp          go to state 64
    chain_exp       go to state 65
    lambda_exp      go to state 66
    postfix_exp     go to state 67
    tcall_exp       go to state 68
    vcall_exp       go to state 69
    dot_name_exp    go to state 70
    dot_index_exp   go to state 71
    unary_exp       go to state 72
    unary_op        go to state 73
    mul_binary_exp  go to state 75
    add_binary_exp  go to state 76
    cmp_binary_exp  go to state 230


State 153

  132 and_binary_exp: and_binary_exp "and" • eq_binary_exp

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "fn"                     shift, and go to state 40
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    vid             go to state 53
    floatl          go to state 54
    bracketed_exp   go to state 56
    unit_exp        go to state 57
    paren_exp       go to state 58
    vtupleExpr      go to state 59
    vstructExpr     go to state 60
    primary_exp     go to state 61
    int_expr        go to state 62
    stringls        go to state 63
    if_exp          go to state 64
    chain_exp       go to state 65
    lambda_exp      go to state 66
    postfix_exp     go to state 67
    tcall_exp       go to state 68
    vcall_exp       go to state 69
    dot_name_exp    go to state 70
    dot_index_exp   go to state 71
    unary_exp       go to state 72
    unary_op        go to state 73
    mul_binary_exp  go to state 75
    add_binary_exp  go to state 76
    cmp_binary_exp  go to state 77
    eq_binary_exp   go to state 231


State 154

  134 xor_binary_exp: xor_binary_exp "xor" • and_binary_exp

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "fn"                     shift, and go to state 40
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    vid             go to state 53
    floatl          go to state 54
    bracketed_exp   go to state 56
    unit_exp        go to state 57
    paren_exp       go to state 58
    vtupleExpr      go to state 59
    vstructExpr     go to state 60
    primary_exp     go to state 61
    int_expr        go to state 62
    stringls        go to state 63
    if_exp          go to state 64
    chain_exp       go to state 65
    lambda_exp      go to state 66
    postfix_exp     go to state 67
    tcall_exp       go to state 68
    vcall_exp       go to state 69
    dot_name_exp    go to state 70
    dot_index_exp   go to state 71
    unary_exp       go to state 72
    unary_op        go to state 73
    mul_binary_exp  go to state 75
    add_binary_exp  go to state 76
    cmp_binary_exp  go to state 77
    eq_binary_exp   go to state 78
    and_binary_exp  go to state 232


State 155

  136 or_binary_exp: or_binary_exp "or" • xor_binary_exp

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "fn"                     shift, and go to state 40
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    vid             go to state 53
    floatl          go to state 54
    bracketed_exp   go to state 56
    unit_exp        go to state 57
    paren_exp       go to state 58
    vtupleExpr      go to state 59
    vstructExpr     go to state 60
    primary_exp     go to state 61
    int_expr        go to state 62
    stringls        go to state 63
    if_exp          go to state 64
    chain_exp       go to state 65
    lambda_exp      go to state 66
    postfix_exp     go to state 67
    tcall_exp       go to state 68
    vcall_exp       go to state 69
    dot_name_exp    go to state 70
    dot_index_exp   go to state 71
    unary_exp       go to state 72
    unary_op        go to state 73
    mul_binary_exp  go to state 75
    add_binary_exp  go to state 76
    cmp_binary_exp  go to state 77
    eq_binary_exp   go to state 78
    and_binary_exp  go to state 79
    xor_binary_exp  go to state 233


State 156

   44 using_stmt: "using" vid "." • "*"
   45           | "using" vid "." • vid "*"

    "<val_id>"  shift, and go to state 11
    "*"         shift, and go to state 234

    vid  go to state 235


State 157

  193 tpattern: "[" • tpattern_field_cl "]"

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84

    tid                go to state 236
    vid                go to state 237
    tpattern_field     go to state 238
    tpattern_field_cl  go to state 239


State 158

  194 tpattern: "!" • "[" tpattern_field_cl "]"

    "["  shift, and go to state 240


State 159

   28 fn_stmt: "fn" vid vpattern • "->" typespec "=" bracketed_exp
   30        | "fn" vid vpattern • "=" bracketed_exp

    "->"  shift, and go to state 241
    "="   shift, and go to state 242


State 160

  203 tpattern_seq: tpattern •

    $default  reduce using rule 203 (tpattern_seq)


State 161

   29 fn_stmt: "fn" vid tpattern_seq • vpattern "->" typespec "=" bracketed_exp
   31        | "fn" vid tpattern_seq • vpattern "=" bracketed_exp
  204 tpattern_seq: tpattern_seq • tpattern

    "("  shift, and go to state 93
    "["  shift, and go to state 157
    "!"  shift, and go to state 158

    vpattern  go to state 243
    tpattern  go to state 244


State 162

   32 type_stmt: "type" tid "=" • long_typespec

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84
    "Fn"        shift, and go to state 95
    "("         shift, and go to state 245
    "{"         shift, and go to state 246

    tid               go to state 98
    vid               go to state 247
    primary_typespec  go to state 105
    paren_typespec    go to state 106
    tuple_typespec    go to state 107
    mod_prefix_tid    go to state 108
    mod_prefix        go to state 109
    fn_typespec       go to state 110
    postfix_typespec  go to state 111
    tcall_typespec    go to state 112
    dot_typespec      go to state 113
    unary_typespec    go to state 248
    long_typespec     go to state 249
    struct_typespec   go to state 250


State 163

   33 type_stmt: "type" tid tpattern_seq • "=" long_typespec
  204 tpattern_seq: tpattern_seq • tpattern

    "["  shift, and go to state 157
    "="  shift, and go to state 251
    "!"  shift, and go to state 158

    tpattern  go to state 244


State 164

   35 enum_field_pl: "|" • unprefixed_enum_field_pl

    "<TypeId>"  shift, and go to state 84

    unprefixed_enum_field_pl  go to state 252
    enum_field                go to state 167
    tid                       go to state 168


State 165

   34 enum_stmt: "enum" tid enum_field_pl •

    $default  reduce using rule 34 (enum_stmt)


State 166

   36 enum_field_pl: unprefixed_enum_field_pl •
   38 unprefixed_enum_field_pl: unprefixed_enum_field_pl • "|" enum_field

    "|"  shift, and go to state 253

    $default  reduce using rule 36 (enum_field_pl)


State 167

   37 unprefixed_enum_field_pl: enum_field •

    $default  reduce using rule 37 (unprefixed_enum_field_pl)


State 168

   39 enum_field: tid •
   40           | tid • "(" ")"
   41           | tid • "(" typespec_cl1 ")"

    "("  shift, and go to state 254

    $default  reduce using rule 39 (enum_field)


State 169

   42 typeclass_stmt: "typeclass" tid "<" • tid typespec ">" "=" "{" type_query_exp_sl "}"
   43               | "typeclass" tid "<" • tid typespec ">" tpattern_seq "=" "{" type_query_exp_sl "}"

    "<TypeId>"  shift, and go to state 84

    tid  go to state 255


State 170

    9 moduleContent: moduleContent moduleContentStmt ";" •

    $default  reduce using rule 9 (moduleContent)


State 171

   46 import_stmt: "import" vid "from" stringl "type" stringl •

    $default  reduce using rule 46 (import_stmt)


State 172

   84 if_exp: "if" bracketed_exp "then" • bracketed_exp
   85       | "if" bracketed_exp "then" • bracketed_exp "else" primary_exp

    "("  shift, and go to state 47
    "{"  shift, and go to state 48

    bracketed_exp  go to state 256
    unit_exp       go to state 57
    paren_exp      go to state 58
    vtupleExpr     go to state 59
    vstructExpr    go to state 60
    chain_exp      go to state 65


State 173

  181 vpattern_field: "out" • vid typespec

    "<val_id>"  shift, and go to state 11

    vid  go to state 257


State 174

  182 vpattern_field: "inout" • vid typespec

    "<val_id>"  shift, and go to state 11

    vid  go to state 258


State 175

  192 vpattern: "(" ")" •

    $default  reduce using rule 192 (vpattern)


State 176

  180 vpattern_field: vid • typespec

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84
    "Fn"        shift, and go to state 95
    "("         shift, and go to state 245

    tid               go to state 98
    vid               go to state 247
    typespec          go to state 259
    primary_typespec  go to state 105
    paren_typespec    go to state 106
    tuple_typespec    go to state 107
    mod_prefix_tid    go to state 108
    mod_prefix        go to state 109
    fn_typespec       go to state 110
    postfix_typespec  go to state 111
    tcall_typespec    go to state 112
    dot_typespec      go to state 113
    unary_typespec    go to state 114


State 177

  195 vpattern_field_cl: vpattern_field •

    $default  reduce using rule 195 (vpattern_field_cl)


State 178

  191 vpattern: "(" vpattern_field_cl • ")"
  196 vpattern_field_cl: vpattern_field_cl • "," vpattern_field

    ","  shift, and go to state 260
    ")"  shift, and go to state 261


State 179

   91 lambda_exp: "fn" vpattern "=" • bracketed_exp

    "("  shift, and go to state 47
    "{"  shift, and go to state 48

    bracketed_exp  go to state 262
    unit_exp       go to state 57
    paren_exp      go to state 58
    vtupleExpr     go to state 59
    vstructExpr    go to state 60
    chain_exp      go to state 65


State 180

  160 fn_typespec: "Fn" vpattern • primary_typespec

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84
    "Fn"        shift, and go to state 95
    "("         shift, and go to state 245

    tid               go to state 98
    vid               go to state 247
    primary_typespec  go to state 263
    paren_typespec    go to state 106
    tuple_typespec    go to state 107
    mod_prefix_tid    go to state 108
    mod_prefix        go to state 109
    fn_typespec       go to state 110


State 181

  137 type_query_exp: typespec • type_query_op typespec
  144 typespec_cl2: typespec • "," typespec
  154 paren_typespec: "(" typespec • ")"
  155 tuple_typespec: "(" typespec • "," ")"

    ","   shift, and go to state 264
    "::"  shift, and go to state 188
    ")"   shift, and go to state 265
    ":<"  shift, and go to state 189
    ">:"  shift, and go to state 190

    type_query_op  go to state 191


State 182

  145 typespec_cl2: typespec_cl2 • "," typespec
  156 tuple_typespec: "(" typespec_cl2 • ")"

    ","  shift, and go to state 266
    ")"  shift, and go to state 267


State 183

  158 mod_prefix: vid "." •

    $default  reduce using rule 158 (mod_prefix)


State 184

   56 expr_cl2: expr "," • expr
   68 vtupleExpr: "(" expr "," • ")"

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "fn"                     shift, and go to state 40
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    ")"                      shift, and go to state 268
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    vid             go to state 53
    floatl          go to state 54
    expr            go to state 269
    bracketed_exp   go to state 56
    unit_exp        go to state 57
    paren_exp       go to state 58
    vtupleExpr      go to state 59
    vstructExpr     go to state 60
    primary_exp     go to state 61
    int_expr        go to state 62
    stringls        go to state 63
    if_exp          go to state 64
    chain_exp       go to state 65
    lambda_exp      go to state 66
    postfix_exp     go to state 67
    tcall_exp       go to state 68
    vcall_exp       go to state 69
    dot_name_exp    go to state 70
    dot_index_exp   go to state 71
    unary_exp       go to state 72
    unary_op        go to state 73
    binary_exp      go to state 74
    mul_binary_exp  go to state 75
    add_binary_exp  go to state 76
    cmp_binary_exp  go to state 77
    eq_binary_exp   go to state 78
    and_binary_exp  go to state 79
    xor_binary_exp  go to state 80
    or_binary_exp   go to state 81


State 185

   67 paren_exp: "(" long_exp ")" •

    $default  reduce using rule 67 (paren_exp)


State 186

   57 expr_cl2: expr_cl2 "," • expr

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "fn"                     shift, and go to state 40
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    vid             go to state 53
    floatl          go to state 54
    expr            go to state 270
    bracketed_exp   go to state 56
    unit_exp        go to state 57
    paren_exp       go to state 58
    vtupleExpr      go to state 59
    vstructExpr     go to state 60
    primary_exp     go to state 61
    int_expr        go to state 62
    stringls        go to state 63
    if_exp          go to state 64
    chain_exp       go to state 65
    lambda_exp      go to state 66
    postfix_exp     go to state 67
    tcall_exp       go to state 68
    vcall_exp       go to state 69
    dot_name_exp    go to state 70
    dot_index_exp   go to state 71
    unary_exp       go to state 72
    unary_op        go to state 73
    binary_exp      go to state 74
    mul_binary_exp  go to state 75
    add_binary_exp  go to state 76
    cmp_binary_exp  go to state 77
    eq_binary_exp   go to state 78
    and_binary_exp  go to state 79
    xor_binary_exp  go to state 80
    or_binary_exp   go to state 81


State 187

   69 vtupleExpr: "(" expr_cl2 ")" •

    $default  reduce using rule 69 (vtupleExpr)


State 188

  140 type_query_op: "::" •

    $default  reduce using rule 140 (type_query_op)


State 189

  138 type_query_op: ":<" •

    $default  reduce using rule 138 (type_query_op)


State 190

  139 type_query_op: ">:" •

    $default  reduce using rule 139 (type_query_op)


State 191

  137 type_query_exp: typespec type_query_op • typespec

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84
    "Fn"        shift, and go to state 95
    "("         shift, and go to state 245

    tid               go to state 98
    vid               go to state 247
    typespec          go to state 271
    primary_typespec  go to state 105
    paren_typespec    go to state 106
    tuple_typespec    go to state 107
    mod_prefix_tid    go to state 108
    mod_prefix        go to state 109
    fn_typespec       go to state 110
    postfix_typespec  go to state 111
    tcall_typespec    go to state 112
    dot_typespec      go to state 113
    unary_typespec    go to state 114


State 192

  157 mod_prefix_tid: mod_prefix tid •

    $default  reduce using rule 157 (mod_prefix_tid)


State 193

  159 mod_prefix: mod_prefix vid • "."

    "."  shift, and go to state 272


State 194

  165 dot_typespec: postfix_typespec "." • "<val_id>"

    "<val_id>"  shift, and go to state 273


State 195

  164 tcall_typespec: postfix_typespec "[" • targ_cl "]"

    "<val_id>"               shift, and go to state 11
    "<TypeId>"               shift, and go to state 84
    "if"                     shift, and go to state 39
    "fn"                     shift, and go to state 40
    "Fn"                     shift, and go to state 95
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 96
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    tid               go to state 98
    vid               go to state 99
    floatl            go to state 54
    expr              go to state 223
    bracketed_exp     go to state 56
    unit_exp          go to state 57
    paren_exp         go to state 58
    vtupleExpr        go to state 59
    vstructExpr       go to state 60
    primary_exp       go to state 61
    int_expr          go to state 62
    stringls          go to state 63
    if_exp            go to state 64
    chain_exp         go to state 65
    lambda_exp        go to state 66
    postfix_exp       go to state 67
    tcall_exp         go to state 68
    vcall_exp         go to state 69
    dot_name_exp      go to state 70
    dot_index_exp     go to state 71
    unary_exp         go to state 72
    unary_op          go to state 73
    binary_exp        go to state 74
    mul_binary_exp    go to state 75
    add_binary_exp    go to state 76
    cmp_binary_exp    go to state 77
    eq_binary_exp     go to state 78
    and_binary_exp    go to state 79
    xor_binary_exp    go to state 80
    or_binary_exp     go to state 81
    typespec          go to state 224
    primary_typespec  go to state 105
    paren_typespec    go to state 106
    tuple_typespec    go to state 107
    mod_prefix_tid    go to state 108
    mod_prefix        go to state 109
    fn_typespec       go to state 110
    postfix_typespec  go to state 111
    tcall_typespec    go to state 112
    dot_typespec      go to state 113
    unary_typespec    go to state 114
    targ              go to state 225
    targ_cl           go to state 274


State 196

  187 lpattern: "(" • lpattern_field_cl ")"
  188         | "(" • ")"

    "<val_id>"  shift, and go to state 11
    ")"         shift, and go to state 275

    vid                go to state 197
    lpattern_field     go to state 276
    lpattern_field_cl  go to state 277


State 197

  183 lpattern_field: vid • typespec
  184               | vid •

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84
    "Fn"        shift, and go to state 95
    "("         shift, and go to state 245

    $default  reduce using rule 184 (lpattern_field)

    tid               go to state 98
    vid               go to state 247
    typespec          go to state 278
    primary_typespec  go to state 105
    paren_typespec    go to state 106
    tuple_typespec    go to state 107
    mod_prefix_tid    go to state 108
    mod_prefix        go to state 109
    fn_typespec       go to state 110
    postfix_typespec  go to state 111
    tcall_typespec    go to state 112
    dot_typespec      go to state 113
    unary_typespec    go to state 114


State 198

  189 lpattern_naked: lpattern_field •

    $default  reduce using rule 189 (lpattern_naked)


State 199

  190 lpattern_naked: lpattern •

    $default  reduce using rule 190 (lpattern_naked)


State 200

   15 const_stmt: "const" lpattern_naked • "=" expr

    "="  shift, and go to state 279


State 201

   16 val_stmt: "val" lpattern_naked • "=" expr

    "="  shift, and go to state 280


State 202

   17 var_stmt: "var" lpattern_naked • "=" expr

    "="  shift, and go to state 281


State 203

   18 set_stmt: "set" expr • "=" expr

    "="  shift, and go to state 282


State 204

   19 discard_stmt: "discard" expr •

    $default  reduce using rule 19 (discard_stmt)


State 205

   89 chain_prefix: chain_prefix_stmt ";" •

    $default  reduce using rule 89 (chain_prefix)


State 206

  179 struct_exp_field: vid "=" • expr

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "fn"                     shift, and go to state 40
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    vid             go to state 53
    floatl          go to state 54
    expr            go to state 283
    bracketed_exp   go to state 56
    unit_exp        go to state 57
    paren_exp       go to state 58
    vtupleExpr      go to state 59
    vstructExpr     go to state 60
    primary_exp     go to state 61
    int_expr        go to state 62
    stringls        go to state 63
    if_exp          go to state 64
    chain_exp       go to state 65
    lambda_exp      go to state 66
    postfix_exp     go to state 67
    tcall_exp       go to state 68
    vcall_exp       go to state 69
    dot_name_exp    go to state 70
    dot_index_exp   go to state 71
    unary_exp       go to state 72
    unary_op        go to state 73
    binary_exp      go to state 74
    mul_binary_exp  go to state 75
    add_binary_exp  go to state 76
    cmp_binary_exp  go to state 77
    eq_binary_exp   go to state 78
    and_binary_exp  go to state 79
    xor_binary_exp  go to state 80
    or_binary_exp   go to state 81


State 207

   86 chain_exp: "{" expr "}" •

    $default  reduce using rule 86 (chain_exp)


State 208

   87 chain_exp: "{" chain_prefix "}" •

    $default  reduce using rule 87 (chain_exp)


State 209

   90 chain_prefix: chain_prefix chain_prefix_stmt • ";"

    ";"  shift, and go to state 284


State 210

   88 chain_exp: "{" chain_prefix expr • "}"

    "}"  shift, and go to state 285


State 211

  202 struct_exp_field_cl: struct_exp_field_cl "," • struct_exp_field

    "<val_id>"  shift, and go to state 11

    vid               go to state 286
    struct_exp_field  go to state 287


State 212

   70 vstructExpr: "{" struct_exp_field_cl "}" •

    $default  reduce using rule 70 (vstructExpr)


State 213

  100 dot_name_exp: postfix_exp "." "<val_id>" •

    $default  reduce using rule 100 (dot_name_exp)


State 214

  101 dot_name_exp: postfix_exp "." "<TypeId>" •

    $default  reduce using rule 101 (dot_name_exp)


State 215

  103 dot_index_exp: postfix_exp "." bracketed_exp •

    $default  reduce using rule 103 (dot_index_exp)


State 216

  102 dot_index_exp: postfix_exp "." int_expr •

    $default  reduce using rule 102 (dot_index_exp)


State 217

  175 varg: "out" • expr

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "fn"                     shift, and go to state 40
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    vid             go to state 53
    floatl          go to state 54
    expr            go to state 288
    bracketed_exp   go to state 56
    unit_exp        go to state 57
    paren_exp       go to state 58
    vtupleExpr      go to state 59
    vstructExpr     go to state 60
    primary_exp     go to state 61
    int_expr        go to state 62
    stringls        go to state 63
    if_exp          go to state 64
    chain_exp       go to state 65
    lambda_exp      go to state 66
    postfix_exp     go to state 67
    tcall_exp       go to state 68
    vcall_exp       go to state 69
    dot_name_exp    go to state 70
    dot_index_exp   go to state 71
    unary_exp       go to state 72
    unary_op        go to state 73
    binary_exp      go to state 74
    mul_binary_exp  go to state 75
    add_binary_exp  go to state 76
    cmp_binary_exp  go to state 77
    eq_binary_exp   go to state 78
    and_binary_exp  go to state 79
    xor_binary_exp  go to state 80
    or_binary_exp   go to state 81


State 218

  176 varg: "inout" • expr

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "fn"                     shift, and go to state 40
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    vid             go to state 53
    floatl          go to state 54
    expr            go to state 289
    bracketed_exp   go to state 56
    unit_exp        go to state 57
    paren_exp       go to state 58
    vtupleExpr      go to state 59
    vstructExpr     go to state 60
    primary_exp     go to state 61
    int_expr        go to state 62
    stringls        go to state 63
    if_exp          go to state 64
    chain_exp       go to state 65
    lambda_exp      go to state 66
    postfix_exp     go to state 67
    tcall_exp       go to state 68
    vcall_exp       go to state 69
    dot_name_exp    go to state 70
    dot_index_exp   go to state 71
    unary_exp       go to state 72
    unary_op        go to state 73
    binary_exp      go to state 74
    mul_binary_exp  go to state 75
    add_binary_exp  go to state 76
    cmp_binary_exp  go to state 77
    eq_binary_exp   go to state 78
    and_binary_exp  go to state 79
    xor_binary_exp  go to state 80
    or_binary_exp   go to state 81


State 219

   98 vcall_exp: postfix_exp "(" ")" •

    $default  reduce using rule 98 (vcall_exp)


State 220

  174 varg: expr •

    $default  reduce using rule 174 (varg)


State 221

  177 varg_cl: varg •

    $default  reduce using rule 177 (varg_cl)


State 222

   99 vcall_exp: postfix_exp "(" varg_cl • ")"
  178 varg_cl: varg_cl • "," varg

    ","  shift, and go to state 290
    ")"  shift, and go to state 291


State 223

  171 targ: expr •

    $default  reduce using rule 171 (targ)


State 224

  170 targ: typespec •

    $default  reduce using rule 170 (targ)


State 225

  172 targ_cl: targ •

    $default  reduce using rule 172 (targ_cl)


State 226

   97 tcall_exp: postfix_exp "[" targ_cl • "]"
  173 targ_cl: targ_cl • "," targ

    ","  shift, and go to state 292
    "]"  shift, and go to state 293


State 227

  116 mul_binary_exp: mul_binary_exp mul_binary_op unary_exp •

    $default  reduce using rule 116 (mul_binary_exp)


State 228

  116 mul_binary_exp: mul_binary_exp • mul_binary_op unary_exp
  120 add_binary_exp: add_binary_exp add_binary_op mul_binary_exp •

    "*"  shift, and go to state 138
    "/"  shift, and go to state 139
    "%"  shift, and go to state 140

    $default  reduce using rule 120 (add_binary_exp)

    mul_binary_op  go to state 141


State 229

  120 add_binary_exp: add_binary_exp • add_binary_op mul_binary_exp
  126 cmp_binary_exp: cmp_binary_exp cmp_binary_op add_binary_exp •

    "+"  shift, and go to state 142
    "-"  shift, and go to state 143

    $default  reduce using rule 126 (cmp_binary_exp)

    add_binary_op  go to state 144


State 230

  126 cmp_binary_exp: cmp_binary_exp • cmp_binary_op add_binary_exp
  130 eq_binary_exp: eq_binary_exp eq_binary_op cmp_binary_exp •

    "<"   shift, and go to state 145
    "<="  shift, and go to state 146
    ">"   shift, and go to state 147
    ">="  shift, and go to state 148

    $default  reduce using rule 130 (eq_binary_exp)

    cmp_binary_op  go to state 149


State 231

  130 eq_binary_exp: eq_binary_exp • eq_binary_op cmp_binary_exp
  132 and_binary_exp: and_binary_exp "and" eq_binary_exp •

    "=="  shift, and go to state 150
    "!="  shift, and go to state 151

    $default  reduce using rule 132 (and_binary_exp)

    eq_binary_op  go to state 152


State 232

  132 and_binary_exp: and_binary_exp • "and" eq_binary_exp
  134 xor_binary_exp: xor_binary_exp "xor" and_binary_exp •

    "and"  shift, and go to state 153

    $default  reduce using rule 134 (xor_binary_exp)


State 233

  134 xor_binary_exp: xor_binary_exp • "xor" and_binary_exp
  136 or_binary_exp: or_binary_exp "or" xor_binary_exp •

    "xor"  shift, and go to state 154

    $default  reduce using rule 136 (or_binary_exp)


State 234

   44 using_stmt: "using" vid "." "*" •

    $default  reduce using rule 44 (using_stmt)


State 235

   45 using_stmt: "using" vid "." vid • "*"

    "*"  shift, and go to state 294


State 236

  186 tpattern_field: tid • typespec

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84
    "Fn"        shift, and go to state 95
    "("         shift, and go to state 245

    tid               go to state 98
    vid               go to state 247
    typespec          go to state 295
    primary_typespec  go to state 105
    paren_typespec    go to state 106
    tuple_typespec    go to state 107
    mod_prefix_tid    go to state 108
    mod_prefix        go to state 109
    fn_typespec       go to state 110
    postfix_typespec  go to state 111
    tcall_typespec    go to state 112
    dot_typespec      go to state 113
    unary_typespec    go to state 114


State 237

  185 tpattern_field: vid • typespec

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84
    "Fn"        shift, and go to state 95
    "("         shift, and go to state 245

    tid               go to state 98
    vid               go to state 247
    typespec          go to state 296
    primary_typespec  go to state 105
    paren_typespec    go to state 106
    tuple_typespec    go to state 107
    mod_prefix_tid    go to state 108
    mod_prefix        go to state 109
    fn_typespec       go to state 110
    postfix_typespec  go to state 111
    tcall_typespec    go to state 112
    dot_typespec      go to state 113
    unary_typespec    go to state 114


State 238

  199 tpattern_field_cl: tpattern_field •

    $default  reduce using rule 199 (tpattern_field_cl)


State 239

  193 tpattern: "[" tpattern_field_cl • "]"
  200 tpattern_field_cl: tpattern_field_cl • "," tpattern_field

    ","  shift, and go to state 297
    "]"  shift, and go to state 298


State 240

  194 tpattern: "!" "[" • tpattern_field_cl "]"

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84

    tid                go to state 236
    vid                go to state 237
    tpattern_field     go to state 238
    tpattern_field_cl  go to state 299


State 241

   28 fn_stmt: "fn" vid vpattern "->" • typespec "=" bracketed_exp

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84
    "Fn"        shift, and go to state 95
    "("         shift, and go to state 245

    tid               go to state 98
    vid               go to state 247
    typespec          go to state 300
    primary_typespec  go to state 105
    paren_typespec    go to state 106
    tuple_typespec    go to state 107
    mod_prefix_tid    go to state 108
    mod_prefix        go to state 109
    fn_typespec       go to state 110
    postfix_typespec  go to state 111
    tcall_typespec    go to state 112
    dot_typespec      go to state 113
    unary_typespec    go to state 114


State 242

   30 fn_stmt: "fn" vid vpattern "=" • bracketed_exp

    "("  shift, and go to state 47
    "{"  shift, and go to state 48

    bracketed_exp  go to state 301
    unit_exp       go to state 57
    paren_exp      go to state 58
    vtupleExpr     go to state 59
    vstructExpr    go to state 60
    chain_exp      go to state 65


State 243

   29 fn_stmt: "fn" vid tpattern_seq vpattern • "->" typespec "=" bracketed_exp
   31        | "fn" vid tpattern_seq vpattern • "=" bracketed_exp

    "->"  shift, and go to state 302
    "="   shift, and go to state 303


State 244

  204 tpattern_seq: tpattern_seq tpattern •

    $default  reduce using rule 204 (tpattern_seq)


State 245

  154 paren_typespec: "(" • typespec ")"
  155 tuple_typespec: "(" • typespec "," ")"
  156               | "(" • typespec_cl2 ")"

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84
    "Fn"        shift, and go to state 95
    "("         shift, and go to state 245

    tid               go to state 98
    vid               go to state 247
    typespec          go to state 304
    typespec_cl2      go to state 182
    primary_typespec  go to state 105
    paren_typespec    go to state 106
    tuple_typespec    go to state 107
    mod_prefix_tid    go to state 108
    mod_prefix        go to state 109
    fn_typespec       go to state 110
    postfix_typespec  go to state 111
    tcall_typespec    go to state 112
    dot_typespec      go to state 113
    unary_typespec    go to state 114


State 246

  169 struct_typespec: "{" • struct_typespec_field_cl "}"

    "<val_id>"  shift, and go to state 11

    vid                       go to state 305
    struct_typespec_field     go to state 306
    struct_typespec_field_cl  go to state 307


State 247

  158 mod_prefix: vid • "."

    "."  shift, and go to state 183


State 248

  167 long_typespec: unary_typespec •

    $default  reduce using rule 167 (long_typespec)


State 249

   32 type_stmt: "type" tid "=" long_typespec •

    $default  reduce using rule 32 (type_stmt)


State 250

  168 long_typespec: struct_typespec •

    $default  reduce using rule 168 (long_typespec)


State 251

   33 type_stmt: "type" tid tpattern_seq "=" • long_typespec

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84
    "Fn"        shift, and go to state 95
    "("         shift, and go to state 245
    "{"         shift, and go to state 246

    tid               go to state 98
    vid               go to state 247
    primary_typespec  go to state 105
    paren_typespec    go to state 106
    tuple_typespec    go to state 107
    mod_prefix_tid    go to state 108
    mod_prefix        go to state 109
    fn_typespec       go to state 110
    postfix_typespec  go to state 111
    tcall_typespec    go to state 112
    dot_typespec      go to state 113
    unary_typespec    go to state 248
    long_typespec     go to state 308
    struct_typespec   go to state 250


State 252

   35 enum_field_pl: "|" unprefixed_enum_field_pl •
   38 unprefixed_enum_field_pl: unprefixed_enum_field_pl • "|" enum_field

    "|"  shift, and go to state 253

    $default  reduce using rule 35 (enum_field_pl)


State 253

   38 unprefixed_enum_field_pl: unprefixed_enum_field_pl "|" • enum_field

    "<TypeId>"  shift, and go to state 84

    enum_field  go to state 309
    tid         go to state 168


State 254

   40 enum_field: tid "(" • ")"
   41           | tid "(" • typespec_cl1 ")"

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84
    "Fn"        shift, and go to state 95
    "("         shift, and go to state 245
    ")"         shift, and go to state 310

    tid               go to state 98
    vid               go to state 247
    typespec          go to state 311
    typespec_cl1      go to state 312
    primary_typespec  go to state 105
    paren_typespec    go to state 106
    tuple_typespec    go to state 107
    mod_prefix_tid    go to state 108
    mod_prefix        go to state 109
    fn_typespec       go to state 110
    postfix_typespec  go to state 111
    tcall_typespec    go to state 112
    dot_typespec      go to state 113
    unary_typespec    go to state 114


State 255

   42 typeclass_stmt: "typeclass" tid "<" tid • typespec ">" "=" "{" type_query_exp_sl "}"
   43               | "typeclass" tid "<" tid • typespec ">" tpattern_seq "=" "{" type_query_exp_sl "}"

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84
    "Fn"        shift, and go to state 95
    "("         shift, and go to state 245

    tid               go to state 98
    vid               go to state 247
    typespec          go to state 313
    primary_typespec  go to state 105
    paren_typespec    go to state 106
    tuple_typespec    go to state 107
    mod_prefix_tid    go to state 108
    mod_prefix        go to state 109
    fn_typespec       go to state 110
    postfix_typespec  go to state 111
    tcall_typespec    go to state 112
    dot_typespec      go to state 113
    unary_typespec    go to state 114


State 256

   84 if_exp: "if" bracketed_exp "then" bracketed_exp •
   85       | "if" bracketed_exp "then" bracketed_exp • "else" primary_exp

    "else"  shift, and go to state 314

    $default  reduce using rule 84 (if_exp)


State 257

  181 vpattern_field: "out" vid • typespec

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84
    "Fn"        shift, and go to state 95
    "("         shift, and go to state 245

    tid               go to state 98
    vid               go to state 247
    typespec          go to state 315
    primary_typespec  go to state 105
    paren_typespec    go to state 106
    tuple_typespec    go to state 107
    mod_prefix_tid    go to state 108
    mod_prefix        go to state 109
    fn_typespec       go to state 110
    postfix_typespec  go to state 111
    tcall_typespec    go to state 112
    dot_typespec      go to state 113
    unary_typespec    go to state 114


State 258

  182 vpattern_field: "inout" vid • typespec

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84
    "Fn"        shift, and go to state 95
    "("         shift, and go to state 245

    tid               go to state 98
    vid               go to state 247
    typespec          go to state 316
    primary_typespec  go to state 105
    paren_typespec    go to state 106
    tuple_typespec    go to state 107
    mod_prefix_tid    go to state 108
    mod_prefix        go to state 109
    fn_typespec       go to state 110
    postfix_typespec  go to state 111
    tcall_typespec    go to state 112
    dot_typespec      go to state 113
    unary_typespec    go to state 114


State 259

  180 vpattern_field: vid typespec •

    $default  reduce using rule 180 (vpattern_field)


State 260

  196 vpattern_field_cl: vpattern_field_cl "," • vpattern_field

    "<val_id>"  shift, and go to state 11
    "out"       shift, and go to state 173
    "inout"     shift, and go to state 174

    vid             go to state 176
    vpattern_field  go to state 317


State 261

  191 vpattern: "(" vpattern_field_cl ")" •

    $default  reduce using rule 191 (vpattern)


State 262

   91 lambda_exp: "fn" vpattern "=" bracketed_exp •

    $default  reduce using rule 91 (lambda_exp)


State 263

  160 fn_typespec: "Fn" vpattern primary_typespec •

    $default  reduce using rule 160 (fn_typespec)


State 264

  144 typespec_cl2: typespec "," • typespec
  155 tuple_typespec: "(" typespec "," • ")"

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84
    "Fn"        shift, and go to state 95
    "("         shift, and go to state 245
    ")"         shift, and go to state 318

    tid               go to state 98
    vid               go to state 247
    typespec          go to state 319
    primary_typespec  go to state 105
    paren_typespec    go to state 106
    tuple_typespec    go to state 107
    mod_prefix_tid    go to state 108
    mod_prefix        go to state 109
    fn_typespec       go to state 110
    postfix_typespec  go to state 111
    tcall_typespec    go to state 112
    dot_typespec      go to state 113
    unary_typespec    go to state 114


State 265

  154 paren_typespec: "(" typespec ")" •

    $default  reduce using rule 154 (paren_typespec)


State 266

  145 typespec_cl2: typespec_cl2 "," • typespec

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84
    "Fn"        shift, and go to state 95
    "("         shift, and go to state 245

    tid               go to state 98
    vid               go to state 247
    typespec          go to state 320
    primary_typespec  go to state 105
    paren_typespec    go to state 106
    tuple_typespec    go to state 107
    mod_prefix_tid    go to state 108
    mod_prefix        go to state 109
    fn_typespec       go to state 110
    postfix_typespec  go to state 111
    tcall_typespec    go to state 112
    dot_typespec      go to state 113
    unary_typespec    go to state 114


State 267

  156 tuple_typespec: "(" typespec_cl2 ")" •

    $default  reduce using rule 156 (tuple_typespec)


State 268

   68 vtupleExpr: "(" expr "," ")" •

    $default  reduce using rule 68 (vtupleExpr)


State 269

   56 expr_cl2: expr "," expr •

    $default  reduce using rule 56 (expr_cl2)


State 270

   57 expr_cl2: expr_cl2 "," expr •

    $default  reduce using rule 57 (expr_cl2)


State 271

  137 type_query_exp: typespec type_query_op typespec •

    $default  reduce using rule 137 (type_query_exp)


State 272

  159 mod_prefix: mod_prefix vid "." •

    $default  reduce using rule 159 (mod_prefix)


State 273

  165 dot_typespec: postfix_typespec "." "<val_id>" •

    $default  reduce using rule 165 (dot_typespec)


State 274

  164 tcall_typespec: postfix_typespec "[" targ_cl • "]"
  173 targ_cl: targ_cl • "," targ

    ","  shift, and go to state 292
    "]"  shift, and go to state 321


State 275

  188 lpattern: "(" ")" •

    $default  reduce using rule 188 (lpattern)


State 276

  197 lpattern_field_cl: lpattern_field •

    $default  reduce using rule 197 (lpattern_field_cl)


State 277

  187 lpattern: "(" lpattern_field_cl • ")"
  198 lpattern_field_cl: lpattern_field_cl • "," lpattern_field

    ","  shift, and go to state 322
    ")"  shift, and go to state 323


State 278

  183 lpattern_field: vid typespec •

    $default  reduce using rule 183 (lpattern_field)


State 279

   15 const_stmt: "const" lpattern_naked "=" • expr

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "fn"                     shift, and go to state 40
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    vid             go to state 53
    floatl          go to state 54
    expr            go to state 324
    bracketed_exp   go to state 56
    unit_exp        go to state 57
    paren_exp       go to state 58
    vtupleExpr      go to state 59
    vstructExpr     go to state 60
    primary_exp     go to state 61
    int_expr        go to state 62
    stringls        go to state 63
    if_exp          go to state 64
    chain_exp       go to state 65
    lambda_exp      go to state 66
    postfix_exp     go to state 67
    tcall_exp       go to state 68
    vcall_exp       go to state 69
    dot_name_exp    go to state 70
    dot_index_exp   go to state 71
    unary_exp       go to state 72
    unary_op        go to state 73
    binary_exp      go to state 74
    mul_binary_exp  go to state 75
    add_binary_exp  go to state 76
    cmp_binary_exp  go to state 77
    eq_binary_exp   go to state 78
    and_binary_exp  go to state 79
    xor_binary_exp  go to state 80
    or_binary_exp   go to state 81


State 280

   16 val_stmt: "val" lpattern_naked "=" • expr

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "fn"                     shift, and go to state 40
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    vid             go to state 53
    floatl          go to state 54
    expr            go to state 325
    bracketed_exp   go to state 56
    unit_exp        go to state 57
    paren_exp       go to state 58
    vtupleExpr      go to state 59
    vstructExpr     go to state 60
    primary_exp     go to state 61
    int_expr        go to state 62
    stringls        go to state 63
    if_exp          go to state 64
    chain_exp       go to state 65
    lambda_exp      go to state 66
    postfix_exp     go to state 67
    tcall_exp       go to state 68
    vcall_exp       go to state 69
    dot_name_exp    go to state 70
    dot_index_exp   go to state 71
    unary_exp       go to state 72
    unary_op        go to state 73
    binary_exp      go to state 74
    mul_binary_exp  go to state 75
    add_binary_exp  go to state 76
    cmp_binary_exp  go to state 77
    eq_binary_exp   go to state 78
    and_binary_exp  go to state 79
    xor_binary_exp  go to state 80
    or_binary_exp   go to state 81


State 281

   17 var_stmt: "var" lpattern_naked "=" • expr

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "fn"                     shift, and go to state 40
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    vid             go to state 53
    floatl          go to state 54
    expr            go to state 326
    bracketed_exp   go to state 56
    unit_exp        go to state 57
    paren_exp       go to state 58
    vtupleExpr      go to state 59
    vstructExpr     go to state 60
    primary_exp     go to state 61
    int_expr        go to state 62
    stringls        go to state 63
    if_exp          go to state 64
    chain_exp       go to state 65
    lambda_exp      go to state 66
    postfix_exp     go to state 67
    tcall_exp       go to state 68
    vcall_exp       go to state 69
    dot_name_exp    go to state 70
    dot_index_exp   go to state 71
    unary_exp       go to state 72
    unary_op        go to state 73
    binary_exp      go to state 74
    mul_binary_exp  go to state 75
    add_binary_exp  go to state 76
    cmp_binary_exp  go to state 77
    eq_binary_exp   go to state 78
    and_binary_exp  go to state 79
    xor_binary_exp  go to state 80
    or_binary_exp   go to state 81


State 282

   18 set_stmt: "set" expr "=" • expr

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "fn"                     shift, and go to state 40
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    vid             go to state 53
    floatl          go to state 54
    expr            go to state 327
    bracketed_exp   go to state 56
    unit_exp        go to state 57
    paren_exp       go to state 58
    vtupleExpr      go to state 59
    vstructExpr     go to state 60
    primary_exp     go to state 61
    int_expr        go to state 62
    stringls        go to state 63
    if_exp          go to state 64
    chain_exp       go to state 65
    lambda_exp      go to state 66
    postfix_exp     go to state 67
    tcall_exp       go to state 68
    vcall_exp       go to state 69
    dot_name_exp    go to state 70
    dot_index_exp   go to state 71
    unary_exp       go to state 72
    unary_op        go to state 73
    binary_exp      go to state 74
    mul_binary_exp  go to state 75
    add_binary_exp  go to state 76
    cmp_binary_exp  go to state 77
    eq_binary_exp   go to state 78
    and_binary_exp  go to state 79
    xor_binary_exp  go to state 80
    or_binary_exp   go to state 81


State 283

  179 struct_exp_field: vid "=" expr •

    $default  reduce using rule 179 (struct_exp_field)


State 284

   90 chain_prefix: chain_prefix chain_prefix_stmt ";" •

    $default  reduce using rule 90 (chain_prefix)


State 285

   88 chain_exp: "{" chain_prefix expr "}" •

    $default  reduce using rule 88 (chain_exp)


State 286

  179 struct_exp_field: vid • "=" expr

    "="  shift, and go to state 206


State 287

  202 struct_exp_field_cl: struct_exp_field_cl "," struct_exp_field •

    $default  reduce using rule 202 (struct_exp_field_cl)


State 288

  175 varg: "out" expr •

    $default  reduce using rule 175 (varg)


State 289

  176 varg: "inout" expr •

    $default  reduce using rule 176 (varg)


State 290

  178 varg_cl: varg_cl "," • varg

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "fn"                     shift, and go to state 40
    "not"                    shift, and go to state 41
    "out"                    shift, and go to state 217
    "inout"                  shift, and go to state 218
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    vid             go to state 53
    floatl          go to state 54
    expr            go to state 220
    bracketed_exp   go to state 56
    unit_exp        go to state 57
    paren_exp       go to state 58
    vtupleExpr      go to state 59
    vstructExpr     go to state 60
    primary_exp     go to state 61
    int_expr        go to state 62
    stringls        go to state 63
    if_exp          go to state 64
    chain_exp       go to state 65
    lambda_exp      go to state 66
    postfix_exp     go to state 67
    tcall_exp       go to state 68
    vcall_exp       go to state 69
    dot_name_exp    go to state 70
    dot_index_exp   go to state 71
    unary_exp       go to state 72
    unary_op        go to state 73
    binary_exp      go to state 74
    mul_binary_exp  go to state 75
    add_binary_exp  go to state 76
    cmp_binary_exp  go to state 77
    eq_binary_exp   go to state 78
    and_binary_exp  go to state 79
    xor_binary_exp  go to state 80
    or_binary_exp   go to state 81
    varg            go to state 328


State 291

   99 vcall_exp: postfix_exp "(" varg_cl ")" •

    $default  reduce using rule 99 (vcall_exp)


State 292

  173 targ_cl: targ_cl "," • targ

    "<val_id>"               shift, and go to state 11
    "<TypeId>"               shift, and go to state 84
    "if"                     shift, and go to state 39
    "fn"                     shift, and go to state 40
    "Fn"                     shift, and go to state 95
    "not"                    shift, and go to state 41
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 96
    "{"                      shift, and go to state 48
    "*"                      shift, and go to state 49
    "+"                      shift, and go to state 50
    "-"                      shift, and go to state 51
    "^"                      shift, and go to state 52

    tid               go to state 98
    vid               go to state 99
    floatl            go to state 54
    expr              go to state 223
    bracketed_exp     go to state 56
    unit_exp          go to state 57
    paren_exp         go to state 58
    vtupleExpr        go to state 59
    vstructExpr       go to state 60
    primary_exp       go to state 61
    int_expr          go to state 62
    stringls          go to state 63
    if_exp            go to state 64
    chain_exp         go to state 65
    lambda_exp        go to state 66
    postfix_exp       go to state 67
    tcall_exp         go to state 68
    vcall_exp         go to state 69
    dot_name_exp      go to state 70
    dot_index_exp     go to state 71
    unary_exp         go to state 72
    unary_op          go to state 73
    binary_exp        go to state 74
    mul_binary_exp    go to state 75
    add_binary_exp    go to state 76
    cmp_binary_exp    go to state 77
    eq_binary_exp     go to state 78
    and_binary_exp    go to state 79
    xor_binary_exp    go to state 80
    or_binary_exp     go to state 81
    typespec          go to state 224
    primary_typespec  go to state 105
    paren_typespec    go to state 106
    tuple_typespec    go to state 107
    mod_prefix_tid    go to state 108
    mod_prefix        go to state 109
    fn_typespec       go to state 110
    postfix_typespec  go to state 111
    tcall_typespec    go to state 112
    dot_typespec      go to state 113
    unary_typespec    go to state 114
    targ              go to state 329


State 293

   97 tcall_exp: postfix_exp "[" targ_cl "]" •

    $default  reduce using rule 97 (tcall_exp)


State 294

   45 using_stmt: "using" vid "." vid "*" •

    $default  reduce using rule 45 (using_stmt)


State 295

  186 tpattern_field: tid typespec •

    $default  reduce using rule 186 (tpattern_field)


State 296

  185 tpattern_field: vid typespec •

    $default  reduce using rule 185 (tpattern_field)


State 297

  200 tpattern_field_cl: tpattern_field_cl "," • tpattern_field

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84

    tid             go to state 236
    vid             go to state 237
    tpattern_field  go to state 330


State 298

  193 tpattern: "[" tpattern_field_cl "]" •

    $default  reduce using rule 193 (tpattern)


State 299

  194 tpattern: "!" "[" tpattern_field_cl • "]"
  200 tpattern_field_cl: tpattern_field_cl • "," tpattern_field

    ","  shift, and go to state 297
    "]"  shift, and go to state 331


State 300

   28 fn_stmt: "fn" vid vpattern "->" typespec • "=" bracketed_exp

    "="  shift, and go to state 332


State 301

   30 fn_stmt: "fn" vid vpattern "=" bracketed_exp •

    $default  reduce using rule 30 (fn_stmt)


State 302

   29 fn_stmt: "fn" vid tpattern_seq vpattern "->" • typespec "=" bracketed_exp

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84
    "Fn"        shift, and go to state 95
    "("         shift, and go to state 245

    tid               go to state 98
    vid               go to state 247
    typespec          go to state 333
    primary_typespec  go to state 105
    paren_typespec    go to state 106
    tuple_typespec    go to state 107
    mod_prefix_tid    go to state 108
    mod_prefix        go to state 109
    fn_typespec       go to state 110
    postfix_typespec  go to state 111
    tcall_typespec    go to state 112
    dot_typespec      go to state 113
    unary_typespec    go to state 114


State 303

   31 fn_stmt: "fn" vid tpattern_seq vpattern "=" • bracketed_exp

    "("  shift, and go to state 47
    "{"  shift, and go to state 48

    bracketed_exp  go to state 334
    unit_exp       go to state 57
    paren_exp      go to state 58
    vtupleExpr     go to state 59
    vstructExpr    go to state 60
    chain_exp      go to state 65


State 304

  144 typespec_cl2: typespec • "," typespec
  154 paren_typespec: "(" typespec • ")"
  155 tuple_typespec: "(" typespec • "," ")"

    ","  shift, and go to state 264
    ")"  shift, and go to state 265


State 305

  146 struct_typespec_field: vid • typespec

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84
    "Fn"        shift, and go to state 95
    "("         shift, and go to state 245

    tid               go to state 98
    vid               go to state 247
    typespec          go to state 335
    primary_typespec  go to state 105
    paren_typespec    go to state 106
    tuple_typespec    go to state 107
    mod_prefix_tid    go to state 108
    mod_prefix        go to state 109
    fn_typespec       go to state 110
    postfix_typespec  go to state 111
    tcall_typespec    go to state 112
    dot_typespec      go to state 113
    unary_typespec    go to state 114


State 306

  147 struct_typespec_field_cl: struct_typespec_field •

    $default  reduce using rule 147 (struct_typespec_field_cl)


State 307

  148 struct_typespec_field_cl: struct_typespec_field_cl • "," struct_typespec_field
  169 struct_typespec: "{" struct_typespec_field_cl • "}"

    ","  shift, and go to state 336
    "}"  shift, and go to state 337


State 308

   33 type_stmt: "type" tid tpattern_seq "=" long_typespec •

    $default  reduce using rule 33 (type_stmt)


State 309

   38 unprefixed_enum_field_pl: unprefixed_enum_field_pl "|" enum_field •

    $default  reduce using rule 38 (unprefixed_enum_field_pl)


State 310

   40 enum_field: tid "(" ")" •

    $default  reduce using rule 40 (enum_field)


State 311

  142 typespec_cl1: typespec •

    $default  reduce using rule 142 (typespec_cl1)


State 312

   41 enum_field: tid "(" typespec_cl1 • ")"
  143 typespec_cl1: typespec_cl1 • "," typespec

    ","  shift, and go to state 338
    ")"  shift, and go to state 339


State 313

   42 typeclass_stmt: "typeclass" tid "<" tid typespec • ">" "=" "{" type_query_exp_sl "}"
   43               | "typeclass" tid "<" tid typespec • ">" tpattern_seq "=" "{" type_query_exp_sl "}"

    ">"  shift, and go to state 340


State 314

   85 if_exp: "if" bracketed_exp "then" bracketed_exp "else" • primary_exp

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 39
    "fn"                     shift, and go to state 40
    "42"                     shift, and go to state 42
    "0x2a"                   shift, and go to state 43
    "4.2"                    shift, and go to state 44
    "\"dq-string-literal\""  shift, and go to state 45
    "'sq-string-literal'"    shift, and go to state 46
    "("                      shift, and go to state 47
    "{"                      shift, and go to state 48

    vid            go to state 53
    floatl         go to state 54
    bracketed_exp  go to state 56
    unit_exp       go to state 57
    paren_exp      go to state 58
    vtupleExpr     go to state 59
    vstructExpr    go to state 60
    primary_exp    go to state 341
    int_expr       go to state 62
    stringls       go to state 63
    if_exp         go to state 64
    chain_exp      go to state 65
    lambda_exp     go to state 66


State 315

  181 vpattern_field: "out" vid typespec •

    $default  reduce using rule 181 (vpattern_field)


State 316

  182 vpattern_field: "inout" vid typespec •

    $default  reduce using rule 182 (vpattern_field)


State 317

  196 vpattern_field_cl: vpattern_field_cl "," vpattern_field •

    $default  reduce using rule 196 (vpattern_field_cl)


State 318

  155 tuple_typespec: "(" typespec "," ")" •

    $default  reduce using rule 155 (tuple_typespec)


State 319

  144 typespec_cl2: typespec "," typespec •

    $default  reduce using rule 144 (typespec_cl2)


State 320

  145 typespec_cl2: typespec_cl2 "," typespec •

    $default  reduce using rule 145 (typespec_cl2)


State 321

  164 tcall_typespec: postfix_typespec "[" targ_cl "]" •

    $default  reduce using rule 164 (tcall_typespec)


State 322

  198 lpattern_field_cl: lpattern_field_cl "," • lpattern_field

    "<val_id>"  shift, and go to state 11

    vid             go to state 197
    lpattern_field  go to state 342


State 323

  187 lpattern: "(" lpattern_field_cl ")" •

    $default  reduce using rule 187 (lpattern)


State 324

   15 const_stmt: "const" lpattern_naked "=" expr •

    $default  reduce using rule 15 (const_stmt)


State 325

   16 val_stmt: "val" lpattern_naked "=" expr •

    $default  reduce using rule 16 (val_stmt)


State 326

   17 var_stmt: "var" lpattern_naked "=" expr •

    $default  reduce using rule 17 (var_stmt)


State 327

   18 set_stmt: "set" expr "=" expr •

    $default  reduce using rule 18 (set_stmt)


State 328

  178 varg_cl: varg_cl "," varg •

    $default  reduce using rule 178 (varg_cl)


State 329

  173 targ_cl: targ_cl "," targ •

    $default  reduce using rule 173 (targ_cl)


State 330

  200 tpattern_field_cl: tpattern_field_cl "," tpattern_field •

    $default  reduce using rule 200 (tpattern_field_cl)


State 331

  194 tpattern: "!" "[" tpattern_field_cl "]" •

    $default  reduce using rule 194 (tpattern)


State 332

   28 fn_stmt: "fn" vid vpattern "->" typespec "=" • bracketed_exp

    "("  shift, and go to state 47
    "{"  shift, and go to state 48

    bracketed_exp  go to state 343
    unit_exp       go to state 57
    paren_exp      go to state 58
    vtupleExpr     go to state 59
    vstructExpr    go to state 60
    chain_exp      go to state 65


State 333

   29 fn_stmt: "fn" vid tpattern_seq vpattern "->" typespec • "=" bracketed_exp

    "="  shift, and go to state 344


State 334

   31 fn_stmt: "fn" vid tpattern_seq vpattern "=" bracketed_exp •

    $default  reduce using rule 31 (fn_stmt)


State 335

  146 struct_typespec_field: vid typespec •

    $default  reduce using rule 146 (struct_typespec_field)


State 336

  148 struct_typespec_field_cl: struct_typespec_field_cl "," • struct_typespec_field

    "<val_id>"  shift, and go to state 11

    vid                    go to state 305
    struct_typespec_field  go to state 345


State 337

  169 struct_typespec: "{" struct_typespec_field_cl "}" •

    $default  reduce using rule 169 (struct_typespec)


State 338

  143 typespec_cl1: typespec_cl1 "," • typespec

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84
    "Fn"        shift, and go to state 95
    "("         shift, and go to state 245

    tid               go to state 98
    vid               go to state 247
    typespec          go to state 346
    primary_typespec  go to state 105
    paren_typespec    go to state 106
    tuple_typespec    go to state 107
    mod_prefix_tid    go to state 108
    mod_prefix        go to state 109
    fn_typespec       go to state 110
    postfix_typespec  go to state 111
    tcall_typespec    go to state 112
    dot_typespec      go to state 113
    unary_typespec    go to state 114


State 339

   41 enum_field: tid "(" typespec_cl1 ")" •

    $default  reduce using rule 41 (enum_field)


State 340

   42 typeclass_stmt: "typeclass" tid "<" tid typespec ">" • "=" "{" type_query_exp_sl "}"
   43               | "typeclass" tid "<" tid typespec ">" • tpattern_seq "=" "{" type_query_exp_sl "}"

    "["  shift, and go to state 157
    "="  shift, and go to state 347
    "!"  shift, and go to state 158

    tpattern      go to state 160
    tpattern_seq  go to state 348


State 341

   85 if_exp: "if" bracketed_exp "then" bracketed_exp "else" primary_exp •

    $default  reduce using rule 85 (if_exp)


State 342

  198 lpattern_field_cl: lpattern_field_cl "," lpattern_field •

    $default  reduce using rule 198 (lpattern_field_cl)


State 343

   28 fn_stmt: "fn" vid vpattern "->" typespec "=" bracketed_exp •

    $default  reduce using rule 28 (fn_stmt)


State 344

   29 fn_stmt: "fn" vid tpattern_seq vpattern "->" typespec "=" • bracketed_exp

    "("  shift, and go to state 47
    "{"  shift, and go to state 48

    bracketed_exp  go to state 349
    unit_exp       go to state 57
    paren_exp      go to state 58
    vtupleExpr     go to state 59
    vstructExpr    go to state 60
    chain_exp      go to state 65


State 345

  148 struct_typespec_field_cl: struct_typespec_field_cl "," struct_typespec_field •

    $default  reduce using rule 148 (struct_typespec_field_cl)


State 346

  143 typespec_cl1: typespec_cl1 "," typespec •

    $default  reduce using rule 143 (typespec_cl1)


State 347

   42 typeclass_stmt: "typeclass" tid "<" tid typespec ">" "=" • "{" type_query_exp_sl "}"

    "{"  shift, and go to state 350


State 348

   43 typeclass_stmt: "typeclass" tid "<" tid typespec ">" tpattern_seq • "=" "{" type_query_exp_sl "}"
  204 tpattern_seq: tpattern_seq • tpattern

    "["  shift, and go to state 157
    "="  shift, and go to state 351
    "!"  shift, and go to state 158

    tpattern  go to state 244


State 349

   29 fn_stmt: "fn" vid tpattern_seq vpattern "->" typespec "=" bracketed_exp •

    $default  reduce using rule 29 (fn_stmt)


State 350

   42 typeclass_stmt: "typeclass" tid "<" tid typespec ">" "=" "{" • type_query_exp_sl "}"

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84
    "Fn"        shift, and go to state 95
    "("         shift, and go to state 245

    tid                go to state 98
    vid                go to state 247
    type_query_exp_sl  go to state 352
    type_query_exp     go to state 353
    typespec           go to state 104
    primary_typespec   go to state 105
    paren_typespec     go to state 106
    tuple_typespec     go to state 107
    mod_prefix_tid     go to state 108
    mod_prefix         go to state 109
    fn_typespec        go to state 110
    postfix_typespec   go to state 111
    tcall_typespec     go to state 112
    dot_typespec       go to state 113
    unary_typespec     go to state 114


State 351

   43 typeclass_stmt: "typeclass" tid "<" tid typespec ">" tpattern_seq "=" • "{" type_query_exp_sl "}"

    "{"  shift, and go to state 354


State 352

   42 typeclass_stmt: "typeclass" tid "<" tid typespec ">" "=" "{" type_query_exp_sl • "}"
   59 type_query_exp_sl: type_query_exp_sl • type_query_exp ";"

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84
    "Fn"        shift, and go to state 95
    "("         shift, and go to state 245
    "}"         shift, and go to state 355

    tid               go to state 98
    vid               go to state 247
    type_query_exp    go to state 356
    typespec          go to state 104
    primary_typespec  go to state 105
    paren_typespec    go to state 106
    tuple_typespec    go to state 107
    mod_prefix_tid    go to state 108
    mod_prefix        go to state 109
    fn_typespec       go to state 110
    postfix_typespec  go to state 111
    tcall_typespec    go to state 112
    dot_typespec      go to state 113
    unary_typespec    go to state 114


State 353

   58 type_query_exp_sl: type_query_exp • ";"

    ";"  shift, and go to state 357


State 354

   43 typeclass_stmt: "typeclass" tid "<" tid typespec ">" tpattern_seq "=" "{" • type_query_exp_sl "}"

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84
    "Fn"        shift, and go to state 95
    "("         shift, and go to state 245

    tid                go to state 98
    vid                go to state 247
    type_query_exp_sl  go to state 358
    type_query_exp     go to state 353
    typespec           go to state 104
    primary_typespec   go to state 105
    paren_typespec     go to state 106
    tuple_typespec     go to state 107
    mod_prefix_tid     go to state 108
    mod_prefix         go to state 109
    fn_typespec        go to state 110
    postfix_typespec   go to state 111
    tcall_typespec     go to state 112
    dot_typespec       go to state 113
    unary_typespec     go to state 114


State 355

   42 typeclass_stmt: "typeclass" tid "<" tid typespec ">" "=" "{" type_query_exp_sl "}" •

    $default  reduce using rule 42 (typeclass_stmt)


State 356

   59 type_query_exp_sl: type_query_exp_sl type_query_exp • ";"

    ";"  shift, and go to state 359


State 357

   58 type_query_exp_sl: type_query_exp ";" •

    $default  reduce using rule 58 (type_query_exp_sl)


State 358

   43 typeclass_stmt: "typeclass" tid "<" tid typespec ">" tpattern_seq "=" "{" type_query_exp_sl • "}"
   59 type_query_exp_sl: type_query_exp_sl • type_query_exp ";"

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 84
    "Fn"        shift, and go to state 95
    "("         shift, and go to state 245
    "}"         shift, and go to state 360

    tid               go to state 98
    vid               go to state 247
    type_query_exp    go to state 356
    typespec          go to state 104
    primary_typespec  go to state 105
    paren_typespec    go to state 106
    tuple_typespec    go to state 107
    mod_prefix_tid    go to state 108
    mod_prefix        go to state 109
    fn_typespec       go to state 110
    postfix_typespec  go to state 111
    tcall_typespec    go to state 112
    dot_typespec      go to state 113
    unary_typespec    go to state 114


State 359

   59 type_query_exp_sl: type_query_exp_sl type_query_exp ";" •

    $default  reduce using rule 59 (type_query_exp_sl)


State 360

   43 typeclass_stmt: "typeclass" tid "<" tid typespec ">" tpattern_seq "=" "{" type_query_exp_sl "}" •

    $default  reduce using rule 43 (typeclass_stmt)
