Terminals unused in grammar

    "__42__"
    "struct"
    "match"
    "with"
    "import"
    "extern"
    "func"
    "lambda"
    "^"
    "&"
    "!"
    "|"
    "EOS"
    "<null>"


Grammar

    0 $accept: script $end

    1 script: script_header script_field_sl

    2 script_header: %empty
    3              | script_header script_header_stmt ";"

    4 script_header_stmt: import_stmt

    5 script_field: "mod" vid mod_exp

    6 script_field_sl: script_field ";"
    7                | script_field_sl script_field ";"

    8 mod_exp: "{" mod_field_sl "}"
    9        | tpattern "{" mod_field_sl "}"
   10        | "{" "}"
   11        | tpattern "{" "}"

   12 mod_field_sl: mod_field ";"
   13             | mod_field_sl mod_field ";"

   14 mod_field: vid ":" long_exp
   15          | tid ":" long_type_spec
   16          | cid ":" class_exp_class_spec
   17          | "mod" vid mod_exp

   18 import_stmt: "mod" vid "from" stringl "as" stringl

   19 chain_prefix_stmt: const_stmt
   20                  | val_stmt
   21                  | var_stmt
   22                  | set_stmt
   23                  | discard_stmt

   24 const_stmt: "const" lpattern "=" expr

   25 val_stmt: "val" lpattern "=" expr

   26 var_stmt: "var" lpattern "=" expr

   27 set_stmt: "set" expr "=" expr

   28 discard_stmt: "discard" expr

   29 tid: "TypeId"

   30 vid: "val_id"

   31 cid: "CLS_ID"

   32 floatl: "4.2"

   33 stringl: "'sq-string-literal'"
   34        | "\"dq-string-literal\""

   35 mod_prefix: vid "::"
   36           | vid "[" targ_cl "]" "::"
   37           | mod_prefix vid "::"
   38           | mod_prefix vid "[" targ_cl "]" "::"

   39 expr: binary_exp

   40 long_exp: expr
   41         | lambda_exp

   42 expr_cl2: expr "," expr
   43         | expr_cl2 "," expr

   44 type_query_exp_sl: type_query_exp ";"
   45                  | type_query_exp_sl type_query_exp ";"

   46 bracketed_exp: paren_exp
   47              | vtupleExpr
   48              | vstructExpr
   49              | chain_exp

   50 paren_exp: "(" long_exp ")"

   51 vtupleExpr: "(" ")"
   52           | "(" expr "," ")"
   53           | "(" expr_cl2 ")"

   54 vstructExpr: "{" struct_exp_field_cl "}"

   55 primary_exp: bracketed_exp
   56            | vid
   57            | int_expr
   58            | floatl
   59            | stringls
   60            | if_exp
   61            | mod_prefix vid

   62 int_expr: "42"
   63         | "0x2a"
   64         | "42u"
   65         | "0x2Au"

   66 stringls: "'sq-string-literal'"
   67         | "\"dq-string-literal\""
   68         | stringls "'sq-string-literal'"
   69         | stringls "\"dq-string-literal\""

   70 if_exp: "if" bracketed_exp "then" bracketed_exp
   71       | "if" bracketed_exp "then" bracketed_exp "else" primary_exp

   72 chain_exp: "{" long_exp "}"
   73          | "{" chain_prefix "}"
   74          | "{" chain_prefix long_exp "}"

   75 chain_prefix: chain_prefix_stmt ";"
   76             | chain_prefix chain_prefix_stmt ";"

   77 lambda_exp: fn_type_spec bracketed_exp

   78 postfix_exp: primary_exp
   79            | vcall_exp
   80            | dot_name_exp
   81            | dot_index_exp

   82 vcall_exp: postfix_exp "(" ")"
   83          | postfix_exp "(" varg_cl ")"

   84 dot_name_exp: postfix_exp "." "val_id"
   85             | type_spec "::" "TypeId"
   86             | type_spec "::" "TypeId" "using" paren_exp

   87 dot_index_exp: postfix_exp "." int_expr
   88              | postfix_exp "." bracketed_exp

   89 unary_exp: postfix_exp
   90          | unary_op unary_exp

   91 unary_op: "+"
   92         | "-"
   93         | "not"

   94 binary_exp: or_binary_exp

   95 mul_binary_op: "*"
   96              | "/"
   97              | "%"

   98 mul_binary_exp: unary_exp
   99               | mul_binary_exp mul_binary_op unary_exp

  100 add_binary_op: "+"
  101              | "-"

  102 add_binary_exp: mul_binary_exp
  103               | add_binary_exp add_binary_op mul_binary_exp

  104 cmp_binary_op: "<"
  105              | "<="
  106              | ">"
  107              | ">="

  108 cmp_binary_exp: add_binary_exp
  109               | cmp_binary_exp cmp_binary_op add_binary_exp

  110 eq_binary_op: "=="
  111             | "!="

  112 eq_binary_exp: cmp_binary_exp
  113              | eq_binary_exp eq_binary_op cmp_binary_exp

  114 and_binary_exp: eq_binary_exp
  115               | and_binary_exp "and" eq_binary_exp

  116 xor_binary_exp: and_binary_exp
  117               | xor_binary_exp "xor" and_binary_exp

  118 or_binary_exp: xor_binary_exp
  119              | or_binary_exp "or" xor_binary_exp

  120 type_query_exp: type_spec type_query_op type_spec

  121 type_query_op: ":<"
  122              | ">:"
  123              | "=="

  124 type_spec_cl2: type_spec "," type_spec
  125              | type_spec_cl2 "," type_spec

  126 type_spec: tid
  127          | mod_prefix_tid
  128          | tuple_type_spec
  129          | array_type_spec

  130 long_type_spec: type_spec
  131               | struct_type_spec
  132               | enum_type_spec
  133               | fn_type_spec

  134 mod_prefix_tid: mod_prefix tid

  135 tuple_type_spec: "{" type_spec "}"
  136                | "{" type_spec_cl2 "}"

  137 array_type_spec: "[" type_spec "*" expr "]"

  138 struct_type_spec: "{" struct_type_spec_field_cl "}"

  139 struct_type_spec_field_cl: struct_type_spec_field
  140                          | struct_type_spec_field_cl "," struct_type_spec_field

  141 struct_type_spec_field: vid long_type_spec

  142 enum_type_spec_field: tid
  143                     | tid long_type_spec

  144 enum_type_spec_field_cl: enum_type_spec_field
  145                        | enum_type_spec_field_cl "," enum_type_spec_field

  146 enum_type_spec: "enum" "{" enum_type_spec_field_cl "}"

  147 fn_type_spec: vpattern "->" type_spec

  148 targ: type_spec
  149     | expr

  150 targ_cl: targ
  151        | targ_cl "," targ

  152 varg: expr
  153     | "out" expr
  154     | "inout" expr

  155 varg_cl: varg
  156        | varg_cl "," varg

  157 class_spec: primary_class_spec

  158 primary_class_spec: cid
  159                   | mod_prefix_cid_class_spec
  160                   | class_exp_class_spec

  161 mod_prefix_cid_class_spec: mod_prefix cid

  162 class_exp_class_spec: "cls" "(" tid class_spec ")" "{" type_query_exp_sl "}"

  163 struct_exp_field: vid ":" expr

  164 vpattern_field: vid type_spec
  165               | "out" vid type_spec
  166               | "inout" vid type_spec

  167 lpattern_field: vid type_spec
  168               | vid

  169 tpattern_field: vid type_spec
  170               | tid class_spec

  171 destructured_lpattern: "{" lpattern_field_cl "}"

  172 lpattern: lpattern_field
  173         | destructured_lpattern

  174 vpattern: "(" vpattern_field_cl ")"
  175         | "(" ")"

  176 tpattern: "[" tpattern_field_cl1 "]"

  177 vpattern_field_cl: vpattern_field
  178                  | vpattern_field_cl "," vpattern_field

  179 lpattern_field_cl: lpattern_field
  180                  | lpattern_field_cl "," lpattern_field

  181 tpattern_field_cl1: tpattern_field
  182                   | tpattern_field_cl1 "," tpattern_field

  183 struct_exp_field_cl: struct_exp_field
  184                    | struct_exp_field_cl "," struct_exp_field


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    "val_id" <TokenInfo> (258) 30 84
    "TypeId" <TokenInfo> (259) 29 85 86
    "CLS_ID" <TokenInfo> (260) 31
    "__42__" <TokenInfo> (261)
    "using" (262) 86
    "mod" (263) 5 17 18
    "struct" (264)
    "enum" (265) 146
    "cls" (266) 162
    "if" (267) 70 71
    "then" (268) 70 71
    "else" (269) 71
    "match" (270)
    "with" (271)
    "import" (272)
    "extern" (273)
    "from" (274) 18
    "const" (275) 24
    "val" (276) 25
    "var" (277) 26
    "set" (278) 27
    "func" (279)
    "lambda" (280)
    "and" (281) 115
    "xor" (282) 117
    "or" (283) 119
    "not" (284) 93
    "out" (285) 153 165
    "inout" (286) 154 166
    "discard" (287) 28
    "as" (288) 18
    "42" <TokenInfo> (289) 62
    "0x2a" <TokenInfo> (290) 63
    "42u" <TokenInfo> (291) 64
    "0x2Au" <TokenInfo> (292) 65
    "4.2" <TokenInfo> (293) 32
    "\"dq-string-literal\"" <TokenInfo> (294) 34 67 69
    "'sq-string-literal'" <TokenInfo> (295) 33 66 68
    "." (296) 84 87 88
    ":" (297) 14 15 16 163
    "," (298) 42 43 52 124 125 140 145 151 156 178 180 182 184
    ";" (299) 3 6 7 12 13 44 45 75 76
    "::" (300) 35 36 37 38 85 86
    "(" (301) 50 51 52 53 82 83 162 174 175
    ")" (302) 50 51 52 53 82 83 162 174 175
    "[" (303) 36 38 137 176
    "]" (304) 36 38 137 176
    "{" (305) 8 9 10 11 54 72 73 74 135 136 138 146 162 171
    "}" (306) 8 9 10 11 54 72 73 74 135 136 138 146 162 171
    "->" (307) 147
    "*" (308) 95 137
    "/" (309) 96
    "%" (310) 97
    "+" (311) 91 100
    "-" (312) 92 101
    "<" (313) 104
    "<=" (314) 105
    ">" (315) 106
    ">=" (316) 107
    "=" (317) 24 25 26 27
    "==" (318) 110 123
    "!=" (319) 111
    "^" (320)
    "&" (321)
    "!" (322)
    "|" (323)
    "EOS" (324)
    ":<" (325) 121
    ">:" (326) 122
    "<null>" (327)


Nonterminals, with rules where they appear

    $accept (73)
        on left: 0
    script <pdm::ast::Script*> (74)
        on left: 1
        on right: 0
    script_header <std::vector<pdm::ast::HeaderStmt*>> (75)
        on left: 2 3
        on right: 1 3
    script_header_stmt <pdm::ast::HeaderStmt*> (76)
        on left: 4
        on right: 3
    script_field <pdm::ast::Script::Field*> (77)
        on left: 5
        on right: 6 7
    script_field_sl <std::vector<pdm::ast::Script::Field*>> (78)
        on left: 6 7
        on right: 1 7
    mod_exp <pdm::ast::ModExp*> (79)
        on left: 8 9 10 11
        on right: 5 17
    mod_field_sl <std::vector<pdm::ast::ModExp::Field*>> (80)
        on left: 12 13
        on right: 8 9 13
    mod_field <pdm::ast::ModExp::Field*> (81)
        on left: 14 15 16 17
        on right: 12 13
    import_stmt <pdm::ast::HeaderStmt*> (82)
        on left: 18
        on right: 4
    chain_prefix_stmt <pdm::ast::Stmt*> (83)
        on left: 19 20 21 22 23
        on right: 75 76
    const_stmt <pdm::ast::Stmt*> (84)
        on left: 24
        on right: 19
    val_stmt <pdm::ast::Stmt*> (85)
        on left: 25
        on right: 20
    var_stmt <pdm::ast::Stmt*> (86)
        on left: 26
        on right: 21
    set_stmt <pdm::ast::Stmt*> (87)
        on left: 27
        on right: 22
    discard_stmt <pdm::ast::Stmt*> (88)
        on left: 28
        on right: 23
    tid <TokenInfo> (89)
        on left: 29
        on right: 15 126 134 142 143 162 170
    vid <TokenInfo> (90)
        on left: 30
        on right: 5 14 17 18 35 36 37 38 56 61 141 163 164 165 166 167 168 169
    cid <TokenInfo> (91)
        on left: 31
        on right: 16 158 161
    floatl <TokenInfo> (92)
        on left: 32
        on right: 58
    stringl <TokenInfo> (93)
        on left: 33 34
        on right: 18
    mod_prefix <pdm::ast::ModAddress*> (94)
        on left: 35 36 37 38
        on right: 37 38 61 134 161
    expr <pdm::ast::Exp*> (95)
        on left: 39
        on right: 24 25 26 27 28 40 42 43 52 137 149 152 153 154 163
    long_exp <pdm::ast::Exp*> (96)
        on left: 40 41
        on right: 14 50 72 74
    expr_cl2 <std::vector<pdm::ast::Exp*>> (97)
        on left: 42 43
        on right: 43 53
    type_query_exp_sl <std::vector<pdm::ast::TypeQueryExp*>> (98)
        on left: 44 45
        on right: 45 162
    bracketed_exp <pdm::ast::Exp*> (99)
        on left: 46 47 48 49
        on right: 55 70 71 77 88
    paren_exp <pdm::ast::Exp*> (100)
        on left: 50
        on right: 46 86
    vtupleExpr <pdm::ast::Exp*> (101)
        on left: 51 52 53
        on right: 47
    vstructExpr <pdm::ast::Exp*> (102)
        on left: 54
        on right: 48
    primary_exp <pdm::ast::Exp*> (103)
        on left: 55 56 57 58 59 60 61
        on right: 71 78
    int_expr <pdm::ast::Exp*> (104)
        on left: 62 63 64 65
        on right: 57 87
    stringls <std::vector<pdm::ast::StringExp::Piece>> (105)
        on left: 66 67 68 69
        on right: 59 68 69
    if_exp <pdm::ast::Exp*> (106)
        on left: 70 71
        on right: 60
    chain_exp <pdm::ast::Exp*> (107)
        on left: 72 73 74
        on right: 49
    chain_prefix <std::vector<pdm::ast::Stmt*>> (108)
        on left: 75 76
        on right: 73 74 76
    lambda_exp <pdm::ast::Exp*> (109)
        on left: 77
        on right: 41
    postfix_exp <pdm::ast::Exp*> (110)
        on left: 78 79 80 81
        on right: 82 83 84 87 88 89
    vcall_exp <pdm::ast::Exp*> (111)
        on left: 82 83
        on right: 79
    dot_name_exp <pdm::ast::Exp*> (112)
        on left: 84 85 86
        on right: 80
    dot_index_exp <pdm::ast::Exp*> (113)
        on left: 87 88
        on right: 81
    unary_exp <pdm::ast::Exp*> (114)
        on left: 89 90
        on right: 90 98 99
    unary_op <pdm::ast::UnaryOperator> (115)
        on left: 91 92 93
        on right: 90
    binary_exp <pdm::ast::Exp*> (116)
        on left: 94
        on right: 39
    mul_binary_op <pdm::ast::BinaryOperator> (117)
        on left: 95 96 97
        on right: 99
    mul_binary_exp <pdm::ast::Exp*> (118)
        on left: 98 99
        on right: 99 102 103
    add_binary_op <pdm::ast::BinaryOperator> (119)
        on left: 100 101
        on right: 103
    add_binary_exp <pdm::ast::Exp*> (120)
        on left: 102 103
        on right: 103 108 109
    cmp_binary_op <pdm::ast::BinaryOperator> (121)
        on left: 104 105 106 107
        on right: 109
    cmp_binary_exp <pdm::ast::Exp*> (122)
        on left: 108 109
        on right: 109 112 113
    eq_binary_op <pdm::ast::BinaryOperator> (123)
        on left: 110 111
        on right: 113
    eq_binary_exp <pdm::ast::Exp*> (124)
        on left: 112 113
        on right: 113 114 115
    and_binary_exp <pdm::ast::Exp*> (125)
        on left: 114 115
        on right: 115 116 117
    xor_binary_exp <pdm::ast::Exp*> (126)
        on left: 116 117
        on right: 117 118 119
    or_binary_exp <pdm::ast::Exp*> (127)
        on left: 118 119
        on right: 94 119
    type_query_exp <pdm::ast::TypeQueryExp*> (128)
        on left: 120
        on right: 44 45
    type_query_op <pdm::ast::TypeQueryKind> (129)
        on left: 121 122 123
        on right: 120
    type_spec_cl2 <std::vector<pdm::ast::TypeSpec*>> (130)
        on left: 124 125
        on right: 125 136
    type_spec <pdm::ast::TypeSpec*> (131)
        on left: 126 127 128 129
        on right: 85 86 120 124 125 130 135 137 147 148 164 165 166 167 169
    long_type_spec <pdm::ast::TypeSpec*> (132)
        on left: 130 131 132 133
        on right: 15 141 143
    mod_prefix_tid <pdm::ast::TypeSpec*> (133)
        on left: 134
        on right: 127
    tuple_type_spec <pdm::ast::TypeSpec*> (134)
        on left: 135 136
        on right: 128
    array_type_spec <pdm::ast::TypeSpec*> (135)
        on left: 137
        on right: 129
    struct_type_spec <pdm::ast::TypeSpec*> (136)
        on left: 138
        on right: 131
    struct_type_spec_field_cl <std::vector<pdm::ast::StructTypeSpec::Field*>> (137)
        on left: 139 140
        on right: 138 140
    struct_type_spec_field <pdm::ast::StructTypeSpec::Field*> (138)
        on left: 141
        on right: 139 140
    enum_type_spec_field <pdm::ast::EnumTypeSpec::Field*> (139)
        on left: 142 143
        on right: 144 145
    enum_type_spec_field_cl <std::vector<pdm::ast::EnumTypeSpec::Field*>> (140)
        on left: 144 145
        on right: 145 146
    enum_type_spec <pdm::ast::TypeSpec*> (141)
        on left: 146
        on right: 132
    fn_type_spec <pdm::ast::FnTypeSpec*> (142)
        on left: 147
        on right: 77 133
    targ <pdm::ast::TArg*> (143)
        on left: 148 149
        on right: 150 151
    targ_cl <std::vector<pdm::ast::TArg*>> (144)
        on left: 150 151
        on right: 36 38 151
    varg <pdm::ast::VArg*> (145)
        on left: 152 153 154
        on right: 155 156
    varg_cl <std::vector<pdm::ast::VArg*>> (146)
        on left: 155 156
        on right: 83 156
    class_spec <pdm::ast::ClassSpec*> (147)
        on left: 157
        on right: 162 170
    primary_class_spec <pdm::ast::ClassSpec*> (148)
        on left: 158 159 160
        on right: 157
    mod_prefix_cid_class_spec <pdm::ast::ClassSpec*> (149)
        on left: 161
        on right: 159
    class_exp_class_spec <pdm::ast::ClassSpec*> (150)
        on left: 162
        on right: 16 160
    struct_exp_field <pdm::ast::StructExp::Field*> (151)
        on left: 163
        on right: 183 184
    vpattern_field <pdm::ast::VPattern::Field*> (152)
        on left: 164 165 166
        on right: 177 178
    lpattern_field <pdm::ast::LPattern::Field*> (153)
        on left: 167 168
        on right: 172 179 180
    tpattern_field <pdm::ast::TPattern::Field*> (154)
        on left: 169 170
        on right: 181 182
    destructured_lpattern <pdm::ast::LPattern*> (155)
        on left: 171
        on right: 173
    lpattern <pdm::ast::LPattern*> (156)
        on left: 172 173
        on right: 24 25 26
    vpattern <pdm::ast::VPattern*> (157)
        on left: 174 175
        on right: 147
    tpattern <pdm::ast::TPattern*> (158)
        on left: 176
        on right: 9 11
    vpattern_field_cl <std::vector<pdm::ast::VPattern::Field*>> (159)
        on left: 177 178
        on right: 174 178
    lpattern_field_cl <std::vector<pdm::ast::LPattern::Field*>> (160)
        on left: 179 180
        on right: 171 180
    tpattern_field_cl1 <std::vector<pdm::ast::TPattern::Field*>> (161)
        on left: 181 182
        on right: 176 182
    struct_exp_field_cl <std::vector<pdm::ast::StructExp::Field*>> (162)
        on left: 183 184
        on right: 54 184


State 0

    0 $accept: • script $end

    $default  reduce using rule 2 (script_header)

    script         go to state 1
    script_header  go to state 2


State 1

    0 $accept: script • $end

    $end  shift, and go to state 3


State 2

    1 script: script_header • script_field_sl
    3 script_header: script_header • script_header_stmt ";"

    "mod"  shift, and go to state 4

    script_header_stmt  go to state 5
    script_field        go to state 6
    script_field_sl     go to state 7
    import_stmt         go to state 8


State 3

    0 $accept: script $end •

    $default  accept


State 4

    5 script_field: "mod" • vid mod_exp
   18 import_stmt: "mod" • vid "from" stringl "as" stringl

    "val_id"  shift, and go to state 9

    vid  go to state 10


State 5

    3 script_header: script_header script_header_stmt • ";"

    ";"  shift, and go to state 11


State 6

    6 script_field_sl: script_field • ";"

    ";"  shift, and go to state 12


State 7

    1 script: script_header script_field_sl •
    7 script_field_sl: script_field_sl • script_field ";"

    "mod"  shift, and go to state 13

    $default  reduce using rule 1 (script)

    script_field  go to state 14


State 8

    4 script_header_stmt: import_stmt •

    $default  reduce using rule 4 (script_header_stmt)


State 9

   30 vid: "val_id" •

    $default  reduce using rule 30 (vid)


State 10

    5 script_field: "mod" vid • mod_exp
   18 import_stmt: "mod" vid • "from" stringl "as" stringl

    "from"  shift, and go to state 15
    "["     shift, and go to state 16
    "{"     shift, and go to state 17

    mod_exp   go to state 18
    tpattern  go to state 19


State 11

    3 script_header: script_header script_header_stmt ";" •

    $default  reduce using rule 3 (script_header)


State 12

    6 script_field_sl: script_field ";" •

    $default  reduce using rule 6 (script_field_sl)


State 13

    5 script_field: "mod" • vid mod_exp

    "val_id"  shift, and go to state 9

    vid  go to state 20


State 14

    7 script_field_sl: script_field_sl script_field • ";"

    ";"  shift, and go to state 21


State 15

   18 import_stmt: "mod" vid "from" • stringl "as" stringl

    "\"dq-string-literal\""  shift, and go to state 22
    "'sq-string-literal'"    shift, and go to state 23

    stringl  go to state 24


State 16

  176 tpattern: "[" • tpattern_field_cl1 "]"

    "val_id"  shift, and go to state 9
    "TypeId"  shift, and go to state 25

    tid                 go to state 26
    vid                 go to state 27
    tpattern_field      go to state 28
    tpattern_field_cl1  go to state 29


State 17

    8 mod_exp: "{" • mod_field_sl "}"
   10        | "{" • "}"

    "val_id"  shift, and go to state 9
    "TypeId"  shift, and go to state 25
    "CLS_ID"  shift, and go to state 30
    "mod"     shift, and go to state 31
    "}"       shift, and go to state 32

    mod_field_sl  go to state 33
    mod_field     go to state 34
    tid           go to state 35
    vid           go to state 36
    cid           go to state 37


State 18

    5 script_field: "mod" vid mod_exp •

    $default  reduce using rule 5 (script_field)


State 19

    9 mod_exp: tpattern • "{" mod_field_sl "}"
   11        | tpattern • "{" "}"

    "{"  shift, and go to state 38


State 20

    5 script_field: "mod" vid • mod_exp

    "["  shift, and go to state 16
    "{"  shift, and go to state 17

    mod_exp   go to state 18
    tpattern  go to state 19


State 21

    7 script_field_sl: script_field_sl script_field ";" •

    $default  reduce using rule 7 (script_field_sl)


State 22

   34 stringl: "\"dq-string-literal\"" •

    $default  reduce using rule 34 (stringl)


State 23

   33 stringl: "'sq-string-literal'" •

    $default  reduce using rule 33 (stringl)


State 24

   18 import_stmt: "mod" vid "from" stringl • "as" stringl

    "as"  shift, and go to state 39


State 25

   29 tid: "TypeId" •

    $default  reduce using rule 29 (tid)


State 26

  170 tpattern_field: tid • class_spec

    "val_id"  shift, and go to state 9
    "CLS_ID"  shift, and go to state 30
    "cls"     shift, and go to state 40

    vid                        go to state 41
    cid                        go to state 42
    mod_prefix                 go to state 43
    class_spec                 go to state 44
    primary_class_spec         go to state 45
    mod_prefix_cid_class_spec  go to state 46
    class_exp_class_spec       go to state 47


State 27

  169 tpattern_field: vid • type_spec

    "val_id"  shift, and go to state 9
    "TypeId"  shift, and go to state 25
    "["       shift, and go to state 48
    "{"       shift, and go to state 49

    tid              go to state 50
    vid              go to state 41
    mod_prefix       go to state 51
    type_spec        go to state 52
    mod_prefix_tid   go to state 53
    tuple_type_spec  go to state 54
    array_type_spec  go to state 55


State 28

  181 tpattern_field_cl1: tpattern_field •

    $default  reduce using rule 181 (tpattern_field_cl1)


State 29

  176 tpattern: "[" tpattern_field_cl1 • "]"
  182 tpattern_field_cl1: tpattern_field_cl1 • "," tpattern_field

    ","  shift, and go to state 56
    "]"  shift, and go to state 57


State 30

   31 cid: "CLS_ID" •

    $default  reduce using rule 31 (cid)


State 31

   17 mod_field: "mod" • vid mod_exp

    "val_id"  shift, and go to state 9

    vid  go to state 58


State 32

   10 mod_exp: "{" "}" •

    $default  reduce using rule 10 (mod_exp)


State 33

    8 mod_exp: "{" mod_field_sl • "}"
   13 mod_field_sl: mod_field_sl • mod_field ";"

    "val_id"  shift, and go to state 9
    "TypeId"  shift, and go to state 25
    "CLS_ID"  shift, and go to state 30
    "mod"     shift, and go to state 31
    "}"       shift, and go to state 59

    mod_field  go to state 60
    tid        go to state 35
    vid        go to state 36
    cid        go to state 37


State 34

   12 mod_field_sl: mod_field • ";"

    ";"  shift, and go to state 61


State 35

   15 mod_field: tid • ":" long_type_spec

    ":"  shift, and go to state 62


State 36

   14 mod_field: vid • ":" long_exp

    ":"  shift, and go to state 63


State 37

   16 mod_field: cid • ":" class_exp_class_spec

    ":"  shift, and go to state 64


State 38

    9 mod_exp: tpattern "{" • mod_field_sl "}"
   11        | tpattern "{" • "}"

    "val_id"  shift, and go to state 9
    "TypeId"  shift, and go to state 25
    "CLS_ID"  shift, and go to state 30
    "mod"     shift, and go to state 31
    "}"       shift, and go to state 65

    mod_field_sl  go to state 66
    mod_field     go to state 34
    tid           go to state 35
    vid           go to state 36
    cid           go to state 37


State 39

   18 import_stmt: "mod" vid "from" stringl "as" • stringl

    "\"dq-string-literal\""  shift, and go to state 22
    "'sq-string-literal'"    shift, and go to state 23

    stringl  go to state 67


State 40

  162 class_exp_class_spec: "cls" • "(" tid class_spec ")" "{" type_query_exp_sl "}"

    "("  shift, and go to state 68


State 41

   35 mod_prefix: vid • "::"
   36           | vid • "[" targ_cl "]" "::"

    "::"  shift, and go to state 69
    "["   shift, and go to state 70


State 42

  158 primary_class_spec: cid •

    $default  reduce using rule 158 (primary_class_spec)


State 43

   37 mod_prefix: mod_prefix • vid "::"
   38           | mod_prefix • vid "[" targ_cl "]" "::"
  161 mod_prefix_cid_class_spec: mod_prefix • cid

    "val_id"  shift, and go to state 9
    "CLS_ID"  shift, and go to state 30

    vid  go to state 71
    cid  go to state 72


State 44

  170 tpattern_field: tid class_spec •

    $default  reduce using rule 170 (tpattern_field)


State 45

  157 class_spec: primary_class_spec •

    $default  reduce using rule 157 (class_spec)


State 46

  159 primary_class_spec: mod_prefix_cid_class_spec •

    $default  reduce using rule 159 (primary_class_spec)


State 47

  160 primary_class_spec: class_exp_class_spec •

    $default  reduce using rule 160 (primary_class_spec)


State 48

  137 array_type_spec: "[" • type_spec "*" expr "]"

    "val_id"  shift, and go to state 9
    "TypeId"  shift, and go to state 25
    "["       shift, and go to state 48
    "{"       shift, and go to state 49

    tid              go to state 50
    vid              go to state 41
    mod_prefix       go to state 51
    type_spec        go to state 73
    mod_prefix_tid   go to state 53
    tuple_type_spec  go to state 54
    array_type_spec  go to state 55


State 49

  135 tuple_type_spec: "{" • type_spec "}"
  136                | "{" • type_spec_cl2 "}"

    "val_id"  shift, and go to state 9
    "TypeId"  shift, and go to state 25
    "["       shift, and go to state 48
    "{"       shift, and go to state 49

    tid              go to state 50
    vid              go to state 41
    mod_prefix       go to state 51
    type_spec_cl2    go to state 74
    type_spec        go to state 75
    mod_prefix_tid   go to state 53
    tuple_type_spec  go to state 54
    array_type_spec  go to state 55


State 50

  126 type_spec: tid •

    $default  reduce using rule 126 (type_spec)


State 51

   37 mod_prefix: mod_prefix • vid "::"
   38           | mod_prefix • vid "[" targ_cl "]" "::"
  134 mod_prefix_tid: mod_prefix • tid

    "val_id"  shift, and go to state 9
    "TypeId"  shift, and go to state 25

    tid  go to state 76
    vid  go to state 71


State 52

  169 tpattern_field: vid type_spec •

    $default  reduce using rule 169 (tpattern_field)


State 53

  127 type_spec: mod_prefix_tid •

    $default  reduce using rule 127 (type_spec)


State 54

  128 type_spec: tuple_type_spec •

    $default  reduce using rule 128 (type_spec)


State 55

  129 type_spec: array_type_spec •

    $default  reduce using rule 129 (type_spec)


State 56

  182 tpattern_field_cl1: tpattern_field_cl1 "," • tpattern_field

    "val_id"  shift, and go to state 9
    "TypeId"  shift, and go to state 25

    tid             go to state 26
    vid             go to state 27
    tpattern_field  go to state 77


State 57

  176 tpattern: "[" tpattern_field_cl1 "]" •

    $default  reduce using rule 176 (tpattern)


State 58

   17 mod_field: "mod" vid • mod_exp

    "["  shift, and go to state 16
    "{"  shift, and go to state 17

    mod_exp   go to state 78
    tpattern  go to state 19


State 59

    8 mod_exp: "{" mod_field_sl "}" •

    $default  reduce using rule 8 (mod_exp)


State 60

   13 mod_field_sl: mod_field_sl mod_field • ";"

    ";"  shift, and go to state 79


State 61

   12 mod_field_sl: mod_field ";" •

    $default  reduce using rule 12 (mod_field_sl)


State 62

   15 mod_field: tid ":" • long_type_spec

    "val_id"  shift, and go to state 9
    "TypeId"  shift, and go to state 25
    "enum"    shift, and go to state 80
    "("       shift, and go to state 81
    "["       shift, and go to state 48
    "{"       shift, and go to state 82

    tid               go to state 50
    vid               go to state 41
    mod_prefix        go to state 51
    type_spec         go to state 83
    long_type_spec    go to state 84
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 85
    enum_type_spec    go to state 86
    fn_type_spec      go to state 87
    vpattern          go to state 88


State 63

   14 mod_field: vid ":" • long_exp

    "val_id"                 shift, and go to state 9
    "TypeId"                 shift, and go to state 25
    "if"                     shift, and go to state 89
    "not"                    shift, and go to state 90
    "42"                     shift, and go to state 91
    "0x2a"                   shift, and go to state 92
    "42u"                    shift, and go to state 93
    "0x2Au"                  shift, and go to state 94
    "4.2"                    shift, and go to state 95
    "\"dq-string-literal\""  shift, and go to state 96
    "'sq-string-literal'"    shift, and go to state 97
    "("                      shift, and go to state 98
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 99
    "+"                      shift, and go to state 100
    "-"                      shift, and go to state 101

    tid              go to state 50
    vid              go to state 102
    floatl           go to state 103
    mod_prefix       go to state 104
    expr             go to state 105
    long_exp         go to state 106
    bracketed_exp    go to state 107
    paren_exp        go to state 108
    vtupleExpr       go to state 109
    vstructExpr      go to state 110
    primary_exp      go to state 111
    int_expr         go to state 112
    stringls         go to state 113
    if_exp           go to state 114
    chain_exp        go to state 115
    lambda_exp       go to state 116
    postfix_exp      go to state 117
    vcall_exp        go to state 118
    dot_name_exp     go to state 119
    dot_index_exp    go to state 120
    unary_exp        go to state 121
    unary_op         go to state 122
    binary_exp       go to state 123
    mul_binary_exp   go to state 124
    add_binary_exp   go to state 125
    cmp_binary_exp   go to state 126
    eq_binary_exp    go to state 127
    and_binary_exp   go to state 128
    xor_binary_exp   go to state 129
    or_binary_exp    go to state 130
    type_spec        go to state 131
    mod_prefix_tid   go to state 53
    tuple_type_spec  go to state 54
    array_type_spec  go to state 55
    fn_type_spec     go to state 132
    vpattern         go to state 88


State 64

   16 mod_field: cid ":" • class_exp_class_spec

    "cls"  shift, and go to state 40

    class_exp_class_spec  go to state 133


State 65

   11 mod_exp: tpattern "{" "}" •

    $default  reduce using rule 11 (mod_exp)


State 66

    9 mod_exp: tpattern "{" mod_field_sl • "}"
   13 mod_field_sl: mod_field_sl • mod_field ";"

    "val_id"  shift, and go to state 9
    "TypeId"  shift, and go to state 25
    "CLS_ID"  shift, and go to state 30
    "mod"     shift, and go to state 31
    "}"       shift, and go to state 134

    mod_field  go to state 60
    tid        go to state 35
    vid        go to state 36
    cid        go to state 37


State 67

   18 import_stmt: "mod" vid "from" stringl "as" stringl •

    $default  reduce using rule 18 (import_stmt)


State 68

  162 class_exp_class_spec: "cls" "(" • tid class_spec ")" "{" type_query_exp_sl "}"

    "TypeId"  shift, and go to state 25

    tid  go to state 135


State 69

   35 mod_prefix: vid "::" •

    $default  reduce using rule 35 (mod_prefix)


State 70

   36 mod_prefix: vid "[" • targ_cl "]" "::"

    "val_id"                 shift, and go to state 9
    "TypeId"                 shift, and go to state 25
    "if"                     shift, and go to state 89
    "not"                    shift, and go to state 90
    "42"                     shift, and go to state 91
    "0x2a"                   shift, and go to state 92
    "42u"                    shift, and go to state 93
    "0x2Au"                  shift, and go to state 94
    "4.2"                    shift, and go to state 95
    "\"dq-string-literal\""  shift, and go to state 96
    "'sq-string-literal'"    shift, and go to state 97
    "("                      shift, and go to state 136
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 99
    "+"                      shift, and go to state 100
    "-"                      shift, and go to state 101

    tid              go to state 50
    vid              go to state 102
    floatl           go to state 103
    mod_prefix       go to state 104
    expr             go to state 137
    bracketed_exp    go to state 107
    paren_exp        go to state 108
    vtupleExpr       go to state 109
    vstructExpr      go to state 110
    primary_exp      go to state 111
    int_expr         go to state 112
    stringls         go to state 113
    if_exp           go to state 114
    chain_exp        go to state 115
    postfix_exp      go to state 117
    vcall_exp        go to state 118
    dot_name_exp     go to state 119
    dot_index_exp    go to state 120
    unary_exp        go to state 121
    unary_op         go to state 122
    binary_exp       go to state 123
    mul_binary_exp   go to state 124
    add_binary_exp   go to state 125
    cmp_binary_exp   go to state 126
    eq_binary_exp    go to state 127
    and_binary_exp   go to state 128
    xor_binary_exp   go to state 129
    or_binary_exp    go to state 130
    type_spec        go to state 138
    mod_prefix_tid   go to state 53
    tuple_type_spec  go to state 54
    array_type_spec  go to state 55
    targ             go to state 139
    targ_cl          go to state 140


State 71

   37 mod_prefix: mod_prefix vid • "::"
   38           | mod_prefix vid • "[" targ_cl "]" "::"

    "::"  shift, and go to state 141
    "["   shift, and go to state 142


State 72

  161 mod_prefix_cid_class_spec: mod_prefix cid •

    $default  reduce using rule 161 (mod_prefix_cid_class_spec)


State 73

  137 array_type_spec: "[" type_spec • "*" expr "]"

    "*"  shift, and go to state 143


State 74

  125 type_spec_cl2: type_spec_cl2 • "," type_spec
  136 tuple_type_spec: "{" type_spec_cl2 • "}"

    ","  shift, and go to state 144
    "}"  shift, and go to state 145


State 75

  124 type_spec_cl2: type_spec • "," type_spec
  135 tuple_type_spec: "{" type_spec • "}"

    ","  shift, and go to state 146
    "}"  shift, and go to state 147


State 76

  134 mod_prefix_tid: mod_prefix tid •

    $default  reduce using rule 134 (mod_prefix_tid)


State 77

  182 tpattern_field_cl1: tpattern_field_cl1 "," tpattern_field •

    $default  reduce using rule 182 (tpattern_field_cl1)


State 78

   17 mod_field: "mod" vid mod_exp •

    $default  reduce using rule 17 (mod_field)


State 79

   13 mod_field_sl: mod_field_sl mod_field ";" •

    $default  reduce using rule 13 (mod_field_sl)


State 80

  146 enum_type_spec: "enum" • "{" enum_type_spec_field_cl "}"

    "{"  shift, and go to state 148


State 81

  174 vpattern: "(" • vpattern_field_cl ")"
  175         | "(" • ")"

    "val_id"  shift, and go to state 9
    "out"     shift, and go to state 149
    "inout"   shift, and go to state 150
    ")"       shift, and go to state 151

    vid                go to state 152
    vpattern_field     go to state 153
    vpattern_field_cl  go to state 154


State 82

  135 tuple_type_spec: "{" • type_spec "}"
  136                | "{" • type_spec_cl2 "}"
  138 struct_type_spec: "{" • struct_type_spec_field_cl "}"

    "val_id"  shift, and go to state 9
    "TypeId"  shift, and go to state 25
    "["       shift, and go to state 48
    "{"       shift, and go to state 49

    tid                        go to state 50
    vid                        go to state 155
    mod_prefix                 go to state 51
    type_spec_cl2              go to state 74
    type_spec                  go to state 75
    mod_prefix_tid             go to state 53
    tuple_type_spec            go to state 54
    array_type_spec            go to state 55
    struct_type_spec_field_cl  go to state 156
    struct_type_spec_field     go to state 157


State 83

  130 long_type_spec: type_spec •

    $default  reduce using rule 130 (long_type_spec)


State 84

   15 mod_field: tid ":" long_type_spec •

    $default  reduce using rule 15 (mod_field)


State 85

  131 long_type_spec: struct_type_spec •

    $default  reduce using rule 131 (long_type_spec)


State 86

  132 long_type_spec: enum_type_spec •

    $default  reduce using rule 132 (long_type_spec)


State 87

  133 long_type_spec: fn_type_spec •

    $default  reduce using rule 133 (long_type_spec)


State 88

  147 fn_type_spec: vpattern • "->" type_spec

    "->"  shift, and go to state 158


State 89

   70 if_exp: "if" • bracketed_exp "then" bracketed_exp
   71       | "if" • bracketed_exp "then" bracketed_exp "else" primary_exp

    "("  shift, and go to state 136
    "{"  shift, and go to state 159

    bracketed_exp  go to state 160
    paren_exp      go to state 108
    vtupleExpr     go to state 109
    vstructExpr    go to state 110
    chain_exp      go to state 115


State 90

   93 unary_op: "not" •

    $default  reduce using rule 93 (unary_op)


State 91

   62 int_expr: "42" •

    $default  reduce using rule 62 (int_expr)


State 92

   63 int_expr: "0x2a" •

    $default  reduce using rule 63 (int_expr)


State 93

   64 int_expr: "42u" •

    $default  reduce using rule 64 (int_expr)


State 94

   65 int_expr: "0x2Au" •

    $default  reduce using rule 65 (int_expr)


State 95

   32 floatl: "4.2" •

    $default  reduce using rule 32 (floatl)


State 96

   67 stringls: "\"dq-string-literal\"" •

    $default  reduce using rule 67 (stringls)


State 97

   66 stringls: "'sq-string-literal'" •

    $default  reduce using rule 66 (stringls)


State 98

   50 paren_exp: "(" • long_exp ")"
   51 vtupleExpr: "(" • ")"
   52           | "(" • expr "," ")"
   53           | "(" • expr_cl2 ")"
  174 vpattern: "(" • vpattern_field_cl ")"
  175         | "(" • ")"

    "val_id"                 shift, and go to state 9
    "TypeId"                 shift, and go to state 25
    "if"                     shift, and go to state 89
    "not"                    shift, and go to state 90
    "out"                    shift, and go to state 149
    "inout"                  shift, and go to state 150
    "42"                     shift, and go to state 91
    "0x2a"                   shift, and go to state 92
    "42u"                    shift, and go to state 93
    "0x2Au"                  shift, and go to state 94
    "4.2"                    shift, and go to state 95
    "\"dq-string-literal\""  shift, and go to state 96
    "'sq-string-literal'"    shift, and go to state 97
    "("                      shift, and go to state 98
    ")"                      shift, and go to state 161
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 99
    "+"                      shift, and go to state 100
    "-"                      shift, and go to state 101

    tid                go to state 50
    vid                go to state 162
    floatl             go to state 103
    mod_prefix         go to state 104
    expr               go to state 163
    long_exp           go to state 164
    expr_cl2           go to state 165
    bracketed_exp      go to state 107
    paren_exp          go to state 108
    vtupleExpr         go to state 109
    vstructExpr        go to state 110
    primary_exp        go to state 111
    int_expr           go to state 112
    stringls           go to state 113
    if_exp             go to state 114
    chain_exp          go to state 115
    lambda_exp         go to state 116
    postfix_exp        go to state 117
    vcall_exp          go to state 118
    dot_name_exp       go to state 119
    dot_index_exp      go to state 120
    unary_exp          go to state 121
    unary_op           go to state 122
    binary_exp         go to state 123
    mul_binary_exp     go to state 124
    add_binary_exp     go to state 125
    cmp_binary_exp     go to state 126
    eq_binary_exp      go to state 127
    and_binary_exp     go to state 128
    xor_binary_exp     go to state 129
    or_binary_exp      go to state 130
    type_spec          go to state 131
    mod_prefix_tid     go to state 53
    tuple_type_spec    go to state 54
    array_type_spec    go to state 55
    fn_type_spec       go to state 132
    vpattern_field     go to state 153
    vpattern           go to state 88
    vpattern_field_cl  go to state 154


State 99

   54 vstructExpr: "{" • struct_exp_field_cl "}"
   72 chain_exp: "{" • long_exp "}"
   73          | "{" • chain_prefix "}"
   74          | "{" • chain_prefix long_exp "}"
  135 tuple_type_spec: "{" • type_spec "}"
  136                | "{" • type_spec_cl2 "}"

    "val_id"                 shift, and go to state 9
    "TypeId"                 shift, and go to state 25
    "if"                     shift, and go to state 89
    "const"                  shift, and go to state 166
    "val"                    shift, and go to state 167
    "var"                    shift, and go to state 168
    "set"                    shift, and go to state 169
    "not"                    shift, and go to state 90
    "discard"                shift, and go to state 170
    "42"                     shift, and go to state 91
    "0x2a"                   shift, and go to state 92
    "42u"                    shift, and go to state 93
    "0x2Au"                  shift, and go to state 94
    "4.2"                    shift, and go to state 95
    "\"dq-string-literal\""  shift, and go to state 96
    "'sq-string-literal'"    shift, and go to state 97
    "("                      shift, and go to state 98
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 99
    "+"                      shift, and go to state 100
    "-"                      shift, and go to state 101

    chain_prefix_stmt    go to state 171
    const_stmt           go to state 172
    val_stmt             go to state 173
    var_stmt             go to state 174
    set_stmt             go to state 175
    discard_stmt         go to state 176
    tid                  go to state 50
    vid                  go to state 177
    floatl               go to state 103
    mod_prefix           go to state 104
    expr                 go to state 105
    long_exp             go to state 178
    bracketed_exp        go to state 107
    paren_exp            go to state 108
    vtupleExpr           go to state 109
    vstructExpr          go to state 110
    primary_exp          go to state 111
    int_expr             go to state 112
    stringls             go to state 113
    if_exp               go to state 114
    chain_exp            go to state 115
    chain_prefix         go to state 179
    lambda_exp           go to state 116
    postfix_exp          go to state 117
    vcall_exp            go to state 118
    dot_name_exp         go to state 119
    dot_index_exp        go to state 120
    unary_exp            go to state 121
    unary_op             go to state 122
    binary_exp           go to state 123
    mul_binary_exp       go to state 124
    add_binary_exp       go to state 125
    cmp_binary_exp       go to state 126
    eq_binary_exp        go to state 127
    and_binary_exp       go to state 128
    xor_binary_exp       go to state 129
    or_binary_exp        go to state 130
    type_spec_cl2        go to state 74
    type_spec            go to state 180
    mod_prefix_tid       go to state 53
    tuple_type_spec      go to state 54
    array_type_spec      go to state 55
    fn_type_spec         go to state 132
    struct_exp_field     go to state 181
    vpattern             go to state 88
    struct_exp_field_cl  go to state 182


State 100

   91 unary_op: "+" •

    $default  reduce using rule 91 (unary_op)


State 101

   92 unary_op: "-" •

    $default  reduce using rule 92 (unary_op)


State 102

   35 mod_prefix: vid • "::"
   36           | vid • "[" targ_cl "]" "::"
   56 primary_exp: vid •

    "::"  shift, and go to state 69
    "["   shift, and go to state 70

    $default  reduce using rule 56 (primary_exp)


State 103

   58 primary_exp: floatl •

    $default  reduce using rule 58 (primary_exp)


State 104

   37 mod_prefix: mod_prefix • vid "::"
   38           | mod_prefix • vid "[" targ_cl "]" "::"
   61 primary_exp: mod_prefix • vid
  134 mod_prefix_tid: mod_prefix • tid

    "val_id"  shift, and go to state 9
    "TypeId"  shift, and go to state 25

    tid  go to state 76
    vid  go to state 183


State 105

   40 long_exp: expr •

    $default  reduce using rule 40 (long_exp)


State 106

   14 mod_field: vid ":" long_exp •

    $default  reduce using rule 14 (mod_field)


State 107

   55 primary_exp: bracketed_exp •

    $default  reduce using rule 55 (primary_exp)


State 108

   46 bracketed_exp: paren_exp •

    $default  reduce using rule 46 (bracketed_exp)


State 109

   47 bracketed_exp: vtupleExpr •

    $default  reduce using rule 47 (bracketed_exp)


State 110

   48 bracketed_exp: vstructExpr •

    $default  reduce using rule 48 (bracketed_exp)


State 111

   78 postfix_exp: primary_exp •

    $default  reduce using rule 78 (postfix_exp)


State 112

   57 primary_exp: int_expr •

    $default  reduce using rule 57 (primary_exp)


State 113

   59 primary_exp: stringls •
   68 stringls: stringls • "'sq-string-literal'"
   69         | stringls • "\"dq-string-literal\""

    "\"dq-string-literal\""  shift, and go to state 184
    "'sq-string-literal'"    shift, and go to state 185

    $default  reduce using rule 59 (primary_exp)


State 114

   60 primary_exp: if_exp •

    $default  reduce using rule 60 (primary_exp)


State 115

   49 bracketed_exp: chain_exp •

    $default  reduce using rule 49 (bracketed_exp)


State 116

   41 long_exp: lambda_exp •

    $default  reduce using rule 41 (long_exp)


State 117

   82 vcall_exp: postfix_exp • "(" ")"
   83          | postfix_exp • "(" varg_cl ")"
   84 dot_name_exp: postfix_exp • "." "val_id"
   87 dot_index_exp: postfix_exp • "." int_expr
   88              | postfix_exp • "." bracketed_exp
   89 unary_exp: postfix_exp •

    "."  shift, and go to state 186
    "("  shift, and go to state 187

    $default  reduce using rule 89 (unary_exp)


State 118

   79 postfix_exp: vcall_exp •

    $default  reduce using rule 79 (postfix_exp)


State 119

   80 postfix_exp: dot_name_exp •

    $default  reduce using rule 80 (postfix_exp)


State 120

   81 postfix_exp: dot_index_exp •

    $default  reduce using rule 81 (postfix_exp)


State 121

   98 mul_binary_exp: unary_exp •

    $default  reduce using rule 98 (mul_binary_exp)


State 122

   90 unary_exp: unary_op • unary_exp

    "val_id"                 shift, and go to state 9
    "TypeId"                 shift, and go to state 25
    "if"                     shift, and go to state 89
    "not"                    shift, and go to state 90
    "42"                     shift, and go to state 91
    "0x2a"                   shift, and go to state 92
    "42u"                    shift, and go to state 93
    "0x2Au"                  shift, and go to state 94
    "4.2"                    shift, and go to state 95
    "\"dq-string-literal\""  shift, and go to state 96
    "'sq-string-literal'"    shift, and go to state 97
    "("                      shift, and go to state 136
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 99
    "+"                      shift, and go to state 100
    "-"                      shift, and go to state 101

    tid              go to state 50
    vid              go to state 102
    floatl           go to state 103
    mod_prefix       go to state 104
    bracketed_exp    go to state 107
    paren_exp        go to state 108
    vtupleExpr       go to state 109
    vstructExpr      go to state 110
    primary_exp      go to state 111
    int_expr         go to state 112
    stringls         go to state 113
    if_exp           go to state 114
    chain_exp        go to state 115
    postfix_exp      go to state 117
    vcall_exp        go to state 118
    dot_name_exp     go to state 119
    dot_index_exp    go to state 120
    unary_exp        go to state 188
    unary_op         go to state 122
    type_spec        go to state 131
    mod_prefix_tid   go to state 53
    tuple_type_spec  go to state 54
    array_type_spec  go to state 55


State 123

   39 expr: binary_exp •

    $default  reduce using rule 39 (expr)


State 124

   99 mul_binary_exp: mul_binary_exp • mul_binary_op unary_exp
  102 add_binary_exp: mul_binary_exp •

    "*"  shift, and go to state 189
    "/"  shift, and go to state 190
    "%"  shift, and go to state 191

    $default  reduce using rule 102 (add_binary_exp)

    mul_binary_op  go to state 192


State 125

  103 add_binary_exp: add_binary_exp • add_binary_op mul_binary_exp
  108 cmp_binary_exp: add_binary_exp •

    "+"  shift, and go to state 193
    "-"  shift, and go to state 194

    $default  reduce using rule 108 (cmp_binary_exp)

    add_binary_op  go to state 195


State 126

  109 cmp_binary_exp: cmp_binary_exp • cmp_binary_op add_binary_exp
  112 eq_binary_exp: cmp_binary_exp •

    "<"   shift, and go to state 196
    "<="  shift, and go to state 197
    ">"   shift, and go to state 198
    ">="  shift, and go to state 199

    $default  reduce using rule 112 (eq_binary_exp)

    cmp_binary_op  go to state 200


State 127

  113 eq_binary_exp: eq_binary_exp • eq_binary_op cmp_binary_exp
  114 and_binary_exp: eq_binary_exp •

    "=="  shift, and go to state 201
    "!="  shift, and go to state 202

    $default  reduce using rule 114 (and_binary_exp)

    eq_binary_op  go to state 203


State 128

  115 and_binary_exp: and_binary_exp • "and" eq_binary_exp
  116 xor_binary_exp: and_binary_exp •

    "and"  shift, and go to state 204

    $default  reduce using rule 116 (xor_binary_exp)


State 129

  117 xor_binary_exp: xor_binary_exp • "xor" and_binary_exp
  118 or_binary_exp: xor_binary_exp •

    "xor"  shift, and go to state 205

    $default  reduce using rule 118 (or_binary_exp)


State 130

   94 binary_exp: or_binary_exp •
  119 or_binary_exp: or_binary_exp • "or" xor_binary_exp

    "or"  shift, and go to state 206

    $default  reduce using rule 94 (binary_exp)


State 131

   85 dot_name_exp: type_spec • "::" "TypeId"
   86             | type_spec • "::" "TypeId" "using" paren_exp

    "::"  shift, and go to state 207


State 132

   77 lambda_exp: fn_type_spec • bracketed_exp

    "("  shift, and go to state 136
    "{"  shift, and go to state 159

    bracketed_exp  go to state 208
    paren_exp      go to state 108
    vtupleExpr     go to state 109
    vstructExpr    go to state 110
    chain_exp      go to state 115


State 133

   16 mod_field: cid ":" class_exp_class_spec •

    $default  reduce using rule 16 (mod_field)


State 134

    9 mod_exp: tpattern "{" mod_field_sl "}" •

    $default  reduce using rule 9 (mod_exp)


State 135

  162 class_exp_class_spec: "cls" "(" tid • class_spec ")" "{" type_query_exp_sl "}"

    "val_id"  shift, and go to state 9
    "CLS_ID"  shift, and go to state 30
    "cls"     shift, and go to state 40

    vid                        go to state 41
    cid                        go to state 42
    mod_prefix                 go to state 43
    class_spec                 go to state 209
    primary_class_spec         go to state 45
    mod_prefix_cid_class_spec  go to state 46
    class_exp_class_spec       go to state 47


State 136

   50 paren_exp: "(" • long_exp ")"
   51 vtupleExpr: "(" • ")"
   52           | "(" • expr "," ")"
   53           | "(" • expr_cl2 ")"

    "val_id"                 shift, and go to state 9
    "TypeId"                 shift, and go to state 25
    "if"                     shift, and go to state 89
    "not"                    shift, and go to state 90
    "42"                     shift, and go to state 91
    "0x2a"                   shift, and go to state 92
    "42u"                    shift, and go to state 93
    "0x2Au"                  shift, and go to state 94
    "4.2"                    shift, and go to state 95
    "\"dq-string-literal\""  shift, and go to state 96
    "'sq-string-literal'"    shift, and go to state 97
    "("                      shift, and go to state 98
    ")"                      shift, and go to state 210
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 99
    "+"                      shift, and go to state 100
    "-"                      shift, and go to state 101

    tid              go to state 50
    vid              go to state 102
    floatl           go to state 103
    mod_prefix       go to state 104
    expr             go to state 163
    long_exp         go to state 164
    expr_cl2         go to state 165
    bracketed_exp    go to state 107
    paren_exp        go to state 108
    vtupleExpr       go to state 109
    vstructExpr      go to state 110
    primary_exp      go to state 111
    int_expr         go to state 112
    stringls         go to state 113
    if_exp           go to state 114
    chain_exp        go to state 115
    lambda_exp       go to state 116
    postfix_exp      go to state 117
    vcall_exp        go to state 118
    dot_name_exp     go to state 119
    dot_index_exp    go to state 120
    unary_exp        go to state 121
    unary_op         go to state 122
    binary_exp       go to state 123
    mul_binary_exp   go to state 124
    add_binary_exp   go to state 125
    cmp_binary_exp   go to state 126
    eq_binary_exp    go to state 127
    and_binary_exp   go to state 128
    xor_binary_exp   go to state 129
    or_binary_exp    go to state 130
    type_spec        go to state 131
    mod_prefix_tid   go to state 53
    tuple_type_spec  go to state 54
    array_type_spec  go to state 55
    fn_type_spec     go to state 132
    vpattern         go to state 88


State 137

  149 targ: expr •

    $default  reduce using rule 149 (targ)


State 138

   85 dot_name_exp: type_spec • "::" "TypeId"
   86             | type_spec • "::" "TypeId" "using" paren_exp
  148 targ: type_spec •

    "::"  shift, and go to state 207

    $default  reduce using rule 148 (targ)


State 139

  150 targ_cl: targ •

    $default  reduce using rule 150 (targ_cl)


State 140

   36 mod_prefix: vid "[" targ_cl • "]" "::"
  151 targ_cl: targ_cl • "," targ

    ","  shift, and go to state 211
    "]"  shift, and go to state 212


State 141

   37 mod_prefix: mod_prefix vid "::" •

    $default  reduce using rule 37 (mod_prefix)


State 142

   38 mod_prefix: mod_prefix vid "[" • targ_cl "]" "::"

    "val_id"                 shift, and go to state 9
    "TypeId"                 shift, and go to state 25
    "if"                     shift, and go to state 89
    "not"                    shift, and go to state 90
    "42"                     shift, and go to state 91
    "0x2a"                   shift, and go to state 92
    "42u"                    shift, and go to state 93
    "0x2Au"                  shift, and go to state 94
    "4.2"                    shift, and go to state 95
    "\"dq-string-literal\""  shift, and go to state 96
    "'sq-string-literal'"    shift, and go to state 97
    "("                      shift, and go to state 136
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 99
    "+"                      shift, and go to state 100
    "-"                      shift, and go to state 101

    tid              go to state 50
    vid              go to state 102
    floatl           go to state 103
    mod_prefix       go to state 104
    expr             go to state 137
    bracketed_exp    go to state 107
    paren_exp        go to state 108
    vtupleExpr       go to state 109
    vstructExpr      go to state 110
    primary_exp      go to state 111
    int_expr         go to state 112
    stringls         go to state 113
    if_exp           go to state 114
    chain_exp        go to state 115
    postfix_exp      go to state 117
    vcall_exp        go to state 118
    dot_name_exp     go to state 119
    dot_index_exp    go to state 120
    unary_exp        go to state 121
    unary_op         go to state 122
    binary_exp       go to state 123
    mul_binary_exp   go to state 124
    add_binary_exp   go to state 125
    cmp_binary_exp   go to state 126
    eq_binary_exp    go to state 127
    and_binary_exp   go to state 128
    xor_binary_exp   go to state 129
    or_binary_exp    go to state 130
    type_spec        go to state 138
    mod_prefix_tid   go to state 53
    tuple_type_spec  go to state 54
    array_type_spec  go to state 55
    targ             go to state 139
    targ_cl          go to state 213


State 143

  137 array_type_spec: "[" type_spec "*" • expr "]"

    "val_id"                 shift, and go to state 9
    "TypeId"                 shift, and go to state 25
    "if"                     shift, and go to state 89
    "not"                    shift, and go to state 90
    "42"                     shift, and go to state 91
    "0x2a"                   shift, and go to state 92
    "42u"                    shift, and go to state 93
    "0x2Au"                  shift, and go to state 94
    "4.2"                    shift, and go to state 95
    "\"dq-string-literal\""  shift, and go to state 96
    "'sq-string-literal'"    shift, and go to state 97
    "("                      shift, and go to state 136
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 99
    "+"                      shift, and go to state 100
    "-"                      shift, and go to state 101

    tid              go to state 50
    vid              go to state 102
    floatl           go to state 103
    mod_prefix       go to state 104
    expr             go to state 214
    bracketed_exp    go to state 107
    paren_exp        go to state 108
    vtupleExpr       go to state 109
    vstructExpr      go to state 110
    primary_exp      go to state 111
    int_expr         go to state 112
    stringls         go to state 113
    if_exp           go to state 114
    chain_exp        go to state 115
    postfix_exp      go to state 117
    vcall_exp        go to state 118
    dot_name_exp     go to state 119
    dot_index_exp    go to state 120
    unary_exp        go to state 121
    unary_op         go to state 122
    binary_exp       go to state 123
    mul_binary_exp   go to state 124
    add_binary_exp   go to state 125
    cmp_binary_exp   go to state 126
    eq_binary_exp    go to state 127
    and_binary_exp   go to state 128
    xor_binary_exp   go to state 129
    or_binary_exp    go to state 130
    type_spec        go to state 131
    mod_prefix_tid   go to state 53
    tuple_type_spec  go to state 54
    array_type_spec  go to state 55


State 144

  125 type_spec_cl2: type_spec_cl2 "," • type_spec

    "val_id"  shift, and go to state 9
    "TypeId"  shift, and go to state 25
    "["       shift, and go to state 48
    "{"       shift, and go to state 49

    tid              go to state 50
    vid              go to state 41
    mod_prefix       go to state 51
    type_spec        go to state 215
    mod_prefix_tid   go to state 53
    tuple_type_spec  go to state 54
    array_type_spec  go to state 55


State 145

  136 tuple_type_spec: "{" type_spec_cl2 "}" •

    $default  reduce using rule 136 (tuple_type_spec)


State 146

  124 type_spec_cl2: type_spec "," • type_spec

    "val_id"  shift, and go to state 9
    "TypeId"  shift, and go to state 25
    "["       shift, and go to state 48
    "{"       shift, and go to state 49

    tid              go to state 50
    vid              go to state 41
    mod_prefix       go to state 51
    type_spec        go to state 216
    mod_prefix_tid   go to state 53
    tuple_type_spec  go to state 54
    array_type_spec  go to state 55


State 147

  135 tuple_type_spec: "{" type_spec "}" •

    $default  reduce using rule 135 (tuple_type_spec)


State 148

  146 enum_type_spec: "enum" "{" • enum_type_spec_field_cl "}"

    "TypeId"  shift, and go to state 25

    tid                      go to state 217
    enum_type_spec_field     go to state 218
    enum_type_spec_field_cl  go to state 219


State 149

  165 vpattern_field: "out" • vid type_spec

    "val_id"  shift, and go to state 9

    vid  go to state 220


State 150

  166 vpattern_field: "inout" • vid type_spec

    "val_id"  shift, and go to state 9

    vid  go to state 221


State 151

  175 vpattern: "(" ")" •

    $default  reduce using rule 175 (vpattern)


State 152

  164 vpattern_field: vid • type_spec

    "val_id"  shift, and go to state 9
    "TypeId"  shift, and go to state 25
    "["       shift, and go to state 48
    "{"       shift, and go to state 49

    tid              go to state 50
    vid              go to state 41
    mod_prefix       go to state 51
    type_spec        go to state 222
    mod_prefix_tid   go to state 53
    tuple_type_spec  go to state 54
    array_type_spec  go to state 55


State 153

  177 vpattern_field_cl: vpattern_field •

    $default  reduce using rule 177 (vpattern_field_cl)


State 154

  174 vpattern: "(" vpattern_field_cl • ")"
  178 vpattern_field_cl: vpattern_field_cl • "," vpattern_field

    ","  shift, and go to state 223
    ")"  shift, and go to state 224


State 155

   35 mod_prefix: vid • "::"
   36           | vid • "[" targ_cl "]" "::"
  141 struct_type_spec_field: vid • long_type_spec

    "val_id"  shift, and go to state 9
    "TypeId"  shift, and go to state 25
    "enum"    shift, and go to state 80
    "::"      shift, and go to state 69
    "("       shift, and go to state 81
    "["       shift, and go to state 225
    "{"       shift, and go to state 82

    tid               go to state 50
    vid               go to state 41
    mod_prefix        go to state 51
    type_spec         go to state 83
    long_type_spec    go to state 226
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 85
    enum_type_spec    go to state 86
    fn_type_spec      go to state 87
    vpattern          go to state 88


State 156

  138 struct_type_spec: "{" struct_type_spec_field_cl • "}"
  140 struct_type_spec_field_cl: struct_type_spec_field_cl • "," struct_type_spec_field

    ","  shift, and go to state 227
    "}"  shift, and go to state 228


State 157

  139 struct_type_spec_field_cl: struct_type_spec_field •

    $default  reduce using rule 139 (struct_type_spec_field_cl)


State 158

  147 fn_type_spec: vpattern "->" • type_spec

    "val_id"  shift, and go to state 9
    "TypeId"  shift, and go to state 25
    "["       shift, and go to state 48
    "{"       shift, and go to state 49

    tid              go to state 50
    vid              go to state 41
    mod_prefix       go to state 51
    type_spec        go to state 229
    mod_prefix_tid   go to state 53
    tuple_type_spec  go to state 54
    array_type_spec  go to state 55


State 159

   54 vstructExpr: "{" • struct_exp_field_cl "}"
   72 chain_exp: "{" • long_exp "}"
   73          | "{" • chain_prefix "}"
   74          | "{" • chain_prefix long_exp "}"

    "val_id"                 shift, and go to state 9
    "TypeId"                 shift, and go to state 25
    "if"                     shift, and go to state 89
    "const"                  shift, and go to state 166
    "val"                    shift, and go to state 167
    "var"                    shift, and go to state 168
    "set"                    shift, and go to state 169
    "not"                    shift, and go to state 90
    "discard"                shift, and go to state 170
    "42"                     shift, and go to state 91
    "0x2a"                   shift, and go to state 92
    "42u"                    shift, and go to state 93
    "0x2Au"                  shift, and go to state 94
    "4.2"                    shift, and go to state 95
    "\"dq-string-literal\""  shift, and go to state 96
    "'sq-string-literal'"    shift, and go to state 97
    "("                      shift, and go to state 98
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 99
    "+"                      shift, and go to state 100
    "-"                      shift, and go to state 101

    chain_prefix_stmt    go to state 171
    const_stmt           go to state 172
    val_stmt             go to state 173
    var_stmt             go to state 174
    set_stmt             go to state 175
    discard_stmt         go to state 176
    tid                  go to state 50
    vid                  go to state 177
    floatl               go to state 103
    mod_prefix           go to state 104
    expr                 go to state 105
    long_exp             go to state 178
    bracketed_exp        go to state 107
    paren_exp            go to state 108
    vtupleExpr           go to state 109
    vstructExpr          go to state 110
    primary_exp          go to state 111
    int_expr             go to state 112
    stringls             go to state 113
    if_exp               go to state 114
    chain_exp            go to state 115
    chain_prefix         go to state 179
    lambda_exp           go to state 116
    postfix_exp          go to state 117
    vcall_exp            go to state 118
    dot_name_exp         go to state 119
    dot_index_exp        go to state 120
    unary_exp            go to state 121
    unary_op             go to state 122
    binary_exp           go to state 123
    mul_binary_exp       go to state 124
    add_binary_exp       go to state 125
    cmp_binary_exp       go to state 126
    eq_binary_exp        go to state 127
    and_binary_exp       go to state 128
    xor_binary_exp       go to state 129
    or_binary_exp        go to state 130
    type_spec            go to state 131
    mod_prefix_tid       go to state 53
    tuple_type_spec      go to state 54
    array_type_spec      go to state 55
    fn_type_spec         go to state 132
    struct_exp_field     go to state 181
    vpattern             go to state 88
    struct_exp_field_cl  go to state 182


State 160

   70 if_exp: "if" bracketed_exp • "then" bracketed_exp
   71       | "if" bracketed_exp • "then" bracketed_exp "else" primary_exp

    "then"  shift, and go to state 230


State 161

   51 vtupleExpr: "(" ")" •
  175 vpattern: "(" ")" •

    "->"      reduce using rule 175 (vpattern)
    $default  reduce using rule 51 (vtupleExpr)


State 162

   35 mod_prefix: vid • "::"
   36           | vid • "[" targ_cl "]" "::"
   56 primary_exp: vid •
  164 vpattern_field: vid • type_spec

    "val_id"  shift, and go to state 9
    "TypeId"  shift, and go to state 25
    "::"      shift, and go to state 69
    "["       shift, and go to state 225
    "{"       shift, and go to state 49

    $default  reduce using rule 56 (primary_exp)

    tid              go to state 50
    vid              go to state 41
    mod_prefix       go to state 51
    type_spec        go to state 222
    mod_prefix_tid   go to state 53
    tuple_type_spec  go to state 54
    array_type_spec  go to state 55


State 163

   40 long_exp: expr •
   42 expr_cl2: expr • "," expr
   52 vtupleExpr: "(" expr • "," ")"

    ","  shift, and go to state 231

    $default  reduce using rule 40 (long_exp)


State 164

   50 paren_exp: "(" long_exp • ")"

    ")"  shift, and go to state 232


State 165

   43 expr_cl2: expr_cl2 • "," expr
   53 vtupleExpr: "(" expr_cl2 • ")"

    ","  shift, and go to state 233
    ")"  shift, and go to state 234


State 166

   24 const_stmt: "const" • lpattern "=" expr

    "val_id"  shift, and go to state 9
    "{"       shift, and go to state 235

    vid                    go to state 236
    lpattern_field         go to state 237
    destructured_lpattern  go to state 238
    lpattern               go to state 239


State 167

   25 val_stmt: "val" • lpattern "=" expr

    "val_id"  shift, and go to state 9
    "{"       shift, and go to state 235

    vid                    go to state 236
    lpattern_field         go to state 237
    destructured_lpattern  go to state 238
    lpattern               go to state 240


State 168

   26 var_stmt: "var" • lpattern "=" expr

    "val_id"  shift, and go to state 9
    "{"       shift, and go to state 235

    vid                    go to state 236
    lpattern_field         go to state 237
    destructured_lpattern  go to state 238
    lpattern               go to state 241


State 169

   27 set_stmt: "set" • expr "=" expr

    "val_id"                 shift, and go to state 9
    "TypeId"                 shift, and go to state 25
    "if"                     shift, and go to state 89
    "not"                    shift, and go to state 90
    "42"                     shift, and go to state 91
    "0x2a"                   shift, and go to state 92
    "42u"                    shift, and go to state 93
    "0x2Au"                  shift, and go to state 94
    "4.2"                    shift, and go to state 95
    "\"dq-string-literal\""  shift, and go to state 96
    "'sq-string-literal'"    shift, and go to state 97
    "("                      shift, and go to state 136
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 99
    "+"                      shift, and go to state 100
    "-"                      shift, and go to state 101

    tid              go to state 50
    vid              go to state 102
    floatl           go to state 103
    mod_prefix       go to state 104
    expr             go to state 242
    bracketed_exp    go to state 107
    paren_exp        go to state 108
    vtupleExpr       go to state 109
    vstructExpr      go to state 110
    primary_exp      go to state 111
    int_expr         go to state 112
    stringls         go to state 113
    if_exp           go to state 114
    chain_exp        go to state 115
    postfix_exp      go to state 117
    vcall_exp        go to state 118
    dot_name_exp     go to state 119
    dot_index_exp    go to state 120
    unary_exp        go to state 121
    unary_op         go to state 122
    binary_exp       go to state 123
    mul_binary_exp   go to state 124
    add_binary_exp   go to state 125
    cmp_binary_exp   go to state 126
    eq_binary_exp    go to state 127
    and_binary_exp   go to state 128
    xor_binary_exp   go to state 129
    or_binary_exp    go to state 130
    type_spec        go to state 131
    mod_prefix_tid   go to state 53
    tuple_type_spec  go to state 54
    array_type_spec  go to state 55


State 170

   28 discard_stmt: "discard" • expr

    "val_id"                 shift, and go to state 9
    "TypeId"                 shift, and go to state 25
    "if"                     shift, and go to state 89
    "not"                    shift, and go to state 90
    "42"                     shift, and go to state 91
    "0x2a"                   shift, and go to state 92
    "42u"                    shift, and go to state 93
    "0x2Au"                  shift, and go to state 94
    "4.2"                    shift, and go to state 95
    "\"dq-string-literal\""  shift, and go to state 96
    "'sq-string-literal'"    shift, and go to state 97
    "("                      shift, and go to state 136
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 99
    "+"                      shift, and go to state 100
    "-"                      shift, and go to state 101

    tid              go to state 50
    vid              go to state 102
    floatl           go to state 103
    mod_prefix       go to state 104
    expr             go to state 243
    bracketed_exp    go to state 107
    paren_exp        go to state 108
    vtupleExpr       go to state 109
    vstructExpr      go to state 110
    primary_exp      go to state 111
    int_expr         go to state 112
    stringls         go to state 113
    if_exp           go to state 114
    chain_exp        go to state 115
    postfix_exp      go to state 117
    vcall_exp        go to state 118
    dot_name_exp     go to state 119
    dot_index_exp    go to state 120
    unary_exp        go to state 121
    unary_op         go to state 122
    binary_exp       go to state 123
    mul_binary_exp   go to state 124
    add_binary_exp   go to state 125
    cmp_binary_exp   go to state 126
    eq_binary_exp    go to state 127
    and_binary_exp   go to state 128
    xor_binary_exp   go to state 129
    or_binary_exp    go to state 130
    type_spec        go to state 131
    mod_prefix_tid   go to state 53
    tuple_type_spec  go to state 54
    array_type_spec  go to state 55


State 171

   75 chain_prefix: chain_prefix_stmt • ";"

    ";"  shift, and go to state 244


State 172

   19 chain_prefix_stmt: const_stmt •

    $default  reduce using rule 19 (chain_prefix_stmt)


State 173

   20 chain_prefix_stmt: val_stmt •

    $default  reduce using rule 20 (chain_prefix_stmt)


State 174

   21 chain_prefix_stmt: var_stmt •

    $default  reduce using rule 21 (chain_prefix_stmt)


State 175

   22 chain_prefix_stmt: set_stmt •

    $default  reduce using rule 22 (chain_prefix_stmt)


State 176

   23 chain_prefix_stmt: discard_stmt •

    $default  reduce using rule 23 (chain_prefix_stmt)


State 177

   35 mod_prefix: vid • "::"
   36           | vid • "[" targ_cl "]" "::"
   56 primary_exp: vid •
  163 struct_exp_field: vid • ":" expr

    ":"   shift, and go to state 245
    "::"  shift, and go to state 69
    "["   shift, and go to state 70

    $default  reduce using rule 56 (primary_exp)


State 178

   72 chain_exp: "{" long_exp • "}"

    "}"  shift, and go to state 246


State 179

   73 chain_exp: "{" chain_prefix • "}"
   74          | "{" chain_prefix • long_exp "}"
   76 chain_prefix: chain_prefix • chain_prefix_stmt ";"

    "val_id"                 shift, and go to state 9
    "TypeId"                 shift, and go to state 25
    "if"                     shift, and go to state 89
    "const"                  shift, and go to state 166
    "val"                    shift, and go to state 167
    "var"                    shift, and go to state 168
    "set"                    shift, and go to state 169
    "not"                    shift, and go to state 90
    "discard"                shift, and go to state 170
    "42"                     shift, and go to state 91
    "0x2a"                   shift, and go to state 92
    "42u"                    shift, and go to state 93
    "0x2Au"                  shift, and go to state 94
    "4.2"                    shift, and go to state 95
    "\"dq-string-literal\""  shift, and go to state 96
    "'sq-string-literal'"    shift, and go to state 97
    "("                      shift, and go to state 98
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 99
    "}"                      shift, and go to state 247
    "+"                      shift, and go to state 100
    "-"                      shift, and go to state 101

    chain_prefix_stmt  go to state 248
    const_stmt         go to state 172
    val_stmt           go to state 173
    var_stmt           go to state 174
    set_stmt           go to state 175
    discard_stmt       go to state 176
    tid                go to state 50
    vid                go to state 102
    floatl             go to state 103
    mod_prefix         go to state 104
    expr               go to state 105
    long_exp           go to state 249
    bracketed_exp      go to state 107
    paren_exp          go to state 108
    vtupleExpr         go to state 109
    vstructExpr        go to state 110
    primary_exp        go to state 111
    int_expr           go to state 112
    stringls           go to state 113
    if_exp             go to state 114
    chain_exp          go to state 115
    lambda_exp         go to state 116
    postfix_exp        go to state 117
    vcall_exp          go to state 118
    dot_name_exp       go to state 119
    dot_index_exp      go to state 120
    unary_exp          go to state 121
    unary_op           go to state 122
    binary_exp         go to state 123
    mul_binary_exp     go to state 124
    add_binary_exp     go to state 125
    cmp_binary_exp     go to state 126
    eq_binary_exp      go to state 127
    and_binary_exp     go to state 128
    xor_binary_exp     go to state 129
    or_binary_exp      go to state 130
    type_spec          go to state 131
    mod_prefix_tid     go to state 53
    tuple_type_spec    go to state 54
    array_type_spec    go to state 55
    fn_type_spec       go to state 132
    vpattern           go to state 88


State 180

   85 dot_name_exp: type_spec • "::" "TypeId"
   86             | type_spec • "::" "TypeId" "using" paren_exp
  124 type_spec_cl2: type_spec • "," type_spec
  135 tuple_type_spec: "{" type_spec • "}"

    ","   shift, and go to state 146
    "::"  shift, and go to state 207
    "}"   shift, and go to state 147


State 181

  183 struct_exp_field_cl: struct_exp_field •

    $default  reduce using rule 183 (struct_exp_field_cl)


State 182

   54 vstructExpr: "{" struct_exp_field_cl • "}"
  184 struct_exp_field_cl: struct_exp_field_cl • "," struct_exp_field

    ","  shift, and go to state 250
    "}"  shift, and go to state 251


State 183

   37 mod_prefix: mod_prefix vid • "::"
   38           | mod_prefix vid • "[" targ_cl "]" "::"
   61 primary_exp: mod_prefix vid •

    "::"  shift, and go to state 141
    "["   shift, and go to state 142

    $default  reduce using rule 61 (primary_exp)


State 184

   69 stringls: stringls "\"dq-string-literal\"" •

    $default  reduce using rule 69 (stringls)


State 185

   68 stringls: stringls "'sq-string-literal'" •

    $default  reduce using rule 68 (stringls)


State 186

   84 dot_name_exp: postfix_exp "." • "val_id"
   87 dot_index_exp: postfix_exp "." • int_expr
   88              | postfix_exp "." • bracketed_exp

    "val_id"  shift, and go to state 252
    "42"      shift, and go to state 91
    "0x2a"    shift, and go to state 92
    "42u"     shift, and go to state 93
    "0x2Au"   shift, and go to state 94
    "("       shift, and go to state 136
    "{"       shift, and go to state 159

    bracketed_exp  go to state 253
    paren_exp      go to state 108
    vtupleExpr     go to state 109
    vstructExpr    go to state 110
    int_expr       go to state 254
    chain_exp      go to state 115


State 187

   82 vcall_exp: postfix_exp "(" • ")"
   83          | postfix_exp "(" • varg_cl ")"

    "val_id"                 shift, and go to state 9
    "TypeId"                 shift, and go to state 25
    "if"                     shift, and go to state 89
    "not"                    shift, and go to state 90
    "out"                    shift, and go to state 255
    "inout"                  shift, and go to state 256
    "42"                     shift, and go to state 91
    "0x2a"                   shift, and go to state 92
    "42u"                    shift, and go to state 93
    "0x2Au"                  shift, and go to state 94
    "4.2"                    shift, and go to state 95
    "\"dq-string-literal\""  shift, and go to state 96
    "'sq-string-literal'"    shift, and go to state 97
    "("                      shift, and go to state 136
    ")"                      shift, and go to state 257
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 99
    "+"                      shift, and go to state 100
    "-"                      shift, and go to state 101

    tid              go to state 50
    vid              go to state 102
    floatl           go to state 103
    mod_prefix       go to state 104
    expr             go to state 258
    bracketed_exp    go to state 107
    paren_exp        go to state 108
    vtupleExpr       go to state 109
    vstructExpr      go to state 110
    primary_exp      go to state 111
    int_expr         go to state 112
    stringls         go to state 113
    if_exp           go to state 114
    chain_exp        go to state 115
    postfix_exp      go to state 117
    vcall_exp        go to state 118
    dot_name_exp     go to state 119
    dot_index_exp    go to state 120
    unary_exp        go to state 121
    unary_op         go to state 122
    binary_exp       go to state 123
    mul_binary_exp   go to state 124
    add_binary_exp   go to state 125
    cmp_binary_exp   go to state 126
    eq_binary_exp    go to state 127
    and_binary_exp   go to state 128
    xor_binary_exp   go to state 129
    or_binary_exp    go to state 130
    type_spec        go to state 131
    mod_prefix_tid   go to state 53
    tuple_type_spec  go to state 54
    array_type_spec  go to state 55
    varg             go to state 259
    varg_cl          go to state 260


State 188

   90 unary_exp: unary_op unary_exp •

    $default  reduce using rule 90 (unary_exp)


State 189

   95 mul_binary_op: "*" •

    $default  reduce using rule 95 (mul_binary_op)


State 190

   96 mul_binary_op: "/" •

    $default  reduce using rule 96 (mul_binary_op)


State 191

   97 mul_binary_op: "%" •

    $default  reduce using rule 97 (mul_binary_op)


State 192

   99 mul_binary_exp: mul_binary_exp mul_binary_op • unary_exp

    "val_id"                 shift, and go to state 9
    "TypeId"                 shift, and go to state 25
    "if"                     shift, and go to state 89
    "not"                    shift, and go to state 90
    "42"                     shift, and go to state 91
    "0x2a"                   shift, and go to state 92
    "42u"                    shift, and go to state 93
    "0x2Au"                  shift, and go to state 94
    "4.2"                    shift, and go to state 95
    "\"dq-string-literal\""  shift, and go to state 96
    "'sq-string-literal'"    shift, and go to state 97
    "("                      shift, and go to state 136
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 99
    "+"                      shift, and go to state 100
    "-"                      shift, and go to state 101

    tid              go to state 50
    vid              go to state 102
    floatl           go to state 103
    mod_prefix       go to state 104
    bracketed_exp    go to state 107
    paren_exp        go to state 108
    vtupleExpr       go to state 109
    vstructExpr      go to state 110
    primary_exp      go to state 111
    int_expr         go to state 112
    stringls         go to state 113
    if_exp           go to state 114
    chain_exp        go to state 115
    postfix_exp      go to state 117
    vcall_exp        go to state 118
    dot_name_exp     go to state 119
    dot_index_exp    go to state 120
    unary_exp        go to state 261
    unary_op         go to state 122
    type_spec        go to state 131
    mod_prefix_tid   go to state 53
    tuple_type_spec  go to state 54
    array_type_spec  go to state 55


State 193

  100 add_binary_op: "+" •

    $default  reduce using rule 100 (add_binary_op)


State 194

  101 add_binary_op: "-" •

    $default  reduce using rule 101 (add_binary_op)


State 195

  103 add_binary_exp: add_binary_exp add_binary_op • mul_binary_exp

    "val_id"                 shift, and go to state 9
    "TypeId"                 shift, and go to state 25
    "if"                     shift, and go to state 89
    "not"                    shift, and go to state 90
    "42"                     shift, and go to state 91
    "0x2a"                   shift, and go to state 92
    "42u"                    shift, and go to state 93
    "0x2Au"                  shift, and go to state 94
    "4.2"                    shift, and go to state 95
    "\"dq-string-literal\""  shift, and go to state 96
    "'sq-string-literal'"    shift, and go to state 97
    "("                      shift, and go to state 136
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 99
    "+"                      shift, and go to state 100
    "-"                      shift, and go to state 101

    tid              go to state 50
    vid              go to state 102
    floatl           go to state 103
    mod_prefix       go to state 104
    bracketed_exp    go to state 107
    paren_exp        go to state 108
    vtupleExpr       go to state 109
    vstructExpr      go to state 110
    primary_exp      go to state 111
    int_expr         go to state 112
    stringls         go to state 113
    if_exp           go to state 114
    chain_exp        go to state 115
    postfix_exp      go to state 117
    vcall_exp        go to state 118
    dot_name_exp     go to state 119
    dot_index_exp    go to state 120
    unary_exp        go to state 121
    unary_op         go to state 122
    mul_binary_exp   go to state 262
    type_spec        go to state 131
    mod_prefix_tid   go to state 53
    tuple_type_spec  go to state 54
    array_type_spec  go to state 55


State 196

  104 cmp_binary_op: "<" •

    $default  reduce using rule 104 (cmp_binary_op)


State 197

  105 cmp_binary_op: "<=" •

    $default  reduce using rule 105 (cmp_binary_op)


State 198

  106 cmp_binary_op: ">" •

    $default  reduce using rule 106 (cmp_binary_op)


State 199

  107 cmp_binary_op: ">=" •

    $default  reduce using rule 107 (cmp_binary_op)


State 200

  109 cmp_binary_exp: cmp_binary_exp cmp_binary_op • add_binary_exp

    "val_id"                 shift, and go to state 9
    "TypeId"                 shift, and go to state 25
    "if"                     shift, and go to state 89
    "not"                    shift, and go to state 90
    "42"                     shift, and go to state 91
    "0x2a"                   shift, and go to state 92
    "42u"                    shift, and go to state 93
    "0x2Au"                  shift, and go to state 94
    "4.2"                    shift, and go to state 95
    "\"dq-string-literal\""  shift, and go to state 96
    "'sq-string-literal'"    shift, and go to state 97
    "("                      shift, and go to state 136
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 99
    "+"                      shift, and go to state 100
    "-"                      shift, and go to state 101

    tid              go to state 50
    vid              go to state 102
    floatl           go to state 103
    mod_prefix       go to state 104
    bracketed_exp    go to state 107
    paren_exp        go to state 108
    vtupleExpr       go to state 109
    vstructExpr      go to state 110
    primary_exp      go to state 111
    int_expr         go to state 112
    stringls         go to state 113
    if_exp           go to state 114
    chain_exp        go to state 115
    postfix_exp      go to state 117
    vcall_exp        go to state 118
    dot_name_exp     go to state 119
    dot_index_exp    go to state 120
    unary_exp        go to state 121
    unary_op         go to state 122
    mul_binary_exp   go to state 124
    add_binary_exp   go to state 263
    type_spec        go to state 131
    mod_prefix_tid   go to state 53
    tuple_type_spec  go to state 54
    array_type_spec  go to state 55


State 201

  110 eq_binary_op: "==" •

    $default  reduce using rule 110 (eq_binary_op)


State 202

  111 eq_binary_op: "!=" •

    $default  reduce using rule 111 (eq_binary_op)


State 203

  113 eq_binary_exp: eq_binary_exp eq_binary_op • cmp_binary_exp

    "val_id"                 shift, and go to state 9
    "TypeId"                 shift, and go to state 25
    "if"                     shift, and go to state 89
    "not"                    shift, and go to state 90
    "42"                     shift, and go to state 91
    "0x2a"                   shift, and go to state 92
    "42u"                    shift, and go to state 93
    "0x2Au"                  shift, and go to state 94
    "4.2"                    shift, and go to state 95
    "\"dq-string-literal\""  shift, and go to state 96
    "'sq-string-literal'"    shift, and go to state 97
    "("                      shift, and go to state 136
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 99
    "+"                      shift, and go to state 100
    "-"                      shift, and go to state 101

    tid              go to state 50
    vid              go to state 102
    floatl           go to state 103
    mod_prefix       go to state 104
    bracketed_exp    go to state 107
    paren_exp        go to state 108
    vtupleExpr       go to state 109
    vstructExpr      go to state 110
    primary_exp      go to state 111
    int_expr         go to state 112
    stringls         go to state 113
    if_exp           go to state 114
    chain_exp        go to state 115
    postfix_exp      go to state 117
    vcall_exp        go to state 118
    dot_name_exp     go to state 119
    dot_index_exp    go to state 120
    unary_exp        go to state 121
    unary_op         go to state 122
    mul_binary_exp   go to state 124
    add_binary_exp   go to state 125
    cmp_binary_exp   go to state 264
    type_spec        go to state 131
    mod_prefix_tid   go to state 53
    tuple_type_spec  go to state 54
    array_type_spec  go to state 55


State 204

  115 and_binary_exp: and_binary_exp "and" • eq_binary_exp

    "val_id"                 shift, and go to state 9
    "TypeId"                 shift, and go to state 25
    "if"                     shift, and go to state 89
    "not"                    shift, and go to state 90
    "42"                     shift, and go to state 91
    "0x2a"                   shift, and go to state 92
    "42u"                    shift, and go to state 93
    "0x2Au"                  shift, and go to state 94
    "4.2"                    shift, and go to state 95
    "\"dq-string-literal\""  shift, and go to state 96
    "'sq-string-literal'"    shift, and go to state 97
    "("                      shift, and go to state 136
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 99
    "+"                      shift, and go to state 100
    "-"                      shift, and go to state 101

    tid              go to state 50
    vid              go to state 102
    floatl           go to state 103
    mod_prefix       go to state 104
    bracketed_exp    go to state 107
    paren_exp        go to state 108
    vtupleExpr       go to state 109
    vstructExpr      go to state 110
    primary_exp      go to state 111
    int_expr         go to state 112
    stringls         go to state 113
    if_exp           go to state 114
    chain_exp        go to state 115
    postfix_exp      go to state 117
    vcall_exp        go to state 118
    dot_name_exp     go to state 119
    dot_index_exp    go to state 120
    unary_exp        go to state 121
    unary_op         go to state 122
    mul_binary_exp   go to state 124
    add_binary_exp   go to state 125
    cmp_binary_exp   go to state 126
    eq_binary_exp    go to state 265
    type_spec        go to state 131
    mod_prefix_tid   go to state 53
    tuple_type_spec  go to state 54
    array_type_spec  go to state 55


State 205

  117 xor_binary_exp: xor_binary_exp "xor" • and_binary_exp

    "val_id"                 shift, and go to state 9
    "TypeId"                 shift, and go to state 25
    "if"                     shift, and go to state 89
    "not"                    shift, and go to state 90
    "42"                     shift, and go to state 91
    "0x2a"                   shift, and go to state 92
    "42u"                    shift, and go to state 93
    "0x2Au"                  shift, and go to state 94
    "4.2"                    shift, and go to state 95
    "\"dq-string-literal\""  shift, and go to state 96
    "'sq-string-literal'"    shift, and go to state 97
    "("                      shift, and go to state 136
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 99
    "+"                      shift, and go to state 100
    "-"                      shift, and go to state 101

    tid              go to state 50
    vid              go to state 102
    floatl           go to state 103
    mod_prefix       go to state 104
    bracketed_exp    go to state 107
    paren_exp        go to state 108
    vtupleExpr       go to state 109
    vstructExpr      go to state 110
    primary_exp      go to state 111
    int_expr         go to state 112
    stringls         go to state 113
    if_exp           go to state 114
    chain_exp        go to state 115
    postfix_exp      go to state 117
    vcall_exp        go to state 118
    dot_name_exp     go to state 119
    dot_index_exp    go to state 120
    unary_exp        go to state 121
    unary_op         go to state 122
    mul_binary_exp   go to state 124
    add_binary_exp   go to state 125
    cmp_binary_exp   go to state 126
    eq_binary_exp    go to state 127
    and_binary_exp   go to state 266
    type_spec        go to state 131
    mod_prefix_tid   go to state 53
    tuple_type_spec  go to state 54
    array_type_spec  go to state 55


State 206

  119 or_binary_exp: or_binary_exp "or" • xor_binary_exp

    "val_id"                 shift, and go to state 9
    "TypeId"                 shift, and go to state 25
    "if"                     shift, and go to state 89
    "not"                    shift, and go to state 90
    "42"                     shift, and go to state 91
    "0x2a"                   shift, and go to state 92
    "42u"                    shift, and go to state 93
    "0x2Au"                  shift, and go to state 94
    "4.2"                    shift, and go to state 95
    "\"dq-string-literal\""  shift, and go to state 96
    "'sq-string-literal'"    shift, and go to state 97
    "("                      shift, and go to state 136
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 99
    "+"                      shift, and go to state 100
    "-"                      shift, and go to state 101

    tid              go to state 50
    vid              go to state 102
    floatl           go to state 103
    mod_prefix       go to state 104
    bracketed_exp    go to state 107
    paren_exp        go to state 108
    vtupleExpr       go to state 109
    vstructExpr      go to state 110
    primary_exp      go to state 111
    int_expr         go to state 112
    stringls         go to state 113
    if_exp           go to state 114
    chain_exp        go to state 115
    postfix_exp      go to state 117
    vcall_exp        go to state 118
    dot_name_exp     go to state 119
    dot_index_exp    go to state 120
    unary_exp        go to state 121
    unary_op         go to state 122
    mul_binary_exp   go to state 124
    add_binary_exp   go to state 125
    cmp_binary_exp   go to state 126
    eq_binary_exp    go to state 127
    and_binary_exp   go to state 128
    xor_binary_exp   go to state 267
    type_spec        go to state 131
    mod_prefix_tid   go to state 53
    tuple_type_spec  go to state 54
    array_type_spec  go to state 55


State 207

   85 dot_name_exp: type_spec "::" • "TypeId"
   86             | type_spec "::" • "TypeId" "using" paren_exp

    "TypeId"  shift, and go to state 268


State 208

   77 lambda_exp: fn_type_spec bracketed_exp •

    $default  reduce using rule 77 (lambda_exp)


State 209

  162 class_exp_class_spec: "cls" "(" tid class_spec • ")" "{" type_query_exp_sl "}"

    ")"  shift, and go to state 269


State 210

   51 vtupleExpr: "(" ")" •

    $default  reduce using rule 51 (vtupleExpr)


State 211

  151 targ_cl: targ_cl "," • targ

    "val_id"                 shift, and go to state 9
    "TypeId"                 shift, and go to state 25
    "if"                     shift, and go to state 89
    "not"                    shift, and go to state 90
    "42"                     shift, and go to state 91
    "0x2a"                   shift, and go to state 92
    "42u"                    shift, and go to state 93
    "0x2Au"                  shift, and go to state 94
    "4.2"                    shift, and go to state 95
    "\"dq-string-literal\""  shift, and go to state 96
    "'sq-string-literal'"    shift, and go to state 97
    "("                      shift, and go to state 136
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 99
    "+"                      shift, and go to state 100
    "-"                      shift, and go to state 101

    tid              go to state 50
    vid              go to state 102
    floatl           go to state 103
    mod_prefix       go to state 104
    expr             go to state 137
    bracketed_exp    go to state 107
    paren_exp        go to state 108
    vtupleExpr       go to state 109
    vstructExpr      go to state 110
    primary_exp      go to state 111
    int_expr         go to state 112
    stringls         go to state 113
    if_exp           go to state 114
    chain_exp        go to state 115
    postfix_exp      go to state 117
    vcall_exp        go to state 118
    dot_name_exp     go to state 119
    dot_index_exp    go to state 120
    unary_exp        go to state 121
    unary_op         go to state 122
    binary_exp       go to state 123
    mul_binary_exp   go to state 124
    add_binary_exp   go to state 125
    cmp_binary_exp   go to state 126
    eq_binary_exp    go to state 127
    and_binary_exp   go to state 128
    xor_binary_exp   go to state 129
    or_binary_exp    go to state 130
    type_spec        go to state 138
    mod_prefix_tid   go to state 53
    tuple_type_spec  go to state 54
    array_type_spec  go to state 55
    targ             go to state 270


State 212

   36 mod_prefix: vid "[" targ_cl "]" • "::"

    "::"  shift, and go to state 271


State 213

   38 mod_prefix: mod_prefix vid "[" targ_cl • "]" "::"
  151 targ_cl: targ_cl • "," targ

    ","  shift, and go to state 211
    "]"  shift, and go to state 272


State 214

  137 array_type_spec: "[" type_spec "*" expr • "]"

    "]"  shift, and go to state 273


State 215

  125 type_spec_cl2: type_spec_cl2 "," type_spec •

    $default  reduce using rule 125 (type_spec_cl2)


State 216

  124 type_spec_cl2: type_spec "," type_spec •

    $default  reduce using rule 124 (type_spec_cl2)


State 217

  142 enum_type_spec_field: tid •
  143                     | tid • long_type_spec

    "val_id"  shift, and go to state 9
    "TypeId"  shift, and go to state 25
    "enum"    shift, and go to state 80
    "("       shift, and go to state 81
    "["       shift, and go to state 48
    "{"       shift, and go to state 82

    $default  reduce using rule 142 (enum_type_spec_field)

    tid               go to state 50
    vid               go to state 41
    mod_prefix        go to state 51
    type_spec         go to state 83
    long_type_spec    go to state 274
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 85
    enum_type_spec    go to state 86
    fn_type_spec      go to state 87
    vpattern          go to state 88


State 218

  144 enum_type_spec_field_cl: enum_type_spec_field •

    $default  reduce using rule 144 (enum_type_spec_field_cl)


State 219

  145 enum_type_spec_field_cl: enum_type_spec_field_cl • "," enum_type_spec_field
  146 enum_type_spec: "enum" "{" enum_type_spec_field_cl • "}"

    ","  shift, and go to state 275
    "}"  shift, and go to state 276


State 220

  165 vpattern_field: "out" vid • type_spec

    "val_id"  shift, and go to state 9
    "TypeId"  shift, and go to state 25
    "["       shift, and go to state 48
    "{"       shift, and go to state 49

    tid              go to state 50
    vid              go to state 41
    mod_prefix       go to state 51
    type_spec        go to state 277
    mod_prefix_tid   go to state 53
    tuple_type_spec  go to state 54
    array_type_spec  go to state 55


State 221

  166 vpattern_field: "inout" vid • type_spec

    "val_id"  shift, and go to state 9
    "TypeId"  shift, and go to state 25
    "["       shift, and go to state 48
    "{"       shift, and go to state 49

    tid              go to state 50
    vid              go to state 41
    mod_prefix       go to state 51
    type_spec        go to state 278
    mod_prefix_tid   go to state 53
    tuple_type_spec  go to state 54
    array_type_spec  go to state 55


State 222

  164 vpattern_field: vid type_spec •

    $default  reduce using rule 164 (vpattern_field)


State 223

  178 vpattern_field_cl: vpattern_field_cl "," • vpattern_field

    "val_id"  shift, and go to state 9
    "out"     shift, and go to state 149
    "inout"   shift, and go to state 150

    vid             go to state 152
    vpattern_field  go to state 279


State 224

  174 vpattern: "(" vpattern_field_cl ")" •

    $default  reduce using rule 174 (vpattern)


State 225

   36 mod_prefix: vid "[" • targ_cl "]" "::"
  137 array_type_spec: "[" • type_spec "*" expr "]"

    "val_id"                 shift, and go to state 9
    "TypeId"                 shift, and go to state 25
    "if"                     shift, and go to state 89
    "not"                    shift, and go to state 90
    "42"                     shift, and go to state 91
    "0x2a"                   shift, and go to state 92
    "42u"                    shift, and go to state 93
    "0x2Au"                  shift, and go to state 94
    "4.2"                    shift, and go to state 95
    "\"dq-string-literal\""  shift, and go to state 96
    "'sq-string-literal'"    shift, and go to state 97
    "("                      shift, and go to state 136
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 99
    "+"                      shift, and go to state 100
    "-"                      shift, and go to state 101

    tid              go to state 50
    vid              go to state 102
    floatl           go to state 103
    mod_prefix       go to state 104
    expr             go to state 137
    bracketed_exp    go to state 107
    paren_exp        go to state 108
    vtupleExpr       go to state 109
    vstructExpr      go to state 110
    primary_exp      go to state 111
    int_expr         go to state 112
    stringls         go to state 113
    if_exp           go to state 114
    chain_exp        go to state 115
    postfix_exp      go to state 117
    vcall_exp        go to state 118
    dot_name_exp     go to state 119
    dot_index_exp    go to state 120
    unary_exp        go to state 121
    unary_op         go to state 122
    binary_exp       go to state 123
    mul_binary_exp   go to state 124
    add_binary_exp   go to state 125
    cmp_binary_exp   go to state 126
    eq_binary_exp    go to state 127
    and_binary_exp   go to state 128
    xor_binary_exp   go to state 129
    or_binary_exp    go to state 130
    type_spec        go to state 280
    mod_prefix_tid   go to state 53
    tuple_type_spec  go to state 54
    array_type_spec  go to state 55
    targ             go to state 139
    targ_cl          go to state 140


State 226

  141 struct_type_spec_field: vid long_type_spec •

    $default  reduce using rule 141 (struct_type_spec_field)


State 227

  140 struct_type_spec_field_cl: struct_type_spec_field_cl "," • struct_type_spec_field

    "val_id"  shift, and go to state 9

    vid                     go to state 281
    struct_type_spec_field  go to state 282


State 228

  138 struct_type_spec: "{" struct_type_spec_field_cl "}" •

    $default  reduce using rule 138 (struct_type_spec)


State 229

  147 fn_type_spec: vpattern "->" type_spec •

    $default  reduce using rule 147 (fn_type_spec)


State 230

   70 if_exp: "if" bracketed_exp "then" • bracketed_exp
   71       | "if" bracketed_exp "then" • bracketed_exp "else" primary_exp

    "("  shift, and go to state 136
    "{"  shift, and go to state 159

    bracketed_exp  go to state 283
    paren_exp      go to state 108
    vtupleExpr     go to state 109
    vstructExpr    go to state 110
    chain_exp      go to state 115


State 231

   42 expr_cl2: expr "," • expr
   52 vtupleExpr: "(" expr "," • ")"

    "val_id"                 shift, and go to state 9
    "TypeId"                 shift, and go to state 25
    "if"                     shift, and go to state 89
    "not"                    shift, and go to state 90
    "42"                     shift, and go to state 91
    "0x2a"                   shift, and go to state 92
    "42u"                    shift, and go to state 93
    "0x2Au"                  shift, and go to state 94
    "4.2"                    shift, and go to state 95
    "\"dq-string-literal\""  shift, and go to state 96
    "'sq-string-literal'"    shift, and go to state 97
    "("                      shift, and go to state 136
    ")"                      shift, and go to state 284
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 99
    "+"                      shift, and go to state 100
    "-"                      shift, and go to state 101

    tid              go to state 50
    vid              go to state 102
    floatl           go to state 103
    mod_prefix       go to state 104
    expr             go to state 285
    bracketed_exp    go to state 107
    paren_exp        go to state 108
    vtupleExpr       go to state 109
    vstructExpr      go to state 110
    primary_exp      go to state 111
    int_expr         go to state 112
    stringls         go to state 113
    if_exp           go to state 114
    chain_exp        go to state 115
    postfix_exp      go to state 117
    vcall_exp        go to state 118
    dot_name_exp     go to state 119
    dot_index_exp    go to state 120
    unary_exp        go to state 121
    unary_op         go to state 122
    binary_exp       go to state 123
    mul_binary_exp   go to state 124
    add_binary_exp   go to state 125
    cmp_binary_exp   go to state 126
    eq_binary_exp    go to state 127
    and_binary_exp   go to state 128
    xor_binary_exp   go to state 129
    or_binary_exp    go to state 130
    type_spec        go to state 131
    mod_prefix_tid   go to state 53
    tuple_type_spec  go to state 54
    array_type_spec  go to state 55


State 232

   50 paren_exp: "(" long_exp ")" •

    $default  reduce using rule 50 (paren_exp)


State 233

   43 expr_cl2: expr_cl2 "," • expr

    "val_id"                 shift, and go to state 9
    "TypeId"                 shift, and go to state 25
    "if"                     shift, and go to state 89
    "not"                    shift, and go to state 90
    "42"                     shift, and go to state 91
    "0x2a"                   shift, and go to state 92
    "42u"                    shift, and go to state 93
    "0x2Au"                  shift, and go to state 94
    "4.2"                    shift, and go to state 95
    "\"dq-string-literal\""  shift, and go to state 96
    "'sq-string-literal'"    shift, and go to state 97
    "("                      shift, and go to state 136
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 99
    "+"                      shift, and go to state 100
    "-"                      shift, and go to state 101

    tid              go to state 50
    vid              go to state 102
    floatl           go to state 103
    mod_prefix       go to state 104
    expr             go to state 286
    bracketed_exp    go to state 107
    paren_exp        go to state 108
    vtupleExpr       go to state 109
    vstructExpr      go to state 110
    primary_exp      go to state 111
    int_expr         go to state 112
    stringls         go to state 113
    if_exp           go to state 114
    chain_exp        go to state 115
    postfix_exp      go to state 117
    vcall_exp        go to state 118
    dot_name_exp     go to state 119
    dot_index_exp    go to state 120
    unary_exp        go to state 121
    unary_op         go to state 122
    binary_exp       go to state 123
    mul_binary_exp   go to state 124
    add_binary_exp   go to state 125
    cmp_binary_exp   go to state 126
    eq_binary_exp    go to state 127
    and_binary_exp   go to state 128
    xor_binary_exp   go to state 129
    or_binary_exp    go to state 130
    type_spec        go to state 131
    mod_prefix_tid   go to state 53
    tuple_type_spec  go to state 54
    array_type_spec  go to state 55


State 234

   53 vtupleExpr: "(" expr_cl2 ")" •

    $default  reduce using rule 53 (vtupleExpr)


State 235

  171 destructured_lpattern: "{" • lpattern_field_cl "}"

    "val_id"  shift, and go to state 9

    vid                go to state 236
    lpattern_field     go to state 287
    lpattern_field_cl  go to state 288


State 236

  167 lpattern_field: vid • type_spec
  168               | vid •

    "val_id"  shift, and go to state 9
    "TypeId"  shift, and go to state 25
    "["       shift, and go to state 48
    "{"       shift, and go to state 49

    $default  reduce using rule 168 (lpattern_field)

    tid              go to state 50
    vid              go to state 41
    mod_prefix       go to state 51
    type_spec        go to state 289
    mod_prefix_tid   go to state 53
    tuple_type_spec  go to state 54
    array_type_spec  go to state 55


State 237

  172 lpattern: lpattern_field •

    $default  reduce using rule 172 (lpattern)


State 238

  173 lpattern: destructured_lpattern •

    $default  reduce using rule 173 (lpattern)


State 239

   24 const_stmt: "const" lpattern • "=" expr

    "="  shift, and go to state 290


State 240

   25 val_stmt: "val" lpattern • "=" expr

    "="  shift, and go to state 291


State 241

   26 var_stmt: "var" lpattern • "=" expr

    "="  shift, and go to state 292


State 242

   27 set_stmt: "set" expr • "=" expr

    "="  shift, and go to state 293


State 243

   28 discard_stmt: "discard" expr •

    $default  reduce using rule 28 (discard_stmt)


State 244

   75 chain_prefix: chain_prefix_stmt ";" •

    $default  reduce using rule 75 (chain_prefix)


State 245

  163 struct_exp_field: vid ":" • expr

    "val_id"                 shift, and go to state 9
    "TypeId"                 shift, and go to state 25
    "if"                     shift, and go to state 89
    "not"                    shift, and go to state 90
    "42"                     shift, and go to state 91
    "0x2a"                   shift, and go to state 92
    "42u"                    shift, and go to state 93
    "0x2Au"                  shift, and go to state 94
    "4.2"                    shift, and go to state 95
    "\"dq-string-literal\""  shift, and go to state 96
    "'sq-string-literal'"    shift, and go to state 97
    "("                      shift, and go to state 136
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 99
    "+"                      shift, and go to state 100
    "-"                      shift, and go to state 101

    tid              go to state 50
    vid              go to state 102
    floatl           go to state 103
    mod_prefix       go to state 104
    expr             go to state 294
    bracketed_exp    go to state 107
    paren_exp        go to state 108
    vtupleExpr       go to state 109
    vstructExpr      go to state 110
    primary_exp      go to state 111
    int_expr         go to state 112
    stringls         go to state 113
    if_exp           go to state 114
    chain_exp        go to state 115
    postfix_exp      go to state 117
    vcall_exp        go to state 118
    dot_name_exp     go to state 119
    dot_index_exp    go to state 120
    unary_exp        go to state 121
    unary_op         go to state 122
    binary_exp       go to state 123
    mul_binary_exp   go to state 124
    add_binary_exp   go to state 125
    cmp_binary_exp   go to state 126
    eq_binary_exp    go to state 127
    and_binary_exp   go to state 128
    xor_binary_exp   go to state 129
    or_binary_exp    go to state 130
    type_spec        go to state 131
    mod_prefix_tid   go to state 53
    tuple_type_spec  go to state 54
    array_type_spec  go to state 55


State 246

   72 chain_exp: "{" long_exp "}" •

    $default  reduce using rule 72 (chain_exp)


State 247

   73 chain_exp: "{" chain_prefix "}" •

    $default  reduce using rule 73 (chain_exp)


State 248

   76 chain_prefix: chain_prefix chain_prefix_stmt • ";"

    ";"  shift, and go to state 295


State 249

   74 chain_exp: "{" chain_prefix long_exp • "}"

    "}"  shift, and go to state 296


State 250

  184 struct_exp_field_cl: struct_exp_field_cl "," • struct_exp_field

    "val_id"  shift, and go to state 9

    vid               go to state 297
    struct_exp_field  go to state 298


State 251

   54 vstructExpr: "{" struct_exp_field_cl "}" •

    $default  reduce using rule 54 (vstructExpr)


State 252

   84 dot_name_exp: postfix_exp "." "val_id" •

    $default  reduce using rule 84 (dot_name_exp)


State 253

   88 dot_index_exp: postfix_exp "." bracketed_exp •

    $default  reduce using rule 88 (dot_index_exp)


State 254

   87 dot_index_exp: postfix_exp "." int_expr •

    $default  reduce using rule 87 (dot_index_exp)


State 255

  153 varg: "out" • expr

    "val_id"                 shift, and go to state 9
    "TypeId"                 shift, and go to state 25
    "if"                     shift, and go to state 89
    "not"                    shift, and go to state 90
    "42"                     shift, and go to state 91
    "0x2a"                   shift, and go to state 92
    "42u"                    shift, and go to state 93
    "0x2Au"                  shift, and go to state 94
    "4.2"                    shift, and go to state 95
    "\"dq-string-literal\""  shift, and go to state 96
    "'sq-string-literal'"    shift, and go to state 97
    "("                      shift, and go to state 136
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 99
    "+"                      shift, and go to state 100
    "-"                      shift, and go to state 101

    tid              go to state 50
    vid              go to state 102
    floatl           go to state 103
    mod_prefix       go to state 104
    expr             go to state 299
    bracketed_exp    go to state 107
    paren_exp        go to state 108
    vtupleExpr       go to state 109
    vstructExpr      go to state 110
    primary_exp      go to state 111
    int_expr         go to state 112
    stringls         go to state 113
    if_exp           go to state 114
    chain_exp        go to state 115
    postfix_exp      go to state 117
    vcall_exp        go to state 118
    dot_name_exp     go to state 119
    dot_index_exp    go to state 120
    unary_exp        go to state 121
    unary_op         go to state 122
    binary_exp       go to state 123
    mul_binary_exp   go to state 124
    add_binary_exp   go to state 125
    cmp_binary_exp   go to state 126
    eq_binary_exp    go to state 127
    and_binary_exp   go to state 128
    xor_binary_exp   go to state 129
    or_binary_exp    go to state 130
    type_spec        go to state 131
    mod_prefix_tid   go to state 53
    tuple_type_spec  go to state 54
    array_type_spec  go to state 55


State 256

  154 varg: "inout" • expr

    "val_id"                 shift, and go to state 9
    "TypeId"                 shift, and go to state 25
    "if"                     shift, and go to state 89
    "not"                    shift, and go to state 90
    "42"                     shift, and go to state 91
    "0x2a"                   shift, and go to state 92
    "42u"                    shift, and go to state 93
    "0x2Au"                  shift, and go to state 94
    "4.2"                    shift, and go to state 95
    "\"dq-string-literal\""  shift, and go to state 96
    "'sq-string-literal'"    shift, and go to state 97
    "("                      shift, and go to state 136
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 99
    "+"                      shift, and go to state 100
    "-"                      shift, and go to state 101

    tid              go to state 50
    vid              go to state 102
    floatl           go to state 103
    mod_prefix       go to state 104
    expr             go to state 300
    bracketed_exp    go to state 107
    paren_exp        go to state 108
    vtupleExpr       go to state 109
    vstructExpr      go to state 110
    primary_exp      go to state 111
    int_expr         go to state 112
    stringls         go to state 113
    if_exp           go to state 114
    chain_exp        go to state 115
    postfix_exp      go to state 117
    vcall_exp        go to state 118
    dot_name_exp     go to state 119
    dot_index_exp    go to state 120
    unary_exp        go to state 121
    unary_op         go to state 122
    binary_exp       go to state 123
    mul_binary_exp   go to state 124
    add_binary_exp   go to state 125
    cmp_binary_exp   go to state 126
    eq_binary_exp    go to state 127
    and_binary_exp   go to state 128
    xor_binary_exp   go to state 129
    or_binary_exp    go to state 130
    type_spec        go to state 131
    mod_prefix_tid   go to state 53
    tuple_type_spec  go to state 54
    array_type_spec  go to state 55


State 257

   82 vcall_exp: postfix_exp "(" ")" •

    $default  reduce using rule 82 (vcall_exp)


State 258

  152 varg: expr •

    $default  reduce using rule 152 (varg)


State 259

  155 varg_cl: varg •

    $default  reduce using rule 155 (varg_cl)


State 260

   83 vcall_exp: postfix_exp "(" varg_cl • ")"
  156 varg_cl: varg_cl • "," varg

    ","  shift, and go to state 301
    ")"  shift, and go to state 302


State 261

   99 mul_binary_exp: mul_binary_exp mul_binary_op unary_exp •

    $default  reduce using rule 99 (mul_binary_exp)


State 262

   99 mul_binary_exp: mul_binary_exp • mul_binary_op unary_exp
  103 add_binary_exp: add_binary_exp add_binary_op mul_binary_exp •

    "*"  shift, and go to state 189
    "/"  shift, and go to state 190
    "%"  shift, and go to state 191

    $default  reduce using rule 103 (add_binary_exp)

    mul_binary_op  go to state 192


State 263

  103 add_binary_exp: add_binary_exp • add_binary_op mul_binary_exp
  109 cmp_binary_exp: cmp_binary_exp cmp_binary_op add_binary_exp •

    "+"  shift, and go to state 193
    "-"  shift, and go to state 194

    $default  reduce using rule 109 (cmp_binary_exp)

    add_binary_op  go to state 195


State 264

  109 cmp_binary_exp: cmp_binary_exp • cmp_binary_op add_binary_exp
  113 eq_binary_exp: eq_binary_exp eq_binary_op cmp_binary_exp •

    "<"   shift, and go to state 196
    "<="  shift, and go to state 197
    ">"   shift, and go to state 198
    ">="  shift, and go to state 199

    $default  reduce using rule 113 (eq_binary_exp)

    cmp_binary_op  go to state 200


State 265

  113 eq_binary_exp: eq_binary_exp • eq_binary_op cmp_binary_exp
  115 and_binary_exp: and_binary_exp "and" eq_binary_exp •

    "=="  shift, and go to state 201
    "!="  shift, and go to state 202

    $default  reduce using rule 115 (and_binary_exp)

    eq_binary_op  go to state 203


State 266

  115 and_binary_exp: and_binary_exp • "and" eq_binary_exp
  117 xor_binary_exp: xor_binary_exp "xor" and_binary_exp •

    "and"  shift, and go to state 204

    $default  reduce using rule 117 (xor_binary_exp)


State 267

  117 xor_binary_exp: xor_binary_exp • "xor" and_binary_exp
  119 or_binary_exp: or_binary_exp "or" xor_binary_exp •

    "xor"  shift, and go to state 205

    $default  reduce using rule 119 (or_binary_exp)


State 268

   85 dot_name_exp: type_spec "::" "TypeId" •
   86             | type_spec "::" "TypeId" • "using" paren_exp

    "using"  shift, and go to state 303

    $default  reduce using rule 85 (dot_name_exp)


State 269

  162 class_exp_class_spec: "cls" "(" tid class_spec ")" • "{" type_query_exp_sl "}"

    "{"  shift, and go to state 304


State 270

  151 targ_cl: targ_cl "," targ •

    $default  reduce using rule 151 (targ_cl)


State 271

   36 mod_prefix: vid "[" targ_cl "]" "::" •

    $default  reduce using rule 36 (mod_prefix)


State 272

   38 mod_prefix: mod_prefix vid "[" targ_cl "]" • "::"

    "::"  shift, and go to state 305


State 273

  137 array_type_spec: "[" type_spec "*" expr "]" •

    $default  reduce using rule 137 (array_type_spec)


State 274

  143 enum_type_spec_field: tid long_type_spec •

    $default  reduce using rule 143 (enum_type_spec_field)


State 275

  145 enum_type_spec_field_cl: enum_type_spec_field_cl "," • enum_type_spec_field

    "TypeId"  shift, and go to state 25

    tid                   go to state 217
    enum_type_spec_field  go to state 306


State 276

  146 enum_type_spec: "enum" "{" enum_type_spec_field_cl "}" •

    $default  reduce using rule 146 (enum_type_spec)


State 277

  165 vpattern_field: "out" vid type_spec •

    $default  reduce using rule 165 (vpattern_field)


State 278

  166 vpattern_field: "inout" vid type_spec •

    $default  reduce using rule 166 (vpattern_field)


State 279

  178 vpattern_field_cl: vpattern_field_cl "," vpattern_field •

    $default  reduce using rule 178 (vpattern_field_cl)


State 280

   85 dot_name_exp: type_spec • "::" "TypeId"
   86             | type_spec • "::" "TypeId" "using" paren_exp
  137 array_type_spec: "[" type_spec • "*" expr "]"
  148 targ: type_spec •

    "::"  shift, and go to state 207
    "*"   shift, and go to state 143

    $default  reduce using rule 148 (targ)


State 281

  141 struct_type_spec_field: vid • long_type_spec

    "val_id"  shift, and go to state 9
    "TypeId"  shift, and go to state 25
    "enum"    shift, and go to state 80
    "("       shift, and go to state 81
    "["       shift, and go to state 48
    "{"       shift, and go to state 82

    tid               go to state 50
    vid               go to state 41
    mod_prefix        go to state 51
    type_spec         go to state 83
    long_type_spec    go to state 226
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 85
    enum_type_spec    go to state 86
    fn_type_spec      go to state 87
    vpattern          go to state 88


State 282

  140 struct_type_spec_field_cl: struct_type_spec_field_cl "," struct_type_spec_field •

    $default  reduce using rule 140 (struct_type_spec_field_cl)


State 283

   70 if_exp: "if" bracketed_exp "then" bracketed_exp •
   71       | "if" bracketed_exp "then" bracketed_exp • "else" primary_exp

    "else"  shift, and go to state 307

    $default  reduce using rule 70 (if_exp)


State 284

   52 vtupleExpr: "(" expr "," ")" •

    $default  reduce using rule 52 (vtupleExpr)


State 285

   42 expr_cl2: expr "," expr •

    $default  reduce using rule 42 (expr_cl2)


State 286

   43 expr_cl2: expr_cl2 "," expr •

    $default  reduce using rule 43 (expr_cl2)


State 287

  179 lpattern_field_cl: lpattern_field •

    $default  reduce using rule 179 (lpattern_field_cl)


State 288

  171 destructured_lpattern: "{" lpattern_field_cl • "}"
  180 lpattern_field_cl: lpattern_field_cl • "," lpattern_field

    ","  shift, and go to state 308
    "}"  shift, and go to state 309


State 289

  167 lpattern_field: vid type_spec •

    $default  reduce using rule 167 (lpattern_field)


State 290

   24 const_stmt: "const" lpattern "=" • expr

    "val_id"                 shift, and go to state 9
    "TypeId"                 shift, and go to state 25
    "if"                     shift, and go to state 89
    "not"                    shift, and go to state 90
    "42"                     shift, and go to state 91
    "0x2a"                   shift, and go to state 92
    "42u"                    shift, and go to state 93
    "0x2Au"                  shift, and go to state 94
    "4.2"                    shift, and go to state 95
    "\"dq-string-literal\""  shift, and go to state 96
    "'sq-string-literal'"    shift, and go to state 97
    "("                      shift, and go to state 136
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 99
    "+"                      shift, and go to state 100
    "-"                      shift, and go to state 101

    tid              go to state 50
    vid              go to state 102
    floatl           go to state 103
    mod_prefix       go to state 104
    expr             go to state 310
    bracketed_exp    go to state 107
    paren_exp        go to state 108
    vtupleExpr       go to state 109
    vstructExpr      go to state 110
    primary_exp      go to state 111
    int_expr         go to state 112
    stringls         go to state 113
    if_exp           go to state 114
    chain_exp        go to state 115
    postfix_exp      go to state 117
    vcall_exp        go to state 118
    dot_name_exp     go to state 119
    dot_index_exp    go to state 120
    unary_exp        go to state 121
    unary_op         go to state 122
    binary_exp       go to state 123
    mul_binary_exp   go to state 124
    add_binary_exp   go to state 125
    cmp_binary_exp   go to state 126
    eq_binary_exp    go to state 127
    and_binary_exp   go to state 128
    xor_binary_exp   go to state 129
    or_binary_exp    go to state 130
    type_spec        go to state 131
    mod_prefix_tid   go to state 53
    tuple_type_spec  go to state 54
    array_type_spec  go to state 55


State 291

   25 val_stmt: "val" lpattern "=" • expr

    "val_id"                 shift, and go to state 9
    "TypeId"                 shift, and go to state 25
    "if"                     shift, and go to state 89
    "not"                    shift, and go to state 90
    "42"                     shift, and go to state 91
    "0x2a"                   shift, and go to state 92
    "42u"                    shift, and go to state 93
    "0x2Au"                  shift, and go to state 94
    "4.2"                    shift, and go to state 95
    "\"dq-string-literal\""  shift, and go to state 96
    "'sq-string-literal'"    shift, and go to state 97
    "("                      shift, and go to state 136
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 99
    "+"                      shift, and go to state 100
    "-"                      shift, and go to state 101

    tid              go to state 50
    vid              go to state 102
    floatl           go to state 103
    mod_prefix       go to state 104
    expr             go to state 311
    bracketed_exp    go to state 107
    paren_exp        go to state 108
    vtupleExpr       go to state 109
    vstructExpr      go to state 110
    primary_exp      go to state 111
    int_expr         go to state 112
    stringls         go to state 113
    if_exp           go to state 114
    chain_exp        go to state 115
    postfix_exp      go to state 117
    vcall_exp        go to state 118
    dot_name_exp     go to state 119
    dot_index_exp    go to state 120
    unary_exp        go to state 121
    unary_op         go to state 122
    binary_exp       go to state 123
    mul_binary_exp   go to state 124
    add_binary_exp   go to state 125
    cmp_binary_exp   go to state 126
    eq_binary_exp    go to state 127
    and_binary_exp   go to state 128
    xor_binary_exp   go to state 129
    or_binary_exp    go to state 130
    type_spec        go to state 131
    mod_prefix_tid   go to state 53
    tuple_type_spec  go to state 54
    array_type_spec  go to state 55


State 292

   26 var_stmt: "var" lpattern "=" • expr

    "val_id"                 shift, and go to state 9
    "TypeId"                 shift, and go to state 25
    "if"                     shift, and go to state 89
    "not"                    shift, and go to state 90
    "42"                     shift, and go to state 91
    "0x2a"                   shift, and go to state 92
    "42u"                    shift, and go to state 93
    "0x2Au"                  shift, and go to state 94
    "4.2"                    shift, and go to state 95
    "\"dq-string-literal\""  shift, and go to state 96
    "'sq-string-literal'"    shift, and go to state 97
    "("                      shift, and go to state 136
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 99
    "+"                      shift, and go to state 100
    "-"                      shift, and go to state 101

    tid              go to state 50
    vid              go to state 102
    floatl           go to state 103
    mod_prefix       go to state 104
    expr             go to state 312
    bracketed_exp    go to state 107
    paren_exp        go to state 108
    vtupleExpr       go to state 109
    vstructExpr      go to state 110
    primary_exp      go to state 111
    int_expr         go to state 112
    stringls         go to state 113
    if_exp           go to state 114
    chain_exp        go to state 115
    postfix_exp      go to state 117
    vcall_exp        go to state 118
    dot_name_exp     go to state 119
    dot_index_exp    go to state 120
    unary_exp        go to state 121
    unary_op         go to state 122
    binary_exp       go to state 123
    mul_binary_exp   go to state 124
    add_binary_exp   go to state 125
    cmp_binary_exp   go to state 126
    eq_binary_exp    go to state 127
    and_binary_exp   go to state 128
    xor_binary_exp   go to state 129
    or_binary_exp    go to state 130
    type_spec        go to state 131
    mod_prefix_tid   go to state 53
    tuple_type_spec  go to state 54
    array_type_spec  go to state 55


State 293

   27 set_stmt: "set" expr "=" • expr

    "val_id"                 shift, and go to state 9
    "TypeId"                 shift, and go to state 25
    "if"                     shift, and go to state 89
    "not"                    shift, and go to state 90
    "42"                     shift, and go to state 91
    "0x2a"                   shift, and go to state 92
    "42u"                    shift, and go to state 93
    "0x2Au"                  shift, and go to state 94
    "4.2"                    shift, and go to state 95
    "\"dq-string-literal\""  shift, and go to state 96
    "'sq-string-literal'"    shift, and go to state 97
    "("                      shift, and go to state 136
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 99
    "+"                      shift, and go to state 100
    "-"                      shift, and go to state 101

    tid              go to state 50
    vid              go to state 102
    floatl           go to state 103
    mod_prefix       go to state 104
    expr             go to state 313
    bracketed_exp    go to state 107
    paren_exp        go to state 108
    vtupleExpr       go to state 109
    vstructExpr      go to state 110
    primary_exp      go to state 111
    int_expr         go to state 112
    stringls         go to state 113
    if_exp           go to state 114
    chain_exp        go to state 115
    postfix_exp      go to state 117
    vcall_exp        go to state 118
    dot_name_exp     go to state 119
    dot_index_exp    go to state 120
    unary_exp        go to state 121
    unary_op         go to state 122
    binary_exp       go to state 123
    mul_binary_exp   go to state 124
    add_binary_exp   go to state 125
    cmp_binary_exp   go to state 126
    eq_binary_exp    go to state 127
    and_binary_exp   go to state 128
    xor_binary_exp   go to state 129
    or_binary_exp    go to state 130
    type_spec        go to state 131
    mod_prefix_tid   go to state 53
    tuple_type_spec  go to state 54
    array_type_spec  go to state 55


State 294

  163 struct_exp_field: vid ":" expr •

    $default  reduce using rule 163 (struct_exp_field)


State 295

   76 chain_prefix: chain_prefix chain_prefix_stmt ";" •

    $default  reduce using rule 76 (chain_prefix)


State 296

   74 chain_exp: "{" chain_prefix long_exp "}" •

    $default  reduce using rule 74 (chain_exp)


State 297

  163 struct_exp_field: vid • ":" expr

    ":"  shift, and go to state 245


State 298

  184 struct_exp_field_cl: struct_exp_field_cl "," struct_exp_field •

    $default  reduce using rule 184 (struct_exp_field_cl)


State 299

  153 varg: "out" expr •

    $default  reduce using rule 153 (varg)


State 300

  154 varg: "inout" expr •

    $default  reduce using rule 154 (varg)


State 301

  156 varg_cl: varg_cl "," • varg

    "val_id"                 shift, and go to state 9
    "TypeId"                 shift, and go to state 25
    "if"                     shift, and go to state 89
    "not"                    shift, and go to state 90
    "out"                    shift, and go to state 255
    "inout"                  shift, and go to state 256
    "42"                     shift, and go to state 91
    "0x2a"                   shift, and go to state 92
    "42u"                    shift, and go to state 93
    "0x2Au"                  shift, and go to state 94
    "4.2"                    shift, and go to state 95
    "\"dq-string-literal\""  shift, and go to state 96
    "'sq-string-literal'"    shift, and go to state 97
    "("                      shift, and go to state 136
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 99
    "+"                      shift, and go to state 100
    "-"                      shift, and go to state 101

    tid              go to state 50
    vid              go to state 102
    floatl           go to state 103
    mod_prefix       go to state 104
    expr             go to state 258
    bracketed_exp    go to state 107
    paren_exp        go to state 108
    vtupleExpr       go to state 109
    vstructExpr      go to state 110
    primary_exp      go to state 111
    int_expr         go to state 112
    stringls         go to state 113
    if_exp           go to state 114
    chain_exp        go to state 115
    postfix_exp      go to state 117
    vcall_exp        go to state 118
    dot_name_exp     go to state 119
    dot_index_exp    go to state 120
    unary_exp        go to state 121
    unary_op         go to state 122
    binary_exp       go to state 123
    mul_binary_exp   go to state 124
    add_binary_exp   go to state 125
    cmp_binary_exp   go to state 126
    eq_binary_exp    go to state 127
    and_binary_exp   go to state 128
    xor_binary_exp   go to state 129
    or_binary_exp    go to state 130
    type_spec        go to state 131
    mod_prefix_tid   go to state 53
    tuple_type_spec  go to state 54
    array_type_spec  go to state 55
    varg             go to state 314


State 302

   83 vcall_exp: postfix_exp "(" varg_cl ")" •

    $default  reduce using rule 83 (vcall_exp)


State 303

   86 dot_name_exp: type_spec "::" "TypeId" "using" • paren_exp

    "("  shift, and go to state 315

    paren_exp  go to state 316


State 304

  162 class_exp_class_spec: "cls" "(" tid class_spec ")" "{" • type_query_exp_sl "}"

    "val_id"  shift, and go to state 9
    "TypeId"  shift, and go to state 25
    "["       shift, and go to state 48
    "{"       shift, and go to state 49

    tid                go to state 50
    vid                go to state 41
    mod_prefix         go to state 51
    type_query_exp_sl  go to state 317
    type_query_exp     go to state 318
    type_spec          go to state 319
    mod_prefix_tid     go to state 53
    tuple_type_spec    go to state 54
    array_type_spec    go to state 55


State 305

   38 mod_prefix: mod_prefix vid "[" targ_cl "]" "::" •

    $default  reduce using rule 38 (mod_prefix)


State 306

  145 enum_type_spec_field_cl: enum_type_spec_field_cl "," enum_type_spec_field •

    $default  reduce using rule 145 (enum_type_spec_field_cl)


State 307

   71 if_exp: "if" bracketed_exp "then" bracketed_exp "else" • primary_exp

    "val_id"                 shift, and go to state 9
    "if"                     shift, and go to state 89
    "42"                     shift, and go to state 91
    "0x2a"                   shift, and go to state 92
    "42u"                    shift, and go to state 93
    "0x2Au"                  shift, and go to state 94
    "4.2"                    shift, and go to state 95
    "\"dq-string-literal\""  shift, and go to state 96
    "'sq-string-literal'"    shift, and go to state 97
    "("                      shift, and go to state 136
    "{"                      shift, and go to state 159

    vid            go to state 102
    floatl         go to state 103
    mod_prefix     go to state 320
    bracketed_exp  go to state 107
    paren_exp      go to state 108
    vtupleExpr     go to state 109
    vstructExpr    go to state 110
    primary_exp    go to state 321
    int_expr       go to state 112
    stringls       go to state 113
    if_exp         go to state 114
    chain_exp      go to state 115


State 308

  180 lpattern_field_cl: lpattern_field_cl "," • lpattern_field

    "val_id"  shift, and go to state 9

    vid             go to state 236
    lpattern_field  go to state 322


State 309

  171 destructured_lpattern: "{" lpattern_field_cl "}" •

    $default  reduce using rule 171 (destructured_lpattern)


State 310

   24 const_stmt: "const" lpattern "=" expr •

    $default  reduce using rule 24 (const_stmt)


State 311

   25 val_stmt: "val" lpattern "=" expr •

    $default  reduce using rule 25 (val_stmt)


State 312

   26 var_stmt: "var" lpattern "=" expr •

    $default  reduce using rule 26 (var_stmt)


State 313

   27 set_stmt: "set" expr "=" expr •

    $default  reduce using rule 27 (set_stmt)


State 314

  156 varg_cl: varg_cl "," varg •

    $default  reduce using rule 156 (varg_cl)


State 315

   50 paren_exp: "(" • long_exp ")"

    "val_id"                 shift, and go to state 9
    "TypeId"                 shift, and go to state 25
    "if"                     shift, and go to state 89
    "not"                    shift, and go to state 90
    "42"                     shift, and go to state 91
    "0x2a"                   shift, and go to state 92
    "42u"                    shift, and go to state 93
    "0x2Au"                  shift, and go to state 94
    "4.2"                    shift, and go to state 95
    "\"dq-string-literal\""  shift, and go to state 96
    "'sq-string-literal'"    shift, and go to state 97
    "("                      shift, and go to state 98
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 99
    "+"                      shift, and go to state 100
    "-"                      shift, and go to state 101

    tid              go to state 50
    vid              go to state 102
    floatl           go to state 103
    mod_prefix       go to state 104
    expr             go to state 105
    long_exp         go to state 164
    bracketed_exp    go to state 107
    paren_exp        go to state 108
    vtupleExpr       go to state 109
    vstructExpr      go to state 110
    primary_exp      go to state 111
    int_expr         go to state 112
    stringls         go to state 113
    if_exp           go to state 114
    chain_exp        go to state 115
    lambda_exp       go to state 116
    postfix_exp      go to state 117
    vcall_exp        go to state 118
    dot_name_exp     go to state 119
    dot_index_exp    go to state 120
    unary_exp        go to state 121
    unary_op         go to state 122
    binary_exp       go to state 123
    mul_binary_exp   go to state 124
    add_binary_exp   go to state 125
    cmp_binary_exp   go to state 126
    eq_binary_exp    go to state 127
    and_binary_exp   go to state 128
    xor_binary_exp   go to state 129
    or_binary_exp    go to state 130
    type_spec        go to state 131
    mod_prefix_tid   go to state 53
    tuple_type_spec  go to state 54
    array_type_spec  go to state 55
    fn_type_spec     go to state 132
    vpattern         go to state 88


State 316

   86 dot_name_exp: type_spec "::" "TypeId" "using" paren_exp •

    $default  reduce using rule 86 (dot_name_exp)


State 317

   45 type_query_exp_sl: type_query_exp_sl • type_query_exp ";"
  162 class_exp_class_spec: "cls" "(" tid class_spec ")" "{" type_query_exp_sl • "}"

    "val_id"  shift, and go to state 9
    "TypeId"  shift, and go to state 25
    "["       shift, and go to state 48
    "{"       shift, and go to state 49
    "}"       shift, and go to state 323

    tid              go to state 50
    vid              go to state 41
    mod_prefix       go to state 51
    type_query_exp   go to state 324
    type_spec        go to state 319
    mod_prefix_tid   go to state 53
    tuple_type_spec  go to state 54
    array_type_spec  go to state 55


State 318

   44 type_query_exp_sl: type_query_exp • ";"

    ";"  shift, and go to state 325


State 319

  120 type_query_exp: type_spec • type_query_op type_spec

    "=="  shift, and go to state 326
    ":<"  shift, and go to state 327
    ">:"  shift, and go to state 328

    type_query_op  go to state 329


State 320

   37 mod_prefix: mod_prefix • vid "::"
   38           | mod_prefix • vid "[" targ_cl "]" "::"
   61 primary_exp: mod_prefix • vid

    "val_id"  shift, and go to state 9

    vid  go to state 183


State 321

   71 if_exp: "if" bracketed_exp "then" bracketed_exp "else" primary_exp •

    $default  reduce using rule 71 (if_exp)


State 322

  180 lpattern_field_cl: lpattern_field_cl "," lpattern_field •

    $default  reduce using rule 180 (lpattern_field_cl)


State 323

  162 class_exp_class_spec: "cls" "(" tid class_spec ")" "{" type_query_exp_sl "}" •

    $default  reduce using rule 162 (class_exp_class_spec)


State 324

   45 type_query_exp_sl: type_query_exp_sl type_query_exp • ";"

    ";"  shift, and go to state 330


State 325

   44 type_query_exp_sl: type_query_exp ";" •

    $default  reduce using rule 44 (type_query_exp_sl)


State 326

  123 type_query_op: "==" •

    $default  reduce using rule 123 (type_query_op)


State 327

  121 type_query_op: ":<" •

    $default  reduce using rule 121 (type_query_op)


State 328

  122 type_query_op: ">:" •

    $default  reduce using rule 122 (type_query_op)


State 329

  120 type_query_exp: type_spec type_query_op • type_spec

    "val_id"  shift, and go to state 9
    "TypeId"  shift, and go to state 25
    "["       shift, and go to state 48
    "{"       shift, and go to state 49

    tid              go to state 50
    vid              go to state 41
    mod_prefix       go to state 51
    type_spec        go to state 331
    mod_prefix_tid   go to state 53
    tuple_type_spec  go to state 54
    array_type_spec  go to state 55


State 330

   45 type_query_exp_sl: type_query_exp_sl type_query_exp ";" •

    $default  reduce using rule 45 (type_query_exp_sl)


State 331

  120 type_query_exp: type_spec type_query_op type_spec •

    $default  reduce using rule 120 (type_query_exp)
