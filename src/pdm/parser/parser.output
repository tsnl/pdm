Nonterminals useless in grammar

    type_spec_cl1
    expr_cl0


Terminals unused in grammar

    "<__42__>"
    "match"
    "with"
    "lambda"
    "typeclass"
    "^"
    "&"
    "EOS"
    "<null>"


Rules useless in grammar

  204 expr_cl0: %empty
  205         | expr_cl0 "," expr


Grammar

    0 $accept: script $end

    1 script: script_head script_body

    2 script_head: %empty
    3            | script_head script_head_stmt ";"

    4 script_head_stmt: import_stmt
    5                 | extern_stmt

    6 script_body: %empty
    7            | script_body script_body_stmt ";"

    8 script_body_stmt: top_mod_stmt

    9 top_mod_stmt: "module" "<TypeId>" "{" mod_content "}"

   10 sub_mod_stmt: "sub" "<TypeId>" "{" mod_content "}"
   11             | "sub" "<TypeId>" tpattern_seq "{" mod_content "}"

   12 mod_content: mod_content_stmt ";"
   13            | mod_content mod_content_stmt ";"

   14 mod_content_stmt: mod_val_stmt
   15                 | mod_type_stmt
   16                 | mod_enum_stmt
   17                 | mod_typeclass_stmt
   18                 | sub_mod_stmt

   19 mod_val_stmt: vid "=" expr
   20             | vid tpattern_seq "=" expr
   21             | vid type_spec "from" tid stringl
   22             | vid tpattern_seq type_spec "from" tid stringl

   23 mod_type_stmt: tid "=" long_type_spec
   24              | tid tpattern_seq "=" long_type_spec

   25 mod_enum_stmt: tid enum_field_pl
   26              | tid tpattern_seq enum_field_pl

   27 enum_field_pl: "|" unprefixed_enum_field_pl

   28 unprefixed_enum_field_pl: enum_field
   29                         | unprefixed_enum_field_pl "|" enum_field

   30 enum_field: tid
   31           | tid type_spec

   32 mod_typeclass_stmt: tid ":-" "<" tid class_spec ">" "{" type_query_exp_sl "}"
   33                   | tid tpattern_seq ":-" "<" tid class_spec ">" "{" type_query_exp_sl "}"

   34 import_stmt: "import" tid "from" stringl "type" stringl

   35 extern_stmt: "extern" tid "from" expr

   36 chain_prefix_stmt: const_stmt
   37                  | val_stmt
   38                  | var_stmt
   39                  | set_stmt
   40                  | discard_stmt

   41 const_stmt: "const" lpattern "=" expr

   42 val_stmt: "val" lpattern "=" expr

   43 var_stmt: "var" lpattern "=" expr

   44 set_stmt: "set" expr "=" expr

   45 discard_stmt: "discard" expr

   46 tid: "<TypeId>"

   47 vid: "<val_id>"

   48 floatl: "4.2"

   49 stringl: "'sq-string-literal'"
   50        | "\"dq-string-literal\""

   51 mod_prefix: tid ":"
   52           | mod_prefix vid ":"

   53 expr: binary_exp

   54 long_exp: expr

   55 expr_cl2: expr "," expr
   56         | expr_cl2 "," expr

   57 type_query_exp_sl: type_query_exp ";"
   58                  | type_query_exp_sl type_query_exp ";"

   59 bracketed_exp: unit_exp
   60              | paren_exp
   61              | vtupleExpr
   62              | vstructExpr
   63              | chain_exp

   64 unit_exp: "(" ")"
   65         | "{" "}"

   66 paren_exp: "(" long_exp ")"

   67 vtupleExpr: "(" expr "," ")"
   68           | "(" expr_cl2 ")"

   69 vstructExpr: "{" struct_exp_field_cl "}"

   70 primary_exp: bracketed_exp
   71            | vid
   72            | int_expr
   73            | floatl
   74            | stringls
   75            | if_exp
   76            | lambda_exp

   77 int_expr: "42"
   78         | "0x2a"
   79         | "42u"
   80         | "0x2Au"

   81 stringls: "'sq-string-literal'"
   82         | "\"dq-string-literal\""
   83         | stringls "'sq-string-literal'"
   84         | stringls "\"dq-string-literal\""

   85 if_exp: "if" bracketed_exp "then" bracketed_exp
   86       | "if" bracketed_exp "then" bracketed_exp "else" primary_exp

   87 chain_exp: "{" expr "}"
   88          | "{" chain_prefix "}"
   89          | "{" chain_prefix expr "}"

   90 chain_prefix: chain_prefix_stmt ";"
   91             | chain_prefix chain_prefix_stmt ";"

   92 lambda_exp: "fn" vpattern bracketed_exp
   93           | "fn" vpattern "->" type_spec bracketed_exp

   94 postfix_exp: primary_exp
   95            | tcall_exp
   96            | vcall_exp
   97            | dot_name_exp
   98            | dot_index_exp

   99 tcall_exp: postfix_exp "[" targ_cl "]"

  100 vcall_exp: postfix_exp "(" ")"
  101          | postfix_exp "(" varg_cl ")"

  102 dot_name_exp: postfix_exp "." "<val_id>"
  103             | type_spec "." "<TypeId>"
  104             | type_spec "." "<TypeId>" "using" paren_exp
  105             | mod_prefix "<val_id>"

  106 dot_index_exp: postfix_exp "." int_expr
  107              | postfix_exp "." bracketed_exp

  108 unary_exp: postfix_exp
  109          | unary_op unary_exp

  110 unary_op: "+"
  111         | "-"
  112         | "not"

  113 binary_exp: or_binary_exp

  114 mul_binary_op: "*"
  115              | "/"
  116              | "%"

  117 mul_binary_exp: unary_exp
  118               | mul_binary_exp mul_binary_op unary_exp

  119 add_binary_op: "+"
  120              | "-"

  121 add_binary_exp: mul_binary_exp
  122               | add_binary_exp add_binary_op mul_binary_exp

  123 cmp_binary_op: "<"
  124              | "<="
  125              | ">"
  126              | ">="

  127 cmp_binary_exp: add_binary_exp
  128               | cmp_binary_exp cmp_binary_op add_binary_exp

  129 eq_binary_op: "=="
  130             | "!="

  131 eq_binary_exp: cmp_binary_exp
  132              | eq_binary_exp eq_binary_op cmp_binary_exp

  133 and_binary_exp: eq_binary_exp
  134               | and_binary_exp "and" eq_binary_exp

  135 xor_binary_exp: and_binary_exp
  136               | xor_binary_exp "xor" and_binary_exp

  137 or_binary_exp: xor_binary_exp
  138              | or_binary_exp "or" xor_binary_exp

  139 type_query_exp: type_spec type_query_op long_type_spec

  140 type_query_op: ":<"
  141              | ">:"
  142              | "::"

  143 type_spec: unary_type_spec

  144 type_spec_cl2: type_spec "," type_spec
  145              | type_spec_cl2 "," type_spec

  146 struct_type_spec_field: vid type_spec

  147 struct_type_spec_field_cl: struct_type_spec_field
  148                          | struct_type_spec_field_cl "," struct_type_spec_field

  149 primary_type_spec: tid
  150                  | paren_type_spec
  151                  | tuple_type_spec
  152                  | mod_prefix_tid
  153                  | fn_type_spec

  154 paren_type_spec: "(" type_spec ")"

  155 tuple_type_spec: "(" type_spec "," ")"
  156                | "(" type_spec_cl2 ")"

  157 mod_prefix_tid: mod_prefix tid

  158 fn_type_spec: "Fn" vpattern primary_type_spec

  159 postfix_type_spec: primary_type_spec
  160                  | tcall_type_spec

  161 tcall_type_spec: postfix_type_spec "[" targ_cl "]"

  162 unary_type_spec: postfix_type_spec

  163 long_type_spec: unary_type_spec
  164               | struct_type_spec

  165 struct_type_spec: "{" struct_type_spec_field_cl "}"

  166 targ: type_spec
  167     | expr

  168 targ_cl: targ
  169        | targ_cl "," targ

  170 varg: expr
  171     | "out" expr
  172     | "inout" expr

  173 varg_cl: varg
  174        | varg_cl "," varg

  175 class_spec: postfix_class_spec

  176 primary_class_spec: tid

  177 postfix_class_spec: primary_class_spec
  178                   | postfix_class_spec "[" targ_cl "]"

  179 struct_exp_field: vid "=" expr

  180 vpattern_field: vid type_spec
  181               | "out" vid type_spec
  182               | "inout" vid type_spec

  183 lpattern_field: vid type_spec
  184               | vid

  185 tpattern_field: vid type_spec
  186               | tid class_spec

  187 destructured_lpattern: "(" lpattern_field_cl ")"

  188 lpattern: lpattern_field
  189         | destructured_lpattern

  190 vpattern: "(" vpattern_field_cl ")"
  191         | "(" ")"

  192 tpattern: "[" tpattern_field_cl "]"
  193         | "!" "[" tpattern_field_cl "]"

  194 vpattern_field_cl: vpattern_field
  195                  | vpattern_field_cl "," vpattern_field

  196 lpattern_field_cl: lpattern_field
  197                  | lpattern_field_cl "," lpattern_field

  198 tpattern_field_cl: tpattern_field
  199                  | tpattern_field_cl "," tpattern_field

  200 struct_exp_field_cl: struct_exp_field
  201                    | struct_exp_field_cl "," struct_exp_field

  202 tpattern_seq: tpattern
  203             | tpattern_seq tpattern


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    "<val_id>" <TokenInfo> (258) 47 102 105
    "<TypeId>" <TokenInfo> (259) 9 10 11 46 103 104
    "<__42__>" <TokenInfo> (260)
    "using" (261) 104
    "module" (262) 9
    "sub" (263) 10 11
    "if" (264) 85 86
    "then" (265) 85 86
    "else" (266) 86
    "match" (267)
    "with" (268)
    "import" (269) 34
    "extern" (270) 35
    "from" (271) 21 22 34 35
    "const" (272) 41
    "val" (273) 42
    "var" (274) 43
    "set" (275) 44
    "fn" (276) 92 93
    "lambda" (277)
    "Fn" (278) 158
    "type" (279) 34
    "and" (280) 134
    "xor" (281) 136
    "or" (282) 138
    "not" (283) 112
    "typeclass" (284)
    "out" (285) 171 181
    "inout" (286) 172 182
    "discard" (287) 45
    "42" <TokenInfo> (288) 77
    "0x2a" <TokenInfo> (289) 78
    "42u" <TokenInfo> (290) 79
    "0x2Au" <TokenInfo> (291) 80
    "4.2" <TokenInfo> (292) 48
    "\"dq-string-literal\"" <TokenInfo> (293) 50 82 84
    "'sq-string-literal'" <TokenInfo> (294) 49 81 83
    "." (295) 102 103 104 106 107
    ":" (296) 51 52
    "," (297) 55 56 67 144 145 148 155 169 174 195 197 199 201
    ";" (298) 3 7 12 13 57 58 90 91
    "::" (299) 142
    "(" (300) 64 66 67 68 100 101 154 155 156 187 190 191
    ")" (301) 64 66 67 68 100 101 154 155 156 187 190 191
    "[" (302) 99 161 178 192 193
    "]" (303) 99 161 178 192 193
    "{" (304) 9 10 11 32 33 65 69 87 88 89 165
    "}" (305) 9 10 11 32 33 65 69 87 88 89 165
    "->" (306) 93
    "*" (307) 114
    "/" (308) 115
    "%" (309) 116
    "+" (310) 110 119
    "-" (311) 111 120
    "<" (312) 32 33 123
    "<=" (313) 124
    ">" (314) 32 33 125
    ">=" (315) 126
    "=" (316) 19 20 23 24 41 42 43 44 179
    "==" (317) 129
    "!=" (318) 130
    "^" (319)
    "&" (320)
    "!" (321) 193
    "|" (322) 27 29
    ":-" (323) 32 33
    "EOS" (324)
    ":<" (325) 140
    ">:" (326) 141
    "<null>" (327)


Nonterminals, with rules where they appear

    $accept (73)
        on left: 0
    script <pdm::ast::Script*> (74)
        on left: 1
        on right: 0
    script_head <std::vector<pdm::ast::Stmt*>> (75)
        on left: 2 3
        on right: 1 3
    script_head_stmt <pdm::ast::Stmt*> (76)
        on left: 4 5
        on right: 3
    script_body <std::vector<pdm::ast::ModStmt*>> (77)
        on left: 6 7
        on right: 1 7
    script_body_stmt <pdm::ast::ModStmt*> (78)
        on left: 8
        on right: 7
    top_mod_stmt <pdm::ast::ModStmt*> (79)
        on left: 9
        on right: 8
    sub_mod_stmt <pdm::ast::ModContentStmt*> (80)
        on left: 10 11
        on right: 18
    mod_content <std::vector<pdm::ast::ModContentStmt*>> (81)
        on left: 12 13
        on right: 9 10 11 13
    mod_content_stmt <pdm::ast::ModContentStmt*> (82)
        on left: 14 15 16 17 18
        on right: 12 13
    mod_val_stmt <pdm::ast::ModContentStmt*> (83)
        on left: 19 20 21 22
        on right: 14
    mod_type_stmt <pdm::ast::ModContentStmt*> (84)
        on left: 23 24
        on right: 15
    mod_enum_stmt <pdm::ast::ModContentStmt*> (85)
        on left: 25 26
        on right: 16
    enum_field_pl <std::vector<pdm::ast::ModEnumStmt::Field*>> (86)
        on left: 27
        on right: 25 26
    unprefixed_enum_field_pl <std::vector<pdm::ast::ModEnumStmt::Field*>> (87)
        on left: 28 29
        on right: 27 29
    enum_field <pdm::ast::ModEnumStmt::Field*> (88)
        on left: 30 31
        on right: 28 29
    mod_typeclass_stmt <pdm::ast::ModContentStmt*> (89)
        on left: 32 33
        on right: 17
    import_stmt <pdm::ast::Stmt*> (90)
        on left: 34
        on right: 4
    extern_stmt <pdm::ast::Stmt*> (91)
        on left: 35
        on right: 5
    chain_prefix_stmt <pdm::ast::Stmt*> (92)
        on left: 36 37 38 39 40
        on right: 90 91
    const_stmt <pdm::ast::Stmt*> (93)
        on left: 41
        on right: 36
    val_stmt <pdm::ast::Stmt*> (94)
        on left: 42
        on right: 37
    var_stmt <pdm::ast::Stmt*> (95)
        on left: 43
        on right: 38
    set_stmt <pdm::ast::Stmt*> (96)
        on left: 44
        on right: 39
    discard_stmt <pdm::ast::Stmt*> (97)
        on left: 45
        on right: 40
    tid <TokenInfo> (98)
        on left: 46
        on right: 21 22 23 24 25 26 30 31 32 33 34 35 51 149 157 176 186
    vid <TokenInfo> (99)
        on left: 47
        on right: 19 20 21 22 52 71 146 179 180 181 182 183 184 185
    floatl <TokenInfo> (100)
        on left: 48
        on right: 73
    stringl <TokenInfo> (101)
        on left: 49 50
        on right: 21 22 34
    mod_prefix <std::vector<pdm::intern::String>> (102)
        on left: 51 52
        on right: 52 105 157
    expr <pdm::ast::Exp*> (103)
        on left: 53
        on right: 19 20 35 41 42 43 44 45 54 55 56 67 87 89 167 170 171 172 179
    long_exp <pdm::ast::Exp*> (104)
        on left: 54
        on right: 66
    expr_cl2 <std::vector<pdm::ast::Exp*>> (105)
        on left: 55 56
        on right: 56 68
    type_query_exp_sl <std::vector<pdm::ast::TypeQueryExp*>> (106)
        on left: 57 58
        on right: 32 33 58
    bracketed_exp <pdm::ast::Exp*> (107)
        on left: 59 60 61 62 63
        on right: 70 85 86 92 93 107
    unit_exp <pdm::ast::Exp*> (108)
        on left: 64 65
        on right: 59
    paren_exp <pdm::ast::Exp*> (109)
        on left: 66
        on right: 60 104
    vtupleExpr <pdm::ast::Exp*> (110)
        on left: 67 68
        on right: 61
    vstructExpr <pdm::ast::Exp*> (111)
        on left: 69
        on right: 62
    primary_exp <pdm::ast::Exp*> (112)
        on left: 70 71 72 73 74 75 76
        on right: 86 94
    int_expr <pdm::ast::Exp*> (113)
        on left: 77 78 79 80
        on right: 72 106
    stringls <std::vector<pdm::ast::StringExp::Piece>> (114)
        on left: 81 82 83 84
        on right: 74 83 84
    if_exp <pdm::ast::Exp*> (115)
        on left: 85 86
        on right: 75
    chain_exp <pdm::ast::Exp*> (116)
        on left: 87 88 89
        on right: 63
    chain_prefix <std::vector<pdm::ast::Stmt*>> (117)
        on left: 90 91
        on right: 88 89 91
    lambda_exp <pdm::ast::Exp*> (118)
        on left: 92 93
        on right: 76
    postfix_exp <pdm::ast::Exp*> (119)
        on left: 94 95 96 97 98
        on right: 99 100 101 102 106 107 108
    tcall_exp <pdm::ast::Exp*> (120)
        on left: 99
        on right: 95
    vcall_exp <pdm::ast::Exp*> (121)
        on left: 100 101
        on right: 96
    dot_name_exp <pdm::ast::Exp*> (122)
        on left: 102 103 104 105
        on right: 97
    dot_index_exp <pdm::ast::Exp*> (123)
        on left: 106 107
        on right: 98
    unary_exp <pdm::ast::Exp*> (124)
        on left: 108 109
        on right: 109 117 118
    unary_op <pdm::ast::UnaryOperator> (125)
        on left: 110 111 112
        on right: 109
    binary_exp <pdm::ast::Exp*> (126)
        on left: 113
        on right: 53
    mul_binary_op <pdm::ast::BinaryOperator> (127)
        on left: 114 115 116
        on right: 118
    mul_binary_exp <pdm::ast::Exp*> (128)
        on left: 117 118
        on right: 118 121 122
    add_binary_op <pdm::ast::BinaryOperator> (129)
        on left: 119 120
        on right: 122
    add_binary_exp <pdm::ast::Exp*> (130)
        on left: 121 122
        on right: 122 127 128
    cmp_binary_op <pdm::ast::BinaryOperator> (131)
        on left: 123 124 125 126
        on right: 128
    cmp_binary_exp <pdm::ast::Exp*> (132)
        on left: 127 128
        on right: 128 131 132
    eq_binary_op <pdm::ast::BinaryOperator> (133)
        on left: 129 130
        on right: 132
    eq_binary_exp <pdm::ast::Exp*> (134)
        on left: 131 132
        on right: 132 133 134
    and_binary_exp <pdm::ast::Exp*> (135)
        on left: 133 134
        on right: 134 135 136
    xor_binary_exp <pdm::ast::Exp*> (136)
        on left: 135 136
        on right: 136 137 138
    or_binary_exp <pdm::ast::Exp*> (137)
        on left: 137 138
        on right: 113 138
    type_query_exp <pdm::ast::TypeQueryExp*> (138)
        on left: 139
        on right: 57 58
    type_query_op <pdm::ast::TypeQueryKind> (139)
        on left: 140 141 142
        on right: 139
    type_spec <pdm::ast::TypeSpec*> (140)
        on left: 143
        on right: 21 22 31 93 103 104 139 144 145 146 154 155 166 180 181 182 183 185
    type_spec_cl2 <std::vector<pdm::ast::TypeSpec*>> (141)
        on left: 144 145
        on right: 145 156
    struct_type_spec_field <pdm::ast::StructTypeSpec::Field*> (142)
        on left: 146
        on right: 147 148
    struct_type_spec_field_cl <std::vector<pdm::ast::StructTypeSpec::Field*>> (143)
        on left: 147 148
        on right: 148 165
    primary_type_spec <pdm::ast::TypeSpec*> (144)
        on left: 149 150 151 152 153
        on right: 158 159
    paren_type_spec <pdm::ast::TypeSpec*> (145)
        on left: 154
        on right: 150
    tuple_type_spec <pdm::ast::TypeSpec*> (146)
        on left: 155 156
        on right: 151
    mod_prefix_tid <pdm::ast::TypeSpec*> (147)
        on left: 157
        on right: 152
    fn_type_spec <pdm::ast::TypeSpec*> (148)
        on left: 158
        on right: 153
    postfix_type_spec <pdm::ast::TypeSpec*> (149)
        on left: 159 160
        on right: 161 162
    tcall_type_spec <pdm::ast::TypeSpec*> (150)
        on left: 161
        on right: 160
    unary_type_spec <pdm::ast::TypeSpec*> (151)
        on left: 162
        on right: 143 163
    long_type_spec <pdm::ast::TypeSpec*> (152)
        on left: 163 164
        on right: 23 24 139
    struct_type_spec <pdm::ast::TypeSpec*> (153)
        on left: 165
        on right: 164
    targ <pdm::ast::TArg*> (154)
        on left: 166 167
        on right: 168 169
    targ_cl <std::vector<pdm::ast::TArg*>> (155)
        on left: 168 169
        on right: 99 161 169 178
    varg <pdm::ast::VArg*> (156)
        on left: 170 171 172
        on right: 173 174
    varg_cl <std::vector<pdm::ast::VArg*>> (157)
        on left: 173 174
        on right: 101 174
    class_spec <pdm::ast::ClassSpec*> (158)
        on left: 175
        on right: 32 33 186
    primary_class_spec <pdm::ast::ClassSpec*> (159)
        on left: 176
        on right: 177
    postfix_class_spec <pdm::ast::ClassSpec*> (160)
        on left: 177 178
        on right: 175 178
    struct_exp_field <pdm::ast::StructExp::Field*> (161)
        on left: 179
        on right: 200 201
    vpattern_field <pdm::ast::VPattern::Field*> (162)
        on left: 180 181 182
        on right: 194 195
    lpattern_field <pdm::ast::LPattern::Field*> (163)
        on left: 183 184
        on right: 188 196 197
    tpattern_field <pdm::ast::TPattern::Field*> (164)
        on left: 185 186
        on right: 198 199
    destructured_lpattern <pdm::ast::LPattern*> (165)
        on left: 187
        on right: 189
    lpattern <pdm::ast::LPattern*> (166)
        on left: 188 189
        on right: 41 42 43
    vpattern <pdm::ast::VPattern*> (167)
        on left: 190 191
        on right: 92 93 158
    tpattern <pdm::ast::TPattern*> (168)
        on left: 192 193
        on right: 202 203
    vpattern_field_cl <std::vector<pdm::ast::VPattern::Field*>> (169)
        on left: 194 195
        on right: 190 195
    lpattern_field_cl <std::vector<pdm::ast::LPattern::Field*>> (170)
        on left: 196 197
        on right: 187 197
    tpattern_field_cl <std::vector<pdm::ast::TPattern::Field*>> (171)
        on left: 198 199
        on right: 192 193 199
    struct_exp_field_cl <std::vector<pdm::ast::StructExp::Field*>> (172)
        on left: 200 201
        on right: 69 201
    tpattern_seq <std::vector<pdm::ast::TPattern*>> (173)
        on left: 202 203
        on right: 11 20 22 24 26 33 203


State 0

    0 $accept: • script $end

    $default  reduce using rule 2 (script_head)

    script       go to state 1
    script_head  go to state 2


State 1

    0 $accept: script • $end

    $end  shift, and go to state 3


State 2

    1 script: script_head • script_body
    3 script_head: script_head • script_head_stmt ";"

    "import"  shift, and go to state 4
    "extern"  shift, and go to state 5

    $default  reduce using rule 6 (script_body)

    script_head_stmt  go to state 6
    script_body       go to state 7
    import_stmt       go to state 8
    extern_stmt       go to state 9


State 3

    0 $accept: script $end •

    $default  accept


State 4

   34 import_stmt: "import" • tid "from" stringl "type" stringl

    "<TypeId>"  shift, and go to state 10

    tid  go to state 11


State 5

   35 extern_stmt: "extern" • tid "from" expr

    "<TypeId>"  shift, and go to state 10

    tid  go to state 12


State 6

    3 script_head: script_head script_head_stmt • ";"

    ";"  shift, and go to state 13


State 7

    1 script: script_head script_body •
    7 script_body: script_body • script_body_stmt ";"

    "module"  shift, and go to state 14

    $default  reduce using rule 1 (script)

    script_body_stmt  go to state 15
    top_mod_stmt      go to state 16


State 8

    4 script_head_stmt: import_stmt •

    $default  reduce using rule 4 (script_head_stmt)


State 9

    5 script_head_stmt: extern_stmt •

    $default  reduce using rule 5 (script_head_stmt)


State 10

   46 tid: "<TypeId>" •

    $default  reduce using rule 46 (tid)


State 11

   34 import_stmt: "import" tid • "from" stringl "type" stringl

    "from"  shift, and go to state 17


State 12

   35 extern_stmt: "extern" tid • "from" expr

    "from"  shift, and go to state 18


State 13

    3 script_head: script_head script_head_stmt ";" •

    $default  reduce using rule 3 (script_head)


State 14

    9 top_mod_stmt: "module" • "<TypeId>" "{" mod_content "}"

    "<TypeId>"  shift, and go to state 19


State 15

    7 script_body: script_body script_body_stmt • ";"

    ";"  shift, and go to state 20


State 16

    8 script_body_stmt: top_mod_stmt •

    $default  reduce using rule 8 (script_body_stmt)


State 17

   34 import_stmt: "import" tid "from" • stringl "type" stringl

    "\"dq-string-literal\""  shift, and go to state 21
    "'sq-string-literal'"    shift, and go to state 22

    stringl  go to state 23


State 18

   35 extern_stmt: "extern" tid "from" • expr

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "Fn"                     shift, and go to state 27
    "not"                    shift, and go to state 28
    "42"                     shift, and go to state 29
    "0x2a"                   shift, and go to state 30
    "42u"                    shift, and go to state 31
    "0x2Au"                  shift, and go to state 32
    "4.2"                    shift, and go to state 33
    "\"dq-string-literal\""  shift, and go to state 34
    "'sq-string-literal'"    shift, and go to state 35
    "("                      shift, and go to state 36
    "{"                      shift, and go to state 37
    "+"                      shift, and go to state 38
    "-"                      shift, and go to state 39

    tid                go to state 40
    vid                go to state 41
    floatl             go to state 42
    mod_prefix         go to state 43
    expr               go to state 44
    bracketed_exp      go to state 45
    unit_exp           go to state 46
    paren_exp          go to state 47
    vtupleExpr         go to state 48
    vstructExpr        go to state 49
    primary_exp        go to state 50
    int_expr           go to state 51
    stringls           go to state 52
    if_exp             go to state 53
    chain_exp          go to state 54
    lambda_exp         go to state 55
    postfix_exp        go to state 56
    tcall_exp          go to state 57
    vcall_exp          go to state 58
    dot_name_exp       go to state 59
    dot_index_exp      go to state 60
    unary_exp          go to state 61
    unary_op           go to state 62
    binary_exp         go to state 63
    mul_binary_exp     go to state 64
    add_binary_exp     go to state 65
    cmp_binary_exp     go to state 66
    eq_binary_exp      go to state 67
    and_binary_exp     go to state 68
    xor_binary_exp     go to state 69
    or_binary_exp      go to state 70
    type_spec          go to state 71
    primary_type_spec  go to state 72
    paren_type_spec    go to state 73
    tuple_type_spec    go to state 74
    mod_prefix_tid     go to state 75
    fn_type_spec       go to state 76
    postfix_type_spec  go to state 77
    tcall_type_spec    go to state 78
    unary_type_spec    go to state 79


State 19

    9 top_mod_stmt: "module" "<TypeId>" • "{" mod_content "}"

    "{"  shift, and go to state 80


State 20

    7 script_body: script_body script_body_stmt ";" •

    $default  reduce using rule 7 (script_body)


State 21

   50 stringl: "\"dq-string-literal\"" •

    $default  reduce using rule 50 (stringl)


State 22

   49 stringl: "'sq-string-literal'" •

    $default  reduce using rule 49 (stringl)


State 23

   34 import_stmt: "import" tid "from" stringl • "type" stringl

    "type"  shift, and go to state 81


State 24

   47 vid: "<val_id>" •

    $default  reduce using rule 47 (vid)


State 25

   85 if_exp: "if" • bracketed_exp "then" bracketed_exp
   86       | "if" • bracketed_exp "then" bracketed_exp "else" primary_exp

    "("  shift, and go to state 82
    "{"  shift, and go to state 37

    bracketed_exp  go to state 83
    unit_exp       go to state 46
    paren_exp      go to state 47
    vtupleExpr     go to state 48
    vstructExpr    go to state 49
    chain_exp      go to state 54


State 26

   92 lambda_exp: "fn" • vpattern bracketed_exp
   93           | "fn" • vpattern "->" type_spec bracketed_exp

    "("  shift, and go to state 84

    vpattern  go to state 85


State 27

  158 fn_type_spec: "Fn" • vpattern primary_type_spec

    "("  shift, and go to state 84

    vpattern  go to state 86


State 28

  112 unary_op: "not" •

    $default  reduce using rule 112 (unary_op)


State 29

   77 int_expr: "42" •

    $default  reduce using rule 77 (int_expr)


State 30

   78 int_expr: "0x2a" •

    $default  reduce using rule 78 (int_expr)


State 31

   79 int_expr: "42u" •

    $default  reduce using rule 79 (int_expr)


State 32

   80 int_expr: "0x2Au" •

    $default  reduce using rule 80 (int_expr)


State 33

   48 floatl: "4.2" •

    $default  reduce using rule 48 (floatl)


State 34

   82 stringls: "\"dq-string-literal\"" •

    $default  reduce using rule 82 (stringls)


State 35

   81 stringls: "'sq-string-literal'" •

    $default  reduce using rule 81 (stringls)


State 36

   64 unit_exp: "(" • ")"
   66 paren_exp: "(" • long_exp ")"
   67 vtupleExpr: "(" • expr "," ")"
   68           | "(" • expr_cl2 ")"
  154 paren_type_spec: "(" • type_spec ")"
  155 tuple_type_spec: "(" • type_spec "," ")"
  156                | "(" • type_spec_cl2 ")"

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "Fn"                     shift, and go to state 27
    "not"                    shift, and go to state 28
    "42"                     shift, and go to state 29
    "0x2a"                   shift, and go to state 30
    "42u"                    shift, and go to state 31
    "0x2Au"                  shift, and go to state 32
    "4.2"                    shift, and go to state 33
    "\"dq-string-literal\""  shift, and go to state 34
    "'sq-string-literal'"    shift, and go to state 35
    "("                      shift, and go to state 36
    ")"                      shift, and go to state 87
    "{"                      shift, and go to state 37
    "+"                      shift, and go to state 38
    "-"                      shift, and go to state 39

    tid                go to state 40
    vid                go to state 41
    floatl             go to state 42
    mod_prefix         go to state 43
    expr               go to state 88
    long_exp           go to state 89
    expr_cl2           go to state 90
    bracketed_exp      go to state 45
    unit_exp           go to state 46
    paren_exp          go to state 47
    vtupleExpr         go to state 48
    vstructExpr        go to state 49
    primary_exp        go to state 50
    int_expr           go to state 51
    stringls           go to state 52
    if_exp             go to state 53
    chain_exp          go to state 54
    lambda_exp         go to state 55
    postfix_exp        go to state 56
    tcall_exp          go to state 57
    vcall_exp          go to state 58
    dot_name_exp       go to state 59
    dot_index_exp      go to state 60
    unary_exp          go to state 61
    unary_op           go to state 62
    binary_exp         go to state 63
    mul_binary_exp     go to state 64
    add_binary_exp     go to state 65
    cmp_binary_exp     go to state 66
    eq_binary_exp      go to state 67
    and_binary_exp     go to state 68
    xor_binary_exp     go to state 69
    or_binary_exp      go to state 70
    type_spec          go to state 91
    type_spec_cl2      go to state 92
    primary_type_spec  go to state 72
    paren_type_spec    go to state 73
    tuple_type_spec    go to state 74
    mod_prefix_tid     go to state 75
    fn_type_spec       go to state 76
    postfix_type_spec  go to state 77
    tcall_type_spec    go to state 78
    unary_type_spec    go to state 79


State 37

   65 unit_exp: "{" • "}"
   69 vstructExpr: "{" • struct_exp_field_cl "}"
   87 chain_exp: "{" • expr "}"
   88          | "{" • chain_prefix "}"
   89          | "{" • chain_prefix expr "}"

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "const"                  shift, and go to state 93
    "val"                    shift, and go to state 94
    "var"                    shift, and go to state 95
    "set"                    shift, and go to state 96
    "fn"                     shift, and go to state 26
    "Fn"                     shift, and go to state 27
    "not"                    shift, and go to state 28
    "discard"                shift, and go to state 97
    "42"                     shift, and go to state 29
    "0x2a"                   shift, and go to state 30
    "42u"                    shift, and go to state 31
    "0x2Au"                  shift, and go to state 32
    "4.2"                    shift, and go to state 33
    "\"dq-string-literal\""  shift, and go to state 34
    "'sq-string-literal'"    shift, and go to state 35
    "("                      shift, and go to state 36
    "{"                      shift, and go to state 37
    "}"                      shift, and go to state 98
    "+"                      shift, and go to state 38
    "-"                      shift, and go to state 39

    chain_prefix_stmt    go to state 99
    const_stmt           go to state 100
    val_stmt             go to state 101
    var_stmt             go to state 102
    set_stmt             go to state 103
    discard_stmt         go to state 104
    tid                  go to state 40
    vid                  go to state 105
    floatl               go to state 42
    mod_prefix           go to state 43
    expr                 go to state 106
    bracketed_exp        go to state 45
    unit_exp             go to state 46
    paren_exp            go to state 47
    vtupleExpr           go to state 48
    vstructExpr          go to state 49
    primary_exp          go to state 50
    int_expr             go to state 51
    stringls             go to state 52
    if_exp               go to state 53
    chain_exp            go to state 54
    chain_prefix         go to state 107
    lambda_exp           go to state 55
    postfix_exp          go to state 56
    tcall_exp            go to state 57
    vcall_exp            go to state 58
    dot_name_exp         go to state 59
    dot_index_exp        go to state 60
    unary_exp            go to state 61
    unary_op             go to state 62
    binary_exp           go to state 63
    mul_binary_exp       go to state 64
    add_binary_exp       go to state 65
    cmp_binary_exp       go to state 66
    eq_binary_exp        go to state 67
    and_binary_exp       go to state 68
    xor_binary_exp       go to state 69
    or_binary_exp        go to state 70
    type_spec            go to state 71
    primary_type_spec    go to state 72
    paren_type_spec      go to state 73
    tuple_type_spec      go to state 74
    mod_prefix_tid       go to state 75
    fn_type_spec         go to state 76
    postfix_type_spec    go to state 77
    tcall_type_spec      go to state 78
    unary_type_spec      go to state 79
    struct_exp_field     go to state 108
    struct_exp_field_cl  go to state 109


State 38

  110 unary_op: "+" •

    $default  reduce using rule 110 (unary_op)


State 39

  111 unary_op: "-" •

    $default  reduce using rule 111 (unary_op)


State 40

   51 mod_prefix: tid • ":"
  149 primary_type_spec: tid •

    ":"  shift, and go to state 110

    $default  reduce using rule 149 (primary_type_spec)


State 41

   71 primary_exp: vid •

    $default  reduce using rule 71 (primary_exp)


State 42

   73 primary_exp: floatl •

    $default  reduce using rule 73 (primary_exp)


State 43

   52 mod_prefix: mod_prefix • vid ":"
  105 dot_name_exp: mod_prefix • "<val_id>"
  157 mod_prefix_tid: mod_prefix • tid

    "<val_id>"  shift, and go to state 111
    "<TypeId>"  shift, and go to state 10

    tid  go to state 112
    vid  go to state 113


State 44

   35 extern_stmt: "extern" tid "from" expr •

    $default  reduce using rule 35 (extern_stmt)


State 45

   70 primary_exp: bracketed_exp •

    $default  reduce using rule 70 (primary_exp)


State 46

   59 bracketed_exp: unit_exp •

    $default  reduce using rule 59 (bracketed_exp)


State 47

   60 bracketed_exp: paren_exp •

    $default  reduce using rule 60 (bracketed_exp)


State 48

   61 bracketed_exp: vtupleExpr •

    $default  reduce using rule 61 (bracketed_exp)


State 49

   62 bracketed_exp: vstructExpr •

    $default  reduce using rule 62 (bracketed_exp)


State 50

   94 postfix_exp: primary_exp •

    $default  reduce using rule 94 (postfix_exp)


State 51

   72 primary_exp: int_expr •

    $default  reduce using rule 72 (primary_exp)


State 52

   74 primary_exp: stringls •
   83 stringls: stringls • "'sq-string-literal'"
   84         | stringls • "\"dq-string-literal\""

    "\"dq-string-literal\""  shift, and go to state 114
    "'sq-string-literal'"    shift, and go to state 115

    $default  reduce using rule 74 (primary_exp)


State 53

   75 primary_exp: if_exp •

    $default  reduce using rule 75 (primary_exp)


State 54

   63 bracketed_exp: chain_exp •

    $default  reduce using rule 63 (bracketed_exp)


State 55

   76 primary_exp: lambda_exp •

    $default  reduce using rule 76 (primary_exp)


State 56

   99 tcall_exp: postfix_exp • "[" targ_cl "]"
  100 vcall_exp: postfix_exp • "(" ")"
  101          | postfix_exp • "(" varg_cl ")"
  102 dot_name_exp: postfix_exp • "." "<val_id>"
  106 dot_index_exp: postfix_exp • "." int_expr
  107              | postfix_exp • "." bracketed_exp
  108 unary_exp: postfix_exp •

    "."  shift, and go to state 116
    "("  shift, and go to state 117
    "["  shift, and go to state 118

    $default  reduce using rule 108 (unary_exp)


State 57

   95 postfix_exp: tcall_exp •

    $default  reduce using rule 95 (postfix_exp)


State 58

   96 postfix_exp: vcall_exp •

    $default  reduce using rule 96 (postfix_exp)


State 59

   97 postfix_exp: dot_name_exp •

    $default  reduce using rule 97 (postfix_exp)


State 60

   98 postfix_exp: dot_index_exp •

    $default  reduce using rule 98 (postfix_exp)


State 61

  117 mul_binary_exp: unary_exp •

    $default  reduce using rule 117 (mul_binary_exp)


State 62

  109 unary_exp: unary_op • unary_exp

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "Fn"                     shift, and go to state 27
    "not"                    shift, and go to state 28
    "42"                     shift, and go to state 29
    "0x2a"                   shift, and go to state 30
    "42u"                    shift, and go to state 31
    "0x2Au"                  shift, and go to state 32
    "4.2"                    shift, and go to state 33
    "\"dq-string-literal\""  shift, and go to state 34
    "'sq-string-literal'"    shift, and go to state 35
    "("                      shift, and go to state 36
    "{"                      shift, and go to state 37
    "+"                      shift, and go to state 38
    "-"                      shift, and go to state 39

    tid                go to state 40
    vid                go to state 41
    floatl             go to state 42
    mod_prefix         go to state 43
    bracketed_exp      go to state 45
    unit_exp           go to state 46
    paren_exp          go to state 47
    vtupleExpr         go to state 48
    vstructExpr        go to state 49
    primary_exp        go to state 50
    int_expr           go to state 51
    stringls           go to state 52
    if_exp             go to state 53
    chain_exp          go to state 54
    lambda_exp         go to state 55
    postfix_exp        go to state 56
    tcall_exp          go to state 57
    vcall_exp          go to state 58
    dot_name_exp       go to state 59
    dot_index_exp      go to state 60
    unary_exp          go to state 119
    unary_op           go to state 62
    type_spec          go to state 71
    primary_type_spec  go to state 72
    paren_type_spec    go to state 73
    tuple_type_spec    go to state 74
    mod_prefix_tid     go to state 75
    fn_type_spec       go to state 76
    postfix_type_spec  go to state 77
    tcall_type_spec    go to state 78
    unary_type_spec    go to state 79


State 63

   53 expr: binary_exp •

    $default  reduce using rule 53 (expr)


State 64

  118 mul_binary_exp: mul_binary_exp • mul_binary_op unary_exp
  121 add_binary_exp: mul_binary_exp •

    "*"  shift, and go to state 120
    "/"  shift, and go to state 121
    "%"  shift, and go to state 122

    $default  reduce using rule 121 (add_binary_exp)

    mul_binary_op  go to state 123


State 65

  122 add_binary_exp: add_binary_exp • add_binary_op mul_binary_exp
  127 cmp_binary_exp: add_binary_exp •

    "+"  shift, and go to state 124
    "-"  shift, and go to state 125

    $default  reduce using rule 127 (cmp_binary_exp)

    add_binary_op  go to state 126


State 66

  128 cmp_binary_exp: cmp_binary_exp • cmp_binary_op add_binary_exp
  131 eq_binary_exp: cmp_binary_exp •

    "<"   shift, and go to state 127
    "<="  shift, and go to state 128
    ">"   shift, and go to state 129
    ">="  shift, and go to state 130

    $default  reduce using rule 131 (eq_binary_exp)

    cmp_binary_op  go to state 131


State 67

  132 eq_binary_exp: eq_binary_exp • eq_binary_op cmp_binary_exp
  133 and_binary_exp: eq_binary_exp •

    "=="  shift, and go to state 132
    "!="  shift, and go to state 133

    $default  reduce using rule 133 (and_binary_exp)

    eq_binary_op  go to state 134


State 68

  134 and_binary_exp: and_binary_exp • "and" eq_binary_exp
  135 xor_binary_exp: and_binary_exp •

    "and"  shift, and go to state 135

    $default  reduce using rule 135 (xor_binary_exp)


State 69

  136 xor_binary_exp: xor_binary_exp • "xor" and_binary_exp
  137 or_binary_exp: xor_binary_exp •

    "xor"  shift, and go to state 136

    $default  reduce using rule 137 (or_binary_exp)


State 70

  113 binary_exp: or_binary_exp •
  138 or_binary_exp: or_binary_exp • "or" xor_binary_exp

    "or"  shift, and go to state 137

    $default  reduce using rule 113 (binary_exp)


State 71

  103 dot_name_exp: type_spec • "." "<TypeId>"
  104             | type_spec • "." "<TypeId>" "using" paren_exp

    "."  shift, and go to state 138


State 72

  159 postfix_type_spec: primary_type_spec •

    $default  reduce using rule 159 (postfix_type_spec)


State 73

  150 primary_type_spec: paren_type_spec •

    $default  reduce using rule 150 (primary_type_spec)


State 74

  151 primary_type_spec: tuple_type_spec •

    $default  reduce using rule 151 (primary_type_spec)


State 75

  152 primary_type_spec: mod_prefix_tid •

    $default  reduce using rule 152 (primary_type_spec)


State 76

  153 primary_type_spec: fn_type_spec •

    $default  reduce using rule 153 (primary_type_spec)


State 77

  161 tcall_type_spec: postfix_type_spec • "[" targ_cl "]"
  162 unary_type_spec: postfix_type_spec •

    "["  shift, and go to state 139

    $default  reduce using rule 162 (unary_type_spec)


State 78

  160 postfix_type_spec: tcall_type_spec •

    $default  reduce using rule 160 (postfix_type_spec)


State 79

  143 type_spec: unary_type_spec •

    $default  reduce using rule 143 (type_spec)


State 80

    9 top_mod_stmt: "module" "<TypeId>" "{" • mod_content "}"

    "<val_id>"  shift, and go to state 24
    "<TypeId>"  shift, and go to state 10
    "sub"       shift, and go to state 140

    sub_mod_stmt        go to state 141
    mod_content         go to state 142
    mod_content_stmt    go to state 143
    mod_val_stmt        go to state 144
    mod_type_stmt       go to state 145
    mod_enum_stmt       go to state 146
    mod_typeclass_stmt  go to state 147
    tid                 go to state 148
    vid                 go to state 149


State 81

   34 import_stmt: "import" tid "from" stringl "type" • stringl

    "\"dq-string-literal\""  shift, and go to state 21
    "'sq-string-literal'"    shift, and go to state 22

    stringl  go to state 150


State 82

   64 unit_exp: "(" • ")"
   66 paren_exp: "(" • long_exp ")"
   67 vtupleExpr: "(" • expr "," ")"
   68           | "(" • expr_cl2 ")"

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "Fn"                     shift, and go to state 27
    "not"                    shift, and go to state 28
    "42"                     shift, and go to state 29
    "0x2a"                   shift, and go to state 30
    "42u"                    shift, and go to state 31
    "0x2Au"                  shift, and go to state 32
    "4.2"                    shift, and go to state 33
    "\"dq-string-literal\""  shift, and go to state 34
    "'sq-string-literal'"    shift, and go to state 35
    "("                      shift, and go to state 36
    ")"                      shift, and go to state 87
    "{"                      shift, and go to state 37
    "+"                      shift, and go to state 38
    "-"                      shift, and go to state 39

    tid                go to state 40
    vid                go to state 41
    floatl             go to state 42
    mod_prefix         go to state 43
    expr               go to state 88
    long_exp           go to state 89
    expr_cl2           go to state 90
    bracketed_exp      go to state 45
    unit_exp           go to state 46
    paren_exp          go to state 47
    vtupleExpr         go to state 48
    vstructExpr        go to state 49
    primary_exp        go to state 50
    int_expr           go to state 51
    stringls           go to state 52
    if_exp             go to state 53
    chain_exp          go to state 54
    lambda_exp         go to state 55
    postfix_exp        go to state 56
    tcall_exp          go to state 57
    vcall_exp          go to state 58
    dot_name_exp       go to state 59
    dot_index_exp      go to state 60
    unary_exp          go to state 61
    unary_op           go to state 62
    binary_exp         go to state 63
    mul_binary_exp     go to state 64
    add_binary_exp     go to state 65
    cmp_binary_exp     go to state 66
    eq_binary_exp      go to state 67
    and_binary_exp     go to state 68
    xor_binary_exp     go to state 69
    or_binary_exp      go to state 70
    type_spec          go to state 71
    primary_type_spec  go to state 72
    paren_type_spec    go to state 73
    tuple_type_spec    go to state 74
    mod_prefix_tid     go to state 75
    fn_type_spec       go to state 76
    postfix_type_spec  go to state 77
    tcall_type_spec    go to state 78
    unary_type_spec    go to state 79


State 83

   85 if_exp: "if" bracketed_exp • "then" bracketed_exp
   86       | "if" bracketed_exp • "then" bracketed_exp "else" primary_exp

    "then"  shift, and go to state 151


State 84

  190 vpattern: "(" • vpattern_field_cl ")"
  191         | "(" • ")"

    "<val_id>"  shift, and go to state 24
    "out"       shift, and go to state 152
    "inout"     shift, and go to state 153
    ")"         shift, and go to state 154

    vid                go to state 155
    vpattern_field     go to state 156
    vpattern_field_cl  go to state 157


State 85

   92 lambda_exp: "fn" vpattern • bracketed_exp
   93           | "fn" vpattern • "->" type_spec bracketed_exp

    "("   shift, and go to state 82
    "{"   shift, and go to state 37
    "->"  shift, and go to state 158

    bracketed_exp  go to state 159
    unit_exp       go to state 46
    paren_exp      go to state 47
    vtupleExpr     go to state 48
    vstructExpr    go to state 49
    chain_exp      go to state 54


State 86

  158 fn_type_spec: "Fn" vpattern • primary_type_spec

    "<TypeId>"  shift, and go to state 10
    "Fn"        shift, and go to state 27
    "("         shift, and go to state 160

    tid                go to state 40
    mod_prefix         go to state 161
    primary_type_spec  go to state 162
    paren_type_spec    go to state 73
    tuple_type_spec    go to state 74
    mod_prefix_tid     go to state 75
    fn_type_spec       go to state 76


State 87

   64 unit_exp: "(" ")" •

    $default  reduce using rule 64 (unit_exp)


State 88

   54 long_exp: expr •
   55 expr_cl2: expr • "," expr
   67 vtupleExpr: "(" expr • "," ")"

    ","  shift, and go to state 163

    $default  reduce using rule 54 (long_exp)


State 89

   66 paren_exp: "(" long_exp • ")"

    ")"  shift, and go to state 164


State 90

   56 expr_cl2: expr_cl2 • "," expr
   68 vtupleExpr: "(" expr_cl2 • ")"

    ","  shift, and go to state 165
    ")"  shift, and go to state 166


State 91

  103 dot_name_exp: type_spec • "." "<TypeId>"
  104             | type_spec • "." "<TypeId>" "using" paren_exp
  144 type_spec_cl2: type_spec • "," type_spec
  154 paren_type_spec: "(" type_spec • ")"
  155 tuple_type_spec: "(" type_spec • "," ")"

    "."  shift, and go to state 138
    ","  shift, and go to state 167
    ")"  shift, and go to state 168


State 92

  145 type_spec_cl2: type_spec_cl2 • "," type_spec
  156 tuple_type_spec: "(" type_spec_cl2 • ")"

    ","  shift, and go to state 169
    ")"  shift, and go to state 170


State 93

   41 const_stmt: "const" • lpattern "=" expr

    "<val_id>"  shift, and go to state 24
    "("         shift, and go to state 171

    vid                    go to state 172
    lpattern_field         go to state 173
    destructured_lpattern  go to state 174
    lpattern               go to state 175


State 94

   42 val_stmt: "val" • lpattern "=" expr

    "<val_id>"  shift, and go to state 24
    "("         shift, and go to state 171

    vid                    go to state 172
    lpattern_field         go to state 173
    destructured_lpattern  go to state 174
    lpattern               go to state 176


State 95

   43 var_stmt: "var" • lpattern "=" expr

    "<val_id>"  shift, and go to state 24
    "("         shift, and go to state 171

    vid                    go to state 172
    lpattern_field         go to state 173
    destructured_lpattern  go to state 174
    lpattern               go to state 177


State 96

   44 set_stmt: "set" • expr "=" expr

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "Fn"                     shift, and go to state 27
    "not"                    shift, and go to state 28
    "42"                     shift, and go to state 29
    "0x2a"                   shift, and go to state 30
    "42u"                    shift, and go to state 31
    "0x2Au"                  shift, and go to state 32
    "4.2"                    shift, and go to state 33
    "\"dq-string-literal\""  shift, and go to state 34
    "'sq-string-literal'"    shift, and go to state 35
    "("                      shift, and go to state 36
    "{"                      shift, and go to state 37
    "+"                      shift, and go to state 38
    "-"                      shift, and go to state 39

    tid                go to state 40
    vid                go to state 41
    floatl             go to state 42
    mod_prefix         go to state 43
    expr               go to state 178
    bracketed_exp      go to state 45
    unit_exp           go to state 46
    paren_exp          go to state 47
    vtupleExpr         go to state 48
    vstructExpr        go to state 49
    primary_exp        go to state 50
    int_expr           go to state 51
    stringls           go to state 52
    if_exp             go to state 53
    chain_exp          go to state 54
    lambda_exp         go to state 55
    postfix_exp        go to state 56
    tcall_exp          go to state 57
    vcall_exp          go to state 58
    dot_name_exp       go to state 59
    dot_index_exp      go to state 60
    unary_exp          go to state 61
    unary_op           go to state 62
    binary_exp         go to state 63
    mul_binary_exp     go to state 64
    add_binary_exp     go to state 65
    cmp_binary_exp     go to state 66
    eq_binary_exp      go to state 67
    and_binary_exp     go to state 68
    xor_binary_exp     go to state 69
    or_binary_exp      go to state 70
    type_spec          go to state 71
    primary_type_spec  go to state 72
    paren_type_spec    go to state 73
    tuple_type_spec    go to state 74
    mod_prefix_tid     go to state 75
    fn_type_spec       go to state 76
    postfix_type_spec  go to state 77
    tcall_type_spec    go to state 78
    unary_type_spec    go to state 79


State 97

   45 discard_stmt: "discard" • expr

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "Fn"                     shift, and go to state 27
    "not"                    shift, and go to state 28
    "42"                     shift, and go to state 29
    "0x2a"                   shift, and go to state 30
    "42u"                    shift, and go to state 31
    "0x2Au"                  shift, and go to state 32
    "4.2"                    shift, and go to state 33
    "\"dq-string-literal\""  shift, and go to state 34
    "'sq-string-literal'"    shift, and go to state 35
    "("                      shift, and go to state 36
    "{"                      shift, and go to state 37
    "+"                      shift, and go to state 38
    "-"                      shift, and go to state 39

    tid                go to state 40
    vid                go to state 41
    floatl             go to state 42
    mod_prefix         go to state 43
    expr               go to state 179
    bracketed_exp      go to state 45
    unit_exp           go to state 46
    paren_exp          go to state 47
    vtupleExpr         go to state 48
    vstructExpr        go to state 49
    primary_exp        go to state 50
    int_expr           go to state 51
    stringls           go to state 52
    if_exp             go to state 53
    chain_exp          go to state 54
    lambda_exp         go to state 55
    postfix_exp        go to state 56
    tcall_exp          go to state 57
    vcall_exp          go to state 58
    dot_name_exp       go to state 59
    dot_index_exp      go to state 60
    unary_exp          go to state 61
    unary_op           go to state 62
    binary_exp         go to state 63
    mul_binary_exp     go to state 64
    add_binary_exp     go to state 65
    cmp_binary_exp     go to state 66
    eq_binary_exp      go to state 67
    and_binary_exp     go to state 68
    xor_binary_exp     go to state 69
    or_binary_exp      go to state 70
    type_spec          go to state 71
    primary_type_spec  go to state 72
    paren_type_spec    go to state 73
    tuple_type_spec    go to state 74
    mod_prefix_tid     go to state 75
    fn_type_spec       go to state 76
    postfix_type_spec  go to state 77
    tcall_type_spec    go to state 78
    unary_type_spec    go to state 79


State 98

   65 unit_exp: "{" "}" •

    $default  reduce using rule 65 (unit_exp)


State 99

   90 chain_prefix: chain_prefix_stmt • ";"

    ";"  shift, and go to state 180


State 100

   36 chain_prefix_stmt: const_stmt •

    $default  reduce using rule 36 (chain_prefix_stmt)


State 101

   37 chain_prefix_stmt: val_stmt •

    $default  reduce using rule 37 (chain_prefix_stmt)


State 102

   38 chain_prefix_stmt: var_stmt •

    $default  reduce using rule 38 (chain_prefix_stmt)


State 103

   39 chain_prefix_stmt: set_stmt •

    $default  reduce using rule 39 (chain_prefix_stmt)


State 104

   40 chain_prefix_stmt: discard_stmt •

    $default  reduce using rule 40 (chain_prefix_stmt)


State 105

   71 primary_exp: vid •
  179 struct_exp_field: vid • "=" expr

    "="  shift, and go to state 181

    $default  reduce using rule 71 (primary_exp)


State 106

   87 chain_exp: "{" expr • "}"

    "}"  shift, and go to state 182


State 107

   88 chain_exp: "{" chain_prefix • "}"
   89          | "{" chain_prefix • expr "}"
   91 chain_prefix: chain_prefix • chain_prefix_stmt ";"

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "const"                  shift, and go to state 93
    "val"                    shift, and go to state 94
    "var"                    shift, and go to state 95
    "set"                    shift, and go to state 96
    "fn"                     shift, and go to state 26
    "Fn"                     shift, and go to state 27
    "not"                    shift, and go to state 28
    "discard"                shift, and go to state 97
    "42"                     shift, and go to state 29
    "0x2a"                   shift, and go to state 30
    "42u"                    shift, and go to state 31
    "0x2Au"                  shift, and go to state 32
    "4.2"                    shift, and go to state 33
    "\"dq-string-literal\""  shift, and go to state 34
    "'sq-string-literal'"    shift, and go to state 35
    "("                      shift, and go to state 36
    "{"                      shift, and go to state 37
    "}"                      shift, and go to state 183
    "+"                      shift, and go to state 38
    "-"                      shift, and go to state 39

    chain_prefix_stmt  go to state 184
    const_stmt         go to state 100
    val_stmt           go to state 101
    var_stmt           go to state 102
    set_stmt           go to state 103
    discard_stmt       go to state 104
    tid                go to state 40
    vid                go to state 41
    floatl             go to state 42
    mod_prefix         go to state 43
    expr               go to state 185
    bracketed_exp      go to state 45
    unit_exp           go to state 46
    paren_exp          go to state 47
    vtupleExpr         go to state 48
    vstructExpr        go to state 49
    primary_exp        go to state 50
    int_expr           go to state 51
    stringls           go to state 52
    if_exp             go to state 53
    chain_exp          go to state 54
    lambda_exp         go to state 55
    postfix_exp        go to state 56
    tcall_exp          go to state 57
    vcall_exp          go to state 58
    dot_name_exp       go to state 59
    dot_index_exp      go to state 60
    unary_exp          go to state 61
    unary_op           go to state 62
    binary_exp         go to state 63
    mul_binary_exp     go to state 64
    add_binary_exp     go to state 65
    cmp_binary_exp     go to state 66
    eq_binary_exp      go to state 67
    and_binary_exp     go to state 68
    xor_binary_exp     go to state 69
    or_binary_exp      go to state 70
    type_spec          go to state 71
    primary_type_spec  go to state 72
    paren_type_spec    go to state 73
    tuple_type_spec    go to state 74
    mod_prefix_tid     go to state 75
    fn_type_spec       go to state 76
    postfix_type_spec  go to state 77
    tcall_type_spec    go to state 78
    unary_type_spec    go to state 79


State 108

  200 struct_exp_field_cl: struct_exp_field •

    $default  reduce using rule 200 (struct_exp_field_cl)


State 109

   69 vstructExpr: "{" struct_exp_field_cl • "}"
  201 struct_exp_field_cl: struct_exp_field_cl • "," struct_exp_field

    ","  shift, and go to state 186
    "}"  shift, and go to state 187


State 110

   51 mod_prefix: tid ":" •

    $default  reduce using rule 51 (mod_prefix)


State 111

   47 vid: "<val_id>" •
  105 dot_name_exp: mod_prefix "<val_id>" •

    ":"       reduce using rule 47 (vid)
    $default  reduce using rule 105 (dot_name_exp)


State 112

  157 mod_prefix_tid: mod_prefix tid •

    $default  reduce using rule 157 (mod_prefix_tid)


State 113

   52 mod_prefix: mod_prefix vid • ":"

    ":"  shift, and go to state 188


State 114

   84 stringls: stringls "\"dq-string-literal\"" •

    $default  reduce using rule 84 (stringls)


State 115

   83 stringls: stringls "'sq-string-literal'" •

    $default  reduce using rule 83 (stringls)


State 116

  102 dot_name_exp: postfix_exp "." • "<val_id>"
  106 dot_index_exp: postfix_exp "." • int_expr
  107              | postfix_exp "." • bracketed_exp

    "<val_id>"  shift, and go to state 189
    "42"        shift, and go to state 29
    "0x2a"      shift, and go to state 30
    "42u"       shift, and go to state 31
    "0x2Au"     shift, and go to state 32
    "("         shift, and go to state 82
    "{"         shift, and go to state 37

    bracketed_exp  go to state 190
    unit_exp       go to state 46
    paren_exp      go to state 47
    vtupleExpr     go to state 48
    vstructExpr    go to state 49
    int_expr       go to state 191
    chain_exp      go to state 54


State 117

  100 vcall_exp: postfix_exp "(" • ")"
  101          | postfix_exp "(" • varg_cl ")"

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "Fn"                     shift, and go to state 27
    "not"                    shift, and go to state 28
    "out"                    shift, and go to state 192
    "inout"                  shift, and go to state 193
    "42"                     shift, and go to state 29
    "0x2a"                   shift, and go to state 30
    "42u"                    shift, and go to state 31
    "0x2Au"                  shift, and go to state 32
    "4.2"                    shift, and go to state 33
    "\"dq-string-literal\""  shift, and go to state 34
    "'sq-string-literal'"    shift, and go to state 35
    "("                      shift, and go to state 36
    ")"                      shift, and go to state 194
    "{"                      shift, and go to state 37
    "+"                      shift, and go to state 38
    "-"                      shift, and go to state 39

    tid                go to state 40
    vid                go to state 41
    floatl             go to state 42
    mod_prefix         go to state 43
    expr               go to state 195
    bracketed_exp      go to state 45
    unit_exp           go to state 46
    paren_exp          go to state 47
    vtupleExpr         go to state 48
    vstructExpr        go to state 49
    primary_exp        go to state 50
    int_expr           go to state 51
    stringls           go to state 52
    if_exp             go to state 53
    chain_exp          go to state 54
    lambda_exp         go to state 55
    postfix_exp        go to state 56
    tcall_exp          go to state 57
    vcall_exp          go to state 58
    dot_name_exp       go to state 59
    dot_index_exp      go to state 60
    unary_exp          go to state 61
    unary_op           go to state 62
    binary_exp         go to state 63
    mul_binary_exp     go to state 64
    add_binary_exp     go to state 65
    cmp_binary_exp     go to state 66
    eq_binary_exp      go to state 67
    and_binary_exp     go to state 68
    xor_binary_exp     go to state 69
    or_binary_exp      go to state 70
    type_spec          go to state 71
    primary_type_spec  go to state 72
    paren_type_spec    go to state 73
    tuple_type_spec    go to state 74
    mod_prefix_tid     go to state 75
    fn_type_spec       go to state 76
    postfix_type_spec  go to state 77
    tcall_type_spec    go to state 78
    unary_type_spec    go to state 79
    varg               go to state 196
    varg_cl            go to state 197


State 118

   99 tcall_exp: postfix_exp "[" • targ_cl "]"

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "Fn"                     shift, and go to state 27
    "not"                    shift, and go to state 28
    "42"                     shift, and go to state 29
    "0x2a"                   shift, and go to state 30
    "42u"                    shift, and go to state 31
    "0x2Au"                  shift, and go to state 32
    "4.2"                    shift, and go to state 33
    "\"dq-string-literal\""  shift, and go to state 34
    "'sq-string-literal'"    shift, and go to state 35
    "("                      shift, and go to state 36
    "{"                      shift, and go to state 37
    "+"                      shift, and go to state 38
    "-"                      shift, and go to state 39

    tid                go to state 40
    vid                go to state 41
    floatl             go to state 42
    mod_prefix         go to state 43
    expr               go to state 198
    bracketed_exp      go to state 45
    unit_exp           go to state 46
    paren_exp          go to state 47
    vtupleExpr         go to state 48
    vstructExpr        go to state 49
    primary_exp        go to state 50
    int_expr           go to state 51
    stringls           go to state 52
    if_exp             go to state 53
    chain_exp          go to state 54
    lambda_exp         go to state 55
    postfix_exp        go to state 56
    tcall_exp          go to state 57
    vcall_exp          go to state 58
    dot_name_exp       go to state 59
    dot_index_exp      go to state 60
    unary_exp          go to state 61
    unary_op           go to state 62
    binary_exp         go to state 63
    mul_binary_exp     go to state 64
    add_binary_exp     go to state 65
    cmp_binary_exp     go to state 66
    eq_binary_exp      go to state 67
    and_binary_exp     go to state 68
    xor_binary_exp     go to state 69
    or_binary_exp      go to state 70
    type_spec          go to state 199
    primary_type_spec  go to state 72
    paren_type_spec    go to state 73
    tuple_type_spec    go to state 74
    mod_prefix_tid     go to state 75
    fn_type_spec       go to state 76
    postfix_type_spec  go to state 77
    tcall_type_spec    go to state 78
    unary_type_spec    go to state 79
    targ               go to state 200
    targ_cl            go to state 201


State 119

  109 unary_exp: unary_op unary_exp •

    $default  reduce using rule 109 (unary_exp)


State 120

  114 mul_binary_op: "*" •

    $default  reduce using rule 114 (mul_binary_op)


State 121

  115 mul_binary_op: "/" •

    $default  reduce using rule 115 (mul_binary_op)


State 122

  116 mul_binary_op: "%" •

    $default  reduce using rule 116 (mul_binary_op)


State 123

  118 mul_binary_exp: mul_binary_exp mul_binary_op • unary_exp

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "Fn"                     shift, and go to state 27
    "not"                    shift, and go to state 28
    "42"                     shift, and go to state 29
    "0x2a"                   shift, and go to state 30
    "42u"                    shift, and go to state 31
    "0x2Au"                  shift, and go to state 32
    "4.2"                    shift, and go to state 33
    "\"dq-string-literal\""  shift, and go to state 34
    "'sq-string-literal'"    shift, and go to state 35
    "("                      shift, and go to state 36
    "{"                      shift, and go to state 37
    "+"                      shift, and go to state 38
    "-"                      shift, and go to state 39

    tid                go to state 40
    vid                go to state 41
    floatl             go to state 42
    mod_prefix         go to state 43
    bracketed_exp      go to state 45
    unit_exp           go to state 46
    paren_exp          go to state 47
    vtupleExpr         go to state 48
    vstructExpr        go to state 49
    primary_exp        go to state 50
    int_expr           go to state 51
    stringls           go to state 52
    if_exp             go to state 53
    chain_exp          go to state 54
    lambda_exp         go to state 55
    postfix_exp        go to state 56
    tcall_exp          go to state 57
    vcall_exp          go to state 58
    dot_name_exp       go to state 59
    dot_index_exp      go to state 60
    unary_exp          go to state 202
    unary_op           go to state 62
    type_spec          go to state 71
    primary_type_spec  go to state 72
    paren_type_spec    go to state 73
    tuple_type_spec    go to state 74
    mod_prefix_tid     go to state 75
    fn_type_spec       go to state 76
    postfix_type_spec  go to state 77
    tcall_type_spec    go to state 78
    unary_type_spec    go to state 79


State 124

  119 add_binary_op: "+" •

    $default  reduce using rule 119 (add_binary_op)


State 125

  120 add_binary_op: "-" •

    $default  reduce using rule 120 (add_binary_op)


State 126

  122 add_binary_exp: add_binary_exp add_binary_op • mul_binary_exp

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "Fn"                     shift, and go to state 27
    "not"                    shift, and go to state 28
    "42"                     shift, and go to state 29
    "0x2a"                   shift, and go to state 30
    "42u"                    shift, and go to state 31
    "0x2Au"                  shift, and go to state 32
    "4.2"                    shift, and go to state 33
    "\"dq-string-literal\""  shift, and go to state 34
    "'sq-string-literal'"    shift, and go to state 35
    "("                      shift, and go to state 36
    "{"                      shift, and go to state 37
    "+"                      shift, and go to state 38
    "-"                      shift, and go to state 39

    tid                go to state 40
    vid                go to state 41
    floatl             go to state 42
    mod_prefix         go to state 43
    bracketed_exp      go to state 45
    unit_exp           go to state 46
    paren_exp          go to state 47
    vtupleExpr         go to state 48
    vstructExpr        go to state 49
    primary_exp        go to state 50
    int_expr           go to state 51
    stringls           go to state 52
    if_exp             go to state 53
    chain_exp          go to state 54
    lambda_exp         go to state 55
    postfix_exp        go to state 56
    tcall_exp          go to state 57
    vcall_exp          go to state 58
    dot_name_exp       go to state 59
    dot_index_exp      go to state 60
    unary_exp          go to state 61
    unary_op           go to state 62
    mul_binary_exp     go to state 203
    type_spec          go to state 71
    primary_type_spec  go to state 72
    paren_type_spec    go to state 73
    tuple_type_spec    go to state 74
    mod_prefix_tid     go to state 75
    fn_type_spec       go to state 76
    postfix_type_spec  go to state 77
    tcall_type_spec    go to state 78
    unary_type_spec    go to state 79


State 127

  123 cmp_binary_op: "<" •

    $default  reduce using rule 123 (cmp_binary_op)


State 128

  124 cmp_binary_op: "<=" •

    $default  reduce using rule 124 (cmp_binary_op)


State 129

  125 cmp_binary_op: ">" •

    $default  reduce using rule 125 (cmp_binary_op)


State 130

  126 cmp_binary_op: ">=" •

    $default  reduce using rule 126 (cmp_binary_op)


State 131

  128 cmp_binary_exp: cmp_binary_exp cmp_binary_op • add_binary_exp

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "Fn"                     shift, and go to state 27
    "not"                    shift, and go to state 28
    "42"                     shift, and go to state 29
    "0x2a"                   shift, and go to state 30
    "42u"                    shift, and go to state 31
    "0x2Au"                  shift, and go to state 32
    "4.2"                    shift, and go to state 33
    "\"dq-string-literal\""  shift, and go to state 34
    "'sq-string-literal'"    shift, and go to state 35
    "("                      shift, and go to state 36
    "{"                      shift, and go to state 37
    "+"                      shift, and go to state 38
    "-"                      shift, and go to state 39

    tid                go to state 40
    vid                go to state 41
    floatl             go to state 42
    mod_prefix         go to state 43
    bracketed_exp      go to state 45
    unit_exp           go to state 46
    paren_exp          go to state 47
    vtupleExpr         go to state 48
    vstructExpr        go to state 49
    primary_exp        go to state 50
    int_expr           go to state 51
    stringls           go to state 52
    if_exp             go to state 53
    chain_exp          go to state 54
    lambda_exp         go to state 55
    postfix_exp        go to state 56
    tcall_exp          go to state 57
    vcall_exp          go to state 58
    dot_name_exp       go to state 59
    dot_index_exp      go to state 60
    unary_exp          go to state 61
    unary_op           go to state 62
    mul_binary_exp     go to state 64
    add_binary_exp     go to state 204
    type_spec          go to state 71
    primary_type_spec  go to state 72
    paren_type_spec    go to state 73
    tuple_type_spec    go to state 74
    mod_prefix_tid     go to state 75
    fn_type_spec       go to state 76
    postfix_type_spec  go to state 77
    tcall_type_spec    go to state 78
    unary_type_spec    go to state 79


State 132

  129 eq_binary_op: "==" •

    $default  reduce using rule 129 (eq_binary_op)


State 133

  130 eq_binary_op: "!=" •

    $default  reduce using rule 130 (eq_binary_op)


State 134

  132 eq_binary_exp: eq_binary_exp eq_binary_op • cmp_binary_exp

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "Fn"                     shift, and go to state 27
    "not"                    shift, and go to state 28
    "42"                     shift, and go to state 29
    "0x2a"                   shift, and go to state 30
    "42u"                    shift, and go to state 31
    "0x2Au"                  shift, and go to state 32
    "4.2"                    shift, and go to state 33
    "\"dq-string-literal\""  shift, and go to state 34
    "'sq-string-literal'"    shift, and go to state 35
    "("                      shift, and go to state 36
    "{"                      shift, and go to state 37
    "+"                      shift, and go to state 38
    "-"                      shift, and go to state 39

    tid                go to state 40
    vid                go to state 41
    floatl             go to state 42
    mod_prefix         go to state 43
    bracketed_exp      go to state 45
    unit_exp           go to state 46
    paren_exp          go to state 47
    vtupleExpr         go to state 48
    vstructExpr        go to state 49
    primary_exp        go to state 50
    int_expr           go to state 51
    stringls           go to state 52
    if_exp             go to state 53
    chain_exp          go to state 54
    lambda_exp         go to state 55
    postfix_exp        go to state 56
    tcall_exp          go to state 57
    vcall_exp          go to state 58
    dot_name_exp       go to state 59
    dot_index_exp      go to state 60
    unary_exp          go to state 61
    unary_op           go to state 62
    mul_binary_exp     go to state 64
    add_binary_exp     go to state 65
    cmp_binary_exp     go to state 205
    type_spec          go to state 71
    primary_type_spec  go to state 72
    paren_type_spec    go to state 73
    tuple_type_spec    go to state 74
    mod_prefix_tid     go to state 75
    fn_type_spec       go to state 76
    postfix_type_spec  go to state 77
    tcall_type_spec    go to state 78
    unary_type_spec    go to state 79


State 135

  134 and_binary_exp: and_binary_exp "and" • eq_binary_exp

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "Fn"                     shift, and go to state 27
    "not"                    shift, and go to state 28
    "42"                     shift, and go to state 29
    "0x2a"                   shift, and go to state 30
    "42u"                    shift, and go to state 31
    "0x2Au"                  shift, and go to state 32
    "4.2"                    shift, and go to state 33
    "\"dq-string-literal\""  shift, and go to state 34
    "'sq-string-literal'"    shift, and go to state 35
    "("                      shift, and go to state 36
    "{"                      shift, and go to state 37
    "+"                      shift, and go to state 38
    "-"                      shift, and go to state 39

    tid                go to state 40
    vid                go to state 41
    floatl             go to state 42
    mod_prefix         go to state 43
    bracketed_exp      go to state 45
    unit_exp           go to state 46
    paren_exp          go to state 47
    vtupleExpr         go to state 48
    vstructExpr        go to state 49
    primary_exp        go to state 50
    int_expr           go to state 51
    stringls           go to state 52
    if_exp             go to state 53
    chain_exp          go to state 54
    lambda_exp         go to state 55
    postfix_exp        go to state 56
    tcall_exp          go to state 57
    vcall_exp          go to state 58
    dot_name_exp       go to state 59
    dot_index_exp      go to state 60
    unary_exp          go to state 61
    unary_op           go to state 62
    mul_binary_exp     go to state 64
    add_binary_exp     go to state 65
    cmp_binary_exp     go to state 66
    eq_binary_exp      go to state 206
    type_spec          go to state 71
    primary_type_spec  go to state 72
    paren_type_spec    go to state 73
    tuple_type_spec    go to state 74
    mod_prefix_tid     go to state 75
    fn_type_spec       go to state 76
    postfix_type_spec  go to state 77
    tcall_type_spec    go to state 78
    unary_type_spec    go to state 79


State 136

  136 xor_binary_exp: xor_binary_exp "xor" • and_binary_exp

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "Fn"                     shift, and go to state 27
    "not"                    shift, and go to state 28
    "42"                     shift, and go to state 29
    "0x2a"                   shift, and go to state 30
    "42u"                    shift, and go to state 31
    "0x2Au"                  shift, and go to state 32
    "4.2"                    shift, and go to state 33
    "\"dq-string-literal\""  shift, and go to state 34
    "'sq-string-literal'"    shift, and go to state 35
    "("                      shift, and go to state 36
    "{"                      shift, and go to state 37
    "+"                      shift, and go to state 38
    "-"                      shift, and go to state 39

    tid                go to state 40
    vid                go to state 41
    floatl             go to state 42
    mod_prefix         go to state 43
    bracketed_exp      go to state 45
    unit_exp           go to state 46
    paren_exp          go to state 47
    vtupleExpr         go to state 48
    vstructExpr        go to state 49
    primary_exp        go to state 50
    int_expr           go to state 51
    stringls           go to state 52
    if_exp             go to state 53
    chain_exp          go to state 54
    lambda_exp         go to state 55
    postfix_exp        go to state 56
    tcall_exp          go to state 57
    vcall_exp          go to state 58
    dot_name_exp       go to state 59
    dot_index_exp      go to state 60
    unary_exp          go to state 61
    unary_op           go to state 62
    mul_binary_exp     go to state 64
    add_binary_exp     go to state 65
    cmp_binary_exp     go to state 66
    eq_binary_exp      go to state 67
    and_binary_exp     go to state 207
    type_spec          go to state 71
    primary_type_spec  go to state 72
    paren_type_spec    go to state 73
    tuple_type_spec    go to state 74
    mod_prefix_tid     go to state 75
    fn_type_spec       go to state 76
    postfix_type_spec  go to state 77
    tcall_type_spec    go to state 78
    unary_type_spec    go to state 79


State 137

  138 or_binary_exp: or_binary_exp "or" • xor_binary_exp

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "Fn"                     shift, and go to state 27
    "not"                    shift, and go to state 28
    "42"                     shift, and go to state 29
    "0x2a"                   shift, and go to state 30
    "42u"                    shift, and go to state 31
    "0x2Au"                  shift, and go to state 32
    "4.2"                    shift, and go to state 33
    "\"dq-string-literal\""  shift, and go to state 34
    "'sq-string-literal'"    shift, and go to state 35
    "("                      shift, and go to state 36
    "{"                      shift, and go to state 37
    "+"                      shift, and go to state 38
    "-"                      shift, and go to state 39

    tid                go to state 40
    vid                go to state 41
    floatl             go to state 42
    mod_prefix         go to state 43
    bracketed_exp      go to state 45
    unit_exp           go to state 46
    paren_exp          go to state 47
    vtupleExpr         go to state 48
    vstructExpr        go to state 49
    primary_exp        go to state 50
    int_expr           go to state 51
    stringls           go to state 52
    if_exp             go to state 53
    chain_exp          go to state 54
    lambda_exp         go to state 55
    postfix_exp        go to state 56
    tcall_exp          go to state 57
    vcall_exp          go to state 58
    dot_name_exp       go to state 59
    dot_index_exp      go to state 60
    unary_exp          go to state 61
    unary_op           go to state 62
    mul_binary_exp     go to state 64
    add_binary_exp     go to state 65
    cmp_binary_exp     go to state 66
    eq_binary_exp      go to state 67
    and_binary_exp     go to state 68
    xor_binary_exp     go to state 208
    type_spec          go to state 71
    primary_type_spec  go to state 72
    paren_type_spec    go to state 73
    tuple_type_spec    go to state 74
    mod_prefix_tid     go to state 75
    fn_type_spec       go to state 76
    postfix_type_spec  go to state 77
    tcall_type_spec    go to state 78
    unary_type_spec    go to state 79


State 138

  103 dot_name_exp: type_spec "." • "<TypeId>"
  104             | type_spec "." • "<TypeId>" "using" paren_exp

    "<TypeId>"  shift, and go to state 209


State 139

  161 tcall_type_spec: postfix_type_spec "[" • targ_cl "]"

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "Fn"                     shift, and go to state 27
    "not"                    shift, and go to state 28
    "42"                     shift, and go to state 29
    "0x2a"                   shift, and go to state 30
    "42u"                    shift, and go to state 31
    "0x2Au"                  shift, and go to state 32
    "4.2"                    shift, and go to state 33
    "\"dq-string-literal\""  shift, and go to state 34
    "'sq-string-literal'"    shift, and go to state 35
    "("                      shift, and go to state 36
    "{"                      shift, and go to state 37
    "+"                      shift, and go to state 38
    "-"                      shift, and go to state 39

    tid                go to state 40
    vid                go to state 41
    floatl             go to state 42
    mod_prefix         go to state 43
    expr               go to state 198
    bracketed_exp      go to state 45
    unit_exp           go to state 46
    paren_exp          go to state 47
    vtupleExpr         go to state 48
    vstructExpr        go to state 49
    primary_exp        go to state 50
    int_expr           go to state 51
    stringls           go to state 52
    if_exp             go to state 53
    chain_exp          go to state 54
    lambda_exp         go to state 55
    postfix_exp        go to state 56
    tcall_exp          go to state 57
    vcall_exp          go to state 58
    dot_name_exp       go to state 59
    dot_index_exp      go to state 60
    unary_exp          go to state 61
    unary_op           go to state 62
    binary_exp         go to state 63
    mul_binary_exp     go to state 64
    add_binary_exp     go to state 65
    cmp_binary_exp     go to state 66
    eq_binary_exp      go to state 67
    and_binary_exp     go to state 68
    xor_binary_exp     go to state 69
    or_binary_exp      go to state 70
    type_spec          go to state 199
    primary_type_spec  go to state 72
    paren_type_spec    go to state 73
    tuple_type_spec    go to state 74
    mod_prefix_tid     go to state 75
    fn_type_spec       go to state 76
    postfix_type_spec  go to state 77
    tcall_type_spec    go to state 78
    unary_type_spec    go to state 79
    targ               go to state 200
    targ_cl            go to state 210


State 140

   10 sub_mod_stmt: "sub" • "<TypeId>" "{" mod_content "}"
   11             | "sub" • "<TypeId>" tpattern_seq "{" mod_content "}"

    "<TypeId>"  shift, and go to state 211


State 141

   18 mod_content_stmt: sub_mod_stmt •

    $default  reduce using rule 18 (mod_content_stmt)


State 142

    9 top_mod_stmt: "module" "<TypeId>" "{" mod_content • "}"
   13 mod_content: mod_content • mod_content_stmt ";"

    "<val_id>"  shift, and go to state 24
    "<TypeId>"  shift, and go to state 10
    "sub"       shift, and go to state 140
    "}"         shift, and go to state 212

    sub_mod_stmt        go to state 141
    mod_content_stmt    go to state 213
    mod_val_stmt        go to state 144
    mod_type_stmt       go to state 145
    mod_enum_stmt       go to state 146
    mod_typeclass_stmt  go to state 147
    tid                 go to state 148
    vid                 go to state 149


State 143

   12 mod_content: mod_content_stmt • ";"

    ";"  shift, and go to state 214


State 144

   14 mod_content_stmt: mod_val_stmt •

    $default  reduce using rule 14 (mod_content_stmt)


State 145

   15 mod_content_stmt: mod_type_stmt •

    $default  reduce using rule 15 (mod_content_stmt)


State 146

   16 mod_content_stmt: mod_enum_stmt •

    $default  reduce using rule 16 (mod_content_stmt)


State 147

   17 mod_content_stmt: mod_typeclass_stmt •

    $default  reduce using rule 17 (mod_content_stmt)


State 148

   23 mod_type_stmt: tid • "=" long_type_spec
   24              | tid • tpattern_seq "=" long_type_spec
   25 mod_enum_stmt: tid • enum_field_pl
   26              | tid • tpattern_seq enum_field_pl
   32 mod_typeclass_stmt: tid • ":-" "<" tid class_spec ">" "{" type_query_exp_sl "}"
   33                   | tid • tpattern_seq ":-" "<" tid class_spec ">" "{" type_query_exp_sl "}"

    "["   shift, and go to state 215
    "="   shift, and go to state 216
    "!"   shift, and go to state 217
    "|"   shift, and go to state 218
    ":-"  shift, and go to state 219

    enum_field_pl  go to state 220
    tpattern       go to state 221
    tpattern_seq   go to state 222


State 149

   19 mod_val_stmt: vid • "=" expr
   20             | vid • tpattern_seq "=" expr
   21             | vid • type_spec "from" tid stringl
   22             | vid • tpattern_seq type_spec "from" tid stringl

    "<TypeId>"  shift, and go to state 10
    "Fn"        shift, and go to state 27
    "("         shift, and go to state 160
    "["         shift, and go to state 215
    "="         shift, and go to state 223
    "!"         shift, and go to state 217

    tid                go to state 40
    mod_prefix         go to state 161
    type_spec          go to state 224
    primary_type_spec  go to state 72
    paren_type_spec    go to state 73
    tuple_type_spec    go to state 74
    mod_prefix_tid     go to state 75
    fn_type_spec       go to state 76
    postfix_type_spec  go to state 77
    tcall_type_spec    go to state 78
    unary_type_spec    go to state 79
    tpattern           go to state 221
    tpattern_seq       go to state 225


State 150

   34 import_stmt: "import" tid "from" stringl "type" stringl •

    $default  reduce using rule 34 (import_stmt)


State 151

   85 if_exp: "if" bracketed_exp "then" • bracketed_exp
   86       | "if" bracketed_exp "then" • bracketed_exp "else" primary_exp

    "("  shift, and go to state 82
    "{"  shift, and go to state 37

    bracketed_exp  go to state 226
    unit_exp       go to state 46
    paren_exp      go to state 47
    vtupleExpr     go to state 48
    vstructExpr    go to state 49
    chain_exp      go to state 54


State 152

  181 vpattern_field: "out" • vid type_spec

    "<val_id>"  shift, and go to state 24

    vid  go to state 227


State 153

  182 vpattern_field: "inout" • vid type_spec

    "<val_id>"  shift, and go to state 24

    vid  go to state 228


State 154

  191 vpattern: "(" ")" •

    $default  reduce using rule 191 (vpattern)


State 155

  180 vpattern_field: vid • type_spec

    "<TypeId>"  shift, and go to state 10
    "Fn"        shift, and go to state 27
    "("         shift, and go to state 160

    tid                go to state 40
    mod_prefix         go to state 161
    type_spec          go to state 229
    primary_type_spec  go to state 72
    paren_type_spec    go to state 73
    tuple_type_spec    go to state 74
    mod_prefix_tid     go to state 75
    fn_type_spec       go to state 76
    postfix_type_spec  go to state 77
    tcall_type_spec    go to state 78
    unary_type_spec    go to state 79


State 156

  194 vpattern_field_cl: vpattern_field •

    $default  reduce using rule 194 (vpattern_field_cl)


State 157

  190 vpattern: "(" vpattern_field_cl • ")"
  195 vpattern_field_cl: vpattern_field_cl • "," vpattern_field

    ","  shift, and go to state 230
    ")"  shift, and go to state 231


State 158

   93 lambda_exp: "fn" vpattern "->" • type_spec bracketed_exp

    "<TypeId>"  shift, and go to state 10
    "Fn"        shift, and go to state 27
    "("         shift, and go to state 160

    tid                go to state 40
    mod_prefix         go to state 161
    type_spec          go to state 232
    primary_type_spec  go to state 72
    paren_type_spec    go to state 73
    tuple_type_spec    go to state 74
    mod_prefix_tid     go to state 75
    fn_type_spec       go to state 76
    postfix_type_spec  go to state 77
    tcall_type_spec    go to state 78
    unary_type_spec    go to state 79


State 159

   92 lambda_exp: "fn" vpattern bracketed_exp •

    $default  reduce using rule 92 (lambda_exp)


State 160

  154 paren_type_spec: "(" • type_spec ")"
  155 tuple_type_spec: "(" • type_spec "," ")"
  156                | "(" • type_spec_cl2 ")"

    "<TypeId>"  shift, and go to state 10
    "Fn"        shift, and go to state 27
    "("         shift, and go to state 160

    tid                go to state 40
    mod_prefix         go to state 161
    type_spec          go to state 233
    type_spec_cl2      go to state 92
    primary_type_spec  go to state 72
    paren_type_spec    go to state 73
    tuple_type_spec    go to state 74
    mod_prefix_tid     go to state 75
    fn_type_spec       go to state 76
    postfix_type_spec  go to state 77
    tcall_type_spec    go to state 78
    unary_type_spec    go to state 79


State 161

   52 mod_prefix: mod_prefix • vid ":"
  157 mod_prefix_tid: mod_prefix • tid

    "<val_id>"  shift, and go to state 24
    "<TypeId>"  shift, and go to state 10

    tid  go to state 112
    vid  go to state 113


State 162

  158 fn_type_spec: "Fn" vpattern primary_type_spec •

    $default  reduce using rule 158 (fn_type_spec)


State 163

   55 expr_cl2: expr "," • expr
   67 vtupleExpr: "(" expr "," • ")"

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "Fn"                     shift, and go to state 27
    "not"                    shift, and go to state 28
    "42"                     shift, and go to state 29
    "0x2a"                   shift, and go to state 30
    "42u"                    shift, and go to state 31
    "0x2Au"                  shift, and go to state 32
    "4.2"                    shift, and go to state 33
    "\"dq-string-literal\""  shift, and go to state 34
    "'sq-string-literal'"    shift, and go to state 35
    "("                      shift, and go to state 36
    ")"                      shift, and go to state 234
    "{"                      shift, and go to state 37
    "+"                      shift, and go to state 38
    "-"                      shift, and go to state 39

    tid                go to state 40
    vid                go to state 41
    floatl             go to state 42
    mod_prefix         go to state 43
    expr               go to state 235
    bracketed_exp      go to state 45
    unit_exp           go to state 46
    paren_exp          go to state 47
    vtupleExpr         go to state 48
    vstructExpr        go to state 49
    primary_exp        go to state 50
    int_expr           go to state 51
    stringls           go to state 52
    if_exp             go to state 53
    chain_exp          go to state 54
    lambda_exp         go to state 55
    postfix_exp        go to state 56
    tcall_exp          go to state 57
    vcall_exp          go to state 58
    dot_name_exp       go to state 59
    dot_index_exp      go to state 60
    unary_exp          go to state 61
    unary_op           go to state 62
    binary_exp         go to state 63
    mul_binary_exp     go to state 64
    add_binary_exp     go to state 65
    cmp_binary_exp     go to state 66
    eq_binary_exp      go to state 67
    and_binary_exp     go to state 68
    xor_binary_exp     go to state 69
    or_binary_exp      go to state 70
    type_spec          go to state 71
    primary_type_spec  go to state 72
    paren_type_spec    go to state 73
    tuple_type_spec    go to state 74
    mod_prefix_tid     go to state 75
    fn_type_spec       go to state 76
    postfix_type_spec  go to state 77
    tcall_type_spec    go to state 78
    unary_type_spec    go to state 79


State 164

   66 paren_exp: "(" long_exp ")" •

    $default  reduce using rule 66 (paren_exp)


State 165

   56 expr_cl2: expr_cl2 "," • expr

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "Fn"                     shift, and go to state 27
    "not"                    shift, and go to state 28
    "42"                     shift, and go to state 29
    "0x2a"                   shift, and go to state 30
    "42u"                    shift, and go to state 31
    "0x2Au"                  shift, and go to state 32
    "4.2"                    shift, and go to state 33
    "\"dq-string-literal\""  shift, and go to state 34
    "'sq-string-literal'"    shift, and go to state 35
    "("                      shift, and go to state 36
    "{"                      shift, and go to state 37
    "+"                      shift, and go to state 38
    "-"                      shift, and go to state 39

    tid                go to state 40
    vid                go to state 41
    floatl             go to state 42
    mod_prefix         go to state 43
    expr               go to state 236
    bracketed_exp      go to state 45
    unit_exp           go to state 46
    paren_exp          go to state 47
    vtupleExpr         go to state 48
    vstructExpr        go to state 49
    primary_exp        go to state 50
    int_expr           go to state 51
    stringls           go to state 52
    if_exp             go to state 53
    chain_exp          go to state 54
    lambda_exp         go to state 55
    postfix_exp        go to state 56
    tcall_exp          go to state 57
    vcall_exp          go to state 58
    dot_name_exp       go to state 59
    dot_index_exp      go to state 60
    unary_exp          go to state 61
    unary_op           go to state 62
    binary_exp         go to state 63
    mul_binary_exp     go to state 64
    add_binary_exp     go to state 65
    cmp_binary_exp     go to state 66
    eq_binary_exp      go to state 67
    and_binary_exp     go to state 68
    xor_binary_exp     go to state 69
    or_binary_exp      go to state 70
    type_spec          go to state 71
    primary_type_spec  go to state 72
    paren_type_spec    go to state 73
    tuple_type_spec    go to state 74
    mod_prefix_tid     go to state 75
    fn_type_spec       go to state 76
    postfix_type_spec  go to state 77
    tcall_type_spec    go to state 78
    unary_type_spec    go to state 79


State 166

   68 vtupleExpr: "(" expr_cl2 ")" •

    $default  reduce using rule 68 (vtupleExpr)


State 167

  144 type_spec_cl2: type_spec "," • type_spec
  155 tuple_type_spec: "(" type_spec "," • ")"

    "<TypeId>"  shift, and go to state 10
    "Fn"        shift, and go to state 27
    "("         shift, and go to state 160
    ")"         shift, and go to state 237

    tid                go to state 40
    mod_prefix         go to state 161
    type_spec          go to state 238
    primary_type_spec  go to state 72
    paren_type_spec    go to state 73
    tuple_type_spec    go to state 74
    mod_prefix_tid     go to state 75
    fn_type_spec       go to state 76
    postfix_type_spec  go to state 77
    tcall_type_spec    go to state 78
    unary_type_spec    go to state 79


State 168

  154 paren_type_spec: "(" type_spec ")" •

    $default  reduce using rule 154 (paren_type_spec)


State 169

  145 type_spec_cl2: type_spec_cl2 "," • type_spec

    "<TypeId>"  shift, and go to state 10
    "Fn"        shift, and go to state 27
    "("         shift, and go to state 160

    tid                go to state 40
    mod_prefix         go to state 161
    type_spec          go to state 239
    primary_type_spec  go to state 72
    paren_type_spec    go to state 73
    tuple_type_spec    go to state 74
    mod_prefix_tid     go to state 75
    fn_type_spec       go to state 76
    postfix_type_spec  go to state 77
    tcall_type_spec    go to state 78
    unary_type_spec    go to state 79


State 170

  156 tuple_type_spec: "(" type_spec_cl2 ")" •

    $default  reduce using rule 156 (tuple_type_spec)


State 171

  187 destructured_lpattern: "(" • lpattern_field_cl ")"

    "<val_id>"  shift, and go to state 24

    vid                go to state 172
    lpattern_field     go to state 240
    lpattern_field_cl  go to state 241


State 172

  183 lpattern_field: vid • type_spec
  184               | vid •

    "<TypeId>"  shift, and go to state 10
    "Fn"        shift, and go to state 27
    "("         shift, and go to state 160

    $default  reduce using rule 184 (lpattern_field)

    tid                go to state 40
    mod_prefix         go to state 161
    type_spec          go to state 242
    primary_type_spec  go to state 72
    paren_type_spec    go to state 73
    tuple_type_spec    go to state 74
    mod_prefix_tid     go to state 75
    fn_type_spec       go to state 76
    postfix_type_spec  go to state 77
    tcall_type_spec    go to state 78
    unary_type_spec    go to state 79


State 173

  188 lpattern: lpattern_field •

    $default  reduce using rule 188 (lpattern)


State 174

  189 lpattern: destructured_lpattern •

    $default  reduce using rule 189 (lpattern)


State 175

   41 const_stmt: "const" lpattern • "=" expr

    "="  shift, and go to state 243


State 176

   42 val_stmt: "val" lpattern • "=" expr

    "="  shift, and go to state 244


State 177

   43 var_stmt: "var" lpattern • "=" expr

    "="  shift, and go to state 245


State 178

   44 set_stmt: "set" expr • "=" expr

    "="  shift, and go to state 246


State 179

   45 discard_stmt: "discard" expr •

    $default  reduce using rule 45 (discard_stmt)


State 180

   90 chain_prefix: chain_prefix_stmt ";" •

    $default  reduce using rule 90 (chain_prefix)


State 181

  179 struct_exp_field: vid "=" • expr

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "Fn"                     shift, and go to state 27
    "not"                    shift, and go to state 28
    "42"                     shift, and go to state 29
    "0x2a"                   shift, and go to state 30
    "42u"                    shift, and go to state 31
    "0x2Au"                  shift, and go to state 32
    "4.2"                    shift, and go to state 33
    "\"dq-string-literal\""  shift, and go to state 34
    "'sq-string-literal'"    shift, and go to state 35
    "("                      shift, and go to state 36
    "{"                      shift, and go to state 37
    "+"                      shift, and go to state 38
    "-"                      shift, and go to state 39

    tid                go to state 40
    vid                go to state 41
    floatl             go to state 42
    mod_prefix         go to state 43
    expr               go to state 247
    bracketed_exp      go to state 45
    unit_exp           go to state 46
    paren_exp          go to state 47
    vtupleExpr         go to state 48
    vstructExpr        go to state 49
    primary_exp        go to state 50
    int_expr           go to state 51
    stringls           go to state 52
    if_exp             go to state 53
    chain_exp          go to state 54
    lambda_exp         go to state 55
    postfix_exp        go to state 56
    tcall_exp          go to state 57
    vcall_exp          go to state 58
    dot_name_exp       go to state 59
    dot_index_exp      go to state 60
    unary_exp          go to state 61
    unary_op           go to state 62
    binary_exp         go to state 63
    mul_binary_exp     go to state 64
    add_binary_exp     go to state 65
    cmp_binary_exp     go to state 66
    eq_binary_exp      go to state 67
    and_binary_exp     go to state 68
    xor_binary_exp     go to state 69
    or_binary_exp      go to state 70
    type_spec          go to state 71
    primary_type_spec  go to state 72
    paren_type_spec    go to state 73
    tuple_type_spec    go to state 74
    mod_prefix_tid     go to state 75
    fn_type_spec       go to state 76
    postfix_type_spec  go to state 77
    tcall_type_spec    go to state 78
    unary_type_spec    go to state 79


State 182

   87 chain_exp: "{" expr "}" •

    $default  reduce using rule 87 (chain_exp)


State 183

   88 chain_exp: "{" chain_prefix "}" •

    $default  reduce using rule 88 (chain_exp)


State 184

   91 chain_prefix: chain_prefix chain_prefix_stmt • ";"

    ";"  shift, and go to state 248


State 185

   89 chain_exp: "{" chain_prefix expr • "}"

    "}"  shift, and go to state 249


State 186

  201 struct_exp_field_cl: struct_exp_field_cl "," • struct_exp_field

    "<val_id>"  shift, and go to state 24

    vid               go to state 250
    struct_exp_field  go to state 251


State 187

   69 vstructExpr: "{" struct_exp_field_cl "}" •

    $default  reduce using rule 69 (vstructExpr)


State 188

   52 mod_prefix: mod_prefix vid ":" •

    $default  reduce using rule 52 (mod_prefix)


State 189

  102 dot_name_exp: postfix_exp "." "<val_id>" •

    $default  reduce using rule 102 (dot_name_exp)


State 190

  107 dot_index_exp: postfix_exp "." bracketed_exp •

    $default  reduce using rule 107 (dot_index_exp)


State 191

  106 dot_index_exp: postfix_exp "." int_expr •

    $default  reduce using rule 106 (dot_index_exp)


State 192

  171 varg: "out" • expr

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "Fn"                     shift, and go to state 27
    "not"                    shift, and go to state 28
    "42"                     shift, and go to state 29
    "0x2a"                   shift, and go to state 30
    "42u"                    shift, and go to state 31
    "0x2Au"                  shift, and go to state 32
    "4.2"                    shift, and go to state 33
    "\"dq-string-literal\""  shift, and go to state 34
    "'sq-string-literal'"    shift, and go to state 35
    "("                      shift, and go to state 36
    "{"                      shift, and go to state 37
    "+"                      shift, and go to state 38
    "-"                      shift, and go to state 39

    tid                go to state 40
    vid                go to state 41
    floatl             go to state 42
    mod_prefix         go to state 43
    expr               go to state 252
    bracketed_exp      go to state 45
    unit_exp           go to state 46
    paren_exp          go to state 47
    vtupleExpr         go to state 48
    vstructExpr        go to state 49
    primary_exp        go to state 50
    int_expr           go to state 51
    stringls           go to state 52
    if_exp             go to state 53
    chain_exp          go to state 54
    lambda_exp         go to state 55
    postfix_exp        go to state 56
    tcall_exp          go to state 57
    vcall_exp          go to state 58
    dot_name_exp       go to state 59
    dot_index_exp      go to state 60
    unary_exp          go to state 61
    unary_op           go to state 62
    binary_exp         go to state 63
    mul_binary_exp     go to state 64
    add_binary_exp     go to state 65
    cmp_binary_exp     go to state 66
    eq_binary_exp      go to state 67
    and_binary_exp     go to state 68
    xor_binary_exp     go to state 69
    or_binary_exp      go to state 70
    type_spec          go to state 71
    primary_type_spec  go to state 72
    paren_type_spec    go to state 73
    tuple_type_spec    go to state 74
    mod_prefix_tid     go to state 75
    fn_type_spec       go to state 76
    postfix_type_spec  go to state 77
    tcall_type_spec    go to state 78
    unary_type_spec    go to state 79


State 193

  172 varg: "inout" • expr

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "Fn"                     shift, and go to state 27
    "not"                    shift, and go to state 28
    "42"                     shift, and go to state 29
    "0x2a"                   shift, and go to state 30
    "42u"                    shift, and go to state 31
    "0x2Au"                  shift, and go to state 32
    "4.2"                    shift, and go to state 33
    "\"dq-string-literal\""  shift, and go to state 34
    "'sq-string-literal'"    shift, and go to state 35
    "("                      shift, and go to state 36
    "{"                      shift, and go to state 37
    "+"                      shift, and go to state 38
    "-"                      shift, and go to state 39

    tid                go to state 40
    vid                go to state 41
    floatl             go to state 42
    mod_prefix         go to state 43
    expr               go to state 253
    bracketed_exp      go to state 45
    unit_exp           go to state 46
    paren_exp          go to state 47
    vtupleExpr         go to state 48
    vstructExpr        go to state 49
    primary_exp        go to state 50
    int_expr           go to state 51
    stringls           go to state 52
    if_exp             go to state 53
    chain_exp          go to state 54
    lambda_exp         go to state 55
    postfix_exp        go to state 56
    tcall_exp          go to state 57
    vcall_exp          go to state 58
    dot_name_exp       go to state 59
    dot_index_exp      go to state 60
    unary_exp          go to state 61
    unary_op           go to state 62
    binary_exp         go to state 63
    mul_binary_exp     go to state 64
    add_binary_exp     go to state 65
    cmp_binary_exp     go to state 66
    eq_binary_exp      go to state 67
    and_binary_exp     go to state 68
    xor_binary_exp     go to state 69
    or_binary_exp      go to state 70
    type_spec          go to state 71
    primary_type_spec  go to state 72
    paren_type_spec    go to state 73
    tuple_type_spec    go to state 74
    mod_prefix_tid     go to state 75
    fn_type_spec       go to state 76
    postfix_type_spec  go to state 77
    tcall_type_spec    go to state 78
    unary_type_spec    go to state 79


State 194

  100 vcall_exp: postfix_exp "(" ")" •

    $default  reduce using rule 100 (vcall_exp)


State 195

  170 varg: expr •

    $default  reduce using rule 170 (varg)


State 196

  173 varg_cl: varg •

    $default  reduce using rule 173 (varg_cl)


State 197

  101 vcall_exp: postfix_exp "(" varg_cl • ")"
  174 varg_cl: varg_cl • "," varg

    ","  shift, and go to state 254
    ")"  shift, and go to state 255


State 198

  167 targ: expr •

    $default  reduce using rule 167 (targ)


State 199

  103 dot_name_exp: type_spec • "." "<TypeId>"
  104             | type_spec • "." "<TypeId>" "using" paren_exp
  166 targ: type_spec •

    "."  shift, and go to state 138

    $default  reduce using rule 166 (targ)


State 200

  168 targ_cl: targ •

    $default  reduce using rule 168 (targ_cl)


State 201

   99 tcall_exp: postfix_exp "[" targ_cl • "]"
  169 targ_cl: targ_cl • "," targ

    ","  shift, and go to state 256
    "]"  shift, and go to state 257


State 202

  118 mul_binary_exp: mul_binary_exp mul_binary_op unary_exp •

    $default  reduce using rule 118 (mul_binary_exp)


State 203

  118 mul_binary_exp: mul_binary_exp • mul_binary_op unary_exp
  122 add_binary_exp: add_binary_exp add_binary_op mul_binary_exp •

    "*"  shift, and go to state 120
    "/"  shift, and go to state 121
    "%"  shift, and go to state 122

    $default  reduce using rule 122 (add_binary_exp)

    mul_binary_op  go to state 123


State 204

  122 add_binary_exp: add_binary_exp • add_binary_op mul_binary_exp
  128 cmp_binary_exp: cmp_binary_exp cmp_binary_op add_binary_exp •

    "+"  shift, and go to state 124
    "-"  shift, and go to state 125

    $default  reduce using rule 128 (cmp_binary_exp)

    add_binary_op  go to state 126


State 205

  128 cmp_binary_exp: cmp_binary_exp • cmp_binary_op add_binary_exp
  132 eq_binary_exp: eq_binary_exp eq_binary_op cmp_binary_exp •

    "<"   shift, and go to state 127
    "<="  shift, and go to state 128
    ">"   shift, and go to state 129
    ">="  shift, and go to state 130

    $default  reduce using rule 132 (eq_binary_exp)

    cmp_binary_op  go to state 131


State 206

  132 eq_binary_exp: eq_binary_exp • eq_binary_op cmp_binary_exp
  134 and_binary_exp: and_binary_exp "and" eq_binary_exp •

    "=="  shift, and go to state 132
    "!="  shift, and go to state 133

    $default  reduce using rule 134 (and_binary_exp)

    eq_binary_op  go to state 134


State 207

  134 and_binary_exp: and_binary_exp • "and" eq_binary_exp
  136 xor_binary_exp: xor_binary_exp "xor" and_binary_exp •

    "and"  shift, and go to state 135

    $default  reduce using rule 136 (xor_binary_exp)


State 208

  136 xor_binary_exp: xor_binary_exp • "xor" and_binary_exp
  138 or_binary_exp: or_binary_exp "or" xor_binary_exp •

    "xor"  shift, and go to state 136

    $default  reduce using rule 138 (or_binary_exp)


State 209

  103 dot_name_exp: type_spec "." "<TypeId>" •
  104             | type_spec "." "<TypeId>" • "using" paren_exp

    "using"  shift, and go to state 258

    $default  reduce using rule 103 (dot_name_exp)


State 210

  161 tcall_type_spec: postfix_type_spec "[" targ_cl • "]"
  169 targ_cl: targ_cl • "," targ

    ","  shift, and go to state 256
    "]"  shift, and go to state 259


State 211

   10 sub_mod_stmt: "sub" "<TypeId>" • "{" mod_content "}"
   11             | "sub" "<TypeId>" • tpattern_seq "{" mod_content "}"

    "["  shift, and go to state 215
    "{"  shift, and go to state 260
    "!"  shift, and go to state 217

    tpattern      go to state 221
    tpattern_seq  go to state 261


State 212

    9 top_mod_stmt: "module" "<TypeId>" "{" mod_content "}" •

    $default  reduce using rule 9 (top_mod_stmt)


State 213

   13 mod_content: mod_content mod_content_stmt • ";"

    ";"  shift, and go to state 262


State 214

   12 mod_content: mod_content_stmt ";" •

    $default  reduce using rule 12 (mod_content)


State 215

  192 tpattern: "[" • tpattern_field_cl "]"

    "<val_id>"  shift, and go to state 24
    "<TypeId>"  shift, and go to state 10

    tid                go to state 263
    vid                go to state 264
    tpattern_field     go to state 265
    tpattern_field_cl  go to state 266


State 216

   23 mod_type_stmt: tid "=" • long_type_spec

    "<TypeId>"  shift, and go to state 10
    "Fn"        shift, and go to state 27
    "("         shift, and go to state 160
    "{"         shift, and go to state 267

    tid                go to state 40
    mod_prefix         go to state 161
    primary_type_spec  go to state 72
    paren_type_spec    go to state 73
    tuple_type_spec    go to state 74
    mod_prefix_tid     go to state 75
    fn_type_spec       go to state 76
    postfix_type_spec  go to state 77
    tcall_type_spec    go to state 78
    unary_type_spec    go to state 268
    long_type_spec     go to state 269
    struct_type_spec   go to state 270


State 217

  193 tpattern: "!" • "[" tpattern_field_cl "]"

    "["  shift, and go to state 271


State 218

   27 enum_field_pl: "|" • unprefixed_enum_field_pl

    "<TypeId>"  shift, and go to state 10

    unprefixed_enum_field_pl  go to state 272
    enum_field                go to state 273
    tid                       go to state 274


State 219

   32 mod_typeclass_stmt: tid ":-" • "<" tid class_spec ">" "{" type_query_exp_sl "}"

    "<"  shift, and go to state 275


State 220

   25 mod_enum_stmt: tid enum_field_pl •

    $default  reduce using rule 25 (mod_enum_stmt)


State 221

  202 tpattern_seq: tpattern •

    $default  reduce using rule 202 (tpattern_seq)


State 222

   24 mod_type_stmt: tid tpattern_seq • "=" long_type_spec
   26 mod_enum_stmt: tid tpattern_seq • enum_field_pl
   33 mod_typeclass_stmt: tid tpattern_seq • ":-" "<" tid class_spec ">" "{" type_query_exp_sl "}"
  203 tpattern_seq: tpattern_seq • tpattern

    "["   shift, and go to state 215
    "="   shift, and go to state 276
    "!"   shift, and go to state 217
    "|"   shift, and go to state 218
    ":-"  shift, and go to state 277

    enum_field_pl  go to state 278
    tpattern       go to state 279


State 223

   19 mod_val_stmt: vid "=" • expr

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "Fn"                     shift, and go to state 27
    "not"                    shift, and go to state 28
    "42"                     shift, and go to state 29
    "0x2a"                   shift, and go to state 30
    "42u"                    shift, and go to state 31
    "0x2Au"                  shift, and go to state 32
    "4.2"                    shift, and go to state 33
    "\"dq-string-literal\""  shift, and go to state 34
    "'sq-string-literal'"    shift, and go to state 35
    "("                      shift, and go to state 36
    "{"                      shift, and go to state 37
    "+"                      shift, and go to state 38
    "-"                      shift, and go to state 39

    tid                go to state 40
    vid                go to state 41
    floatl             go to state 42
    mod_prefix         go to state 43
    expr               go to state 280
    bracketed_exp      go to state 45
    unit_exp           go to state 46
    paren_exp          go to state 47
    vtupleExpr         go to state 48
    vstructExpr        go to state 49
    primary_exp        go to state 50
    int_expr           go to state 51
    stringls           go to state 52
    if_exp             go to state 53
    chain_exp          go to state 54
    lambda_exp         go to state 55
    postfix_exp        go to state 56
    tcall_exp          go to state 57
    vcall_exp          go to state 58
    dot_name_exp       go to state 59
    dot_index_exp      go to state 60
    unary_exp          go to state 61
    unary_op           go to state 62
    binary_exp         go to state 63
    mul_binary_exp     go to state 64
    add_binary_exp     go to state 65
    cmp_binary_exp     go to state 66
    eq_binary_exp      go to state 67
    and_binary_exp     go to state 68
    xor_binary_exp     go to state 69
    or_binary_exp      go to state 70
    type_spec          go to state 71
    primary_type_spec  go to state 72
    paren_type_spec    go to state 73
    tuple_type_spec    go to state 74
    mod_prefix_tid     go to state 75
    fn_type_spec       go to state 76
    postfix_type_spec  go to state 77
    tcall_type_spec    go to state 78
    unary_type_spec    go to state 79


State 224

   21 mod_val_stmt: vid type_spec • "from" tid stringl

    "from"  shift, and go to state 281


State 225

   20 mod_val_stmt: vid tpattern_seq • "=" expr
   22             | vid tpattern_seq • type_spec "from" tid stringl
  203 tpattern_seq: tpattern_seq • tpattern

    "<TypeId>"  shift, and go to state 10
    "Fn"        shift, and go to state 27
    "("         shift, and go to state 160
    "["         shift, and go to state 215
    "="         shift, and go to state 282
    "!"         shift, and go to state 217

    tid                go to state 40
    mod_prefix         go to state 161
    type_spec          go to state 283
    primary_type_spec  go to state 72
    paren_type_spec    go to state 73
    tuple_type_spec    go to state 74
    mod_prefix_tid     go to state 75
    fn_type_spec       go to state 76
    postfix_type_spec  go to state 77
    tcall_type_spec    go to state 78
    unary_type_spec    go to state 79
    tpattern           go to state 279


State 226

   85 if_exp: "if" bracketed_exp "then" bracketed_exp •
   86       | "if" bracketed_exp "then" bracketed_exp • "else" primary_exp

    "else"  shift, and go to state 284

    $default  reduce using rule 85 (if_exp)


State 227

  181 vpattern_field: "out" vid • type_spec

    "<TypeId>"  shift, and go to state 10
    "Fn"        shift, and go to state 27
    "("         shift, and go to state 160

    tid                go to state 40
    mod_prefix         go to state 161
    type_spec          go to state 285
    primary_type_spec  go to state 72
    paren_type_spec    go to state 73
    tuple_type_spec    go to state 74
    mod_prefix_tid     go to state 75
    fn_type_spec       go to state 76
    postfix_type_spec  go to state 77
    tcall_type_spec    go to state 78
    unary_type_spec    go to state 79


State 228

  182 vpattern_field: "inout" vid • type_spec

    "<TypeId>"  shift, and go to state 10
    "Fn"        shift, and go to state 27
    "("         shift, and go to state 160

    tid                go to state 40
    mod_prefix         go to state 161
    type_spec          go to state 286
    primary_type_spec  go to state 72
    paren_type_spec    go to state 73
    tuple_type_spec    go to state 74
    mod_prefix_tid     go to state 75
    fn_type_spec       go to state 76
    postfix_type_spec  go to state 77
    tcall_type_spec    go to state 78
    unary_type_spec    go to state 79


State 229

  180 vpattern_field: vid type_spec •

    $default  reduce using rule 180 (vpattern_field)


State 230

  195 vpattern_field_cl: vpattern_field_cl "," • vpattern_field

    "<val_id>"  shift, and go to state 24
    "out"       shift, and go to state 152
    "inout"     shift, and go to state 153

    vid             go to state 155
    vpattern_field  go to state 287


State 231

  190 vpattern: "(" vpattern_field_cl ")" •

    $default  reduce using rule 190 (vpattern)


State 232

   93 lambda_exp: "fn" vpattern "->" type_spec • bracketed_exp

    "("  shift, and go to state 82
    "{"  shift, and go to state 37

    bracketed_exp  go to state 288
    unit_exp       go to state 46
    paren_exp      go to state 47
    vtupleExpr     go to state 48
    vstructExpr    go to state 49
    chain_exp      go to state 54


State 233

  144 type_spec_cl2: type_spec • "," type_spec
  154 paren_type_spec: "(" type_spec • ")"
  155 tuple_type_spec: "(" type_spec • "," ")"

    ","  shift, and go to state 167
    ")"  shift, and go to state 168


State 234

   67 vtupleExpr: "(" expr "," ")" •

    $default  reduce using rule 67 (vtupleExpr)


State 235

   55 expr_cl2: expr "," expr •

    $default  reduce using rule 55 (expr_cl2)


State 236

   56 expr_cl2: expr_cl2 "," expr •

    $default  reduce using rule 56 (expr_cl2)


State 237

  155 tuple_type_spec: "(" type_spec "," ")" •

    $default  reduce using rule 155 (tuple_type_spec)


State 238

  144 type_spec_cl2: type_spec "," type_spec •

    $default  reduce using rule 144 (type_spec_cl2)


State 239

  145 type_spec_cl2: type_spec_cl2 "," type_spec •

    $default  reduce using rule 145 (type_spec_cl2)


State 240

  196 lpattern_field_cl: lpattern_field •

    $default  reduce using rule 196 (lpattern_field_cl)


State 241

  187 destructured_lpattern: "(" lpattern_field_cl • ")"
  197 lpattern_field_cl: lpattern_field_cl • "," lpattern_field

    ","  shift, and go to state 289
    ")"  shift, and go to state 290


State 242

  183 lpattern_field: vid type_spec •

    $default  reduce using rule 183 (lpattern_field)


State 243

   41 const_stmt: "const" lpattern "=" • expr

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "Fn"                     shift, and go to state 27
    "not"                    shift, and go to state 28
    "42"                     shift, and go to state 29
    "0x2a"                   shift, and go to state 30
    "42u"                    shift, and go to state 31
    "0x2Au"                  shift, and go to state 32
    "4.2"                    shift, and go to state 33
    "\"dq-string-literal\""  shift, and go to state 34
    "'sq-string-literal'"    shift, and go to state 35
    "("                      shift, and go to state 36
    "{"                      shift, and go to state 37
    "+"                      shift, and go to state 38
    "-"                      shift, and go to state 39

    tid                go to state 40
    vid                go to state 41
    floatl             go to state 42
    mod_prefix         go to state 43
    expr               go to state 291
    bracketed_exp      go to state 45
    unit_exp           go to state 46
    paren_exp          go to state 47
    vtupleExpr         go to state 48
    vstructExpr        go to state 49
    primary_exp        go to state 50
    int_expr           go to state 51
    stringls           go to state 52
    if_exp             go to state 53
    chain_exp          go to state 54
    lambda_exp         go to state 55
    postfix_exp        go to state 56
    tcall_exp          go to state 57
    vcall_exp          go to state 58
    dot_name_exp       go to state 59
    dot_index_exp      go to state 60
    unary_exp          go to state 61
    unary_op           go to state 62
    binary_exp         go to state 63
    mul_binary_exp     go to state 64
    add_binary_exp     go to state 65
    cmp_binary_exp     go to state 66
    eq_binary_exp      go to state 67
    and_binary_exp     go to state 68
    xor_binary_exp     go to state 69
    or_binary_exp      go to state 70
    type_spec          go to state 71
    primary_type_spec  go to state 72
    paren_type_spec    go to state 73
    tuple_type_spec    go to state 74
    mod_prefix_tid     go to state 75
    fn_type_spec       go to state 76
    postfix_type_spec  go to state 77
    tcall_type_spec    go to state 78
    unary_type_spec    go to state 79


State 244

   42 val_stmt: "val" lpattern "=" • expr

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "Fn"                     shift, and go to state 27
    "not"                    shift, and go to state 28
    "42"                     shift, and go to state 29
    "0x2a"                   shift, and go to state 30
    "42u"                    shift, and go to state 31
    "0x2Au"                  shift, and go to state 32
    "4.2"                    shift, and go to state 33
    "\"dq-string-literal\""  shift, and go to state 34
    "'sq-string-literal'"    shift, and go to state 35
    "("                      shift, and go to state 36
    "{"                      shift, and go to state 37
    "+"                      shift, and go to state 38
    "-"                      shift, and go to state 39

    tid                go to state 40
    vid                go to state 41
    floatl             go to state 42
    mod_prefix         go to state 43
    expr               go to state 292
    bracketed_exp      go to state 45
    unit_exp           go to state 46
    paren_exp          go to state 47
    vtupleExpr         go to state 48
    vstructExpr        go to state 49
    primary_exp        go to state 50
    int_expr           go to state 51
    stringls           go to state 52
    if_exp             go to state 53
    chain_exp          go to state 54
    lambda_exp         go to state 55
    postfix_exp        go to state 56
    tcall_exp          go to state 57
    vcall_exp          go to state 58
    dot_name_exp       go to state 59
    dot_index_exp      go to state 60
    unary_exp          go to state 61
    unary_op           go to state 62
    binary_exp         go to state 63
    mul_binary_exp     go to state 64
    add_binary_exp     go to state 65
    cmp_binary_exp     go to state 66
    eq_binary_exp      go to state 67
    and_binary_exp     go to state 68
    xor_binary_exp     go to state 69
    or_binary_exp      go to state 70
    type_spec          go to state 71
    primary_type_spec  go to state 72
    paren_type_spec    go to state 73
    tuple_type_spec    go to state 74
    mod_prefix_tid     go to state 75
    fn_type_spec       go to state 76
    postfix_type_spec  go to state 77
    tcall_type_spec    go to state 78
    unary_type_spec    go to state 79


State 245

   43 var_stmt: "var" lpattern "=" • expr

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "Fn"                     shift, and go to state 27
    "not"                    shift, and go to state 28
    "42"                     shift, and go to state 29
    "0x2a"                   shift, and go to state 30
    "42u"                    shift, and go to state 31
    "0x2Au"                  shift, and go to state 32
    "4.2"                    shift, and go to state 33
    "\"dq-string-literal\""  shift, and go to state 34
    "'sq-string-literal'"    shift, and go to state 35
    "("                      shift, and go to state 36
    "{"                      shift, and go to state 37
    "+"                      shift, and go to state 38
    "-"                      shift, and go to state 39

    tid                go to state 40
    vid                go to state 41
    floatl             go to state 42
    mod_prefix         go to state 43
    expr               go to state 293
    bracketed_exp      go to state 45
    unit_exp           go to state 46
    paren_exp          go to state 47
    vtupleExpr         go to state 48
    vstructExpr        go to state 49
    primary_exp        go to state 50
    int_expr           go to state 51
    stringls           go to state 52
    if_exp             go to state 53
    chain_exp          go to state 54
    lambda_exp         go to state 55
    postfix_exp        go to state 56
    tcall_exp          go to state 57
    vcall_exp          go to state 58
    dot_name_exp       go to state 59
    dot_index_exp      go to state 60
    unary_exp          go to state 61
    unary_op           go to state 62
    binary_exp         go to state 63
    mul_binary_exp     go to state 64
    add_binary_exp     go to state 65
    cmp_binary_exp     go to state 66
    eq_binary_exp      go to state 67
    and_binary_exp     go to state 68
    xor_binary_exp     go to state 69
    or_binary_exp      go to state 70
    type_spec          go to state 71
    primary_type_spec  go to state 72
    paren_type_spec    go to state 73
    tuple_type_spec    go to state 74
    mod_prefix_tid     go to state 75
    fn_type_spec       go to state 76
    postfix_type_spec  go to state 77
    tcall_type_spec    go to state 78
    unary_type_spec    go to state 79


State 246

   44 set_stmt: "set" expr "=" • expr

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "Fn"                     shift, and go to state 27
    "not"                    shift, and go to state 28
    "42"                     shift, and go to state 29
    "0x2a"                   shift, and go to state 30
    "42u"                    shift, and go to state 31
    "0x2Au"                  shift, and go to state 32
    "4.2"                    shift, and go to state 33
    "\"dq-string-literal\""  shift, and go to state 34
    "'sq-string-literal'"    shift, and go to state 35
    "("                      shift, and go to state 36
    "{"                      shift, and go to state 37
    "+"                      shift, and go to state 38
    "-"                      shift, and go to state 39

    tid                go to state 40
    vid                go to state 41
    floatl             go to state 42
    mod_prefix         go to state 43
    expr               go to state 294
    bracketed_exp      go to state 45
    unit_exp           go to state 46
    paren_exp          go to state 47
    vtupleExpr         go to state 48
    vstructExpr        go to state 49
    primary_exp        go to state 50
    int_expr           go to state 51
    stringls           go to state 52
    if_exp             go to state 53
    chain_exp          go to state 54
    lambda_exp         go to state 55
    postfix_exp        go to state 56
    tcall_exp          go to state 57
    vcall_exp          go to state 58
    dot_name_exp       go to state 59
    dot_index_exp      go to state 60
    unary_exp          go to state 61
    unary_op           go to state 62
    binary_exp         go to state 63
    mul_binary_exp     go to state 64
    add_binary_exp     go to state 65
    cmp_binary_exp     go to state 66
    eq_binary_exp      go to state 67
    and_binary_exp     go to state 68
    xor_binary_exp     go to state 69
    or_binary_exp      go to state 70
    type_spec          go to state 71
    primary_type_spec  go to state 72
    paren_type_spec    go to state 73
    tuple_type_spec    go to state 74
    mod_prefix_tid     go to state 75
    fn_type_spec       go to state 76
    postfix_type_spec  go to state 77
    tcall_type_spec    go to state 78
    unary_type_spec    go to state 79


State 247

  179 struct_exp_field: vid "=" expr •

    $default  reduce using rule 179 (struct_exp_field)


State 248

   91 chain_prefix: chain_prefix chain_prefix_stmt ";" •

    $default  reduce using rule 91 (chain_prefix)


State 249

   89 chain_exp: "{" chain_prefix expr "}" •

    $default  reduce using rule 89 (chain_exp)


State 250

  179 struct_exp_field: vid • "=" expr

    "="  shift, and go to state 181


State 251

  201 struct_exp_field_cl: struct_exp_field_cl "," struct_exp_field •

    $default  reduce using rule 201 (struct_exp_field_cl)


State 252

  171 varg: "out" expr •

    $default  reduce using rule 171 (varg)


State 253

  172 varg: "inout" expr •

    $default  reduce using rule 172 (varg)


State 254

  174 varg_cl: varg_cl "," • varg

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "Fn"                     shift, and go to state 27
    "not"                    shift, and go to state 28
    "out"                    shift, and go to state 192
    "inout"                  shift, and go to state 193
    "42"                     shift, and go to state 29
    "0x2a"                   shift, and go to state 30
    "42u"                    shift, and go to state 31
    "0x2Au"                  shift, and go to state 32
    "4.2"                    shift, and go to state 33
    "\"dq-string-literal\""  shift, and go to state 34
    "'sq-string-literal'"    shift, and go to state 35
    "("                      shift, and go to state 36
    "{"                      shift, and go to state 37
    "+"                      shift, and go to state 38
    "-"                      shift, and go to state 39

    tid                go to state 40
    vid                go to state 41
    floatl             go to state 42
    mod_prefix         go to state 43
    expr               go to state 195
    bracketed_exp      go to state 45
    unit_exp           go to state 46
    paren_exp          go to state 47
    vtupleExpr         go to state 48
    vstructExpr        go to state 49
    primary_exp        go to state 50
    int_expr           go to state 51
    stringls           go to state 52
    if_exp             go to state 53
    chain_exp          go to state 54
    lambda_exp         go to state 55
    postfix_exp        go to state 56
    tcall_exp          go to state 57
    vcall_exp          go to state 58
    dot_name_exp       go to state 59
    dot_index_exp      go to state 60
    unary_exp          go to state 61
    unary_op           go to state 62
    binary_exp         go to state 63
    mul_binary_exp     go to state 64
    add_binary_exp     go to state 65
    cmp_binary_exp     go to state 66
    eq_binary_exp      go to state 67
    and_binary_exp     go to state 68
    xor_binary_exp     go to state 69
    or_binary_exp      go to state 70
    type_spec          go to state 71
    primary_type_spec  go to state 72
    paren_type_spec    go to state 73
    tuple_type_spec    go to state 74
    mod_prefix_tid     go to state 75
    fn_type_spec       go to state 76
    postfix_type_spec  go to state 77
    tcall_type_spec    go to state 78
    unary_type_spec    go to state 79
    varg               go to state 295


State 255

  101 vcall_exp: postfix_exp "(" varg_cl ")" •

    $default  reduce using rule 101 (vcall_exp)


State 256

  169 targ_cl: targ_cl "," • targ

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "Fn"                     shift, and go to state 27
    "not"                    shift, and go to state 28
    "42"                     shift, and go to state 29
    "0x2a"                   shift, and go to state 30
    "42u"                    shift, and go to state 31
    "0x2Au"                  shift, and go to state 32
    "4.2"                    shift, and go to state 33
    "\"dq-string-literal\""  shift, and go to state 34
    "'sq-string-literal'"    shift, and go to state 35
    "("                      shift, and go to state 36
    "{"                      shift, and go to state 37
    "+"                      shift, and go to state 38
    "-"                      shift, and go to state 39

    tid                go to state 40
    vid                go to state 41
    floatl             go to state 42
    mod_prefix         go to state 43
    expr               go to state 198
    bracketed_exp      go to state 45
    unit_exp           go to state 46
    paren_exp          go to state 47
    vtupleExpr         go to state 48
    vstructExpr        go to state 49
    primary_exp        go to state 50
    int_expr           go to state 51
    stringls           go to state 52
    if_exp             go to state 53
    chain_exp          go to state 54
    lambda_exp         go to state 55
    postfix_exp        go to state 56
    tcall_exp          go to state 57
    vcall_exp          go to state 58
    dot_name_exp       go to state 59
    dot_index_exp      go to state 60
    unary_exp          go to state 61
    unary_op           go to state 62
    binary_exp         go to state 63
    mul_binary_exp     go to state 64
    add_binary_exp     go to state 65
    cmp_binary_exp     go to state 66
    eq_binary_exp      go to state 67
    and_binary_exp     go to state 68
    xor_binary_exp     go to state 69
    or_binary_exp      go to state 70
    type_spec          go to state 199
    primary_type_spec  go to state 72
    paren_type_spec    go to state 73
    tuple_type_spec    go to state 74
    mod_prefix_tid     go to state 75
    fn_type_spec       go to state 76
    postfix_type_spec  go to state 77
    tcall_type_spec    go to state 78
    unary_type_spec    go to state 79
    targ               go to state 296


State 257

   99 tcall_exp: postfix_exp "[" targ_cl "]" •

    $default  reduce using rule 99 (tcall_exp)


State 258

  104 dot_name_exp: type_spec "." "<TypeId>" "using" • paren_exp

    "("  shift, and go to state 297

    paren_exp  go to state 298


State 259

  161 tcall_type_spec: postfix_type_spec "[" targ_cl "]" •

    $default  reduce using rule 161 (tcall_type_spec)


State 260

   10 sub_mod_stmt: "sub" "<TypeId>" "{" • mod_content "}"

    "<val_id>"  shift, and go to state 24
    "<TypeId>"  shift, and go to state 10
    "sub"       shift, and go to state 140

    sub_mod_stmt        go to state 141
    mod_content         go to state 299
    mod_content_stmt    go to state 143
    mod_val_stmt        go to state 144
    mod_type_stmt       go to state 145
    mod_enum_stmt       go to state 146
    mod_typeclass_stmt  go to state 147
    tid                 go to state 148
    vid                 go to state 149


State 261

   11 sub_mod_stmt: "sub" "<TypeId>" tpattern_seq • "{" mod_content "}"
  203 tpattern_seq: tpattern_seq • tpattern

    "["  shift, and go to state 215
    "{"  shift, and go to state 300
    "!"  shift, and go to state 217

    tpattern  go to state 279


State 262

   13 mod_content: mod_content mod_content_stmt ";" •

    $default  reduce using rule 13 (mod_content)


State 263

  186 tpattern_field: tid • class_spec

    "<TypeId>"  shift, and go to state 10

    tid                 go to state 301
    class_spec          go to state 302
    primary_class_spec  go to state 303
    postfix_class_spec  go to state 304


State 264

  185 tpattern_field: vid • type_spec

    "<TypeId>"  shift, and go to state 10
    "Fn"        shift, and go to state 27
    "("         shift, and go to state 160

    tid                go to state 40
    mod_prefix         go to state 161
    type_spec          go to state 305
    primary_type_spec  go to state 72
    paren_type_spec    go to state 73
    tuple_type_spec    go to state 74
    mod_prefix_tid     go to state 75
    fn_type_spec       go to state 76
    postfix_type_spec  go to state 77
    tcall_type_spec    go to state 78
    unary_type_spec    go to state 79


State 265

  198 tpattern_field_cl: tpattern_field •

    $default  reduce using rule 198 (tpattern_field_cl)


State 266

  192 tpattern: "[" tpattern_field_cl • "]"
  199 tpattern_field_cl: tpattern_field_cl • "," tpattern_field

    ","  shift, and go to state 306
    "]"  shift, and go to state 307


State 267

  165 struct_type_spec: "{" • struct_type_spec_field_cl "}"

    "<val_id>"  shift, and go to state 24

    vid                        go to state 308
    struct_type_spec_field     go to state 309
    struct_type_spec_field_cl  go to state 310


State 268

  163 long_type_spec: unary_type_spec •

    $default  reduce using rule 163 (long_type_spec)


State 269

   23 mod_type_stmt: tid "=" long_type_spec •

    $default  reduce using rule 23 (mod_type_stmt)


State 270

  164 long_type_spec: struct_type_spec •

    $default  reduce using rule 164 (long_type_spec)


State 271

  193 tpattern: "!" "[" • tpattern_field_cl "]"

    "<val_id>"  shift, and go to state 24
    "<TypeId>"  shift, and go to state 10

    tid                go to state 263
    vid                go to state 264
    tpattern_field     go to state 265
    tpattern_field_cl  go to state 311


State 272

   27 enum_field_pl: "|" unprefixed_enum_field_pl •
   29 unprefixed_enum_field_pl: unprefixed_enum_field_pl • "|" enum_field

    "|"  shift, and go to state 312

    $default  reduce using rule 27 (enum_field_pl)


State 273

   28 unprefixed_enum_field_pl: enum_field •

    $default  reduce using rule 28 (unprefixed_enum_field_pl)


State 274

   30 enum_field: tid •
   31           | tid • type_spec

    "<TypeId>"  shift, and go to state 10
    "Fn"        shift, and go to state 27
    "("         shift, and go to state 160

    $default  reduce using rule 30 (enum_field)

    tid                go to state 40
    mod_prefix         go to state 161
    type_spec          go to state 313
    primary_type_spec  go to state 72
    paren_type_spec    go to state 73
    tuple_type_spec    go to state 74
    mod_prefix_tid     go to state 75
    fn_type_spec       go to state 76
    postfix_type_spec  go to state 77
    tcall_type_spec    go to state 78
    unary_type_spec    go to state 79


State 275

   32 mod_typeclass_stmt: tid ":-" "<" • tid class_spec ">" "{" type_query_exp_sl "}"

    "<TypeId>"  shift, and go to state 10

    tid  go to state 314


State 276

   24 mod_type_stmt: tid tpattern_seq "=" • long_type_spec

    "<TypeId>"  shift, and go to state 10
    "Fn"        shift, and go to state 27
    "("         shift, and go to state 160
    "{"         shift, and go to state 267

    tid                go to state 40
    mod_prefix         go to state 161
    primary_type_spec  go to state 72
    paren_type_spec    go to state 73
    tuple_type_spec    go to state 74
    mod_prefix_tid     go to state 75
    fn_type_spec       go to state 76
    postfix_type_spec  go to state 77
    tcall_type_spec    go to state 78
    unary_type_spec    go to state 268
    long_type_spec     go to state 315
    struct_type_spec   go to state 270


State 277

   33 mod_typeclass_stmt: tid tpattern_seq ":-" • "<" tid class_spec ">" "{" type_query_exp_sl "}"

    "<"  shift, and go to state 316


State 278

   26 mod_enum_stmt: tid tpattern_seq enum_field_pl •

    $default  reduce using rule 26 (mod_enum_stmt)


State 279

  203 tpattern_seq: tpattern_seq tpattern •

    $default  reduce using rule 203 (tpattern_seq)


State 280

   19 mod_val_stmt: vid "=" expr •

    $default  reduce using rule 19 (mod_val_stmt)


State 281

   21 mod_val_stmt: vid type_spec "from" • tid stringl

    "<TypeId>"  shift, and go to state 10

    tid  go to state 317


State 282

   20 mod_val_stmt: vid tpattern_seq "=" • expr

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "Fn"                     shift, and go to state 27
    "not"                    shift, and go to state 28
    "42"                     shift, and go to state 29
    "0x2a"                   shift, and go to state 30
    "42u"                    shift, and go to state 31
    "0x2Au"                  shift, and go to state 32
    "4.2"                    shift, and go to state 33
    "\"dq-string-literal\""  shift, and go to state 34
    "'sq-string-literal'"    shift, and go to state 35
    "("                      shift, and go to state 36
    "{"                      shift, and go to state 37
    "+"                      shift, and go to state 38
    "-"                      shift, and go to state 39

    tid                go to state 40
    vid                go to state 41
    floatl             go to state 42
    mod_prefix         go to state 43
    expr               go to state 318
    bracketed_exp      go to state 45
    unit_exp           go to state 46
    paren_exp          go to state 47
    vtupleExpr         go to state 48
    vstructExpr        go to state 49
    primary_exp        go to state 50
    int_expr           go to state 51
    stringls           go to state 52
    if_exp             go to state 53
    chain_exp          go to state 54
    lambda_exp         go to state 55
    postfix_exp        go to state 56
    tcall_exp          go to state 57
    vcall_exp          go to state 58
    dot_name_exp       go to state 59
    dot_index_exp      go to state 60
    unary_exp          go to state 61
    unary_op           go to state 62
    binary_exp         go to state 63
    mul_binary_exp     go to state 64
    add_binary_exp     go to state 65
    cmp_binary_exp     go to state 66
    eq_binary_exp      go to state 67
    and_binary_exp     go to state 68
    xor_binary_exp     go to state 69
    or_binary_exp      go to state 70
    type_spec          go to state 71
    primary_type_spec  go to state 72
    paren_type_spec    go to state 73
    tuple_type_spec    go to state 74
    mod_prefix_tid     go to state 75
    fn_type_spec       go to state 76
    postfix_type_spec  go to state 77
    tcall_type_spec    go to state 78
    unary_type_spec    go to state 79


State 283

   22 mod_val_stmt: vid tpattern_seq type_spec • "from" tid stringl

    "from"  shift, and go to state 319


State 284

   86 if_exp: "if" bracketed_exp "then" bracketed_exp "else" • primary_exp

    "<val_id>"               shift, and go to state 24
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "42"                     shift, and go to state 29
    "0x2a"                   shift, and go to state 30
    "42u"                    shift, and go to state 31
    "0x2Au"                  shift, and go to state 32
    "4.2"                    shift, and go to state 33
    "\"dq-string-literal\""  shift, and go to state 34
    "'sq-string-literal'"    shift, and go to state 35
    "("                      shift, and go to state 82
    "{"                      shift, and go to state 37

    vid            go to state 41
    floatl         go to state 42
    bracketed_exp  go to state 45
    unit_exp       go to state 46
    paren_exp      go to state 47
    vtupleExpr     go to state 48
    vstructExpr    go to state 49
    primary_exp    go to state 320
    int_expr       go to state 51
    stringls       go to state 52
    if_exp         go to state 53
    chain_exp      go to state 54
    lambda_exp     go to state 55


State 285

  181 vpattern_field: "out" vid type_spec •

    $default  reduce using rule 181 (vpattern_field)


State 286

  182 vpattern_field: "inout" vid type_spec •

    $default  reduce using rule 182 (vpattern_field)


State 287

  195 vpattern_field_cl: vpattern_field_cl "," vpattern_field •

    $default  reduce using rule 195 (vpattern_field_cl)


State 288

   93 lambda_exp: "fn" vpattern "->" type_spec bracketed_exp •

    $default  reduce using rule 93 (lambda_exp)


State 289

  197 lpattern_field_cl: lpattern_field_cl "," • lpattern_field

    "<val_id>"  shift, and go to state 24

    vid             go to state 172
    lpattern_field  go to state 321


State 290

  187 destructured_lpattern: "(" lpattern_field_cl ")" •

    $default  reduce using rule 187 (destructured_lpattern)


State 291

   41 const_stmt: "const" lpattern "=" expr •

    $default  reduce using rule 41 (const_stmt)


State 292

   42 val_stmt: "val" lpattern "=" expr •

    $default  reduce using rule 42 (val_stmt)


State 293

   43 var_stmt: "var" lpattern "=" expr •

    $default  reduce using rule 43 (var_stmt)


State 294

   44 set_stmt: "set" expr "=" expr •

    $default  reduce using rule 44 (set_stmt)


State 295

  174 varg_cl: varg_cl "," varg •

    $default  reduce using rule 174 (varg_cl)


State 296

  169 targ_cl: targ_cl "," targ •

    $default  reduce using rule 169 (targ_cl)


State 297

   66 paren_exp: "(" • long_exp ")"

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "Fn"                     shift, and go to state 27
    "not"                    shift, and go to state 28
    "42"                     shift, and go to state 29
    "0x2a"                   shift, and go to state 30
    "42u"                    shift, and go to state 31
    "0x2Au"                  shift, and go to state 32
    "4.2"                    shift, and go to state 33
    "\"dq-string-literal\""  shift, and go to state 34
    "'sq-string-literal'"    shift, and go to state 35
    "("                      shift, and go to state 36
    "{"                      shift, and go to state 37
    "+"                      shift, and go to state 38
    "-"                      shift, and go to state 39

    tid                go to state 40
    vid                go to state 41
    floatl             go to state 42
    mod_prefix         go to state 43
    expr               go to state 322
    long_exp           go to state 89
    bracketed_exp      go to state 45
    unit_exp           go to state 46
    paren_exp          go to state 47
    vtupleExpr         go to state 48
    vstructExpr        go to state 49
    primary_exp        go to state 50
    int_expr           go to state 51
    stringls           go to state 52
    if_exp             go to state 53
    chain_exp          go to state 54
    lambda_exp         go to state 55
    postfix_exp        go to state 56
    tcall_exp          go to state 57
    vcall_exp          go to state 58
    dot_name_exp       go to state 59
    dot_index_exp      go to state 60
    unary_exp          go to state 61
    unary_op           go to state 62
    binary_exp         go to state 63
    mul_binary_exp     go to state 64
    add_binary_exp     go to state 65
    cmp_binary_exp     go to state 66
    eq_binary_exp      go to state 67
    and_binary_exp     go to state 68
    xor_binary_exp     go to state 69
    or_binary_exp      go to state 70
    type_spec          go to state 71
    primary_type_spec  go to state 72
    paren_type_spec    go to state 73
    tuple_type_spec    go to state 74
    mod_prefix_tid     go to state 75
    fn_type_spec       go to state 76
    postfix_type_spec  go to state 77
    tcall_type_spec    go to state 78
    unary_type_spec    go to state 79


State 298

  104 dot_name_exp: type_spec "." "<TypeId>" "using" paren_exp •

    $default  reduce using rule 104 (dot_name_exp)


State 299

   10 sub_mod_stmt: "sub" "<TypeId>" "{" mod_content • "}"
   13 mod_content: mod_content • mod_content_stmt ";"

    "<val_id>"  shift, and go to state 24
    "<TypeId>"  shift, and go to state 10
    "sub"       shift, and go to state 140
    "}"         shift, and go to state 323

    sub_mod_stmt        go to state 141
    mod_content_stmt    go to state 213
    mod_val_stmt        go to state 144
    mod_type_stmt       go to state 145
    mod_enum_stmt       go to state 146
    mod_typeclass_stmt  go to state 147
    tid                 go to state 148
    vid                 go to state 149


State 300

   11 sub_mod_stmt: "sub" "<TypeId>" tpattern_seq "{" • mod_content "}"

    "<val_id>"  shift, and go to state 24
    "<TypeId>"  shift, and go to state 10
    "sub"       shift, and go to state 140

    sub_mod_stmt        go to state 141
    mod_content         go to state 324
    mod_content_stmt    go to state 143
    mod_val_stmt        go to state 144
    mod_type_stmt       go to state 145
    mod_enum_stmt       go to state 146
    mod_typeclass_stmt  go to state 147
    tid                 go to state 148
    vid                 go to state 149


State 301

  176 primary_class_spec: tid •

    $default  reduce using rule 176 (primary_class_spec)


State 302

  186 tpattern_field: tid class_spec •

    $default  reduce using rule 186 (tpattern_field)


State 303

  177 postfix_class_spec: primary_class_spec •

    $default  reduce using rule 177 (postfix_class_spec)


State 304

  175 class_spec: postfix_class_spec •
  178 postfix_class_spec: postfix_class_spec • "[" targ_cl "]"

    "["  shift, and go to state 325

    $default  reduce using rule 175 (class_spec)


State 305

  185 tpattern_field: vid type_spec •

    $default  reduce using rule 185 (tpattern_field)


State 306

  199 tpattern_field_cl: tpattern_field_cl "," • tpattern_field

    "<val_id>"  shift, and go to state 24
    "<TypeId>"  shift, and go to state 10

    tid             go to state 263
    vid             go to state 264
    tpattern_field  go to state 326


State 307

  192 tpattern: "[" tpattern_field_cl "]" •

    $default  reduce using rule 192 (tpattern)


State 308

  146 struct_type_spec_field: vid • type_spec

    "<TypeId>"  shift, and go to state 10
    "Fn"        shift, and go to state 27
    "("         shift, and go to state 160

    tid                go to state 40
    mod_prefix         go to state 161
    type_spec          go to state 327
    primary_type_spec  go to state 72
    paren_type_spec    go to state 73
    tuple_type_spec    go to state 74
    mod_prefix_tid     go to state 75
    fn_type_spec       go to state 76
    postfix_type_spec  go to state 77
    tcall_type_spec    go to state 78
    unary_type_spec    go to state 79


State 309

  147 struct_type_spec_field_cl: struct_type_spec_field •

    $default  reduce using rule 147 (struct_type_spec_field_cl)


State 310

  148 struct_type_spec_field_cl: struct_type_spec_field_cl • "," struct_type_spec_field
  165 struct_type_spec: "{" struct_type_spec_field_cl • "}"

    ","  shift, and go to state 328
    "}"  shift, and go to state 329


State 311

  193 tpattern: "!" "[" tpattern_field_cl • "]"
  199 tpattern_field_cl: tpattern_field_cl • "," tpattern_field

    ","  shift, and go to state 306
    "]"  shift, and go to state 330


State 312

   29 unprefixed_enum_field_pl: unprefixed_enum_field_pl "|" • enum_field

    "<TypeId>"  shift, and go to state 10

    enum_field  go to state 331
    tid         go to state 274


State 313

   31 enum_field: tid type_spec •

    $default  reduce using rule 31 (enum_field)


State 314

   32 mod_typeclass_stmt: tid ":-" "<" tid • class_spec ">" "{" type_query_exp_sl "}"

    "<TypeId>"  shift, and go to state 10

    tid                 go to state 301
    class_spec          go to state 332
    primary_class_spec  go to state 303
    postfix_class_spec  go to state 304


State 315

   24 mod_type_stmt: tid tpattern_seq "=" long_type_spec •

    $default  reduce using rule 24 (mod_type_stmt)


State 316

   33 mod_typeclass_stmt: tid tpattern_seq ":-" "<" • tid class_spec ">" "{" type_query_exp_sl "}"

    "<TypeId>"  shift, and go to state 10

    tid  go to state 333


State 317

   21 mod_val_stmt: vid type_spec "from" tid • stringl

    "\"dq-string-literal\""  shift, and go to state 21
    "'sq-string-literal'"    shift, and go to state 22

    stringl  go to state 334


State 318

   20 mod_val_stmt: vid tpattern_seq "=" expr •

    $default  reduce using rule 20 (mod_val_stmt)


State 319

   22 mod_val_stmt: vid tpattern_seq type_spec "from" • tid stringl

    "<TypeId>"  shift, and go to state 10

    tid  go to state 335


State 320

   86 if_exp: "if" bracketed_exp "then" bracketed_exp "else" primary_exp •

    $default  reduce using rule 86 (if_exp)


State 321

  197 lpattern_field_cl: lpattern_field_cl "," lpattern_field •

    $default  reduce using rule 197 (lpattern_field_cl)


State 322

   54 long_exp: expr •

    $default  reduce using rule 54 (long_exp)


State 323

   10 sub_mod_stmt: "sub" "<TypeId>" "{" mod_content "}" •

    $default  reduce using rule 10 (sub_mod_stmt)


State 324

   11 sub_mod_stmt: "sub" "<TypeId>" tpattern_seq "{" mod_content • "}"
   13 mod_content: mod_content • mod_content_stmt ";"

    "<val_id>"  shift, and go to state 24
    "<TypeId>"  shift, and go to state 10
    "sub"       shift, and go to state 140
    "}"         shift, and go to state 336

    sub_mod_stmt        go to state 141
    mod_content_stmt    go to state 213
    mod_val_stmt        go to state 144
    mod_type_stmt       go to state 145
    mod_enum_stmt       go to state 146
    mod_typeclass_stmt  go to state 147
    tid                 go to state 148
    vid                 go to state 149


State 325

  178 postfix_class_spec: postfix_class_spec "[" • targ_cl "]"

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "Fn"                     shift, and go to state 27
    "not"                    shift, and go to state 28
    "42"                     shift, and go to state 29
    "0x2a"                   shift, and go to state 30
    "42u"                    shift, and go to state 31
    "0x2Au"                  shift, and go to state 32
    "4.2"                    shift, and go to state 33
    "\"dq-string-literal\""  shift, and go to state 34
    "'sq-string-literal'"    shift, and go to state 35
    "("                      shift, and go to state 36
    "{"                      shift, and go to state 37
    "+"                      shift, and go to state 38
    "-"                      shift, and go to state 39

    tid                go to state 40
    vid                go to state 41
    floatl             go to state 42
    mod_prefix         go to state 43
    expr               go to state 198
    bracketed_exp      go to state 45
    unit_exp           go to state 46
    paren_exp          go to state 47
    vtupleExpr         go to state 48
    vstructExpr        go to state 49
    primary_exp        go to state 50
    int_expr           go to state 51
    stringls           go to state 52
    if_exp             go to state 53
    chain_exp          go to state 54
    lambda_exp         go to state 55
    postfix_exp        go to state 56
    tcall_exp          go to state 57
    vcall_exp          go to state 58
    dot_name_exp       go to state 59
    dot_index_exp      go to state 60
    unary_exp          go to state 61
    unary_op           go to state 62
    binary_exp         go to state 63
    mul_binary_exp     go to state 64
    add_binary_exp     go to state 65
    cmp_binary_exp     go to state 66
    eq_binary_exp      go to state 67
    and_binary_exp     go to state 68
    xor_binary_exp     go to state 69
    or_binary_exp      go to state 70
    type_spec          go to state 199
    primary_type_spec  go to state 72
    paren_type_spec    go to state 73
    tuple_type_spec    go to state 74
    mod_prefix_tid     go to state 75
    fn_type_spec       go to state 76
    postfix_type_spec  go to state 77
    tcall_type_spec    go to state 78
    unary_type_spec    go to state 79
    targ               go to state 200
    targ_cl            go to state 337


State 326

  199 tpattern_field_cl: tpattern_field_cl "," tpattern_field •

    $default  reduce using rule 199 (tpattern_field_cl)


State 327

  146 struct_type_spec_field: vid type_spec •

    $default  reduce using rule 146 (struct_type_spec_field)


State 328

  148 struct_type_spec_field_cl: struct_type_spec_field_cl "," • struct_type_spec_field

    "<val_id>"  shift, and go to state 24

    vid                     go to state 308
    struct_type_spec_field  go to state 338


State 329

  165 struct_type_spec: "{" struct_type_spec_field_cl "}" •

    $default  reduce using rule 165 (struct_type_spec)


State 330

  193 tpattern: "!" "[" tpattern_field_cl "]" •

    $default  reduce using rule 193 (tpattern)


State 331

   29 unprefixed_enum_field_pl: unprefixed_enum_field_pl "|" enum_field •

    $default  reduce using rule 29 (unprefixed_enum_field_pl)


State 332

   32 mod_typeclass_stmt: tid ":-" "<" tid class_spec • ">" "{" type_query_exp_sl "}"

    ">"  shift, and go to state 339


State 333

   33 mod_typeclass_stmt: tid tpattern_seq ":-" "<" tid • class_spec ">" "{" type_query_exp_sl "}"

    "<TypeId>"  shift, and go to state 10

    tid                 go to state 301
    class_spec          go to state 340
    primary_class_spec  go to state 303
    postfix_class_spec  go to state 304


State 334

   21 mod_val_stmt: vid type_spec "from" tid stringl •

    $default  reduce using rule 21 (mod_val_stmt)


State 335

   22 mod_val_stmt: vid tpattern_seq type_spec "from" tid • stringl

    "\"dq-string-literal\""  shift, and go to state 21
    "'sq-string-literal'"    shift, and go to state 22

    stringl  go to state 341


State 336

   11 sub_mod_stmt: "sub" "<TypeId>" tpattern_seq "{" mod_content "}" •

    $default  reduce using rule 11 (sub_mod_stmt)


State 337

  169 targ_cl: targ_cl • "," targ
  178 postfix_class_spec: postfix_class_spec "[" targ_cl • "]"

    ","  shift, and go to state 256
    "]"  shift, and go to state 342


State 338

  148 struct_type_spec_field_cl: struct_type_spec_field_cl "," struct_type_spec_field •

    $default  reduce using rule 148 (struct_type_spec_field_cl)


State 339

   32 mod_typeclass_stmt: tid ":-" "<" tid class_spec ">" • "{" type_query_exp_sl "}"

    "{"  shift, and go to state 343


State 340

   33 mod_typeclass_stmt: tid tpattern_seq ":-" "<" tid class_spec • ">" "{" type_query_exp_sl "}"

    ">"  shift, and go to state 344


State 341

   22 mod_val_stmt: vid tpattern_seq type_spec "from" tid stringl •

    $default  reduce using rule 22 (mod_val_stmt)


State 342

  178 postfix_class_spec: postfix_class_spec "[" targ_cl "]" •

    $default  reduce using rule 178 (postfix_class_spec)


State 343

   32 mod_typeclass_stmt: tid ":-" "<" tid class_spec ">" "{" • type_query_exp_sl "}"

    "<TypeId>"  shift, and go to state 10
    "Fn"        shift, and go to state 27
    "("         shift, and go to state 160

    tid                go to state 40
    mod_prefix         go to state 161
    type_query_exp_sl  go to state 345
    type_query_exp     go to state 346
    type_spec          go to state 347
    primary_type_spec  go to state 72
    paren_type_spec    go to state 73
    tuple_type_spec    go to state 74
    mod_prefix_tid     go to state 75
    fn_type_spec       go to state 76
    postfix_type_spec  go to state 77
    tcall_type_spec    go to state 78
    unary_type_spec    go to state 79


State 344

   33 mod_typeclass_stmt: tid tpattern_seq ":-" "<" tid class_spec ">" • "{" type_query_exp_sl "}"

    "{"  shift, and go to state 348


State 345

   32 mod_typeclass_stmt: tid ":-" "<" tid class_spec ">" "{" type_query_exp_sl • "}"
   58 type_query_exp_sl: type_query_exp_sl • type_query_exp ";"

    "<TypeId>"  shift, and go to state 10
    "Fn"        shift, and go to state 27
    "("         shift, and go to state 160
    "}"         shift, and go to state 349

    tid                go to state 40
    mod_prefix         go to state 161
    type_query_exp     go to state 350
    type_spec          go to state 347
    primary_type_spec  go to state 72
    paren_type_spec    go to state 73
    tuple_type_spec    go to state 74
    mod_prefix_tid     go to state 75
    fn_type_spec       go to state 76
    postfix_type_spec  go to state 77
    tcall_type_spec    go to state 78
    unary_type_spec    go to state 79


State 346

   57 type_query_exp_sl: type_query_exp • ";"

    ";"  shift, and go to state 351


State 347

  139 type_query_exp: type_spec • type_query_op long_type_spec

    "::"  shift, and go to state 352
    ":<"  shift, and go to state 353
    ">:"  shift, and go to state 354

    type_query_op  go to state 355


State 348

   33 mod_typeclass_stmt: tid tpattern_seq ":-" "<" tid class_spec ">" "{" • type_query_exp_sl "}"

    "<TypeId>"  shift, and go to state 10
    "Fn"        shift, and go to state 27
    "("         shift, and go to state 160

    tid                go to state 40
    mod_prefix         go to state 161
    type_query_exp_sl  go to state 356
    type_query_exp     go to state 346
    type_spec          go to state 347
    primary_type_spec  go to state 72
    paren_type_spec    go to state 73
    tuple_type_spec    go to state 74
    mod_prefix_tid     go to state 75
    fn_type_spec       go to state 76
    postfix_type_spec  go to state 77
    tcall_type_spec    go to state 78
    unary_type_spec    go to state 79


State 349

   32 mod_typeclass_stmt: tid ":-" "<" tid class_spec ">" "{" type_query_exp_sl "}" •

    $default  reduce using rule 32 (mod_typeclass_stmt)


State 350

   58 type_query_exp_sl: type_query_exp_sl type_query_exp • ";"

    ";"  shift, and go to state 357


State 351

   57 type_query_exp_sl: type_query_exp ";" •

    $default  reduce using rule 57 (type_query_exp_sl)


State 352

  142 type_query_op: "::" •

    $default  reduce using rule 142 (type_query_op)


State 353

  140 type_query_op: ":<" •

    $default  reduce using rule 140 (type_query_op)


State 354

  141 type_query_op: ">:" •

    $default  reduce using rule 141 (type_query_op)


State 355

  139 type_query_exp: type_spec type_query_op • long_type_spec

    "<TypeId>"  shift, and go to state 10
    "Fn"        shift, and go to state 27
    "("         shift, and go to state 160
    "{"         shift, and go to state 267

    tid                go to state 40
    mod_prefix         go to state 161
    primary_type_spec  go to state 72
    paren_type_spec    go to state 73
    tuple_type_spec    go to state 74
    mod_prefix_tid     go to state 75
    fn_type_spec       go to state 76
    postfix_type_spec  go to state 77
    tcall_type_spec    go to state 78
    unary_type_spec    go to state 268
    long_type_spec     go to state 358
    struct_type_spec   go to state 270


State 356

   33 mod_typeclass_stmt: tid tpattern_seq ":-" "<" tid class_spec ">" "{" type_query_exp_sl • "}"
   58 type_query_exp_sl: type_query_exp_sl • type_query_exp ";"

    "<TypeId>"  shift, and go to state 10
    "Fn"        shift, and go to state 27
    "("         shift, and go to state 160
    "}"         shift, and go to state 359

    tid                go to state 40
    mod_prefix         go to state 161
    type_query_exp     go to state 350
    type_spec          go to state 347
    primary_type_spec  go to state 72
    paren_type_spec    go to state 73
    tuple_type_spec    go to state 74
    mod_prefix_tid     go to state 75
    fn_type_spec       go to state 76
    postfix_type_spec  go to state 77
    tcall_type_spec    go to state 78
    unary_type_spec    go to state 79


State 357

   58 type_query_exp_sl: type_query_exp_sl type_query_exp ";" •

    $default  reduce using rule 58 (type_query_exp_sl)


State 358

  139 type_query_exp: type_spec type_query_op long_type_spec •

    $default  reduce using rule 139 (type_query_exp)


State 359

   33 mod_typeclass_stmt: tid tpattern_seq ":-" "<" tid class_spec ">" "{" type_query_exp_sl "}" •

    $default  reduce using rule 33 (mod_typeclass_stmt)
