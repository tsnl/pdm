Terminals unused in grammar

    "<__42__>"
    "using"
    "match"
    "with"
    "lambda"
    "typeclass"
    "&"
    "EOS"
    "<null>"


Grammar

    0 $accept: script $end

    1 script: script_head script_body

    2 script_head: %empty
    3            | script_head script_head_stmt ";"

    4 script_head_stmt: import_stmt
    5                 | extern_stmt

    6 script_body: %empty
    7            | script_body script_body_stmt ";"

    8 script_body_stmt: top_mod_stmt

    9 top_mod_stmt: "module" "<TypeId>" "{" mod_content "}"

   10 sub_mod_stmt: "sub" "<TypeId>" "{" mod_content "}"
   11             | "sub" "<TypeId>" tpattern_seq "{" mod_content "}"

   12 mod_content: mod_content_stmt ";"
   13            | mod_content mod_content_stmt ";"

   14 mod_content_stmt: mod_val_stmt
   15                 | mod_type_stmt
   16                 | mod_enum_stmt
   17                 | mod_typeclass_stmt
   18                 | sub_mod_stmt

   19 mod_val_stmt: vid "=" expr
   20             | vid tpattern_seq "=" expr
   21             | vid type_spec "from" tid stringl
   22             | vid tpattern_seq type_spec "from" tid stringl

   23 mod_type_stmt: tid "=" long_type_spec
   24              | tid tpattern_seq "=" long_type_spec

   25 mod_enum_stmt: tid enum_field_pl
   26              | tid tpattern_seq enum_field_pl

   27 enum_field_pl: "|" unprefixed_enum_field_pl

   28 unprefixed_enum_field_pl: enum_field
   29                         | unprefixed_enum_field_pl "|" enum_field

   30 enum_field: tid
   31           | tid "(" ")"
   32           | tid "(" type_spec_cl1 ")"

   33 mod_typeclass_stmt: tid ":-" "<" tid class_spec ">" "{" type_query_exp_sl "}"
   34                   | tid tpattern_seq ":-" "<" tid class_spec ">" "{" type_query_exp_sl "}"

   35 import_stmt: "import" tid "from" stringl "type" stringl

   36 extern_stmt: "extern" tid "from" expr

   37 chain_prefix_stmt: const_stmt
   38                  | val_stmt
   39                  | var_stmt
   40                  | set_stmt
   41                  | discard_stmt

   42 const_stmt: "const" lpattern "=" expr

   43 val_stmt: "val" lpattern "=" expr

   44 var_stmt: "var" lpattern "=" expr

   45 set_stmt: "set" expr "=" expr

   46 discard_stmt: "discard" expr

   47 tid: "<TypeId>"

   48 vid: "<val_id>"

   49 floatl: "4.2"

   50 stringl: "'sq-string-literal'"
   51        | "\"dq-string-literal\""

   52 mod_prefix: tid ":"
   53           | mod_prefix vid ":"

   54 expr: binary_exp

   55 long_exp: expr

   56 expr_cl0: %empty
   57         | expr_cl0 "," expr

   58 expr_cl2: expr "," expr
   59         | expr_cl2 "," expr

   60 type_query_exp_sl: type_query_exp ";"
   61                  | type_query_exp_sl type_query_exp ";"

   62 bracketed_exp: unit_exp
   63              | paren_exp
   64              | vtupleExpr
   65              | vstructExpr
   66              | chain_exp

   67 unit_exp: "(" ")"
   68         | "{" "}"

   69 paren_exp: "(" long_exp ")"

   70 vtupleExpr: "(" expr "," ")"
   71           | "(" expr_cl2 ")"

   72 vstructExpr: "{" struct_exp_field_cl "}"

   73 primary_exp: bracketed_exp
   74            | vid
   75            | int_expr
   76            | floatl
   77            | stringls
   78            | if_exp
   79            | lambda_exp

   80 int_expr: "42"
   81         | "0x2a"
   82         | "42u"
   83         | "0x2Au"

   84 stringls: "'sq-string-literal'"
   85         | "\"dq-string-literal\""
   86         | stringls "'sq-string-literal'"
   87         | stringls "\"dq-string-literal\""

   88 if_exp: "if" bracketed_exp "then" bracketed_exp
   89       | "if" bracketed_exp "then" bracketed_exp "else" primary_exp

   90 chain_exp: "{" expr "}"
   91          | "{" chain_prefix "}"
   92          | "{" chain_prefix expr "}"

   93 chain_prefix: chain_prefix_stmt ";"
   94             | chain_prefix chain_prefix_stmt ";"

   95 lambda_exp: "fn" vpattern bracketed_exp
   96           | "fn" vpattern "->" type_spec bracketed_exp

   97 postfix_exp: primary_exp
   98            | tcall_exp
   99            | vcall_exp
  100            | dot_name_exp
  101            | dot_index_exp

  102 tcall_exp: postfix_exp "[" targ_cl "]"

  103 vcall_exp: postfix_exp "(" ")"
  104          | postfix_exp "(" varg_cl ")"

  105 dot_name_exp: postfix_exp "." "<val_id>"
  106             | postfix_exp "." "<TypeId>" "(" expr_cl0 ")"
  107             | mod_prefix "<val_id>"

  108 dot_index_exp: postfix_exp "." int_expr
  109              | postfix_exp "." bracketed_exp

  110 unary_exp: postfix_exp
  111          | unary_op unary_exp

  112 unary_op: "+"
  113         | "-"
  114         | "*"
  115         | "^"
  116         | "not"

  117 binary_exp: or_binary_exp

  118 mul_binary_op: "*"
  119              | "/"
  120              | "%"

  121 mul_binary_exp: unary_exp
  122               | mul_binary_exp mul_binary_op unary_exp

  123 add_binary_op: "+"
  124              | "-"

  125 add_binary_exp: mul_binary_exp
  126               | add_binary_exp add_binary_op mul_binary_exp

  127 cmp_binary_op: "<"
  128              | "<="
  129              | ">"
  130              | ">="

  131 cmp_binary_exp: add_binary_exp
  132               | cmp_binary_exp cmp_binary_op add_binary_exp

  133 eq_binary_op: "=="
  134             | "!="

  135 eq_binary_exp: cmp_binary_exp
  136              | eq_binary_exp eq_binary_op cmp_binary_exp

  137 and_binary_exp: eq_binary_exp
  138               | and_binary_exp "and" eq_binary_exp

  139 xor_binary_exp: and_binary_exp
  140               | xor_binary_exp "xor" and_binary_exp

  141 or_binary_exp: xor_binary_exp
  142              | or_binary_exp "or" xor_binary_exp

  143 type_query_exp: type_spec type_query_op long_type_spec

  144 type_query_op: ":<"
  145              | ">:"
  146              | "::"

  147 type_spec: unary_type_spec

  148 type_spec_cl1: type_spec
  149              | type_spec_cl1 "," type_spec

  150 type_spec_cl2: type_spec "," type_spec
  151              | type_spec_cl2 "," type_spec

  152 struct_type_spec_field: vid type_spec

  153 struct_type_spec_field_cl: struct_type_spec_field
  154                          | struct_type_spec_field_cl "," struct_type_spec_field

  155 primary_type_spec: tid
  156                  | paren_type_spec
  157                  | tuple_type_spec
  158                  | mod_prefix_tid
  159                  | fn_type_spec

  160 paren_type_spec: "(" type_spec ")"

  161 tuple_type_spec: "(" type_spec "," ")"
  162                | "(" type_spec_cl2 ")"

  163 mod_prefix_tid: mod_prefix tid

  164 fn_type_spec: "Fn" vpattern primary_type_spec

  165 postfix_type_spec: primary_type_spec
  166                  | tcall_type_spec

  167 tcall_type_spec: postfix_type_spec "[" targ_cl "]"

  168 unary_type_spec: postfix_type_spec

  169 long_type_spec: unary_type_spec
  170               | struct_type_spec

  171 struct_type_spec: "{" struct_type_spec_field_cl "}"

  172 targ: type_spec
  173     | expr

  174 targ_cl: targ
  175        | targ_cl "," targ

  176 varg: expr
  177     | "out" expr
  178     | "inout" expr

  179 varg_cl: varg
  180        | varg_cl "," varg

  181 class_spec: postfix_class_spec

  182 primary_class_spec: tid

  183 postfix_class_spec: primary_class_spec
  184                   | postfix_class_spec "[" targ_cl "]"

  185 struct_exp_field: vid "=" expr

  186 vpattern_field: vid type_spec
  187               | "out" vid type_spec
  188               | "inout" vid type_spec

  189 lpattern_field: vid type_spec
  190               | vid

  191 tpattern_field: vid type_spec
  192               | tid class_spec

  193 destructured_lpattern: "(" lpattern_field_cl ")"

  194 lpattern: lpattern_field
  195         | destructured_lpattern

  196 vpattern: "(" vpattern_field_cl ")"
  197         | "(" ")"

  198 tpattern: "[" tpattern_field_cl "]"
  199         | "!" "[" tpattern_field_cl "]"

  200 vpattern_field_cl: vpattern_field
  201                  | vpattern_field_cl "," vpattern_field

  202 lpattern_field_cl: lpattern_field
  203                  | lpattern_field_cl "," lpattern_field

  204 tpattern_field_cl: tpattern_field
  205                  | tpattern_field_cl "," tpattern_field

  206 struct_exp_field_cl: struct_exp_field
  207                    | struct_exp_field_cl "," struct_exp_field

  208 tpattern_seq: tpattern
  209             | tpattern_seq tpattern


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    "<val_id>" <TokenInfo> (258) 48 105 107
    "<TypeId>" <TokenInfo> (259) 9 10 11 47 106
    "<__42__>" <TokenInfo> (260)
    "using" (261)
    "module" (262) 9
    "sub" (263) 10 11
    "if" (264) 88 89
    "then" (265) 88 89
    "else" (266) 89
    "match" (267)
    "with" (268)
    "import" (269) 35
    "extern" (270) 36
    "from" (271) 21 22 35 36
    "const" (272) 42
    "val" (273) 43
    "var" (274) 44
    "set" (275) 45
    "fn" (276) 95 96
    "lambda" (277)
    "Fn" (278) 164
    "type" (279) 35
    "and" (280) 138
    "xor" (281) 140
    "or" (282) 142
    "not" (283) 116
    "typeclass" (284)
    "out" (285) 177 187
    "inout" (286) 178 188
    "discard" (287) 46
    "42" <TokenInfo> (288) 80
    "0x2a" <TokenInfo> (289) 81
    "42u" <TokenInfo> (290) 82
    "0x2Au" <TokenInfo> (291) 83
    "4.2" <TokenInfo> (292) 49
    "\"dq-string-literal\"" <TokenInfo> (293) 51 85 87
    "'sq-string-literal'" <TokenInfo> (294) 50 84 86
    "." (295) 105 106 108 109
    ":" (296) 52 53
    "," (297) 57 58 59 70 149 150 151 154 161 175 180 201 203 205 207
    ";" (298) 3 7 12 13 60 61 93 94
    "::" (299) 146
    "(" (300) 31 32 67 69 70 71 103 104 106 160 161 162 193 196 197
    ")" (301) 31 32 67 69 70 71 103 104 106 160 161 162 193 196 197
    "[" (302) 102 167 184 198 199
    "]" (303) 102 167 184 198 199
    "{" (304) 9 10 11 33 34 68 72 90 91 92 171
    "}" (305) 9 10 11 33 34 68 72 90 91 92 171
    "->" (306) 96
    "*" (307) 114 118
    "/" (308) 119
    "%" (309) 120
    "+" (310) 112 123
    "-" (311) 113 124
    "<" (312) 33 34 127
    "<=" (313) 128
    ">" (314) 33 34 129
    ">=" (315) 130
    "=" (316) 19 20 23 24 42 43 44 45 185
    "==" (317) 133
    "!=" (318) 134
    "^" (319) 115
    "&" (320)
    "!" (321) 199
    "|" (322) 27 29
    ":-" (323) 33 34
    "EOS" (324)
    ":<" (325) 144
    ">:" (326) 145
    "<null>" (327)


Nonterminals, with rules where they appear

    $accept (73)
        on left: 0
    script <pdm::ast::Script*> (74)
        on left: 1
        on right: 0
    script_head <std::vector<pdm::ast::Stmt*>> (75)
        on left: 2 3
        on right: 1 3
    script_head_stmt <pdm::ast::Stmt*> (76)
        on left: 4 5
        on right: 3
    script_body <std::vector<pdm::ast::ModStmt*>> (77)
        on left: 6 7
        on right: 1 7
    script_body_stmt <pdm::ast::ModStmt*> (78)
        on left: 8
        on right: 7
    top_mod_stmt <pdm::ast::ModStmt*> (79)
        on left: 9
        on right: 8
    sub_mod_stmt <pdm::ast::ModContentStmt*> (80)
        on left: 10 11
        on right: 18
    mod_content <std::vector<pdm::ast::ModContentStmt*>> (81)
        on left: 12 13
        on right: 9 10 11 13
    mod_content_stmt <pdm::ast::ModContentStmt*> (82)
        on left: 14 15 16 17 18
        on right: 12 13
    mod_val_stmt <pdm::ast::ModContentStmt*> (83)
        on left: 19 20 21 22
        on right: 14
    mod_type_stmt <pdm::ast::ModContentStmt*> (84)
        on left: 23 24
        on right: 15
    mod_enum_stmt <pdm::ast::ModContentStmt*> (85)
        on left: 25 26
        on right: 16
    enum_field_pl <std::vector<pdm::ast::ModEnumStmt::Field*>> (86)
        on left: 27
        on right: 25 26
    unprefixed_enum_field_pl <std::vector<pdm::ast::ModEnumStmt::Field*>> (87)
        on left: 28 29
        on right: 27 29
    enum_field <pdm::ast::ModEnumStmt::Field*> (88)
        on left: 30 31 32
        on right: 28 29
    mod_typeclass_stmt <pdm::ast::ModContentStmt*> (89)
        on left: 33 34
        on right: 17
    import_stmt <pdm::ast::Stmt*> (90)
        on left: 35
        on right: 4
    extern_stmt <pdm::ast::Stmt*> (91)
        on left: 36
        on right: 5
    chain_prefix_stmt <pdm::ast::Stmt*> (92)
        on left: 37 38 39 40 41
        on right: 93 94
    const_stmt <pdm::ast::Stmt*> (93)
        on left: 42
        on right: 37
    val_stmt <pdm::ast::Stmt*> (94)
        on left: 43
        on right: 38
    var_stmt <pdm::ast::Stmt*> (95)
        on left: 44
        on right: 39
    set_stmt <pdm::ast::Stmt*> (96)
        on left: 45
        on right: 40
    discard_stmt <pdm::ast::Stmt*> (97)
        on left: 46
        on right: 41
    tid <TokenInfo> (98)
        on left: 47
        on right: 21 22 23 24 25 26 30 31 32 33 34 35 36 52 155 163 182 192
    vid <TokenInfo> (99)
        on left: 48
        on right: 19 20 21 22 53 74 152 185 186 187 188 189 190 191
    floatl <TokenInfo> (100)
        on left: 49
        on right: 76
    stringl <TokenInfo> (101)
        on left: 50 51
        on right: 21 22 35
    mod_prefix <std::vector<pdm::intern::String>> (102)
        on left: 52 53
        on right: 53 107 163
    expr <pdm::ast::Exp*> (103)
        on left: 54
        on right: 19 20 36 42 43 44 45 46 55 57 58 59 70 90 92 173 176 177 178 185
    long_exp <pdm::ast::Exp*> (104)
        on left: 55
        on right: 69
    expr_cl0 <std::vector<pdm::ast::Exp*>> (105)
        on left: 56 57
        on right: 57 106
    expr_cl2 <std::vector<pdm::ast::Exp*>> (106)
        on left: 58 59
        on right: 59 71
    type_query_exp_sl <std::vector<pdm::ast::TypeQueryExp*>> (107)
        on left: 60 61
        on right: 33 34 61
    bracketed_exp <pdm::ast::Exp*> (108)
        on left: 62 63 64 65 66
        on right: 73 88 89 95 96 109
    unit_exp <pdm::ast::Exp*> (109)
        on left: 67 68
        on right: 62
    paren_exp <pdm::ast::Exp*> (110)
        on left: 69
        on right: 63
    vtupleExpr <pdm::ast::Exp*> (111)
        on left: 70 71
        on right: 64
    vstructExpr <pdm::ast::Exp*> (112)
        on left: 72
        on right: 65
    primary_exp <pdm::ast::Exp*> (113)
        on left: 73 74 75 76 77 78 79
        on right: 89 97
    int_expr <pdm::ast::Exp*> (114)
        on left: 80 81 82 83
        on right: 75 108
    stringls <std::vector<pdm::ast::StringExp::Piece>> (115)
        on left: 84 85 86 87
        on right: 77 86 87
    if_exp <pdm::ast::Exp*> (116)
        on left: 88 89
        on right: 78
    chain_exp <pdm::ast::Exp*> (117)
        on left: 90 91 92
        on right: 66
    chain_prefix <std::vector<pdm::ast::Stmt*>> (118)
        on left: 93 94
        on right: 91 92 94
    lambda_exp <pdm::ast::Exp*> (119)
        on left: 95 96
        on right: 79
    postfix_exp <pdm::ast::Exp*> (120)
        on left: 97 98 99 100 101
        on right: 102 103 104 105 106 108 109 110
    tcall_exp <pdm::ast::Exp*> (121)
        on left: 102
        on right: 98
    vcall_exp <pdm::ast::Exp*> (122)
        on left: 103 104
        on right: 99
    dot_name_exp <pdm::ast::Exp*> (123)
        on left: 105 106 107
        on right: 100
    dot_index_exp <pdm::ast::Exp*> (124)
        on left: 108 109
        on right: 101
    unary_exp <pdm::ast::Exp*> (125)
        on left: 110 111
        on right: 111 121 122
    unary_op <pdm::ast::UnaryOperator> (126)
        on left: 112 113 114 115 116
        on right: 111
    binary_exp <pdm::ast::Exp*> (127)
        on left: 117
        on right: 54
    mul_binary_op <pdm::ast::BinaryOperator> (128)
        on left: 118 119 120
        on right: 122
    mul_binary_exp <pdm::ast::Exp*> (129)
        on left: 121 122
        on right: 122 125 126
    add_binary_op <pdm::ast::BinaryOperator> (130)
        on left: 123 124
        on right: 126
    add_binary_exp <pdm::ast::Exp*> (131)
        on left: 125 126
        on right: 126 131 132
    cmp_binary_op <pdm::ast::BinaryOperator> (132)
        on left: 127 128 129 130
        on right: 132
    cmp_binary_exp <pdm::ast::Exp*> (133)
        on left: 131 132
        on right: 132 135 136
    eq_binary_op <pdm::ast::BinaryOperator> (134)
        on left: 133 134
        on right: 136
    eq_binary_exp <pdm::ast::Exp*> (135)
        on left: 135 136
        on right: 136 137 138
    and_binary_exp <pdm::ast::Exp*> (136)
        on left: 137 138
        on right: 138 139 140
    xor_binary_exp <pdm::ast::Exp*> (137)
        on left: 139 140
        on right: 140 141 142
    or_binary_exp <pdm::ast::Exp*> (138)
        on left: 141 142
        on right: 117 142
    type_query_exp <pdm::ast::TypeQueryExp*> (139)
        on left: 143
        on right: 60 61
    type_query_op <pdm::ast::TypeQueryKind> (140)
        on left: 144 145 146
        on right: 143
    type_spec <pdm::ast::TypeSpec*> (141)
        on left: 147
        on right: 21 22 96 143 148 149 150 151 152 160 161 172 186 187 188 189 191
    type_spec_cl1 <std::vector<pdm::ast::TypeSpec*>> (142)
        on left: 148 149
        on right: 32 149
    type_spec_cl2 <std::vector<pdm::ast::TypeSpec*>> (143)
        on left: 150 151
        on right: 151 162
    struct_type_spec_field <pdm::ast::StructTypeSpec::Field*> (144)
        on left: 152
        on right: 153 154
    struct_type_spec_field_cl <std::vector<pdm::ast::StructTypeSpec::Field*>> (145)
        on left: 153 154
        on right: 154 171
    primary_type_spec <pdm::ast::TypeSpec*> (146)
        on left: 155 156 157 158 159
        on right: 164 165
    paren_type_spec <pdm::ast::TypeSpec*> (147)
        on left: 160
        on right: 156
    tuple_type_spec <pdm::ast::TypeSpec*> (148)
        on left: 161 162
        on right: 157
    mod_prefix_tid <pdm::ast::TypeSpec*> (149)
        on left: 163
        on right: 158
    fn_type_spec <pdm::ast::TypeSpec*> (150)
        on left: 164
        on right: 159
    postfix_type_spec <pdm::ast::TypeSpec*> (151)
        on left: 165 166
        on right: 167 168
    tcall_type_spec <pdm::ast::TypeSpec*> (152)
        on left: 167
        on right: 166
    unary_type_spec <pdm::ast::TypeSpec*> (153)
        on left: 168
        on right: 147 169
    long_type_spec <pdm::ast::TypeSpec*> (154)
        on left: 169 170
        on right: 23 24 143
    struct_type_spec <pdm::ast::TypeSpec*> (155)
        on left: 171
        on right: 170
    targ <pdm::ast::TArg*> (156)
        on left: 172 173
        on right: 174 175
    targ_cl <std::vector<pdm::ast::TArg*>> (157)
        on left: 174 175
        on right: 102 167 175 184
    varg <pdm::ast::VArg*> (158)
        on left: 176 177 178
        on right: 179 180
    varg_cl <std::vector<pdm::ast::VArg*>> (159)
        on left: 179 180
        on right: 104 180
    class_spec <pdm::ast::ClassSpec*> (160)
        on left: 181
        on right: 33 34 192
    primary_class_spec <pdm::ast::ClassSpec*> (161)
        on left: 182
        on right: 183
    postfix_class_spec <pdm::ast::ClassSpec*> (162)
        on left: 183 184
        on right: 181 184
    struct_exp_field <pdm::ast::StructExp::Field*> (163)
        on left: 185
        on right: 206 207
    vpattern_field <pdm::ast::VPattern::Field*> (164)
        on left: 186 187 188
        on right: 200 201
    lpattern_field <pdm::ast::LPattern::Field*> (165)
        on left: 189 190
        on right: 194 202 203
    tpattern_field <pdm::ast::TPattern::Field*> (166)
        on left: 191 192
        on right: 204 205
    destructured_lpattern <pdm::ast::LPattern*> (167)
        on left: 193
        on right: 195
    lpattern <pdm::ast::LPattern*> (168)
        on left: 194 195
        on right: 42 43 44
    vpattern <pdm::ast::VPattern*> (169)
        on left: 196 197
        on right: 95 96 164
    tpattern <pdm::ast::TPattern*> (170)
        on left: 198 199
        on right: 208 209
    vpattern_field_cl <std::vector<pdm::ast::VPattern::Field*>> (171)
        on left: 200 201
        on right: 196 201
    lpattern_field_cl <std::vector<pdm::ast::LPattern::Field*>> (172)
        on left: 202 203
        on right: 193 203
    tpattern_field_cl <std::vector<pdm::ast::TPattern::Field*>> (173)
        on left: 204 205
        on right: 198 199 205
    struct_exp_field_cl <std::vector<pdm::ast::StructExp::Field*>> (174)
        on left: 206 207
        on right: 72 207
    tpattern_seq <std::vector<pdm::ast::TPattern*>> (175)
        on left: 208 209
        on right: 11 20 22 24 26 34 209


State 0

    0 $accept: • script $end

    $default  reduce using rule 2 (script_head)

    script       go to state 1
    script_head  go to state 2


State 1

    0 $accept: script • $end

    $end  shift, and go to state 3


State 2

    1 script: script_head • script_body
    3 script_head: script_head • script_head_stmt ";"

    "import"  shift, and go to state 4
    "extern"  shift, and go to state 5

    $default  reduce using rule 6 (script_body)

    script_head_stmt  go to state 6
    script_body       go to state 7
    import_stmt       go to state 8
    extern_stmt       go to state 9


State 3

    0 $accept: script $end •

    $default  accept


State 4

   35 import_stmt: "import" • tid "from" stringl "type" stringl

    "<TypeId>"  shift, and go to state 10

    tid  go to state 11


State 5

   36 extern_stmt: "extern" • tid "from" expr

    "<TypeId>"  shift, and go to state 10

    tid  go to state 12


State 6

    3 script_head: script_head script_head_stmt • ";"

    ";"  shift, and go to state 13


State 7

    1 script: script_head script_body •
    7 script_body: script_body • script_body_stmt ";"

    "module"  shift, and go to state 14

    $default  reduce using rule 1 (script)

    script_body_stmt  go to state 15
    top_mod_stmt      go to state 16


State 8

    4 script_head_stmt: import_stmt •

    $default  reduce using rule 4 (script_head_stmt)


State 9

    5 script_head_stmt: extern_stmt •

    $default  reduce using rule 5 (script_head_stmt)


State 10

   47 tid: "<TypeId>" •

    $default  reduce using rule 47 (tid)


State 11

   35 import_stmt: "import" tid • "from" stringl "type" stringl

    "from"  shift, and go to state 17


State 12

   36 extern_stmt: "extern" tid • "from" expr

    "from"  shift, and go to state 18


State 13

    3 script_head: script_head script_head_stmt ";" •

    $default  reduce using rule 3 (script_head)


State 14

    9 top_mod_stmt: "module" • "<TypeId>" "{" mod_content "}"

    "<TypeId>"  shift, and go to state 19


State 15

    7 script_body: script_body script_body_stmt • ";"

    ";"  shift, and go to state 20


State 16

    8 script_body_stmt: top_mod_stmt •

    $default  reduce using rule 8 (script_body_stmt)


State 17

   35 import_stmt: "import" tid "from" • stringl "type" stringl

    "\"dq-string-literal\""  shift, and go to state 21
    "'sq-string-literal'"    shift, and go to state 22

    stringl  go to state 23


State 18

   36 extern_stmt: "extern" tid "from" • expr

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "not"                    shift, and go to state 27
    "42"                     shift, and go to state 28
    "0x2a"                   shift, and go to state 29
    "42u"                    shift, and go to state 30
    "0x2Au"                  shift, and go to state 31
    "4.2"                    shift, and go to state 32
    "\"dq-string-literal\""  shift, and go to state 33
    "'sq-string-literal'"    shift, and go to state 34
    "("                      shift, and go to state 35
    "{"                      shift, and go to state 36
    "*"                      shift, and go to state 37
    "+"                      shift, and go to state 38
    "-"                      shift, and go to state 39
    "^"                      shift, and go to state 40

    tid             go to state 41
    vid             go to state 42
    floatl          go to state 43
    mod_prefix      go to state 44
    expr            go to state 45
    bracketed_exp   go to state 46
    unit_exp        go to state 47
    paren_exp       go to state 48
    vtupleExpr      go to state 49
    vstructExpr     go to state 50
    primary_exp     go to state 51
    int_expr        go to state 52
    stringls        go to state 53
    if_exp          go to state 54
    chain_exp       go to state 55
    lambda_exp      go to state 56
    postfix_exp     go to state 57
    tcall_exp       go to state 58
    vcall_exp       go to state 59
    dot_name_exp    go to state 60
    dot_index_exp   go to state 61
    unary_exp       go to state 62
    unary_op        go to state 63
    binary_exp      go to state 64
    mul_binary_exp  go to state 65
    add_binary_exp  go to state 66
    cmp_binary_exp  go to state 67
    eq_binary_exp   go to state 68
    and_binary_exp  go to state 69
    xor_binary_exp  go to state 70
    or_binary_exp   go to state 71


State 19

    9 top_mod_stmt: "module" "<TypeId>" • "{" mod_content "}"

    "{"  shift, and go to state 72


State 20

    7 script_body: script_body script_body_stmt ";" •

    $default  reduce using rule 7 (script_body)


State 21

   51 stringl: "\"dq-string-literal\"" •

    $default  reduce using rule 51 (stringl)


State 22

   50 stringl: "'sq-string-literal'" •

    $default  reduce using rule 50 (stringl)


State 23

   35 import_stmt: "import" tid "from" stringl • "type" stringl

    "type"  shift, and go to state 73


State 24

   48 vid: "<val_id>" •

    $default  reduce using rule 48 (vid)


State 25

   88 if_exp: "if" • bracketed_exp "then" bracketed_exp
   89       | "if" • bracketed_exp "then" bracketed_exp "else" primary_exp

    "("  shift, and go to state 35
    "{"  shift, and go to state 36

    bracketed_exp  go to state 74
    unit_exp       go to state 47
    paren_exp      go to state 48
    vtupleExpr     go to state 49
    vstructExpr    go to state 50
    chain_exp      go to state 55


State 26

   95 lambda_exp: "fn" • vpattern bracketed_exp
   96           | "fn" • vpattern "->" type_spec bracketed_exp

    "("  shift, and go to state 75

    vpattern  go to state 76


State 27

  116 unary_op: "not" •

    $default  reduce using rule 116 (unary_op)


State 28

   80 int_expr: "42" •

    $default  reduce using rule 80 (int_expr)


State 29

   81 int_expr: "0x2a" •

    $default  reduce using rule 81 (int_expr)


State 30

   82 int_expr: "42u" •

    $default  reduce using rule 82 (int_expr)


State 31

   83 int_expr: "0x2Au" •

    $default  reduce using rule 83 (int_expr)


State 32

   49 floatl: "4.2" •

    $default  reduce using rule 49 (floatl)


State 33

   85 stringls: "\"dq-string-literal\"" •

    $default  reduce using rule 85 (stringls)


State 34

   84 stringls: "'sq-string-literal'" •

    $default  reduce using rule 84 (stringls)


State 35

   67 unit_exp: "(" • ")"
   69 paren_exp: "(" • long_exp ")"
   70 vtupleExpr: "(" • expr "," ")"
   71           | "(" • expr_cl2 ")"

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "not"                    shift, and go to state 27
    "42"                     shift, and go to state 28
    "0x2a"                   shift, and go to state 29
    "42u"                    shift, and go to state 30
    "0x2Au"                  shift, and go to state 31
    "4.2"                    shift, and go to state 32
    "\"dq-string-literal\""  shift, and go to state 33
    "'sq-string-literal'"    shift, and go to state 34
    "("                      shift, and go to state 35
    ")"                      shift, and go to state 77
    "{"                      shift, and go to state 36
    "*"                      shift, and go to state 37
    "+"                      shift, and go to state 38
    "-"                      shift, and go to state 39
    "^"                      shift, and go to state 40

    tid             go to state 41
    vid             go to state 42
    floatl          go to state 43
    mod_prefix      go to state 44
    expr            go to state 78
    long_exp        go to state 79
    expr_cl2        go to state 80
    bracketed_exp   go to state 46
    unit_exp        go to state 47
    paren_exp       go to state 48
    vtupleExpr      go to state 49
    vstructExpr     go to state 50
    primary_exp     go to state 51
    int_expr        go to state 52
    stringls        go to state 53
    if_exp          go to state 54
    chain_exp       go to state 55
    lambda_exp      go to state 56
    postfix_exp     go to state 57
    tcall_exp       go to state 58
    vcall_exp       go to state 59
    dot_name_exp    go to state 60
    dot_index_exp   go to state 61
    unary_exp       go to state 62
    unary_op        go to state 63
    binary_exp      go to state 64
    mul_binary_exp  go to state 65
    add_binary_exp  go to state 66
    cmp_binary_exp  go to state 67
    eq_binary_exp   go to state 68
    and_binary_exp  go to state 69
    xor_binary_exp  go to state 70
    or_binary_exp   go to state 71


State 36

   68 unit_exp: "{" • "}"
   72 vstructExpr: "{" • struct_exp_field_cl "}"
   90 chain_exp: "{" • expr "}"
   91          | "{" • chain_prefix "}"
   92          | "{" • chain_prefix expr "}"

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "const"                  shift, and go to state 81
    "val"                    shift, and go to state 82
    "var"                    shift, and go to state 83
    "set"                    shift, and go to state 84
    "fn"                     shift, and go to state 26
    "not"                    shift, and go to state 27
    "discard"                shift, and go to state 85
    "42"                     shift, and go to state 28
    "0x2a"                   shift, and go to state 29
    "42u"                    shift, and go to state 30
    "0x2Au"                  shift, and go to state 31
    "4.2"                    shift, and go to state 32
    "\"dq-string-literal\""  shift, and go to state 33
    "'sq-string-literal'"    shift, and go to state 34
    "("                      shift, and go to state 35
    "{"                      shift, and go to state 36
    "}"                      shift, and go to state 86
    "*"                      shift, and go to state 37
    "+"                      shift, and go to state 38
    "-"                      shift, and go to state 39
    "^"                      shift, and go to state 40

    chain_prefix_stmt    go to state 87
    const_stmt           go to state 88
    val_stmt             go to state 89
    var_stmt             go to state 90
    set_stmt             go to state 91
    discard_stmt         go to state 92
    tid                  go to state 41
    vid                  go to state 93
    floatl               go to state 43
    mod_prefix           go to state 44
    expr                 go to state 94
    bracketed_exp        go to state 46
    unit_exp             go to state 47
    paren_exp            go to state 48
    vtupleExpr           go to state 49
    vstructExpr          go to state 50
    primary_exp          go to state 51
    int_expr             go to state 52
    stringls             go to state 53
    if_exp               go to state 54
    chain_exp            go to state 55
    chain_prefix         go to state 95
    lambda_exp           go to state 56
    postfix_exp          go to state 57
    tcall_exp            go to state 58
    vcall_exp            go to state 59
    dot_name_exp         go to state 60
    dot_index_exp        go to state 61
    unary_exp            go to state 62
    unary_op             go to state 63
    binary_exp           go to state 64
    mul_binary_exp       go to state 65
    add_binary_exp       go to state 66
    cmp_binary_exp       go to state 67
    eq_binary_exp        go to state 68
    and_binary_exp       go to state 69
    xor_binary_exp       go to state 70
    or_binary_exp        go to state 71
    struct_exp_field     go to state 96
    struct_exp_field_cl  go to state 97


State 37

  114 unary_op: "*" •

    $default  reduce using rule 114 (unary_op)


State 38

  112 unary_op: "+" •

    $default  reduce using rule 112 (unary_op)


State 39

  113 unary_op: "-" •

    $default  reduce using rule 113 (unary_op)


State 40

  115 unary_op: "^" •

    $default  reduce using rule 115 (unary_op)


State 41

   52 mod_prefix: tid • ":"

    ":"  shift, and go to state 98


State 42

   74 primary_exp: vid •

    $default  reduce using rule 74 (primary_exp)


State 43

   76 primary_exp: floatl •

    $default  reduce using rule 76 (primary_exp)


State 44

   53 mod_prefix: mod_prefix • vid ":"
  107 dot_name_exp: mod_prefix • "<val_id>"

    "<val_id>"  shift, and go to state 99

    vid  go to state 100


State 45

   36 extern_stmt: "extern" tid "from" expr •

    $default  reduce using rule 36 (extern_stmt)


State 46

   73 primary_exp: bracketed_exp •

    $default  reduce using rule 73 (primary_exp)


State 47

   62 bracketed_exp: unit_exp •

    $default  reduce using rule 62 (bracketed_exp)


State 48

   63 bracketed_exp: paren_exp •

    $default  reduce using rule 63 (bracketed_exp)


State 49

   64 bracketed_exp: vtupleExpr •

    $default  reduce using rule 64 (bracketed_exp)


State 50

   65 bracketed_exp: vstructExpr •

    $default  reduce using rule 65 (bracketed_exp)


State 51

   97 postfix_exp: primary_exp •

    $default  reduce using rule 97 (postfix_exp)


State 52

   75 primary_exp: int_expr •

    $default  reduce using rule 75 (primary_exp)


State 53

   77 primary_exp: stringls •
   86 stringls: stringls • "'sq-string-literal'"
   87         | stringls • "\"dq-string-literal\""

    "\"dq-string-literal\""  shift, and go to state 101
    "'sq-string-literal'"    shift, and go to state 102

    $default  reduce using rule 77 (primary_exp)


State 54

   78 primary_exp: if_exp •

    $default  reduce using rule 78 (primary_exp)


State 55

   66 bracketed_exp: chain_exp •

    $default  reduce using rule 66 (bracketed_exp)


State 56

   79 primary_exp: lambda_exp •

    $default  reduce using rule 79 (primary_exp)


State 57

  102 tcall_exp: postfix_exp • "[" targ_cl "]"
  103 vcall_exp: postfix_exp • "(" ")"
  104          | postfix_exp • "(" varg_cl ")"
  105 dot_name_exp: postfix_exp • "." "<val_id>"
  106             | postfix_exp • "." "<TypeId>" "(" expr_cl0 ")"
  108 dot_index_exp: postfix_exp • "." int_expr
  109              | postfix_exp • "." bracketed_exp
  110 unary_exp: postfix_exp •

    "."  shift, and go to state 103
    "("  shift, and go to state 104
    "["  shift, and go to state 105

    $default  reduce using rule 110 (unary_exp)


State 58

   98 postfix_exp: tcall_exp •

    $default  reduce using rule 98 (postfix_exp)


State 59

   99 postfix_exp: vcall_exp •

    $default  reduce using rule 99 (postfix_exp)


State 60

  100 postfix_exp: dot_name_exp •

    $default  reduce using rule 100 (postfix_exp)


State 61

  101 postfix_exp: dot_index_exp •

    $default  reduce using rule 101 (postfix_exp)


State 62

  121 mul_binary_exp: unary_exp •

    $default  reduce using rule 121 (mul_binary_exp)


State 63

  111 unary_exp: unary_op • unary_exp

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "not"                    shift, and go to state 27
    "42"                     shift, and go to state 28
    "0x2a"                   shift, and go to state 29
    "42u"                    shift, and go to state 30
    "0x2Au"                  shift, and go to state 31
    "4.2"                    shift, and go to state 32
    "\"dq-string-literal\""  shift, and go to state 33
    "'sq-string-literal'"    shift, and go to state 34
    "("                      shift, and go to state 35
    "{"                      shift, and go to state 36
    "*"                      shift, and go to state 37
    "+"                      shift, and go to state 38
    "-"                      shift, and go to state 39
    "^"                      shift, and go to state 40

    tid            go to state 41
    vid            go to state 42
    floatl         go to state 43
    mod_prefix     go to state 44
    bracketed_exp  go to state 46
    unit_exp       go to state 47
    paren_exp      go to state 48
    vtupleExpr     go to state 49
    vstructExpr    go to state 50
    primary_exp    go to state 51
    int_expr       go to state 52
    stringls       go to state 53
    if_exp         go to state 54
    chain_exp      go to state 55
    lambda_exp     go to state 56
    postfix_exp    go to state 57
    tcall_exp      go to state 58
    vcall_exp      go to state 59
    dot_name_exp   go to state 60
    dot_index_exp  go to state 61
    unary_exp      go to state 106
    unary_op       go to state 63


State 64

   54 expr: binary_exp •

    $default  reduce using rule 54 (expr)


State 65

  122 mul_binary_exp: mul_binary_exp • mul_binary_op unary_exp
  125 add_binary_exp: mul_binary_exp •

    "*"  shift, and go to state 107
    "/"  shift, and go to state 108
    "%"  shift, and go to state 109

    $default  reduce using rule 125 (add_binary_exp)

    mul_binary_op  go to state 110


State 66

  126 add_binary_exp: add_binary_exp • add_binary_op mul_binary_exp
  131 cmp_binary_exp: add_binary_exp •

    "+"  shift, and go to state 111
    "-"  shift, and go to state 112

    $default  reduce using rule 131 (cmp_binary_exp)

    add_binary_op  go to state 113


State 67

  132 cmp_binary_exp: cmp_binary_exp • cmp_binary_op add_binary_exp
  135 eq_binary_exp: cmp_binary_exp •

    "<"   shift, and go to state 114
    "<="  shift, and go to state 115
    ">"   shift, and go to state 116
    ">="  shift, and go to state 117

    $default  reduce using rule 135 (eq_binary_exp)

    cmp_binary_op  go to state 118


State 68

  136 eq_binary_exp: eq_binary_exp • eq_binary_op cmp_binary_exp
  137 and_binary_exp: eq_binary_exp •

    "=="  shift, and go to state 119
    "!="  shift, and go to state 120

    $default  reduce using rule 137 (and_binary_exp)

    eq_binary_op  go to state 121


State 69

  138 and_binary_exp: and_binary_exp • "and" eq_binary_exp
  139 xor_binary_exp: and_binary_exp •

    "and"  shift, and go to state 122

    $default  reduce using rule 139 (xor_binary_exp)


State 70

  140 xor_binary_exp: xor_binary_exp • "xor" and_binary_exp
  141 or_binary_exp: xor_binary_exp •

    "xor"  shift, and go to state 123

    $default  reduce using rule 141 (or_binary_exp)


State 71

  117 binary_exp: or_binary_exp •
  142 or_binary_exp: or_binary_exp • "or" xor_binary_exp

    "or"  shift, and go to state 124

    $default  reduce using rule 117 (binary_exp)


State 72

    9 top_mod_stmt: "module" "<TypeId>" "{" • mod_content "}"

    "<val_id>"  shift, and go to state 24
    "<TypeId>"  shift, and go to state 10
    "sub"       shift, and go to state 125

    sub_mod_stmt        go to state 126
    mod_content         go to state 127
    mod_content_stmt    go to state 128
    mod_val_stmt        go to state 129
    mod_type_stmt       go to state 130
    mod_enum_stmt       go to state 131
    mod_typeclass_stmt  go to state 132
    tid                 go to state 133
    vid                 go to state 134


State 73

   35 import_stmt: "import" tid "from" stringl "type" • stringl

    "\"dq-string-literal\""  shift, and go to state 21
    "'sq-string-literal'"    shift, and go to state 22

    stringl  go to state 135


State 74

   88 if_exp: "if" bracketed_exp • "then" bracketed_exp
   89       | "if" bracketed_exp • "then" bracketed_exp "else" primary_exp

    "then"  shift, and go to state 136


State 75

  196 vpattern: "(" • vpattern_field_cl ")"
  197         | "(" • ")"

    "<val_id>"  shift, and go to state 24
    "out"       shift, and go to state 137
    "inout"     shift, and go to state 138
    ")"         shift, and go to state 139

    vid                go to state 140
    vpattern_field     go to state 141
    vpattern_field_cl  go to state 142


State 76

   95 lambda_exp: "fn" vpattern • bracketed_exp
   96           | "fn" vpattern • "->" type_spec bracketed_exp

    "("   shift, and go to state 35
    "{"   shift, and go to state 36
    "->"  shift, and go to state 143

    bracketed_exp  go to state 144
    unit_exp       go to state 47
    paren_exp      go to state 48
    vtupleExpr     go to state 49
    vstructExpr    go to state 50
    chain_exp      go to state 55


State 77

   67 unit_exp: "(" ")" •

    $default  reduce using rule 67 (unit_exp)


State 78

   55 long_exp: expr •
   58 expr_cl2: expr • "," expr
   70 vtupleExpr: "(" expr • "," ")"

    ","  shift, and go to state 145

    $default  reduce using rule 55 (long_exp)


State 79

   69 paren_exp: "(" long_exp • ")"

    ")"  shift, and go to state 146


State 80

   59 expr_cl2: expr_cl2 • "," expr
   71 vtupleExpr: "(" expr_cl2 • ")"

    ","  shift, and go to state 147
    ")"  shift, and go to state 148


State 81

   42 const_stmt: "const" • lpattern "=" expr

    "<val_id>"  shift, and go to state 24
    "("         shift, and go to state 149

    vid                    go to state 150
    lpattern_field         go to state 151
    destructured_lpattern  go to state 152
    lpattern               go to state 153


State 82

   43 val_stmt: "val" • lpattern "=" expr

    "<val_id>"  shift, and go to state 24
    "("         shift, and go to state 149

    vid                    go to state 150
    lpattern_field         go to state 151
    destructured_lpattern  go to state 152
    lpattern               go to state 154


State 83

   44 var_stmt: "var" • lpattern "=" expr

    "<val_id>"  shift, and go to state 24
    "("         shift, and go to state 149

    vid                    go to state 150
    lpattern_field         go to state 151
    destructured_lpattern  go to state 152
    lpattern               go to state 155


State 84

   45 set_stmt: "set" • expr "=" expr

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "not"                    shift, and go to state 27
    "42"                     shift, and go to state 28
    "0x2a"                   shift, and go to state 29
    "42u"                    shift, and go to state 30
    "0x2Au"                  shift, and go to state 31
    "4.2"                    shift, and go to state 32
    "\"dq-string-literal\""  shift, and go to state 33
    "'sq-string-literal'"    shift, and go to state 34
    "("                      shift, and go to state 35
    "{"                      shift, and go to state 36
    "*"                      shift, and go to state 37
    "+"                      shift, and go to state 38
    "-"                      shift, and go to state 39
    "^"                      shift, and go to state 40

    tid             go to state 41
    vid             go to state 42
    floatl          go to state 43
    mod_prefix      go to state 44
    expr            go to state 156
    bracketed_exp   go to state 46
    unit_exp        go to state 47
    paren_exp       go to state 48
    vtupleExpr      go to state 49
    vstructExpr     go to state 50
    primary_exp     go to state 51
    int_expr        go to state 52
    stringls        go to state 53
    if_exp          go to state 54
    chain_exp       go to state 55
    lambda_exp      go to state 56
    postfix_exp     go to state 57
    tcall_exp       go to state 58
    vcall_exp       go to state 59
    dot_name_exp    go to state 60
    dot_index_exp   go to state 61
    unary_exp       go to state 62
    unary_op        go to state 63
    binary_exp      go to state 64
    mul_binary_exp  go to state 65
    add_binary_exp  go to state 66
    cmp_binary_exp  go to state 67
    eq_binary_exp   go to state 68
    and_binary_exp  go to state 69
    xor_binary_exp  go to state 70
    or_binary_exp   go to state 71


State 85

   46 discard_stmt: "discard" • expr

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "not"                    shift, and go to state 27
    "42"                     shift, and go to state 28
    "0x2a"                   shift, and go to state 29
    "42u"                    shift, and go to state 30
    "0x2Au"                  shift, and go to state 31
    "4.2"                    shift, and go to state 32
    "\"dq-string-literal\""  shift, and go to state 33
    "'sq-string-literal'"    shift, and go to state 34
    "("                      shift, and go to state 35
    "{"                      shift, and go to state 36
    "*"                      shift, and go to state 37
    "+"                      shift, and go to state 38
    "-"                      shift, and go to state 39
    "^"                      shift, and go to state 40

    tid             go to state 41
    vid             go to state 42
    floatl          go to state 43
    mod_prefix      go to state 44
    expr            go to state 157
    bracketed_exp   go to state 46
    unit_exp        go to state 47
    paren_exp       go to state 48
    vtupleExpr      go to state 49
    vstructExpr     go to state 50
    primary_exp     go to state 51
    int_expr        go to state 52
    stringls        go to state 53
    if_exp          go to state 54
    chain_exp       go to state 55
    lambda_exp      go to state 56
    postfix_exp     go to state 57
    tcall_exp       go to state 58
    vcall_exp       go to state 59
    dot_name_exp    go to state 60
    dot_index_exp   go to state 61
    unary_exp       go to state 62
    unary_op        go to state 63
    binary_exp      go to state 64
    mul_binary_exp  go to state 65
    add_binary_exp  go to state 66
    cmp_binary_exp  go to state 67
    eq_binary_exp   go to state 68
    and_binary_exp  go to state 69
    xor_binary_exp  go to state 70
    or_binary_exp   go to state 71


State 86

   68 unit_exp: "{" "}" •

    $default  reduce using rule 68 (unit_exp)


State 87

   93 chain_prefix: chain_prefix_stmt • ";"

    ";"  shift, and go to state 158


State 88

   37 chain_prefix_stmt: const_stmt •

    $default  reduce using rule 37 (chain_prefix_stmt)


State 89

   38 chain_prefix_stmt: val_stmt •

    $default  reduce using rule 38 (chain_prefix_stmt)


State 90

   39 chain_prefix_stmt: var_stmt •

    $default  reduce using rule 39 (chain_prefix_stmt)


State 91

   40 chain_prefix_stmt: set_stmt •

    $default  reduce using rule 40 (chain_prefix_stmt)


State 92

   41 chain_prefix_stmt: discard_stmt •

    $default  reduce using rule 41 (chain_prefix_stmt)


State 93

   74 primary_exp: vid •
  185 struct_exp_field: vid • "=" expr

    "="  shift, and go to state 159

    $default  reduce using rule 74 (primary_exp)


State 94

   90 chain_exp: "{" expr • "}"

    "}"  shift, and go to state 160


State 95

   91 chain_exp: "{" chain_prefix • "}"
   92          | "{" chain_prefix • expr "}"
   94 chain_prefix: chain_prefix • chain_prefix_stmt ";"

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "const"                  shift, and go to state 81
    "val"                    shift, and go to state 82
    "var"                    shift, and go to state 83
    "set"                    shift, and go to state 84
    "fn"                     shift, and go to state 26
    "not"                    shift, and go to state 27
    "discard"                shift, and go to state 85
    "42"                     shift, and go to state 28
    "0x2a"                   shift, and go to state 29
    "42u"                    shift, and go to state 30
    "0x2Au"                  shift, and go to state 31
    "4.2"                    shift, and go to state 32
    "\"dq-string-literal\""  shift, and go to state 33
    "'sq-string-literal'"    shift, and go to state 34
    "("                      shift, and go to state 35
    "{"                      shift, and go to state 36
    "}"                      shift, and go to state 161
    "*"                      shift, and go to state 37
    "+"                      shift, and go to state 38
    "-"                      shift, and go to state 39
    "^"                      shift, and go to state 40

    chain_prefix_stmt  go to state 162
    const_stmt         go to state 88
    val_stmt           go to state 89
    var_stmt           go to state 90
    set_stmt           go to state 91
    discard_stmt       go to state 92
    tid                go to state 41
    vid                go to state 42
    floatl             go to state 43
    mod_prefix         go to state 44
    expr               go to state 163
    bracketed_exp      go to state 46
    unit_exp           go to state 47
    paren_exp          go to state 48
    vtupleExpr         go to state 49
    vstructExpr        go to state 50
    primary_exp        go to state 51
    int_expr           go to state 52
    stringls           go to state 53
    if_exp             go to state 54
    chain_exp          go to state 55
    lambda_exp         go to state 56
    postfix_exp        go to state 57
    tcall_exp          go to state 58
    vcall_exp          go to state 59
    dot_name_exp       go to state 60
    dot_index_exp      go to state 61
    unary_exp          go to state 62
    unary_op           go to state 63
    binary_exp         go to state 64
    mul_binary_exp     go to state 65
    add_binary_exp     go to state 66
    cmp_binary_exp     go to state 67
    eq_binary_exp      go to state 68
    and_binary_exp     go to state 69
    xor_binary_exp     go to state 70
    or_binary_exp      go to state 71


State 96

  206 struct_exp_field_cl: struct_exp_field •

    $default  reduce using rule 206 (struct_exp_field_cl)


State 97

   72 vstructExpr: "{" struct_exp_field_cl • "}"
  207 struct_exp_field_cl: struct_exp_field_cl • "," struct_exp_field

    ","  shift, and go to state 164
    "}"  shift, and go to state 165


State 98

   52 mod_prefix: tid ":" •

    $default  reduce using rule 52 (mod_prefix)


State 99

   48 vid: "<val_id>" •
  107 dot_name_exp: mod_prefix "<val_id>" •

    ":"       reduce using rule 48 (vid)
    $default  reduce using rule 107 (dot_name_exp)


State 100

   53 mod_prefix: mod_prefix vid • ":"

    ":"  shift, and go to state 166


State 101

   87 stringls: stringls "\"dq-string-literal\"" •

    $default  reduce using rule 87 (stringls)


State 102

   86 stringls: stringls "'sq-string-literal'" •

    $default  reduce using rule 86 (stringls)


State 103

  105 dot_name_exp: postfix_exp "." • "<val_id>"
  106             | postfix_exp "." • "<TypeId>" "(" expr_cl0 ")"
  108 dot_index_exp: postfix_exp "." • int_expr
  109              | postfix_exp "." • bracketed_exp

    "<val_id>"  shift, and go to state 167
    "<TypeId>"  shift, and go to state 168
    "42"        shift, and go to state 28
    "0x2a"      shift, and go to state 29
    "42u"       shift, and go to state 30
    "0x2Au"     shift, and go to state 31
    "("         shift, and go to state 35
    "{"         shift, and go to state 36

    bracketed_exp  go to state 169
    unit_exp       go to state 47
    paren_exp      go to state 48
    vtupleExpr     go to state 49
    vstructExpr    go to state 50
    int_expr       go to state 170
    chain_exp      go to state 55


State 104

  103 vcall_exp: postfix_exp "(" • ")"
  104          | postfix_exp "(" • varg_cl ")"

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "not"                    shift, and go to state 27
    "out"                    shift, and go to state 171
    "inout"                  shift, and go to state 172
    "42"                     shift, and go to state 28
    "0x2a"                   shift, and go to state 29
    "42u"                    shift, and go to state 30
    "0x2Au"                  shift, and go to state 31
    "4.2"                    shift, and go to state 32
    "\"dq-string-literal\""  shift, and go to state 33
    "'sq-string-literal'"    shift, and go to state 34
    "("                      shift, and go to state 35
    ")"                      shift, and go to state 173
    "{"                      shift, and go to state 36
    "*"                      shift, and go to state 37
    "+"                      shift, and go to state 38
    "-"                      shift, and go to state 39
    "^"                      shift, and go to state 40

    tid             go to state 41
    vid             go to state 42
    floatl          go to state 43
    mod_prefix      go to state 44
    expr            go to state 174
    bracketed_exp   go to state 46
    unit_exp        go to state 47
    paren_exp       go to state 48
    vtupleExpr      go to state 49
    vstructExpr     go to state 50
    primary_exp     go to state 51
    int_expr        go to state 52
    stringls        go to state 53
    if_exp          go to state 54
    chain_exp       go to state 55
    lambda_exp      go to state 56
    postfix_exp     go to state 57
    tcall_exp       go to state 58
    vcall_exp       go to state 59
    dot_name_exp    go to state 60
    dot_index_exp   go to state 61
    unary_exp       go to state 62
    unary_op        go to state 63
    binary_exp      go to state 64
    mul_binary_exp  go to state 65
    add_binary_exp  go to state 66
    cmp_binary_exp  go to state 67
    eq_binary_exp   go to state 68
    and_binary_exp  go to state 69
    xor_binary_exp  go to state 70
    or_binary_exp   go to state 71
    varg            go to state 175
    varg_cl         go to state 176


State 105

  102 tcall_exp: postfix_exp "[" • targ_cl "]"

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "Fn"                     shift, and go to state 177
    "not"                    shift, and go to state 27
    "42"                     shift, and go to state 28
    "0x2a"                   shift, and go to state 29
    "42u"                    shift, and go to state 30
    "0x2Au"                  shift, and go to state 31
    "4.2"                    shift, and go to state 32
    "\"dq-string-literal\""  shift, and go to state 33
    "'sq-string-literal'"    shift, and go to state 34
    "("                      shift, and go to state 178
    "{"                      shift, and go to state 36
    "*"                      shift, and go to state 37
    "+"                      shift, and go to state 38
    "-"                      shift, and go to state 39
    "^"                      shift, and go to state 40

    tid                go to state 179
    vid                go to state 42
    floatl             go to state 43
    mod_prefix         go to state 180
    expr               go to state 181
    bracketed_exp      go to state 46
    unit_exp           go to state 47
    paren_exp          go to state 48
    vtupleExpr         go to state 49
    vstructExpr        go to state 50
    primary_exp        go to state 51
    int_expr           go to state 52
    stringls           go to state 53
    if_exp             go to state 54
    chain_exp          go to state 55
    lambda_exp         go to state 56
    postfix_exp        go to state 57
    tcall_exp          go to state 58
    vcall_exp          go to state 59
    dot_name_exp       go to state 60
    dot_index_exp      go to state 61
    unary_exp          go to state 62
    unary_op           go to state 63
    binary_exp         go to state 64
    mul_binary_exp     go to state 65
    add_binary_exp     go to state 66
    cmp_binary_exp     go to state 67
    eq_binary_exp      go to state 68
    and_binary_exp     go to state 69
    xor_binary_exp     go to state 70
    or_binary_exp      go to state 71
    type_spec          go to state 182
    primary_type_spec  go to state 183
    paren_type_spec    go to state 184
    tuple_type_spec    go to state 185
    mod_prefix_tid     go to state 186
    fn_type_spec       go to state 187
    postfix_type_spec  go to state 188
    tcall_type_spec    go to state 189
    unary_type_spec    go to state 190
    targ               go to state 191
    targ_cl            go to state 192


State 106

  111 unary_exp: unary_op unary_exp •

    $default  reduce using rule 111 (unary_exp)


State 107

  118 mul_binary_op: "*" •

    $default  reduce using rule 118 (mul_binary_op)


State 108

  119 mul_binary_op: "/" •

    $default  reduce using rule 119 (mul_binary_op)


State 109

  120 mul_binary_op: "%" •

    $default  reduce using rule 120 (mul_binary_op)


State 110

  122 mul_binary_exp: mul_binary_exp mul_binary_op • unary_exp

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "not"                    shift, and go to state 27
    "42"                     shift, and go to state 28
    "0x2a"                   shift, and go to state 29
    "42u"                    shift, and go to state 30
    "0x2Au"                  shift, and go to state 31
    "4.2"                    shift, and go to state 32
    "\"dq-string-literal\""  shift, and go to state 33
    "'sq-string-literal'"    shift, and go to state 34
    "("                      shift, and go to state 35
    "{"                      shift, and go to state 36
    "*"                      shift, and go to state 37
    "+"                      shift, and go to state 38
    "-"                      shift, and go to state 39
    "^"                      shift, and go to state 40

    tid            go to state 41
    vid            go to state 42
    floatl         go to state 43
    mod_prefix     go to state 44
    bracketed_exp  go to state 46
    unit_exp       go to state 47
    paren_exp      go to state 48
    vtupleExpr     go to state 49
    vstructExpr    go to state 50
    primary_exp    go to state 51
    int_expr       go to state 52
    stringls       go to state 53
    if_exp         go to state 54
    chain_exp      go to state 55
    lambda_exp     go to state 56
    postfix_exp    go to state 57
    tcall_exp      go to state 58
    vcall_exp      go to state 59
    dot_name_exp   go to state 60
    dot_index_exp  go to state 61
    unary_exp      go to state 193
    unary_op       go to state 63


State 111

  123 add_binary_op: "+" •

    $default  reduce using rule 123 (add_binary_op)


State 112

  124 add_binary_op: "-" •

    $default  reduce using rule 124 (add_binary_op)


State 113

  126 add_binary_exp: add_binary_exp add_binary_op • mul_binary_exp

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "not"                    shift, and go to state 27
    "42"                     shift, and go to state 28
    "0x2a"                   shift, and go to state 29
    "42u"                    shift, and go to state 30
    "0x2Au"                  shift, and go to state 31
    "4.2"                    shift, and go to state 32
    "\"dq-string-literal\""  shift, and go to state 33
    "'sq-string-literal'"    shift, and go to state 34
    "("                      shift, and go to state 35
    "{"                      shift, and go to state 36
    "*"                      shift, and go to state 37
    "+"                      shift, and go to state 38
    "-"                      shift, and go to state 39
    "^"                      shift, and go to state 40

    tid             go to state 41
    vid             go to state 42
    floatl          go to state 43
    mod_prefix      go to state 44
    bracketed_exp   go to state 46
    unit_exp        go to state 47
    paren_exp       go to state 48
    vtupleExpr      go to state 49
    vstructExpr     go to state 50
    primary_exp     go to state 51
    int_expr        go to state 52
    stringls        go to state 53
    if_exp          go to state 54
    chain_exp       go to state 55
    lambda_exp      go to state 56
    postfix_exp     go to state 57
    tcall_exp       go to state 58
    vcall_exp       go to state 59
    dot_name_exp    go to state 60
    dot_index_exp   go to state 61
    unary_exp       go to state 62
    unary_op        go to state 63
    mul_binary_exp  go to state 194


State 114

  127 cmp_binary_op: "<" •

    $default  reduce using rule 127 (cmp_binary_op)


State 115

  128 cmp_binary_op: "<=" •

    $default  reduce using rule 128 (cmp_binary_op)


State 116

  129 cmp_binary_op: ">" •

    $default  reduce using rule 129 (cmp_binary_op)


State 117

  130 cmp_binary_op: ">=" •

    $default  reduce using rule 130 (cmp_binary_op)


State 118

  132 cmp_binary_exp: cmp_binary_exp cmp_binary_op • add_binary_exp

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "not"                    shift, and go to state 27
    "42"                     shift, and go to state 28
    "0x2a"                   shift, and go to state 29
    "42u"                    shift, and go to state 30
    "0x2Au"                  shift, and go to state 31
    "4.2"                    shift, and go to state 32
    "\"dq-string-literal\""  shift, and go to state 33
    "'sq-string-literal'"    shift, and go to state 34
    "("                      shift, and go to state 35
    "{"                      shift, and go to state 36
    "*"                      shift, and go to state 37
    "+"                      shift, and go to state 38
    "-"                      shift, and go to state 39
    "^"                      shift, and go to state 40

    tid             go to state 41
    vid             go to state 42
    floatl          go to state 43
    mod_prefix      go to state 44
    bracketed_exp   go to state 46
    unit_exp        go to state 47
    paren_exp       go to state 48
    vtupleExpr      go to state 49
    vstructExpr     go to state 50
    primary_exp     go to state 51
    int_expr        go to state 52
    stringls        go to state 53
    if_exp          go to state 54
    chain_exp       go to state 55
    lambda_exp      go to state 56
    postfix_exp     go to state 57
    tcall_exp       go to state 58
    vcall_exp       go to state 59
    dot_name_exp    go to state 60
    dot_index_exp   go to state 61
    unary_exp       go to state 62
    unary_op        go to state 63
    mul_binary_exp  go to state 65
    add_binary_exp  go to state 195


State 119

  133 eq_binary_op: "==" •

    $default  reduce using rule 133 (eq_binary_op)


State 120

  134 eq_binary_op: "!=" •

    $default  reduce using rule 134 (eq_binary_op)


State 121

  136 eq_binary_exp: eq_binary_exp eq_binary_op • cmp_binary_exp

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "not"                    shift, and go to state 27
    "42"                     shift, and go to state 28
    "0x2a"                   shift, and go to state 29
    "42u"                    shift, and go to state 30
    "0x2Au"                  shift, and go to state 31
    "4.2"                    shift, and go to state 32
    "\"dq-string-literal\""  shift, and go to state 33
    "'sq-string-literal'"    shift, and go to state 34
    "("                      shift, and go to state 35
    "{"                      shift, and go to state 36
    "*"                      shift, and go to state 37
    "+"                      shift, and go to state 38
    "-"                      shift, and go to state 39
    "^"                      shift, and go to state 40

    tid             go to state 41
    vid             go to state 42
    floatl          go to state 43
    mod_prefix      go to state 44
    bracketed_exp   go to state 46
    unit_exp        go to state 47
    paren_exp       go to state 48
    vtupleExpr      go to state 49
    vstructExpr     go to state 50
    primary_exp     go to state 51
    int_expr        go to state 52
    stringls        go to state 53
    if_exp          go to state 54
    chain_exp       go to state 55
    lambda_exp      go to state 56
    postfix_exp     go to state 57
    tcall_exp       go to state 58
    vcall_exp       go to state 59
    dot_name_exp    go to state 60
    dot_index_exp   go to state 61
    unary_exp       go to state 62
    unary_op        go to state 63
    mul_binary_exp  go to state 65
    add_binary_exp  go to state 66
    cmp_binary_exp  go to state 196


State 122

  138 and_binary_exp: and_binary_exp "and" • eq_binary_exp

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "not"                    shift, and go to state 27
    "42"                     shift, and go to state 28
    "0x2a"                   shift, and go to state 29
    "42u"                    shift, and go to state 30
    "0x2Au"                  shift, and go to state 31
    "4.2"                    shift, and go to state 32
    "\"dq-string-literal\""  shift, and go to state 33
    "'sq-string-literal'"    shift, and go to state 34
    "("                      shift, and go to state 35
    "{"                      shift, and go to state 36
    "*"                      shift, and go to state 37
    "+"                      shift, and go to state 38
    "-"                      shift, and go to state 39
    "^"                      shift, and go to state 40

    tid             go to state 41
    vid             go to state 42
    floatl          go to state 43
    mod_prefix      go to state 44
    bracketed_exp   go to state 46
    unit_exp        go to state 47
    paren_exp       go to state 48
    vtupleExpr      go to state 49
    vstructExpr     go to state 50
    primary_exp     go to state 51
    int_expr        go to state 52
    stringls        go to state 53
    if_exp          go to state 54
    chain_exp       go to state 55
    lambda_exp      go to state 56
    postfix_exp     go to state 57
    tcall_exp       go to state 58
    vcall_exp       go to state 59
    dot_name_exp    go to state 60
    dot_index_exp   go to state 61
    unary_exp       go to state 62
    unary_op        go to state 63
    mul_binary_exp  go to state 65
    add_binary_exp  go to state 66
    cmp_binary_exp  go to state 67
    eq_binary_exp   go to state 197


State 123

  140 xor_binary_exp: xor_binary_exp "xor" • and_binary_exp

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "not"                    shift, and go to state 27
    "42"                     shift, and go to state 28
    "0x2a"                   shift, and go to state 29
    "42u"                    shift, and go to state 30
    "0x2Au"                  shift, and go to state 31
    "4.2"                    shift, and go to state 32
    "\"dq-string-literal\""  shift, and go to state 33
    "'sq-string-literal'"    shift, and go to state 34
    "("                      shift, and go to state 35
    "{"                      shift, and go to state 36
    "*"                      shift, and go to state 37
    "+"                      shift, and go to state 38
    "-"                      shift, and go to state 39
    "^"                      shift, and go to state 40

    tid             go to state 41
    vid             go to state 42
    floatl          go to state 43
    mod_prefix      go to state 44
    bracketed_exp   go to state 46
    unit_exp        go to state 47
    paren_exp       go to state 48
    vtupleExpr      go to state 49
    vstructExpr     go to state 50
    primary_exp     go to state 51
    int_expr        go to state 52
    stringls        go to state 53
    if_exp          go to state 54
    chain_exp       go to state 55
    lambda_exp      go to state 56
    postfix_exp     go to state 57
    tcall_exp       go to state 58
    vcall_exp       go to state 59
    dot_name_exp    go to state 60
    dot_index_exp   go to state 61
    unary_exp       go to state 62
    unary_op        go to state 63
    mul_binary_exp  go to state 65
    add_binary_exp  go to state 66
    cmp_binary_exp  go to state 67
    eq_binary_exp   go to state 68
    and_binary_exp  go to state 198


State 124

  142 or_binary_exp: or_binary_exp "or" • xor_binary_exp

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "not"                    shift, and go to state 27
    "42"                     shift, and go to state 28
    "0x2a"                   shift, and go to state 29
    "42u"                    shift, and go to state 30
    "0x2Au"                  shift, and go to state 31
    "4.2"                    shift, and go to state 32
    "\"dq-string-literal\""  shift, and go to state 33
    "'sq-string-literal'"    shift, and go to state 34
    "("                      shift, and go to state 35
    "{"                      shift, and go to state 36
    "*"                      shift, and go to state 37
    "+"                      shift, and go to state 38
    "-"                      shift, and go to state 39
    "^"                      shift, and go to state 40

    tid             go to state 41
    vid             go to state 42
    floatl          go to state 43
    mod_prefix      go to state 44
    bracketed_exp   go to state 46
    unit_exp        go to state 47
    paren_exp       go to state 48
    vtupleExpr      go to state 49
    vstructExpr     go to state 50
    primary_exp     go to state 51
    int_expr        go to state 52
    stringls        go to state 53
    if_exp          go to state 54
    chain_exp       go to state 55
    lambda_exp      go to state 56
    postfix_exp     go to state 57
    tcall_exp       go to state 58
    vcall_exp       go to state 59
    dot_name_exp    go to state 60
    dot_index_exp   go to state 61
    unary_exp       go to state 62
    unary_op        go to state 63
    mul_binary_exp  go to state 65
    add_binary_exp  go to state 66
    cmp_binary_exp  go to state 67
    eq_binary_exp   go to state 68
    and_binary_exp  go to state 69
    xor_binary_exp  go to state 199


State 125

   10 sub_mod_stmt: "sub" • "<TypeId>" "{" mod_content "}"
   11             | "sub" • "<TypeId>" tpattern_seq "{" mod_content "}"

    "<TypeId>"  shift, and go to state 200


State 126

   18 mod_content_stmt: sub_mod_stmt •

    $default  reduce using rule 18 (mod_content_stmt)


State 127

    9 top_mod_stmt: "module" "<TypeId>" "{" mod_content • "}"
   13 mod_content: mod_content • mod_content_stmt ";"

    "<val_id>"  shift, and go to state 24
    "<TypeId>"  shift, and go to state 10
    "sub"       shift, and go to state 125
    "}"         shift, and go to state 201

    sub_mod_stmt        go to state 126
    mod_content_stmt    go to state 202
    mod_val_stmt        go to state 129
    mod_type_stmt       go to state 130
    mod_enum_stmt       go to state 131
    mod_typeclass_stmt  go to state 132
    tid                 go to state 133
    vid                 go to state 134


State 128

   12 mod_content: mod_content_stmt • ";"

    ";"  shift, and go to state 203


State 129

   14 mod_content_stmt: mod_val_stmt •

    $default  reduce using rule 14 (mod_content_stmt)


State 130

   15 mod_content_stmt: mod_type_stmt •

    $default  reduce using rule 15 (mod_content_stmt)


State 131

   16 mod_content_stmt: mod_enum_stmt •

    $default  reduce using rule 16 (mod_content_stmt)


State 132

   17 mod_content_stmt: mod_typeclass_stmt •

    $default  reduce using rule 17 (mod_content_stmt)


State 133

   23 mod_type_stmt: tid • "=" long_type_spec
   24              | tid • tpattern_seq "=" long_type_spec
   25 mod_enum_stmt: tid • enum_field_pl
   26              | tid • tpattern_seq enum_field_pl
   33 mod_typeclass_stmt: tid • ":-" "<" tid class_spec ">" "{" type_query_exp_sl "}"
   34                   | tid • tpattern_seq ":-" "<" tid class_spec ">" "{" type_query_exp_sl "}"

    "["   shift, and go to state 204
    "="   shift, and go to state 205
    "!"   shift, and go to state 206
    "|"   shift, and go to state 207
    ":-"  shift, and go to state 208

    enum_field_pl  go to state 209
    tpattern       go to state 210
    tpattern_seq   go to state 211


State 134

   19 mod_val_stmt: vid • "=" expr
   20             | vid • tpattern_seq "=" expr
   21             | vid • type_spec "from" tid stringl
   22             | vid • tpattern_seq type_spec "from" tid stringl

    "<TypeId>"  shift, and go to state 10
    "Fn"        shift, and go to state 177
    "("         shift, and go to state 212
    "["         shift, and go to state 204
    "="         shift, and go to state 213
    "!"         shift, and go to state 206

    tid                go to state 179
    mod_prefix         go to state 214
    type_spec          go to state 215
    primary_type_spec  go to state 183
    paren_type_spec    go to state 184
    tuple_type_spec    go to state 185
    mod_prefix_tid     go to state 186
    fn_type_spec       go to state 187
    postfix_type_spec  go to state 188
    tcall_type_spec    go to state 189
    unary_type_spec    go to state 190
    tpattern           go to state 210
    tpattern_seq       go to state 216


State 135

   35 import_stmt: "import" tid "from" stringl "type" stringl •

    $default  reduce using rule 35 (import_stmt)


State 136

   88 if_exp: "if" bracketed_exp "then" • bracketed_exp
   89       | "if" bracketed_exp "then" • bracketed_exp "else" primary_exp

    "("  shift, and go to state 35
    "{"  shift, and go to state 36

    bracketed_exp  go to state 217
    unit_exp       go to state 47
    paren_exp      go to state 48
    vtupleExpr     go to state 49
    vstructExpr    go to state 50
    chain_exp      go to state 55


State 137

  187 vpattern_field: "out" • vid type_spec

    "<val_id>"  shift, and go to state 24

    vid  go to state 218


State 138

  188 vpattern_field: "inout" • vid type_spec

    "<val_id>"  shift, and go to state 24

    vid  go to state 219


State 139

  197 vpattern: "(" ")" •

    $default  reduce using rule 197 (vpattern)


State 140

  186 vpattern_field: vid • type_spec

    "<TypeId>"  shift, and go to state 10
    "Fn"        shift, and go to state 177
    "("         shift, and go to state 212

    tid                go to state 179
    mod_prefix         go to state 214
    type_spec          go to state 220
    primary_type_spec  go to state 183
    paren_type_spec    go to state 184
    tuple_type_spec    go to state 185
    mod_prefix_tid     go to state 186
    fn_type_spec       go to state 187
    postfix_type_spec  go to state 188
    tcall_type_spec    go to state 189
    unary_type_spec    go to state 190


State 141

  200 vpattern_field_cl: vpattern_field •

    $default  reduce using rule 200 (vpattern_field_cl)


State 142

  196 vpattern: "(" vpattern_field_cl • ")"
  201 vpattern_field_cl: vpattern_field_cl • "," vpattern_field

    ","  shift, and go to state 221
    ")"  shift, and go to state 222


State 143

   96 lambda_exp: "fn" vpattern "->" • type_spec bracketed_exp

    "<TypeId>"  shift, and go to state 10
    "Fn"        shift, and go to state 177
    "("         shift, and go to state 212

    tid                go to state 179
    mod_prefix         go to state 214
    type_spec          go to state 223
    primary_type_spec  go to state 183
    paren_type_spec    go to state 184
    tuple_type_spec    go to state 185
    mod_prefix_tid     go to state 186
    fn_type_spec       go to state 187
    postfix_type_spec  go to state 188
    tcall_type_spec    go to state 189
    unary_type_spec    go to state 190


State 144

   95 lambda_exp: "fn" vpattern bracketed_exp •

    $default  reduce using rule 95 (lambda_exp)


State 145

   58 expr_cl2: expr "," • expr
   70 vtupleExpr: "(" expr "," • ")"

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "not"                    shift, and go to state 27
    "42"                     shift, and go to state 28
    "0x2a"                   shift, and go to state 29
    "42u"                    shift, and go to state 30
    "0x2Au"                  shift, and go to state 31
    "4.2"                    shift, and go to state 32
    "\"dq-string-literal\""  shift, and go to state 33
    "'sq-string-literal'"    shift, and go to state 34
    "("                      shift, and go to state 35
    ")"                      shift, and go to state 224
    "{"                      shift, and go to state 36
    "*"                      shift, and go to state 37
    "+"                      shift, and go to state 38
    "-"                      shift, and go to state 39
    "^"                      shift, and go to state 40

    tid             go to state 41
    vid             go to state 42
    floatl          go to state 43
    mod_prefix      go to state 44
    expr            go to state 225
    bracketed_exp   go to state 46
    unit_exp        go to state 47
    paren_exp       go to state 48
    vtupleExpr      go to state 49
    vstructExpr     go to state 50
    primary_exp     go to state 51
    int_expr        go to state 52
    stringls        go to state 53
    if_exp          go to state 54
    chain_exp       go to state 55
    lambda_exp      go to state 56
    postfix_exp     go to state 57
    tcall_exp       go to state 58
    vcall_exp       go to state 59
    dot_name_exp    go to state 60
    dot_index_exp   go to state 61
    unary_exp       go to state 62
    unary_op        go to state 63
    binary_exp      go to state 64
    mul_binary_exp  go to state 65
    add_binary_exp  go to state 66
    cmp_binary_exp  go to state 67
    eq_binary_exp   go to state 68
    and_binary_exp  go to state 69
    xor_binary_exp  go to state 70
    or_binary_exp   go to state 71


State 146

   69 paren_exp: "(" long_exp ")" •

    $default  reduce using rule 69 (paren_exp)


State 147

   59 expr_cl2: expr_cl2 "," • expr

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "not"                    shift, and go to state 27
    "42"                     shift, and go to state 28
    "0x2a"                   shift, and go to state 29
    "42u"                    shift, and go to state 30
    "0x2Au"                  shift, and go to state 31
    "4.2"                    shift, and go to state 32
    "\"dq-string-literal\""  shift, and go to state 33
    "'sq-string-literal'"    shift, and go to state 34
    "("                      shift, and go to state 35
    "{"                      shift, and go to state 36
    "*"                      shift, and go to state 37
    "+"                      shift, and go to state 38
    "-"                      shift, and go to state 39
    "^"                      shift, and go to state 40

    tid             go to state 41
    vid             go to state 42
    floatl          go to state 43
    mod_prefix      go to state 44
    expr            go to state 226
    bracketed_exp   go to state 46
    unit_exp        go to state 47
    paren_exp       go to state 48
    vtupleExpr      go to state 49
    vstructExpr     go to state 50
    primary_exp     go to state 51
    int_expr        go to state 52
    stringls        go to state 53
    if_exp          go to state 54
    chain_exp       go to state 55
    lambda_exp      go to state 56
    postfix_exp     go to state 57
    tcall_exp       go to state 58
    vcall_exp       go to state 59
    dot_name_exp    go to state 60
    dot_index_exp   go to state 61
    unary_exp       go to state 62
    unary_op        go to state 63
    binary_exp      go to state 64
    mul_binary_exp  go to state 65
    add_binary_exp  go to state 66
    cmp_binary_exp  go to state 67
    eq_binary_exp   go to state 68
    and_binary_exp  go to state 69
    xor_binary_exp  go to state 70
    or_binary_exp   go to state 71


State 148

   71 vtupleExpr: "(" expr_cl2 ")" •

    $default  reduce using rule 71 (vtupleExpr)


State 149

  193 destructured_lpattern: "(" • lpattern_field_cl ")"

    "<val_id>"  shift, and go to state 24

    vid                go to state 150
    lpattern_field     go to state 227
    lpattern_field_cl  go to state 228


State 150

  189 lpattern_field: vid • type_spec
  190               | vid •

    "<TypeId>"  shift, and go to state 10
    "Fn"        shift, and go to state 177
    "("         shift, and go to state 212

    $default  reduce using rule 190 (lpattern_field)

    tid                go to state 179
    mod_prefix         go to state 214
    type_spec          go to state 229
    primary_type_spec  go to state 183
    paren_type_spec    go to state 184
    tuple_type_spec    go to state 185
    mod_prefix_tid     go to state 186
    fn_type_spec       go to state 187
    postfix_type_spec  go to state 188
    tcall_type_spec    go to state 189
    unary_type_spec    go to state 190


State 151

  194 lpattern: lpattern_field •

    $default  reduce using rule 194 (lpattern)


State 152

  195 lpattern: destructured_lpattern •

    $default  reduce using rule 195 (lpattern)


State 153

   42 const_stmt: "const" lpattern • "=" expr

    "="  shift, and go to state 230


State 154

   43 val_stmt: "val" lpattern • "=" expr

    "="  shift, and go to state 231


State 155

   44 var_stmt: "var" lpattern • "=" expr

    "="  shift, and go to state 232


State 156

   45 set_stmt: "set" expr • "=" expr

    "="  shift, and go to state 233


State 157

   46 discard_stmt: "discard" expr •

    $default  reduce using rule 46 (discard_stmt)


State 158

   93 chain_prefix: chain_prefix_stmt ";" •

    $default  reduce using rule 93 (chain_prefix)


State 159

  185 struct_exp_field: vid "=" • expr

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "not"                    shift, and go to state 27
    "42"                     shift, and go to state 28
    "0x2a"                   shift, and go to state 29
    "42u"                    shift, and go to state 30
    "0x2Au"                  shift, and go to state 31
    "4.2"                    shift, and go to state 32
    "\"dq-string-literal\""  shift, and go to state 33
    "'sq-string-literal'"    shift, and go to state 34
    "("                      shift, and go to state 35
    "{"                      shift, and go to state 36
    "*"                      shift, and go to state 37
    "+"                      shift, and go to state 38
    "-"                      shift, and go to state 39
    "^"                      shift, and go to state 40

    tid             go to state 41
    vid             go to state 42
    floatl          go to state 43
    mod_prefix      go to state 44
    expr            go to state 234
    bracketed_exp   go to state 46
    unit_exp        go to state 47
    paren_exp       go to state 48
    vtupleExpr      go to state 49
    vstructExpr     go to state 50
    primary_exp     go to state 51
    int_expr        go to state 52
    stringls        go to state 53
    if_exp          go to state 54
    chain_exp       go to state 55
    lambda_exp      go to state 56
    postfix_exp     go to state 57
    tcall_exp       go to state 58
    vcall_exp       go to state 59
    dot_name_exp    go to state 60
    dot_index_exp   go to state 61
    unary_exp       go to state 62
    unary_op        go to state 63
    binary_exp      go to state 64
    mul_binary_exp  go to state 65
    add_binary_exp  go to state 66
    cmp_binary_exp  go to state 67
    eq_binary_exp   go to state 68
    and_binary_exp  go to state 69
    xor_binary_exp  go to state 70
    or_binary_exp   go to state 71


State 160

   90 chain_exp: "{" expr "}" •

    $default  reduce using rule 90 (chain_exp)


State 161

   91 chain_exp: "{" chain_prefix "}" •

    $default  reduce using rule 91 (chain_exp)


State 162

   94 chain_prefix: chain_prefix chain_prefix_stmt • ";"

    ";"  shift, and go to state 235


State 163

   92 chain_exp: "{" chain_prefix expr • "}"

    "}"  shift, and go to state 236


State 164

  207 struct_exp_field_cl: struct_exp_field_cl "," • struct_exp_field

    "<val_id>"  shift, and go to state 24

    vid               go to state 237
    struct_exp_field  go to state 238


State 165

   72 vstructExpr: "{" struct_exp_field_cl "}" •

    $default  reduce using rule 72 (vstructExpr)


State 166

   53 mod_prefix: mod_prefix vid ":" •

    $default  reduce using rule 53 (mod_prefix)


State 167

  105 dot_name_exp: postfix_exp "." "<val_id>" •

    $default  reduce using rule 105 (dot_name_exp)


State 168

  106 dot_name_exp: postfix_exp "." "<TypeId>" • "(" expr_cl0 ")"

    "("  shift, and go to state 239


State 169

  109 dot_index_exp: postfix_exp "." bracketed_exp •

    $default  reduce using rule 109 (dot_index_exp)


State 170

  108 dot_index_exp: postfix_exp "." int_expr •

    $default  reduce using rule 108 (dot_index_exp)


State 171

  177 varg: "out" • expr

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "not"                    shift, and go to state 27
    "42"                     shift, and go to state 28
    "0x2a"                   shift, and go to state 29
    "42u"                    shift, and go to state 30
    "0x2Au"                  shift, and go to state 31
    "4.2"                    shift, and go to state 32
    "\"dq-string-literal\""  shift, and go to state 33
    "'sq-string-literal'"    shift, and go to state 34
    "("                      shift, and go to state 35
    "{"                      shift, and go to state 36
    "*"                      shift, and go to state 37
    "+"                      shift, and go to state 38
    "-"                      shift, and go to state 39
    "^"                      shift, and go to state 40

    tid             go to state 41
    vid             go to state 42
    floatl          go to state 43
    mod_prefix      go to state 44
    expr            go to state 240
    bracketed_exp   go to state 46
    unit_exp        go to state 47
    paren_exp       go to state 48
    vtupleExpr      go to state 49
    vstructExpr     go to state 50
    primary_exp     go to state 51
    int_expr        go to state 52
    stringls        go to state 53
    if_exp          go to state 54
    chain_exp       go to state 55
    lambda_exp      go to state 56
    postfix_exp     go to state 57
    tcall_exp       go to state 58
    vcall_exp       go to state 59
    dot_name_exp    go to state 60
    dot_index_exp   go to state 61
    unary_exp       go to state 62
    unary_op        go to state 63
    binary_exp      go to state 64
    mul_binary_exp  go to state 65
    add_binary_exp  go to state 66
    cmp_binary_exp  go to state 67
    eq_binary_exp   go to state 68
    and_binary_exp  go to state 69
    xor_binary_exp  go to state 70
    or_binary_exp   go to state 71


State 172

  178 varg: "inout" • expr

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "not"                    shift, and go to state 27
    "42"                     shift, and go to state 28
    "0x2a"                   shift, and go to state 29
    "42u"                    shift, and go to state 30
    "0x2Au"                  shift, and go to state 31
    "4.2"                    shift, and go to state 32
    "\"dq-string-literal\""  shift, and go to state 33
    "'sq-string-literal'"    shift, and go to state 34
    "("                      shift, and go to state 35
    "{"                      shift, and go to state 36
    "*"                      shift, and go to state 37
    "+"                      shift, and go to state 38
    "-"                      shift, and go to state 39
    "^"                      shift, and go to state 40

    tid             go to state 41
    vid             go to state 42
    floatl          go to state 43
    mod_prefix      go to state 44
    expr            go to state 241
    bracketed_exp   go to state 46
    unit_exp        go to state 47
    paren_exp       go to state 48
    vtupleExpr      go to state 49
    vstructExpr     go to state 50
    primary_exp     go to state 51
    int_expr        go to state 52
    stringls        go to state 53
    if_exp          go to state 54
    chain_exp       go to state 55
    lambda_exp      go to state 56
    postfix_exp     go to state 57
    tcall_exp       go to state 58
    vcall_exp       go to state 59
    dot_name_exp    go to state 60
    dot_index_exp   go to state 61
    unary_exp       go to state 62
    unary_op        go to state 63
    binary_exp      go to state 64
    mul_binary_exp  go to state 65
    add_binary_exp  go to state 66
    cmp_binary_exp  go to state 67
    eq_binary_exp   go to state 68
    and_binary_exp  go to state 69
    xor_binary_exp  go to state 70
    or_binary_exp   go to state 71


State 173

  103 vcall_exp: postfix_exp "(" ")" •

    $default  reduce using rule 103 (vcall_exp)


State 174

  176 varg: expr •

    $default  reduce using rule 176 (varg)


State 175

  179 varg_cl: varg •

    $default  reduce using rule 179 (varg_cl)


State 176

  104 vcall_exp: postfix_exp "(" varg_cl • ")"
  180 varg_cl: varg_cl • "," varg

    ","  shift, and go to state 242
    ")"  shift, and go to state 243


State 177

  164 fn_type_spec: "Fn" • vpattern primary_type_spec

    "("  shift, and go to state 75

    vpattern  go to state 244


State 178

   67 unit_exp: "(" • ")"
   69 paren_exp: "(" • long_exp ")"
   70 vtupleExpr: "(" • expr "," ")"
   71           | "(" • expr_cl2 ")"
  160 paren_type_spec: "(" • type_spec ")"
  161 tuple_type_spec: "(" • type_spec "," ")"
  162                | "(" • type_spec_cl2 ")"

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "Fn"                     shift, and go to state 177
    "not"                    shift, and go to state 27
    "42"                     shift, and go to state 28
    "0x2a"                   shift, and go to state 29
    "42u"                    shift, and go to state 30
    "0x2Au"                  shift, and go to state 31
    "4.2"                    shift, and go to state 32
    "\"dq-string-literal\""  shift, and go to state 33
    "'sq-string-literal'"    shift, and go to state 34
    "("                      shift, and go to state 178
    ")"                      shift, and go to state 77
    "{"                      shift, and go to state 36
    "*"                      shift, and go to state 37
    "+"                      shift, and go to state 38
    "-"                      shift, and go to state 39
    "^"                      shift, and go to state 40

    tid                go to state 179
    vid                go to state 42
    floatl             go to state 43
    mod_prefix         go to state 180
    expr               go to state 78
    long_exp           go to state 79
    expr_cl2           go to state 80
    bracketed_exp      go to state 46
    unit_exp           go to state 47
    paren_exp          go to state 48
    vtupleExpr         go to state 49
    vstructExpr        go to state 50
    primary_exp        go to state 51
    int_expr           go to state 52
    stringls           go to state 53
    if_exp             go to state 54
    chain_exp          go to state 55
    lambda_exp         go to state 56
    postfix_exp        go to state 57
    tcall_exp          go to state 58
    vcall_exp          go to state 59
    dot_name_exp       go to state 60
    dot_index_exp      go to state 61
    unary_exp          go to state 62
    unary_op           go to state 63
    binary_exp         go to state 64
    mul_binary_exp     go to state 65
    add_binary_exp     go to state 66
    cmp_binary_exp     go to state 67
    eq_binary_exp      go to state 68
    and_binary_exp     go to state 69
    xor_binary_exp     go to state 70
    or_binary_exp      go to state 71
    type_spec          go to state 245
    type_spec_cl2      go to state 246
    primary_type_spec  go to state 183
    paren_type_spec    go to state 184
    tuple_type_spec    go to state 185
    mod_prefix_tid     go to state 186
    fn_type_spec       go to state 187
    postfix_type_spec  go to state 188
    tcall_type_spec    go to state 189
    unary_type_spec    go to state 190


State 179

   52 mod_prefix: tid • ":"
  155 primary_type_spec: tid •

    ":"  shift, and go to state 98

    $default  reduce using rule 155 (primary_type_spec)


State 180

   53 mod_prefix: mod_prefix • vid ":"
  107 dot_name_exp: mod_prefix • "<val_id>"
  163 mod_prefix_tid: mod_prefix • tid

    "<val_id>"  shift, and go to state 99
    "<TypeId>"  shift, and go to state 10

    tid  go to state 247
    vid  go to state 100


State 181

  173 targ: expr •

    $default  reduce using rule 173 (targ)


State 182

  172 targ: type_spec •

    $default  reduce using rule 172 (targ)


State 183

  165 postfix_type_spec: primary_type_spec •

    $default  reduce using rule 165 (postfix_type_spec)


State 184

  156 primary_type_spec: paren_type_spec •

    $default  reduce using rule 156 (primary_type_spec)


State 185

  157 primary_type_spec: tuple_type_spec •

    $default  reduce using rule 157 (primary_type_spec)


State 186

  158 primary_type_spec: mod_prefix_tid •

    $default  reduce using rule 158 (primary_type_spec)


State 187

  159 primary_type_spec: fn_type_spec •

    $default  reduce using rule 159 (primary_type_spec)


State 188

  167 tcall_type_spec: postfix_type_spec • "[" targ_cl "]"
  168 unary_type_spec: postfix_type_spec •

    "["  shift, and go to state 248

    $default  reduce using rule 168 (unary_type_spec)


State 189

  166 postfix_type_spec: tcall_type_spec •

    $default  reduce using rule 166 (postfix_type_spec)


State 190

  147 type_spec: unary_type_spec •

    $default  reduce using rule 147 (type_spec)


State 191

  174 targ_cl: targ •

    $default  reduce using rule 174 (targ_cl)


State 192

  102 tcall_exp: postfix_exp "[" targ_cl • "]"
  175 targ_cl: targ_cl • "," targ

    ","  shift, and go to state 249
    "]"  shift, and go to state 250


State 193

  122 mul_binary_exp: mul_binary_exp mul_binary_op unary_exp •

    $default  reduce using rule 122 (mul_binary_exp)


State 194

  122 mul_binary_exp: mul_binary_exp • mul_binary_op unary_exp
  126 add_binary_exp: add_binary_exp add_binary_op mul_binary_exp •

    "*"  shift, and go to state 107
    "/"  shift, and go to state 108
    "%"  shift, and go to state 109

    $default  reduce using rule 126 (add_binary_exp)

    mul_binary_op  go to state 110


State 195

  126 add_binary_exp: add_binary_exp • add_binary_op mul_binary_exp
  132 cmp_binary_exp: cmp_binary_exp cmp_binary_op add_binary_exp •

    "+"  shift, and go to state 111
    "-"  shift, and go to state 112

    $default  reduce using rule 132 (cmp_binary_exp)

    add_binary_op  go to state 113


State 196

  132 cmp_binary_exp: cmp_binary_exp • cmp_binary_op add_binary_exp
  136 eq_binary_exp: eq_binary_exp eq_binary_op cmp_binary_exp •

    "<"   shift, and go to state 114
    "<="  shift, and go to state 115
    ">"   shift, and go to state 116
    ">="  shift, and go to state 117

    $default  reduce using rule 136 (eq_binary_exp)

    cmp_binary_op  go to state 118


State 197

  136 eq_binary_exp: eq_binary_exp • eq_binary_op cmp_binary_exp
  138 and_binary_exp: and_binary_exp "and" eq_binary_exp •

    "=="  shift, and go to state 119
    "!="  shift, and go to state 120

    $default  reduce using rule 138 (and_binary_exp)

    eq_binary_op  go to state 121


State 198

  138 and_binary_exp: and_binary_exp • "and" eq_binary_exp
  140 xor_binary_exp: xor_binary_exp "xor" and_binary_exp •

    "and"  shift, and go to state 122

    $default  reduce using rule 140 (xor_binary_exp)


State 199

  140 xor_binary_exp: xor_binary_exp • "xor" and_binary_exp
  142 or_binary_exp: or_binary_exp "or" xor_binary_exp •

    "xor"  shift, and go to state 123

    $default  reduce using rule 142 (or_binary_exp)


State 200

   10 sub_mod_stmt: "sub" "<TypeId>" • "{" mod_content "}"
   11             | "sub" "<TypeId>" • tpattern_seq "{" mod_content "}"

    "["  shift, and go to state 204
    "{"  shift, and go to state 251
    "!"  shift, and go to state 206

    tpattern      go to state 210
    tpattern_seq  go to state 252


State 201

    9 top_mod_stmt: "module" "<TypeId>" "{" mod_content "}" •

    $default  reduce using rule 9 (top_mod_stmt)


State 202

   13 mod_content: mod_content mod_content_stmt • ";"

    ";"  shift, and go to state 253


State 203

   12 mod_content: mod_content_stmt ";" •

    $default  reduce using rule 12 (mod_content)


State 204

  198 tpattern: "[" • tpattern_field_cl "]"

    "<val_id>"  shift, and go to state 24
    "<TypeId>"  shift, and go to state 10

    tid                go to state 254
    vid                go to state 255
    tpattern_field     go to state 256
    tpattern_field_cl  go to state 257


State 205

   23 mod_type_stmt: tid "=" • long_type_spec

    "<TypeId>"  shift, and go to state 10
    "Fn"        shift, and go to state 177
    "("         shift, and go to state 212
    "{"         shift, and go to state 258

    tid                go to state 179
    mod_prefix         go to state 214
    primary_type_spec  go to state 183
    paren_type_spec    go to state 184
    tuple_type_spec    go to state 185
    mod_prefix_tid     go to state 186
    fn_type_spec       go to state 187
    postfix_type_spec  go to state 188
    tcall_type_spec    go to state 189
    unary_type_spec    go to state 259
    long_type_spec     go to state 260
    struct_type_spec   go to state 261


State 206

  199 tpattern: "!" • "[" tpattern_field_cl "]"

    "["  shift, and go to state 262


State 207

   27 enum_field_pl: "|" • unprefixed_enum_field_pl

    "<TypeId>"  shift, and go to state 10

    unprefixed_enum_field_pl  go to state 263
    enum_field                go to state 264
    tid                       go to state 265


State 208

   33 mod_typeclass_stmt: tid ":-" • "<" tid class_spec ">" "{" type_query_exp_sl "}"

    "<"  shift, and go to state 266


State 209

   25 mod_enum_stmt: tid enum_field_pl •

    $default  reduce using rule 25 (mod_enum_stmt)


State 210

  208 tpattern_seq: tpattern •

    $default  reduce using rule 208 (tpattern_seq)


State 211

   24 mod_type_stmt: tid tpattern_seq • "=" long_type_spec
   26 mod_enum_stmt: tid tpattern_seq • enum_field_pl
   34 mod_typeclass_stmt: tid tpattern_seq • ":-" "<" tid class_spec ">" "{" type_query_exp_sl "}"
  209 tpattern_seq: tpattern_seq • tpattern

    "["   shift, and go to state 204
    "="   shift, and go to state 267
    "!"   shift, and go to state 206
    "|"   shift, and go to state 207
    ":-"  shift, and go to state 268

    enum_field_pl  go to state 269
    tpattern       go to state 270


State 212

  160 paren_type_spec: "(" • type_spec ")"
  161 tuple_type_spec: "(" • type_spec "," ")"
  162                | "(" • type_spec_cl2 ")"

    "<TypeId>"  shift, and go to state 10
    "Fn"        shift, and go to state 177
    "("         shift, and go to state 212

    tid                go to state 179
    mod_prefix         go to state 214
    type_spec          go to state 245
    type_spec_cl2      go to state 246
    primary_type_spec  go to state 183
    paren_type_spec    go to state 184
    tuple_type_spec    go to state 185
    mod_prefix_tid     go to state 186
    fn_type_spec       go to state 187
    postfix_type_spec  go to state 188
    tcall_type_spec    go to state 189
    unary_type_spec    go to state 190


State 213

   19 mod_val_stmt: vid "=" • expr

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "not"                    shift, and go to state 27
    "42"                     shift, and go to state 28
    "0x2a"                   shift, and go to state 29
    "42u"                    shift, and go to state 30
    "0x2Au"                  shift, and go to state 31
    "4.2"                    shift, and go to state 32
    "\"dq-string-literal\""  shift, and go to state 33
    "'sq-string-literal'"    shift, and go to state 34
    "("                      shift, and go to state 35
    "{"                      shift, and go to state 36
    "*"                      shift, and go to state 37
    "+"                      shift, and go to state 38
    "-"                      shift, and go to state 39
    "^"                      shift, and go to state 40

    tid             go to state 41
    vid             go to state 42
    floatl          go to state 43
    mod_prefix      go to state 44
    expr            go to state 271
    bracketed_exp   go to state 46
    unit_exp        go to state 47
    paren_exp       go to state 48
    vtupleExpr      go to state 49
    vstructExpr     go to state 50
    primary_exp     go to state 51
    int_expr        go to state 52
    stringls        go to state 53
    if_exp          go to state 54
    chain_exp       go to state 55
    lambda_exp      go to state 56
    postfix_exp     go to state 57
    tcall_exp       go to state 58
    vcall_exp       go to state 59
    dot_name_exp    go to state 60
    dot_index_exp   go to state 61
    unary_exp       go to state 62
    unary_op        go to state 63
    binary_exp      go to state 64
    mul_binary_exp  go to state 65
    add_binary_exp  go to state 66
    cmp_binary_exp  go to state 67
    eq_binary_exp   go to state 68
    and_binary_exp  go to state 69
    xor_binary_exp  go to state 70
    or_binary_exp   go to state 71


State 214

   53 mod_prefix: mod_prefix • vid ":"
  163 mod_prefix_tid: mod_prefix • tid

    "<val_id>"  shift, and go to state 24
    "<TypeId>"  shift, and go to state 10

    tid  go to state 247
    vid  go to state 100


State 215

   21 mod_val_stmt: vid type_spec • "from" tid stringl

    "from"  shift, and go to state 272


State 216

   20 mod_val_stmt: vid tpattern_seq • "=" expr
   22             | vid tpattern_seq • type_spec "from" tid stringl
  209 tpattern_seq: tpattern_seq • tpattern

    "<TypeId>"  shift, and go to state 10
    "Fn"        shift, and go to state 177
    "("         shift, and go to state 212
    "["         shift, and go to state 204
    "="         shift, and go to state 273
    "!"         shift, and go to state 206

    tid                go to state 179
    mod_prefix         go to state 214
    type_spec          go to state 274
    primary_type_spec  go to state 183
    paren_type_spec    go to state 184
    tuple_type_spec    go to state 185
    mod_prefix_tid     go to state 186
    fn_type_spec       go to state 187
    postfix_type_spec  go to state 188
    tcall_type_spec    go to state 189
    unary_type_spec    go to state 190
    tpattern           go to state 270


State 217

   88 if_exp: "if" bracketed_exp "then" bracketed_exp •
   89       | "if" bracketed_exp "then" bracketed_exp • "else" primary_exp

    "else"  shift, and go to state 275

    $default  reduce using rule 88 (if_exp)


State 218

  187 vpattern_field: "out" vid • type_spec

    "<TypeId>"  shift, and go to state 10
    "Fn"        shift, and go to state 177
    "("         shift, and go to state 212

    tid                go to state 179
    mod_prefix         go to state 214
    type_spec          go to state 276
    primary_type_spec  go to state 183
    paren_type_spec    go to state 184
    tuple_type_spec    go to state 185
    mod_prefix_tid     go to state 186
    fn_type_spec       go to state 187
    postfix_type_spec  go to state 188
    tcall_type_spec    go to state 189
    unary_type_spec    go to state 190


State 219

  188 vpattern_field: "inout" vid • type_spec

    "<TypeId>"  shift, and go to state 10
    "Fn"        shift, and go to state 177
    "("         shift, and go to state 212

    tid                go to state 179
    mod_prefix         go to state 214
    type_spec          go to state 277
    primary_type_spec  go to state 183
    paren_type_spec    go to state 184
    tuple_type_spec    go to state 185
    mod_prefix_tid     go to state 186
    fn_type_spec       go to state 187
    postfix_type_spec  go to state 188
    tcall_type_spec    go to state 189
    unary_type_spec    go to state 190


State 220

  186 vpattern_field: vid type_spec •

    $default  reduce using rule 186 (vpattern_field)


State 221

  201 vpattern_field_cl: vpattern_field_cl "," • vpattern_field

    "<val_id>"  shift, and go to state 24
    "out"       shift, and go to state 137
    "inout"     shift, and go to state 138

    vid             go to state 140
    vpattern_field  go to state 278


State 222

  196 vpattern: "(" vpattern_field_cl ")" •

    $default  reduce using rule 196 (vpattern)


State 223

   96 lambda_exp: "fn" vpattern "->" type_spec • bracketed_exp

    "("  shift, and go to state 35
    "{"  shift, and go to state 36

    bracketed_exp  go to state 279
    unit_exp       go to state 47
    paren_exp      go to state 48
    vtupleExpr     go to state 49
    vstructExpr    go to state 50
    chain_exp      go to state 55


State 224

   70 vtupleExpr: "(" expr "," ")" •

    $default  reduce using rule 70 (vtupleExpr)


State 225

   58 expr_cl2: expr "," expr •

    $default  reduce using rule 58 (expr_cl2)


State 226

   59 expr_cl2: expr_cl2 "," expr •

    $default  reduce using rule 59 (expr_cl2)


State 227

  202 lpattern_field_cl: lpattern_field •

    $default  reduce using rule 202 (lpattern_field_cl)


State 228

  193 destructured_lpattern: "(" lpattern_field_cl • ")"
  203 lpattern_field_cl: lpattern_field_cl • "," lpattern_field

    ","  shift, and go to state 280
    ")"  shift, and go to state 281


State 229

  189 lpattern_field: vid type_spec •

    $default  reduce using rule 189 (lpattern_field)


State 230

   42 const_stmt: "const" lpattern "=" • expr

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "not"                    shift, and go to state 27
    "42"                     shift, and go to state 28
    "0x2a"                   shift, and go to state 29
    "42u"                    shift, and go to state 30
    "0x2Au"                  shift, and go to state 31
    "4.2"                    shift, and go to state 32
    "\"dq-string-literal\""  shift, and go to state 33
    "'sq-string-literal'"    shift, and go to state 34
    "("                      shift, and go to state 35
    "{"                      shift, and go to state 36
    "*"                      shift, and go to state 37
    "+"                      shift, and go to state 38
    "-"                      shift, and go to state 39
    "^"                      shift, and go to state 40

    tid             go to state 41
    vid             go to state 42
    floatl          go to state 43
    mod_prefix      go to state 44
    expr            go to state 282
    bracketed_exp   go to state 46
    unit_exp        go to state 47
    paren_exp       go to state 48
    vtupleExpr      go to state 49
    vstructExpr     go to state 50
    primary_exp     go to state 51
    int_expr        go to state 52
    stringls        go to state 53
    if_exp          go to state 54
    chain_exp       go to state 55
    lambda_exp      go to state 56
    postfix_exp     go to state 57
    tcall_exp       go to state 58
    vcall_exp       go to state 59
    dot_name_exp    go to state 60
    dot_index_exp   go to state 61
    unary_exp       go to state 62
    unary_op        go to state 63
    binary_exp      go to state 64
    mul_binary_exp  go to state 65
    add_binary_exp  go to state 66
    cmp_binary_exp  go to state 67
    eq_binary_exp   go to state 68
    and_binary_exp  go to state 69
    xor_binary_exp  go to state 70
    or_binary_exp   go to state 71


State 231

   43 val_stmt: "val" lpattern "=" • expr

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "not"                    shift, and go to state 27
    "42"                     shift, and go to state 28
    "0x2a"                   shift, and go to state 29
    "42u"                    shift, and go to state 30
    "0x2Au"                  shift, and go to state 31
    "4.2"                    shift, and go to state 32
    "\"dq-string-literal\""  shift, and go to state 33
    "'sq-string-literal'"    shift, and go to state 34
    "("                      shift, and go to state 35
    "{"                      shift, and go to state 36
    "*"                      shift, and go to state 37
    "+"                      shift, and go to state 38
    "-"                      shift, and go to state 39
    "^"                      shift, and go to state 40

    tid             go to state 41
    vid             go to state 42
    floatl          go to state 43
    mod_prefix      go to state 44
    expr            go to state 283
    bracketed_exp   go to state 46
    unit_exp        go to state 47
    paren_exp       go to state 48
    vtupleExpr      go to state 49
    vstructExpr     go to state 50
    primary_exp     go to state 51
    int_expr        go to state 52
    stringls        go to state 53
    if_exp          go to state 54
    chain_exp       go to state 55
    lambda_exp      go to state 56
    postfix_exp     go to state 57
    tcall_exp       go to state 58
    vcall_exp       go to state 59
    dot_name_exp    go to state 60
    dot_index_exp   go to state 61
    unary_exp       go to state 62
    unary_op        go to state 63
    binary_exp      go to state 64
    mul_binary_exp  go to state 65
    add_binary_exp  go to state 66
    cmp_binary_exp  go to state 67
    eq_binary_exp   go to state 68
    and_binary_exp  go to state 69
    xor_binary_exp  go to state 70
    or_binary_exp   go to state 71


State 232

   44 var_stmt: "var" lpattern "=" • expr

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "not"                    shift, and go to state 27
    "42"                     shift, and go to state 28
    "0x2a"                   shift, and go to state 29
    "42u"                    shift, and go to state 30
    "0x2Au"                  shift, and go to state 31
    "4.2"                    shift, and go to state 32
    "\"dq-string-literal\""  shift, and go to state 33
    "'sq-string-literal'"    shift, and go to state 34
    "("                      shift, and go to state 35
    "{"                      shift, and go to state 36
    "*"                      shift, and go to state 37
    "+"                      shift, and go to state 38
    "-"                      shift, and go to state 39
    "^"                      shift, and go to state 40

    tid             go to state 41
    vid             go to state 42
    floatl          go to state 43
    mod_prefix      go to state 44
    expr            go to state 284
    bracketed_exp   go to state 46
    unit_exp        go to state 47
    paren_exp       go to state 48
    vtupleExpr      go to state 49
    vstructExpr     go to state 50
    primary_exp     go to state 51
    int_expr        go to state 52
    stringls        go to state 53
    if_exp          go to state 54
    chain_exp       go to state 55
    lambda_exp      go to state 56
    postfix_exp     go to state 57
    tcall_exp       go to state 58
    vcall_exp       go to state 59
    dot_name_exp    go to state 60
    dot_index_exp   go to state 61
    unary_exp       go to state 62
    unary_op        go to state 63
    binary_exp      go to state 64
    mul_binary_exp  go to state 65
    add_binary_exp  go to state 66
    cmp_binary_exp  go to state 67
    eq_binary_exp   go to state 68
    and_binary_exp  go to state 69
    xor_binary_exp  go to state 70
    or_binary_exp   go to state 71


State 233

   45 set_stmt: "set" expr "=" • expr

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "not"                    shift, and go to state 27
    "42"                     shift, and go to state 28
    "0x2a"                   shift, and go to state 29
    "42u"                    shift, and go to state 30
    "0x2Au"                  shift, and go to state 31
    "4.2"                    shift, and go to state 32
    "\"dq-string-literal\""  shift, and go to state 33
    "'sq-string-literal'"    shift, and go to state 34
    "("                      shift, and go to state 35
    "{"                      shift, and go to state 36
    "*"                      shift, and go to state 37
    "+"                      shift, and go to state 38
    "-"                      shift, and go to state 39
    "^"                      shift, and go to state 40

    tid             go to state 41
    vid             go to state 42
    floatl          go to state 43
    mod_prefix      go to state 44
    expr            go to state 285
    bracketed_exp   go to state 46
    unit_exp        go to state 47
    paren_exp       go to state 48
    vtupleExpr      go to state 49
    vstructExpr     go to state 50
    primary_exp     go to state 51
    int_expr        go to state 52
    stringls        go to state 53
    if_exp          go to state 54
    chain_exp       go to state 55
    lambda_exp      go to state 56
    postfix_exp     go to state 57
    tcall_exp       go to state 58
    vcall_exp       go to state 59
    dot_name_exp    go to state 60
    dot_index_exp   go to state 61
    unary_exp       go to state 62
    unary_op        go to state 63
    binary_exp      go to state 64
    mul_binary_exp  go to state 65
    add_binary_exp  go to state 66
    cmp_binary_exp  go to state 67
    eq_binary_exp   go to state 68
    and_binary_exp  go to state 69
    xor_binary_exp  go to state 70
    or_binary_exp   go to state 71


State 234

  185 struct_exp_field: vid "=" expr •

    $default  reduce using rule 185 (struct_exp_field)


State 235

   94 chain_prefix: chain_prefix chain_prefix_stmt ";" •

    $default  reduce using rule 94 (chain_prefix)


State 236

   92 chain_exp: "{" chain_prefix expr "}" •

    $default  reduce using rule 92 (chain_exp)


State 237

  185 struct_exp_field: vid • "=" expr

    "="  shift, and go to state 159


State 238

  207 struct_exp_field_cl: struct_exp_field_cl "," struct_exp_field •

    $default  reduce using rule 207 (struct_exp_field_cl)


State 239

  106 dot_name_exp: postfix_exp "." "<TypeId>" "(" • expr_cl0 ")"

    $default  reduce using rule 56 (expr_cl0)

    expr_cl0  go to state 286


State 240

  177 varg: "out" expr •

    $default  reduce using rule 177 (varg)


State 241

  178 varg: "inout" expr •

    $default  reduce using rule 178 (varg)


State 242

  180 varg_cl: varg_cl "," • varg

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "not"                    shift, and go to state 27
    "out"                    shift, and go to state 171
    "inout"                  shift, and go to state 172
    "42"                     shift, and go to state 28
    "0x2a"                   shift, and go to state 29
    "42u"                    shift, and go to state 30
    "0x2Au"                  shift, and go to state 31
    "4.2"                    shift, and go to state 32
    "\"dq-string-literal\""  shift, and go to state 33
    "'sq-string-literal'"    shift, and go to state 34
    "("                      shift, and go to state 35
    "{"                      shift, and go to state 36
    "*"                      shift, and go to state 37
    "+"                      shift, and go to state 38
    "-"                      shift, and go to state 39
    "^"                      shift, and go to state 40

    tid             go to state 41
    vid             go to state 42
    floatl          go to state 43
    mod_prefix      go to state 44
    expr            go to state 174
    bracketed_exp   go to state 46
    unit_exp        go to state 47
    paren_exp       go to state 48
    vtupleExpr      go to state 49
    vstructExpr     go to state 50
    primary_exp     go to state 51
    int_expr        go to state 52
    stringls        go to state 53
    if_exp          go to state 54
    chain_exp       go to state 55
    lambda_exp      go to state 56
    postfix_exp     go to state 57
    tcall_exp       go to state 58
    vcall_exp       go to state 59
    dot_name_exp    go to state 60
    dot_index_exp   go to state 61
    unary_exp       go to state 62
    unary_op        go to state 63
    binary_exp      go to state 64
    mul_binary_exp  go to state 65
    add_binary_exp  go to state 66
    cmp_binary_exp  go to state 67
    eq_binary_exp   go to state 68
    and_binary_exp  go to state 69
    xor_binary_exp  go to state 70
    or_binary_exp   go to state 71
    varg            go to state 287


State 243

  104 vcall_exp: postfix_exp "(" varg_cl ")" •

    $default  reduce using rule 104 (vcall_exp)


State 244

  164 fn_type_spec: "Fn" vpattern • primary_type_spec

    "<TypeId>"  shift, and go to state 10
    "Fn"        shift, and go to state 177
    "("         shift, and go to state 212

    tid                go to state 179
    mod_prefix         go to state 214
    primary_type_spec  go to state 288
    paren_type_spec    go to state 184
    tuple_type_spec    go to state 185
    mod_prefix_tid     go to state 186
    fn_type_spec       go to state 187


State 245

  150 type_spec_cl2: type_spec • "," type_spec
  160 paren_type_spec: "(" type_spec • ")"
  161 tuple_type_spec: "(" type_spec • "," ")"

    ","  shift, and go to state 289
    ")"  shift, and go to state 290


State 246

  151 type_spec_cl2: type_spec_cl2 • "," type_spec
  162 tuple_type_spec: "(" type_spec_cl2 • ")"

    ","  shift, and go to state 291
    ")"  shift, and go to state 292


State 247

  163 mod_prefix_tid: mod_prefix tid •

    $default  reduce using rule 163 (mod_prefix_tid)


State 248

  167 tcall_type_spec: postfix_type_spec "[" • targ_cl "]"

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "Fn"                     shift, and go to state 177
    "not"                    shift, and go to state 27
    "42"                     shift, and go to state 28
    "0x2a"                   shift, and go to state 29
    "42u"                    shift, and go to state 30
    "0x2Au"                  shift, and go to state 31
    "4.2"                    shift, and go to state 32
    "\"dq-string-literal\""  shift, and go to state 33
    "'sq-string-literal'"    shift, and go to state 34
    "("                      shift, and go to state 178
    "{"                      shift, and go to state 36
    "*"                      shift, and go to state 37
    "+"                      shift, and go to state 38
    "-"                      shift, and go to state 39
    "^"                      shift, and go to state 40

    tid                go to state 179
    vid                go to state 42
    floatl             go to state 43
    mod_prefix         go to state 180
    expr               go to state 181
    bracketed_exp      go to state 46
    unit_exp           go to state 47
    paren_exp          go to state 48
    vtupleExpr         go to state 49
    vstructExpr        go to state 50
    primary_exp        go to state 51
    int_expr           go to state 52
    stringls           go to state 53
    if_exp             go to state 54
    chain_exp          go to state 55
    lambda_exp         go to state 56
    postfix_exp        go to state 57
    tcall_exp          go to state 58
    vcall_exp          go to state 59
    dot_name_exp       go to state 60
    dot_index_exp      go to state 61
    unary_exp          go to state 62
    unary_op           go to state 63
    binary_exp         go to state 64
    mul_binary_exp     go to state 65
    add_binary_exp     go to state 66
    cmp_binary_exp     go to state 67
    eq_binary_exp      go to state 68
    and_binary_exp     go to state 69
    xor_binary_exp     go to state 70
    or_binary_exp      go to state 71
    type_spec          go to state 182
    primary_type_spec  go to state 183
    paren_type_spec    go to state 184
    tuple_type_spec    go to state 185
    mod_prefix_tid     go to state 186
    fn_type_spec       go to state 187
    postfix_type_spec  go to state 188
    tcall_type_spec    go to state 189
    unary_type_spec    go to state 190
    targ               go to state 191
    targ_cl            go to state 293


State 249

  175 targ_cl: targ_cl "," • targ

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "Fn"                     shift, and go to state 177
    "not"                    shift, and go to state 27
    "42"                     shift, and go to state 28
    "0x2a"                   shift, and go to state 29
    "42u"                    shift, and go to state 30
    "0x2Au"                  shift, and go to state 31
    "4.2"                    shift, and go to state 32
    "\"dq-string-literal\""  shift, and go to state 33
    "'sq-string-literal'"    shift, and go to state 34
    "("                      shift, and go to state 178
    "{"                      shift, and go to state 36
    "*"                      shift, and go to state 37
    "+"                      shift, and go to state 38
    "-"                      shift, and go to state 39
    "^"                      shift, and go to state 40

    tid                go to state 179
    vid                go to state 42
    floatl             go to state 43
    mod_prefix         go to state 180
    expr               go to state 181
    bracketed_exp      go to state 46
    unit_exp           go to state 47
    paren_exp          go to state 48
    vtupleExpr         go to state 49
    vstructExpr        go to state 50
    primary_exp        go to state 51
    int_expr           go to state 52
    stringls           go to state 53
    if_exp             go to state 54
    chain_exp          go to state 55
    lambda_exp         go to state 56
    postfix_exp        go to state 57
    tcall_exp          go to state 58
    vcall_exp          go to state 59
    dot_name_exp       go to state 60
    dot_index_exp      go to state 61
    unary_exp          go to state 62
    unary_op           go to state 63
    binary_exp         go to state 64
    mul_binary_exp     go to state 65
    add_binary_exp     go to state 66
    cmp_binary_exp     go to state 67
    eq_binary_exp      go to state 68
    and_binary_exp     go to state 69
    xor_binary_exp     go to state 70
    or_binary_exp      go to state 71
    type_spec          go to state 182
    primary_type_spec  go to state 183
    paren_type_spec    go to state 184
    tuple_type_spec    go to state 185
    mod_prefix_tid     go to state 186
    fn_type_spec       go to state 187
    postfix_type_spec  go to state 188
    tcall_type_spec    go to state 189
    unary_type_spec    go to state 190
    targ               go to state 294


State 250

  102 tcall_exp: postfix_exp "[" targ_cl "]" •

    $default  reduce using rule 102 (tcall_exp)


State 251

   10 sub_mod_stmt: "sub" "<TypeId>" "{" • mod_content "}"

    "<val_id>"  shift, and go to state 24
    "<TypeId>"  shift, and go to state 10
    "sub"       shift, and go to state 125

    sub_mod_stmt        go to state 126
    mod_content         go to state 295
    mod_content_stmt    go to state 128
    mod_val_stmt        go to state 129
    mod_type_stmt       go to state 130
    mod_enum_stmt       go to state 131
    mod_typeclass_stmt  go to state 132
    tid                 go to state 133
    vid                 go to state 134


State 252

   11 sub_mod_stmt: "sub" "<TypeId>" tpattern_seq • "{" mod_content "}"
  209 tpattern_seq: tpattern_seq • tpattern

    "["  shift, and go to state 204
    "{"  shift, and go to state 296
    "!"  shift, and go to state 206

    tpattern  go to state 270


State 253

   13 mod_content: mod_content mod_content_stmt ";" •

    $default  reduce using rule 13 (mod_content)


State 254

  192 tpattern_field: tid • class_spec

    "<TypeId>"  shift, and go to state 10

    tid                 go to state 297
    class_spec          go to state 298
    primary_class_spec  go to state 299
    postfix_class_spec  go to state 300


State 255

  191 tpattern_field: vid • type_spec

    "<TypeId>"  shift, and go to state 10
    "Fn"        shift, and go to state 177
    "("         shift, and go to state 212

    tid                go to state 179
    mod_prefix         go to state 214
    type_spec          go to state 301
    primary_type_spec  go to state 183
    paren_type_spec    go to state 184
    tuple_type_spec    go to state 185
    mod_prefix_tid     go to state 186
    fn_type_spec       go to state 187
    postfix_type_spec  go to state 188
    tcall_type_spec    go to state 189
    unary_type_spec    go to state 190


State 256

  204 tpattern_field_cl: tpattern_field •

    $default  reduce using rule 204 (tpattern_field_cl)


State 257

  198 tpattern: "[" tpattern_field_cl • "]"
  205 tpattern_field_cl: tpattern_field_cl • "," tpattern_field

    ","  shift, and go to state 302
    "]"  shift, and go to state 303


State 258

  171 struct_type_spec: "{" • struct_type_spec_field_cl "}"

    "<val_id>"  shift, and go to state 24

    vid                        go to state 304
    struct_type_spec_field     go to state 305
    struct_type_spec_field_cl  go to state 306


State 259

  169 long_type_spec: unary_type_spec •

    $default  reduce using rule 169 (long_type_spec)


State 260

   23 mod_type_stmt: tid "=" long_type_spec •

    $default  reduce using rule 23 (mod_type_stmt)


State 261

  170 long_type_spec: struct_type_spec •

    $default  reduce using rule 170 (long_type_spec)


State 262

  199 tpattern: "!" "[" • tpattern_field_cl "]"

    "<val_id>"  shift, and go to state 24
    "<TypeId>"  shift, and go to state 10

    tid                go to state 254
    vid                go to state 255
    tpattern_field     go to state 256
    tpattern_field_cl  go to state 307


State 263

   27 enum_field_pl: "|" unprefixed_enum_field_pl •
   29 unprefixed_enum_field_pl: unprefixed_enum_field_pl • "|" enum_field

    "|"  shift, and go to state 308

    $default  reduce using rule 27 (enum_field_pl)


State 264

   28 unprefixed_enum_field_pl: enum_field •

    $default  reduce using rule 28 (unprefixed_enum_field_pl)


State 265

   30 enum_field: tid •
   31           | tid • "(" ")"
   32           | tid • "(" type_spec_cl1 ")"

    "("  shift, and go to state 309

    $default  reduce using rule 30 (enum_field)


State 266

   33 mod_typeclass_stmt: tid ":-" "<" • tid class_spec ">" "{" type_query_exp_sl "}"

    "<TypeId>"  shift, and go to state 10

    tid  go to state 310


State 267

   24 mod_type_stmt: tid tpattern_seq "=" • long_type_spec

    "<TypeId>"  shift, and go to state 10
    "Fn"        shift, and go to state 177
    "("         shift, and go to state 212
    "{"         shift, and go to state 258

    tid                go to state 179
    mod_prefix         go to state 214
    primary_type_spec  go to state 183
    paren_type_spec    go to state 184
    tuple_type_spec    go to state 185
    mod_prefix_tid     go to state 186
    fn_type_spec       go to state 187
    postfix_type_spec  go to state 188
    tcall_type_spec    go to state 189
    unary_type_spec    go to state 259
    long_type_spec     go to state 311
    struct_type_spec   go to state 261


State 268

   34 mod_typeclass_stmt: tid tpattern_seq ":-" • "<" tid class_spec ">" "{" type_query_exp_sl "}"

    "<"  shift, and go to state 312


State 269

   26 mod_enum_stmt: tid tpattern_seq enum_field_pl •

    $default  reduce using rule 26 (mod_enum_stmt)


State 270

  209 tpattern_seq: tpattern_seq tpattern •

    $default  reduce using rule 209 (tpattern_seq)


State 271

   19 mod_val_stmt: vid "=" expr •

    $default  reduce using rule 19 (mod_val_stmt)


State 272

   21 mod_val_stmt: vid type_spec "from" • tid stringl

    "<TypeId>"  shift, and go to state 10

    tid  go to state 313


State 273

   20 mod_val_stmt: vid tpattern_seq "=" • expr

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "not"                    shift, and go to state 27
    "42"                     shift, and go to state 28
    "0x2a"                   shift, and go to state 29
    "42u"                    shift, and go to state 30
    "0x2Au"                  shift, and go to state 31
    "4.2"                    shift, and go to state 32
    "\"dq-string-literal\""  shift, and go to state 33
    "'sq-string-literal'"    shift, and go to state 34
    "("                      shift, and go to state 35
    "{"                      shift, and go to state 36
    "*"                      shift, and go to state 37
    "+"                      shift, and go to state 38
    "-"                      shift, and go to state 39
    "^"                      shift, and go to state 40

    tid             go to state 41
    vid             go to state 42
    floatl          go to state 43
    mod_prefix      go to state 44
    expr            go to state 314
    bracketed_exp   go to state 46
    unit_exp        go to state 47
    paren_exp       go to state 48
    vtupleExpr      go to state 49
    vstructExpr     go to state 50
    primary_exp     go to state 51
    int_expr        go to state 52
    stringls        go to state 53
    if_exp          go to state 54
    chain_exp       go to state 55
    lambda_exp      go to state 56
    postfix_exp     go to state 57
    tcall_exp       go to state 58
    vcall_exp       go to state 59
    dot_name_exp    go to state 60
    dot_index_exp   go to state 61
    unary_exp       go to state 62
    unary_op        go to state 63
    binary_exp      go to state 64
    mul_binary_exp  go to state 65
    add_binary_exp  go to state 66
    cmp_binary_exp  go to state 67
    eq_binary_exp   go to state 68
    and_binary_exp  go to state 69
    xor_binary_exp  go to state 70
    or_binary_exp   go to state 71


State 274

   22 mod_val_stmt: vid tpattern_seq type_spec • "from" tid stringl

    "from"  shift, and go to state 315


State 275

   89 if_exp: "if" bracketed_exp "then" bracketed_exp "else" • primary_exp

    "<val_id>"               shift, and go to state 24
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "42"                     shift, and go to state 28
    "0x2a"                   shift, and go to state 29
    "42u"                    shift, and go to state 30
    "0x2Au"                  shift, and go to state 31
    "4.2"                    shift, and go to state 32
    "\"dq-string-literal\""  shift, and go to state 33
    "'sq-string-literal'"    shift, and go to state 34
    "("                      shift, and go to state 35
    "{"                      shift, and go to state 36

    vid            go to state 42
    floatl         go to state 43
    bracketed_exp  go to state 46
    unit_exp       go to state 47
    paren_exp      go to state 48
    vtupleExpr     go to state 49
    vstructExpr    go to state 50
    primary_exp    go to state 316
    int_expr       go to state 52
    stringls       go to state 53
    if_exp         go to state 54
    chain_exp      go to state 55
    lambda_exp     go to state 56


State 276

  187 vpattern_field: "out" vid type_spec •

    $default  reduce using rule 187 (vpattern_field)


State 277

  188 vpattern_field: "inout" vid type_spec •

    $default  reduce using rule 188 (vpattern_field)


State 278

  201 vpattern_field_cl: vpattern_field_cl "," vpattern_field •

    $default  reduce using rule 201 (vpattern_field_cl)


State 279

   96 lambda_exp: "fn" vpattern "->" type_spec bracketed_exp •

    $default  reduce using rule 96 (lambda_exp)


State 280

  203 lpattern_field_cl: lpattern_field_cl "," • lpattern_field

    "<val_id>"  shift, and go to state 24

    vid             go to state 150
    lpattern_field  go to state 317


State 281

  193 destructured_lpattern: "(" lpattern_field_cl ")" •

    $default  reduce using rule 193 (destructured_lpattern)


State 282

   42 const_stmt: "const" lpattern "=" expr •

    $default  reduce using rule 42 (const_stmt)


State 283

   43 val_stmt: "val" lpattern "=" expr •

    $default  reduce using rule 43 (val_stmt)


State 284

   44 var_stmt: "var" lpattern "=" expr •

    $default  reduce using rule 44 (var_stmt)


State 285

   45 set_stmt: "set" expr "=" expr •

    $default  reduce using rule 45 (set_stmt)


State 286

   57 expr_cl0: expr_cl0 • "," expr
  106 dot_name_exp: postfix_exp "." "<TypeId>" "(" expr_cl0 • ")"

    ","  shift, and go to state 318
    ")"  shift, and go to state 319


State 287

  180 varg_cl: varg_cl "," varg •

    $default  reduce using rule 180 (varg_cl)


State 288

  164 fn_type_spec: "Fn" vpattern primary_type_spec •

    $default  reduce using rule 164 (fn_type_spec)


State 289

  150 type_spec_cl2: type_spec "," • type_spec
  161 tuple_type_spec: "(" type_spec "," • ")"

    "<TypeId>"  shift, and go to state 10
    "Fn"        shift, and go to state 177
    "("         shift, and go to state 212
    ")"         shift, and go to state 320

    tid                go to state 179
    mod_prefix         go to state 214
    type_spec          go to state 321
    primary_type_spec  go to state 183
    paren_type_spec    go to state 184
    tuple_type_spec    go to state 185
    mod_prefix_tid     go to state 186
    fn_type_spec       go to state 187
    postfix_type_spec  go to state 188
    tcall_type_spec    go to state 189
    unary_type_spec    go to state 190


State 290

  160 paren_type_spec: "(" type_spec ")" •

    $default  reduce using rule 160 (paren_type_spec)


State 291

  151 type_spec_cl2: type_spec_cl2 "," • type_spec

    "<TypeId>"  shift, and go to state 10
    "Fn"        shift, and go to state 177
    "("         shift, and go to state 212

    tid                go to state 179
    mod_prefix         go to state 214
    type_spec          go to state 322
    primary_type_spec  go to state 183
    paren_type_spec    go to state 184
    tuple_type_spec    go to state 185
    mod_prefix_tid     go to state 186
    fn_type_spec       go to state 187
    postfix_type_spec  go to state 188
    tcall_type_spec    go to state 189
    unary_type_spec    go to state 190


State 292

  162 tuple_type_spec: "(" type_spec_cl2 ")" •

    $default  reduce using rule 162 (tuple_type_spec)


State 293

  167 tcall_type_spec: postfix_type_spec "[" targ_cl • "]"
  175 targ_cl: targ_cl • "," targ

    ","  shift, and go to state 249
    "]"  shift, and go to state 323


State 294

  175 targ_cl: targ_cl "," targ •

    $default  reduce using rule 175 (targ_cl)


State 295

   10 sub_mod_stmt: "sub" "<TypeId>" "{" mod_content • "}"
   13 mod_content: mod_content • mod_content_stmt ";"

    "<val_id>"  shift, and go to state 24
    "<TypeId>"  shift, and go to state 10
    "sub"       shift, and go to state 125
    "}"         shift, and go to state 324

    sub_mod_stmt        go to state 126
    mod_content_stmt    go to state 202
    mod_val_stmt        go to state 129
    mod_type_stmt       go to state 130
    mod_enum_stmt       go to state 131
    mod_typeclass_stmt  go to state 132
    tid                 go to state 133
    vid                 go to state 134


State 296

   11 sub_mod_stmt: "sub" "<TypeId>" tpattern_seq "{" • mod_content "}"

    "<val_id>"  shift, and go to state 24
    "<TypeId>"  shift, and go to state 10
    "sub"       shift, and go to state 125

    sub_mod_stmt        go to state 126
    mod_content         go to state 325
    mod_content_stmt    go to state 128
    mod_val_stmt        go to state 129
    mod_type_stmt       go to state 130
    mod_enum_stmt       go to state 131
    mod_typeclass_stmt  go to state 132
    tid                 go to state 133
    vid                 go to state 134


State 297

  182 primary_class_spec: tid •

    $default  reduce using rule 182 (primary_class_spec)


State 298

  192 tpattern_field: tid class_spec •

    $default  reduce using rule 192 (tpattern_field)


State 299

  183 postfix_class_spec: primary_class_spec •

    $default  reduce using rule 183 (postfix_class_spec)


State 300

  181 class_spec: postfix_class_spec •
  184 postfix_class_spec: postfix_class_spec • "[" targ_cl "]"

    "["  shift, and go to state 326

    $default  reduce using rule 181 (class_spec)


State 301

  191 tpattern_field: vid type_spec •

    $default  reduce using rule 191 (tpattern_field)


State 302

  205 tpattern_field_cl: tpattern_field_cl "," • tpattern_field

    "<val_id>"  shift, and go to state 24
    "<TypeId>"  shift, and go to state 10

    tid             go to state 254
    vid             go to state 255
    tpattern_field  go to state 327


State 303

  198 tpattern: "[" tpattern_field_cl "]" •

    $default  reduce using rule 198 (tpattern)


State 304

  152 struct_type_spec_field: vid • type_spec

    "<TypeId>"  shift, and go to state 10
    "Fn"        shift, and go to state 177
    "("         shift, and go to state 212

    tid                go to state 179
    mod_prefix         go to state 214
    type_spec          go to state 328
    primary_type_spec  go to state 183
    paren_type_spec    go to state 184
    tuple_type_spec    go to state 185
    mod_prefix_tid     go to state 186
    fn_type_spec       go to state 187
    postfix_type_spec  go to state 188
    tcall_type_spec    go to state 189
    unary_type_spec    go to state 190


State 305

  153 struct_type_spec_field_cl: struct_type_spec_field •

    $default  reduce using rule 153 (struct_type_spec_field_cl)


State 306

  154 struct_type_spec_field_cl: struct_type_spec_field_cl • "," struct_type_spec_field
  171 struct_type_spec: "{" struct_type_spec_field_cl • "}"

    ","  shift, and go to state 329
    "}"  shift, and go to state 330


State 307

  199 tpattern: "!" "[" tpattern_field_cl • "]"
  205 tpattern_field_cl: tpattern_field_cl • "," tpattern_field

    ","  shift, and go to state 302
    "]"  shift, and go to state 331


State 308

   29 unprefixed_enum_field_pl: unprefixed_enum_field_pl "|" • enum_field

    "<TypeId>"  shift, and go to state 10

    enum_field  go to state 332
    tid         go to state 265


State 309

   31 enum_field: tid "(" • ")"
   32           | tid "(" • type_spec_cl1 ")"

    "<TypeId>"  shift, and go to state 10
    "Fn"        shift, and go to state 177
    "("         shift, and go to state 212
    ")"         shift, and go to state 333

    tid                go to state 179
    mod_prefix         go to state 214
    type_spec          go to state 334
    type_spec_cl1      go to state 335
    primary_type_spec  go to state 183
    paren_type_spec    go to state 184
    tuple_type_spec    go to state 185
    mod_prefix_tid     go to state 186
    fn_type_spec       go to state 187
    postfix_type_spec  go to state 188
    tcall_type_spec    go to state 189
    unary_type_spec    go to state 190


State 310

   33 mod_typeclass_stmt: tid ":-" "<" tid • class_spec ">" "{" type_query_exp_sl "}"

    "<TypeId>"  shift, and go to state 10

    tid                 go to state 297
    class_spec          go to state 336
    primary_class_spec  go to state 299
    postfix_class_spec  go to state 300


State 311

   24 mod_type_stmt: tid tpattern_seq "=" long_type_spec •

    $default  reduce using rule 24 (mod_type_stmt)


State 312

   34 mod_typeclass_stmt: tid tpattern_seq ":-" "<" • tid class_spec ">" "{" type_query_exp_sl "}"

    "<TypeId>"  shift, and go to state 10

    tid  go to state 337


State 313

   21 mod_val_stmt: vid type_spec "from" tid • stringl

    "\"dq-string-literal\""  shift, and go to state 21
    "'sq-string-literal'"    shift, and go to state 22

    stringl  go to state 338


State 314

   20 mod_val_stmt: vid tpattern_seq "=" expr •

    $default  reduce using rule 20 (mod_val_stmt)


State 315

   22 mod_val_stmt: vid tpattern_seq type_spec "from" • tid stringl

    "<TypeId>"  shift, and go to state 10

    tid  go to state 339


State 316

   89 if_exp: "if" bracketed_exp "then" bracketed_exp "else" primary_exp •

    $default  reduce using rule 89 (if_exp)


State 317

  203 lpattern_field_cl: lpattern_field_cl "," lpattern_field •

    $default  reduce using rule 203 (lpattern_field_cl)


State 318

   57 expr_cl0: expr_cl0 "," • expr

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "not"                    shift, and go to state 27
    "42"                     shift, and go to state 28
    "0x2a"                   shift, and go to state 29
    "42u"                    shift, and go to state 30
    "0x2Au"                  shift, and go to state 31
    "4.2"                    shift, and go to state 32
    "\"dq-string-literal\""  shift, and go to state 33
    "'sq-string-literal'"    shift, and go to state 34
    "("                      shift, and go to state 35
    "{"                      shift, and go to state 36
    "*"                      shift, and go to state 37
    "+"                      shift, and go to state 38
    "-"                      shift, and go to state 39
    "^"                      shift, and go to state 40

    tid             go to state 41
    vid             go to state 42
    floatl          go to state 43
    mod_prefix      go to state 44
    expr            go to state 340
    bracketed_exp   go to state 46
    unit_exp        go to state 47
    paren_exp       go to state 48
    vtupleExpr      go to state 49
    vstructExpr     go to state 50
    primary_exp     go to state 51
    int_expr        go to state 52
    stringls        go to state 53
    if_exp          go to state 54
    chain_exp       go to state 55
    lambda_exp      go to state 56
    postfix_exp     go to state 57
    tcall_exp       go to state 58
    vcall_exp       go to state 59
    dot_name_exp    go to state 60
    dot_index_exp   go to state 61
    unary_exp       go to state 62
    unary_op        go to state 63
    binary_exp      go to state 64
    mul_binary_exp  go to state 65
    add_binary_exp  go to state 66
    cmp_binary_exp  go to state 67
    eq_binary_exp   go to state 68
    and_binary_exp  go to state 69
    xor_binary_exp  go to state 70
    or_binary_exp   go to state 71


State 319

  106 dot_name_exp: postfix_exp "." "<TypeId>" "(" expr_cl0 ")" •

    $default  reduce using rule 106 (dot_name_exp)


State 320

  161 tuple_type_spec: "(" type_spec "," ")" •

    $default  reduce using rule 161 (tuple_type_spec)


State 321

  150 type_spec_cl2: type_spec "," type_spec •

    $default  reduce using rule 150 (type_spec_cl2)


State 322

  151 type_spec_cl2: type_spec_cl2 "," type_spec •

    $default  reduce using rule 151 (type_spec_cl2)


State 323

  167 tcall_type_spec: postfix_type_spec "[" targ_cl "]" •

    $default  reduce using rule 167 (tcall_type_spec)


State 324

   10 sub_mod_stmt: "sub" "<TypeId>" "{" mod_content "}" •

    $default  reduce using rule 10 (sub_mod_stmt)


State 325

   11 sub_mod_stmt: "sub" "<TypeId>" tpattern_seq "{" mod_content • "}"
   13 mod_content: mod_content • mod_content_stmt ";"

    "<val_id>"  shift, and go to state 24
    "<TypeId>"  shift, and go to state 10
    "sub"       shift, and go to state 125
    "}"         shift, and go to state 341

    sub_mod_stmt        go to state 126
    mod_content_stmt    go to state 202
    mod_val_stmt        go to state 129
    mod_type_stmt       go to state 130
    mod_enum_stmt       go to state 131
    mod_typeclass_stmt  go to state 132
    tid                 go to state 133
    vid                 go to state 134


State 326

  184 postfix_class_spec: postfix_class_spec "[" • targ_cl "]"

    "<val_id>"               shift, and go to state 24
    "<TypeId>"               shift, and go to state 10
    "if"                     shift, and go to state 25
    "fn"                     shift, and go to state 26
    "Fn"                     shift, and go to state 177
    "not"                    shift, and go to state 27
    "42"                     shift, and go to state 28
    "0x2a"                   shift, and go to state 29
    "42u"                    shift, and go to state 30
    "0x2Au"                  shift, and go to state 31
    "4.2"                    shift, and go to state 32
    "\"dq-string-literal\""  shift, and go to state 33
    "'sq-string-literal'"    shift, and go to state 34
    "("                      shift, and go to state 178
    "{"                      shift, and go to state 36
    "*"                      shift, and go to state 37
    "+"                      shift, and go to state 38
    "-"                      shift, and go to state 39
    "^"                      shift, and go to state 40

    tid                go to state 179
    vid                go to state 42
    floatl             go to state 43
    mod_prefix         go to state 180
    expr               go to state 181
    bracketed_exp      go to state 46
    unit_exp           go to state 47
    paren_exp          go to state 48
    vtupleExpr         go to state 49
    vstructExpr        go to state 50
    primary_exp        go to state 51
    int_expr           go to state 52
    stringls           go to state 53
    if_exp             go to state 54
    chain_exp          go to state 55
    lambda_exp         go to state 56
    postfix_exp        go to state 57
    tcall_exp          go to state 58
    vcall_exp          go to state 59
    dot_name_exp       go to state 60
    dot_index_exp      go to state 61
    unary_exp          go to state 62
    unary_op           go to state 63
    binary_exp         go to state 64
    mul_binary_exp     go to state 65
    add_binary_exp     go to state 66
    cmp_binary_exp     go to state 67
    eq_binary_exp      go to state 68
    and_binary_exp     go to state 69
    xor_binary_exp     go to state 70
    or_binary_exp      go to state 71
    type_spec          go to state 182
    primary_type_spec  go to state 183
    paren_type_spec    go to state 184
    tuple_type_spec    go to state 185
    mod_prefix_tid     go to state 186
    fn_type_spec       go to state 187
    postfix_type_spec  go to state 188
    tcall_type_spec    go to state 189
    unary_type_spec    go to state 190
    targ               go to state 191
    targ_cl            go to state 342


State 327

  205 tpattern_field_cl: tpattern_field_cl "," tpattern_field •

    $default  reduce using rule 205 (tpattern_field_cl)


State 328

  152 struct_type_spec_field: vid type_spec •

    $default  reduce using rule 152 (struct_type_spec_field)


State 329

  154 struct_type_spec_field_cl: struct_type_spec_field_cl "," • struct_type_spec_field

    "<val_id>"  shift, and go to state 24

    vid                     go to state 304
    struct_type_spec_field  go to state 343


State 330

  171 struct_type_spec: "{" struct_type_spec_field_cl "}" •

    $default  reduce using rule 171 (struct_type_spec)


State 331

  199 tpattern: "!" "[" tpattern_field_cl "]" •

    $default  reduce using rule 199 (tpattern)


State 332

   29 unprefixed_enum_field_pl: unprefixed_enum_field_pl "|" enum_field •

    $default  reduce using rule 29 (unprefixed_enum_field_pl)


State 333

   31 enum_field: tid "(" ")" •

    $default  reduce using rule 31 (enum_field)


State 334

  148 type_spec_cl1: type_spec •

    $default  reduce using rule 148 (type_spec_cl1)


State 335

   32 enum_field: tid "(" type_spec_cl1 • ")"
  149 type_spec_cl1: type_spec_cl1 • "," type_spec

    ","  shift, and go to state 344
    ")"  shift, and go to state 345


State 336

   33 mod_typeclass_stmt: tid ":-" "<" tid class_spec • ">" "{" type_query_exp_sl "}"

    ">"  shift, and go to state 346


State 337

   34 mod_typeclass_stmt: tid tpattern_seq ":-" "<" tid • class_spec ">" "{" type_query_exp_sl "}"

    "<TypeId>"  shift, and go to state 10

    tid                 go to state 297
    class_spec          go to state 347
    primary_class_spec  go to state 299
    postfix_class_spec  go to state 300


State 338

   21 mod_val_stmt: vid type_spec "from" tid stringl •

    $default  reduce using rule 21 (mod_val_stmt)


State 339

   22 mod_val_stmt: vid tpattern_seq type_spec "from" tid • stringl

    "\"dq-string-literal\""  shift, and go to state 21
    "'sq-string-literal'"    shift, and go to state 22

    stringl  go to state 348


State 340

   57 expr_cl0: expr_cl0 "," expr •

    $default  reduce using rule 57 (expr_cl0)


State 341

   11 sub_mod_stmt: "sub" "<TypeId>" tpattern_seq "{" mod_content "}" •

    $default  reduce using rule 11 (sub_mod_stmt)


State 342

  175 targ_cl: targ_cl • "," targ
  184 postfix_class_spec: postfix_class_spec "[" targ_cl • "]"

    ","  shift, and go to state 249
    "]"  shift, and go to state 349


State 343

  154 struct_type_spec_field_cl: struct_type_spec_field_cl "," struct_type_spec_field •

    $default  reduce using rule 154 (struct_type_spec_field_cl)


State 344

  149 type_spec_cl1: type_spec_cl1 "," • type_spec

    "<TypeId>"  shift, and go to state 10
    "Fn"        shift, and go to state 177
    "("         shift, and go to state 212

    tid                go to state 179
    mod_prefix         go to state 214
    type_spec          go to state 350
    primary_type_spec  go to state 183
    paren_type_spec    go to state 184
    tuple_type_spec    go to state 185
    mod_prefix_tid     go to state 186
    fn_type_spec       go to state 187
    postfix_type_spec  go to state 188
    tcall_type_spec    go to state 189
    unary_type_spec    go to state 190


State 345

   32 enum_field: tid "(" type_spec_cl1 ")" •

    $default  reduce using rule 32 (enum_field)


State 346

   33 mod_typeclass_stmt: tid ":-" "<" tid class_spec ">" • "{" type_query_exp_sl "}"

    "{"  shift, and go to state 351


State 347

   34 mod_typeclass_stmt: tid tpattern_seq ":-" "<" tid class_spec • ">" "{" type_query_exp_sl "}"

    ">"  shift, and go to state 352


State 348

   22 mod_val_stmt: vid tpattern_seq type_spec "from" tid stringl •

    $default  reduce using rule 22 (mod_val_stmt)


State 349

  184 postfix_class_spec: postfix_class_spec "[" targ_cl "]" •

    $default  reduce using rule 184 (postfix_class_spec)


State 350

  149 type_spec_cl1: type_spec_cl1 "," type_spec •

    $default  reduce using rule 149 (type_spec_cl1)


State 351

   33 mod_typeclass_stmt: tid ":-" "<" tid class_spec ">" "{" • type_query_exp_sl "}"

    "<TypeId>"  shift, and go to state 10
    "Fn"        shift, and go to state 177
    "("         shift, and go to state 212

    tid                go to state 179
    mod_prefix         go to state 214
    type_query_exp_sl  go to state 353
    type_query_exp     go to state 354
    type_spec          go to state 355
    primary_type_spec  go to state 183
    paren_type_spec    go to state 184
    tuple_type_spec    go to state 185
    mod_prefix_tid     go to state 186
    fn_type_spec       go to state 187
    postfix_type_spec  go to state 188
    tcall_type_spec    go to state 189
    unary_type_spec    go to state 190


State 352

   34 mod_typeclass_stmt: tid tpattern_seq ":-" "<" tid class_spec ">" • "{" type_query_exp_sl "}"

    "{"  shift, and go to state 356


State 353

   33 mod_typeclass_stmt: tid ":-" "<" tid class_spec ">" "{" type_query_exp_sl • "}"
   61 type_query_exp_sl: type_query_exp_sl • type_query_exp ";"

    "<TypeId>"  shift, and go to state 10
    "Fn"        shift, and go to state 177
    "("         shift, and go to state 212
    "}"         shift, and go to state 357

    tid                go to state 179
    mod_prefix         go to state 214
    type_query_exp     go to state 358
    type_spec          go to state 355
    primary_type_spec  go to state 183
    paren_type_spec    go to state 184
    tuple_type_spec    go to state 185
    mod_prefix_tid     go to state 186
    fn_type_spec       go to state 187
    postfix_type_spec  go to state 188
    tcall_type_spec    go to state 189
    unary_type_spec    go to state 190


State 354

   60 type_query_exp_sl: type_query_exp • ";"

    ";"  shift, and go to state 359


State 355

  143 type_query_exp: type_spec • type_query_op long_type_spec

    "::"  shift, and go to state 360
    ":<"  shift, and go to state 361
    ">:"  shift, and go to state 362

    type_query_op  go to state 363


State 356

   34 mod_typeclass_stmt: tid tpattern_seq ":-" "<" tid class_spec ">" "{" • type_query_exp_sl "}"

    "<TypeId>"  shift, and go to state 10
    "Fn"        shift, and go to state 177
    "("         shift, and go to state 212

    tid                go to state 179
    mod_prefix         go to state 214
    type_query_exp_sl  go to state 364
    type_query_exp     go to state 354
    type_spec          go to state 355
    primary_type_spec  go to state 183
    paren_type_spec    go to state 184
    tuple_type_spec    go to state 185
    mod_prefix_tid     go to state 186
    fn_type_spec       go to state 187
    postfix_type_spec  go to state 188
    tcall_type_spec    go to state 189
    unary_type_spec    go to state 190


State 357

   33 mod_typeclass_stmt: tid ":-" "<" tid class_spec ">" "{" type_query_exp_sl "}" •

    $default  reduce using rule 33 (mod_typeclass_stmt)


State 358

   61 type_query_exp_sl: type_query_exp_sl type_query_exp • ";"

    ";"  shift, and go to state 365


State 359

   60 type_query_exp_sl: type_query_exp ";" •

    $default  reduce using rule 60 (type_query_exp_sl)


State 360

  146 type_query_op: "::" •

    $default  reduce using rule 146 (type_query_op)


State 361

  144 type_query_op: ":<" •

    $default  reduce using rule 144 (type_query_op)


State 362

  145 type_query_op: ">:" •

    $default  reduce using rule 145 (type_query_op)


State 363

  143 type_query_exp: type_spec type_query_op • long_type_spec

    "<TypeId>"  shift, and go to state 10
    "Fn"        shift, and go to state 177
    "("         shift, and go to state 212
    "{"         shift, and go to state 258

    tid                go to state 179
    mod_prefix         go to state 214
    primary_type_spec  go to state 183
    paren_type_spec    go to state 184
    tuple_type_spec    go to state 185
    mod_prefix_tid     go to state 186
    fn_type_spec       go to state 187
    postfix_type_spec  go to state 188
    tcall_type_spec    go to state 189
    unary_type_spec    go to state 259
    long_type_spec     go to state 366
    struct_type_spec   go to state 261


State 364

   34 mod_typeclass_stmt: tid tpattern_seq ":-" "<" tid class_spec ">" "{" type_query_exp_sl • "}"
   61 type_query_exp_sl: type_query_exp_sl • type_query_exp ";"

    "<TypeId>"  shift, and go to state 10
    "Fn"        shift, and go to state 177
    "("         shift, and go to state 212
    "}"         shift, and go to state 367

    tid                go to state 179
    mod_prefix         go to state 214
    type_query_exp     go to state 358
    type_spec          go to state 355
    primary_type_spec  go to state 183
    paren_type_spec    go to state 184
    tuple_type_spec    go to state 185
    mod_prefix_tid     go to state 186
    fn_type_spec       go to state 187
    postfix_type_spec  go to state 188
    tcall_type_spec    go to state 189
    unary_type_spec    go to state 190


State 365

   61 type_query_exp_sl: type_query_exp_sl type_query_exp ";" •

    $default  reduce using rule 61 (type_query_exp_sl)


State 366

  143 type_query_exp: type_spec type_query_op long_type_spec •

    $default  reduce using rule 143 (type_query_exp)


State 367

   34 mod_typeclass_stmt: tid tpattern_seq ":-" "<" tid class_spec ">" "{" type_query_exp_sl "}" •

    $default  reduce using rule 34 (mod_typeclass_stmt)
