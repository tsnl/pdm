Terminals unused in grammar

    "<__42__>"
    "match"
    "with"
    ":"
    "&"
    "EOS"
    "<null>"


State 97 conflicts: 1 shift/reduce


Grammar

    0 $accept: script $end

    1 script: scriptContent

    2 scriptContent: scriptContentStmt ";"
    3              | scriptContent scriptContentStmt ";"

    4 scriptContentStmt: mod_stmt
    5                  | import_stmt
    6                  | extern_stmt

    7 mod_stmt: "mod" "<val_id>" "{" moduleContent "}"

    8 moduleContent: moduleContentStmt ";"
    9              | moduleContent moduleContentStmt ";"

   10 chain_prefix_stmt: const_stmt
   11                  | val_stmt
   12                  | var_stmt
   13                  | set_stmt
   14                  | discard_stmt

   15 const_stmt: "const" lpattern_naked "=" expr

   16 val_stmt: "val" lpattern_naked "=" expr

   17 var_stmt: "var" lpattern_naked "=" expr

   18 set_stmt: "set" expr "=" expr

   19 discard_stmt: "discard" expr

   20 moduleContentStmt: fn_stmt
   21                  | type_stmt
   22                  | enum_stmt
   23                  | typeclass_stmt
   24                  | import_stmt
   25                  | mod_stmt
   26                  | using_stmt
   27                  | extern_stmt

   28 fn_stmt: "fn" vid vpattern "->" typespec "=" bracketed_exp
   29        | "fn" vid tpattern_seq vpattern "->" typespec "=" bracketed_exp
   30        | "fn" vid vpattern "=" bracketed_exp
   31        | "fn" vid tpattern_seq vpattern "=" bracketed_exp

   32 type_stmt: "type" tid "=" long_typespec
   33          | "type" tid tpattern_seq "=" long_typespec

   34 enum_stmt: "type" tid enum_field_pl
   35          | "type" tid tpattern_seq enum_field_pl

   36 enum_field_pl: "|" unprefixed_enum_field_pl

   37 unprefixed_enum_field_pl: enum_field
   38                         | unprefixed_enum_field_pl "|" enum_field

   39 enum_field: tid
   40           | tid "(" ")"
   41           | tid "(" typespec_cl1 ")"

   42 typeclass_stmt: "typeclass" tid "<" tid typespec ">" "=" "{" type_query_exp_sl "}"
   43               | "typeclass" tid "<" tid typespec ">" tpattern_seq "=" "{" type_query_exp_sl "}"

   44 using_stmt: "using" vid "." "*"
   45           | "using" vid "." vid "*"

   46 import_stmt: "import" vid "from" stringl "type" stringl

   47 extern_stmt: "extern" vid "from" expr

   48 tid: "<TypeId>"

   49 vid: "<val_id>"

   50 floatl: "4.2"

   51 stringl: "'sq-string-literal'"
   52        | "\"dq-string-literal\""

   53 expr: binary_exp

   54 long_exp: type_query_exp
   55         | expr

   56 expr_cl2: expr "," expr
   57         | expr_cl2 "," expr

   58 type_query_exp_sl: type_query_exp ";"
   59                  | type_query_exp_sl type_query_exp ";"

   60 bracketed_exp: unit_exp
   61              | paren_exp
   62              | vtupleExpr
   63              | vstructExpr
   64              | chain_exp

   65 unit_exp: "(" ")"
   66         | "{" "}"

   67 paren_exp: "(" long_exp ")"

   68 vtupleExpr: "(" expr "," ")"
   69           | "(" expr_cl2 ")"

   70 vstructExpr: "{" struct_exp_field_cl "}"

   71 primary_exp: bracketed_exp
   72            | vid
   73            | int_expr
   74            | floatl
   75            | stringls
   76            | if_exp
   77            | lambda_exp

   78 int_expr: "42"
   79         | "0x2a"

   80 stringls: "'sq-string-literal'"
   81         | "\"dq-string-literal\""
   82         | stringls "'sq-string-literal'"
   83         | stringls "\"dq-string-literal\""

   84 if_exp: "if" bracketed_exp "then" bracketed_exp
   85       | "if" bracketed_exp "then" bracketed_exp "else" primary_exp

   86 chain_exp: "{" expr "}"
   87          | "{" chain_prefix "}"
   88          | "{" chain_prefix expr "}"

   89 chain_prefix: chain_prefix_stmt ";"
   90             | chain_prefix chain_prefix_stmt ";"

   91 lambda_exp: "fn" vpattern "=" bracketed_exp

   92 postfix_exp: primary_exp
   93            | tcall_exp
   94            | vcall_exp
   95            | dot_name_exp
   96            | dot_index_exp

   97 tcall_exp: postfix_exp "[" targ_cl "]"

   98 vcall_exp: postfix_exp "(" ")"
   99          | postfix_exp "(" varg_cl ")"

  100 dot_name_exp: postfix_exp "." "<val_id>"
  101             | postfix_exp "." "<TypeId>"

  102 dot_index_exp: postfix_exp "." int_expr
  103              | postfix_exp "." bracketed_exp

  104 unary_exp: postfix_exp
  105          | unary_op unary_exp

  106 unary_op: "+"
  107         | "-"
  108         | "*"
  109         | "^"
  110         | "not"

  111 binary_exp: or_binary_exp

  112 mul_binary_op: "*"
  113              | "/"
  114              | "%"

  115 mul_binary_exp: unary_exp
  116               | mul_binary_exp mul_binary_op unary_exp

  117 add_binary_op: "+"
  118              | "-"

  119 add_binary_exp: mul_binary_exp
  120               | add_binary_exp add_binary_op mul_binary_exp

  121 cmp_binary_op: "<"
  122              | "<="
  123              | ">"
  124              | ">="

  125 cmp_binary_exp: add_binary_exp
  126               | cmp_binary_exp cmp_binary_op add_binary_exp

  127 eq_binary_op: "=="
  128             | "!="

  129 eq_binary_exp: cmp_binary_exp
  130              | eq_binary_exp eq_binary_op cmp_binary_exp

  131 and_binary_exp: eq_binary_exp
  132               | and_binary_exp "and" eq_binary_exp

  133 xor_binary_exp: and_binary_exp
  134               | xor_binary_exp "xor" and_binary_exp

  135 or_binary_exp: xor_binary_exp
  136              | or_binary_exp "or" xor_binary_exp

  137 type_query_exp: typespec type_query_op typespec

  138 type_query_op: ":<"
  139              | ">:"
  140              | "::"

  141 typespec: unary_typespec

  142 typespec_cl1: typespec
  143             | typespec_cl1 "," typespec

  144 typespec_cl2: typespec "," typespec
  145             | typespec_cl2 "," typespec

  146 struct_typespec_field: vid typespec

  147 struct_typespec_field_cl: struct_typespec_field
  148                         | struct_typespec_field_cl "," struct_typespec_field

  149 primary_typespec: tid
  150                 | paren_typespec
  151                 | tuple_typespec
  152                 | mod_prefix_tid
  153                 | fn_typespec

  154 paren_typespec: "(" typespec ")"

  155 tuple_typespec: "(" typespec "," ")"
  156               | "(" typespec_cl2 ")"

  157 mod_prefix_tid: mod_prefix tid

  158 mod_prefix: vid "."
  159           | mod_prefix vid "."

  160 fn_typespec: "Fn" vpattern primary_typespec

  161 postfix_typespec: primary_typespec
  162                 | tcall_typespec
  163                 | dot_typespec

  164 tcall_typespec: postfix_typespec "[" targ_cl "]"

  165 dot_typespec: postfix_typespec "." "<val_id>"

  166 unary_typespec: postfix_typespec

  167 long_typespec: unary_typespec
  168              | struct_typespec

  169 struct_typespec: "{" struct_typespec_field_cl "}"

  170 targ: typespec
  171     | expr

  172 targ_cl: targ
  173        | targ_cl "," targ

  174 varg: expr
  175     | "out" expr
  176     | "inout" expr

  177 varg_cl: varg
  178        | varg_cl "," varg

  179 struct_exp_field: vid "=" expr

  180 vpattern_field: vid typespec
  181               | "out" vid typespec
  182               | "inout" vid typespec

  183 lpattern_field: vid typespec
  184               | vid

  185 tpattern_field: vid typespec
  186               | tid typespec

  187 lpattern: "(" lpattern_field_cl ")"
  188         | "(" ")"

  189 lpattern_naked: lpattern_field
  190               | lpattern

  191 vpattern: "(" vpattern_field_cl ")"
  192         | "(" ")"

  193 tpattern: "[" tpattern_field_cl "]"
  194         | "!" "[" tpattern_field_cl "]"

  195 vpattern_field_cl: vpattern_field
  196                  | vpattern_field_cl "," vpattern_field

  197 lpattern_field_cl: lpattern_field
  198                  | lpattern_field_cl "," lpattern_field

  199 tpattern_field_cl: tpattern_field
  200                  | tpattern_field_cl "," tpattern_field

  201 struct_exp_field_cl: struct_exp_field
  202                    | struct_exp_field_cl "," struct_exp_field

  203 tpattern_seq: tpattern
  204             | tpattern_seq tpattern


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    "<val_id>" <TokenInfo> (258) 7 49 100 165
    "<TypeId>" <TokenInfo> (259) 48 101
    "<__42__>" <TokenInfo> (260)
    "using" (261) 44 45
    "mod" (262) 7
    "if" (263) 84 85
    "then" (264) 84 85
    "else" (265) 85
    "match" (266)
    "with" (267)
    "import" (268) 46
    "extern" (269) 47
    "from" (270) 46 47
    "const" (271) 15
    "val" (272) 16
    "var" (273) 17
    "set" (274) 18
    "fn" (275) 28 29 30 31 91
    "Fn" (276) 160
    "type" (277) 32 33 34 35 46
    "and" (278) 132
    "xor" (279) 134
    "or" (280) 136
    "not" (281) 110
    "typeclass" (282) 42 43
    "out" (283) 175 181
    "inout" (284) 176 182
    "discard" (285) 19
    "42" <TokenInfo> (286) 78
    "0x2a" <TokenInfo> (287) 79
    "4.2" <TokenInfo> (288) 50
    "\"dq-string-literal\"" <TokenInfo> (289) 52 81 83
    "'sq-string-literal'" <TokenInfo> (290) 51 80 82
    "." (291) 44 45 100 101 102 103 158 159 165
    ":" (292)
    "," (293) 56 57 68 143 144 145 148 155 173 178 196 198 200 202
    ";" (294) 2 3 8 9 58 59 89 90
    "::" (295) 140
    "(" (296) 40 41 65 67 68 69 98 99 154 155 156 187 188 191 192
    ")" (297) 40 41 65 67 68 69 98 99 154 155 156 187 188 191 192
    "[" (298) 97 164 193 194
    "]" (299) 97 164 193 194
    "{" (300) 7 42 43 66 70 86 87 88 169
    "}" (301) 7 42 43 66 70 86 87 88 169
    "->" (302) 28 29
    "*" (303) 44 45 108 112
    "/" (304) 113
    "%" (305) 114
    "+" (306) 106 117
    "-" (307) 107 118
    "<" (308) 42 43 121
    "<=" (309) 122
    ">" (310) 42 43 123
    ">=" (311) 124
    "=" (312) 15 16 17 18 28 29 30 31 32 33 42 43 91 179
    "==" (313) 127
    "!=" (314) 128
    "^" (315) 109
    "&" (316)
    "!" (317) 194
    "|" (318) 36 38
    "EOS" (319)
    ":<" (320) 138
    ">:" (321) 139
    "<null>" (322)


Nonterminals, with rules where they appear

    $accept (68)
        on left: 0
    script <pdm::ast::Script*> (69)
        on left: 1
        on right: 0
    scriptContent <std::vector<pdm::ast::Stmt*>> (70)
        on left: 2 3
        on right: 1 3
    scriptContentStmt <pdm::ast::Stmt*> (71)
        on left: 4 5 6
        on right: 2 3
    mod_stmt <pdm::ast::Stmt*> (72)
        on left: 7
        on right: 4 25
    moduleContent <std::vector<pdm::ast::Stmt*>> (73)
        on left: 8 9
        on right: 7 9
    chain_prefix_stmt <pdm::ast::Stmt*> (74)
        on left: 10 11 12 13 14
        on right: 89 90
    const_stmt <pdm::ast::Stmt*> (75)
        on left: 15
        on right: 10
    val_stmt <pdm::ast::Stmt*> (76)
        on left: 16
        on right: 11
    var_stmt <pdm::ast::Stmt*> (77)
        on left: 17
        on right: 12
    set_stmt <pdm::ast::Stmt*> (78)
        on left: 18
        on right: 13
    discard_stmt <pdm::ast::Stmt*> (79)
        on left: 19
        on right: 14
    moduleContentStmt <pdm::ast::Stmt*> (80)
        on left: 20 21 22 23 24 25 26 27
        on right: 8 9
    fn_stmt <pdm::ast::Stmt*> (81)
        on left: 28 29 30 31
        on right: 20
    type_stmt <pdm::ast::Stmt*> (82)
        on left: 32 33
        on right: 21
    enum_stmt <pdm::ast::Stmt*> (83)
        on left: 34 35
        on right: 22
    enum_field_pl <std::vector<pdm::ast::EnumStmt::Field*>> (84)
        on left: 36
        on right: 34 35
    unprefixed_enum_field_pl <std::vector<pdm::ast::EnumStmt::Field*>> (85)
        on left: 37 38
        on right: 36 38
    enum_field <pdm::ast::EnumStmt::Field*> (86)
        on left: 39 40 41
        on right: 37 38
    typeclass_stmt <pdm::ast::Stmt*> (87)
        on left: 42 43
        on right: 23
    using_stmt <pdm::ast::Stmt*> (88)
        on left: 44 45
        on right: 26
    import_stmt <pdm::ast::Stmt*> (89)
        on left: 46
        on right: 5 24
    extern_stmt <pdm::ast::Stmt*> (90)
        on left: 47
        on right: 6 27
    tid <TokenInfo> (91)
        on left: 48
        on right: 32 33 34 35 39 40 41 42 43 149 157 186
    vid <TokenInfo> (92)
        on left: 49
        on right: 28 29 30 31 44 45 46 47 72 146 158 159 179 180 181 182 183 184 185
    floatl <TokenInfo> (93)
        on left: 50
        on right: 74
    stringl <TokenInfo> (94)
        on left: 51 52
        on right: 46
    expr <pdm::ast::Exp*> (95)
        on left: 53
        on right: 15 16 17 18 19 47 55 56 57 68 86 88 171 174 175 176 179
    long_exp <pdm::ast::Exp*> (96)
        on left: 54 55
        on right: 67
    expr_cl2 <std::vector<pdm::ast::Exp*>> (97)
        on left: 56 57
        on right: 57 69
    type_query_exp_sl <std::vector<pdm::ast::TypeQueryExp*>> (98)
        on left: 58 59
        on right: 42 43 59
    bracketed_exp <pdm::ast::Exp*> (99)
        on left: 60 61 62 63 64
        on right: 28 29 30 31 71 84 85 91 103
    unit_exp <pdm::ast::Exp*> (100)
        on left: 65 66
        on right: 60
    paren_exp <pdm::ast::Exp*> (101)
        on left: 67
        on right: 61
    vtupleExpr <pdm::ast::Exp*> (102)
        on left: 68 69
        on right: 62
    vstructExpr <pdm::ast::Exp*> (103)
        on left: 70
        on right: 63
    primary_exp <pdm::ast::Exp*> (104)
        on left: 71 72 73 74 75 76 77
        on right: 85 92
    int_expr <pdm::ast::Exp*> (105)
        on left: 78 79
        on right: 73 102
    stringls <std::vector<pdm::ast::StringExp::Piece>> (106)
        on left: 80 81 82 83
        on right: 75 82 83
    if_exp <pdm::ast::Exp*> (107)
        on left: 84 85
        on right: 76
    chain_exp <pdm::ast::Exp*> (108)
        on left: 86 87 88
        on right: 64
    chain_prefix <std::vector<pdm::ast::Stmt*>> (109)
        on left: 89 90
        on right: 87 88 90
    lambda_exp <pdm::ast::Exp*> (110)
        on left: 91
        on right: 77
    postfix_exp <pdm::ast::Exp*> (111)
        on left: 92 93 94 95 96
        on right: 97 98 99 100 101 102 103 104
    tcall_exp <pdm::ast::Exp*> (112)
        on left: 97
        on right: 93
    vcall_exp <pdm::ast::Exp*> (113)
        on left: 98 99
        on right: 94
    dot_name_exp <pdm::ast::Exp*> (114)
        on left: 100 101
        on right: 95
    dot_index_exp <pdm::ast::Exp*> (115)
        on left: 102 103
        on right: 96
    unary_exp <pdm::ast::Exp*> (116)
        on left: 104 105
        on right: 105 115 116
    unary_op <pdm::ast::UnaryOperator> (117)
        on left: 106 107 108 109 110
        on right: 105
    binary_exp <pdm::ast::Exp*> (118)
        on left: 111
        on right: 53
    mul_binary_op <pdm::ast::BinaryOperator> (119)
        on left: 112 113 114
        on right: 116
    mul_binary_exp <pdm::ast::Exp*> (120)
        on left: 115 116
        on right: 116 119 120
    add_binary_op <pdm::ast::BinaryOperator> (121)
        on left: 117 118
        on right: 120
    add_binary_exp <pdm::ast::Exp*> (122)
        on left: 119 120
        on right: 120 125 126
    cmp_binary_op <pdm::ast::BinaryOperator> (123)
        on left: 121 122 123 124
        on right: 126
    cmp_binary_exp <pdm::ast::Exp*> (124)
        on left: 125 126
        on right: 126 129 130
    eq_binary_op <pdm::ast::BinaryOperator> (125)
        on left: 127 128
        on right: 130
    eq_binary_exp <pdm::ast::Exp*> (126)
        on left: 129 130
        on right: 130 131 132
    and_binary_exp <pdm::ast::Exp*> (127)
        on left: 131 132
        on right: 132 133 134
    xor_binary_exp <pdm::ast::Exp*> (128)
        on left: 133 134
        on right: 134 135 136
    or_binary_exp <pdm::ast::Exp*> (129)
        on left: 135 136
        on right: 111 136
    type_query_exp <pdm::ast::TypeQueryExp*> (130)
        on left: 137
        on right: 54 58 59
    type_query_op <pdm::ast::TypeQueryKind> (131)
        on left: 138 139 140
        on right: 137
    typespec <pdm::ast::Typespec*> (132)
        on left: 141
        on right: 28 29 42 43 137 142 143 144 145 146 154 155 170 180 181 182 183 185 186
    typespec_cl1 <std::vector<pdm::ast::Typespec*>> (133)
        on left: 142 143
        on right: 41 143
    typespec_cl2 <std::vector<pdm::ast::Typespec*>> (134)
        on left: 144 145
        on right: 145 156
    struct_typespec_field <pdm::ast::StructTypespec::Field*> (135)
        on left: 146
        on right: 147 148
    struct_typespec_field_cl <std::vector<pdm::ast::StructTypespec::Field*>> (136)
        on left: 147 148
        on right: 148 169
    primary_typespec <pdm::ast::Typespec*> (137)
        on left: 149 150 151 152 153
        on right: 160 161
    paren_typespec <pdm::ast::Typespec*> (138)
        on left: 154
        on right: 150
    tuple_typespec <pdm::ast::Typespec*> (139)
        on left: 155 156
        on right: 151
    mod_prefix_tid <pdm::ast::Typespec*> (140)
        on left: 157
        on right: 152
    mod_prefix <std::vector<pdm::intern::String>> (141)
        on left: 158 159
        on right: 157 159
    fn_typespec <pdm::ast::Typespec*> (142)
        on left: 160
        on right: 153
    postfix_typespec <pdm::ast::Typespec*> (143)
        on left: 161 162 163
        on right: 164 165 166
    tcall_typespec <pdm::ast::Typespec*> (144)
        on left: 164
        on right: 162
    dot_typespec <pdm::ast::Typespec*> (145)
        on left: 165
        on right: 163
    unary_typespec <pdm::ast::Typespec*> (146)
        on left: 166
        on right: 141 167
    long_typespec <pdm::ast::Typespec*> (147)
        on left: 167 168
        on right: 32 33
    struct_typespec <pdm::ast::Typespec*> (148)
        on left: 169
        on right: 168
    targ <pdm::ast::TArg*> (149)
        on left: 170 171
        on right: 172 173
    targ_cl <std::vector<pdm::ast::TArg*>> (150)
        on left: 172 173
        on right: 97 164 173
    varg <pdm::ast::VArg*> (151)
        on left: 174 175 176
        on right: 177 178
    varg_cl <std::vector<pdm::ast::VArg*>> (152)
        on left: 177 178
        on right: 99 178
    struct_exp_field <pdm::ast::StructExp::Field*> (153)
        on left: 179
        on right: 201 202
    vpattern_field <pdm::ast::VPattern::Field*> (154)
        on left: 180 181 182
        on right: 195 196
    lpattern_field <pdm::ast::LPattern::Field*> (155)
        on left: 183 184
        on right: 189 197 198
    tpattern_field <pdm::ast::TPattern::Field*> (156)
        on left: 185 186
        on right: 199 200
    lpattern <pdm::ast::LPattern*> (157)
        on left: 187 188
        on right: 190
    lpattern_naked <pdm::ast::LPattern*> (158)
        on left: 189 190
        on right: 15 16 17
    vpattern <pdm::ast::VPattern*> (159)
        on left: 191 192
        on right: 28 29 30 31 91 160
    tpattern <pdm::ast::TPattern*> (160)
        on left: 193 194
        on right: 203 204
    vpattern_field_cl <std::vector<pdm::ast::VPattern::Field*>> (161)
        on left: 195 196
        on right: 191 196
    lpattern_field_cl <std::vector<pdm::ast::LPattern::Field*>> (162)
        on left: 197 198
        on right: 187 198
    tpattern_field_cl <std::vector<pdm::ast::TPattern::Field*>> (163)
        on left: 199 200
        on right: 193 194 200
    struct_exp_field_cl <std::vector<pdm::ast::StructExp::Field*>> (164)
        on left: 201 202
        on right: 70 202
    tpattern_seq <std::vector<pdm::ast::TPattern*>> (165)
        on left: 203 204
        on right: 29 31 33 35 43 204


State 0

    0 $accept: • script $end

    "mod"     shift, and go to state 1
    "import"  shift, and go to state 2
    "extern"  shift, and go to state 3

    script             go to state 4
    scriptContent      go to state 5
    scriptContentStmt  go to state 6
    mod_stmt           go to state 7
    import_stmt        go to state 8
    extern_stmt        go to state 9


State 1

    7 mod_stmt: "mod" • "<val_id>" "{" moduleContent "}"

    "<val_id>"  shift, and go to state 10


State 2

   46 import_stmt: "import" • vid "from" stringl "type" stringl

    "<val_id>"  shift, and go to state 11

    vid  go to state 12


State 3

   47 extern_stmt: "extern" • vid "from" expr

    "<val_id>"  shift, and go to state 11

    vid  go to state 13


State 4

    0 $accept: script • $end

    $end  shift, and go to state 14


State 5

    1 script: scriptContent •
    3 scriptContent: scriptContent • scriptContentStmt ";"

    "mod"     shift, and go to state 1
    "import"  shift, and go to state 2
    "extern"  shift, and go to state 3

    $default  reduce using rule 1 (script)

    scriptContentStmt  go to state 15
    mod_stmt           go to state 7
    import_stmt        go to state 8
    extern_stmt        go to state 9


State 6

    2 scriptContent: scriptContentStmt • ";"

    ";"  shift, and go to state 16


State 7

    4 scriptContentStmt: mod_stmt •

    $default  reduce using rule 4 (scriptContentStmt)


State 8

    5 scriptContentStmt: import_stmt •

    $default  reduce using rule 5 (scriptContentStmt)


State 9

    6 scriptContentStmt: extern_stmt •

    $default  reduce using rule 6 (scriptContentStmt)


State 10

    7 mod_stmt: "mod" "<val_id>" • "{" moduleContent "}"

    "{"  shift, and go to state 17


State 11

   49 vid: "<val_id>" •

    $default  reduce using rule 49 (vid)


State 12

   46 import_stmt: "import" vid • "from" stringl "type" stringl

    "from"  shift, and go to state 18


State 13

   47 extern_stmt: "extern" vid • "from" expr

    "from"  shift, and go to state 19


State 14

    0 $accept: script $end •

    $default  accept


State 15

    3 scriptContent: scriptContent scriptContentStmt • ";"

    ";"  shift, and go to state 20


State 16

    2 scriptContent: scriptContentStmt ";" •

    $default  reduce using rule 2 (scriptContent)


State 17

    7 mod_stmt: "mod" "<val_id>" "{" • moduleContent "}"

    "using"      shift, and go to state 21
    "mod"        shift, and go to state 1
    "import"     shift, and go to state 2
    "extern"     shift, and go to state 3
    "fn"         shift, and go to state 22
    "type"       shift, and go to state 23
    "typeclass"  shift, and go to state 24

    mod_stmt           go to state 25
    moduleContent      go to state 26
    moduleContentStmt  go to state 27
    fn_stmt            go to state 28
    type_stmt          go to state 29
    enum_stmt          go to state 30
    typeclass_stmt     go to state 31
    using_stmt         go to state 32
    import_stmt        go to state 33
    extern_stmt        go to state 34


State 18

   46 import_stmt: "import" vid "from" • stringl "type" stringl

    "\"dq-string-literal\""  shift, and go to state 35
    "'sq-string-literal'"    shift, and go to state 36

    stringl  go to state 37


State 19

   47 extern_stmt: "extern" vid "from" • expr

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "fn"                     shift, and go to state 39
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    vid             go to state 52
    floatl          go to state 53
    expr            go to state 54
    bracketed_exp   go to state 55
    unit_exp        go to state 56
    paren_exp       go to state 57
    vtupleExpr      go to state 58
    vstructExpr     go to state 59
    primary_exp     go to state 60
    int_expr        go to state 61
    stringls        go to state 62
    if_exp          go to state 63
    chain_exp       go to state 64
    lambda_exp      go to state 65
    postfix_exp     go to state 66
    tcall_exp       go to state 67
    vcall_exp       go to state 68
    dot_name_exp    go to state 69
    dot_index_exp   go to state 70
    unary_exp       go to state 71
    unary_op        go to state 72
    binary_exp      go to state 73
    mul_binary_exp  go to state 74
    add_binary_exp  go to state 75
    cmp_binary_exp  go to state 76
    eq_binary_exp   go to state 77
    and_binary_exp  go to state 78
    xor_binary_exp  go to state 79
    or_binary_exp   go to state 80


State 20

    3 scriptContent: scriptContent scriptContentStmt ";" •

    $default  reduce using rule 3 (scriptContent)


State 21

   44 using_stmt: "using" • vid "." "*"
   45           | "using" • vid "." vid "*"

    "<val_id>"  shift, and go to state 11

    vid  go to state 81


State 22

   28 fn_stmt: "fn" • vid vpattern "->" typespec "=" bracketed_exp
   29        | "fn" • vid tpattern_seq vpattern "->" typespec "=" bracketed_exp
   30        | "fn" • vid vpattern "=" bracketed_exp
   31        | "fn" • vid tpattern_seq vpattern "=" bracketed_exp

    "<val_id>"  shift, and go to state 11

    vid  go to state 82


State 23

   32 type_stmt: "type" • tid "=" long_typespec
   33          | "type" • tid tpattern_seq "=" long_typespec
   34 enum_stmt: "type" • tid enum_field_pl
   35          | "type" • tid tpattern_seq enum_field_pl

    "<TypeId>"  shift, and go to state 83

    tid  go to state 84


State 24

   42 typeclass_stmt: "typeclass" • tid "<" tid typespec ">" "=" "{" type_query_exp_sl "}"
   43               | "typeclass" • tid "<" tid typespec ">" tpattern_seq "=" "{" type_query_exp_sl "}"

    "<TypeId>"  shift, and go to state 83

    tid  go to state 85


State 25

   25 moduleContentStmt: mod_stmt •

    $default  reduce using rule 25 (moduleContentStmt)


State 26

    7 mod_stmt: "mod" "<val_id>" "{" moduleContent • "}"
    9 moduleContent: moduleContent • moduleContentStmt ";"

    "using"      shift, and go to state 21
    "mod"        shift, and go to state 1
    "import"     shift, and go to state 2
    "extern"     shift, and go to state 3
    "fn"         shift, and go to state 22
    "type"       shift, and go to state 23
    "typeclass"  shift, and go to state 24
    "}"          shift, and go to state 86

    mod_stmt           go to state 25
    moduleContentStmt  go to state 87
    fn_stmt            go to state 28
    type_stmt          go to state 29
    enum_stmt          go to state 30
    typeclass_stmt     go to state 31
    using_stmt         go to state 32
    import_stmt        go to state 33
    extern_stmt        go to state 34


State 27

    8 moduleContent: moduleContentStmt • ";"

    ";"  shift, and go to state 88


State 28

   20 moduleContentStmt: fn_stmt •

    $default  reduce using rule 20 (moduleContentStmt)


State 29

   21 moduleContentStmt: type_stmt •

    $default  reduce using rule 21 (moduleContentStmt)


State 30

   22 moduleContentStmt: enum_stmt •

    $default  reduce using rule 22 (moduleContentStmt)


State 31

   23 moduleContentStmt: typeclass_stmt •

    $default  reduce using rule 23 (moduleContentStmt)


State 32

   26 moduleContentStmt: using_stmt •

    $default  reduce using rule 26 (moduleContentStmt)


State 33

   24 moduleContentStmt: import_stmt •

    $default  reduce using rule 24 (moduleContentStmt)


State 34

   27 moduleContentStmt: extern_stmt •

    $default  reduce using rule 27 (moduleContentStmt)


State 35

   52 stringl: "\"dq-string-literal\"" •

    $default  reduce using rule 52 (stringl)


State 36

   51 stringl: "'sq-string-literal'" •

    $default  reduce using rule 51 (stringl)


State 37

   46 import_stmt: "import" vid "from" stringl • "type" stringl

    "type"  shift, and go to state 89


State 38

   84 if_exp: "if" • bracketed_exp "then" bracketed_exp
   85       | "if" • bracketed_exp "then" bracketed_exp "else" primary_exp

    "("  shift, and go to state 46
    "{"  shift, and go to state 47

    bracketed_exp  go to state 90
    unit_exp       go to state 56
    paren_exp      go to state 57
    vtupleExpr     go to state 58
    vstructExpr    go to state 59
    chain_exp      go to state 64


State 39

   91 lambda_exp: "fn" • vpattern "=" bracketed_exp

    "("  shift, and go to state 91

    vpattern  go to state 92


State 40

  110 unary_op: "not" •

    $default  reduce using rule 110 (unary_op)


State 41

   78 int_expr: "42" •

    $default  reduce using rule 78 (int_expr)


State 42

   79 int_expr: "0x2a" •

    $default  reduce using rule 79 (int_expr)


State 43

   50 floatl: "4.2" •

    $default  reduce using rule 50 (floatl)


State 44

   81 stringls: "\"dq-string-literal\"" •

    $default  reduce using rule 81 (stringls)


State 45

   80 stringls: "'sq-string-literal'" •

    $default  reduce using rule 80 (stringls)


State 46

   65 unit_exp: "(" • ")"
   67 paren_exp: "(" • long_exp ")"
   68 vtupleExpr: "(" • expr "," ")"
   69           | "(" • expr_cl2 ")"

    "<val_id>"               shift, and go to state 11
    "<TypeId>"               shift, and go to state 83
    "if"                     shift, and go to state 38
    "fn"                     shift, and go to state 39
    "Fn"                     shift, and go to state 93
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 94
    ")"                      shift, and go to state 95
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    tid               go to state 96
    vid               go to state 97
    floatl            go to state 53
    expr              go to state 98
    long_exp          go to state 99
    expr_cl2          go to state 100
    bracketed_exp     go to state 55
    unit_exp          go to state 56
    paren_exp         go to state 57
    vtupleExpr        go to state 58
    vstructExpr       go to state 59
    primary_exp       go to state 60
    int_expr          go to state 61
    stringls          go to state 62
    if_exp            go to state 63
    chain_exp         go to state 64
    lambda_exp        go to state 65
    postfix_exp       go to state 66
    tcall_exp         go to state 67
    vcall_exp         go to state 68
    dot_name_exp      go to state 69
    dot_index_exp     go to state 70
    unary_exp         go to state 71
    unary_op          go to state 72
    binary_exp        go to state 73
    mul_binary_exp    go to state 74
    add_binary_exp    go to state 75
    cmp_binary_exp    go to state 76
    eq_binary_exp     go to state 77
    and_binary_exp    go to state 78
    xor_binary_exp    go to state 79
    or_binary_exp     go to state 80
    type_query_exp    go to state 101
    typespec          go to state 102
    primary_typespec  go to state 103
    paren_typespec    go to state 104
    tuple_typespec    go to state 105
    mod_prefix_tid    go to state 106
    mod_prefix        go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 112


State 47

   66 unit_exp: "{" • "}"
   70 vstructExpr: "{" • struct_exp_field_cl "}"
   86 chain_exp: "{" • expr "}"
   87          | "{" • chain_prefix "}"
   88          | "{" • chain_prefix expr "}"

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "const"                  shift, and go to state 113
    "val"                    shift, and go to state 114
    "var"                    shift, and go to state 115
    "set"                    shift, and go to state 116
    "fn"                     shift, and go to state 39
    "not"                    shift, and go to state 40
    "discard"                shift, and go to state 117
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    "{"                      shift, and go to state 47
    "}"                      shift, and go to state 118
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    chain_prefix_stmt    go to state 119
    const_stmt           go to state 120
    val_stmt             go to state 121
    var_stmt             go to state 122
    set_stmt             go to state 123
    discard_stmt         go to state 124
    vid                  go to state 125
    floatl               go to state 53
    expr                 go to state 126
    bracketed_exp        go to state 55
    unit_exp             go to state 56
    paren_exp            go to state 57
    vtupleExpr           go to state 58
    vstructExpr          go to state 59
    primary_exp          go to state 60
    int_expr             go to state 61
    stringls             go to state 62
    if_exp               go to state 63
    chain_exp            go to state 64
    chain_prefix         go to state 127
    lambda_exp           go to state 65
    postfix_exp          go to state 66
    tcall_exp            go to state 67
    vcall_exp            go to state 68
    dot_name_exp         go to state 69
    dot_index_exp        go to state 70
    unary_exp            go to state 71
    unary_op             go to state 72
    binary_exp           go to state 73
    mul_binary_exp       go to state 74
    add_binary_exp       go to state 75
    cmp_binary_exp       go to state 76
    eq_binary_exp        go to state 77
    and_binary_exp       go to state 78
    xor_binary_exp       go to state 79
    or_binary_exp        go to state 80
    struct_exp_field     go to state 128
    struct_exp_field_cl  go to state 129


State 48

  108 unary_op: "*" •

    $default  reduce using rule 108 (unary_op)


State 49

  106 unary_op: "+" •

    $default  reduce using rule 106 (unary_op)


State 50

  107 unary_op: "-" •

    $default  reduce using rule 107 (unary_op)


State 51

  109 unary_op: "^" •

    $default  reduce using rule 109 (unary_op)


State 52

   72 primary_exp: vid •

    $default  reduce using rule 72 (primary_exp)


State 53

   74 primary_exp: floatl •

    $default  reduce using rule 74 (primary_exp)


State 54

   47 extern_stmt: "extern" vid "from" expr •

    $default  reduce using rule 47 (extern_stmt)


State 55

   71 primary_exp: bracketed_exp •

    $default  reduce using rule 71 (primary_exp)


State 56

   60 bracketed_exp: unit_exp •

    $default  reduce using rule 60 (bracketed_exp)


State 57

   61 bracketed_exp: paren_exp •

    $default  reduce using rule 61 (bracketed_exp)


State 58

   62 bracketed_exp: vtupleExpr •

    $default  reduce using rule 62 (bracketed_exp)


State 59

   63 bracketed_exp: vstructExpr •

    $default  reduce using rule 63 (bracketed_exp)


State 60

   92 postfix_exp: primary_exp •

    $default  reduce using rule 92 (postfix_exp)


State 61

   73 primary_exp: int_expr •

    $default  reduce using rule 73 (primary_exp)


State 62

   75 primary_exp: stringls •
   82 stringls: stringls • "'sq-string-literal'"
   83         | stringls • "\"dq-string-literal\""

    "\"dq-string-literal\""  shift, and go to state 130
    "'sq-string-literal'"    shift, and go to state 131

    $default  reduce using rule 75 (primary_exp)


State 63

   76 primary_exp: if_exp •

    $default  reduce using rule 76 (primary_exp)


State 64

   64 bracketed_exp: chain_exp •

    $default  reduce using rule 64 (bracketed_exp)


State 65

   77 primary_exp: lambda_exp •

    $default  reduce using rule 77 (primary_exp)


State 66

   97 tcall_exp: postfix_exp • "[" targ_cl "]"
   98 vcall_exp: postfix_exp • "(" ")"
   99          | postfix_exp • "(" varg_cl ")"
  100 dot_name_exp: postfix_exp • "." "<val_id>"
  101             | postfix_exp • "." "<TypeId>"
  102 dot_index_exp: postfix_exp • "." int_expr
  103              | postfix_exp • "." bracketed_exp
  104 unary_exp: postfix_exp •

    "."  shift, and go to state 132
    "("  shift, and go to state 133
    "["  shift, and go to state 134

    $default  reduce using rule 104 (unary_exp)


State 67

   93 postfix_exp: tcall_exp •

    $default  reduce using rule 93 (postfix_exp)


State 68

   94 postfix_exp: vcall_exp •

    $default  reduce using rule 94 (postfix_exp)


State 69

   95 postfix_exp: dot_name_exp •

    $default  reduce using rule 95 (postfix_exp)


State 70

   96 postfix_exp: dot_index_exp •

    $default  reduce using rule 96 (postfix_exp)


State 71

  115 mul_binary_exp: unary_exp •

    $default  reduce using rule 115 (mul_binary_exp)


State 72

  105 unary_exp: unary_op • unary_exp

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "fn"                     shift, and go to state 39
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    vid            go to state 52
    floatl         go to state 53
    bracketed_exp  go to state 55
    unit_exp       go to state 56
    paren_exp      go to state 57
    vtupleExpr     go to state 58
    vstructExpr    go to state 59
    primary_exp    go to state 60
    int_expr       go to state 61
    stringls       go to state 62
    if_exp         go to state 63
    chain_exp      go to state 64
    lambda_exp     go to state 65
    postfix_exp    go to state 66
    tcall_exp      go to state 67
    vcall_exp      go to state 68
    dot_name_exp   go to state 69
    dot_index_exp  go to state 70
    unary_exp      go to state 135
    unary_op       go to state 72


State 73

   53 expr: binary_exp •

    $default  reduce using rule 53 (expr)


State 74

  116 mul_binary_exp: mul_binary_exp • mul_binary_op unary_exp
  119 add_binary_exp: mul_binary_exp •

    "*"  shift, and go to state 136
    "/"  shift, and go to state 137
    "%"  shift, and go to state 138

    $default  reduce using rule 119 (add_binary_exp)

    mul_binary_op  go to state 139


State 75

  120 add_binary_exp: add_binary_exp • add_binary_op mul_binary_exp
  125 cmp_binary_exp: add_binary_exp •

    "+"  shift, and go to state 140
    "-"  shift, and go to state 141

    $default  reduce using rule 125 (cmp_binary_exp)

    add_binary_op  go to state 142


State 76

  126 cmp_binary_exp: cmp_binary_exp • cmp_binary_op add_binary_exp
  129 eq_binary_exp: cmp_binary_exp •

    "<"   shift, and go to state 143
    "<="  shift, and go to state 144
    ">"   shift, and go to state 145
    ">="  shift, and go to state 146

    $default  reduce using rule 129 (eq_binary_exp)

    cmp_binary_op  go to state 147


State 77

  130 eq_binary_exp: eq_binary_exp • eq_binary_op cmp_binary_exp
  131 and_binary_exp: eq_binary_exp •

    "=="  shift, and go to state 148
    "!="  shift, and go to state 149

    $default  reduce using rule 131 (and_binary_exp)

    eq_binary_op  go to state 150


State 78

  132 and_binary_exp: and_binary_exp • "and" eq_binary_exp
  133 xor_binary_exp: and_binary_exp •

    "and"  shift, and go to state 151

    $default  reduce using rule 133 (xor_binary_exp)


State 79

  134 xor_binary_exp: xor_binary_exp • "xor" and_binary_exp
  135 or_binary_exp: xor_binary_exp •

    "xor"  shift, and go to state 152

    $default  reduce using rule 135 (or_binary_exp)


State 80

  111 binary_exp: or_binary_exp •
  136 or_binary_exp: or_binary_exp • "or" xor_binary_exp

    "or"  shift, and go to state 153

    $default  reduce using rule 111 (binary_exp)


State 81

   44 using_stmt: "using" vid • "." "*"
   45           | "using" vid • "." vid "*"

    "."  shift, and go to state 154


State 82

   28 fn_stmt: "fn" vid • vpattern "->" typespec "=" bracketed_exp
   29        | "fn" vid • tpattern_seq vpattern "->" typespec "=" bracketed_exp
   30        | "fn" vid • vpattern "=" bracketed_exp
   31        | "fn" vid • tpattern_seq vpattern "=" bracketed_exp

    "("  shift, and go to state 91
    "["  shift, and go to state 155
    "!"  shift, and go to state 156

    vpattern      go to state 157
    tpattern      go to state 158
    tpattern_seq  go to state 159


State 83

   48 tid: "<TypeId>" •

    $default  reduce using rule 48 (tid)


State 84

   32 type_stmt: "type" tid • "=" long_typespec
   33          | "type" tid • tpattern_seq "=" long_typespec
   34 enum_stmt: "type" tid • enum_field_pl
   35          | "type" tid • tpattern_seq enum_field_pl

    "["  shift, and go to state 155
    "="  shift, and go to state 160
    "!"  shift, and go to state 156
    "|"  shift, and go to state 161

    enum_field_pl  go to state 162
    tpattern       go to state 158
    tpattern_seq   go to state 163


State 85

   42 typeclass_stmt: "typeclass" tid • "<" tid typespec ">" "=" "{" type_query_exp_sl "}"
   43               | "typeclass" tid • "<" tid typespec ">" tpattern_seq "=" "{" type_query_exp_sl "}"

    "<"  shift, and go to state 164


State 86

    7 mod_stmt: "mod" "<val_id>" "{" moduleContent "}" •

    $default  reduce using rule 7 (mod_stmt)


State 87

    9 moduleContent: moduleContent moduleContentStmt • ";"

    ";"  shift, and go to state 165


State 88

    8 moduleContent: moduleContentStmt ";" •

    $default  reduce using rule 8 (moduleContent)


State 89

   46 import_stmt: "import" vid "from" stringl "type" • stringl

    "\"dq-string-literal\""  shift, and go to state 35
    "'sq-string-literal'"    shift, and go to state 36

    stringl  go to state 166


State 90

   84 if_exp: "if" bracketed_exp • "then" bracketed_exp
   85       | "if" bracketed_exp • "then" bracketed_exp "else" primary_exp

    "then"  shift, and go to state 167


State 91

  191 vpattern: "(" • vpattern_field_cl ")"
  192         | "(" • ")"

    "<val_id>"  shift, and go to state 11
    "out"       shift, and go to state 168
    "inout"     shift, and go to state 169
    ")"         shift, and go to state 170

    vid                go to state 171
    vpattern_field     go to state 172
    vpattern_field_cl  go to state 173


State 92

   91 lambda_exp: "fn" vpattern • "=" bracketed_exp

    "="  shift, and go to state 174


State 93

  160 fn_typespec: "Fn" • vpattern primary_typespec

    "("  shift, and go to state 91

    vpattern  go to state 175


State 94

   65 unit_exp: "(" • ")"
   67 paren_exp: "(" • long_exp ")"
   68 vtupleExpr: "(" • expr "," ")"
   69           | "(" • expr_cl2 ")"
  154 paren_typespec: "(" • typespec ")"
  155 tuple_typespec: "(" • typespec "," ")"
  156               | "(" • typespec_cl2 ")"

    "<val_id>"               shift, and go to state 11
    "<TypeId>"               shift, and go to state 83
    "if"                     shift, and go to state 38
    "fn"                     shift, and go to state 39
    "Fn"                     shift, and go to state 93
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 94
    ")"                      shift, and go to state 95
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    tid               go to state 96
    vid               go to state 97
    floatl            go to state 53
    expr              go to state 98
    long_exp          go to state 99
    expr_cl2          go to state 100
    bracketed_exp     go to state 55
    unit_exp          go to state 56
    paren_exp         go to state 57
    vtupleExpr        go to state 58
    vstructExpr       go to state 59
    primary_exp       go to state 60
    int_expr          go to state 61
    stringls          go to state 62
    if_exp            go to state 63
    chain_exp         go to state 64
    lambda_exp        go to state 65
    postfix_exp       go to state 66
    tcall_exp         go to state 67
    vcall_exp         go to state 68
    dot_name_exp      go to state 69
    dot_index_exp     go to state 70
    unary_exp         go to state 71
    unary_op          go to state 72
    binary_exp        go to state 73
    mul_binary_exp    go to state 74
    add_binary_exp    go to state 75
    cmp_binary_exp    go to state 76
    eq_binary_exp     go to state 77
    and_binary_exp    go to state 78
    xor_binary_exp    go to state 79
    or_binary_exp     go to state 80
    type_query_exp    go to state 101
    typespec          go to state 176
    typespec_cl2      go to state 177
    primary_typespec  go to state 103
    paren_typespec    go to state 104
    tuple_typespec    go to state 105
    mod_prefix_tid    go to state 106
    mod_prefix        go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 112


State 95

   65 unit_exp: "(" ")" •

    $default  reduce using rule 65 (unit_exp)


State 96

  149 primary_typespec: tid •

    $default  reduce using rule 149 (primary_typespec)


State 97

   72 primary_exp: vid •
  158 mod_prefix: vid • "."

    "."  shift, and go to state 178

    "."       [reduce using rule 72 (primary_exp)]
    $default  reduce using rule 72 (primary_exp)


State 98

   55 long_exp: expr •
   56 expr_cl2: expr • "," expr
   68 vtupleExpr: "(" expr • "," ")"

    ","  shift, and go to state 179

    $default  reduce using rule 55 (long_exp)


State 99

   67 paren_exp: "(" long_exp • ")"

    ")"  shift, and go to state 180


State 100

   57 expr_cl2: expr_cl2 • "," expr
   69 vtupleExpr: "(" expr_cl2 • ")"

    ","  shift, and go to state 181
    ")"  shift, and go to state 182


State 101

   54 long_exp: type_query_exp •

    $default  reduce using rule 54 (long_exp)


State 102

  137 type_query_exp: typespec • type_query_op typespec

    "::"  shift, and go to state 183
    ":<"  shift, and go to state 184
    ">:"  shift, and go to state 185

    type_query_op  go to state 186


State 103

  161 postfix_typespec: primary_typespec •

    $default  reduce using rule 161 (postfix_typespec)


State 104

  150 primary_typespec: paren_typespec •

    $default  reduce using rule 150 (primary_typespec)


State 105

  151 primary_typespec: tuple_typespec •

    $default  reduce using rule 151 (primary_typespec)


State 106

  152 primary_typespec: mod_prefix_tid •

    $default  reduce using rule 152 (primary_typespec)


State 107

  157 mod_prefix_tid: mod_prefix • tid
  159 mod_prefix: mod_prefix • vid "."

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 83

    tid  go to state 187
    vid  go to state 188


State 108

  153 primary_typespec: fn_typespec •

    $default  reduce using rule 153 (primary_typespec)


State 109

  164 tcall_typespec: postfix_typespec • "[" targ_cl "]"
  165 dot_typespec: postfix_typespec • "." "<val_id>"
  166 unary_typespec: postfix_typespec •

    "."  shift, and go to state 189
    "["  shift, and go to state 190

    $default  reduce using rule 166 (unary_typespec)


State 110

  162 postfix_typespec: tcall_typespec •

    $default  reduce using rule 162 (postfix_typespec)


State 111

  163 postfix_typespec: dot_typespec •

    $default  reduce using rule 163 (postfix_typespec)


State 112

  141 typespec: unary_typespec •

    $default  reduce using rule 141 (typespec)


State 113

   15 const_stmt: "const" • lpattern_naked "=" expr

    "<val_id>"  shift, and go to state 11
    "("         shift, and go to state 191

    vid             go to state 192
    lpattern_field  go to state 193
    lpattern        go to state 194
    lpattern_naked  go to state 195


State 114

   16 val_stmt: "val" • lpattern_naked "=" expr

    "<val_id>"  shift, and go to state 11
    "("         shift, and go to state 191

    vid             go to state 192
    lpattern_field  go to state 193
    lpattern        go to state 194
    lpattern_naked  go to state 196


State 115

   17 var_stmt: "var" • lpattern_naked "=" expr

    "<val_id>"  shift, and go to state 11
    "("         shift, and go to state 191

    vid             go to state 192
    lpattern_field  go to state 193
    lpattern        go to state 194
    lpattern_naked  go to state 197


State 116

   18 set_stmt: "set" • expr "=" expr

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "fn"                     shift, and go to state 39
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    vid             go to state 52
    floatl          go to state 53
    expr            go to state 198
    bracketed_exp   go to state 55
    unit_exp        go to state 56
    paren_exp       go to state 57
    vtupleExpr      go to state 58
    vstructExpr     go to state 59
    primary_exp     go to state 60
    int_expr        go to state 61
    stringls        go to state 62
    if_exp          go to state 63
    chain_exp       go to state 64
    lambda_exp      go to state 65
    postfix_exp     go to state 66
    tcall_exp       go to state 67
    vcall_exp       go to state 68
    dot_name_exp    go to state 69
    dot_index_exp   go to state 70
    unary_exp       go to state 71
    unary_op        go to state 72
    binary_exp      go to state 73
    mul_binary_exp  go to state 74
    add_binary_exp  go to state 75
    cmp_binary_exp  go to state 76
    eq_binary_exp   go to state 77
    and_binary_exp  go to state 78
    xor_binary_exp  go to state 79
    or_binary_exp   go to state 80


State 117

   19 discard_stmt: "discard" • expr

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "fn"                     shift, and go to state 39
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    vid             go to state 52
    floatl          go to state 53
    expr            go to state 199
    bracketed_exp   go to state 55
    unit_exp        go to state 56
    paren_exp       go to state 57
    vtupleExpr      go to state 58
    vstructExpr     go to state 59
    primary_exp     go to state 60
    int_expr        go to state 61
    stringls        go to state 62
    if_exp          go to state 63
    chain_exp       go to state 64
    lambda_exp      go to state 65
    postfix_exp     go to state 66
    tcall_exp       go to state 67
    vcall_exp       go to state 68
    dot_name_exp    go to state 69
    dot_index_exp   go to state 70
    unary_exp       go to state 71
    unary_op        go to state 72
    binary_exp      go to state 73
    mul_binary_exp  go to state 74
    add_binary_exp  go to state 75
    cmp_binary_exp  go to state 76
    eq_binary_exp   go to state 77
    and_binary_exp  go to state 78
    xor_binary_exp  go to state 79
    or_binary_exp   go to state 80


State 118

   66 unit_exp: "{" "}" •

    $default  reduce using rule 66 (unit_exp)


State 119

   89 chain_prefix: chain_prefix_stmt • ";"

    ";"  shift, and go to state 200


State 120

   10 chain_prefix_stmt: const_stmt •

    $default  reduce using rule 10 (chain_prefix_stmt)


State 121

   11 chain_prefix_stmt: val_stmt •

    $default  reduce using rule 11 (chain_prefix_stmt)


State 122

   12 chain_prefix_stmt: var_stmt •

    $default  reduce using rule 12 (chain_prefix_stmt)


State 123

   13 chain_prefix_stmt: set_stmt •

    $default  reduce using rule 13 (chain_prefix_stmt)


State 124

   14 chain_prefix_stmt: discard_stmt •

    $default  reduce using rule 14 (chain_prefix_stmt)


State 125

   72 primary_exp: vid •
  179 struct_exp_field: vid • "=" expr

    "="  shift, and go to state 201

    $default  reduce using rule 72 (primary_exp)


State 126

   86 chain_exp: "{" expr • "}"

    "}"  shift, and go to state 202


State 127

   87 chain_exp: "{" chain_prefix • "}"
   88          | "{" chain_prefix • expr "}"
   90 chain_prefix: chain_prefix • chain_prefix_stmt ";"

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "const"                  shift, and go to state 113
    "val"                    shift, and go to state 114
    "var"                    shift, and go to state 115
    "set"                    shift, and go to state 116
    "fn"                     shift, and go to state 39
    "not"                    shift, and go to state 40
    "discard"                shift, and go to state 117
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    "{"                      shift, and go to state 47
    "}"                      shift, and go to state 203
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    chain_prefix_stmt  go to state 204
    const_stmt         go to state 120
    val_stmt           go to state 121
    var_stmt           go to state 122
    set_stmt           go to state 123
    discard_stmt       go to state 124
    vid                go to state 52
    floatl             go to state 53
    expr               go to state 205
    bracketed_exp      go to state 55
    unit_exp           go to state 56
    paren_exp          go to state 57
    vtupleExpr         go to state 58
    vstructExpr        go to state 59
    primary_exp        go to state 60
    int_expr           go to state 61
    stringls           go to state 62
    if_exp             go to state 63
    chain_exp          go to state 64
    lambda_exp         go to state 65
    postfix_exp        go to state 66
    tcall_exp          go to state 67
    vcall_exp          go to state 68
    dot_name_exp       go to state 69
    dot_index_exp      go to state 70
    unary_exp          go to state 71
    unary_op           go to state 72
    binary_exp         go to state 73
    mul_binary_exp     go to state 74
    add_binary_exp     go to state 75
    cmp_binary_exp     go to state 76
    eq_binary_exp      go to state 77
    and_binary_exp     go to state 78
    xor_binary_exp     go to state 79
    or_binary_exp      go to state 80


State 128

  201 struct_exp_field_cl: struct_exp_field •

    $default  reduce using rule 201 (struct_exp_field_cl)


State 129

   70 vstructExpr: "{" struct_exp_field_cl • "}"
  202 struct_exp_field_cl: struct_exp_field_cl • "," struct_exp_field

    ","  shift, and go to state 206
    "}"  shift, and go to state 207


State 130

   83 stringls: stringls "\"dq-string-literal\"" •

    $default  reduce using rule 83 (stringls)


State 131

   82 stringls: stringls "'sq-string-literal'" •

    $default  reduce using rule 82 (stringls)


State 132

  100 dot_name_exp: postfix_exp "." • "<val_id>"
  101             | postfix_exp "." • "<TypeId>"
  102 dot_index_exp: postfix_exp "." • int_expr
  103              | postfix_exp "." • bracketed_exp

    "<val_id>"  shift, and go to state 208
    "<TypeId>"  shift, and go to state 209
    "42"        shift, and go to state 41
    "0x2a"      shift, and go to state 42
    "("         shift, and go to state 46
    "{"         shift, and go to state 47

    bracketed_exp  go to state 210
    unit_exp       go to state 56
    paren_exp      go to state 57
    vtupleExpr     go to state 58
    vstructExpr    go to state 59
    int_expr       go to state 211
    chain_exp      go to state 64


State 133

   98 vcall_exp: postfix_exp "(" • ")"
   99          | postfix_exp "(" • varg_cl ")"

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "fn"                     shift, and go to state 39
    "not"                    shift, and go to state 40
    "out"                    shift, and go to state 212
    "inout"                  shift, and go to state 213
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    ")"                      shift, and go to state 214
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    vid             go to state 52
    floatl          go to state 53
    expr            go to state 215
    bracketed_exp   go to state 55
    unit_exp        go to state 56
    paren_exp       go to state 57
    vtupleExpr      go to state 58
    vstructExpr     go to state 59
    primary_exp     go to state 60
    int_expr        go to state 61
    stringls        go to state 62
    if_exp          go to state 63
    chain_exp       go to state 64
    lambda_exp      go to state 65
    postfix_exp     go to state 66
    tcall_exp       go to state 67
    vcall_exp       go to state 68
    dot_name_exp    go to state 69
    dot_index_exp   go to state 70
    unary_exp       go to state 71
    unary_op        go to state 72
    binary_exp      go to state 73
    mul_binary_exp  go to state 74
    add_binary_exp  go to state 75
    cmp_binary_exp  go to state 76
    eq_binary_exp   go to state 77
    and_binary_exp  go to state 78
    xor_binary_exp  go to state 79
    or_binary_exp   go to state 80
    varg            go to state 216
    varg_cl         go to state 217


State 134

   97 tcall_exp: postfix_exp "[" • targ_cl "]"

    "<val_id>"               shift, and go to state 11
    "<TypeId>"               shift, and go to state 83
    "if"                     shift, and go to state 38
    "fn"                     shift, and go to state 39
    "Fn"                     shift, and go to state 93
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 94
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    tid               go to state 96
    vid               go to state 97
    floatl            go to state 53
    expr              go to state 218
    bracketed_exp     go to state 55
    unit_exp          go to state 56
    paren_exp         go to state 57
    vtupleExpr        go to state 58
    vstructExpr       go to state 59
    primary_exp       go to state 60
    int_expr          go to state 61
    stringls          go to state 62
    if_exp            go to state 63
    chain_exp         go to state 64
    lambda_exp        go to state 65
    postfix_exp       go to state 66
    tcall_exp         go to state 67
    vcall_exp         go to state 68
    dot_name_exp      go to state 69
    dot_index_exp     go to state 70
    unary_exp         go to state 71
    unary_op          go to state 72
    binary_exp        go to state 73
    mul_binary_exp    go to state 74
    add_binary_exp    go to state 75
    cmp_binary_exp    go to state 76
    eq_binary_exp     go to state 77
    and_binary_exp    go to state 78
    xor_binary_exp    go to state 79
    or_binary_exp     go to state 80
    typespec          go to state 219
    primary_typespec  go to state 103
    paren_typespec    go to state 104
    tuple_typespec    go to state 105
    mod_prefix_tid    go to state 106
    mod_prefix        go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 112
    targ              go to state 220
    targ_cl           go to state 221


State 135

  105 unary_exp: unary_op unary_exp •

    $default  reduce using rule 105 (unary_exp)


State 136

  112 mul_binary_op: "*" •

    $default  reduce using rule 112 (mul_binary_op)


State 137

  113 mul_binary_op: "/" •

    $default  reduce using rule 113 (mul_binary_op)


State 138

  114 mul_binary_op: "%" •

    $default  reduce using rule 114 (mul_binary_op)


State 139

  116 mul_binary_exp: mul_binary_exp mul_binary_op • unary_exp

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "fn"                     shift, and go to state 39
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    vid            go to state 52
    floatl         go to state 53
    bracketed_exp  go to state 55
    unit_exp       go to state 56
    paren_exp      go to state 57
    vtupleExpr     go to state 58
    vstructExpr    go to state 59
    primary_exp    go to state 60
    int_expr       go to state 61
    stringls       go to state 62
    if_exp         go to state 63
    chain_exp      go to state 64
    lambda_exp     go to state 65
    postfix_exp    go to state 66
    tcall_exp      go to state 67
    vcall_exp      go to state 68
    dot_name_exp   go to state 69
    dot_index_exp  go to state 70
    unary_exp      go to state 222
    unary_op       go to state 72


State 140

  117 add_binary_op: "+" •

    $default  reduce using rule 117 (add_binary_op)


State 141

  118 add_binary_op: "-" •

    $default  reduce using rule 118 (add_binary_op)


State 142

  120 add_binary_exp: add_binary_exp add_binary_op • mul_binary_exp

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "fn"                     shift, and go to state 39
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    vid             go to state 52
    floatl          go to state 53
    bracketed_exp   go to state 55
    unit_exp        go to state 56
    paren_exp       go to state 57
    vtupleExpr      go to state 58
    vstructExpr     go to state 59
    primary_exp     go to state 60
    int_expr        go to state 61
    stringls        go to state 62
    if_exp          go to state 63
    chain_exp       go to state 64
    lambda_exp      go to state 65
    postfix_exp     go to state 66
    tcall_exp       go to state 67
    vcall_exp       go to state 68
    dot_name_exp    go to state 69
    dot_index_exp   go to state 70
    unary_exp       go to state 71
    unary_op        go to state 72
    mul_binary_exp  go to state 223


State 143

  121 cmp_binary_op: "<" •

    $default  reduce using rule 121 (cmp_binary_op)


State 144

  122 cmp_binary_op: "<=" •

    $default  reduce using rule 122 (cmp_binary_op)


State 145

  123 cmp_binary_op: ">" •

    $default  reduce using rule 123 (cmp_binary_op)


State 146

  124 cmp_binary_op: ">=" •

    $default  reduce using rule 124 (cmp_binary_op)


State 147

  126 cmp_binary_exp: cmp_binary_exp cmp_binary_op • add_binary_exp

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "fn"                     shift, and go to state 39
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    vid             go to state 52
    floatl          go to state 53
    bracketed_exp   go to state 55
    unit_exp        go to state 56
    paren_exp       go to state 57
    vtupleExpr      go to state 58
    vstructExpr     go to state 59
    primary_exp     go to state 60
    int_expr        go to state 61
    stringls        go to state 62
    if_exp          go to state 63
    chain_exp       go to state 64
    lambda_exp      go to state 65
    postfix_exp     go to state 66
    tcall_exp       go to state 67
    vcall_exp       go to state 68
    dot_name_exp    go to state 69
    dot_index_exp   go to state 70
    unary_exp       go to state 71
    unary_op        go to state 72
    mul_binary_exp  go to state 74
    add_binary_exp  go to state 224


State 148

  127 eq_binary_op: "==" •

    $default  reduce using rule 127 (eq_binary_op)


State 149

  128 eq_binary_op: "!=" •

    $default  reduce using rule 128 (eq_binary_op)


State 150

  130 eq_binary_exp: eq_binary_exp eq_binary_op • cmp_binary_exp

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "fn"                     shift, and go to state 39
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    vid             go to state 52
    floatl          go to state 53
    bracketed_exp   go to state 55
    unit_exp        go to state 56
    paren_exp       go to state 57
    vtupleExpr      go to state 58
    vstructExpr     go to state 59
    primary_exp     go to state 60
    int_expr        go to state 61
    stringls        go to state 62
    if_exp          go to state 63
    chain_exp       go to state 64
    lambda_exp      go to state 65
    postfix_exp     go to state 66
    tcall_exp       go to state 67
    vcall_exp       go to state 68
    dot_name_exp    go to state 69
    dot_index_exp   go to state 70
    unary_exp       go to state 71
    unary_op        go to state 72
    mul_binary_exp  go to state 74
    add_binary_exp  go to state 75
    cmp_binary_exp  go to state 225


State 151

  132 and_binary_exp: and_binary_exp "and" • eq_binary_exp

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "fn"                     shift, and go to state 39
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    vid             go to state 52
    floatl          go to state 53
    bracketed_exp   go to state 55
    unit_exp        go to state 56
    paren_exp       go to state 57
    vtupleExpr      go to state 58
    vstructExpr     go to state 59
    primary_exp     go to state 60
    int_expr        go to state 61
    stringls        go to state 62
    if_exp          go to state 63
    chain_exp       go to state 64
    lambda_exp      go to state 65
    postfix_exp     go to state 66
    tcall_exp       go to state 67
    vcall_exp       go to state 68
    dot_name_exp    go to state 69
    dot_index_exp   go to state 70
    unary_exp       go to state 71
    unary_op        go to state 72
    mul_binary_exp  go to state 74
    add_binary_exp  go to state 75
    cmp_binary_exp  go to state 76
    eq_binary_exp   go to state 226


State 152

  134 xor_binary_exp: xor_binary_exp "xor" • and_binary_exp

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "fn"                     shift, and go to state 39
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    vid             go to state 52
    floatl          go to state 53
    bracketed_exp   go to state 55
    unit_exp        go to state 56
    paren_exp       go to state 57
    vtupleExpr      go to state 58
    vstructExpr     go to state 59
    primary_exp     go to state 60
    int_expr        go to state 61
    stringls        go to state 62
    if_exp          go to state 63
    chain_exp       go to state 64
    lambda_exp      go to state 65
    postfix_exp     go to state 66
    tcall_exp       go to state 67
    vcall_exp       go to state 68
    dot_name_exp    go to state 69
    dot_index_exp   go to state 70
    unary_exp       go to state 71
    unary_op        go to state 72
    mul_binary_exp  go to state 74
    add_binary_exp  go to state 75
    cmp_binary_exp  go to state 76
    eq_binary_exp   go to state 77
    and_binary_exp  go to state 227


State 153

  136 or_binary_exp: or_binary_exp "or" • xor_binary_exp

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "fn"                     shift, and go to state 39
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    vid             go to state 52
    floatl          go to state 53
    bracketed_exp   go to state 55
    unit_exp        go to state 56
    paren_exp       go to state 57
    vtupleExpr      go to state 58
    vstructExpr     go to state 59
    primary_exp     go to state 60
    int_expr        go to state 61
    stringls        go to state 62
    if_exp          go to state 63
    chain_exp       go to state 64
    lambda_exp      go to state 65
    postfix_exp     go to state 66
    tcall_exp       go to state 67
    vcall_exp       go to state 68
    dot_name_exp    go to state 69
    dot_index_exp   go to state 70
    unary_exp       go to state 71
    unary_op        go to state 72
    mul_binary_exp  go to state 74
    add_binary_exp  go to state 75
    cmp_binary_exp  go to state 76
    eq_binary_exp   go to state 77
    and_binary_exp  go to state 78
    xor_binary_exp  go to state 228


State 154

   44 using_stmt: "using" vid "." • "*"
   45           | "using" vid "." • vid "*"

    "<val_id>"  shift, and go to state 11
    "*"         shift, and go to state 229

    vid  go to state 230


State 155

  193 tpattern: "[" • tpattern_field_cl "]"

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 83

    tid                go to state 231
    vid                go to state 232
    tpattern_field     go to state 233
    tpattern_field_cl  go to state 234


State 156

  194 tpattern: "!" • "[" tpattern_field_cl "]"

    "["  shift, and go to state 235


State 157

   28 fn_stmt: "fn" vid vpattern • "->" typespec "=" bracketed_exp
   30        | "fn" vid vpattern • "=" bracketed_exp

    "->"  shift, and go to state 236
    "="   shift, and go to state 237


State 158

  203 tpattern_seq: tpattern •

    $default  reduce using rule 203 (tpattern_seq)


State 159

   29 fn_stmt: "fn" vid tpattern_seq • vpattern "->" typespec "=" bracketed_exp
   31        | "fn" vid tpattern_seq • vpattern "=" bracketed_exp
  204 tpattern_seq: tpattern_seq • tpattern

    "("  shift, and go to state 91
    "["  shift, and go to state 155
    "!"  shift, and go to state 156

    vpattern  go to state 238
    tpattern  go to state 239


State 160

   32 type_stmt: "type" tid "=" • long_typespec

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 83
    "Fn"        shift, and go to state 93
    "("         shift, and go to state 240
    "{"         shift, and go to state 241

    tid               go to state 96
    vid               go to state 242
    primary_typespec  go to state 103
    paren_typespec    go to state 104
    tuple_typespec    go to state 105
    mod_prefix_tid    go to state 106
    mod_prefix        go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 243
    long_typespec     go to state 244
    struct_typespec   go to state 245


State 161

   36 enum_field_pl: "|" • unprefixed_enum_field_pl

    "<TypeId>"  shift, and go to state 83

    unprefixed_enum_field_pl  go to state 246
    enum_field                go to state 247
    tid                       go to state 248


State 162

   34 enum_stmt: "type" tid enum_field_pl •

    $default  reduce using rule 34 (enum_stmt)


State 163

   33 type_stmt: "type" tid tpattern_seq • "=" long_typespec
   35 enum_stmt: "type" tid tpattern_seq • enum_field_pl
  204 tpattern_seq: tpattern_seq • tpattern

    "["  shift, and go to state 155
    "="  shift, and go to state 249
    "!"  shift, and go to state 156
    "|"  shift, and go to state 161

    enum_field_pl  go to state 250
    tpattern       go to state 239


State 164

   42 typeclass_stmt: "typeclass" tid "<" • tid typespec ">" "=" "{" type_query_exp_sl "}"
   43               | "typeclass" tid "<" • tid typespec ">" tpattern_seq "=" "{" type_query_exp_sl "}"

    "<TypeId>"  shift, and go to state 83

    tid  go to state 251


State 165

    9 moduleContent: moduleContent moduleContentStmt ";" •

    $default  reduce using rule 9 (moduleContent)


State 166

   46 import_stmt: "import" vid "from" stringl "type" stringl •

    $default  reduce using rule 46 (import_stmt)


State 167

   84 if_exp: "if" bracketed_exp "then" • bracketed_exp
   85       | "if" bracketed_exp "then" • bracketed_exp "else" primary_exp

    "("  shift, and go to state 46
    "{"  shift, and go to state 47

    bracketed_exp  go to state 252
    unit_exp       go to state 56
    paren_exp      go to state 57
    vtupleExpr     go to state 58
    vstructExpr    go to state 59
    chain_exp      go to state 64


State 168

  181 vpattern_field: "out" • vid typespec

    "<val_id>"  shift, and go to state 11

    vid  go to state 253


State 169

  182 vpattern_field: "inout" • vid typespec

    "<val_id>"  shift, and go to state 11

    vid  go to state 254


State 170

  192 vpattern: "(" ")" •

    $default  reduce using rule 192 (vpattern)


State 171

  180 vpattern_field: vid • typespec

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 83
    "Fn"        shift, and go to state 93
    "("         shift, and go to state 240

    tid               go to state 96
    vid               go to state 242
    typespec          go to state 255
    primary_typespec  go to state 103
    paren_typespec    go to state 104
    tuple_typespec    go to state 105
    mod_prefix_tid    go to state 106
    mod_prefix        go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 112


State 172

  195 vpattern_field_cl: vpattern_field •

    $default  reduce using rule 195 (vpattern_field_cl)


State 173

  191 vpattern: "(" vpattern_field_cl • ")"
  196 vpattern_field_cl: vpattern_field_cl • "," vpattern_field

    ","  shift, and go to state 256
    ")"  shift, and go to state 257


State 174

   91 lambda_exp: "fn" vpattern "=" • bracketed_exp

    "("  shift, and go to state 46
    "{"  shift, and go to state 47

    bracketed_exp  go to state 258
    unit_exp       go to state 56
    paren_exp      go to state 57
    vtupleExpr     go to state 58
    vstructExpr    go to state 59
    chain_exp      go to state 64


State 175

  160 fn_typespec: "Fn" vpattern • primary_typespec

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 83
    "Fn"        shift, and go to state 93
    "("         shift, and go to state 240

    tid               go to state 96
    vid               go to state 242
    primary_typespec  go to state 259
    paren_typespec    go to state 104
    tuple_typespec    go to state 105
    mod_prefix_tid    go to state 106
    mod_prefix        go to state 107
    fn_typespec       go to state 108


State 176

  137 type_query_exp: typespec • type_query_op typespec
  144 typespec_cl2: typespec • "," typespec
  154 paren_typespec: "(" typespec • ")"
  155 tuple_typespec: "(" typespec • "," ")"

    ","   shift, and go to state 260
    "::"  shift, and go to state 183
    ")"   shift, and go to state 261
    ":<"  shift, and go to state 184
    ">:"  shift, and go to state 185

    type_query_op  go to state 186


State 177

  145 typespec_cl2: typespec_cl2 • "," typespec
  156 tuple_typespec: "(" typespec_cl2 • ")"

    ","  shift, and go to state 262
    ")"  shift, and go to state 263


State 178

  158 mod_prefix: vid "." •

    $default  reduce using rule 158 (mod_prefix)


State 179

   56 expr_cl2: expr "," • expr
   68 vtupleExpr: "(" expr "," • ")"

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "fn"                     shift, and go to state 39
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    ")"                      shift, and go to state 264
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    vid             go to state 52
    floatl          go to state 53
    expr            go to state 265
    bracketed_exp   go to state 55
    unit_exp        go to state 56
    paren_exp       go to state 57
    vtupleExpr      go to state 58
    vstructExpr     go to state 59
    primary_exp     go to state 60
    int_expr        go to state 61
    stringls        go to state 62
    if_exp          go to state 63
    chain_exp       go to state 64
    lambda_exp      go to state 65
    postfix_exp     go to state 66
    tcall_exp       go to state 67
    vcall_exp       go to state 68
    dot_name_exp    go to state 69
    dot_index_exp   go to state 70
    unary_exp       go to state 71
    unary_op        go to state 72
    binary_exp      go to state 73
    mul_binary_exp  go to state 74
    add_binary_exp  go to state 75
    cmp_binary_exp  go to state 76
    eq_binary_exp   go to state 77
    and_binary_exp  go to state 78
    xor_binary_exp  go to state 79
    or_binary_exp   go to state 80


State 180

   67 paren_exp: "(" long_exp ")" •

    $default  reduce using rule 67 (paren_exp)


State 181

   57 expr_cl2: expr_cl2 "," • expr

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "fn"                     shift, and go to state 39
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    vid             go to state 52
    floatl          go to state 53
    expr            go to state 266
    bracketed_exp   go to state 55
    unit_exp        go to state 56
    paren_exp       go to state 57
    vtupleExpr      go to state 58
    vstructExpr     go to state 59
    primary_exp     go to state 60
    int_expr        go to state 61
    stringls        go to state 62
    if_exp          go to state 63
    chain_exp       go to state 64
    lambda_exp      go to state 65
    postfix_exp     go to state 66
    tcall_exp       go to state 67
    vcall_exp       go to state 68
    dot_name_exp    go to state 69
    dot_index_exp   go to state 70
    unary_exp       go to state 71
    unary_op        go to state 72
    binary_exp      go to state 73
    mul_binary_exp  go to state 74
    add_binary_exp  go to state 75
    cmp_binary_exp  go to state 76
    eq_binary_exp   go to state 77
    and_binary_exp  go to state 78
    xor_binary_exp  go to state 79
    or_binary_exp   go to state 80


State 182

   69 vtupleExpr: "(" expr_cl2 ")" •

    $default  reduce using rule 69 (vtupleExpr)


State 183

  140 type_query_op: "::" •

    $default  reduce using rule 140 (type_query_op)


State 184

  138 type_query_op: ":<" •

    $default  reduce using rule 138 (type_query_op)


State 185

  139 type_query_op: ">:" •

    $default  reduce using rule 139 (type_query_op)


State 186

  137 type_query_exp: typespec type_query_op • typespec

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 83
    "Fn"        shift, and go to state 93
    "("         shift, and go to state 240

    tid               go to state 96
    vid               go to state 242
    typespec          go to state 267
    primary_typespec  go to state 103
    paren_typespec    go to state 104
    tuple_typespec    go to state 105
    mod_prefix_tid    go to state 106
    mod_prefix        go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 112


State 187

  157 mod_prefix_tid: mod_prefix tid •

    $default  reduce using rule 157 (mod_prefix_tid)


State 188

  159 mod_prefix: mod_prefix vid • "."

    "."  shift, and go to state 268


State 189

  165 dot_typespec: postfix_typespec "." • "<val_id>"

    "<val_id>"  shift, and go to state 269


State 190

  164 tcall_typespec: postfix_typespec "[" • targ_cl "]"

    "<val_id>"               shift, and go to state 11
    "<TypeId>"               shift, and go to state 83
    "if"                     shift, and go to state 38
    "fn"                     shift, and go to state 39
    "Fn"                     shift, and go to state 93
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 94
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    tid               go to state 96
    vid               go to state 97
    floatl            go to state 53
    expr              go to state 218
    bracketed_exp     go to state 55
    unit_exp          go to state 56
    paren_exp         go to state 57
    vtupleExpr        go to state 58
    vstructExpr       go to state 59
    primary_exp       go to state 60
    int_expr          go to state 61
    stringls          go to state 62
    if_exp            go to state 63
    chain_exp         go to state 64
    lambda_exp        go to state 65
    postfix_exp       go to state 66
    tcall_exp         go to state 67
    vcall_exp         go to state 68
    dot_name_exp      go to state 69
    dot_index_exp     go to state 70
    unary_exp         go to state 71
    unary_op          go to state 72
    binary_exp        go to state 73
    mul_binary_exp    go to state 74
    add_binary_exp    go to state 75
    cmp_binary_exp    go to state 76
    eq_binary_exp     go to state 77
    and_binary_exp    go to state 78
    xor_binary_exp    go to state 79
    or_binary_exp     go to state 80
    typespec          go to state 219
    primary_typespec  go to state 103
    paren_typespec    go to state 104
    tuple_typespec    go to state 105
    mod_prefix_tid    go to state 106
    mod_prefix        go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 112
    targ              go to state 220
    targ_cl           go to state 270


State 191

  187 lpattern: "(" • lpattern_field_cl ")"
  188         | "(" • ")"

    "<val_id>"  shift, and go to state 11
    ")"         shift, and go to state 271

    vid                go to state 192
    lpattern_field     go to state 272
    lpattern_field_cl  go to state 273


State 192

  183 lpattern_field: vid • typespec
  184               | vid •

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 83
    "Fn"        shift, and go to state 93
    "("         shift, and go to state 240

    $default  reduce using rule 184 (lpattern_field)

    tid               go to state 96
    vid               go to state 242
    typespec          go to state 274
    primary_typespec  go to state 103
    paren_typespec    go to state 104
    tuple_typespec    go to state 105
    mod_prefix_tid    go to state 106
    mod_prefix        go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 112


State 193

  189 lpattern_naked: lpattern_field •

    $default  reduce using rule 189 (lpattern_naked)


State 194

  190 lpattern_naked: lpattern •

    $default  reduce using rule 190 (lpattern_naked)


State 195

   15 const_stmt: "const" lpattern_naked • "=" expr

    "="  shift, and go to state 275


State 196

   16 val_stmt: "val" lpattern_naked • "=" expr

    "="  shift, and go to state 276


State 197

   17 var_stmt: "var" lpattern_naked • "=" expr

    "="  shift, and go to state 277


State 198

   18 set_stmt: "set" expr • "=" expr

    "="  shift, and go to state 278


State 199

   19 discard_stmt: "discard" expr •

    $default  reduce using rule 19 (discard_stmt)


State 200

   89 chain_prefix: chain_prefix_stmt ";" •

    $default  reduce using rule 89 (chain_prefix)


State 201

  179 struct_exp_field: vid "=" • expr

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "fn"                     shift, and go to state 39
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    vid             go to state 52
    floatl          go to state 53
    expr            go to state 279
    bracketed_exp   go to state 55
    unit_exp        go to state 56
    paren_exp       go to state 57
    vtupleExpr      go to state 58
    vstructExpr     go to state 59
    primary_exp     go to state 60
    int_expr        go to state 61
    stringls        go to state 62
    if_exp          go to state 63
    chain_exp       go to state 64
    lambda_exp      go to state 65
    postfix_exp     go to state 66
    tcall_exp       go to state 67
    vcall_exp       go to state 68
    dot_name_exp    go to state 69
    dot_index_exp   go to state 70
    unary_exp       go to state 71
    unary_op        go to state 72
    binary_exp      go to state 73
    mul_binary_exp  go to state 74
    add_binary_exp  go to state 75
    cmp_binary_exp  go to state 76
    eq_binary_exp   go to state 77
    and_binary_exp  go to state 78
    xor_binary_exp  go to state 79
    or_binary_exp   go to state 80


State 202

   86 chain_exp: "{" expr "}" •

    $default  reduce using rule 86 (chain_exp)


State 203

   87 chain_exp: "{" chain_prefix "}" •

    $default  reduce using rule 87 (chain_exp)


State 204

   90 chain_prefix: chain_prefix chain_prefix_stmt • ";"

    ";"  shift, and go to state 280


State 205

   88 chain_exp: "{" chain_prefix expr • "}"

    "}"  shift, and go to state 281


State 206

  202 struct_exp_field_cl: struct_exp_field_cl "," • struct_exp_field

    "<val_id>"  shift, and go to state 11

    vid               go to state 282
    struct_exp_field  go to state 283


State 207

   70 vstructExpr: "{" struct_exp_field_cl "}" •

    $default  reduce using rule 70 (vstructExpr)


State 208

  100 dot_name_exp: postfix_exp "." "<val_id>" •

    $default  reduce using rule 100 (dot_name_exp)


State 209

  101 dot_name_exp: postfix_exp "." "<TypeId>" •

    $default  reduce using rule 101 (dot_name_exp)


State 210

  103 dot_index_exp: postfix_exp "." bracketed_exp •

    $default  reduce using rule 103 (dot_index_exp)


State 211

  102 dot_index_exp: postfix_exp "." int_expr •

    $default  reduce using rule 102 (dot_index_exp)


State 212

  175 varg: "out" • expr

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "fn"                     shift, and go to state 39
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    vid             go to state 52
    floatl          go to state 53
    expr            go to state 284
    bracketed_exp   go to state 55
    unit_exp        go to state 56
    paren_exp       go to state 57
    vtupleExpr      go to state 58
    vstructExpr     go to state 59
    primary_exp     go to state 60
    int_expr        go to state 61
    stringls        go to state 62
    if_exp          go to state 63
    chain_exp       go to state 64
    lambda_exp      go to state 65
    postfix_exp     go to state 66
    tcall_exp       go to state 67
    vcall_exp       go to state 68
    dot_name_exp    go to state 69
    dot_index_exp   go to state 70
    unary_exp       go to state 71
    unary_op        go to state 72
    binary_exp      go to state 73
    mul_binary_exp  go to state 74
    add_binary_exp  go to state 75
    cmp_binary_exp  go to state 76
    eq_binary_exp   go to state 77
    and_binary_exp  go to state 78
    xor_binary_exp  go to state 79
    or_binary_exp   go to state 80


State 213

  176 varg: "inout" • expr

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "fn"                     shift, and go to state 39
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    vid             go to state 52
    floatl          go to state 53
    expr            go to state 285
    bracketed_exp   go to state 55
    unit_exp        go to state 56
    paren_exp       go to state 57
    vtupleExpr      go to state 58
    vstructExpr     go to state 59
    primary_exp     go to state 60
    int_expr        go to state 61
    stringls        go to state 62
    if_exp          go to state 63
    chain_exp       go to state 64
    lambda_exp      go to state 65
    postfix_exp     go to state 66
    tcall_exp       go to state 67
    vcall_exp       go to state 68
    dot_name_exp    go to state 69
    dot_index_exp   go to state 70
    unary_exp       go to state 71
    unary_op        go to state 72
    binary_exp      go to state 73
    mul_binary_exp  go to state 74
    add_binary_exp  go to state 75
    cmp_binary_exp  go to state 76
    eq_binary_exp   go to state 77
    and_binary_exp  go to state 78
    xor_binary_exp  go to state 79
    or_binary_exp   go to state 80


State 214

   98 vcall_exp: postfix_exp "(" ")" •

    $default  reduce using rule 98 (vcall_exp)


State 215

  174 varg: expr •

    $default  reduce using rule 174 (varg)


State 216

  177 varg_cl: varg •

    $default  reduce using rule 177 (varg_cl)


State 217

   99 vcall_exp: postfix_exp "(" varg_cl • ")"
  178 varg_cl: varg_cl • "," varg

    ","  shift, and go to state 286
    ")"  shift, and go to state 287


State 218

  171 targ: expr •

    $default  reduce using rule 171 (targ)


State 219

  170 targ: typespec •

    $default  reduce using rule 170 (targ)


State 220

  172 targ_cl: targ •

    $default  reduce using rule 172 (targ_cl)


State 221

   97 tcall_exp: postfix_exp "[" targ_cl • "]"
  173 targ_cl: targ_cl • "," targ

    ","  shift, and go to state 288
    "]"  shift, and go to state 289


State 222

  116 mul_binary_exp: mul_binary_exp mul_binary_op unary_exp •

    $default  reduce using rule 116 (mul_binary_exp)


State 223

  116 mul_binary_exp: mul_binary_exp • mul_binary_op unary_exp
  120 add_binary_exp: add_binary_exp add_binary_op mul_binary_exp •

    "*"  shift, and go to state 136
    "/"  shift, and go to state 137
    "%"  shift, and go to state 138

    $default  reduce using rule 120 (add_binary_exp)

    mul_binary_op  go to state 139


State 224

  120 add_binary_exp: add_binary_exp • add_binary_op mul_binary_exp
  126 cmp_binary_exp: cmp_binary_exp cmp_binary_op add_binary_exp •

    "+"  shift, and go to state 140
    "-"  shift, and go to state 141

    $default  reduce using rule 126 (cmp_binary_exp)

    add_binary_op  go to state 142


State 225

  126 cmp_binary_exp: cmp_binary_exp • cmp_binary_op add_binary_exp
  130 eq_binary_exp: eq_binary_exp eq_binary_op cmp_binary_exp •

    "<"   shift, and go to state 143
    "<="  shift, and go to state 144
    ">"   shift, and go to state 145
    ">="  shift, and go to state 146

    $default  reduce using rule 130 (eq_binary_exp)

    cmp_binary_op  go to state 147


State 226

  130 eq_binary_exp: eq_binary_exp • eq_binary_op cmp_binary_exp
  132 and_binary_exp: and_binary_exp "and" eq_binary_exp •

    "=="  shift, and go to state 148
    "!="  shift, and go to state 149

    $default  reduce using rule 132 (and_binary_exp)

    eq_binary_op  go to state 150


State 227

  132 and_binary_exp: and_binary_exp • "and" eq_binary_exp
  134 xor_binary_exp: xor_binary_exp "xor" and_binary_exp •

    "and"  shift, and go to state 151

    $default  reduce using rule 134 (xor_binary_exp)


State 228

  134 xor_binary_exp: xor_binary_exp • "xor" and_binary_exp
  136 or_binary_exp: or_binary_exp "or" xor_binary_exp •

    "xor"  shift, and go to state 152

    $default  reduce using rule 136 (or_binary_exp)


State 229

   44 using_stmt: "using" vid "." "*" •

    $default  reduce using rule 44 (using_stmt)


State 230

   45 using_stmt: "using" vid "." vid • "*"

    "*"  shift, and go to state 290


State 231

  186 tpattern_field: tid • typespec

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 83
    "Fn"        shift, and go to state 93
    "("         shift, and go to state 240

    tid               go to state 96
    vid               go to state 242
    typespec          go to state 291
    primary_typespec  go to state 103
    paren_typespec    go to state 104
    tuple_typespec    go to state 105
    mod_prefix_tid    go to state 106
    mod_prefix        go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 112


State 232

  185 tpattern_field: vid • typespec

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 83
    "Fn"        shift, and go to state 93
    "("         shift, and go to state 240

    tid               go to state 96
    vid               go to state 242
    typespec          go to state 292
    primary_typespec  go to state 103
    paren_typespec    go to state 104
    tuple_typespec    go to state 105
    mod_prefix_tid    go to state 106
    mod_prefix        go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 112


State 233

  199 tpattern_field_cl: tpattern_field •

    $default  reduce using rule 199 (tpattern_field_cl)


State 234

  193 tpattern: "[" tpattern_field_cl • "]"
  200 tpattern_field_cl: tpattern_field_cl • "," tpattern_field

    ","  shift, and go to state 293
    "]"  shift, and go to state 294


State 235

  194 tpattern: "!" "[" • tpattern_field_cl "]"

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 83

    tid                go to state 231
    vid                go to state 232
    tpattern_field     go to state 233
    tpattern_field_cl  go to state 295


State 236

   28 fn_stmt: "fn" vid vpattern "->" • typespec "=" bracketed_exp

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 83
    "Fn"        shift, and go to state 93
    "("         shift, and go to state 240

    tid               go to state 96
    vid               go to state 242
    typespec          go to state 296
    primary_typespec  go to state 103
    paren_typespec    go to state 104
    tuple_typespec    go to state 105
    mod_prefix_tid    go to state 106
    mod_prefix        go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 112


State 237

   30 fn_stmt: "fn" vid vpattern "=" • bracketed_exp

    "("  shift, and go to state 46
    "{"  shift, and go to state 47

    bracketed_exp  go to state 297
    unit_exp       go to state 56
    paren_exp      go to state 57
    vtupleExpr     go to state 58
    vstructExpr    go to state 59
    chain_exp      go to state 64


State 238

   29 fn_stmt: "fn" vid tpattern_seq vpattern • "->" typespec "=" bracketed_exp
   31        | "fn" vid tpattern_seq vpattern • "=" bracketed_exp

    "->"  shift, and go to state 298
    "="   shift, and go to state 299


State 239

  204 tpattern_seq: tpattern_seq tpattern •

    $default  reduce using rule 204 (tpattern_seq)


State 240

  154 paren_typespec: "(" • typespec ")"
  155 tuple_typespec: "(" • typespec "," ")"
  156               | "(" • typespec_cl2 ")"

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 83
    "Fn"        shift, and go to state 93
    "("         shift, and go to state 240

    tid               go to state 96
    vid               go to state 242
    typespec          go to state 300
    typespec_cl2      go to state 177
    primary_typespec  go to state 103
    paren_typespec    go to state 104
    tuple_typespec    go to state 105
    mod_prefix_tid    go to state 106
    mod_prefix        go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 112


State 241

  169 struct_typespec: "{" • struct_typespec_field_cl "}"

    "<val_id>"  shift, and go to state 11

    vid                       go to state 301
    struct_typespec_field     go to state 302
    struct_typespec_field_cl  go to state 303


State 242

  158 mod_prefix: vid • "."

    "."  shift, and go to state 178


State 243

  167 long_typespec: unary_typespec •

    $default  reduce using rule 167 (long_typespec)


State 244

   32 type_stmt: "type" tid "=" long_typespec •

    $default  reduce using rule 32 (type_stmt)


State 245

  168 long_typespec: struct_typespec •

    $default  reduce using rule 168 (long_typespec)


State 246

   36 enum_field_pl: "|" unprefixed_enum_field_pl •
   38 unprefixed_enum_field_pl: unprefixed_enum_field_pl • "|" enum_field

    "|"  shift, and go to state 304

    $default  reduce using rule 36 (enum_field_pl)


State 247

   37 unprefixed_enum_field_pl: enum_field •

    $default  reduce using rule 37 (unprefixed_enum_field_pl)


State 248

   39 enum_field: tid •
   40           | tid • "(" ")"
   41           | tid • "(" typespec_cl1 ")"

    "("  shift, and go to state 305

    $default  reduce using rule 39 (enum_field)


State 249

   33 type_stmt: "type" tid tpattern_seq "=" • long_typespec

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 83
    "Fn"        shift, and go to state 93
    "("         shift, and go to state 240
    "{"         shift, and go to state 241

    tid               go to state 96
    vid               go to state 242
    primary_typespec  go to state 103
    paren_typespec    go to state 104
    tuple_typespec    go to state 105
    mod_prefix_tid    go to state 106
    mod_prefix        go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 243
    long_typespec     go to state 306
    struct_typespec   go to state 245


State 250

   35 enum_stmt: "type" tid tpattern_seq enum_field_pl •

    $default  reduce using rule 35 (enum_stmt)


State 251

   42 typeclass_stmt: "typeclass" tid "<" tid • typespec ">" "=" "{" type_query_exp_sl "}"
   43               | "typeclass" tid "<" tid • typespec ">" tpattern_seq "=" "{" type_query_exp_sl "}"

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 83
    "Fn"        shift, and go to state 93
    "("         shift, and go to state 240

    tid               go to state 96
    vid               go to state 242
    typespec          go to state 307
    primary_typespec  go to state 103
    paren_typespec    go to state 104
    tuple_typespec    go to state 105
    mod_prefix_tid    go to state 106
    mod_prefix        go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 112


State 252

   84 if_exp: "if" bracketed_exp "then" bracketed_exp •
   85       | "if" bracketed_exp "then" bracketed_exp • "else" primary_exp

    "else"  shift, and go to state 308

    $default  reduce using rule 84 (if_exp)


State 253

  181 vpattern_field: "out" vid • typespec

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 83
    "Fn"        shift, and go to state 93
    "("         shift, and go to state 240

    tid               go to state 96
    vid               go to state 242
    typespec          go to state 309
    primary_typespec  go to state 103
    paren_typespec    go to state 104
    tuple_typespec    go to state 105
    mod_prefix_tid    go to state 106
    mod_prefix        go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 112


State 254

  182 vpattern_field: "inout" vid • typespec

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 83
    "Fn"        shift, and go to state 93
    "("         shift, and go to state 240

    tid               go to state 96
    vid               go to state 242
    typespec          go to state 310
    primary_typespec  go to state 103
    paren_typespec    go to state 104
    tuple_typespec    go to state 105
    mod_prefix_tid    go to state 106
    mod_prefix        go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 112


State 255

  180 vpattern_field: vid typespec •

    $default  reduce using rule 180 (vpattern_field)


State 256

  196 vpattern_field_cl: vpattern_field_cl "," • vpattern_field

    "<val_id>"  shift, and go to state 11
    "out"       shift, and go to state 168
    "inout"     shift, and go to state 169

    vid             go to state 171
    vpattern_field  go to state 311


State 257

  191 vpattern: "(" vpattern_field_cl ")" •

    $default  reduce using rule 191 (vpattern)


State 258

   91 lambda_exp: "fn" vpattern "=" bracketed_exp •

    $default  reduce using rule 91 (lambda_exp)


State 259

  160 fn_typespec: "Fn" vpattern primary_typespec •

    $default  reduce using rule 160 (fn_typespec)


State 260

  144 typespec_cl2: typespec "," • typespec
  155 tuple_typespec: "(" typespec "," • ")"

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 83
    "Fn"        shift, and go to state 93
    "("         shift, and go to state 240
    ")"         shift, and go to state 312

    tid               go to state 96
    vid               go to state 242
    typespec          go to state 313
    primary_typespec  go to state 103
    paren_typespec    go to state 104
    tuple_typespec    go to state 105
    mod_prefix_tid    go to state 106
    mod_prefix        go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 112


State 261

  154 paren_typespec: "(" typespec ")" •

    $default  reduce using rule 154 (paren_typespec)


State 262

  145 typespec_cl2: typespec_cl2 "," • typespec

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 83
    "Fn"        shift, and go to state 93
    "("         shift, and go to state 240

    tid               go to state 96
    vid               go to state 242
    typespec          go to state 314
    primary_typespec  go to state 103
    paren_typespec    go to state 104
    tuple_typespec    go to state 105
    mod_prefix_tid    go to state 106
    mod_prefix        go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 112


State 263

  156 tuple_typespec: "(" typespec_cl2 ")" •

    $default  reduce using rule 156 (tuple_typespec)


State 264

   68 vtupleExpr: "(" expr "," ")" •

    $default  reduce using rule 68 (vtupleExpr)


State 265

   56 expr_cl2: expr "," expr •

    $default  reduce using rule 56 (expr_cl2)


State 266

   57 expr_cl2: expr_cl2 "," expr •

    $default  reduce using rule 57 (expr_cl2)


State 267

  137 type_query_exp: typespec type_query_op typespec •

    $default  reduce using rule 137 (type_query_exp)


State 268

  159 mod_prefix: mod_prefix vid "." •

    $default  reduce using rule 159 (mod_prefix)


State 269

  165 dot_typespec: postfix_typespec "." "<val_id>" •

    $default  reduce using rule 165 (dot_typespec)


State 270

  164 tcall_typespec: postfix_typespec "[" targ_cl • "]"
  173 targ_cl: targ_cl • "," targ

    ","  shift, and go to state 288
    "]"  shift, and go to state 315


State 271

  188 lpattern: "(" ")" •

    $default  reduce using rule 188 (lpattern)


State 272

  197 lpattern_field_cl: lpattern_field •

    $default  reduce using rule 197 (lpattern_field_cl)


State 273

  187 lpattern: "(" lpattern_field_cl • ")"
  198 lpattern_field_cl: lpattern_field_cl • "," lpattern_field

    ","  shift, and go to state 316
    ")"  shift, and go to state 317


State 274

  183 lpattern_field: vid typespec •

    $default  reduce using rule 183 (lpattern_field)


State 275

   15 const_stmt: "const" lpattern_naked "=" • expr

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "fn"                     shift, and go to state 39
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    vid             go to state 52
    floatl          go to state 53
    expr            go to state 318
    bracketed_exp   go to state 55
    unit_exp        go to state 56
    paren_exp       go to state 57
    vtupleExpr      go to state 58
    vstructExpr     go to state 59
    primary_exp     go to state 60
    int_expr        go to state 61
    stringls        go to state 62
    if_exp          go to state 63
    chain_exp       go to state 64
    lambda_exp      go to state 65
    postfix_exp     go to state 66
    tcall_exp       go to state 67
    vcall_exp       go to state 68
    dot_name_exp    go to state 69
    dot_index_exp   go to state 70
    unary_exp       go to state 71
    unary_op        go to state 72
    binary_exp      go to state 73
    mul_binary_exp  go to state 74
    add_binary_exp  go to state 75
    cmp_binary_exp  go to state 76
    eq_binary_exp   go to state 77
    and_binary_exp  go to state 78
    xor_binary_exp  go to state 79
    or_binary_exp   go to state 80


State 276

   16 val_stmt: "val" lpattern_naked "=" • expr

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "fn"                     shift, and go to state 39
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    vid             go to state 52
    floatl          go to state 53
    expr            go to state 319
    bracketed_exp   go to state 55
    unit_exp        go to state 56
    paren_exp       go to state 57
    vtupleExpr      go to state 58
    vstructExpr     go to state 59
    primary_exp     go to state 60
    int_expr        go to state 61
    stringls        go to state 62
    if_exp          go to state 63
    chain_exp       go to state 64
    lambda_exp      go to state 65
    postfix_exp     go to state 66
    tcall_exp       go to state 67
    vcall_exp       go to state 68
    dot_name_exp    go to state 69
    dot_index_exp   go to state 70
    unary_exp       go to state 71
    unary_op        go to state 72
    binary_exp      go to state 73
    mul_binary_exp  go to state 74
    add_binary_exp  go to state 75
    cmp_binary_exp  go to state 76
    eq_binary_exp   go to state 77
    and_binary_exp  go to state 78
    xor_binary_exp  go to state 79
    or_binary_exp   go to state 80


State 277

   17 var_stmt: "var" lpattern_naked "=" • expr

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "fn"                     shift, and go to state 39
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    vid             go to state 52
    floatl          go to state 53
    expr            go to state 320
    bracketed_exp   go to state 55
    unit_exp        go to state 56
    paren_exp       go to state 57
    vtupleExpr      go to state 58
    vstructExpr     go to state 59
    primary_exp     go to state 60
    int_expr        go to state 61
    stringls        go to state 62
    if_exp          go to state 63
    chain_exp       go to state 64
    lambda_exp      go to state 65
    postfix_exp     go to state 66
    tcall_exp       go to state 67
    vcall_exp       go to state 68
    dot_name_exp    go to state 69
    dot_index_exp   go to state 70
    unary_exp       go to state 71
    unary_op        go to state 72
    binary_exp      go to state 73
    mul_binary_exp  go to state 74
    add_binary_exp  go to state 75
    cmp_binary_exp  go to state 76
    eq_binary_exp   go to state 77
    and_binary_exp  go to state 78
    xor_binary_exp  go to state 79
    or_binary_exp   go to state 80


State 278

   18 set_stmt: "set" expr "=" • expr

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "fn"                     shift, and go to state 39
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    vid             go to state 52
    floatl          go to state 53
    expr            go to state 321
    bracketed_exp   go to state 55
    unit_exp        go to state 56
    paren_exp       go to state 57
    vtupleExpr      go to state 58
    vstructExpr     go to state 59
    primary_exp     go to state 60
    int_expr        go to state 61
    stringls        go to state 62
    if_exp          go to state 63
    chain_exp       go to state 64
    lambda_exp      go to state 65
    postfix_exp     go to state 66
    tcall_exp       go to state 67
    vcall_exp       go to state 68
    dot_name_exp    go to state 69
    dot_index_exp   go to state 70
    unary_exp       go to state 71
    unary_op        go to state 72
    binary_exp      go to state 73
    mul_binary_exp  go to state 74
    add_binary_exp  go to state 75
    cmp_binary_exp  go to state 76
    eq_binary_exp   go to state 77
    and_binary_exp  go to state 78
    xor_binary_exp  go to state 79
    or_binary_exp   go to state 80


State 279

  179 struct_exp_field: vid "=" expr •

    $default  reduce using rule 179 (struct_exp_field)


State 280

   90 chain_prefix: chain_prefix chain_prefix_stmt ";" •

    $default  reduce using rule 90 (chain_prefix)


State 281

   88 chain_exp: "{" chain_prefix expr "}" •

    $default  reduce using rule 88 (chain_exp)


State 282

  179 struct_exp_field: vid • "=" expr

    "="  shift, and go to state 201


State 283

  202 struct_exp_field_cl: struct_exp_field_cl "," struct_exp_field •

    $default  reduce using rule 202 (struct_exp_field_cl)


State 284

  175 varg: "out" expr •

    $default  reduce using rule 175 (varg)


State 285

  176 varg: "inout" expr •

    $default  reduce using rule 176 (varg)


State 286

  178 varg_cl: varg_cl "," • varg

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "fn"                     shift, and go to state 39
    "not"                    shift, and go to state 40
    "out"                    shift, and go to state 212
    "inout"                  shift, and go to state 213
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    vid             go to state 52
    floatl          go to state 53
    expr            go to state 215
    bracketed_exp   go to state 55
    unit_exp        go to state 56
    paren_exp       go to state 57
    vtupleExpr      go to state 58
    vstructExpr     go to state 59
    primary_exp     go to state 60
    int_expr        go to state 61
    stringls        go to state 62
    if_exp          go to state 63
    chain_exp       go to state 64
    lambda_exp      go to state 65
    postfix_exp     go to state 66
    tcall_exp       go to state 67
    vcall_exp       go to state 68
    dot_name_exp    go to state 69
    dot_index_exp   go to state 70
    unary_exp       go to state 71
    unary_op        go to state 72
    binary_exp      go to state 73
    mul_binary_exp  go to state 74
    add_binary_exp  go to state 75
    cmp_binary_exp  go to state 76
    eq_binary_exp   go to state 77
    and_binary_exp  go to state 78
    xor_binary_exp  go to state 79
    or_binary_exp   go to state 80
    varg            go to state 322


State 287

   99 vcall_exp: postfix_exp "(" varg_cl ")" •

    $default  reduce using rule 99 (vcall_exp)


State 288

  173 targ_cl: targ_cl "," • targ

    "<val_id>"               shift, and go to state 11
    "<TypeId>"               shift, and go to state 83
    "if"                     shift, and go to state 38
    "fn"                     shift, and go to state 39
    "Fn"                     shift, and go to state 93
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 94
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    tid               go to state 96
    vid               go to state 97
    floatl            go to state 53
    expr              go to state 218
    bracketed_exp     go to state 55
    unit_exp          go to state 56
    paren_exp         go to state 57
    vtupleExpr        go to state 58
    vstructExpr       go to state 59
    primary_exp       go to state 60
    int_expr          go to state 61
    stringls          go to state 62
    if_exp            go to state 63
    chain_exp         go to state 64
    lambda_exp        go to state 65
    postfix_exp       go to state 66
    tcall_exp         go to state 67
    vcall_exp         go to state 68
    dot_name_exp      go to state 69
    dot_index_exp     go to state 70
    unary_exp         go to state 71
    unary_op          go to state 72
    binary_exp        go to state 73
    mul_binary_exp    go to state 74
    add_binary_exp    go to state 75
    cmp_binary_exp    go to state 76
    eq_binary_exp     go to state 77
    and_binary_exp    go to state 78
    xor_binary_exp    go to state 79
    or_binary_exp     go to state 80
    typespec          go to state 219
    primary_typespec  go to state 103
    paren_typespec    go to state 104
    tuple_typespec    go to state 105
    mod_prefix_tid    go to state 106
    mod_prefix        go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 112
    targ              go to state 323


State 289

   97 tcall_exp: postfix_exp "[" targ_cl "]" •

    $default  reduce using rule 97 (tcall_exp)


State 290

   45 using_stmt: "using" vid "." vid "*" •

    $default  reduce using rule 45 (using_stmt)


State 291

  186 tpattern_field: tid typespec •

    $default  reduce using rule 186 (tpattern_field)


State 292

  185 tpattern_field: vid typespec •

    $default  reduce using rule 185 (tpattern_field)


State 293

  200 tpattern_field_cl: tpattern_field_cl "," • tpattern_field

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 83

    tid             go to state 231
    vid             go to state 232
    tpattern_field  go to state 324


State 294

  193 tpattern: "[" tpattern_field_cl "]" •

    $default  reduce using rule 193 (tpattern)


State 295

  194 tpattern: "!" "[" tpattern_field_cl • "]"
  200 tpattern_field_cl: tpattern_field_cl • "," tpattern_field

    ","  shift, and go to state 293
    "]"  shift, and go to state 325


State 296

   28 fn_stmt: "fn" vid vpattern "->" typespec • "=" bracketed_exp

    "="  shift, and go to state 326


State 297

   30 fn_stmt: "fn" vid vpattern "=" bracketed_exp •

    $default  reduce using rule 30 (fn_stmt)


State 298

   29 fn_stmt: "fn" vid tpattern_seq vpattern "->" • typespec "=" bracketed_exp

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 83
    "Fn"        shift, and go to state 93
    "("         shift, and go to state 240

    tid               go to state 96
    vid               go to state 242
    typespec          go to state 327
    primary_typespec  go to state 103
    paren_typespec    go to state 104
    tuple_typespec    go to state 105
    mod_prefix_tid    go to state 106
    mod_prefix        go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 112


State 299

   31 fn_stmt: "fn" vid tpattern_seq vpattern "=" • bracketed_exp

    "("  shift, and go to state 46
    "{"  shift, and go to state 47

    bracketed_exp  go to state 328
    unit_exp       go to state 56
    paren_exp      go to state 57
    vtupleExpr     go to state 58
    vstructExpr    go to state 59
    chain_exp      go to state 64


State 300

  144 typespec_cl2: typespec • "," typespec
  154 paren_typespec: "(" typespec • ")"
  155 tuple_typespec: "(" typespec • "," ")"

    ","  shift, and go to state 260
    ")"  shift, and go to state 261


State 301

  146 struct_typespec_field: vid • typespec

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 83
    "Fn"        shift, and go to state 93
    "("         shift, and go to state 240

    tid               go to state 96
    vid               go to state 242
    typespec          go to state 329
    primary_typespec  go to state 103
    paren_typespec    go to state 104
    tuple_typespec    go to state 105
    mod_prefix_tid    go to state 106
    mod_prefix        go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 112


State 302

  147 struct_typespec_field_cl: struct_typespec_field •

    $default  reduce using rule 147 (struct_typespec_field_cl)


State 303

  148 struct_typespec_field_cl: struct_typespec_field_cl • "," struct_typespec_field
  169 struct_typespec: "{" struct_typespec_field_cl • "}"

    ","  shift, and go to state 330
    "}"  shift, and go to state 331


State 304

   38 unprefixed_enum_field_pl: unprefixed_enum_field_pl "|" • enum_field

    "<TypeId>"  shift, and go to state 83

    enum_field  go to state 332
    tid         go to state 248


State 305

   40 enum_field: tid "(" • ")"
   41           | tid "(" • typespec_cl1 ")"

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 83
    "Fn"        shift, and go to state 93
    "("         shift, and go to state 240
    ")"         shift, and go to state 333

    tid               go to state 96
    vid               go to state 242
    typespec          go to state 334
    typespec_cl1      go to state 335
    primary_typespec  go to state 103
    paren_typespec    go to state 104
    tuple_typespec    go to state 105
    mod_prefix_tid    go to state 106
    mod_prefix        go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 112


State 306

   33 type_stmt: "type" tid tpattern_seq "=" long_typespec •

    $default  reduce using rule 33 (type_stmt)


State 307

   42 typeclass_stmt: "typeclass" tid "<" tid typespec • ">" "=" "{" type_query_exp_sl "}"
   43               | "typeclass" tid "<" tid typespec • ">" tpattern_seq "=" "{" type_query_exp_sl "}"

    ">"  shift, and go to state 336


State 308

   85 if_exp: "if" bracketed_exp "then" bracketed_exp "else" • primary_exp

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "fn"                     shift, and go to state 39
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    "{"                      shift, and go to state 47

    vid            go to state 52
    floatl         go to state 53
    bracketed_exp  go to state 55
    unit_exp       go to state 56
    paren_exp      go to state 57
    vtupleExpr     go to state 58
    vstructExpr    go to state 59
    primary_exp    go to state 337
    int_expr       go to state 61
    stringls       go to state 62
    if_exp         go to state 63
    chain_exp      go to state 64
    lambda_exp     go to state 65


State 309

  181 vpattern_field: "out" vid typespec •

    $default  reduce using rule 181 (vpattern_field)


State 310

  182 vpattern_field: "inout" vid typespec •

    $default  reduce using rule 182 (vpattern_field)


State 311

  196 vpattern_field_cl: vpattern_field_cl "," vpattern_field •

    $default  reduce using rule 196 (vpattern_field_cl)


State 312

  155 tuple_typespec: "(" typespec "," ")" •

    $default  reduce using rule 155 (tuple_typespec)


State 313

  144 typespec_cl2: typespec "," typespec •

    $default  reduce using rule 144 (typespec_cl2)


State 314

  145 typespec_cl2: typespec_cl2 "," typespec •

    $default  reduce using rule 145 (typespec_cl2)


State 315

  164 tcall_typespec: postfix_typespec "[" targ_cl "]" •

    $default  reduce using rule 164 (tcall_typespec)


State 316

  198 lpattern_field_cl: lpattern_field_cl "," • lpattern_field

    "<val_id>"  shift, and go to state 11

    vid             go to state 192
    lpattern_field  go to state 338


State 317

  187 lpattern: "(" lpattern_field_cl ")" •

    $default  reduce using rule 187 (lpattern)


State 318

   15 const_stmt: "const" lpattern_naked "=" expr •

    $default  reduce using rule 15 (const_stmt)


State 319

   16 val_stmt: "val" lpattern_naked "=" expr •

    $default  reduce using rule 16 (val_stmt)


State 320

   17 var_stmt: "var" lpattern_naked "=" expr •

    $default  reduce using rule 17 (var_stmt)


State 321

   18 set_stmt: "set" expr "=" expr •

    $default  reduce using rule 18 (set_stmt)


State 322

  178 varg_cl: varg_cl "," varg •

    $default  reduce using rule 178 (varg_cl)


State 323

  173 targ_cl: targ_cl "," targ •

    $default  reduce using rule 173 (targ_cl)


State 324

  200 tpattern_field_cl: tpattern_field_cl "," tpattern_field •

    $default  reduce using rule 200 (tpattern_field_cl)


State 325

  194 tpattern: "!" "[" tpattern_field_cl "]" •

    $default  reduce using rule 194 (tpattern)


State 326

   28 fn_stmt: "fn" vid vpattern "->" typespec "=" • bracketed_exp

    "("  shift, and go to state 46
    "{"  shift, and go to state 47

    bracketed_exp  go to state 339
    unit_exp       go to state 56
    paren_exp      go to state 57
    vtupleExpr     go to state 58
    vstructExpr    go to state 59
    chain_exp      go to state 64


State 327

   29 fn_stmt: "fn" vid tpattern_seq vpattern "->" typespec • "=" bracketed_exp

    "="  shift, and go to state 340


State 328

   31 fn_stmt: "fn" vid tpattern_seq vpattern "=" bracketed_exp •

    $default  reduce using rule 31 (fn_stmt)


State 329

  146 struct_typespec_field: vid typespec •

    $default  reduce using rule 146 (struct_typespec_field)


State 330

  148 struct_typespec_field_cl: struct_typespec_field_cl "," • struct_typespec_field

    "<val_id>"  shift, and go to state 11

    vid                    go to state 301
    struct_typespec_field  go to state 341


State 331

  169 struct_typespec: "{" struct_typespec_field_cl "}" •

    $default  reduce using rule 169 (struct_typespec)


State 332

   38 unprefixed_enum_field_pl: unprefixed_enum_field_pl "|" enum_field •

    $default  reduce using rule 38 (unprefixed_enum_field_pl)


State 333

   40 enum_field: tid "(" ")" •

    $default  reduce using rule 40 (enum_field)


State 334

  142 typespec_cl1: typespec •

    $default  reduce using rule 142 (typespec_cl1)


State 335

   41 enum_field: tid "(" typespec_cl1 • ")"
  143 typespec_cl1: typespec_cl1 • "," typespec

    ","  shift, and go to state 342
    ")"  shift, and go to state 343


State 336

   42 typeclass_stmt: "typeclass" tid "<" tid typespec ">" • "=" "{" type_query_exp_sl "}"
   43               | "typeclass" tid "<" tid typespec ">" • tpattern_seq "=" "{" type_query_exp_sl "}"

    "["  shift, and go to state 155
    "="  shift, and go to state 344
    "!"  shift, and go to state 156

    tpattern      go to state 158
    tpattern_seq  go to state 345


State 337

   85 if_exp: "if" bracketed_exp "then" bracketed_exp "else" primary_exp •

    $default  reduce using rule 85 (if_exp)


State 338

  198 lpattern_field_cl: lpattern_field_cl "," lpattern_field •

    $default  reduce using rule 198 (lpattern_field_cl)


State 339

   28 fn_stmt: "fn" vid vpattern "->" typespec "=" bracketed_exp •

    $default  reduce using rule 28 (fn_stmt)


State 340

   29 fn_stmt: "fn" vid tpattern_seq vpattern "->" typespec "=" • bracketed_exp

    "("  shift, and go to state 46
    "{"  shift, and go to state 47

    bracketed_exp  go to state 346
    unit_exp       go to state 56
    paren_exp      go to state 57
    vtupleExpr     go to state 58
    vstructExpr    go to state 59
    chain_exp      go to state 64


State 341

  148 struct_typespec_field_cl: struct_typespec_field_cl "," struct_typespec_field •

    $default  reduce using rule 148 (struct_typespec_field_cl)


State 342

  143 typespec_cl1: typespec_cl1 "," • typespec

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 83
    "Fn"        shift, and go to state 93
    "("         shift, and go to state 240

    tid               go to state 96
    vid               go to state 242
    typespec          go to state 347
    primary_typespec  go to state 103
    paren_typespec    go to state 104
    tuple_typespec    go to state 105
    mod_prefix_tid    go to state 106
    mod_prefix        go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 112


State 343

   41 enum_field: tid "(" typespec_cl1 ")" •

    $default  reduce using rule 41 (enum_field)


State 344

   42 typeclass_stmt: "typeclass" tid "<" tid typespec ">" "=" • "{" type_query_exp_sl "}"

    "{"  shift, and go to state 348


State 345

   43 typeclass_stmt: "typeclass" tid "<" tid typespec ">" tpattern_seq • "=" "{" type_query_exp_sl "}"
  204 tpattern_seq: tpattern_seq • tpattern

    "["  shift, and go to state 155
    "="  shift, and go to state 349
    "!"  shift, and go to state 156

    tpattern  go to state 239


State 346

   29 fn_stmt: "fn" vid tpattern_seq vpattern "->" typespec "=" bracketed_exp •

    $default  reduce using rule 29 (fn_stmt)


State 347

  143 typespec_cl1: typespec_cl1 "," typespec •

    $default  reduce using rule 143 (typespec_cl1)


State 348

   42 typeclass_stmt: "typeclass" tid "<" tid typespec ">" "=" "{" • type_query_exp_sl "}"

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 83
    "Fn"        shift, and go to state 93
    "("         shift, and go to state 240

    tid                go to state 96
    vid                go to state 242
    type_query_exp_sl  go to state 350
    type_query_exp     go to state 351
    typespec           go to state 102
    primary_typespec   go to state 103
    paren_typespec     go to state 104
    tuple_typespec     go to state 105
    mod_prefix_tid     go to state 106
    mod_prefix         go to state 107
    fn_typespec        go to state 108
    postfix_typespec   go to state 109
    tcall_typespec     go to state 110
    dot_typespec       go to state 111
    unary_typespec     go to state 112


State 349

   43 typeclass_stmt: "typeclass" tid "<" tid typespec ">" tpattern_seq "=" • "{" type_query_exp_sl "}"

    "{"  shift, and go to state 352


State 350

   42 typeclass_stmt: "typeclass" tid "<" tid typespec ">" "=" "{" type_query_exp_sl • "}"
   59 type_query_exp_sl: type_query_exp_sl • type_query_exp ";"

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 83
    "Fn"        shift, and go to state 93
    "("         shift, and go to state 240
    "}"         shift, and go to state 353

    tid               go to state 96
    vid               go to state 242
    type_query_exp    go to state 354
    typespec          go to state 102
    primary_typespec  go to state 103
    paren_typespec    go to state 104
    tuple_typespec    go to state 105
    mod_prefix_tid    go to state 106
    mod_prefix        go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 112


State 351

   58 type_query_exp_sl: type_query_exp • ";"

    ";"  shift, and go to state 355


State 352

   43 typeclass_stmt: "typeclass" tid "<" tid typespec ">" tpattern_seq "=" "{" • type_query_exp_sl "}"

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 83
    "Fn"        shift, and go to state 93
    "("         shift, and go to state 240

    tid                go to state 96
    vid                go to state 242
    type_query_exp_sl  go to state 356
    type_query_exp     go to state 351
    typespec           go to state 102
    primary_typespec   go to state 103
    paren_typespec     go to state 104
    tuple_typespec     go to state 105
    mod_prefix_tid     go to state 106
    mod_prefix         go to state 107
    fn_typespec        go to state 108
    postfix_typespec   go to state 109
    tcall_typespec     go to state 110
    dot_typespec       go to state 111
    unary_typespec     go to state 112


State 353

   42 typeclass_stmt: "typeclass" tid "<" tid typespec ">" "=" "{" type_query_exp_sl "}" •

    $default  reduce using rule 42 (typeclass_stmt)


State 354

   59 type_query_exp_sl: type_query_exp_sl type_query_exp • ";"

    ";"  shift, and go to state 357


State 355

   58 type_query_exp_sl: type_query_exp ";" •

    $default  reduce using rule 58 (type_query_exp_sl)


State 356

   43 typeclass_stmt: "typeclass" tid "<" tid typespec ">" tpattern_seq "=" "{" type_query_exp_sl • "}"
   59 type_query_exp_sl: type_query_exp_sl • type_query_exp ";"

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 83
    "Fn"        shift, and go to state 93
    "("         shift, and go to state 240
    "}"         shift, and go to state 358

    tid               go to state 96
    vid               go to state 242
    type_query_exp    go to state 354
    typespec          go to state 102
    primary_typespec  go to state 103
    paren_typespec    go to state 104
    tuple_typespec    go to state 105
    mod_prefix_tid    go to state 106
    mod_prefix        go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 112


State 357

   59 type_query_exp_sl: type_query_exp_sl type_query_exp ";" •

    $default  reduce using rule 59 (type_query_exp_sl)


State 358

   43 typeclass_stmt: "typeclass" tid "<" tid typespec ">" tpattern_seq "=" "{" type_query_exp_sl "}" •

    $default  reduce using rule 43 (typeclass_stmt)
