Terminals unused in grammar

    "<__42__>"
    "match"
    "with"
    ":"
    "&"
    "EOS"
    "<null>"


State 97 conflicts: 1 shift/reduce


Grammar

    0 $accept: script $end

    1 script: scriptContent

    2 scriptContent: scriptContentStmt ";"
    3              | scriptContent scriptContentStmt ";"

    4 scriptContentStmt: mod_stmt
    5                  | import_stmt
    6                  | extern_stmt

    7 mod_stmt: "mod" "<val_id>" "{" moduleContent "}"

    8 moduleContent: moduleContentStmt ";"
    9              | moduleContent moduleContentStmt ";"

   10 chain_prefix_stmt: const_stmt
   11                  | val_stmt
   12                  | var_stmt
   13                  | set_stmt
   14                  | discard_stmt

   15 const_stmt: "const" lpattern_naked "=" expr

   16 val_stmt: "val" lpattern_naked "=" expr

   17 var_stmt: "var" lpattern_naked "=" expr

   18 set_stmt: "set" expr "=" expr

   19 discard_stmt: "discard" expr

   20 moduleContentStmt: fn_stmt
   21                  | type_stmt
   22                  | enum_stmt
   23                  | typeclass_stmt
   24                  | import_stmt
   25                  | mod_stmt
   26                  | using_stmt
   27                  | extern_stmt

   28 fn_stmt: "fn" vid vpattern "->" typespec "=" bracketed_exp
   29        | "fn" vid tpattern_seq vpattern "->" typespec "=" bracketed_exp
   30        | "fn" vid vpattern "=" bracketed_exp
   31        | "fn" vid tpattern_seq vpattern "=" bracketed_exp

   32 type_stmt: "type" tid "=" long_typespec
   33          | "type" tid tpattern_seq "=" long_typespec

   34 enum_stmt: "type" tid enum_field_pl

   35 enum_field_pl: "|" unprefixed_enum_field_pl

   36 unprefixed_enum_field_pl: enum_field
   37                         | unprefixed_enum_field_pl "|" enum_field

   38 enum_field: tid
   39           | tid "(" ")"
   40           | tid "(" typespec_cl1 ")"

   41 typeclass_stmt: "typeclass" tid "<" tid typespec ">" "=" "{" type_query_exp_sl "}"
   42               | "typeclass" tid "<" tid typespec ">" tpattern_seq "=" "{" type_query_exp_sl "}"

   43 using_stmt: "using" vid "." "*"
   44           | "using" vid "." vid "*"

   45 import_stmt: "import" vid "from" stringl "type" stringl

   46 extern_stmt: "extern" vid "from" expr

   47 tid: "<TypeId>"

   48 vid: "<val_id>"

   49 floatl: "4.2"

   50 stringl: "'sq-string-literal'"
   51        | "\"dq-string-literal\""

   52 expr: binary_exp

   53 long_exp: type_query_exp
   54         | expr

   55 expr_cl2: expr "," expr
   56         | expr_cl2 "," expr

   57 type_query_exp_sl: type_query_exp ";"
   58                  | type_query_exp_sl type_query_exp ";"

   59 bracketed_exp: unit_exp
   60              | paren_exp
   61              | vtupleExpr
   62              | vstructExpr
   63              | chain_exp

   64 unit_exp: "(" ")"
   65         | "{" "}"

   66 paren_exp: "(" long_exp ")"

   67 vtupleExpr: "(" expr "," ")"
   68           | "(" expr_cl2 ")"

   69 vstructExpr: "{" struct_exp_field_cl "}"

   70 primary_exp: bracketed_exp
   71            | vid
   72            | int_expr
   73            | floatl
   74            | stringls
   75            | if_exp
   76            | lambda_exp

   77 int_expr: "42"
   78         | "0x2a"

   79 stringls: "'sq-string-literal'"
   80         | "\"dq-string-literal\""
   81         | stringls "'sq-string-literal'"
   82         | stringls "\"dq-string-literal\""

   83 if_exp: "if" bracketed_exp "then" bracketed_exp
   84       | "if" bracketed_exp "then" bracketed_exp "else" primary_exp

   85 chain_exp: "{" expr "}"
   86          | "{" chain_prefix "}"
   87          | "{" chain_prefix expr "}"

   88 chain_prefix: chain_prefix_stmt ";"
   89             | chain_prefix chain_prefix_stmt ";"

   90 lambda_exp: "fn" vpattern "=" bracketed_exp

   91 postfix_exp: primary_exp
   92            | tcall_exp
   93            | vcall_exp
   94            | dot_name_exp
   95            | dot_index_exp

   96 tcall_exp: postfix_exp "[" targ_cl "]"

   97 vcall_exp: postfix_exp "(" ")"
   98          | postfix_exp "(" varg_cl ")"

   99 dot_name_exp: postfix_exp "." "<val_id>"
  100             | postfix_exp "." "<TypeId>"

  101 dot_index_exp: postfix_exp "." int_expr
  102              | postfix_exp "." bracketed_exp

  103 unary_exp: postfix_exp
  104          | unary_op unary_exp

  105 unary_op: "+"
  106         | "-"
  107         | "*"
  108         | "^"
  109         | "not"

  110 binary_exp: or_binary_exp

  111 mul_binary_op: "*"
  112              | "/"
  113              | "%"

  114 mul_binary_exp: unary_exp
  115               | mul_binary_exp mul_binary_op unary_exp

  116 add_binary_op: "+"
  117              | "-"

  118 add_binary_exp: mul_binary_exp
  119               | add_binary_exp add_binary_op mul_binary_exp

  120 cmp_binary_op: "<"
  121              | "<="
  122              | ">"
  123              | ">="

  124 cmp_binary_exp: add_binary_exp
  125               | cmp_binary_exp cmp_binary_op add_binary_exp

  126 eq_binary_op: "=="
  127             | "!="

  128 eq_binary_exp: cmp_binary_exp
  129              | eq_binary_exp eq_binary_op cmp_binary_exp

  130 and_binary_exp: eq_binary_exp
  131               | and_binary_exp "and" eq_binary_exp

  132 xor_binary_exp: and_binary_exp
  133               | xor_binary_exp "xor" and_binary_exp

  134 or_binary_exp: xor_binary_exp
  135              | or_binary_exp "or" xor_binary_exp

  136 type_query_exp: typespec type_query_op typespec

  137 type_query_op: ":<"
  138              | ">:"
  139              | "::"

  140 typespec: unary_typespec

  141 typespec_cl1: typespec
  142             | typespec_cl1 "," typespec

  143 typespec_cl2: typespec "," typespec
  144             | typespec_cl2 "," typespec

  145 struct_typespec_field: vid typespec

  146 struct_typespec_field_cl: struct_typespec_field
  147                         | struct_typespec_field_cl "," struct_typespec_field

  148 primary_typespec: tid
  149                 | paren_typespec
  150                 | tuple_typespec
  151                 | mod_prefix_tid
  152                 | fn_typespec

  153 paren_typespec: "(" typespec ")"

  154 tuple_typespec: "(" typespec "," ")"
  155               | "(" typespec_cl2 ")"

  156 mod_prefix_tid: mod_prefix tid

  157 mod_prefix: vid "."
  158           | mod_prefix vid "."

  159 fn_typespec: "Fn" vpattern primary_typespec

  160 postfix_typespec: primary_typespec
  161                 | tcall_typespec
  162                 | dot_typespec

  163 tcall_typespec: postfix_typespec "[" targ_cl "]"

  164 dot_typespec: postfix_typespec "." "<val_id>"

  165 unary_typespec: postfix_typespec

  166 long_typespec: unary_typespec
  167              | struct_typespec

  168 struct_typespec: "{" struct_typespec_field_cl "}"

  169 targ: typespec
  170     | expr

  171 targ_cl: targ
  172        | targ_cl "," targ

  173 varg: expr
  174     | "out" expr
  175     | "inout" expr

  176 varg_cl: varg
  177        | varg_cl "," varg

  178 struct_exp_field: vid "=" expr

  179 vpattern_field: vid typespec
  180               | "out" vid typespec
  181               | "inout" vid typespec

  182 lpattern_field: vid typespec
  183               | vid

  184 tpattern_field: vid typespec
  185               | tid typespec

  186 lpattern: "(" lpattern_field_cl ")"
  187         | "(" ")"

  188 lpattern_naked: lpattern_field
  189               | lpattern

  190 vpattern: "(" vpattern_field_cl ")"
  191         | "(" ")"

  192 tpattern: "[" tpattern_field_cl "]"
  193         | "!" "[" tpattern_field_cl "]"

  194 vpattern_field_cl: vpattern_field
  195                  | vpattern_field_cl "," vpattern_field

  196 lpattern_field_cl: lpattern_field
  197                  | lpattern_field_cl "," lpattern_field

  198 tpattern_field_cl: tpattern_field
  199                  | tpattern_field_cl "," tpattern_field

  200 struct_exp_field_cl: struct_exp_field
  201                    | struct_exp_field_cl "," struct_exp_field

  202 tpattern_seq: tpattern
  203             | tpattern_seq tpattern


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    "<val_id>" <TokenInfo> (258) 7 48 99 164
    "<TypeId>" <TokenInfo> (259) 47 100
    "<__42__>" <TokenInfo> (260)
    "using" (261) 43 44
    "mod" (262) 7
    "if" (263) 83 84
    "then" (264) 83 84
    "else" (265) 84
    "match" (266)
    "with" (267)
    "import" (268) 45
    "extern" (269) 46
    "from" (270) 45 46
    "const" (271) 15
    "val" (272) 16
    "var" (273) 17
    "set" (274) 18
    "fn" (275) 28 29 30 31 90
    "Fn" (276) 159
    "type" (277) 32 33 34 45
    "and" (278) 131
    "xor" (279) 133
    "or" (280) 135
    "not" (281) 109
    "typeclass" (282) 41 42
    "out" (283) 174 180
    "inout" (284) 175 181
    "discard" (285) 19
    "42" <TokenInfo> (286) 77
    "0x2a" <TokenInfo> (287) 78
    "4.2" <TokenInfo> (288) 49
    "\"dq-string-literal\"" <TokenInfo> (289) 51 80 82
    "'sq-string-literal'" <TokenInfo> (290) 50 79 81
    "." (291) 43 44 99 100 101 102 157 158 164
    ":" (292)
    "," (293) 55 56 67 142 143 144 147 154 172 177 195 197 199 201
    ";" (294) 2 3 8 9 57 58 88 89
    "::" (295) 139
    "(" (296) 39 40 64 66 67 68 97 98 153 154 155 186 187 190 191
    ")" (297) 39 40 64 66 67 68 97 98 153 154 155 186 187 190 191
    "[" (298) 96 163 192 193
    "]" (299) 96 163 192 193
    "{" (300) 7 41 42 65 69 85 86 87 168
    "}" (301) 7 41 42 65 69 85 86 87 168
    "->" (302) 28 29
    "*" (303) 43 44 107 111
    "/" (304) 112
    "%" (305) 113
    "+" (306) 105 116
    "-" (307) 106 117
    "<" (308) 41 42 120
    "<=" (309) 121
    ">" (310) 41 42 122
    ">=" (311) 123
    "=" (312) 15 16 17 18 28 29 30 31 32 33 41 42 90 178
    "==" (313) 126
    "!=" (314) 127
    "^" (315) 108
    "&" (316)
    "!" (317) 193
    "|" (318) 35 37
    "EOS" (319)
    ":<" (320) 137
    ">:" (321) 138
    "<null>" (322)


Nonterminals, with rules where they appear

    $accept (68)
        on left: 0
    script <pdm::ast::Script*> (69)
        on left: 1
        on right: 0
    scriptContent <std::vector<pdm::ast::Stmt*>> (70)
        on left: 2 3
        on right: 1 3
    scriptContentStmt <pdm::ast::Stmt*> (71)
        on left: 4 5 6
        on right: 2 3
    mod_stmt <pdm::ast::Stmt*> (72)
        on left: 7
        on right: 4 25
    moduleContent <std::vector<pdm::ast::Stmt*>> (73)
        on left: 8 9
        on right: 7 9
    chain_prefix_stmt <pdm::ast::Stmt*> (74)
        on left: 10 11 12 13 14
        on right: 88 89
    const_stmt <pdm::ast::Stmt*> (75)
        on left: 15
        on right: 10
    val_stmt <pdm::ast::Stmt*> (76)
        on left: 16
        on right: 11
    var_stmt <pdm::ast::Stmt*> (77)
        on left: 17
        on right: 12
    set_stmt <pdm::ast::Stmt*> (78)
        on left: 18
        on right: 13
    discard_stmt <pdm::ast::Stmt*> (79)
        on left: 19
        on right: 14
    moduleContentStmt <pdm::ast::Stmt*> (80)
        on left: 20 21 22 23 24 25 26 27
        on right: 8 9
    fn_stmt <pdm::ast::Stmt*> (81)
        on left: 28 29 30 31
        on right: 20
    type_stmt <pdm::ast::Stmt*> (82)
        on left: 32 33
        on right: 21
    enum_stmt <pdm::ast::Stmt*> (83)
        on left: 34
        on right: 22
    enum_field_pl <std::vector<pdm::ast::EnumStmt::Field*>> (84)
        on left: 35
        on right: 34
    unprefixed_enum_field_pl <std::vector<pdm::ast::EnumStmt::Field*>> (85)
        on left: 36 37
        on right: 35 37
    enum_field <pdm::ast::EnumStmt::Field*> (86)
        on left: 38 39 40
        on right: 36 37
    typeclass_stmt <pdm::ast::Stmt*> (87)
        on left: 41 42
        on right: 23
    using_stmt <pdm::ast::Stmt*> (88)
        on left: 43 44
        on right: 26
    import_stmt <pdm::ast::Stmt*> (89)
        on left: 45
        on right: 5 24
    extern_stmt <pdm::ast::Stmt*> (90)
        on left: 46
        on right: 6 27
    tid <TokenInfo> (91)
        on left: 47
        on right: 32 33 34 38 39 40 41 42 148 156 185
    vid <TokenInfo> (92)
        on left: 48
        on right: 28 29 30 31 43 44 45 46 71 145 157 158 178 179 180 181 182 183 184
    floatl <TokenInfo> (93)
        on left: 49
        on right: 73
    stringl <TokenInfo> (94)
        on left: 50 51
        on right: 45
    expr <pdm::ast::Exp*> (95)
        on left: 52
        on right: 15 16 17 18 19 46 54 55 56 67 85 87 170 173 174 175 178
    long_exp <pdm::ast::Exp*> (96)
        on left: 53 54
        on right: 66
    expr_cl2 <std::vector<pdm::ast::Exp*>> (97)
        on left: 55 56
        on right: 56 68
    type_query_exp_sl <std::vector<pdm::ast::TypeQueryExp*>> (98)
        on left: 57 58
        on right: 41 42 58
    bracketed_exp <pdm::ast::Exp*> (99)
        on left: 59 60 61 62 63
        on right: 28 29 30 31 70 83 84 90 102
    unit_exp <pdm::ast::Exp*> (100)
        on left: 64 65
        on right: 59
    paren_exp <pdm::ast::Exp*> (101)
        on left: 66
        on right: 60
    vtupleExpr <pdm::ast::Exp*> (102)
        on left: 67 68
        on right: 61
    vstructExpr <pdm::ast::Exp*> (103)
        on left: 69
        on right: 62
    primary_exp <pdm::ast::Exp*> (104)
        on left: 70 71 72 73 74 75 76
        on right: 84 91
    int_expr <pdm::ast::Exp*> (105)
        on left: 77 78
        on right: 72 101
    stringls <std::vector<pdm::ast::StringExp::Piece>> (106)
        on left: 79 80 81 82
        on right: 74 81 82
    if_exp <pdm::ast::Exp*> (107)
        on left: 83 84
        on right: 75
    chain_exp <pdm::ast::Exp*> (108)
        on left: 85 86 87
        on right: 63
    chain_prefix <std::vector<pdm::ast::Stmt*>> (109)
        on left: 88 89
        on right: 86 87 89
    lambda_exp <pdm::ast::Exp*> (110)
        on left: 90
        on right: 76
    postfix_exp <pdm::ast::Exp*> (111)
        on left: 91 92 93 94 95
        on right: 96 97 98 99 100 101 102 103
    tcall_exp <pdm::ast::Exp*> (112)
        on left: 96
        on right: 92
    vcall_exp <pdm::ast::Exp*> (113)
        on left: 97 98
        on right: 93
    dot_name_exp <pdm::ast::Exp*> (114)
        on left: 99 100
        on right: 94
    dot_index_exp <pdm::ast::Exp*> (115)
        on left: 101 102
        on right: 95
    unary_exp <pdm::ast::Exp*> (116)
        on left: 103 104
        on right: 104 114 115
    unary_op <pdm::ast::UnaryOperator> (117)
        on left: 105 106 107 108 109
        on right: 104
    binary_exp <pdm::ast::Exp*> (118)
        on left: 110
        on right: 52
    mul_binary_op <pdm::ast::BinaryOperator> (119)
        on left: 111 112 113
        on right: 115
    mul_binary_exp <pdm::ast::Exp*> (120)
        on left: 114 115
        on right: 115 118 119
    add_binary_op <pdm::ast::BinaryOperator> (121)
        on left: 116 117
        on right: 119
    add_binary_exp <pdm::ast::Exp*> (122)
        on left: 118 119
        on right: 119 124 125
    cmp_binary_op <pdm::ast::BinaryOperator> (123)
        on left: 120 121 122 123
        on right: 125
    cmp_binary_exp <pdm::ast::Exp*> (124)
        on left: 124 125
        on right: 125 128 129
    eq_binary_op <pdm::ast::BinaryOperator> (125)
        on left: 126 127
        on right: 129
    eq_binary_exp <pdm::ast::Exp*> (126)
        on left: 128 129
        on right: 129 130 131
    and_binary_exp <pdm::ast::Exp*> (127)
        on left: 130 131
        on right: 131 132 133
    xor_binary_exp <pdm::ast::Exp*> (128)
        on left: 132 133
        on right: 133 134 135
    or_binary_exp <pdm::ast::Exp*> (129)
        on left: 134 135
        on right: 110 135
    type_query_exp <pdm::ast::TypeQueryExp*> (130)
        on left: 136
        on right: 53 57 58
    type_query_op <pdm::ast::TypeQueryKind> (131)
        on left: 137 138 139
        on right: 136
    typespec <pdm::ast::Typespec*> (132)
        on left: 140
        on right: 28 29 41 42 136 141 142 143 144 145 153 154 169 179 180 181 182 184 185
    typespec_cl1 <std::vector<pdm::ast::Typespec*>> (133)
        on left: 141 142
        on right: 40 142
    typespec_cl2 <std::vector<pdm::ast::Typespec*>> (134)
        on left: 143 144
        on right: 144 155
    struct_typespec_field <pdm::ast::StructTypespec::Field*> (135)
        on left: 145
        on right: 146 147
    struct_typespec_field_cl <std::vector<pdm::ast::StructTypespec::Field*>> (136)
        on left: 146 147
        on right: 147 168
    primary_typespec <pdm::ast::Typespec*> (137)
        on left: 148 149 150 151 152
        on right: 159 160
    paren_typespec <pdm::ast::Typespec*> (138)
        on left: 153
        on right: 149
    tuple_typespec <pdm::ast::Typespec*> (139)
        on left: 154 155
        on right: 150
    mod_prefix_tid <pdm::ast::Typespec*> (140)
        on left: 156
        on right: 151
    mod_prefix <std::vector<pdm::intern::String>> (141)
        on left: 157 158
        on right: 156 158
    fn_typespec <pdm::ast::Typespec*> (142)
        on left: 159
        on right: 152
    postfix_typespec <pdm::ast::Typespec*> (143)
        on left: 160 161 162
        on right: 163 164 165
    tcall_typespec <pdm::ast::Typespec*> (144)
        on left: 163
        on right: 161
    dot_typespec <pdm::ast::Typespec*> (145)
        on left: 164
        on right: 162
    unary_typespec <pdm::ast::Typespec*> (146)
        on left: 165
        on right: 140 166
    long_typespec <pdm::ast::Typespec*> (147)
        on left: 166 167
        on right: 32 33
    struct_typespec <pdm::ast::Typespec*> (148)
        on left: 168
        on right: 167
    targ <pdm::ast::TArg*> (149)
        on left: 169 170
        on right: 171 172
    targ_cl <std::vector<pdm::ast::TArg*>> (150)
        on left: 171 172
        on right: 96 163 172
    varg <pdm::ast::VArg*> (151)
        on left: 173 174 175
        on right: 176 177
    varg_cl <std::vector<pdm::ast::VArg*>> (152)
        on left: 176 177
        on right: 98 177
    struct_exp_field <pdm::ast::StructExp::Field*> (153)
        on left: 178
        on right: 200 201
    vpattern_field <pdm::ast::VPattern::Field*> (154)
        on left: 179 180 181
        on right: 194 195
    lpattern_field <pdm::ast::LPattern::Field*> (155)
        on left: 182 183
        on right: 188 196 197
    tpattern_field <pdm::ast::TPattern::Field*> (156)
        on left: 184 185
        on right: 198 199
    lpattern <pdm::ast::LPattern*> (157)
        on left: 186 187
        on right: 189
    lpattern_naked <pdm::ast::LPattern*> (158)
        on left: 188 189
        on right: 15 16 17
    vpattern <pdm::ast::VPattern*> (159)
        on left: 190 191
        on right: 28 29 30 31 90 159
    tpattern <pdm::ast::TPattern*> (160)
        on left: 192 193
        on right: 202 203
    vpattern_field_cl <std::vector<pdm::ast::VPattern::Field*>> (161)
        on left: 194 195
        on right: 190 195
    lpattern_field_cl <std::vector<pdm::ast::LPattern::Field*>> (162)
        on left: 196 197
        on right: 186 197
    tpattern_field_cl <std::vector<pdm::ast::TPattern::Field*>> (163)
        on left: 198 199
        on right: 192 193 199
    struct_exp_field_cl <std::vector<pdm::ast::StructExp::Field*>> (164)
        on left: 200 201
        on right: 69 201
    tpattern_seq <std::vector<pdm::ast::TPattern*>> (165)
        on left: 202 203
        on right: 29 31 33 42 203


State 0

    0 $accept: • script $end

    "mod"     shift, and go to state 1
    "import"  shift, and go to state 2
    "extern"  shift, and go to state 3

    script             go to state 4
    scriptContent      go to state 5
    scriptContentStmt  go to state 6
    mod_stmt           go to state 7
    import_stmt        go to state 8
    extern_stmt        go to state 9


State 1

    7 mod_stmt: "mod" • "<val_id>" "{" moduleContent "}"

    "<val_id>"  shift, and go to state 10


State 2

   45 import_stmt: "import" • vid "from" stringl "type" stringl

    "<val_id>"  shift, and go to state 11

    vid  go to state 12


State 3

   46 extern_stmt: "extern" • vid "from" expr

    "<val_id>"  shift, and go to state 11

    vid  go to state 13


State 4

    0 $accept: script • $end

    $end  shift, and go to state 14


State 5

    1 script: scriptContent •
    3 scriptContent: scriptContent • scriptContentStmt ";"

    "mod"     shift, and go to state 1
    "import"  shift, and go to state 2
    "extern"  shift, and go to state 3

    $default  reduce using rule 1 (script)

    scriptContentStmt  go to state 15
    mod_stmt           go to state 7
    import_stmt        go to state 8
    extern_stmt        go to state 9


State 6

    2 scriptContent: scriptContentStmt • ";"

    ";"  shift, and go to state 16


State 7

    4 scriptContentStmt: mod_stmt •

    $default  reduce using rule 4 (scriptContentStmt)


State 8

    5 scriptContentStmt: import_stmt •

    $default  reduce using rule 5 (scriptContentStmt)


State 9

    6 scriptContentStmt: extern_stmt •

    $default  reduce using rule 6 (scriptContentStmt)


State 10

    7 mod_stmt: "mod" "<val_id>" • "{" moduleContent "}"

    "{"  shift, and go to state 17


State 11

   48 vid: "<val_id>" •

    $default  reduce using rule 48 (vid)


State 12

   45 import_stmt: "import" vid • "from" stringl "type" stringl

    "from"  shift, and go to state 18


State 13

   46 extern_stmt: "extern" vid • "from" expr

    "from"  shift, and go to state 19


State 14

    0 $accept: script $end •

    $default  accept


State 15

    3 scriptContent: scriptContent scriptContentStmt • ";"

    ";"  shift, and go to state 20


State 16

    2 scriptContent: scriptContentStmt ";" •

    $default  reduce using rule 2 (scriptContent)


State 17

    7 mod_stmt: "mod" "<val_id>" "{" • moduleContent "}"

    "using"      shift, and go to state 21
    "mod"        shift, and go to state 1
    "import"     shift, and go to state 2
    "extern"     shift, and go to state 3
    "fn"         shift, and go to state 22
    "type"       shift, and go to state 23
    "typeclass"  shift, and go to state 24

    mod_stmt           go to state 25
    moduleContent      go to state 26
    moduleContentStmt  go to state 27
    fn_stmt            go to state 28
    type_stmt          go to state 29
    enum_stmt          go to state 30
    typeclass_stmt     go to state 31
    using_stmt         go to state 32
    import_stmt        go to state 33
    extern_stmt        go to state 34


State 18

   45 import_stmt: "import" vid "from" • stringl "type" stringl

    "\"dq-string-literal\""  shift, and go to state 35
    "'sq-string-literal'"    shift, and go to state 36

    stringl  go to state 37


State 19

   46 extern_stmt: "extern" vid "from" • expr

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "fn"                     shift, and go to state 39
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    vid             go to state 52
    floatl          go to state 53
    expr            go to state 54
    bracketed_exp   go to state 55
    unit_exp        go to state 56
    paren_exp       go to state 57
    vtupleExpr      go to state 58
    vstructExpr     go to state 59
    primary_exp     go to state 60
    int_expr        go to state 61
    stringls        go to state 62
    if_exp          go to state 63
    chain_exp       go to state 64
    lambda_exp      go to state 65
    postfix_exp     go to state 66
    tcall_exp       go to state 67
    vcall_exp       go to state 68
    dot_name_exp    go to state 69
    dot_index_exp   go to state 70
    unary_exp       go to state 71
    unary_op        go to state 72
    binary_exp      go to state 73
    mul_binary_exp  go to state 74
    add_binary_exp  go to state 75
    cmp_binary_exp  go to state 76
    eq_binary_exp   go to state 77
    and_binary_exp  go to state 78
    xor_binary_exp  go to state 79
    or_binary_exp   go to state 80


State 20

    3 scriptContent: scriptContent scriptContentStmt ";" •

    $default  reduce using rule 3 (scriptContent)


State 21

   43 using_stmt: "using" • vid "." "*"
   44           | "using" • vid "." vid "*"

    "<val_id>"  shift, and go to state 11

    vid  go to state 81


State 22

   28 fn_stmt: "fn" • vid vpattern "->" typespec "=" bracketed_exp
   29        | "fn" • vid tpattern_seq vpattern "->" typespec "=" bracketed_exp
   30        | "fn" • vid vpattern "=" bracketed_exp
   31        | "fn" • vid tpattern_seq vpattern "=" bracketed_exp

    "<val_id>"  shift, and go to state 11

    vid  go to state 82


State 23

   32 type_stmt: "type" • tid "=" long_typespec
   33          | "type" • tid tpattern_seq "=" long_typespec
   34 enum_stmt: "type" • tid enum_field_pl

    "<TypeId>"  shift, and go to state 83

    tid  go to state 84


State 24

   41 typeclass_stmt: "typeclass" • tid "<" tid typespec ">" "=" "{" type_query_exp_sl "}"
   42               | "typeclass" • tid "<" tid typespec ">" tpattern_seq "=" "{" type_query_exp_sl "}"

    "<TypeId>"  shift, and go to state 83

    tid  go to state 85


State 25

   25 moduleContentStmt: mod_stmt •

    $default  reduce using rule 25 (moduleContentStmt)


State 26

    7 mod_stmt: "mod" "<val_id>" "{" moduleContent • "}"
    9 moduleContent: moduleContent • moduleContentStmt ";"

    "using"      shift, and go to state 21
    "mod"        shift, and go to state 1
    "import"     shift, and go to state 2
    "extern"     shift, and go to state 3
    "fn"         shift, and go to state 22
    "type"       shift, and go to state 23
    "typeclass"  shift, and go to state 24
    "}"          shift, and go to state 86

    mod_stmt           go to state 25
    moduleContentStmt  go to state 87
    fn_stmt            go to state 28
    type_stmt          go to state 29
    enum_stmt          go to state 30
    typeclass_stmt     go to state 31
    using_stmt         go to state 32
    import_stmt        go to state 33
    extern_stmt        go to state 34


State 27

    8 moduleContent: moduleContentStmt • ";"

    ";"  shift, and go to state 88


State 28

   20 moduleContentStmt: fn_stmt •

    $default  reduce using rule 20 (moduleContentStmt)


State 29

   21 moduleContentStmt: type_stmt •

    $default  reduce using rule 21 (moduleContentStmt)


State 30

   22 moduleContentStmt: enum_stmt •

    $default  reduce using rule 22 (moduleContentStmt)


State 31

   23 moduleContentStmt: typeclass_stmt •

    $default  reduce using rule 23 (moduleContentStmt)


State 32

   26 moduleContentStmt: using_stmt •

    $default  reduce using rule 26 (moduleContentStmt)


State 33

   24 moduleContentStmt: import_stmt •

    $default  reduce using rule 24 (moduleContentStmt)


State 34

   27 moduleContentStmt: extern_stmt •

    $default  reduce using rule 27 (moduleContentStmt)


State 35

   51 stringl: "\"dq-string-literal\"" •

    $default  reduce using rule 51 (stringl)


State 36

   50 stringl: "'sq-string-literal'" •

    $default  reduce using rule 50 (stringl)


State 37

   45 import_stmt: "import" vid "from" stringl • "type" stringl

    "type"  shift, and go to state 89


State 38

   83 if_exp: "if" • bracketed_exp "then" bracketed_exp
   84       | "if" • bracketed_exp "then" bracketed_exp "else" primary_exp

    "("  shift, and go to state 46
    "{"  shift, and go to state 47

    bracketed_exp  go to state 90
    unit_exp       go to state 56
    paren_exp      go to state 57
    vtupleExpr     go to state 58
    vstructExpr    go to state 59
    chain_exp      go to state 64


State 39

   90 lambda_exp: "fn" • vpattern "=" bracketed_exp

    "("  shift, and go to state 91

    vpattern  go to state 92


State 40

  109 unary_op: "not" •

    $default  reduce using rule 109 (unary_op)


State 41

   77 int_expr: "42" •

    $default  reduce using rule 77 (int_expr)


State 42

   78 int_expr: "0x2a" •

    $default  reduce using rule 78 (int_expr)


State 43

   49 floatl: "4.2" •

    $default  reduce using rule 49 (floatl)


State 44

   80 stringls: "\"dq-string-literal\"" •

    $default  reduce using rule 80 (stringls)


State 45

   79 stringls: "'sq-string-literal'" •

    $default  reduce using rule 79 (stringls)


State 46

   64 unit_exp: "(" • ")"
   66 paren_exp: "(" • long_exp ")"
   67 vtupleExpr: "(" • expr "," ")"
   68           | "(" • expr_cl2 ")"

    "<val_id>"               shift, and go to state 11
    "<TypeId>"               shift, and go to state 83
    "if"                     shift, and go to state 38
    "fn"                     shift, and go to state 39
    "Fn"                     shift, and go to state 93
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 94
    ")"                      shift, and go to state 95
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    tid               go to state 96
    vid               go to state 97
    floatl            go to state 53
    expr              go to state 98
    long_exp          go to state 99
    expr_cl2          go to state 100
    bracketed_exp     go to state 55
    unit_exp          go to state 56
    paren_exp         go to state 57
    vtupleExpr        go to state 58
    vstructExpr       go to state 59
    primary_exp       go to state 60
    int_expr          go to state 61
    stringls          go to state 62
    if_exp            go to state 63
    chain_exp         go to state 64
    lambda_exp        go to state 65
    postfix_exp       go to state 66
    tcall_exp         go to state 67
    vcall_exp         go to state 68
    dot_name_exp      go to state 69
    dot_index_exp     go to state 70
    unary_exp         go to state 71
    unary_op          go to state 72
    binary_exp        go to state 73
    mul_binary_exp    go to state 74
    add_binary_exp    go to state 75
    cmp_binary_exp    go to state 76
    eq_binary_exp     go to state 77
    and_binary_exp    go to state 78
    xor_binary_exp    go to state 79
    or_binary_exp     go to state 80
    type_query_exp    go to state 101
    typespec          go to state 102
    primary_typespec  go to state 103
    paren_typespec    go to state 104
    tuple_typespec    go to state 105
    mod_prefix_tid    go to state 106
    mod_prefix        go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 112


State 47

   65 unit_exp: "{" • "}"
   69 vstructExpr: "{" • struct_exp_field_cl "}"
   85 chain_exp: "{" • expr "}"
   86          | "{" • chain_prefix "}"
   87          | "{" • chain_prefix expr "}"

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "const"                  shift, and go to state 113
    "val"                    shift, and go to state 114
    "var"                    shift, and go to state 115
    "set"                    shift, and go to state 116
    "fn"                     shift, and go to state 39
    "not"                    shift, and go to state 40
    "discard"                shift, and go to state 117
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    "{"                      shift, and go to state 47
    "}"                      shift, and go to state 118
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    chain_prefix_stmt    go to state 119
    const_stmt           go to state 120
    val_stmt             go to state 121
    var_stmt             go to state 122
    set_stmt             go to state 123
    discard_stmt         go to state 124
    vid                  go to state 125
    floatl               go to state 53
    expr                 go to state 126
    bracketed_exp        go to state 55
    unit_exp             go to state 56
    paren_exp            go to state 57
    vtupleExpr           go to state 58
    vstructExpr          go to state 59
    primary_exp          go to state 60
    int_expr             go to state 61
    stringls             go to state 62
    if_exp               go to state 63
    chain_exp            go to state 64
    chain_prefix         go to state 127
    lambda_exp           go to state 65
    postfix_exp          go to state 66
    tcall_exp            go to state 67
    vcall_exp            go to state 68
    dot_name_exp         go to state 69
    dot_index_exp        go to state 70
    unary_exp            go to state 71
    unary_op             go to state 72
    binary_exp           go to state 73
    mul_binary_exp       go to state 74
    add_binary_exp       go to state 75
    cmp_binary_exp       go to state 76
    eq_binary_exp        go to state 77
    and_binary_exp       go to state 78
    xor_binary_exp       go to state 79
    or_binary_exp        go to state 80
    struct_exp_field     go to state 128
    struct_exp_field_cl  go to state 129


State 48

  107 unary_op: "*" •

    $default  reduce using rule 107 (unary_op)


State 49

  105 unary_op: "+" •

    $default  reduce using rule 105 (unary_op)


State 50

  106 unary_op: "-" •

    $default  reduce using rule 106 (unary_op)


State 51

  108 unary_op: "^" •

    $default  reduce using rule 108 (unary_op)


State 52

   71 primary_exp: vid •

    $default  reduce using rule 71 (primary_exp)


State 53

   73 primary_exp: floatl •

    $default  reduce using rule 73 (primary_exp)


State 54

   46 extern_stmt: "extern" vid "from" expr •

    $default  reduce using rule 46 (extern_stmt)


State 55

   70 primary_exp: bracketed_exp •

    $default  reduce using rule 70 (primary_exp)


State 56

   59 bracketed_exp: unit_exp •

    $default  reduce using rule 59 (bracketed_exp)


State 57

   60 bracketed_exp: paren_exp •

    $default  reduce using rule 60 (bracketed_exp)


State 58

   61 bracketed_exp: vtupleExpr •

    $default  reduce using rule 61 (bracketed_exp)


State 59

   62 bracketed_exp: vstructExpr •

    $default  reduce using rule 62 (bracketed_exp)


State 60

   91 postfix_exp: primary_exp •

    $default  reduce using rule 91 (postfix_exp)


State 61

   72 primary_exp: int_expr •

    $default  reduce using rule 72 (primary_exp)


State 62

   74 primary_exp: stringls •
   81 stringls: stringls • "'sq-string-literal'"
   82         | stringls • "\"dq-string-literal\""

    "\"dq-string-literal\""  shift, and go to state 130
    "'sq-string-literal'"    shift, and go to state 131

    $default  reduce using rule 74 (primary_exp)


State 63

   75 primary_exp: if_exp •

    $default  reduce using rule 75 (primary_exp)


State 64

   63 bracketed_exp: chain_exp •

    $default  reduce using rule 63 (bracketed_exp)


State 65

   76 primary_exp: lambda_exp •

    $default  reduce using rule 76 (primary_exp)


State 66

   96 tcall_exp: postfix_exp • "[" targ_cl "]"
   97 vcall_exp: postfix_exp • "(" ")"
   98          | postfix_exp • "(" varg_cl ")"
   99 dot_name_exp: postfix_exp • "." "<val_id>"
  100             | postfix_exp • "." "<TypeId>"
  101 dot_index_exp: postfix_exp • "." int_expr
  102              | postfix_exp • "." bracketed_exp
  103 unary_exp: postfix_exp •

    "."  shift, and go to state 132
    "("  shift, and go to state 133
    "["  shift, and go to state 134

    $default  reduce using rule 103 (unary_exp)


State 67

   92 postfix_exp: tcall_exp •

    $default  reduce using rule 92 (postfix_exp)


State 68

   93 postfix_exp: vcall_exp •

    $default  reduce using rule 93 (postfix_exp)


State 69

   94 postfix_exp: dot_name_exp •

    $default  reduce using rule 94 (postfix_exp)


State 70

   95 postfix_exp: dot_index_exp •

    $default  reduce using rule 95 (postfix_exp)


State 71

  114 mul_binary_exp: unary_exp •

    $default  reduce using rule 114 (mul_binary_exp)


State 72

  104 unary_exp: unary_op • unary_exp

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "fn"                     shift, and go to state 39
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    vid            go to state 52
    floatl         go to state 53
    bracketed_exp  go to state 55
    unit_exp       go to state 56
    paren_exp      go to state 57
    vtupleExpr     go to state 58
    vstructExpr    go to state 59
    primary_exp    go to state 60
    int_expr       go to state 61
    stringls       go to state 62
    if_exp         go to state 63
    chain_exp      go to state 64
    lambda_exp     go to state 65
    postfix_exp    go to state 66
    tcall_exp      go to state 67
    vcall_exp      go to state 68
    dot_name_exp   go to state 69
    dot_index_exp  go to state 70
    unary_exp      go to state 135
    unary_op       go to state 72


State 73

   52 expr: binary_exp •

    $default  reduce using rule 52 (expr)


State 74

  115 mul_binary_exp: mul_binary_exp • mul_binary_op unary_exp
  118 add_binary_exp: mul_binary_exp •

    "*"  shift, and go to state 136
    "/"  shift, and go to state 137
    "%"  shift, and go to state 138

    $default  reduce using rule 118 (add_binary_exp)

    mul_binary_op  go to state 139


State 75

  119 add_binary_exp: add_binary_exp • add_binary_op mul_binary_exp
  124 cmp_binary_exp: add_binary_exp •

    "+"  shift, and go to state 140
    "-"  shift, and go to state 141

    $default  reduce using rule 124 (cmp_binary_exp)

    add_binary_op  go to state 142


State 76

  125 cmp_binary_exp: cmp_binary_exp • cmp_binary_op add_binary_exp
  128 eq_binary_exp: cmp_binary_exp •

    "<"   shift, and go to state 143
    "<="  shift, and go to state 144
    ">"   shift, and go to state 145
    ">="  shift, and go to state 146

    $default  reduce using rule 128 (eq_binary_exp)

    cmp_binary_op  go to state 147


State 77

  129 eq_binary_exp: eq_binary_exp • eq_binary_op cmp_binary_exp
  130 and_binary_exp: eq_binary_exp •

    "=="  shift, and go to state 148
    "!="  shift, and go to state 149

    $default  reduce using rule 130 (and_binary_exp)

    eq_binary_op  go to state 150


State 78

  131 and_binary_exp: and_binary_exp • "and" eq_binary_exp
  132 xor_binary_exp: and_binary_exp •

    "and"  shift, and go to state 151

    $default  reduce using rule 132 (xor_binary_exp)


State 79

  133 xor_binary_exp: xor_binary_exp • "xor" and_binary_exp
  134 or_binary_exp: xor_binary_exp •

    "xor"  shift, and go to state 152

    $default  reduce using rule 134 (or_binary_exp)


State 80

  110 binary_exp: or_binary_exp •
  135 or_binary_exp: or_binary_exp • "or" xor_binary_exp

    "or"  shift, and go to state 153

    $default  reduce using rule 110 (binary_exp)


State 81

   43 using_stmt: "using" vid • "." "*"
   44           | "using" vid • "." vid "*"

    "."  shift, and go to state 154


State 82

   28 fn_stmt: "fn" vid • vpattern "->" typespec "=" bracketed_exp
   29        | "fn" vid • tpattern_seq vpattern "->" typespec "=" bracketed_exp
   30        | "fn" vid • vpattern "=" bracketed_exp
   31        | "fn" vid • tpattern_seq vpattern "=" bracketed_exp

    "("  shift, and go to state 91
    "["  shift, and go to state 155
    "!"  shift, and go to state 156

    vpattern      go to state 157
    tpattern      go to state 158
    tpattern_seq  go to state 159


State 83

   47 tid: "<TypeId>" •

    $default  reduce using rule 47 (tid)


State 84

   32 type_stmt: "type" tid • "=" long_typespec
   33          | "type" tid • tpattern_seq "=" long_typespec
   34 enum_stmt: "type" tid • enum_field_pl

    "["  shift, and go to state 155
    "="  shift, and go to state 160
    "!"  shift, and go to state 156
    "|"  shift, and go to state 161

    enum_field_pl  go to state 162
    tpattern       go to state 158
    tpattern_seq   go to state 163


State 85

   41 typeclass_stmt: "typeclass" tid • "<" tid typespec ">" "=" "{" type_query_exp_sl "}"
   42               | "typeclass" tid • "<" tid typespec ">" tpattern_seq "=" "{" type_query_exp_sl "}"

    "<"  shift, and go to state 164


State 86

    7 mod_stmt: "mod" "<val_id>" "{" moduleContent "}" •

    $default  reduce using rule 7 (mod_stmt)


State 87

    9 moduleContent: moduleContent moduleContentStmt • ";"

    ";"  shift, and go to state 165


State 88

    8 moduleContent: moduleContentStmt ";" •

    $default  reduce using rule 8 (moduleContent)


State 89

   45 import_stmt: "import" vid "from" stringl "type" • stringl

    "\"dq-string-literal\""  shift, and go to state 35
    "'sq-string-literal'"    shift, and go to state 36

    stringl  go to state 166


State 90

   83 if_exp: "if" bracketed_exp • "then" bracketed_exp
   84       | "if" bracketed_exp • "then" bracketed_exp "else" primary_exp

    "then"  shift, and go to state 167


State 91

  190 vpattern: "(" • vpattern_field_cl ")"
  191         | "(" • ")"

    "<val_id>"  shift, and go to state 11
    "out"       shift, and go to state 168
    "inout"     shift, and go to state 169
    ")"         shift, and go to state 170

    vid                go to state 171
    vpattern_field     go to state 172
    vpattern_field_cl  go to state 173


State 92

   90 lambda_exp: "fn" vpattern • "=" bracketed_exp

    "="  shift, and go to state 174


State 93

  159 fn_typespec: "Fn" • vpattern primary_typespec

    "("  shift, and go to state 91

    vpattern  go to state 175


State 94

   64 unit_exp: "(" • ")"
   66 paren_exp: "(" • long_exp ")"
   67 vtupleExpr: "(" • expr "," ")"
   68           | "(" • expr_cl2 ")"
  153 paren_typespec: "(" • typespec ")"
  154 tuple_typespec: "(" • typespec "," ")"
  155               | "(" • typespec_cl2 ")"

    "<val_id>"               shift, and go to state 11
    "<TypeId>"               shift, and go to state 83
    "if"                     shift, and go to state 38
    "fn"                     shift, and go to state 39
    "Fn"                     shift, and go to state 93
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 94
    ")"                      shift, and go to state 95
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    tid               go to state 96
    vid               go to state 97
    floatl            go to state 53
    expr              go to state 98
    long_exp          go to state 99
    expr_cl2          go to state 100
    bracketed_exp     go to state 55
    unit_exp          go to state 56
    paren_exp         go to state 57
    vtupleExpr        go to state 58
    vstructExpr       go to state 59
    primary_exp       go to state 60
    int_expr          go to state 61
    stringls          go to state 62
    if_exp            go to state 63
    chain_exp         go to state 64
    lambda_exp        go to state 65
    postfix_exp       go to state 66
    tcall_exp         go to state 67
    vcall_exp         go to state 68
    dot_name_exp      go to state 69
    dot_index_exp     go to state 70
    unary_exp         go to state 71
    unary_op          go to state 72
    binary_exp        go to state 73
    mul_binary_exp    go to state 74
    add_binary_exp    go to state 75
    cmp_binary_exp    go to state 76
    eq_binary_exp     go to state 77
    and_binary_exp    go to state 78
    xor_binary_exp    go to state 79
    or_binary_exp     go to state 80
    type_query_exp    go to state 101
    typespec          go to state 176
    typespec_cl2      go to state 177
    primary_typespec  go to state 103
    paren_typespec    go to state 104
    tuple_typespec    go to state 105
    mod_prefix_tid    go to state 106
    mod_prefix        go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 112


State 95

   64 unit_exp: "(" ")" •

    $default  reduce using rule 64 (unit_exp)


State 96

  148 primary_typespec: tid •

    $default  reduce using rule 148 (primary_typespec)


State 97

   71 primary_exp: vid •
  157 mod_prefix: vid • "."

    "."  shift, and go to state 178

    "."       [reduce using rule 71 (primary_exp)]
    $default  reduce using rule 71 (primary_exp)


State 98

   54 long_exp: expr •
   55 expr_cl2: expr • "," expr
   67 vtupleExpr: "(" expr • "," ")"

    ","  shift, and go to state 179

    $default  reduce using rule 54 (long_exp)


State 99

   66 paren_exp: "(" long_exp • ")"

    ")"  shift, and go to state 180


State 100

   56 expr_cl2: expr_cl2 • "," expr
   68 vtupleExpr: "(" expr_cl2 • ")"

    ","  shift, and go to state 181
    ")"  shift, and go to state 182


State 101

   53 long_exp: type_query_exp •

    $default  reduce using rule 53 (long_exp)


State 102

  136 type_query_exp: typespec • type_query_op typespec

    "::"  shift, and go to state 183
    ":<"  shift, and go to state 184
    ">:"  shift, and go to state 185

    type_query_op  go to state 186


State 103

  160 postfix_typespec: primary_typespec •

    $default  reduce using rule 160 (postfix_typespec)


State 104

  149 primary_typespec: paren_typespec •

    $default  reduce using rule 149 (primary_typespec)


State 105

  150 primary_typespec: tuple_typespec •

    $default  reduce using rule 150 (primary_typespec)


State 106

  151 primary_typespec: mod_prefix_tid •

    $default  reduce using rule 151 (primary_typespec)


State 107

  156 mod_prefix_tid: mod_prefix • tid
  158 mod_prefix: mod_prefix • vid "."

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 83

    tid  go to state 187
    vid  go to state 188


State 108

  152 primary_typespec: fn_typespec •

    $default  reduce using rule 152 (primary_typespec)


State 109

  163 tcall_typespec: postfix_typespec • "[" targ_cl "]"
  164 dot_typespec: postfix_typespec • "." "<val_id>"
  165 unary_typespec: postfix_typespec •

    "."  shift, and go to state 189
    "["  shift, and go to state 190

    $default  reduce using rule 165 (unary_typespec)


State 110

  161 postfix_typespec: tcall_typespec •

    $default  reduce using rule 161 (postfix_typespec)


State 111

  162 postfix_typespec: dot_typespec •

    $default  reduce using rule 162 (postfix_typespec)


State 112

  140 typespec: unary_typespec •

    $default  reduce using rule 140 (typespec)


State 113

   15 const_stmt: "const" • lpattern_naked "=" expr

    "<val_id>"  shift, and go to state 11
    "("         shift, and go to state 191

    vid             go to state 192
    lpattern_field  go to state 193
    lpattern        go to state 194
    lpattern_naked  go to state 195


State 114

   16 val_stmt: "val" • lpattern_naked "=" expr

    "<val_id>"  shift, and go to state 11
    "("         shift, and go to state 191

    vid             go to state 192
    lpattern_field  go to state 193
    lpattern        go to state 194
    lpattern_naked  go to state 196


State 115

   17 var_stmt: "var" • lpattern_naked "=" expr

    "<val_id>"  shift, and go to state 11
    "("         shift, and go to state 191

    vid             go to state 192
    lpattern_field  go to state 193
    lpattern        go to state 194
    lpattern_naked  go to state 197


State 116

   18 set_stmt: "set" • expr "=" expr

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "fn"                     shift, and go to state 39
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    vid             go to state 52
    floatl          go to state 53
    expr            go to state 198
    bracketed_exp   go to state 55
    unit_exp        go to state 56
    paren_exp       go to state 57
    vtupleExpr      go to state 58
    vstructExpr     go to state 59
    primary_exp     go to state 60
    int_expr        go to state 61
    stringls        go to state 62
    if_exp          go to state 63
    chain_exp       go to state 64
    lambda_exp      go to state 65
    postfix_exp     go to state 66
    tcall_exp       go to state 67
    vcall_exp       go to state 68
    dot_name_exp    go to state 69
    dot_index_exp   go to state 70
    unary_exp       go to state 71
    unary_op        go to state 72
    binary_exp      go to state 73
    mul_binary_exp  go to state 74
    add_binary_exp  go to state 75
    cmp_binary_exp  go to state 76
    eq_binary_exp   go to state 77
    and_binary_exp  go to state 78
    xor_binary_exp  go to state 79
    or_binary_exp   go to state 80


State 117

   19 discard_stmt: "discard" • expr

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "fn"                     shift, and go to state 39
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    vid             go to state 52
    floatl          go to state 53
    expr            go to state 199
    bracketed_exp   go to state 55
    unit_exp        go to state 56
    paren_exp       go to state 57
    vtupleExpr      go to state 58
    vstructExpr     go to state 59
    primary_exp     go to state 60
    int_expr        go to state 61
    stringls        go to state 62
    if_exp          go to state 63
    chain_exp       go to state 64
    lambda_exp      go to state 65
    postfix_exp     go to state 66
    tcall_exp       go to state 67
    vcall_exp       go to state 68
    dot_name_exp    go to state 69
    dot_index_exp   go to state 70
    unary_exp       go to state 71
    unary_op        go to state 72
    binary_exp      go to state 73
    mul_binary_exp  go to state 74
    add_binary_exp  go to state 75
    cmp_binary_exp  go to state 76
    eq_binary_exp   go to state 77
    and_binary_exp  go to state 78
    xor_binary_exp  go to state 79
    or_binary_exp   go to state 80


State 118

   65 unit_exp: "{" "}" •

    $default  reduce using rule 65 (unit_exp)


State 119

   88 chain_prefix: chain_prefix_stmt • ";"

    ";"  shift, and go to state 200


State 120

   10 chain_prefix_stmt: const_stmt •

    $default  reduce using rule 10 (chain_prefix_stmt)


State 121

   11 chain_prefix_stmt: val_stmt •

    $default  reduce using rule 11 (chain_prefix_stmt)


State 122

   12 chain_prefix_stmt: var_stmt •

    $default  reduce using rule 12 (chain_prefix_stmt)


State 123

   13 chain_prefix_stmt: set_stmt •

    $default  reduce using rule 13 (chain_prefix_stmt)


State 124

   14 chain_prefix_stmt: discard_stmt •

    $default  reduce using rule 14 (chain_prefix_stmt)


State 125

   71 primary_exp: vid •
  178 struct_exp_field: vid • "=" expr

    "="  shift, and go to state 201

    $default  reduce using rule 71 (primary_exp)


State 126

   85 chain_exp: "{" expr • "}"

    "}"  shift, and go to state 202


State 127

   86 chain_exp: "{" chain_prefix • "}"
   87          | "{" chain_prefix • expr "}"
   89 chain_prefix: chain_prefix • chain_prefix_stmt ";"

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "const"                  shift, and go to state 113
    "val"                    shift, and go to state 114
    "var"                    shift, and go to state 115
    "set"                    shift, and go to state 116
    "fn"                     shift, and go to state 39
    "not"                    shift, and go to state 40
    "discard"                shift, and go to state 117
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    "{"                      shift, and go to state 47
    "}"                      shift, and go to state 203
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    chain_prefix_stmt  go to state 204
    const_stmt         go to state 120
    val_stmt           go to state 121
    var_stmt           go to state 122
    set_stmt           go to state 123
    discard_stmt       go to state 124
    vid                go to state 52
    floatl             go to state 53
    expr               go to state 205
    bracketed_exp      go to state 55
    unit_exp           go to state 56
    paren_exp          go to state 57
    vtupleExpr         go to state 58
    vstructExpr        go to state 59
    primary_exp        go to state 60
    int_expr           go to state 61
    stringls           go to state 62
    if_exp             go to state 63
    chain_exp          go to state 64
    lambda_exp         go to state 65
    postfix_exp        go to state 66
    tcall_exp          go to state 67
    vcall_exp          go to state 68
    dot_name_exp       go to state 69
    dot_index_exp      go to state 70
    unary_exp          go to state 71
    unary_op           go to state 72
    binary_exp         go to state 73
    mul_binary_exp     go to state 74
    add_binary_exp     go to state 75
    cmp_binary_exp     go to state 76
    eq_binary_exp      go to state 77
    and_binary_exp     go to state 78
    xor_binary_exp     go to state 79
    or_binary_exp      go to state 80


State 128

  200 struct_exp_field_cl: struct_exp_field •

    $default  reduce using rule 200 (struct_exp_field_cl)


State 129

   69 vstructExpr: "{" struct_exp_field_cl • "}"
  201 struct_exp_field_cl: struct_exp_field_cl • "," struct_exp_field

    ","  shift, and go to state 206
    "}"  shift, and go to state 207


State 130

   82 stringls: stringls "\"dq-string-literal\"" •

    $default  reduce using rule 82 (stringls)


State 131

   81 stringls: stringls "'sq-string-literal'" •

    $default  reduce using rule 81 (stringls)


State 132

   99 dot_name_exp: postfix_exp "." • "<val_id>"
  100             | postfix_exp "." • "<TypeId>"
  101 dot_index_exp: postfix_exp "." • int_expr
  102              | postfix_exp "." • bracketed_exp

    "<val_id>"  shift, and go to state 208
    "<TypeId>"  shift, and go to state 209
    "42"        shift, and go to state 41
    "0x2a"      shift, and go to state 42
    "("         shift, and go to state 46
    "{"         shift, and go to state 47

    bracketed_exp  go to state 210
    unit_exp       go to state 56
    paren_exp      go to state 57
    vtupleExpr     go to state 58
    vstructExpr    go to state 59
    int_expr       go to state 211
    chain_exp      go to state 64


State 133

   97 vcall_exp: postfix_exp "(" • ")"
   98          | postfix_exp "(" • varg_cl ")"

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "fn"                     shift, and go to state 39
    "not"                    shift, and go to state 40
    "out"                    shift, and go to state 212
    "inout"                  shift, and go to state 213
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    ")"                      shift, and go to state 214
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    vid             go to state 52
    floatl          go to state 53
    expr            go to state 215
    bracketed_exp   go to state 55
    unit_exp        go to state 56
    paren_exp       go to state 57
    vtupleExpr      go to state 58
    vstructExpr     go to state 59
    primary_exp     go to state 60
    int_expr        go to state 61
    stringls        go to state 62
    if_exp          go to state 63
    chain_exp       go to state 64
    lambda_exp      go to state 65
    postfix_exp     go to state 66
    tcall_exp       go to state 67
    vcall_exp       go to state 68
    dot_name_exp    go to state 69
    dot_index_exp   go to state 70
    unary_exp       go to state 71
    unary_op        go to state 72
    binary_exp      go to state 73
    mul_binary_exp  go to state 74
    add_binary_exp  go to state 75
    cmp_binary_exp  go to state 76
    eq_binary_exp   go to state 77
    and_binary_exp  go to state 78
    xor_binary_exp  go to state 79
    or_binary_exp   go to state 80
    varg            go to state 216
    varg_cl         go to state 217


State 134

   96 tcall_exp: postfix_exp "[" • targ_cl "]"

    "<val_id>"               shift, and go to state 11
    "<TypeId>"               shift, and go to state 83
    "if"                     shift, and go to state 38
    "fn"                     shift, and go to state 39
    "Fn"                     shift, and go to state 93
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 94
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    tid               go to state 96
    vid               go to state 97
    floatl            go to state 53
    expr              go to state 218
    bracketed_exp     go to state 55
    unit_exp          go to state 56
    paren_exp         go to state 57
    vtupleExpr        go to state 58
    vstructExpr       go to state 59
    primary_exp       go to state 60
    int_expr          go to state 61
    stringls          go to state 62
    if_exp            go to state 63
    chain_exp         go to state 64
    lambda_exp        go to state 65
    postfix_exp       go to state 66
    tcall_exp         go to state 67
    vcall_exp         go to state 68
    dot_name_exp      go to state 69
    dot_index_exp     go to state 70
    unary_exp         go to state 71
    unary_op          go to state 72
    binary_exp        go to state 73
    mul_binary_exp    go to state 74
    add_binary_exp    go to state 75
    cmp_binary_exp    go to state 76
    eq_binary_exp     go to state 77
    and_binary_exp    go to state 78
    xor_binary_exp    go to state 79
    or_binary_exp     go to state 80
    typespec          go to state 219
    primary_typespec  go to state 103
    paren_typespec    go to state 104
    tuple_typespec    go to state 105
    mod_prefix_tid    go to state 106
    mod_prefix        go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 112
    targ              go to state 220
    targ_cl           go to state 221


State 135

  104 unary_exp: unary_op unary_exp •

    $default  reduce using rule 104 (unary_exp)


State 136

  111 mul_binary_op: "*" •

    $default  reduce using rule 111 (mul_binary_op)


State 137

  112 mul_binary_op: "/" •

    $default  reduce using rule 112 (mul_binary_op)


State 138

  113 mul_binary_op: "%" •

    $default  reduce using rule 113 (mul_binary_op)


State 139

  115 mul_binary_exp: mul_binary_exp mul_binary_op • unary_exp

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "fn"                     shift, and go to state 39
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    vid            go to state 52
    floatl         go to state 53
    bracketed_exp  go to state 55
    unit_exp       go to state 56
    paren_exp      go to state 57
    vtupleExpr     go to state 58
    vstructExpr    go to state 59
    primary_exp    go to state 60
    int_expr       go to state 61
    stringls       go to state 62
    if_exp         go to state 63
    chain_exp      go to state 64
    lambda_exp     go to state 65
    postfix_exp    go to state 66
    tcall_exp      go to state 67
    vcall_exp      go to state 68
    dot_name_exp   go to state 69
    dot_index_exp  go to state 70
    unary_exp      go to state 222
    unary_op       go to state 72


State 140

  116 add_binary_op: "+" •

    $default  reduce using rule 116 (add_binary_op)


State 141

  117 add_binary_op: "-" •

    $default  reduce using rule 117 (add_binary_op)


State 142

  119 add_binary_exp: add_binary_exp add_binary_op • mul_binary_exp

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "fn"                     shift, and go to state 39
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    vid             go to state 52
    floatl          go to state 53
    bracketed_exp   go to state 55
    unit_exp        go to state 56
    paren_exp       go to state 57
    vtupleExpr      go to state 58
    vstructExpr     go to state 59
    primary_exp     go to state 60
    int_expr        go to state 61
    stringls        go to state 62
    if_exp          go to state 63
    chain_exp       go to state 64
    lambda_exp      go to state 65
    postfix_exp     go to state 66
    tcall_exp       go to state 67
    vcall_exp       go to state 68
    dot_name_exp    go to state 69
    dot_index_exp   go to state 70
    unary_exp       go to state 71
    unary_op        go to state 72
    mul_binary_exp  go to state 223


State 143

  120 cmp_binary_op: "<" •

    $default  reduce using rule 120 (cmp_binary_op)


State 144

  121 cmp_binary_op: "<=" •

    $default  reduce using rule 121 (cmp_binary_op)


State 145

  122 cmp_binary_op: ">" •

    $default  reduce using rule 122 (cmp_binary_op)


State 146

  123 cmp_binary_op: ">=" •

    $default  reduce using rule 123 (cmp_binary_op)


State 147

  125 cmp_binary_exp: cmp_binary_exp cmp_binary_op • add_binary_exp

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "fn"                     shift, and go to state 39
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    vid             go to state 52
    floatl          go to state 53
    bracketed_exp   go to state 55
    unit_exp        go to state 56
    paren_exp       go to state 57
    vtupleExpr      go to state 58
    vstructExpr     go to state 59
    primary_exp     go to state 60
    int_expr        go to state 61
    stringls        go to state 62
    if_exp          go to state 63
    chain_exp       go to state 64
    lambda_exp      go to state 65
    postfix_exp     go to state 66
    tcall_exp       go to state 67
    vcall_exp       go to state 68
    dot_name_exp    go to state 69
    dot_index_exp   go to state 70
    unary_exp       go to state 71
    unary_op        go to state 72
    mul_binary_exp  go to state 74
    add_binary_exp  go to state 224


State 148

  126 eq_binary_op: "==" •

    $default  reduce using rule 126 (eq_binary_op)


State 149

  127 eq_binary_op: "!=" •

    $default  reduce using rule 127 (eq_binary_op)


State 150

  129 eq_binary_exp: eq_binary_exp eq_binary_op • cmp_binary_exp

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "fn"                     shift, and go to state 39
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    vid             go to state 52
    floatl          go to state 53
    bracketed_exp   go to state 55
    unit_exp        go to state 56
    paren_exp       go to state 57
    vtupleExpr      go to state 58
    vstructExpr     go to state 59
    primary_exp     go to state 60
    int_expr        go to state 61
    stringls        go to state 62
    if_exp          go to state 63
    chain_exp       go to state 64
    lambda_exp      go to state 65
    postfix_exp     go to state 66
    tcall_exp       go to state 67
    vcall_exp       go to state 68
    dot_name_exp    go to state 69
    dot_index_exp   go to state 70
    unary_exp       go to state 71
    unary_op        go to state 72
    mul_binary_exp  go to state 74
    add_binary_exp  go to state 75
    cmp_binary_exp  go to state 225


State 151

  131 and_binary_exp: and_binary_exp "and" • eq_binary_exp

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "fn"                     shift, and go to state 39
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    vid             go to state 52
    floatl          go to state 53
    bracketed_exp   go to state 55
    unit_exp        go to state 56
    paren_exp       go to state 57
    vtupleExpr      go to state 58
    vstructExpr     go to state 59
    primary_exp     go to state 60
    int_expr        go to state 61
    stringls        go to state 62
    if_exp          go to state 63
    chain_exp       go to state 64
    lambda_exp      go to state 65
    postfix_exp     go to state 66
    tcall_exp       go to state 67
    vcall_exp       go to state 68
    dot_name_exp    go to state 69
    dot_index_exp   go to state 70
    unary_exp       go to state 71
    unary_op        go to state 72
    mul_binary_exp  go to state 74
    add_binary_exp  go to state 75
    cmp_binary_exp  go to state 76
    eq_binary_exp   go to state 226


State 152

  133 xor_binary_exp: xor_binary_exp "xor" • and_binary_exp

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "fn"                     shift, and go to state 39
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    vid             go to state 52
    floatl          go to state 53
    bracketed_exp   go to state 55
    unit_exp        go to state 56
    paren_exp       go to state 57
    vtupleExpr      go to state 58
    vstructExpr     go to state 59
    primary_exp     go to state 60
    int_expr        go to state 61
    stringls        go to state 62
    if_exp          go to state 63
    chain_exp       go to state 64
    lambda_exp      go to state 65
    postfix_exp     go to state 66
    tcall_exp       go to state 67
    vcall_exp       go to state 68
    dot_name_exp    go to state 69
    dot_index_exp   go to state 70
    unary_exp       go to state 71
    unary_op        go to state 72
    mul_binary_exp  go to state 74
    add_binary_exp  go to state 75
    cmp_binary_exp  go to state 76
    eq_binary_exp   go to state 77
    and_binary_exp  go to state 227


State 153

  135 or_binary_exp: or_binary_exp "or" • xor_binary_exp

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "fn"                     shift, and go to state 39
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    vid             go to state 52
    floatl          go to state 53
    bracketed_exp   go to state 55
    unit_exp        go to state 56
    paren_exp       go to state 57
    vtupleExpr      go to state 58
    vstructExpr     go to state 59
    primary_exp     go to state 60
    int_expr        go to state 61
    stringls        go to state 62
    if_exp          go to state 63
    chain_exp       go to state 64
    lambda_exp      go to state 65
    postfix_exp     go to state 66
    tcall_exp       go to state 67
    vcall_exp       go to state 68
    dot_name_exp    go to state 69
    dot_index_exp   go to state 70
    unary_exp       go to state 71
    unary_op        go to state 72
    mul_binary_exp  go to state 74
    add_binary_exp  go to state 75
    cmp_binary_exp  go to state 76
    eq_binary_exp   go to state 77
    and_binary_exp  go to state 78
    xor_binary_exp  go to state 228


State 154

   43 using_stmt: "using" vid "." • "*"
   44           | "using" vid "." • vid "*"

    "<val_id>"  shift, and go to state 11
    "*"         shift, and go to state 229

    vid  go to state 230


State 155

  192 tpattern: "[" • tpattern_field_cl "]"

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 83

    tid                go to state 231
    vid                go to state 232
    tpattern_field     go to state 233
    tpattern_field_cl  go to state 234


State 156

  193 tpattern: "!" • "[" tpattern_field_cl "]"

    "["  shift, and go to state 235


State 157

   28 fn_stmt: "fn" vid vpattern • "->" typespec "=" bracketed_exp
   30        | "fn" vid vpattern • "=" bracketed_exp

    "->"  shift, and go to state 236
    "="   shift, and go to state 237


State 158

  202 tpattern_seq: tpattern •

    $default  reduce using rule 202 (tpattern_seq)


State 159

   29 fn_stmt: "fn" vid tpattern_seq • vpattern "->" typespec "=" bracketed_exp
   31        | "fn" vid tpattern_seq • vpattern "=" bracketed_exp
  203 tpattern_seq: tpattern_seq • tpattern

    "("  shift, and go to state 91
    "["  shift, and go to state 155
    "!"  shift, and go to state 156

    vpattern  go to state 238
    tpattern  go to state 239


State 160

   32 type_stmt: "type" tid "=" • long_typespec

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 83
    "Fn"        shift, and go to state 93
    "("         shift, and go to state 240
    "{"         shift, and go to state 241

    tid               go to state 96
    vid               go to state 242
    primary_typespec  go to state 103
    paren_typespec    go to state 104
    tuple_typespec    go to state 105
    mod_prefix_tid    go to state 106
    mod_prefix        go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 243
    long_typespec     go to state 244
    struct_typespec   go to state 245


State 161

   35 enum_field_pl: "|" • unprefixed_enum_field_pl

    "<TypeId>"  shift, and go to state 83

    unprefixed_enum_field_pl  go to state 246
    enum_field                go to state 247
    tid                       go to state 248


State 162

   34 enum_stmt: "type" tid enum_field_pl •

    $default  reduce using rule 34 (enum_stmt)


State 163

   33 type_stmt: "type" tid tpattern_seq • "=" long_typespec
  203 tpattern_seq: tpattern_seq • tpattern

    "["  shift, and go to state 155
    "="  shift, and go to state 249
    "!"  shift, and go to state 156

    tpattern  go to state 239


State 164

   41 typeclass_stmt: "typeclass" tid "<" • tid typespec ">" "=" "{" type_query_exp_sl "}"
   42               | "typeclass" tid "<" • tid typespec ">" tpattern_seq "=" "{" type_query_exp_sl "}"

    "<TypeId>"  shift, and go to state 83

    tid  go to state 250


State 165

    9 moduleContent: moduleContent moduleContentStmt ";" •

    $default  reduce using rule 9 (moduleContent)


State 166

   45 import_stmt: "import" vid "from" stringl "type" stringl •

    $default  reduce using rule 45 (import_stmt)


State 167

   83 if_exp: "if" bracketed_exp "then" • bracketed_exp
   84       | "if" bracketed_exp "then" • bracketed_exp "else" primary_exp

    "("  shift, and go to state 46
    "{"  shift, and go to state 47

    bracketed_exp  go to state 251
    unit_exp       go to state 56
    paren_exp      go to state 57
    vtupleExpr     go to state 58
    vstructExpr    go to state 59
    chain_exp      go to state 64


State 168

  180 vpattern_field: "out" • vid typespec

    "<val_id>"  shift, and go to state 11

    vid  go to state 252


State 169

  181 vpattern_field: "inout" • vid typespec

    "<val_id>"  shift, and go to state 11

    vid  go to state 253


State 170

  191 vpattern: "(" ")" •

    $default  reduce using rule 191 (vpattern)


State 171

  179 vpattern_field: vid • typespec

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 83
    "Fn"        shift, and go to state 93
    "("         shift, and go to state 240

    tid               go to state 96
    vid               go to state 242
    typespec          go to state 254
    primary_typespec  go to state 103
    paren_typespec    go to state 104
    tuple_typespec    go to state 105
    mod_prefix_tid    go to state 106
    mod_prefix        go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 112


State 172

  194 vpattern_field_cl: vpattern_field •

    $default  reduce using rule 194 (vpattern_field_cl)


State 173

  190 vpattern: "(" vpattern_field_cl • ")"
  195 vpattern_field_cl: vpattern_field_cl • "," vpattern_field

    ","  shift, and go to state 255
    ")"  shift, and go to state 256


State 174

   90 lambda_exp: "fn" vpattern "=" • bracketed_exp

    "("  shift, and go to state 46
    "{"  shift, and go to state 47

    bracketed_exp  go to state 257
    unit_exp       go to state 56
    paren_exp      go to state 57
    vtupleExpr     go to state 58
    vstructExpr    go to state 59
    chain_exp      go to state 64


State 175

  159 fn_typespec: "Fn" vpattern • primary_typespec

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 83
    "Fn"        shift, and go to state 93
    "("         shift, and go to state 240

    tid               go to state 96
    vid               go to state 242
    primary_typespec  go to state 258
    paren_typespec    go to state 104
    tuple_typespec    go to state 105
    mod_prefix_tid    go to state 106
    mod_prefix        go to state 107
    fn_typespec       go to state 108


State 176

  136 type_query_exp: typespec • type_query_op typespec
  143 typespec_cl2: typespec • "," typespec
  153 paren_typespec: "(" typespec • ")"
  154 tuple_typespec: "(" typespec • "," ")"

    ","   shift, and go to state 259
    "::"  shift, and go to state 183
    ")"   shift, and go to state 260
    ":<"  shift, and go to state 184
    ">:"  shift, and go to state 185

    type_query_op  go to state 186


State 177

  144 typespec_cl2: typespec_cl2 • "," typespec
  155 tuple_typespec: "(" typespec_cl2 • ")"

    ","  shift, and go to state 261
    ")"  shift, and go to state 262


State 178

  157 mod_prefix: vid "." •

    $default  reduce using rule 157 (mod_prefix)


State 179

   55 expr_cl2: expr "," • expr
   67 vtupleExpr: "(" expr "," • ")"

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "fn"                     shift, and go to state 39
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    ")"                      shift, and go to state 263
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    vid             go to state 52
    floatl          go to state 53
    expr            go to state 264
    bracketed_exp   go to state 55
    unit_exp        go to state 56
    paren_exp       go to state 57
    vtupleExpr      go to state 58
    vstructExpr     go to state 59
    primary_exp     go to state 60
    int_expr        go to state 61
    stringls        go to state 62
    if_exp          go to state 63
    chain_exp       go to state 64
    lambda_exp      go to state 65
    postfix_exp     go to state 66
    tcall_exp       go to state 67
    vcall_exp       go to state 68
    dot_name_exp    go to state 69
    dot_index_exp   go to state 70
    unary_exp       go to state 71
    unary_op        go to state 72
    binary_exp      go to state 73
    mul_binary_exp  go to state 74
    add_binary_exp  go to state 75
    cmp_binary_exp  go to state 76
    eq_binary_exp   go to state 77
    and_binary_exp  go to state 78
    xor_binary_exp  go to state 79
    or_binary_exp   go to state 80


State 180

   66 paren_exp: "(" long_exp ")" •

    $default  reduce using rule 66 (paren_exp)


State 181

   56 expr_cl2: expr_cl2 "," • expr

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "fn"                     shift, and go to state 39
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    vid             go to state 52
    floatl          go to state 53
    expr            go to state 265
    bracketed_exp   go to state 55
    unit_exp        go to state 56
    paren_exp       go to state 57
    vtupleExpr      go to state 58
    vstructExpr     go to state 59
    primary_exp     go to state 60
    int_expr        go to state 61
    stringls        go to state 62
    if_exp          go to state 63
    chain_exp       go to state 64
    lambda_exp      go to state 65
    postfix_exp     go to state 66
    tcall_exp       go to state 67
    vcall_exp       go to state 68
    dot_name_exp    go to state 69
    dot_index_exp   go to state 70
    unary_exp       go to state 71
    unary_op        go to state 72
    binary_exp      go to state 73
    mul_binary_exp  go to state 74
    add_binary_exp  go to state 75
    cmp_binary_exp  go to state 76
    eq_binary_exp   go to state 77
    and_binary_exp  go to state 78
    xor_binary_exp  go to state 79
    or_binary_exp   go to state 80


State 182

   68 vtupleExpr: "(" expr_cl2 ")" •

    $default  reduce using rule 68 (vtupleExpr)


State 183

  139 type_query_op: "::" •

    $default  reduce using rule 139 (type_query_op)


State 184

  137 type_query_op: ":<" •

    $default  reduce using rule 137 (type_query_op)


State 185

  138 type_query_op: ">:" •

    $default  reduce using rule 138 (type_query_op)


State 186

  136 type_query_exp: typespec type_query_op • typespec

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 83
    "Fn"        shift, and go to state 93
    "("         shift, and go to state 240

    tid               go to state 96
    vid               go to state 242
    typespec          go to state 266
    primary_typespec  go to state 103
    paren_typespec    go to state 104
    tuple_typespec    go to state 105
    mod_prefix_tid    go to state 106
    mod_prefix        go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 112


State 187

  156 mod_prefix_tid: mod_prefix tid •

    $default  reduce using rule 156 (mod_prefix_tid)


State 188

  158 mod_prefix: mod_prefix vid • "."

    "."  shift, and go to state 267


State 189

  164 dot_typespec: postfix_typespec "." • "<val_id>"

    "<val_id>"  shift, and go to state 268


State 190

  163 tcall_typespec: postfix_typespec "[" • targ_cl "]"

    "<val_id>"               shift, and go to state 11
    "<TypeId>"               shift, and go to state 83
    "if"                     shift, and go to state 38
    "fn"                     shift, and go to state 39
    "Fn"                     shift, and go to state 93
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 94
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    tid               go to state 96
    vid               go to state 97
    floatl            go to state 53
    expr              go to state 218
    bracketed_exp     go to state 55
    unit_exp          go to state 56
    paren_exp         go to state 57
    vtupleExpr        go to state 58
    vstructExpr       go to state 59
    primary_exp       go to state 60
    int_expr          go to state 61
    stringls          go to state 62
    if_exp            go to state 63
    chain_exp         go to state 64
    lambda_exp        go to state 65
    postfix_exp       go to state 66
    tcall_exp         go to state 67
    vcall_exp         go to state 68
    dot_name_exp      go to state 69
    dot_index_exp     go to state 70
    unary_exp         go to state 71
    unary_op          go to state 72
    binary_exp        go to state 73
    mul_binary_exp    go to state 74
    add_binary_exp    go to state 75
    cmp_binary_exp    go to state 76
    eq_binary_exp     go to state 77
    and_binary_exp    go to state 78
    xor_binary_exp    go to state 79
    or_binary_exp     go to state 80
    typespec          go to state 219
    primary_typespec  go to state 103
    paren_typespec    go to state 104
    tuple_typespec    go to state 105
    mod_prefix_tid    go to state 106
    mod_prefix        go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 112
    targ              go to state 220
    targ_cl           go to state 269


State 191

  186 lpattern: "(" • lpattern_field_cl ")"
  187         | "(" • ")"

    "<val_id>"  shift, and go to state 11
    ")"         shift, and go to state 270

    vid                go to state 192
    lpattern_field     go to state 271
    lpattern_field_cl  go to state 272


State 192

  182 lpattern_field: vid • typespec
  183               | vid •

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 83
    "Fn"        shift, and go to state 93
    "("         shift, and go to state 240

    $default  reduce using rule 183 (lpattern_field)

    tid               go to state 96
    vid               go to state 242
    typespec          go to state 273
    primary_typespec  go to state 103
    paren_typespec    go to state 104
    tuple_typespec    go to state 105
    mod_prefix_tid    go to state 106
    mod_prefix        go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 112


State 193

  188 lpattern_naked: lpattern_field •

    $default  reduce using rule 188 (lpattern_naked)


State 194

  189 lpattern_naked: lpattern •

    $default  reduce using rule 189 (lpattern_naked)


State 195

   15 const_stmt: "const" lpattern_naked • "=" expr

    "="  shift, and go to state 274


State 196

   16 val_stmt: "val" lpattern_naked • "=" expr

    "="  shift, and go to state 275


State 197

   17 var_stmt: "var" lpattern_naked • "=" expr

    "="  shift, and go to state 276


State 198

   18 set_stmt: "set" expr • "=" expr

    "="  shift, and go to state 277


State 199

   19 discard_stmt: "discard" expr •

    $default  reduce using rule 19 (discard_stmt)


State 200

   88 chain_prefix: chain_prefix_stmt ";" •

    $default  reduce using rule 88 (chain_prefix)


State 201

  178 struct_exp_field: vid "=" • expr

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "fn"                     shift, and go to state 39
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    vid             go to state 52
    floatl          go to state 53
    expr            go to state 278
    bracketed_exp   go to state 55
    unit_exp        go to state 56
    paren_exp       go to state 57
    vtupleExpr      go to state 58
    vstructExpr     go to state 59
    primary_exp     go to state 60
    int_expr        go to state 61
    stringls        go to state 62
    if_exp          go to state 63
    chain_exp       go to state 64
    lambda_exp      go to state 65
    postfix_exp     go to state 66
    tcall_exp       go to state 67
    vcall_exp       go to state 68
    dot_name_exp    go to state 69
    dot_index_exp   go to state 70
    unary_exp       go to state 71
    unary_op        go to state 72
    binary_exp      go to state 73
    mul_binary_exp  go to state 74
    add_binary_exp  go to state 75
    cmp_binary_exp  go to state 76
    eq_binary_exp   go to state 77
    and_binary_exp  go to state 78
    xor_binary_exp  go to state 79
    or_binary_exp   go to state 80


State 202

   85 chain_exp: "{" expr "}" •

    $default  reduce using rule 85 (chain_exp)


State 203

   86 chain_exp: "{" chain_prefix "}" •

    $default  reduce using rule 86 (chain_exp)


State 204

   89 chain_prefix: chain_prefix chain_prefix_stmt • ";"

    ";"  shift, and go to state 279


State 205

   87 chain_exp: "{" chain_prefix expr • "}"

    "}"  shift, and go to state 280


State 206

  201 struct_exp_field_cl: struct_exp_field_cl "," • struct_exp_field

    "<val_id>"  shift, and go to state 11

    vid               go to state 281
    struct_exp_field  go to state 282


State 207

   69 vstructExpr: "{" struct_exp_field_cl "}" •

    $default  reduce using rule 69 (vstructExpr)


State 208

   99 dot_name_exp: postfix_exp "." "<val_id>" •

    $default  reduce using rule 99 (dot_name_exp)


State 209

  100 dot_name_exp: postfix_exp "." "<TypeId>" •

    $default  reduce using rule 100 (dot_name_exp)


State 210

  102 dot_index_exp: postfix_exp "." bracketed_exp •

    $default  reduce using rule 102 (dot_index_exp)


State 211

  101 dot_index_exp: postfix_exp "." int_expr •

    $default  reduce using rule 101 (dot_index_exp)


State 212

  174 varg: "out" • expr

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "fn"                     shift, and go to state 39
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    vid             go to state 52
    floatl          go to state 53
    expr            go to state 283
    bracketed_exp   go to state 55
    unit_exp        go to state 56
    paren_exp       go to state 57
    vtupleExpr      go to state 58
    vstructExpr     go to state 59
    primary_exp     go to state 60
    int_expr        go to state 61
    stringls        go to state 62
    if_exp          go to state 63
    chain_exp       go to state 64
    lambda_exp      go to state 65
    postfix_exp     go to state 66
    tcall_exp       go to state 67
    vcall_exp       go to state 68
    dot_name_exp    go to state 69
    dot_index_exp   go to state 70
    unary_exp       go to state 71
    unary_op        go to state 72
    binary_exp      go to state 73
    mul_binary_exp  go to state 74
    add_binary_exp  go to state 75
    cmp_binary_exp  go to state 76
    eq_binary_exp   go to state 77
    and_binary_exp  go to state 78
    xor_binary_exp  go to state 79
    or_binary_exp   go to state 80


State 213

  175 varg: "inout" • expr

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "fn"                     shift, and go to state 39
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    vid             go to state 52
    floatl          go to state 53
    expr            go to state 284
    bracketed_exp   go to state 55
    unit_exp        go to state 56
    paren_exp       go to state 57
    vtupleExpr      go to state 58
    vstructExpr     go to state 59
    primary_exp     go to state 60
    int_expr        go to state 61
    stringls        go to state 62
    if_exp          go to state 63
    chain_exp       go to state 64
    lambda_exp      go to state 65
    postfix_exp     go to state 66
    tcall_exp       go to state 67
    vcall_exp       go to state 68
    dot_name_exp    go to state 69
    dot_index_exp   go to state 70
    unary_exp       go to state 71
    unary_op        go to state 72
    binary_exp      go to state 73
    mul_binary_exp  go to state 74
    add_binary_exp  go to state 75
    cmp_binary_exp  go to state 76
    eq_binary_exp   go to state 77
    and_binary_exp  go to state 78
    xor_binary_exp  go to state 79
    or_binary_exp   go to state 80


State 214

   97 vcall_exp: postfix_exp "(" ")" •

    $default  reduce using rule 97 (vcall_exp)


State 215

  173 varg: expr •

    $default  reduce using rule 173 (varg)


State 216

  176 varg_cl: varg •

    $default  reduce using rule 176 (varg_cl)


State 217

   98 vcall_exp: postfix_exp "(" varg_cl • ")"
  177 varg_cl: varg_cl • "," varg

    ","  shift, and go to state 285
    ")"  shift, and go to state 286


State 218

  170 targ: expr •

    $default  reduce using rule 170 (targ)


State 219

  169 targ: typespec •

    $default  reduce using rule 169 (targ)


State 220

  171 targ_cl: targ •

    $default  reduce using rule 171 (targ_cl)


State 221

   96 tcall_exp: postfix_exp "[" targ_cl • "]"
  172 targ_cl: targ_cl • "," targ

    ","  shift, and go to state 287
    "]"  shift, and go to state 288


State 222

  115 mul_binary_exp: mul_binary_exp mul_binary_op unary_exp •

    $default  reduce using rule 115 (mul_binary_exp)


State 223

  115 mul_binary_exp: mul_binary_exp • mul_binary_op unary_exp
  119 add_binary_exp: add_binary_exp add_binary_op mul_binary_exp •

    "*"  shift, and go to state 136
    "/"  shift, and go to state 137
    "%"  shift, and go to state 138

    $default  reduce using rule 119 (add_binary_exp)

    mul_binary_op  go to state 139


State 224

  119 add_binary_exp: add_binary_exp • add_binary_op mul_binary_exp
  125 cmp_binary_exp: cmp_binary_exp cmp_binary_op add_binary_exp •

    "+"  shift, and go to state 140
    "-"  shift, and go to state 141

    $default  reduce using rule 125 (cmp_binary_exp)

    add_binary_op  go to state 142


State 225

  125 cmp_binary_exp: cmp_binary_exp • cmp_binary_op add_binary_exp
  129 eq_binary_exp: eq_binary_exp eq_binary_op cmp_binary_exp •

    "<"   shift, and go to state 143
    "<="  shift, and go to state 144
    ">"   shift, and go to state 145
    ">="  shift, and go to state 146

    $default  reduce using rule 129 (eq_binary_exp)

    cmp_binary_op  go to state 147


State 226

  129 eq_binary_exp: eq_binary_exp • eq_binary_op cmp_binary_exp
  131 and_binary_exp: and_binary_exp "and" eq_binary_exp •

    "=="  shift, and go to state 148
    "!="  shift, and go to state 149

    $default  reduce using rule 131 (and_binary_exp)

    eq_binary_op  go to state 150


State 227

  131 and_binary_exp: and_binary_exp • "and" eq_binary_exp
  133 xor_binary_exp: xor_binary_exp "xor" and_binary_exp •

    "and"  shift, and go to state 151

    $default  reduce using rule 133 (xor_binary_exp)


State 228

  133 xor_binary_exp: xor_binary_exp • "xor" and_binary_exp
  135 or_binary_exp: or_binary_exp "or" xor_binary_exp •

    "xor"  shift, and go to state 152

    $default  reduce using rule 135 (or_binary_exp)


State 229

   43 using_stmt: "using" vid "." "*" •

    $default  reduce using rule 43 (using_stmt)


State 230

   44 using_stmt: "using" vid "." vid • "*"

    "*"  shift, and go to state 289


State 231

  185 tpattern_field: tid • typespec

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 83
    "Fn"        shift, and go to state 93
    "("         shift, and go to state 240

    tid               go to state 96
    vid               go to state 242
    typespec          go to state 290
    primary_typespec  go to state 103
    paren_typespec    go to state 104
    tuple_typespec    go to state 105
    mod_prefix_tid    go to state 106
    mod_prefix        go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 112


State 232

  184 tpattern_field: vid • typespec

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 83
    "Fn"        shift, and go to state 93
    "("         shift, and go to state 240

    tid               go to state 96
    vid               go to state 242
    typespec          go to state 291
    primary_typespec  go to state 103
    paren_typespec    go to state 104
    tuple_typespec    go to state 105
    mod_prefix_tid    go to state 106
    mod_prefix        go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 112


State 233

  198 tpattern_field_cl: tpattern_field •

    $default  reduce using rule 198 (tpattern_field_cl)


State 234

  192 tpattern: "[" tpattern_field_cl • "]"
  199 tpattern_field_cl: tpattern_field_cl • "," tpattern_field

    ","  shift, and go to state 292
    "]"  shift, and go to state 293


State 235

  193 tpattern: "!" "[" • tpattern_field_cl "]"

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 83

    tid                go to state 231
    vid                go to state 232
    tpattern_field     go to state 233
    tpattern_field_cl  go to state 294


State 236

   28 fn_stmt: "fn" vid vpattern "->" • typespec "=" bracketed_exp

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 83
    "Fn"        shift, and go to state 93
    "("         shift, and go to state 240

    tid               go to state 96
    vid               go to state 242
    typespec          go to state 295
    primary_typespec  go to state 103
    paren_typespec    go to state 104
    tuple_typespec    go to state 105
    mod_prefix_tid    go to state 106
    mod_prefix        go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 112


State 237

   30 fn_stmt: "fn" vid vpattern "=" • bracketed_exp

    "("  shift, and go to state 46
    "{"  shift, and go to state 47

    bracketed_exp  go to state 296
    unit_exp       go to state 56
    paren_exp      go to state 57
    vtupleExpr     go to state 58
    vstructExpr    go to state 59
    chain_exp      go to state 64


State 238

   29 fn_stmt: "fn" vid tpattern_seq vpattern • "->" typespec "=" bracketed_exp
   31        | "fn" vid tpattern_seq vpattern • "=" bracketed_exp

    "->"  shift, and go to state 297
    "="   shift, and go to state 298


State 239

  203 tpattern_seq: tpattern_seq tpattern •

    $default  reduce using rule 203 (tpattern_seq)


State 240

  153 paren_typespec: "(" • typespec ")"
  154 tuple_typespec: "(" • typespec "," ")"
  155               | "(" • typespec_cl2 ")"

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 83
    "Fn"        shift, and go to state 93
    "("         shift, and go to state 240

    tid               go to state 96
    vid               go to state 242
    typespec          go to state 299
    typespec_cl2      go to state 177
    primary_typespec  go to state 103
    paren_typespec    go to state 104
    tuple_typespec    go to state 105
    mod_prefix_tid    go to state 106
    mod_prefix        go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 112


State 241

  168 struct_typespec: "{" • struct_typespec_field_cl "}"

    "<val_id>"  shift, and go to state 11

    vid                       go to state 300
    struct_typespec_field     go to state 301
    struct_typespec_field_cl  go to state 302


State 242

  157 mod_prefix: vid • "."

    "."  shift, and go to state 178


State 243

  166 long_typespec: unary_typespec •

    $default  reduce using rule 166 (long_typespec)


State 244

   32 type_stmt: "type" tid "=" long_typespec •

    $default  reduce using rule 32 (type_stmt)


State 245

  167 long_typespec: struct_typespec •

    $default  reduce using rule 167 (long_typespec)


State 246

   35 enum_field_pl: "|" unprefixed_enum_field_pl •
   37 unprefixed_enum_field_pl: unprefixed_enum_field_pl • "|" enum_field

    "|"  shift, and go to state 303

    $default  reduce using rule 35 (enum_field_pl)


State 247

   36 unprefixed_enum_field_pl: enum_field •

    $default  reduce using rule 36 (unprefixed_enum_field_pl)


State 248

   38 enum_field: tid •
   39           | tid • "(" ")"
   40           | tid • "(" typespec_cl1 ")"

    "("  shift, and go to state 304

    $default  reduce using rule 38 (enum_field)


State 249

   33 type_stmt: "type" tid tpattern_seq "=" • long_typespec

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 83
    "Fn"        shift, and go to state 93
    "("         shift, and go to state 240
    "{"         shift, and go to state 241

    tid               go to state 96
    vid               go to state 242
    primary_typespec  go to state 103
    paren_typespec    go to state 104
    tuple_typespec    go to state 105
    mod_prefix_tid    go to state 106
    mod_prefix        go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 243
    long_typespec     go to state 305
    struct_typespec   go to state 245


State 250

   41 typeclass_stmt: "typeclass" tid "<" tid • typespec ">" "=" "{" type_query_exp_sl "}"
   42               | "typeclass" tid "<" tid • typespec ">" tpattern_seq "=" "{" type_query_exp_sl "}"

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 83
    "Fn"        shift, and go to state 93
    "("         shift, and go to state 240

    tid               go to state 96
    vid               go to state 242
    typespec          go to state 306
    primary_typespec  go to state 103
    paren_typespec    go to state 104
    tuple_typespec    go to state 105
    mod_prefix_tid    go to state 106
    mod_prefix        go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 112


State 251

   83 if_exp: "if" bracketed_exp "then" bracketed_exp •
   84       | "if" bracketed_exp "then" bracketed_exp • "else" primary_exp

    "else"  shift, and go to state 307

    $default  reduce using rule 83 (if_exp)


State 252

  180 vpattern_field: "out" vid • typespec

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 83
    "Fn"        shift, and go to state 93
    "("         shift, and go to state 240

    tid               go to state 96
    vid               go to state 242
    typespec          go to state 308
    primary_typespec  go to state 103
    paren_typespec    go to state 104
    tuple_typespec    go to state 105
    mod_prefix_tid    go to state 106
    mod_prefix        go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 112


State 253

  181 vpattern_field: "inout" vid • typespec

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 83
    "Fn"        shift, and go to state 93
    "("         shift, and go to state 240

    tid               go to state 96
    vid               go to state 242
    typespec          go to state 309
    primary_typespec  go to state 103
    paren_typespec    go to state 104
    tuple_typespec    go to state 105
    mod_prefix_tid    go to state 106
    mod_prefix        go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 112


State 254

  179 vpattern_field: vid typespec •

    $default  reduce using rule 179 (vpattern_field)


State 255

  195 vpattern_field_cl: vpattern_field_cl "," • vpattern_field

    "<val_id>"  shift, and go to state 11
    "out"       shift, and go to state 168
    "inout"     shift, and go to state 169

    vid             go to state 171
    vpattern_field  go to state 310


State 256

  190 vpattern: "(" vpattern_field_cl ")" •

    $default  reduce using rule 190 (vpattern)


State 257

   90 lambda_exp: "fn" vpattern "=" bracketed_exp •

    $default  reduce using rule 90 (lambda_exp)


State 258

  159 fn_typespec: "Fn" vpattern primary_typespec •

    $default  reduce using rule 159 (fn_typespec)


State 259

  143 typespec_cl2: typespec "," • typespec
  154 tuple_typespec: "(" typespec "," • ")"

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 83
    "Fn"        shift, and go to state 93
    "("         shift, and go to state 240
    ")"         shift, and go to state 311

    tid               go to state 96
    vid               go to state 242
    typespec          go to state 312
    primary_typespec  go to state 103
    paren_typespec    go to state 104
    tuple_typespec    go to state 105
    mod_prefix_tid    go to state 106
    mod_prefix        go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 112


State 260

  153 paren_typespec: "(" typespec ")" •

    $default  reduce using rule 153 (paren_typespec)


State 261

  144 typespec_cl2: typespec_cl2 "," • typespec

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 83
    "Fn"        shift, and go to state 93
    "("         shift, and go to state 240

    tid               go to state 96
    vid               go to state 242
    typespec          go to state 313
    primary_typespec  go to state 103
    paren_typespec    go to state 104
    tuple_typespec    go to state 105
    mod_prefix_tid    go to state 106
    mod_prefix        go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 112


State 262

  155 tuple_typespec: "(" typespec_cl2 ")" •

    $default  reduce using rule 155 (tuple_typespec)


State 263

   67 vtupleExpr: "(" expr "," ")" •

    $default  reduce using rule 67 (vtupleExpr)


State 264

   55 expr_cl2: expr "," expr •

    $default  reduce using rule 55 (expr_cl2)


State 265

   56 expr_cl2: expr_cl2 "," expr •

    $default  reduce using rule 56 (expr_cl2)


State 266

  136 type_query_exp: typespec type_query_op typespec •

    $default  reduce using rule 136 (type_query_exp)


State 267

  158 mod_prefix: mod_prefix vid "." •

    $default  reduce using rule 158 (mod_prefix)


State 268

  164 dot_typespec: postfix_typespec "." "<val_id>" •

    $default  reduce using rule 164 (dot_typespec)


State 269

  163 tcall_typespec: postfix_typespec "[" targ_cl • "]"
  172 targ_cl: targ_cl • "," targ

    ","  shift, and go to state 287
    "]"  shift, and go to state 314


State 270

  187 lpattern: "(" ")" •

    $default  reduce using rule 187 (lpattern)


State 271

  196 lpattern_field_cl: lpattern_field •

    $default  reduce using rule 196 (lpattern_field_cl)


State 272

  186 lpattern: "(" lpattern_field_cl • ")"
  197 lpattern_field_cl: lpattern_field_cl • "," lpattern_field

    ","  shift, and go to state 315
    ")"  shift, and go to state 316


State 273

  182 lpattern_field: vid typespec •

    $default  reduce using rule 182 (lpattern_field)


State 274

   15 const_stmt: "const" lpattern_naked "=" • expr

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "fn"                     shift, and go to state 39
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    vid             go to state 52
    floatl          go to state 53
    expr            go to state 317
    bracketed_exp   go to state 55
    unit_exp        go to state 56
    paren_exp       go to state 57
    vtupleExpr      go to state 58
    vstructExpr     go to state 59
    primary_exp     go to state 60
    int_expr        go to state 61
    stringls        go to state 62
    if_exp          go to state 63
    chain_exp       go to state 64
    lambda_exp      go to state 65
    postfix_exp     go to state 66
    tcall_exp       go to state 67
    vcall_exp       go to state 68
    dot_name_exp    go to state 69
    dot_index_exp   go to state 70
    unary_exp       go to state 71
    unary_op        go to state 72
    binary_exp      go to state 73
    mul_binary_exp  go to state 74
    add_binary_exp  go to state 75
    cmp_binary_exp  go to state 76
    eq_binary_exp   go to state 77
    and_binary_exp  go to state 78
    xor_binary_exp  go to state 79
    or_binary_exp   go to state 80


State 275

   16 val_stmt: "val" lpattern_naked "=" • expr

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "fn"                     shift, and go to state 39
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    vid             go to state 52
    floatl          go to state 53
    expr            go to state 318
    bracketed_exp   go to state 55
    unit_exp        go to state 56
    paren_exp       go to state 57
    vtupleExpr      go to state 58
    vstructExpr     go to state 59
    primary_exp     go to state 60
    int_expr        go to state 61
    stringls        go to state 62
    if_exp          go to state 63
    chain_exp       go to state 64
    lambda_exp      go to state 65
    postfix_exp     go to state 66
    tcall_exp       go to state 67
    vcall_exp       go to state 68
    dot_name_exp    go to state 69
    dot_index_exp   go to state 70
    unary_exp       go to state 71
    unary_op        go to state 72
    binary_exp      go to state 73
    mul_binary_exp  go to state 74
    add_binary_exp  go to state 75
    cmp_binary_exp  go to state 76
    eq_binary_exp   go to state 77
    and_binary_exp  go to state 78
    xor_binary_exp  go to state 79
    or_binary_exp   go to state 80


State 276

   17 var_stmt: "var" lpattern_naked "=" • expr

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "fn"                     shift, and go to state 39
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    vid             go to state 52
    floatl          go to state 53
    expr            go to state 319
    bracketed_exp   go to state 55
    unit_exp        go to state 56
    paren_exp       go to state 57
    vtupleExpr      go to state 58
    vstructExpr     go to state 59
    primary_exp     go to state 60
    int_expr        go to state 61
    stringls        go to state 62
    if_exp          go to state 63
    chain_exp       go to state 64
    lambda_exp      go to state 65
    postfix_exp     go to state 66
    tcall_exp       go to state 67
    vcall_exp       go to state 68
    dot_name_exp    go to state 69
    dot_index_exp   go to state 70
    unary_exp       go to state 71
    unary_op        go to state 72
    binary_exp      go to state 73
    mul_binary_exp  go to state 74
    add_binary_exp  go to state 75
    cmp_binary_exp  go to state 76
    eq_binary_exp   go to state 77
    and_binary_exp  go to state 78
    xor_binary_exp  go to state 79
    or_binary_exp   go to state 80


State 277

   18 set_stmt: "set" expr "=" • expr

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "fn"                     shift, and go to state 39
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    vid             go to state 52
    floatl          go to state 53
    expr            go to state 320
    bracketed_exp   go to state 55
    unit_exp        go to state 56
    paren_exp       go to state 57
    vtupleExpr      go to state 58
    vstructExpr     go to state 59
    primary_exp     go to state 60
    int_expr        go to state 61
    stringls        go to state 62
    if_exp          go to state 63
    chain_exp       go to state 64
    lambda_exp      go to state 65
    postfix_exp     go to state 66
    tcall_exp       go to state 67
    vcall_exp       go to state 68
    dot_name_exp    go to state 69
    dot_index_exp   go to state 70
    unary_exp       go to state 71
    unary_op        go to state 72
    binary_exp      go to state 73
    mul_binary_exp  go to state 74
    add_binary_exp  go to state 75
    cmp_binary_exp  go to state 76
    eq_binary_exp   go to state 77
    and_binary_exp  go to state 78
    xor_binary_exp  go to state 79
    or_binary_exp   go to state 80


State 278

  178 struct_exp_field: vid "=" expr •

    $default  reduce using rule 178 (struct_exp_field)


State 279

   89 chain_prefix: chain_prefix chain_prefix_stmt ";" •

    $default  reduce using rule 89 (chain_prefix)


State 280

   87 chain_exp: "{" chain_prefix expr "}" •

    $default  reduce using rule 87 (chain_exp)


State 281

  178 struct_exp_field: vid • "=" expr

    "="  shift, and go to state 201


State 282

  201 struct_exp_field_cl: struct_exp_field_cl "," struct_exp_field •

    $default  reduce using rule 201 (struct_exp_field_cl)


State 283

  174 varg: "out" expr •

    $default  reduce using rule 174 (varg)


State 284

  175 varg: "inout" expr •

    $default  reduce using rule 175 (varg)


State 285

  177 varg_cl: varg_cl "," • varg

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "fn"                     shift, and go to state 39
    "not"                    shift, and go to state 40
    "out"                    shift, and go to state 212
    "inout"                  shift, and go to state 213
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    vid             go to state 52
    floatl          go to state 53
    expr            go to state 215
    bracketed_exp   go to state 55
    unit_exp        go to state 56
    paren_exp       go to state 57
    vtupleExpr      go to state 58
    vstructExpr     go to state 59
    primary_exp     go to state 60
    int_expr        go to state 61
    stringls        go to state 62
    if_exp          go to state 63
    chain_exp       go to state 64
    lambda_exp      go to state 65
    postfix_exp     go to state 66
    tcall_exp       go to state 67
    vcall_exp       go to state 68
    dot_name_exp    go to state 69
    dot_index_exp   go to state 70
    unary_exp       go to state 71
    unary_op        go to state 72
    binary_exp      go to state 73
    mul_binary_exp  go to state 74
    add_binary_exp  go to state 75
    cmp_binary_exp  go to state 76
    eq_binary_exp   go to state 77
    and_binary_exp  go to state 78
    xor_binary_exp  go to state 79
    or_binary_exp   go to state 80
    varg            go to state 321


State 286

   98 vcall_exp: postfix_exp "(" varg_cl ")" •

    $default  reduce using rule 98 (vcall_exp)


State 287

  172 targ_cl: targ_cl "," • targ

    "<val_id>"               shift, and go to state 11
    "<TypeId>"               shift, and go to state 83
    "if"                     shift, and go to state 38
    "fn"                     shift, and go to state 39
    "Fn"                     shift, and go to state 93
    "not"                    shift, and go to state 40
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 94
    "{"                      shift, and go to state 47
    "*"                      shift, and go to state 48
    "+"                      shift, and go to state 49
    "-"                      shift, and go to state 50
    "^"                      shift, and go to state 51

    tid               go to state 96
    vid               go to state 97
    floatl            go to state 53
    expr              go to state 218
    bracketed_exp     go to state 55
    unit_exp          go to state 56
    paren_exp         go to state 57
    vtupleExpr        go to state 58
    vstructExpr       go to state 59
    primary_exp       go to state 60
    int_expr          go to state 61
    stringls          go to state 62
    if_exp            go to state 63
    chain_exp         go to state 64
    lambda_exp        go to state 65
    postfix_exp       go to state 66
    tcall_exp         go to state 67
    vcall_exp         go to state 68
    dot_name_exp      go to state 69
    dot_index_exp     go to state 70
    unary_exp         go to state 71
    unary_op          go to state 72
    binary_exp        go to state 73
    mul_binary_exp    go to state 74
    add_binary_exp    go to state 75
    cmp_binary_exp    go to state 76
    eq_binary_exp     go to state 77
    and_binary_exp    go to state 78
    xor_binary_exp    go to state 79
    or_binary_exp     go to state 80
    typespec          go to state 219
    primary_typespec  go to state 103
    paren_typespec    go to state 104
    tuple_typespec    go to state 105
    mod_prefix_tid    go to state 106
    mod_prefix        go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 112
    targ              go to state 322


State 288

   96 tcall_exp: postfix_exp "[" targ_cl "]" •

    $default  reduce using rule 96 (tcall_exp)


State 289

   44 using_stmt: "using" vid "." vid "*" •

    $default  reduce using rule 44 (using_stmt)


State 290

  185 tpattern_field: tid typespec •

    $default  reduce using rule 185 (tpattern_field)


State 291

  184 tpattern_field: vid typespec •

    $default  reduce using rule 184 (tpattern_field)


State 292

  199 tpattern_field_cl: tpattern_field_cl "," • tpattern_field

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 83

    tid             go to state 231
    vid             go to state 232
    tpattern_field  go to state 323


State 293

  192 tpattern: "[" tpattern_field_cl "]" •

    $default  reduce using rule 192 (tpattern)


State 294

  193 tpattern: "!" "[" tpattern_field_cl • "]"
  199 tpattern_field_cl: tpattern_field_cl • "," tpattern_field

    ","  shift, and go to state 292
    "]"  shift, and go to state 324


State 295

   28 fn_stmt: "fn" vid vpattern "->" typespec • "=" bracketed_exp

    "="  shift, and go to state 325


State 296

   30 fn_stmt: "fn" vid vpattern "=" bracketed_exp •

    $default  reduce using rule 30 (fn_stmt)


State 297

   29 fn_stmt: "fn" vid tpattern_seq vpattern "->" • typespec "=" bracketed_exp

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 83
    "Fn"        shift, and go to state 93
    "("         shift, and go to state 240

    tid               go to state 96
    vid               go to state 242
    typespec          go to state 326
    primary_typespec  go to state 103
    paren_typespec    go to state 104
    tuple_typespec    go to state 105
    mod_prefix_tid    go to state 106
    mod_prefix        go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 112


State 298

   31 fn_stmt: "fn" vid tpattern_seq vpattern "=" • bracketed_exp

    "("  shift, and go to state 46
    "{"  shift, and go to state 47

    bracketed_exp  go to state 327
    unit_exp       go to state 56
    paren_exp      go to state 57
    vtupleExpr     go to state 58
    vstructExpr    go to state 59
    chain_exp      go to state 64


State 299

  143 typespec_cl2: typespec • "," typespec
  153 paren_typespec: "(" typespec • ")"
  154 tuple_typespec: "(" typespec • "," ")"

    ","  shift, and go to state 259
    ")"  shift, and go to state 260


State 300

  145 struct_typespec_field: vid • typespec

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 83
    "Fn"        shift, and go to state 93
    "("         shift, and go to state 240

    tid               go to state 96
    vid               go to state 242
    typespec          go to state 328
    primary_typespec  go to state 103
    paren_typespec    go to state 104
    tuple_typespec    go to state 105
    mod_prefix_tid    go to state 106
    mod_prefix        go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 112


State 301

  146 struct_typespec_field_cl: struct_typespec_field •

    $default  reduce using rule 146 (struct_typespec_field_cl)


State 302

  147 struct_typespec_field_cl: struct_typespec_field_cl • "," struct_typespec_field
  168 struct_typespec: "{" struct_typespec_field_cl • "}"

    ","  shift, and go to state 329
    "}"  shift, and go to state 330


State 303

   37 unprefixed_enum_field_pl: unprefixed_enum_field_pl "|" • enum_field

    "<TypeId>"  shift, and go to state 83

    enum_field  go to state 331
    tid         go to state 248


State 304

   39 enum_field: tid "(" • ")"
   40           | tid "(" • typespec_cl1 ")"

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 83
    "Fn"        shift, and go to state 93
    "("         shift, and go to state 240
    ")"         shift, and go to state 332

    tid               go to state 96
    vid               go to state 242
    typespec          go to state 333
    typespec_cl1      go to state 334
    primary_typespec  go to state 103
    paren_typespec    go to state 104
    tuple_typespec    go to state 105
    mod_prefix_tid    go to state 106
    mod_prefix        go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 112


State 305

   33 type_stmt: "type" tid tpattern_seq "=" long_typespec •

    $default  reduce using rule 33 (type_stmt)


State 306

   41 typeclass_stmt: "typeclass" tid "<" tid typespec • ">" "=" "{" type_query_exp_sl "}"
   42               | "typeclass" tid "<" tid typespec • ">" tpattern_seq "=" "{" type_query_exp_sl "}"

    ">"  shift, and go to state 335


State 307

   84 if_exp: "if" bracketed_exp "then" bracketed_exp "else" • primary_exp

    "<val_id>"               shift, and go to state 11
    "if"                     shift, and go to state 38
    "fn"                     shift, and go to state 39
    "42"                     shift, and go to state 41
    "0x2a"                   shift, and go to state 42
    "4.2"                    shift, and go to state 43
    "\"dq-string-literal\""  shift, and go to state 44
    "'sq-string-literal'"    shift, and go to state 45
    "("                      shift, and go to state 46
    "{"                      shift, and go to state 47

    vid            go to state 52
    floatl         go to state 53
    bracketed_exp  go to state 55
    unit_exp       go to state 56
    paren_exp      go to state 57
    vtupleExpr     go to state 58
    vstructExpr    go to state 59
    primary_exp    go to state 336
    int_expr       go to state 61
    stringls       go to state 62
    if_exp         go to state 63
    chain_exp      go to state 64
    lambda_exp     go to state 65


State 308

  180 vpattern_field: "out" vid typespec •

    $default  reduce using rule 180 (vpattern_field)


State 309

  181 vpattern_field: "inout" vid typespec •

    $default  reduce using rule 181 (vpattern_field)


State 310

  195 vpattern_field_cl: vpattern_field_cl "," vpattern_field •

    $default  reduce using rule 195 (vpattern_field_cl)


State 311

  154 tuple_typespec: "(" typespec "," ")" •

    $default  reduce using rule 154 (tuple_typespec)


State 312

  143 typespec_cl2: typespec "," typespec •

    $default  reduce using rule 143 (typespec_cl2)


State 313

  144 typespec_cl2: typespec_cl2 "," typespec •

    $default  reduce using rule 144 (typespec_cl2)


State 314

  163 tcall_typespec: postfix_typespec "[" targ_cl "]" •

    $default  reduce using rule 163 (tcall_typespec)


State 315

  197 lpattern_field_cl: lpattern_field_cl "," • lpattern_field

    "<val_id>"  shift, and go to state 11

    vid             go to state 192
    lpattern_field  go to state 337


State 316

  186 lpattern: "(" lpattern_field_cl ")" •

    $default  reduce using rule 186 (lpattern)


State 317

   15 const_stmt: "const" lpattern_naked "=" expr •

    $default  reduce using rule 15 (const_stmt)


State 318

   16 val_stmt: "val" lpattern_naked "=" expr •

    $default  reduce using rule 16 (val_stmt)


State 319

   17 var_stmt: "var" lpattern_naked "=" expr •

    $default  reduce using rule 17 (var_stmt)


State 320

   18 set_stmt: "set" expr "=" expr •

    $default  reduce using rule 18 (set_stmt)


State 321

  177 varg_cl: varg_cl "," varg •

    $default  reduce using rule 177 (varg_cl)


State 322

  172 targ_cl: targ_cl "," targ •

    $default  reduce using rule 172 (targ_cl)


State 323

  199 tpattern_field_cl: tpattern_field_cl "," tpattern_field •

    $default  reduce using rule 199 (tpattern_field_cl)


State 324

  193 tpattern: "!" "[" tpattern_field_cl "]" •

    $default  reduce using rule 193 (tpattern)


State 325

   28 fn_stmt: "fn" vid vpattern "->" typespec "=" • bracketed_exp

    "("  shift, and go to state 46
    "{"  shift, and go to state 47

    bracketed_exp  go to state 338
    unit_exp       go to state 56
    paren_exp      go to state 57
    vtupleExpr     go to state 58
    vstructExpr    go to state 59
    chain_exp      go to state 64


State 326

   29 fn_stmt: "fn" vid tpattern_seq vpattern "->" typespec • "=" bracketed_exp

    "="  shift, and go to state 339


State 327

   31 fn_stmt: "fn" vid tpattern_seq vpattern "=" bracketed_exp •

    $default  reduce using rule 31 (fn_stmt)


State 328

  145 struct_typespec_field: vid typespec •

    $default  reduce using rule 145 (struct_typespec_field)


State 329

  147 struct_typespec_field_cl: struct_typespec_field_cl "," • struct_typespec_field

    "<val_id>"  shift, and go to state 11

    vid                    go to state 300
    struct_typespec_field  go to state 340


State 330

  168 struct_typespec: "{" struct_typespec_field_cl "}" •

    $default  reduce using rule 168 (struct_typespec)


State 331

   37 unprefixed_enum_field_pl: unprefixed_enum_field_pl "|" enum_field •

    $default  reduce using rule 37 (unprefixed_enum_field_pl)


State 332

   39 enum_field: tid "(" ")" •

    $default  reduce using rule 39 (enum_field)


State 333

  141 typespec_cl1: typespec •

    $default  reduce using rule 141 (typespec_cl1)


State 334

   40 enum_field: tid "(" typespec_cl1 • ")"
  142 typespec_cl1: typespec_cl1 • "," typespec

    ","  shift, and go to state 341
    ")"  shift, and go to state 342


State 335

   41 typeclass_stmt: "typeclass" tid "<" tid typespec ">" • "=" "{" type_query_exp_sl "}"
   42               | "typeclass" tid "<" tid typespec ">" • tpattern_seq "=" "{" type_query_exp_sl "}"

    "["  shift, and go to state 155
    "="  shift, and go to state 343
    "!"  shift, and go to state 156

    tpattern      go to state 158
    tpattern_seq  go to state 344


State 336

   84 if_exp: "if" bracketed_exp "then" bracketed_exp "else" primary_exp •

    $default  reduce using rule 84 (if_exp)


State 337

  197 lpattern_field_cl: lpattern_field_cl "," lpattern_field •

    $default  reduce using rule 197 (lpattern_field_cl)


State 338

   28 fn_stmt: "fn" vid vpattern "->" typespec "=" bracketed_exp •

    $default  reduce using rule 28 (fn_stmt)


State 339

   29 fn_stmt: "fn" vid tpattern_seq vpattern "->" typespec "=" • bracketed_exp

    "("  shift, and go to state 46
    "{"  shift, and go to state 47

    bracketed_exp  go to state 345
    unit_exp       go to state 56
    paren_exp      go to state 57
    vtupleExpr     go to state 58
    vstructExpr    go to state 59
    chain_exp      go to state 64


State 340

  147 struct_typespec_field_cl: struct_typespec_field_cl "," struct_typespec_field •

    $default  reduce using rule 147 (struct_typespec_field_cl)


State 341

  142 typespec_cl1: typespec_cl1 "," • typespec

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 83
    "Fn"        shift, and go to state 93
    "("         shift, and go to state 240

    tid               go to state 96
    vid               go to state 242
    typespec          go to state 346
    primary_typespec  go to state 103
    paren_typespec    go to state 104
    tuple_typespec    go to state 105
    mod_prefix_tid    go to state 106
    mod_prefix        go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 112


State 342

   40 enum_field: tid "(" typespec_cl1 ")" •

    $default  reduce using rule 40 (enum_field)


State 343

   41 typeclass_stmt: "typeclass" tid "<" tid typespec ">" "=" • "{" type_query_exp_sl "}"

    "{"  shift, and go to state 347


State 344

   42 typeclass_stmt: "typeclass" tid "<" tid typespec ">" tpattern_seq • "=" "{" type_query_exp_sl "}"
  203 tpattern_seq: tpattern_seq • tpattern

    "["  shift, and go to state 155
    "="  shift, and go to state 348
    "!"  shift, and go to state 156

    tpattern  go to state 239


State 345

   29 fn_stmt: "fn" vid tpattern_seq vpattern "->" typespec "=" bracketed_exp •

    $default  reduce using rule 29 (fn_stmt)


State 346

  142 typespec_cl1: typespec_cl1 "," typespec •

    $default  reduce using rule 142 (typespec_cl1)


State 347

   41 typeclass_stmt: "typeclass" tid "<" tid typespec ">" "=" "{" • type_query_exp_sl "}"

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 83
    "Fn"        shift, and go to state 93
    "("         shift, and go to state 240

    tid                go to state 96
    vid                go to state 242
    type_query_exp_sl  go to state 349
    type_query_exp     go to state 350
    typespec           go to state 102
    primary_typespec   go to state 103
    paren_typespec     go to state 104
    tuple_typespec     go to state 105
    mod_prefix_tid     go to state 106
    mod_prefix         go to state 107
    fn_typespec        go to state 108
    postfix_typespec   go to state 109
    tcall_typespec     go to state 110
    dot_typespec       go to state 111
    unary_typespec     go to state 112


State 348

   42 typeclass_stmt: "typeclass" tid "<" tid typespec ">" tpattern_seq "=" • "{" type_query_exp_sl "}"

    "{"  shift, and go to state 351


State 349

   41 typeclass_stmt: "typeclass" tid "<" tid typespec ">" "=" "{" type_query_exp_sl • "}"
   58 type_query_exp_sl: type_query_exp_sl • type_query_exp ";"

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 83
    "Fn"        shift, and go to state 93
    "("         shift, and go to state 240
    "}"         shift, and go to state 352

    tid               go to state 96
    vid               go to state 242
    type_query_exp    go to state 353
    typespec          go to state 102
    primary_typespec  go to state 103
    paren_typespec    go to state 104
    tuple_typespec    go to state 105
    mod_prefix_tid    go to state 106
    mod_prefix        go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 112


State 350

   57 type_query_exp_sl: type_query_exp • ";"

    ";"  shift, and go to state 354


State 351

   42 typeclass_stmt: "typeclass" tid "<" tid typespec ">" tpattern_seq "=" "{" • type_query_exp_sl "}"

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 83
    "Fn"        shift, and go to state 93
    "("         shift, and go to state 240

    tid                go to state 96
    vid                go to state 242
    type_query_exp_sl  go to state 355
    type_query_exp     go to state 350
    typespec           go to state 102
    primary_typespec   go to state 103
    paren_typespec     go to state 104
    tuple_typespec     go to state 105
    mod_prefix_tid     go to state 106
    mod_prefix         go to state 107
    fn_typespec        go to state 108
    postfix_typespec   go to state 109
    tcall_typespec     go to state 110
    dot_typespec       go to state 111
    unary_typespec     go to state 112


State 352

   41 typeclass_stmt: "typeclass" tid "<" tid typespec ">" "=" "{" type_query_exp_sl "}" •

    $default  reduce using rule 41 (typeclass_stmt)


State 353

   58 type_query_exp_sl: type_query_exp_sl type_query_exp • ";"

    ";"  shift, and go to state 356


State 354

   57 type_query_exp_sl: type_query_exp ";" •

    $default  reduce using rule 57 (type_query_exp_sl)


State 355

   42 typeclass_stmt: "typeclass" tid "<" tid typespec ">" tpattern_seq "=" "{" type_query_exp_sl • "}"
   58 type_query_exp_sl: type_query_exp_sl • type_query_exp ";"

    "<val_id>"  shift, and go to state 11
    "<TypeId>"  shift, and go to state 83
    "Fn"        shift, and go to state 93
    "("         shift, and go to state 240
    "}"         shift, and go to state 357

    tid               go to state 96
    vid               go to state 242
    type_query_exp    go to state 353
    typespec          go to state 102
    primary_typespec  go to state 103
    paren_typespec    go to state 104
    tuple_typespec    go to state 105
    mod_prefix_tid    go to state 106
    mod_prefix        go to state 107
    fn_typespec       go to state 108
    postfix_typespec  go to state 109
    tcall_typespec    go to state 110
    dot_typespec      go to state 111
    unary_typespec    go to state 112


State 356

   58 type_query_exp_sl: type_query_exp_sl type_query_exp ";" •

    $default  reduce using rule 58 (type_query_exp_sl)


State 357

   42 typeclass_stmt: "typeclass" tid "<" tid typespec ">" tpattern_seq "=" "{" type_query_exp_sl "}" •

    $default  reduce using rule 42 (typeclass_stmt)
