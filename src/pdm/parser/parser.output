Terminals unused in grammar

    "<__42__>"
    "match"
    "with"
    ":"
    "EOS"
    "<null>"


State 65 conflicts: 1 shift/reduce
State 113 conflicts: 1 shift/reduce


Grammar

    0 $accept: script $end

    1 script: scriptContent

    2 scriptContent: scriptContentStmt ";"
    3              | scriptContent scriptContentStmt ";"

    4 scriptContentStmt: mod_stmt

    5 mod_stmt: "mod" "<val_id>" "{" moduleContent "}"

    6 moduleContent: moduleContentStmt ";"
    7              | moduleContent moduleContentStmt ";"

    8 chainPrefixStmt: constStmt
    9                | letStmt
   10                | varStmt
   11                | setStmt
   12                | discardStmt

   13 constStmt: "const" lpattern_naked "=" expr

   14 letStmt: "let" lpattern_naked "=" expr

   15 varStmt: "var" lpattern_naked "=" expr

   16 setStmt: "set" expr "=" expr

   17 discardStmt: expr

   18 moduleContentStmt: fn_stmt
   19                  | type_stmt
   20                  | enum_stmt
   21                  | typeclass_stmt
   22                  | importStmt
   23                  | mod_stmt
   24                  | using_stmt
   25                  | extern_stmt

   26 fn_stmt: "fn" vid vpattern "->" typespec "=" parenExpr
   27        | "fn" vid tpattern_seq vpattern "->" typespec "=" parenExpr
   28        | "fn" vid vpattern "=" parenExpr
   29        | "fn" vid tpattern_seq vpattern "=" parenExpr

   30 type_stmt: "type" tid "=" long_typespec
   31          | "type" tid tpattern_seq "=" long_typespec

   32 enum_stmt: "enum" tid enum_field_pl

   33 enum_field_pl: "|" unprefixed_enum_field_pl
   34              | unprefixed_enum_field_pl

   35 unprefixed_enum_field_pl: enum_field
   36                         | unprefixed_enum_field_pl "|" enum_field

   37 enum_field: tid
   38           | tid "(" ")"
   39           | tid "(" typespec_cl1 ")"

   40 typeclass_stmt: "typeclass" tid "<" tid typespec ">" "=" "{" expr_sl "}"
   41               | "typeclass" tid "<" tid typespec ">" tpattern_seq "=" "{" expr_sl "}"

   42 using_stmt: "using" parenExpr

   43 importStmt: "import" vid "from" stringl "type" stringl

   44 extern_stmt: "extern" vid "from" expr

   45 tid: "<TypeId>"

   46 vid: "<val_id>"

   47 floatl: "4.2"

   48 stringl: "'sq-string-literal'"
   49        | "\"dq-string-literal\""

   50 expr: type_query_exp

   51 expr_cl1: expr
   52         | expr_cl1 "," expr

   53 expr_cl2: expr "," expr
   54         | expr_cl2 "," expr

   55 expr_sl: expr ";"
   56        | expr_sl expr ";"

   57 parenExpr: unitExpr
   58          | vparenExpr
   59          | vtupleExpr
   60          | vstructExpr
   61          | chainExpr

   62 unitExpr: "(" ")"
   63         | "{" "}"

   64 vparenExpr: "(" expr ")"

   65 vtupleExpr: "(" expr "," ")"
   66           | "(" expr_cl2 ")"

   67 vstructExpr: "{" vstructExprField_cl "}"

   68 primaryExpr: parenExpr
   69            | vid
   70            | int_expr
   71            | floatl
   72            | stringls
   73            | ifThenElseExpr
   74            | vlambdaExpr

   75 int_expr: "42"
   76         | "0x2a"

   77 stringls: "'sq-string-literal'"
   78         | "\"dq-string-literal\""
   79         | stringls "'sq-string-literal'"
   80         | stringls "\"dq-string-literal\""

   81 ifThenElseExpr: "if" parenExpr "then" parenExpr
   82               | "if" parenExpr "then" parenExpr "else" primaryExpr

   83 chainExpr: "{" expr "}"
   84          | "{" chainPrefix "}"
   85          | "{" chainPrefix expr "}"

   86 chainPrefix: chainPrefixStmt ";"
   87            | chainPrefix chainPrefixStmt ";"

   88 vlambdaExpr: "fn" vpattern "=" parenExpr

   89 postfixExpr: primaryExpr
   90            | tcall_exp
   91            | vcall_exp
   92            | dot_name_exp
   93            | dotIxExpr

   94 tcall_exp: postfixExpr "[" vtarg_cl "]"

   95 vcall_exp: postfixExpr "(" ")"
   96          | postfixExpr "(" expr_cl1 ")"

   97 dot_name_exp: postfixExpr "." "<val_id>"
   98             | postfixExpr "." "<TypeId>"
   99             | postfixExpr "->" "<val_id>"
  100             | postfixExpr "->" "<TypeId>"

  101 dotIxExpr: postfixExpr "." int_expr
  102          | postfixExpr "." parenExpr
  103          | postfixExpr "->" int_expr
  104          | postfixExpr "->" parenExpr

  105 unaryExpr: postfixExpr
  106          | unaryOp unaryExpr

  107 unaryOp: "+"
  108        | "-"
  109        | "*"
  110        | "^"
  111        | "not"

  112 binaryExpr: orBinaryExpr

  113 mulBinaryOp: "*"
  114            | "/"
  115            | "%"

  116 mulBinaryExpr: unaryExpr
  117              | mulBinaryExpr mulBinaryOp unaryExpr

  118 addBinaryOp: "+"
  119            | "-"

  120 addBinaryExpr: mulBinaryExpr
  121              | addBinaryExpr addBinaryOp mulBinaryExpr

  122 cmpBinaryOp: "<"
  123            | "<="
  124            | ">"
  125            | ">="

  126 cmpBinaryExpr: addBinaryExpr
  127              | cmpBinaryExpr cmpBinaryOp addBinaryExpr

  128 eqBinaryOp: "=="
  129           | "!="

  130 eqBinaryExpr: cmpBinaryExpr
  131             | eqBinaryExpr eqBinaryOp cmpBinaryExpr

  132 andBinaryExpr: eqBinaryExpr
  133              | andBinaryExpr "and" eqBinaryExpr

  134 xorBinaryExpr: andBinaryExpr
  135              | xorBinaryExpr "xor" andBinaryExpr

  136 orBinaryExpr: xorBinaryExpr
  137             | orBinaryExpr "or" xorBinaryExpr

  138 type_query_exp: binaryExpr
  139               | typespec type_query_op typespec

  140 type_query_op: ":<"
  141              | ">:"
  142              | "::"

  143 typespec: unaryTypespec

  144 typespec_cl1: typespec
  145             | typespec_cl1 "," typespec

  146 typespec_cl2: typespec "," typespec
  147             | typespec_cl2 "," typespec

  148 structTypespecField: vid typespec

  149 structTypespecField_cl: structTypespecField
  150                       | structTypespecField_cl "," structTypespecField

  151 primaryTypespec: tid
  152                | parenTypespec
  153                | tupleTypespec
  154                | mod_prefix_tid
  155                | fn_typespec

  156 parenTypespec: "(" typespec ")"

  157 tupleTypespec: "(" typespec "," ")"
  158              | "(" typespec_cl2 ")"

  159 mod_prefix_tid: mod_prefix tid

  160 mod_prefix: vid "."
  161           | mod_prefix vid "."

  162 fn_typespec: "Fn" vpattern primaryTypespec

  163 postfixTypespec: primaryTypespec
  164                | ttcall
  165                | tdot

  166 ttcall: postfixTypespec "[" ttarg_cl "]"

  167 tdot: postfixTypespec "." "<val_id>"

  168 unaryTypespec: postfixTypespec
  169              | "&" unaryTypespec

  170 long_typespec: unaryTypespec
  171              | structTypespec

  172 structTypespec: "{" structTypespecField_cl "}"

  173 ttarg: typespec
  174      | expr

  175 ttarg_cl: ttarg
  176         | ttarg_cl "," ttarg

  177 vtarg: typespec
  178      | expr

  179 vtarg_cl: vtarg
  180         | vtarg_cl "," vtarg

  181 vstructExprField: vid "=" expr

  182 vpatternField: vid typespec

  183 lpatternField: vid typespec
  184              | vid

  185 tpatternField: vid typespec
  186              | tid typespec

  187 lpattern: "(" lpatternField_cl ")"
  188         | "(" ")"

  189 lpattern_naked: lpatternField
  190               | lpattern

  191 vpattern: "(" vpatternField_cl ")"
  192         | "(" ")"

  193 tpattern: "[" tpatternField_cl "]"
  194         | "!" "[" tpatternField_cl "]"

  195 vpatternField_cl: vpatternField
  196                 | vpatternField_cl "," vpatternField

  197 lpatternField_cl: lpatternField
  198                 | lpatternField_cl "," lpatternField

  199 tpatternField_cl: tpatternField
  200                 | tpatternField_cl "," tpatternField

  201 vstructExprField_cl: vstructExprField
  202                    | vstructExprField_cl "," vstructExprField

  203 tpattern_seq: tpattern
  204             | tpattern_seq tpattern


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    "<val_id>" <TokenInfo> (258) 5 46 97 99 167
    "<TypeId>" <TokenInfo> (259) 45 98 100
    "<__42__>" <TokenInfo> (260)
    "using" (261) 42
    "mod" (262) 5
    "if" (263) 81 82
    "then" (264) 81 82
    "else" (265) 82
    "match" (266)
    "with" (267)
    "import" (268) 43
    "extern" (269) 44
    "from" (270) 43 44
    "const" (271) 13
    "let" (272) 14
    "var" (273) 15
    "set" (274) 16
    "fn" (275) 26 27 28 29 88
    "Fn" (276) 162
    "type" (277) 30 31 43
    "enum" (278) 32
    "and" (279) 133
    "xor" (280) 135
    "or" (281) 137
    "not" (282) 111
    "typeclass" (283) 40 41
    "42" <TokenInfo> (284) 75
    "0x2a" <TokenInfo> (285) 76
    "4.2" <TokenInfo> (286) 47
    "\"dq-string-literal\"" <TokenInfo> (287) 49 78 80
    "'sq-string-literal'" <TokenInfo> (288) 48 77 79
    "." (289) 97 98 101 102 160 161 167
    ":" (290)
    "," (291) 52 53 54 65 145 146 147 150 157 176 180 196 198 200 202
    ";" (292) 2 3 6 7 55 56 86 87
    "::" (293) 142
    "(" (294) 38 39 62 64 65 66 95 96 156 157 158 187 188 191 192
    ")" (295) 38 39 62 64 65 66 95 96 156 157 158 187 188 191 192
    "[" (296) 94 166 193 194
    "]" (297) 94 166 193 194
    "{" (298) 5 40 41 63 67 83 84 85 172
    "}" (299) 5 40 41 63 67 83 84 85 172
    "->" (300) 26 27 99 100 103 104
    "*" (301) 109 113
    "/" (302) 114
    "%" (303) 115
    "+" (304) 107 118
    "-" (305) 108 119
    "<" (306) 40 41 122
    "<=" (307) 123
    ">" (308) 40 41 124
    ">=" (309) 125
    "=" (310) 13 14 15 16 26 27 28 29 30 31 40 41 88 181
    "==" (311) 128
    "!=" (312) 129
    "^" (313) 110
    "&" (314) 169
    "!" (315) 194
    "|" (316) 33 36
    "EOS" (317)
    ":<" (318) 140
    ">:" (319) 141
    "<null>" (320)


Nonterminals, with rules where they appear

    $accept (66)
        on left: 0
    script <pdm::ast::Script*> (67)
        on left: 1
        on right: 0
    scriptContent <std::vector<pdm::ast::Stmt*>> (68)
        on left: 2 3
        on right: 1 3
    scriptContentStmt <pdm::ast::Stmt*> (69)
        on left: 4
        on right: 2 3
    mod_stmt <pdm::ast::Stmt*> (70)
        on left: 5
        on right: 4 23
    moduleContent <std::vector<pdm::ast::Stmt*>> (71)
        on left: 6 7
        on right: 5 7
    chainPrefixStmt <pdm::ast::Stmt*> (72)
        on left: 8 9 10 11 12
        on right: 86 87
    constStmt <pdm::ast::Stmt*> (73)
        on left: 13
        on right: 8
    letStmt <pdm::ast::Stmt*> (74)
        on left: 14
        on right: 9
    varStmt <pdm::ast::Stmt*> (75)
        on left: 15
        on right: 10
    setStmt <pdm::ast::Stmt*> (76)
        on left: 16
        on right: 11
    discardStmt <pdm::ast::Stmt*> (77)
        on left: 17
        on right: 12
    moduleContentStmt <pdm::ast::Stmt*> (78)
        on left: 18 19 20 21 22 23 24 25
        on right: 6 7
    fn_stmt <pdm::ast::Stmt*> (79)
        on left: 26 27 28 29
        on right: 18
    type_stmt <pdm::ast::Stmt*> (80)
        on left: 30 31
        on right: 19
    enum_stmt <pdm::ast::Stmt*> (81)
        on left: 32
        on right: 20
    enum_field_pl <std::vector<pdm::ast::EnumStmt::Field*>> (82)
        on left: 33 34
        on right: 32
    unprefixed_enum_field_pl <std::vector<pdm::ast::EnumStmt::Field*>> (83)
        on left: 35 36
        on right: 33 34 36
    enum_field <pdm::ast::EnumStmt::Field*> (84)
        on left: 37 38 39
        on right: 35 36
    typeclass_stmt <pdm::ast::Stmt*> (85)
        on left: 40 41
        on right: 21
    using_stmt <pdm::ast::Stmt*> (86)
        on left: 42
        on right: 24
    importStmt <pdm::ast::Stmt*> (87)
        on left: 43
        on right: 22
    extern_stmt <pdm::ast::Stmt*> (88)
        on left: 44
        on right: 25
    tid <TokenInfo> (89)
        on left: 45
        on right: 30 31 32 37 38 39 40 41 151 159 186
    vid <TokenInfo> (90)
        on left: 46
        on right: 26 27 28 29 43 44 69 148 160 161 181 182 183 184 185
    floatl <TokenInfo> (91)
        on left: 47
        on right: 71
    stringl <TokenInfo> (92)
        on left: 48 49
        on right: 43
    expr <pdm::ast::Exp*> (93)
        on left: 50
        on right: 13 14 15 16 17 44 51 52 53 54 55 56 64 65 83 85 174 178 181
    expr_cl1 <std::vector<pdm::ast::Exp*>> (94)
        on left: 51 52
        on right: 52 96
    expr_cl2 <std::vector<pdm::ast::Exp*>> (95)
        on left: 53 54
        on right: 54 66
    expr_sl <std::vector<pdm::ast::Exp*>> (96)
        on left: 55 56
        on right: 40 41 56
    parenExpr <pdm::ast::Exp*> (97)
        on left: 57 58 59 60 61
        on right: 26 27 28 29 42 68 81 82 88 102 104
    unitExpr <pdm::ast::Exp*> (98)
        on left: 62 63
        on right: 57
    vparenExpr <pdm::ast::Exp*> (99)
        on left: 64
        on right: 58
    vtupleExpr <pdm::ast::Exp*> (100)
        on left: 65 66
        on right: 59
    vstructExpr <pdm::ast::Exp*> (101)
        on left: 67
        on right: 60
    primaryExpr <pdm::ast::Exp*> (102)
        on left: 68 69 70 71 72 73 74
        on right: 82 89
    int_expr <pdm::ast::Exp*> (103)
        on left: 75 76
        on right: 70 101 103
    stringls <std::vector<pdm::ast::StringExp::Piece>> (104)
        on left: 77 78 79 80
        on right: 72 79 80
    ifThenElseExpr <pdm::ast::Exp*> (105)
        on left: 81 82
        on right: 73
    chainExpr <pdm::ast::Exp*> (106)
        on left: 83 84 85
        on right: 61
    chainPrefix <std::vector<pdm::ast::Stmt*>> (107)
        on left: 86 87
        on right: 84 85 87
    vlambdaExpr <pdm::ast::Exp*> (108)
        on left: 88
        on right: 74
    postfixExpr <pdm::ast::Exp*> (109)
        on left: 89 90 91 92 93
        on right: 94 95 96 97 98 99 100 101 102 103 104 105
    tcall_exp <pdm::ast::Exp*> (110)
        on left: 94
        on right: 90
    vcall_exp <pdm::ast::Exp*> (111)
        on left: 95 96
        on right: 91
    dot_name_exp <pdm::ast::Exp*> (112)
        on left: 97 98 99 100
        on right: 92
    dotIxExpr <pdm::ast::Exp*> (113)
        on left: 101 102 103 104
        on right: 93
    unaryExpr <pdm::ast::Exp*> (114)
        on left: 105 106
        on right: 106 116 117
    unaryOp <pdm::ast::UnaryOperator> (115)
        on left: 107 108 109 110 111
        on right: 106
    binaryExpr <pdm::ast::Exp*> (116)
        on left: 112
        on right: 138
    mulBinaryOp <pdm::ast::BinaryOperator> (117)
        on left: 113 114 115
        on right: 117
    mulBinaryExpr <pdm::ast::Exp*> (118)
        on left: 116 117
        on right: 117 120 121
    addBinaryOp <pdm::ast::BinaryOperator> (119)
        on left: 118 119
        on right: 121
    addBinaryExpr <pdm::ast::Exp*> (120)
        on left: 120 121
        on right: 121 126 127
    cmpBinaryOp <pdm::ast::BinaryOperator> (121)
        on left: 122 123 124 125
        on right: 127
    cmpBinaryExpr <pdm::ast::Exp*> (122)
        on left: 126 127
        on right: 127 130 131
    eqBinaryOp <pdm::ast::BinaryOperator> (123)
        on left: 128 129
        on right: 131
    eqBinaryExpr <pdm::ast::Exp*> (124)
        on left: 130 131
        on right: 131 132 133
    andBinaryExpr <pdm::ast::Exp*> (125)
        on left: 132 133
        on right: 133 134 135
    xorBinaryExpr <pdm::ast::Exp*> (126)
        on left: 134 135
        on right: 135 136 137
    orBinaryExpr <pdm::ast::Exp*> (127)
        on left: 136 137
        on right: 112 137
    type_query_exp <pdm::ast::Exp*> (128)
        on left: 138 139
        on right: 50
    type_query_op <pdm::ast::TypeQueryKind> (129)
        on left: 140 141 142
        on right: 139
    typespec <pdm::ast::Typespec*> (130)
        on left: 143
        on right: 26 27 40 41 139 144 145 146 147 148 156 157 173 177 182 183 185 186
    typespec_cl1 <std::vector<pdm::ast::Typespec*>> (131)
        on left: 144 145
        on right: 39 145
    typespec_cl2 <std::vector<pdm::ast::Typespec*>> (132)
        on left: 146 147
        on right: 147 158
    structTypespecField <pdm::ast::StructTypespec::Field*> (133)
        on left: 148
        on right: 149 150
    structTypespecField_cl <std::vector<pdm::ast::StructTypespec::Field*>> (134)
        on left: 149 150
        on right: 150 172
    primaryTypespec <pdm::ast::Typespec*> (135)
        on left: 151 152 153 154 155
        on right: 162 163
    parenTypespec <pdm::ast::Typespec*> (136)
        on left: 156
        on right: 152
    tupleTypespec <pdm::ast::Typespec*> (137)
        on left: 157 158
        on right: 153
    mod_prefix_tid <pdm::ast::Typespec*> (138)
        on left: 159
        on right: 154
    mod_prefix <std::vector<pdm::intern::String>> (139)
        on left: 160 161
        on right: 159 161
    fn_typespec <pdm::ast::Typespec*> (140)
        on left: 162
        on right: 155
    postfixTypespec <pdm::ast::Typespec*> (141)
        on left: 163 164 165
        on right: 166 167 168
    ttcall <pdm::ast::Typespec*> (142)
        on left: 166
        on right: 164
    tdot <pdm::ast::Typespec*> (143)
        on left: 167
        on right: 165
    unaryTypespec <pdm::ast::Typespec*> (144)
        on left: 168 169
        on right: 143 169 170
    long_typespec <pdm::ast::Typespec*> (145)
        on left: 170 171
        on right: 30 31
    structTypespec <pdm::ast::Typespec*> (146)
        on left: 172
        on right: 171
    ttarg <pdm::ast::TArg*> (147)
        on left: 173 174
        on right: 175 176
    ttarg_cl <std::vector<pdm::ast::TArg*>> (148)
        on left: 175 176
        on right: 166 176
    vtarg <pdm::ast::TArg*> (149)
        on left: 177 178
        on right: 179 180
    vtarg_cl <std::vector<pdm::ast::TArg*>> (150)
        on left: 179 180
        on right: 94 180
    vstructExprField <pdm::ast::StructExp::Field*> (151)
        on left: 181
        on right: 201 202
    vpatternField <pdm::ast::VPattern::Field*> (152)
        on left: 182
        on right: 195 196
    lpatternField <pdm::ast::LPattern::Field*> (153)
        on left: 183 184
        on right: 189 197 198
    tpatternField <pdm::ast::TPattern::Field*> (154)
        on left: 185 186
        on right: 199 200
    lpattern <pdm::ast::LPattern*> (155)
        on left: 187 188
        on right: 190
    lpattern_naked <pdm::ast::LPattern*> (156)
        on left: 189 190
        on right: 13 14 15
    vpattern <pdm::ast::VPattern*> (157)
        on left: 191 192
        on right: 26 27 28 29 88 162
    tpattern <pdm::ast::TPattern*> (158)
        on left: 193 194
        on right: 203 204
    vpatternField_cl <std::vector<pdm::ast::VPattern::Field*>> (159)
        on left: 195 196
        on right: 191 196
    lpatternField_cl <std::vector<pdm::ast::LPattern::Field*>> (160)
        on left: 197 198
        on right: 187 198
    tpatternField_cl <std::vector<pdm::ast::TPattern::Field*>> (161)
        on left: 199 200
        on right: 193 194 200
    vstructExprField_cl <std::vector<pdm::ast::StructExp::Field*>> (162)
        on left: 201 202
        on right: 67 202
    tpattern_seq <std::vector<pdm::ast::TPattern*>> (163)
        on left: 203 204
        on right: 27 29 31 41 204


State 0

    0 $accept: • script $end

    "mod"  shift, and go to state 1

    script             go to state 2
    scriptContent      go to state 3
    scriptContentStmt  go to state 4
    mod_stmt           go to state 5


State 1

    5 mod_stmt: "mod" • "<val_id>" "{" moduleContent "}"

    "<val_id>"  shift, and go to state 6


State 2

    0 $accept: script • $end

    $end  shift, and go to state 7


State 3

    1 script: scriptContent •
    3 scriptContent: scriptContent • scriptContentStmt ";"

    "mod"  shift, and go to state 1

    $default  reduce using rule 1 (script)

    scriptContentStmt  go to state 8
    mod_stmt           go to state 5


State 4

    2 scriptContent: scriptContentStmt • ";"

    ";"  shift, and go to state 9


State 5

    4 scriptContentStmt: mod_stmt •

    $default  reduce using rule 4 (scriptContentStmt)


State 6

    5 mod_stmt: "mod" "<val_id>" • "{" moduleContent "}"

    "{"  shift, and go to state 10


State 7

    0 $accept: script $end •

    $default  accept


State 8

    3 scriptContent: scriptContent scriptContentStmt • ";"

    ";"  shift, and go to state 11


State 9

    2 scriptContent: scriptContentStmt ";" •

    $default  reduce using rule 2 (scriptContent)


State 10

    5 mod_stmt: "mod" "<val_id>" "{" • moduleContent "}"

    "using"      shift, and go to state 12
    "mod"        shift, and go to state 1
    "import"     shift, and go to state 13
    "extern"     shift, and go to state 14
    "fn"         shift, and go to state 15
    "type"       shift, and go to state 16
    "enum"       shift, and go to state 17
    "typeclass"  shift, and go to state 18

    mod_stmt           go to state 19
    moduleContent      go to state 20
    moduleContentStmt  go to state 21
    fn_stmt            go to state 22
    type_stmt          go to state 23
    enum_stmt          go to state 24
    typeclass_stmt     go to state 25
    using_stmt         go to state 26
    importStmt         go to state 27
    extern_stmt        go to state 28


State 11

    3 scriptContent: scriptContent scriptContentStmt ";" •

    $default  reduce using rule 3 (scriptContent)


State 12

   42 using_stmt: "using" • parenExpr

    "("  shift, and go to state 29
    "{"  shift, and go to state 30

    parenExpr    go to state 31
    unitExpr     go to state 32
    vparenExpr   go to state 33
    vtupleExpr   go to state 34
    vstructExpr  go to state 35
    chainExpr    go to state 36


State 13

   43 importStmt: "import" • vid "from" stringl "type" stringl

    "<val_id>"  shift, and go to state 37

    vid  go to state 38


State 14

   44 extern_stmt: "extern" • vid "from" expr

    "<val_id>"  shift, and go to state 37

    vid  go to state 39


State 15

   26 fn_stmt: "fn" • vid vpattern "->" typespec "=" parenExpr
   27        | "fn" • vid tpattern_seq vpattern "->" typespec "=" parenExpr
   28        | "fn" • vid vpattern "=" parenExpr
   29        | "fn" • vid tpattern_seq vpattern "=" parenExpr

    "<val_id>"  shift, and go to state 37

    vid  go to state 40


State 16

   30 type_stmt: "type" • tid "=" long_typespec
   31          | "type" • tid tpattern_seq "=" long_typespec

    "<TypeId>"  shift, and go to state 41

    tid  go to state 42


State 17

   32 enum_stmt: "enum" • tid enum_field_pl

    "<TypeId>"  shift, and go to state 41

    tid  go to state 43


State 18

   40 typeclass_stmt: "typeclass" • tid "<" tid typespec ">" "=" "{" expr_sl "}"
   41               | "typeclass" • tid "<" tid typespec ">" tpattern_seq "=" "{" expr_sl "}"

    "<TypeId>"  shift, and go to state 41

    tid  go to state 44


State 19

   23 moduleContentStmt: mod_stmt •

    $default  reduce using rule 23 (moduleContentStmt)


State 20

    5 mod_stmt: "mod" "<val_id>" "{" moduleContent • "}"
    7 moduleContent: moduleContent • moduleContentStmt ";"

    "using"      shift, and go to state 12
    "mod"        shift, and go to state 1
    "import"     shift, and go to state 13
    "extern"     shift, and go to state 14
    "fn"         shift, and go to state 15
    "type"       shift, and go to state 16
    "enum"       shift, and go to state 17
    "typeclass"  shift, and go to state 18
    "}"          shift, and go to state 45

    mod_stmt           go to state 19
    moduleContentStmt  go to state 46
    fn_stmt            go to state 22
    type_stmt          go to state 23
    enum_stmt          go to state 24
    typeclass_stmt     go to state 25
    using_stmt         go to state 26
    importStmt         go to state 27
    extern_stmt        go to state 28


State 21

    6 moduleContent: moduleContentStmt • ";"

    ";"  shift, and go to state 47


State 22

   18 moduleContentStmt: fn_stmt •

    $default  reduce using rule 18 (moduleContentStmt)


State 23

   19 moduleContentStmt: type_stmt •

    $default  reduce using rule 19 (moduleContentStmt)


State 24

   20 moduleContentStmt: enum_stmt •

    $default  reduce using rule 20 (moduleContentStmt)


State 25

   21 moduleContentStmt: typeclass_stmt •

    $default  reduce using rule 21 (moduleContentStmt)


State 26

   24 moduleContentStmt: using_stmt •

    $default  reduce using rule 24 (moduleContentStmt)


State 27

   22 moduleContentStmt: importStmt •

    $default  reduce using rule 22 (moduleContentStmt)


State 28

   25 moduleContentStmt: extern_stmt •

    $default  reduce using rule 25 (moduleContentStmt)


State 29

   62 unitExpr: "(" • ")"
   64 vparenExpr: "(" • expr ")"
   65 vtupleExpr: "(" • expr "," ")"
   66           | "(" • expr_cl2 ")"

    "<val_id>"               shift, and go to state 37
    "<TypeId>"               shift, and go to state 41
    "if"                     shift, and go to state 48
    "fn"                     shift, and go to state 49
    "Fn"                     shift, and go to state 50
    "not"                    shift, and go to state 51
    "42"                     shift, and go to state 52
    "0x2a"                   shift, and go to state 53
    "4.2"                    shift, and go to state 54
    "\"dq-string-literal\""  shift, and go to state 55
    "'sq-string-literal'"    shift, and go to state 56
    "("                      shift, and go to state 57
    ")"                      shift, and go to state 58
    "{"                      shift, and go to state 30
    "*"                      shift, and go to state 59
    "+"                      shift, and go to state 60
    "-"                      shift, and go to state 61
    "^"                      shift, and go to state 62
    "&"                      shift, and go to state 63

    tid              go to state 64
    vid              go to state 65
    floatl           go to state 66
    expr             go to state 67
    expr_cl2         go to state 68
    parenExpr        go to state 69
    unitExpr         go to state 32
    vparenExpr       go to state 33
    vtupleExpr       go to state 34
    vstructExpr      go to state 35
    primaryExpr      go to state 70
    int_expr         go to state 71
    stringls         go to state 72
    ifThenElseExpr   go to state 73
    chainExpr        go to state 36
    vlambdaExpr      go to state 74
    postfixExpr      go to state 75
    tcall_exp        go to state 76
    vcall_exp        go to state 77
    dot_name_exp     go to state 78
    dotIxExpr        go to state 79
    unaryExpr        go to state 80
    unaryOp          go to state 81
    binaryExpr       go to state 82
    mulBinaryExpr    go to state 83
    addBinaryExpr    go to state 84
    cmpBinaryExpr    go to state 85
    eqBinaryExpr     go to state 86
    andBinaryExpr    go to state 87
    xorBinaryExpr    go to state 88
    orBinaryExpr     go to state 89
    type_query_exp   go to state 90
    typespec         go to state 91
    primaryTypespec  go to state 92
    parenTypespec    go to state 93
    tupleTypespec    go to state 94
    mod_prefix_tid   go to state 95
    mod_prefix       go to state 96
    fn_typespec      go to state 97
    postfixTypespec  go to state 98
    ttcall           go to state 99
    tdot             go to state 100
    unaryTypespec    go to state 101


State 30

   63 unitExpr: "{" • "}"
   67 vstructExpr: "{" • vstructExprField_cl "}"
   83 chainExpr: "{" • expr "}"
   84          | "{" • chainPrefix "}"
   85          | "{" • chainPrefix expr "}"

    "<val_id>"               shift, and go to state 37
    "<TypeId>"               shift, and go to state 41
    "if"                     shift, and go to state 48
    "const"                  shift, and go to state 102
    "let"                    shift, and go to state 103
    "var"                    shift, and go to state 104
    "set"                    shift, and go to state 105
    "fn"                     shift, and go to state 49
    "Fn"                     shift, and go to state 50
    "not"                    shift, and go to state 51
    "42"                     shift, and go to state 52
    "0x2a"                   shift, and go to state 53
    "4.2"                    shift, and go to state 54
    "\"dq-string-literal\""  shift, and go to state 55
    "'sq-string-literal'"    shift, and go to state 56
    "("                      shift, and go to state 57
    "{"                      shift, and go to state 30
    "}"                      shift, and go to state 106
    "*"                      shift, and go to state 59
    "+"                      shift, and go to state 60
    "-"                      shift, and go to state 61
    "^"                      shift, and go to state 62
    "&"                      shift, and go to state 63

    chainPrefixStmt      go to state 107
    constStmt            go to state 108
    letStmt              go to state 109
    varStmt              go to state 110
    setStmt              go to state 111
    discardStmt          go to state 112
    tid                  go to state 64
    vid                  go to state 113
    floatl               go to state 66
    expr                 go to state 114
    parenExpr            go to state 69
    unitExpr             go to state 32
    vparenExpr           go to state 33
    vtupleExpr           go to state 34
    vstructExpr          go to state 35
    primaryExpr          go to state 70
    int_expr             go to state 71
    stringls             go to state 72
    ifThenElseExpr       go to state 73
    chainExpr            go to state 36
    chainPrefix          go to state 115
    vlambdaExpr          go to state 74
    postfixExpr          go to state 75
    tcall_exp            go to state 76
    vcall_exp            go to state 77
    dot_name_exp         go to state 78
    dotIxExpr            go to state 79
    unaryExpr            go to state 80
    unaryOp              go to state 81
    binaryExpr           go to state 82
    mulBinaryExpr        go to state 83
    addBinaryExpr        go to state 84
    cmpBinaryExpr        go to state 85
    eqBinaryExpr         go to state 86
    andBinaryExpr        go to state 87
    xorBinaryExpr        go to state 88
    orBinaryExpr         go to state 89
    type_query_exp       go to state 90
    typespec             go to state 91
    primaryTypespec      go to state 92
    parenTypespec        go to state 93
    tupleTypespec        go to state 94
    mod_prefix_tid       go to state 95
    mod_prefix           go to state 96
    fn_typespec          go to state 97
    postfixTypespec      go to state 98
    ttcall               go to state 99
    tdot                 go to state 100
    unaryTypespec        go to state 101
    vstructExprField     go to state 116
    vstructExprField_cl  go to state 117


State 31

   42 using_stmt: "using" parenExpr •

    $default  reduce using rule 42 (using_stmt)


State 32

   57 parenExpr: unitExpr •

    $default  reduce using rule 57 (parenExpr)


State 33

   58 parenExpr: vparenExpr •

    $default  reduce using rule 58 (parenExpr)


State 34

   59 parenExpr: vtupleExpr •

    $default  reduce using rule 59 (parenExpr)


State 35

   60 parenExpr: vstructExpr •

    $default  reduce using rule 60 (parenExpr)


State 36

   61 parenExpr: chainExpr •

    $default  reduce using rule 61 (parenExpr)


State 37

   46 vid: "<val_id>" •

    $default  reduce using rule 46 (vid)


State 38

   43 importStmt: "import" vid • "from" stringl "type" stringl

    "from"  shift, and go to state 118


State 39

   44 extern_stmt: "extern" vid • "from" expr

    "from"  shift, and go to state 119


State 40

   26 fn_stmt: "fn" vid • vpattern "->" typespec "=" parenExpr
   27        | "fn" vid • tpattern_seq vpattern "->" typespec "=" parenExpr
   28        | "fn" vid • vpattern "=" parenExpr
   29        | "fn" vid • tpattern_seq vpattern "=" parenExpr

    "("  shift, and go to state 120
    "["  shift, and go to state 121
    "!"  shift, and go to state 122

    vpattern      go to state 123
    tpattern      go to state 124
    tpattern_seq  go to state 125


State 41

   45 tid: "<TypeId>" •

    $default  reduce using rule 45 (tid)


State 42

   30 type_stmt: "type" tid • "=" long_typespec
   31          | "type" tid • tpattern_seq "=" long_typespec

    "["  shift, and go to state 121
    "="  shift, and go to state 126
    "!"  shift, and go to state 122

    tpattern      go to state 124
    tpattern_seq  go to state 127


State 43

   32 enum_stmt: "enum" tid • enum_field_pl

    "<TypeId>"  shift, and go to state 41
    "|"         shift, and go to state 128

    enum_field_pl             go to state 129
    unprefixed_enum_field_pl  go to state 130
    enum_field                go to state 131
    tid                       go to state 132


State 44

   40 typeclass_stmt: "typeclass" tid • "<" tid typespec ">" "=" "{" expr_sl "}"
   41               | "typeclass" tid • "<" tid typespec ">" tpattern_seq "=" "{" expr_sl "}"

    "<"  shift, and go to state 133


State 45

    5 mod_stmt: "mod" "<val_id>" "{" moduleContent "}" •

    $default  reduce using rule 5 (mod_stmt)


State 46

    7 moduleContent: moduleContent moduleContentStmt • ";"

    ";"  shift, and go to state 134


State 47

    6 moduleContent: moduleContentStmt ";" •

    $default  reduce using rule 6 (moduleContent)


State 48

   81 ifThenElseExpr: "if" • parenExpr "then" parenExpr
   82               | "if" • parenExpr "then" parenExpr "else" primaryExpr

    "("  shift, and go to state 29
    "{"  shift, and go to state 30

    parenExpr    go to state 135
    unitExpr     go to state 32
    vparenExpr   go to state 33
    vtupleExpr   go to state 34
    vstructExpr  go to state 35
    chainExpr    go to state 36


State 49

   88 vlambdaExpr: "fn" • vpattern "=" parenExpr

    "("  shift, and go to state 120

    vpattern  go to state 136


State 50

  162 fn_typespec: "Fn" • vpattern primaryTypespec

    "("  shift, and go to state 120

    vpattern  go to state 137


State 51

  111 unaryOp: "not" •

    $default  reduce using rule 111 (unaryOp)


State 52

   75 int_expr: "42" •

    $default  reduce using rule 75 (int_expr)


State 53

   76 int_expr: "0x2a" •

    $default  reduce using rule 76 (int_expr)


State 54

   47 floatl: "4.2" •

    $default  reduce using rule 47 (floatl)


State 55

   78 stringls: "\"dq-string-literal\"" •

    $default  reduce using rule 78 (stringls)


State 56

   77 stringls: "'sq-string-literal'" •

    $default  reduce using rule 77 (stringls)


State 57

   62 unitExpr: "(" • ")"
   64 vparenExpr: "(" • expr ")"
   65 vtupleExpr: "(" • expr "," ")"
   66           | "(" • expr_cl2 ")"
  156 parenTypespec: "(" • typespec ")"
  157 tupleTypespec: "(" • typespec "," ")"
  158              | "(" • typespec_cl2 ")"

    "<val_id>"               shift, and go to state 37
    "<TypeId>"               shift, and go to state 41
    "if"                     shift, and go to state 48
    "fn"                     shift, and go to state 49
    "Fn"                     shift, and go to state 50
    "not"                    shift, and go to state 51
    "42"                     shift, and go to state 52
    "0x2a"                   shift, and go to state 53
    "4.2"                    shift, and go to state 54
    "\"dq-string-literal\""  shift, and go to state 55
    "'sq-string-literal'"    shift, and go to state 56
    "("                      shift, and go to state 57
    ")"                      shift, and go to state 58
    "{"                      shift, and go to state 30
    "*"                      shift, and go to state 59
    "+"                      shift, and go to state 60
    "-"                      shift, and go to state 61
    "^"                      shift, and go to state 62
    "&"                      shift, and go to state 63

    tid              go to state 64
    vid              go to state 65
    floatl           go to state 66
    expr             go to state 67
    expr_cl2         go to state 68
    parenExpr        go to state 69
    unitExpr         go to state 32
    vparenExpr       go to state 33
    vtupleExpr       go to state 34
    vstructExpr      go to state 35
    primaryExpr      go to state 70
    int_expr         go to state 71
    stringls         go to state 72
    ifThenElseExpr   go to state 73
    chainExpr        go to state 36
    vlambdaExpr      go to state 74
    postfixExpr      go to state 75
    tcall_exp        go to state 76
    vcall_exp        go to state 77
    dot_name_exp     go to state 78
    dotIxExpr        go to state 79
    unaryExpr        go to state 80
    unaryOp          go to state 81
    binaryExpr       go to state 82
    mulBinaryExpr    go to state 83
    addBinaryExpr    go to state 84
    cmpBinaryExpr    go to state 85
    eqBinaryExpr     go to state 86
    andBinaryExpr    go to state 87
    xorBinaryExpr    go to state 88
    orBinaryExpr     go to state 89
    type_query_exp   go to state 90
    typespec         go to state 138
    typespec_cl2     go to state 139
    primaryTypespec  go to state 92
    parenTypespec    go to state 93
    tupleTypespec    go to state 94
    mod_prefix_tid   go to state 95
    mod_prefix       go to state 96
    fn_typespec      go to state 97
    postfixTypespec  go to state 98
    ttcall           go to state 99
    tdot             go to state 100
    unaryTypespec    go to state 101


State 58

   62 unitExpr: "(" ")" •

    $default  reduce using rule 62 (unitExpr)


State 59

  109 unaryOp: "*" •

    $default  reduce using rule 109 (unaryOp)


State 60

  107 unaryOp: "+" •

    $default  reduce using rule 107 (unaryOp)


State 61

  108 unaryOp: "-" •

    $default  reduce using rule 108 (unaryOp)


State 62

  110 unaryOp: "^" •

    $default  reduce using rule 110 (unaryOp)


State 63

  169 unaryTypespec: "&" • unaryTypespec

    "<val_id>"  shift, and go to state 37
    "<TypeId>"  shift, and go to state 41
    "Fn"        shift, and go to state 50
    "("         shift, and go to state 140
    "&"         shift, and go to state 63

    tid              go to state 64
    vid              go to state 141
    primaryTypespec  go to state 92
    parenTypespec    go to state 93
    tupleTypespec    go to state 94
    mod_prefix_tid   go to state 95
    mod_prefix       go to state 96
    fn_typespec      go to state 97
    postfixTypespec  go to state 98
    ttcall           go to state 99
    tdot             go to state 100
    unaryTypespec    go to state 142


State 64

  151 primaryTypespec: tid •

    $default  reduce using rule 151 (primaryTypespec)


State 65

   69 primaryExpr: vid •
  160 mod_prefix: vid • "."

    "."  shift, and go to state 143

    "."       [reduce using rule 69 (primaryExpr)]
    $default  reduce using rule 69 (primaryExpr)


State 66

   71 primaryExpr: floatl •

    $default  reduce using rule 71 (primaryExpr)


State 67

   53 expr_cl2: expr • "," expr
   64 vparenExpr: "(" expr • ")"
   65 vtupleExpr: "(" expr • "," ")"

    ","  shift, and go to state 144
    ")"  shift, and go to state 145


State 68

   54 expr_cl2: expr_cl2 • "," expr
   66 vtupleExpr: "(" expr_cl2 • ")"

    ","  shift, and go to state 146
    ")"  shift, and go to state 147


State 69

   68 primaryExpr: parenExpr •

    $default  reduce using rule 68 (primaryExpr)


State 70

   89 postfixExpr: primaryExpr •

    $default  reduce using rule 89 (postfixExpr)


State 71

   70 primaryExpr: int_expr •

    $default  reduce using rule 70 (primaryExpr)


State 72

   72 primaryExpr: stringls •
   79 stringls: stringls • "'sq-string-literal'"
   80         | stringls • "\"dq-string-literal\""

    "\"dq-string-literal\""  shift, and go to state 148
    "'sq-string-literal'"    shift, and go to state 149

    $default  reduce using rule 72 (primaryExpr)


State 73

   73 primaryExpr: ifThenElseExpr •

    $default  reduce using rule 73 (primaryExpr)


State 74

   74 primaryExpr: vlambdaExpr •

    $default  reduce using rule 74 (primaryExpr)


State 75

   94 tcall_exp: postfixExpr • "[" vtarg_cl "]"
   95 vcall_exp: postfixExpr • "(" ")"
   96          | postfixExpr • "(" expr_cl1 ")"
   97 dot_name_exp: postfixExpr • "." "<val_id>"
   98             | postfixExpr • "." "<TypeId>"
   99             | postfixExpr • "->" "<val_id>"
  100             | postfixExpr • "->" "<TypeId>"
  101 dotIxExpr: postfixExpr • "." int_expr
  102          | postfixExpr • "." parenExpr
  103          | postfixExpr • "->" int_expr
  104          | postfixExpr • "->" parenExpr
  105 unaryExpr: postfixExpr •

    "."   shift, and go to state 150
    "("   shift, and go to state 151
    "["   shift, and go to state 152
    "->"  shift, and go to state 153

    $default  reduce using rule 105 (unaryExpr)


State 76

   90 postfixExpr: tcall_exp •

    $default  reduce using rule 90 (postfixExpr)


State 77

   91 postfixExpr: vcall_exp •

    $default  reduce using rule 91 (postfixExpr)


State 78

   92 postfixExpr: dot_name_exp •

    $default  reduce using rule 92 (postfixExpr)


State 79

   93 postfixExpr: dotIxExpr •

    $default  reduce using rule 93 (postfixExpr)


State 80

  116 mulBinaryExpr: unaryExpr •

    $default  reduce using rule 116 (mulBinaryExpr)


State 81

  106 unaryExpr: unaryOp • unaryExpr

    "<val_id>"               shift, and go to state 37
    "if"                     shift, and go to state 48
    "fn"                     shift, and go to state 49
    "not"                    shift, and go to state 51
    "42"                     shift, and go to state 52
    "0x2a"                   shift, and go to state 53
    "4.2"                    shift, and go to state 54
    "\"dq-string-literal\""  shift, and go to state 55
    "'sq-string-literal'"    shift, and go to state 56
    "("                      shift, and go to state 29
    "{"                      shift, and go to state 30
    "*"                      shift, and go to state 59
    "+"                      shift, and go to state 60
    "-"                      shift, and go to state 61
    "^"                      shift, and go to state 62

    vid             go to state 154
    floatl          go to state 66
    parenExpr       go to state 69
    unitExpr        go to state 32
    vparenExpr      go to state 33
    vtupleExpr      go to state 34
    vstructExpr     go to state 35
    primaryExpr     go to state 70
    int_expr        go to state 71
    stringls        go to state 72
    ifThenElseExpr  go to state 73
    chainExpr       go to state 36
    vlambdaExpr     go to state 74
    postfixExpr     go to state 75
    tcall_exp       go to state 76
    vcall_exp       go to state 77
    dot_name_exp    go to state 78
    dotIxExpr       go to state 79
    unaryExpr       go to state 155
    unaryOp         go to state 81


State 82

  138 type_query_exp: binaryExpr •

    $default  reduce using rule 138 (type_query_exp)


State 83

  117 mulBinaryExpr: mulBinaryExpr • mulBinaryOp unaryExpr
  120 addBinaryExpr: mulBinaryExpr •

    "*"  shift, and go to state 156
    "/"  shift, and go to state 157
    "%"  shift, and go to state 158

    $default  reduce using rule 120 (addBinaryExpr)

    mulBinaryOp  go to state 159


State 84

  121 addBinaryExpr: addBinaryExpr • addBinaryOp mulBinaryExpr
  126 cmpBinaryExpr: addBinaryExpr •

    "+"  shift, and go to state 160
    "-"  shift, and go to state 161

    $default  reduce using rule 126 (cmpBinaryExpr)

    addBinaryOp  go to state 162


State 85

  127 cmpBinaryExpr: cmpBinaryExpr • cmpBinaryOp addBinaryExpr
  130 eqBinaryExpr: cmpBinaryExpr •

    "<"   shift, and go to state 163
    "<="  shift, and go to state 164
    ">"   shift, and go to state 165
    ">="  shift, and go to state 166

    $default  reduce using rule 130 (eqBinaryExpr)

    cmpBinaryOp  go to state 167


State 86

  131 eqBinaryExpr: eqBinaryExpr • eqBinaryOp cmpBinaryExpr
  132 andBinaryExpr: eqBinaryExpr •

    "=="  shift, and go to state 168
    "!="  shift, and go to state 169

    $default  reduce using rule 132 (andBinaryExpr)

    eqBinaryOp  go to state 170


State 87

  133 andBinaryExpr: andBinaryExpr • "and" eqBinaryExpr
  134 xorBinaryExpr: andBinaryExpr •

    "and"  shift, and go to state 171

    $default  reduce using rule 134 (xorBinaryExpr)


State 88

  135 xorBinaryExpr: xorBinaryExpr • "xor" andBinaryExpr
  136 orBinaryExpr: xorBinaryExpr •

    "xor"  shift, and go to state 172

    $default  reduce using rule 136 (orBinaryExpr)


State 89

  112 binaryExpr: orBinaryExpr •
  137 orBinaryExpr: orBinaryExpr • "or" xorBinaryExpr

    "or"  shift, and go to state 173

    $default  reduce using rule 112 (binaryExpr)


State 90

   50 expr: type_query_exp •

    $default  reduce using rule 50 (expr)


State 91

  139 type_query_exp: typespec • type_query_op typespec

    "::"  shift, and go to state 174
    ":<"  shift, and go to state 175
    ">:"  shift, and go to state 176

    type_query_op  go to state 177


State 92

  163 postfixTypespec: primaryTypespec •

    $default  reduce using rule 163 (postfixTypespec)


State 93

  152 primaryTypespec: parenTypespec •

    $default  reduce using rule 152 (primaryTypespec)


State 94

  153 primaryTypespec: tupleTypespec •

    $default  reduce using rule 153 (primaryTypespec)


State 95

  154 primaryTypespec: mod_prefix_tid •

    $default  reduce using rule 154 (primaryTypespec)


State 96

  159 mod_prefix_tid: mod_prefix • tid
  161 mod_prefix: mod_prefix • vid "."

    "<val_id>"  shift, and go to state 37
    "<TypeId>"  shift, and go to state 41

    tid  go to state 178
    vid  go to state 179


State 97

  155 primaryTypespec: fn_typespec •

    $default  reduce using rule 155 (primaryTypespec)


State 98

  166 ttcall: postfixTypespec • "[" ttarg_cl "]"
  167 tdot: postfixTypespec • "." "<val_id>"
  168 unaryTypespec: postfixTypespec •

    "."  shift, and go to state 180
    "["  shift, and go to state 181

    $default  reduce using rule 168 (unaryTypespec)


State 99

  164 postfixTypespec: ttcall •

    $default  reduce using rule 164 (postfixTypespec)


State 100

  165 postfixTypespec: tdot •

    $default  reduce using rule 165 (postfixTypespec)


State 101

  143 typespec: unaryTypespec •

    $default  reduce using rule 143 (typespec)


State 102

   13 constStmt: "const" • lpattern_naked "=" expr

    "<val_id>"  shift, and go to state 37
    "("         shift, and go to state 182

    vid             go to state 183
    lpatternField   go to state 184
    lpattern        go to state 185
    lpattern_naked  go to state 186


State 103

   14 letStmt: "let" • lpattern_naked "=" expr

    "<val_id>"  shift, and go to state 37
    "("         shift, and go to state 182

    vid             go to state 183
    lpatternField   go to state 184
    lpattern        go to state 185
    lpattern_naked  go to state 187


State 104

   15 varStmt: "var" • lpattern_naked "=" expr

    "<val_id>"  shift, and go to state 37
    "("         shift, and go to state 182

    vid             go to state 183
    lpatternField   go to state 184
    lpattern        go to state 185
    lpattern_naked  go to state 188


State 105

   16 setStmt: "set" • expr "=" expr

    "<val_id>"               shift, and go to state 37
    "<TypeId>"               shift, and go to state 41
    "if"                     shift, and go to state 48
    "fn"                     shift, and go to state 49
    "Fn"                     shift, and go to state 50
    "not"                    shift, and go to state 51
    "42"                     shift, and go to state 52
    "0x2a"                   shift, and go to state 53
    "4.2"                    shift, and go to state 54
    "\"dq-string-literal\""  shift, and go to state 55
    "'sq-string-literal'"    shift, and go to state 56
    "("                      shift, and go to state 57
    "{"                      shift, and go to state 30
    "*"                      shift, and go to state 59
    "+"                      shift, and go to state 60
    "-"                      shift, and go to state 61
    "^"                      shift, and go to state 62
    "&"                      shift, and go to state 63

    tid              go to state 64
    vid              go to state 65
    floatl           go to state 66
    expr             go to state 189
    parenExpr        go to state 69
    unitExpr         go to state 32
    vparenExpr       go to state 33
    vtupleExpr       go to state 34
    vstructExpr      go to state 35
    primaryExpr      go to state 70
    int_expr         go to state 71
    stringls         go to state 72
    ifThenElseExpr   go to state 73
    chainExpr        go to state 36
    vlambdaExpr      go to state 74
    postfixExpr      go to state 75
    tcall_exp        go to state 76
    vcall_exp        go to state 77
    dot_name_exp     go to state 78
    dotIxExpr        go to state 79
    unaryExpr        go to state 80
    unaryOp          go to state 81
    binaryExpr       go to state 82
    mulBinaryExpr    go to state 83
    addBinaryExpr    go to state 84
    cmpBinaryExpr    go to state 85
    eqBinaryExpr     go to state 86
    andBinaryExpr    go to state 87
    xorBinaryExpr    go to state 88
    orBinaryExpr     go to state 89
    type_query_exp   go to state 90
    typespec         go to state 91
    primaryTypespec  go to state 92
    parenTypespec    go to state 93
    tupleTypespec    go to state 94
    mod_prefix_tid   go to state 95
    mod_prefix       go to state 96
    fn_typespec      go to state 97
    postfixTypespec  go to state 98
    ttcall           go to state 99
    tdot             go to state 100
    unaryTypespec    go to state 101


State 106

   63 unitExpr: "{" "}" •

    $default  reduce using rule 63 (unitExpr)


State 107

   86 chainPrefix: chainPrefixStmt • ";"

    ";"  shift, and go to state 190


State 108

    8 chainPrefixStmt: constStmt •

    $default  reduce using rule 8 (chainPrefixStmt)


State 109

    9 chainPrefixStmt: letStmt •

    $default  reduce using rule 9 (chainPrefixStmt)


State 110

   10 chainPrefixStmt: varStmt •

    $default  reduce using rule 10 (chainPrefixStmt)


State 111

   11 chainPrefixStmt: setStmt •

    $default  reduce using rule 11 (chainPrefixStmt)


State 112

   12 chainPrefixStmt: discardStmt •

    $default  reduce using rule 12 (chainPrefixStmt)


State 113

   69 primaryExpr: vid •
  160 mod_prefix: vid • "."
  181 vstructExprField: vid • "=" expr

    "."  shift, and go to state 143
    "="  shift, and go to state 191

    "."       [reduce using rule 69 (primaryExpr)]
    $default  reduce using rule 69 (primaryExpr)


State 114

   17 discardStmt: expr •
   83 chainExpr: "{" expr • "}"

    "}"  shift, and go to state 192

    $default  reduce using rule 17 (discardStmt)


State 115

   84 chainExpr: "{" chainPrefix • "}"
   85          | "{" chainPrefix • expr "}"
   87 chainPrefix: chainPrefix • chainPrefixStmt ";"

    "<val_id>"               shift, and go to state 37
    "<TypeId>"               shift, and go to state 41
    "if"                     shift, and go to state 48
    "const"                  shift, and go to state 102
    "let"                    shift, and go to state 103
    "var"                    shift, and go to state 104
    "set"                    shift, and go to state 105
    "fn"                     shift, and go to state 49
    "Fn"                     shift, and go to state 50
    "not"                    shift, and go to state 51
    "42"                     shift, and go to state 52
    "0x2a"                   shift, and go to state 53
    "4.2"                    shift, and go to state 54
    "\"dq-string-literal\""  shift, and go to state 55
    "'sq-string-literal'"    shift, and go to state 56
    "("                      shift, and go to state 57
    "{"                      shift, and go to state 30
    "}"                      shift, and go to state 193
    "*"                      shift, and go to state 59
    "+"                      shift, and go to state 60
    "-"                      shift, and go to state 61
    "^"                      shift, and go to state 62
    "&"                      shift, and go to state 63

    chainPrefixStmt  go to state 194
    constStmt        go to state 108
    letStmt          go to state 109
    varStmt          go to state 110
    setStmt          go to state 111
    discardStmt      go to state 112
    tid              go to state 64
    vid              go to state 65
    floatl           go to state 66
    expr             go to state 195
    parenExpr        go to state 69
    unitExpr         go to state 32
    vparenExpr       go to state 33
    vtupleExpr       go to state 34
    vstructExpr      go to state 35
    primaryExpr      go to state 70
    int_expr         go to state 71
    stringls         go to state 72
    ifThenElseExpr   go to state 73
    chainExpr        go to state 36
    vlambdaExpr      go to state 74
    postfixExpr      go to state 75
    tcall_exp        go to state 76
    vcall_exp        go to state 77
    dot_name_exp     go to state 78
    dotIxExpr        go to state 79
    unaryExpr        go to state 80
    unaryOp          go to state 81
    binaryExpr       go to state 82
    mulBinaryExpr    go to state 83
    addBinaryExpr    go to state 84
    cmpBinaryExpr    go to state 85
    eqBinaryExpr     go to state 86
    andBinaryExpr    go to state 87
    xorBinaryExpr    go to state 88
    orBinaryExpr     go to state 89
    type_query_exp   go to state 90
    typespec         go to state 91
    primaryTypespec  go to state 92
    parenTypespec    go to state 93
    tupleTypespec    go to state 94
    mod_prefix_tid   go to state 95
    mod_prefix       go to state 96
    fn_typespec      go to state 97
    postfixTypespec  go to state 98
    ttcall           go to state 99
    tdot             go to state 100
    unaryTypespec    go to state 101


State 116

  201 vstructExprField_cl: vstructExprField •

    $default  reduce using rule 201 (vstructExprField_cl)


State 117

   67 vstructExpr: "{" vstructExprField_cl • "}"
  202 vstructExprField_cl: vstructExprField_cl • "," vstructExprField

    ","  shift, and go to state 196
    "}"  shift, and go to state 197


State 118

   43 importStmt: "import" vid "from" • stringl "type" stringl

    "\"dq-string-literal\""  shift, and go to state 198
    "'sq-string-literal'"    shift, and go to state 199

    stringl  go to state 200


State 119

   44 extern_stmt: "extern" vid "from" • expr

    "<val_id>"               shift, and go to state 37
    "<TypeId>"               shift, and go to state 41
    "if"                     shift, and go to state 48
    "fn"                     shift, and go to state 49
    "Fn"                     shift, and go to state 50
    "not"                    shift, and go to state 51
    "42"                     shift, and go to state 52
    "0x2a"                   shift, and go to state 53
    "4.2"                    shift, and go to state 54
    "\"dq-string-literal\""  shift, and go to state 55
    "'sq-string-literal'"    shift, and go to state 56
    "("                      shift, and go to state 57
    "{"                      shift, and go to state 30
    "*"                      shift, and go to state 59
    "+"                      shift, and go to state 60
    "-"                      shift, and go to state 61
    "^"                      shift, and go to state 62
    "&"                      shift, and go to state 63

    tid              go to state 64
    vid              go to state 65
    floatl           go to state 66
    expr             go to state 201
    parenExpr        go to state 69
    unitExpr         go to state 32
    vparenExpr       go to state 33
    vtupleExpr       go to state 34
    vstructExpr      go to state 35
    primaryExpr      go to state 70
    int_expr         go to state 71
    stringls         go to state 72
    ifThenElseExpr   go to state 73
    chainExpr        go to state 36
    vlambdaExpr      go to state 74
    postfixExpr      go to state 75
    tcall_exp        go to state 76
    vcall_exp        go to state 77
    dot_name_exp     go to state 78
    dotIxExpr        go to state 79
    unaryExpr        go to state 80
    unaryOp          go to state 81
    binaryExpr       go to state 82
    mulBinaryExpr    go to state 83
    addBinaryExpr    go to state 84
    cmpBinaryExpr    go to state 85
    eqBinaryExpr     go to state 86
    andBinaryExpr    go to state 87
    xorBinaryExpr    go to state 88
    orBinaryExpr     go to state 89
    type_query_exp   go to state 90
    typespec         go to state 91
    primaryTypespec  go to state 92
    parenTypespec    go to state 93
    tupleTypespec    go to state 94
    mod_prefix_tid   go to state 95
    mod_prefix       go to state 96
    fn_typespec      go to state 97
    postfixTypespec  go to state 98
    ttcall           go to state 99
    tdot             go to state 100
    unaryTypespec    go to state 101


State 120

  191 vpattern: "(" • vpatternField_cl ")"
  192         | "(" • ")"

    "<val_id>"  shift, and go to state 37
    ")"         shift, and go to state 202

    vid               go to state 203
    vpatternField     go to state 204
    vpatternField_cl  go to state 205


State 121

  193 tpattern: "[" • tpatternField_cl "]"

    "<val_id>"  shift, and go to state 37
    "<TypeId>"  shift, and go to state 41

    tid               go to state 206
    vid               go to state 207
    tpatternField     go to state 208
    tpatternField_cl  go to state 209


State 122

  194 tpattern: "!" • "[" tpatternField_cl "]"

    "["  shift, and go to state 210


State 123

   26 fn_stmt: "fn" vid vpattern • "->" typespec "=" parenExpr
   28        | "fn" vid vpattern • "=" parenExpr

    "->"  shift, and go to state 211
    "="   shift, and go to state 212


State 124

  203 tpattern_seq: tpattern •

    $default  reduce using rule 203 (tpattern_seq)


State 125

   27 fn_stmt: "fn" vid tpattern_seq • vpattern "->" typespec "=" parenExpr
   29        | "fn" vid tpattern_seq • vpattern "=" parenExpr
  204 tpattern_seq: tpattern_seq • tpattern

    "("  shift, and go to state 120
    "["  shift, and go to state 121
    "!"  shift, and go to state 122

    vpattern  go to state 213
    tpattern  go to state 214


State 126

   30 type_stmt: "type" tid "=" • long_typespec

    "<val_id>"  shift, and go to state 37
    "<TypeId>"  shift, and go to state 41
    "Fn"        shift, and go to state 50
    "("         shift, and go to state 140
    "{"         shift, and go to state 215
    "&"         shift, and go to state 63

    tid              go to state 64
    vid              go to state 141
    primaryTypespec  go to state 92
    parenTypespec    go to state 93
    tupleTypespec    go to state 94
    mod_prefix_tid   go to state 95
    mod_prefix       go to state 96
    fn_typespec      go to state 97
    postfixTypespec  go to state 98
    ttcall           go to state 99
    tdot             go to state 100
    unaryTypespec    go to state 216
    long_typespec    go to state 217
    structTypespec   go to state 218


State 127

   31 type_stmt: "type" tid tpattern_seq • "=" long_typespec
  204 tpattern_seq: tpattern_seq • tpattern

    "["  shift, and go to state 121
    "="  shift, and go to state 219
    "!"  shift, and go to state 122

    tpattern  go to state 214


State 128

   33 enum_field_pl: "|" • unprefixed_enum_field_pl

    "<TypeId>"  shift, and go to state 41

    unprefixed_enum_field_pl  go to state 220
    enum_field                go to state 131
    tid                       go to state 132


State 129

   32 enum_stmt: "enum" tid enum_field_pl •

    $default  reduce using rule 32 (enum_stmt)


State 130

   34 enum_field_pl: unprefixed_enum_field_pl •
   36 unprefixed_enum_field_pl: unprefixed_enum_field_pl • "|" enum_field

    "|"  shift, and go to state 221

    $default  reduce using rule 34 (enum_field_pl)


State 131

   35 unprefixed_enum_field_pl: enum_field •

    $default  reduce using rule 35 (unprefixed_enum_field_pl)


State 132

   37 enum_field: tid •
   38           | tid • "(" ")"
   39           | tid • "(" typespec_cl1 ")"

    "("  shift, and go to state 222

    $default  reduce using rule 37 (enum_field)


State 133

   40 typeclass_stmt: "typeclass" tid "<" • tid typespec ">" "=" "{" expr_sl "}"
   41               | "typeclass" tid "<" • tid typespec ">" tpattern_seq "=" "{" expr_sl "}"

    "<TypeId>"  shift, and go to state 41

    tid  go to state 223


State 134

    7 moduleContent: moduleContent moduleContentStmt ";" •

    $default  reduce using rule 7 (moduleContent)


State 135

   81 ifThenElseExpr: "if" parenExpr • "then" parenExpr
   82               | "if" parenExpr • "then" parenExpr "else" primaryExpr

    "then"  shift, and go to state 224


State 136

   88 vlambdaExpr: "fn" vpattern • "=" parenExpr

    "="  shift, and go to state 225


State 137

  162 fn_typespec: "Fn" vpattern • primaryTypespec

    "<val_id>"  shift, and go to state 37
    "<TypeId>"  shift, and go to state 41
    "Fn"        shift, and go to state 50
    "("         shift, and go to state 140

    tid              go to state 64
    vid              go to state 141
    primaryTypespec  go to state 226
    parenTypespec    go to state 93
    tupleTypespec    go to state 94
    mod_prefix_tid   go to state 95
    mod_prefix       go to state 96
    fn_typespec      go to state 97


State 138

  139 type_query_exp: typespec • type_query_op typespec
  146 typespec_cl2: typespec • "," typespec
  156 parenTypespec: "(" typespec • ")"
  157 tupleTypespec: "(" typespec • "," ")"

    ","   shift, and go to state 227
    "::"  shift, and go to state 174
    ")"   shift, and go to state 228
    ":<"  shift, and go to state 175
    ">:"  shift, and go to state 176

    type_query_op  go to state 177


State 139

  147 typespec_cl2: typespec_cl2 • "," typespec
  158 tupleTypespec: "(" typespec_cl2 • ")"

    ","  shift, and go to state 229
    ")"  shift, and go to state 230


State 140

  156 parenTypespec: "(" • typespec ")"
  157 tupleTypespec: "(" • typespec "," ")"
  158              | "(" • typespec_cl2 ")"

    "<val_id>"  shift, and go to state 37
    "<TypeId>"  shift, and go to state 41
    "Fn"        shift, and go to state 50
    "("         shift, and go to state 140
    "&"         shift, and go to state 63

    tid              go to state 64
    vid              go to state 141
    typespec         go to state 231
    typespec_cl2     go to state 139
    primaryTypespec  go to state 92
    parenTypespec    go to state 93
    tupleTypespec    go to state 94
    mod_prefix_tid   go to state 95
    mod_prefix       go to state 96
    fn_typespec      go to state 97
    postfixTypespec  go to state 98
    ttcall           go to state 99
    tdot             go to state 100
    unaryTypespec    go to state 101


State 141

  160 mod_prefix: vid • "."

    "."  shift, and go to state 143


State 142

  169 unaryTypespec: "&" unaryTypespec •

    $default  reduce using rule 169 (unaryTypespec)


State 143

  160 mod_prefix: vid "." •

    $default  reduce using rule 160 (mod_prefix)


State 144

   53 expr_cl2: expr "," • expr
   65 vtupleExpr: "(" expr "," • ")"

    "<val_id>"               shift, and go to state 37
    "<TypeId>"               shift, and go to state 41
    "if"                     shift, and go to state 48
    "fn"                     shift, and go to state 49
    "Fn"                     shift, and go to state 50
    "not"                    shift, and go to state 51
    "42"                     shift, and go to state 52
    "0x2a"                   shift, and go to state 53
    "4.2"                    shift, and go to state 54
    "\"dq-string-literal\""  shift, and go to state 55
    "'sq-string-literal'"    shift, and go to state 56
    "("                      shift, and go to state 57
    ")"                      shift, and go to state 232
    "{"                      shift, and go to state 30
    "*"                      shift, and go to state 59
    "+"                      shift, and go to state 60
    "-"                      shift, and go to state 61
    "^"                      shift, and go to state 62
    "&"                      shift, and go to state 63

    tid              go to state 64
    vid              go to state 65
    floatl           go to state 66
    expr             go to state 233
    parenExpr        go to state 69
    unitExpr         go to state 32
    vparenExpr       go to state 33
    vtupleExpr       go to state 34
    vstructExpr      go to state 35
    primaryExpr      go to state 70
    int_expr         go to state 71
    stringls         go to state 72
    ifThenElseExpr   go to state 73
    chainExpr        go to state 36
    vlambdaExpr      go to state 74
    postfixExpr      go to state 75
    tcall_exp        go to state 76
    vcall_exp        go to state 77
    dot_name_exp     go to state 78
    dotIxExpr        go to state 79
    unaryExpr        go to state 80
    unaryOp          go to state 81
    binaryExpr       go to state 82
    mulBinaryExpr    go to state 83
    addBinaryExpr    go to state 84
    cmpBinaryExpr    go to state 85
    eqBinaryExpr     go to state 86
    andBinaryExpr    go to state 87
    xorBinaryExpr    go to state 88
    orBinaryExpr     go to state 89
    type_query_exp   go to state 90
    typespec         go to state 91
    primaryTypespec  go to state 92
    parenTypespec    go to state 93
    tupleTypespec    go to state 94
    mod_prefix_tid   go to state 95
    mod_prefix       go to state 96
    fn_typespec      go to state 97
    postfixTypespec  go to state 98
    ttcall           go to state 99
    tdot             go to state 100
    unaryTypespec    go to state 101


State 145

   64 vparenExpr: "(" expr ")" •

    $default  reduce using rule 64 (vparenExpr)


State 146

   54 expr_cl2: expr_cl2 "," • expr

    "<val_id>"               shift, and go to state 37
    "<TypeId>"               shift, and go to state 41
    "if"                     shift, and go to state 48
    "fn"                     shift, and go to state 49
    "Fn"                     shift, and go to state 50
    "not"                    shift, and go to state 51
    "42"                     shift, and go to state 52
    "0x2a"                   shift, and go to state 53
    "4.2"                    shift, and go to state 54
    "\"dq-string-literal\""  shift, and go to state 55
    "'sq-string-literal'"    shift, and go to state 56
    "("                      shift, and go to state 57
    "{"                      shift, and go to state 30
    "*"                      shift, and go to state 59
    "+"                      shift, and go to state 60
    "-"                      shift, and go to state 61
    "^"                      shift, and go to state 62
    "&"                      shift, and go to state 63

    tid              go to state 64
    vid              go to state 65
    floatl           go to state 66
    expr             go to state 234
    parenExpr        go to state 69
    unitExpr         go to state 32
    vparenExpr       go to state 33
    vtupleExpr       go to state 34
    vstructExpr      go to state 35
    primaryExpr      go to state 70
    int_expr         go to state 71
    stringls         go to state 72
    ifThenElseExpr   go to state 73
    chainExpr        go to state 36
    vlambdaExpr      go to state 74
    postfixExpr      go to state 75
    tcall_exp        go to state 76
    vcall_exp        go to state 77
    dot_name_exp     go to state 78
    dotIxExpr        go to state 79
    unaryExpr        go to state 80
    unaryOp          go to state 81
    binaryExpr       go to state 82
    mulBinaryExpr    go to state 83
    addBinaryExpr    go to state 84
    cmpBinaryExpr    go to state 85
    eqBinaryExpr     go to state 86
    andBinaryExpr    go to state 87
    xorBinaryExpr    go to state 88
    orBinaryExpr     go to state 89
    type_query_exp   go to state 90
    typespec         go to state 91
    primaryTypespec  go to state 92
    parenTypespec    go to state 93
    tupleTypespec    go to state 94
    mod_prefix_tid   go to state 95
    mod_prefix       go to state 96
    fn_typespec      go to state 97
    postfixTypespec  go to state 98
    ttcall           go to state 99
    tdot             go to state 100
    unaryTypespec    go to state 101


State 147

   66 vtupleExpr: "(" expr_cl2 ")" •

    $default  reduce using rule 66 (vtupleExpr)


State 148

   80 stringls: stringls "\"dq-string-literal\"" •

    $default  reduce using rule 80 (stringls)


State 149

   79 stringls: stringls "'sq-string-literal'" •

    $default  reduce using rule 79 (stringls)


State 150

   97 dot_name_exp: postfixExpr "." • "<val_id>"
   98             | postfixExpr "." • "<TypeId>"
  101 dotIxExpr: postfixExpr "." • int_expr
  102          | postfixExpr "." • parenExpr

    "<val_id>"  shift, and go to state 235
    "<TypeId>"  shift, and go to state 236
    "42"        shift, and go to state 52
    "0x2a"      shift, and go to state 53
    "("         shift, and go to state 29
    "{"         shift, and go to state 30

    parenExpr    go to state 237
    unitExpr     go to state 32
    vparenExpr   go to state 33
    vtupleExpr   go to state 34
    vstructExpr  go to state 35
    int_expr     go to state 238
    chainExpr    go to state 36


State 151

   95 vcall_exp: postfixExpr "(" • ")"
   96          | postfixExpr "(" • expr_cl1 ")"

    "<val_id>"               shift, and go to state 37
    "<TypeId>"               shift, and go to state 41
    "if"                     shift, and go to state 48
    "fn"                     shift, and go to state 49
    "Fn"                     shift, and go to state 50
    "not"                    shift, and go to state 51
    "42"                     shift, and go to state 52
    "0x2a"                   shift, and go to state 53
    "4.2"                    shift, and go to state 54
    "\"dq-string-literal\""  shift, and go to state 55
    "'sq-string-literal'"    shift, and go to state 56
    "("                      shift, and go to state 57
    ")"                      shift, and go to state 239
    "{"                      shift, and go to state 30
    "*"                      shift, and go to state 59
    "+"                      shift, and go to state 60
    "-"                      shift, and go to state 61
    "^"                      shift, and go to state 62
    "&"                      shift, and go to state 63

    tid              go to state 64
    vid              go to state 65
    floatl           go to state 66
    expr             go to state 240
    expr_cl1         go to state 241
    parenExpr        go to state 69
    unitExpr         go to state 32
    vparenExpr       go to state 33
    vtupleExpr       go to state 34
    vstructExpr      go to state 35
    primaryExpr      go to state 70
    int_expr         go to state 71
    stringls         go to state 72
    ifThenElseExpr   go to state 73
    chainExpr        go to state 36
    vlambdaExpr      go to state 74
    postfixExpr      go to state 75
    tcall_exp        go to state 76
    vcall_exp        go to state 77
    dot_name_exp     go to state 78
    dotIxExpr        go to state 79
    unaryExpr        go to state 80
    unaryOp          go to state 81
    binaryExpr       go to state 82
    mulBinaryExpr    go to state 83
    addBinaryExpr    go to state 84
    cmpBinaryExpr    go to state 85
    eqBinaryExpr     go to state 86
    andBinaryExpr    go to state 87
    xorBinaryExpr    go to state 88
    orBinaryExpr     go to state 89
    type_query_exp   go to state 90
    typespec         go to state 91
    primaryTypespec  go to state 92
    parenTypespec    go to state 93
    tupleTypespec    go to state 94
    mod_prefix_tid   go to state 95
    mod_prefix       go to state 96
    fn_typespec      go to state 97
    postfixTypespec  go to state 98
    ttcall           go to state 99
    tdot             go to state 100
    unaryTypespec    go to state 101


State 152

   94 tcall_exp: postfixExpr "[" • vtarg_cl "]"

    "<val_id>"               shift, and go to state 37
    "<TypeId>"               shift, and go to state 41
    "if"                     shift, and go to state 48
    "fn"                     shift, and go to state 49
    "Fn"                     shift, and go to state 50
    "not"                    shift, and go to state 51
    "42"                     shift, and go to state 52
    "0x2a"                   shift, and go to state 53
    "4.2"                    shift, and go to state 54
    "\"dq-string-literal\""  shift, and go to state 55
    "'sq-string-literal'"    shift, and go to state 56
    "("                      shift, and go to state 57
    "{"                      shift, and go to state 30
    "*"                      shift, and go to state 59
    "+"                      shift, and go to state 60
    "-"                      shift, and go to state 61
    "^"                      shift, and go to state 62
    "&"                      shift, and go to state 63

    tid              go to state 64
    vid              go to state 65
    floatl           go to state 66
    expr             go to state 242
    parenExpr        go to state 69
    unitExpr         go to state 32
    vparenExpr       go to state 33
    vtupleExpr       go to state 34
    vstructExpr      go to state 35
    primaryExpr      go to state 70
    int_expr         go to state 71
    stringls         go to state 72
    ifThenElseExpr   go to state 73
    chainExpr        go to state 36
    vlambdaExpr      go to state 74
    postfixExpr      go to state 75
    tcall_exp        go to state 76
    vcall_exp        go to state 77
    dot_name_exp     go to state 78
    dotIxExpr        go to state 79
    unaryExpr        go to state 80
    unaryOp          go to state 81
    binaryExpr       go to state 82
    mulBinaryExpr    go to state 83
    addBinaryExpr    go to state 84
    cmpBinaryExpr    go to state 85
    eqBinaryExpr     go to state 86
    andBinaryExpr    go to state 87
    xorBinaryExpr    go to state 88
    orBinaryExpr     go to state 89
    type_query_exp   go to state 90
    typespec         go to state 243
    primaryTypespec  go to state 92
    parenTypespec    go to state 93
    tupleTypespec    go to state 94
    mod_prefix_tid   go to state 95
    mod_prefix       go to state 96
    fn_typespec      go to state 97
    postfixTypespec  go to state 98
    ttcall           go to state 99
    tdot             go to state 100
    unaryTypespec    go to state 101
    vtarg            go to state 244
    vtarg_cl         go to state 245


State 153

   99 dot_name_exp: postfixExpr "->" • "<val_id>"
  100             | postfixExpr "->" • "<TypeId>"
  103 dotIxExpr: postfixExpr "->" • int_expr
  104          | postfixExpr "->" • parenExpr

    "<val_id>"  shift, and go to state 246
    "<TypeId>"  shift, and go to state 247
    "42"        shift, and go to state 52
    "0x2a"      shift, and go to state 53
    "("         shift, and go to state 29
    "{"         shift, and go to state 30

    parenExpr    go to state 248
    unitExpr     go to state 32
    vparenExpr   go to state 33
    vtupleExpr   go to state 34
    vstructExpr  go to state 35
    int_expr     go to state 249
    chainExpr    go to state 36


State 154

   69 primaryExpr: vid •

    $default  reduce using rule 69 (primaryExpr)


State 155

  106 unaryExpr: unaryOp unaryExpr •

    $default  reduce using rule 106 (unaryExpr)


State 156

  113 mulBinaryOp: "*" •

    $default  reduce using rule 113 (mulBinaryOp)


State 157

  114 mulBinaryOp: "/" •

    $default  reduce using rule 114 (mulBinaryOp)


State 158

  115 mulBinaryOp: "%" •

    $default  reduce using rule 115 (mulBinaryOp)


State 159

  117 mulBinaryExpr: mulBinaryExpr mulBinaryOp • unaryExpr

    "<val_id>"               shift, and go to state 37
    "if"                     shift, and go to state 48
    "fn"                     shift, and go to state 49
    "not"                    shift, and go to state 51
    "42"                     shift, and go to state 52
    "0x2a"                   shift, and go to state 53
    "4.2"                    shift, and go to state 54
    "\"dq-string-literal\""  shift, and go to state 55
    "'sq-string-literal'"    shift, and go to state 56
    "("                      shift, and go to state 29
    "{"                      shift, and go to state 30
    "*"                      shift, and go to state 59
    "+"                      shift, and go to state 60
    "-"                      shift, and go to state 61
    "^"                      shift, and go to state 62

    vid             go to state 154
    floatl          go to state 66
    parenExpr       go to state 69
    unitExpr        go to state 32
    vparenExpr      go to state 33
    vtupleExpr      go to state 34
    vstructExpr     go to state 35
    primaryExpr     go to state 70
    int_expr        go to state 71
    stringls        go to state 72
    ifThenElseExpr  go to state 73
    chainExpr       go to state 36
    vlambdaExpr     go to state 74
    postfixExpr     go to state 75
    tcall_exp       go to state 76
    vcall_exp       go to state 77
    dot_name_exp    go to state 78
    dotIxExpr       go to state 79
    unaryExpr       go to state 250
    unaryOp         go to state 81


State 160

  118 addBinaryOp: "+" •

    $default  reduce using rule 118 (addBinaryOp)


State 161

  119 addBinaryOp: "-" •

    $default  reduce using rule 119 (addBinaryOp)


State 162

  121 addBinaryExpr: addBinaryExpr addBinaryOp • mulBinaryExpr

    "<val_id>"               shift, and go to state 37
    "if"                     shift, and go to state 48
    "fn"                     shift, and go to state 49
    "not"                    shift, and go to state 51
    "42"                     shift, and go to state 52
    "0x2a"                   shift, and go to state 53
    "4.2"                    shift, and go to state 54
    "\"dq-string-literal\""  shift, and go to state 55
    "'sq-string-literal'"    shift, and go to state 56
    "("                      shift, and go to state 29
    "{"                      shift, and go to state 30
    "*"                      shift, and go to state 59
    "+"                      shift, and go to state 60
    "-"                      shift, and go to state 61
    "^"                      shift, and go to state 62

    vid             go to state 154
    floatl          go to state 66
    parenExpr       go to state 69
    unitExpr        go to state 32
    vparenExpr      go to state 33
    vtupleExpr      go to state 34
    vstructExpr     go to state 35
    primaryExpr     go to state 70
    int_expr        go to state 71
    stringls        go to state 72
    ifThenElseExpr  go to state 73
    chainExpr       go to state 36
    vlambdaExpr     go to state 74
    postfixExpr     go to state 75
    tcall_exp       go to state 76
    vcall_exp       go to state 77
    dot_name_exp    go to state 78
    dotIxExpr       go to state 79
    unaryExpr       go to state 80
    unaryOp         go to state 81
    mulBinaryExpr   go to state 251


State 163

  122 cmpBinaryOp: "<" •

    $default  reduce using rule 122 (cmpBinaryOp)


State 164

  123 cmpBinaryOp: "<=" •

    $default  reduce using rule 123 (cmpBinaryOp)


State 165

  124 cmpBinaryOp: ">" •

    $default  reduce using rule 124 (cmpBinaryOp)


State 166

  125 cmpBinaryOp: ">=" •

    $default  reduce using rule 125 (cmpBinaryOp)


State 167

  127 cmpBinaryExpr: cmpBinaryExpr cmpBinaryOp • addBinaryExpr

    "<val_id>"               shift, and go to state 37
    "if"                     shift, and go to state 48
    "fn"                     shift, and go to state 49
    "not"                    shift, and go to state 51
    "42"                     shift, and go to state 52
    "0x2a"                   shift, and go to state 53
    "4.2"                    shift, and go to state 54
    "\"dq-string-literal\""  shift, and go to state 55
    "'sq-string-literal'"    shift, and go to state 56
    "("                      shift, and go to state 29
    "{"                      shift, and go to state 30
    "*"                      shift, and go to state 59
    "+"                      shift, and go to state 60
    "-"                      shift, and go to state 61
    "^"                      shift, and go to state 62

    vid             go to state 154
    floatl          go to state 66
    parenExpr       go to state 69
    unitExpr        go to state 32
    vparenExpr      go to state 33
    vtupleExpr      go to state 34
    vstructExpr     go to state 35
    primaryExpr     go to state 70
    int_expr        go to state 71
    stringls        go to state 72
    ifThenElseExpr  go to state 73
    chainExpr       go to state 36
    vlambdaExpr     go to state 74
    postfixExpr     go to state 75
    tcall_exp       go to state 76
    vcall_exp       go to state 77
    dot_name_exp    go to state 78
    dotIxExpr       go to state 79
    unaryExpr       go to state 80
    unaryOp         go to state 81
    mulBinaryExpr   go to state 83
    addBinaryExpr   go to state 252


State 168

  128 eqBinaryOp: "==" •

    $default  reduce using rule 128 (eqBinaryOp)


State 169

  129 eqBinaryOp: "!=" •

    $default  reduce using rule 129 (eqBinaryOp)


State 170

  131 eqBinaryExpr: eqBinaryExpr eqBinaryOp • cmpBinaryExpr

    "<val_id>"               shift, and go to state 37
    "if"                     shift, and go to state 48
    "fn"                     shift, and go to state 49
    "not"                    shift, and go to state 51
    "42"                     shift, and go to state 52
    "0x2a"                   shift, and go to state 53
    "4.2"                    shift, and go to state 54
    "\"dq-string-literal\""  shift, and go to state 55
    "'sq-string-literal'"    shift, and go to state 56
    "("                      shift, and go to state 29
    "{"                      shift, and go to state 30
    "*"                      shift, and go to state 59
    "+"                      shift, and go to state 60
    "-"                      shift, and go to state 61
    "^"                      shift, and go to state 62

    vid             go to state 154
    floatl          go to state 66
    parenExpr       go to state 69
    unitExpr        go to state 32
    vparenExpr      go to state 33
    vtupleExpr      go to state 34
    vstructExpr     go to state 35
    primaryExpr     go to state 70
    int_expr        go to state 71
    stringls        go to state 72
    ifThenElseExpr  go to state 73
    chainExpr       go to state 36
    vlambdaExpr     go to state 74
    postfixExpr     go to state 75
    tcall_exp       go to state 76
    vcall_exp       go to state 77
    dot_name_exp    go to state 78
    dotIxExpr       go to state 79
    unaryExpr       go to state 80
    unaryOp         go to state 81
    mulBinaryExpr   go to state 83
    addBinaryExpr   go to state 84
    cmpBinaryExpr   go to state 253


State 171

  133 andBinaryExpr: andBinaryExpr "and" • eqBinaryExpr

    "<val_id>"               shift, and go to state 37
    "if"                     shift, and go to state 48
    "fn"                     shift, and go to state 49
    "not"                    shift, and go to state 51
    "42"                     shift, and go to state 52
    "0x2a"                   shift, and go to state 53
    "4.2"                    shift, and go to state 54
    "\"dq-string-literal\""  shift, and go to state 55
    "'sq-string-literal'"    shift, and go to state 56
    "("                      shift, and go to state 29
    "{"                      shift, and go to state 30
    "*"                      shift, and go to state 59
    "+"                      shift, and go to state 60
    "-"                      shift, and go to state 61
    "^"                      shift, and go to state 62

    vid             go to state 154
    floatl          go to state 66
    parenExpr       go to state 69
    unitExpr        go to state 32
    vparenExpr      go to state 33
    vtupleExpr      go to state 34
    vstructExpr     go to state 35
    primaryExpr     go to state 70
    int_expr        go to state 71
    stringls        go to state 72
    ifThenElseExpr  go to state 73
    chainExpr       go to state 36
    vlambdaExpr     go to state 74
    postfixExpr     go to state 75
    tcall_exp       go to state 76
    vcall_exp       go to state 77
    dot_name_exp    go to state 78
    dotIxExpr       go to state 79
    unaryExpr       go to state 80
    unaryOp         go to state 81
    mulBinaryExpr   go to state 83
    addBinaryExpr   go to state 84
    cmpBinaryExpr   go to state 85
    eqBinaryExpr    go to state 254


State 172

  135 xorBinaryExpr: xorBinaryExpr "xor" • andBinaryExpr

    "<val_id>"               shift, and go to state 37
    "if"                     shift, and go to state 48
    "fn"                     shift, and go to state 49
    "not"                    shift, and go to state 51
    "42"                     shift, and go to state 52
    "0x2a"                   shift, and go to state 53
    "4.2"                    shift, and go to state 54
    "\"dq-string-literal\""  shift, and go to state 55
    "'sq-string-literal'"    shift, and go to state 56
    "("                      shift, and go to state 29
    "{"                      shift, and go to state 30
    "*"                      shift, and go to state 59
    "+"                      shift, and go to state 60
    "-"                      shift, and go to state 61
    "^"                      shift, and go to state 62

    vid             go to state 154
    floatl          go to state 66
    parenExpr       go to state 69
    unitExpr        go to state 32
    vparenExpr      go to state 33
    vtupleExpr      go to state 34
    vstructExpr     go to state 35
    primaryExpr     go to state 70
    int_expr        go to state 71
    stringls        go to state 72
    ifThenElseExpr  go to state 73
    chainExpr       go to state 36
    vlambdaExpr     go to state 74
    postfixExpr     go to state 75
    tcall_exp       go to state 76
    vcall_exp       go to state 77
    dot_name_exp    go to state 78
    dotIxExpr       go to state 79
    unaryExpr       go to state 80
    unaryOp         go to state 81
    mulBinaryExpr   go to state 83
    addBinaryExpr   go to state 84
    cmpBinaryExpr   go to state 85
    eqBinaryExpr    go to state 86
    andBinaryExpr   go to state 255


State 173

  137 orBinaryExpr: orBinaryExpr "or" • xorBinaryExpr

    "<val_id>"               shift, and go to state 37
    "if"                     shift, and go to state 48
    "fn"                     shift, and go to state 49
    "not"                    shift, and go to state 51
    "42"                     shift, and go to state 52
    "0x2a"                   shift, and go to state 53
    "4.2"                    shift, and go to state 54
    "\"dq-string-literal\""  shift, and go to state 55
    "'sq-string-literal'"    shift, and go to state 56
    "("                      shift, and go to state 29
    "{"                      shift, and go to state 30
    "*"                      shift, and go to state 59
    "+"                      shift, and go to state 60
    "-"                      shift, and go to state 61
    "^"                      shift, and go to state 62

    vid             go to state 154
    floatl          go to state 66
    parenExpr       go to state 69
    unitExpr        go to state 32
    vparenExpr      go to state 33
    vtupleExpr      go to state 34
    vstructExpr     go to state 35
    primaryExpr     go to state 70
    int_expr        go to state 71
    stringls        go to state 72
    ifThenElseExpr  go to state 73
    chainExpr       go to state 36
    vlambdaExpr     go to state 74
    postfixExpr     go to state 75
    tcall_exp       go to state 76
    vcall_exp       go to state 77
    dot_name_exp    go to state 78
    dotIxExpr       go to state 79
    unaryExpr       go to state 80
    unaryOp         go to state 81
    mulBinaryExpr   go to state 83
    addBinaryExpr   go to state 84
    cmpBinaryExpr   go to state 85
    eqBinaryExpr    go to state 86
    andBinaryExpr   go to state 87
    xorBinaryExpr   go to state 256


State 174

  142 type_query_op: "::" •

    $default  reduce using rule 142 (type_query_op)


State 175

  140 type_query_op: ":<" •

    $default  reduce using rule 140 (type_query_op)


State 176

  141 type_query_op: ">:" •

    $default  reduce using rule 141 (type_query_op)


State 177

  139 type_query_exp: typespec type_query_op • typespec

    "<val_id>"  shift, and go to state 37
    "<TypeId>"  shift, and go to state 41
    "Fn"        shift, and go to state 50
    "("         shift, and go to state 140
    "&"         shift, and go to state 63

    tid              go to state 64
    vid              go to state 141
    typespec         go to state 257
    primaryTypespec  go to state 92
    parenTypespec    go to state 93
    tupleTypespec    go to state 94
    mod_prefix_tid   go to state 95
    mod_prefix       go to state 96
    fn_typespec      go to state 97
    postfixTypespec  go to state 98
    ttcall           go to state 99
    tdot             go to state 100
    unaryTypespec    go to state 101


State 178

  159 mod_prefix_tid: mod_prefix tid •

    $default  reduce using rule 159 (mod_prefix_tid)


State 179

  161 mod_prefix: mod_prefix vid • "."

    "."  shift, and go to state 258


State 180

  167 tdot: postfixTypespec "." • "<val_id>"

    "<val_id>"  shift, and go to state 259


State 181

  166 ttcall: postfixTypespec "[" • ttarg_cl "]"

    "<val_id>"               shift, and go to state 37
    "<TypeId>"               shift, and go to state 41
    "if"                     shift, and go to state 48
    "fn"                     shift, and go to state 49
    "Fn"                     shift, and go to state 50
    "not"                    shift, and go to state 51
    "42"                     shift, and go to state 52
    "0x2a"                   shift, and go to state 53
    "4.2"                    shift, and go to state 54
    "\"dq-string-literal\""  shift, and go to state 55
    "'sq-string-literal'"    shift, and go to state 56
    "("                      shift, and go to state 57
    "{"                      shift, and go to state 30
    "*"                      shift, and go to state 59
    "+"                      shift, and go to state 60
    "-"                      shift, and go to state 61
    "^"                      shift, and go to state 62
    "&"                      shift, and go to state 63

    tid              go to state 64
    vid              go to state 65
    floatl           go to state 66
    expr             go to state 260
    parenExpr        go to state 69
    unitExpr         go to state 32
    vparenExpr       go to state 33
    vtupleExpr       go to state 34
    vstructExpr      go to state 35
    primaryExpr      go to state 70
    int_expr         go to state 71
    stringls         go to state 72
    ifThenElseExpr   go to state 73
    chainExpr        go to state 36
    vlambdaExpr      go to state 74
    postfixExpr      go to state 75
    tcall_exp        go to state 76
    vcall_exp        go to state 77
    dot_name_exp     go to state 78
    dotIxExpr        go to state 79
    unaryExpr        go to state 80
    unaryOp          go to state 81
    binaryExpr       go to state 82
    mulBinaryExpr    go to state 83
    addBinaryExpr    go to state 84
    cmpBinaryExpr    go to state 85
    eqBinaryExpr     go to state 86
    andBinaryExpr    go to state 87
    xorBinaryExpr    go to state 88
    orBinaryExpr     go to state 89
    type_query_exp   go to state 90
    typespec         go to state 261
    primaryTypespec  go to state 92
    parenTypespec    go to state 93
    tupleTypespec    go to state 94
    mod_prefix_tid   go to state 95
    mod_prefix       go to state 96
    fn_typespec      go to state 97
    postfixTypespec  go to state 98
    ttcall           go to state 99
    tdot             go to state 100
    unaryTypespec    go to state 101
    ttarg            go to state 262
    ttarg_cl         go to state 263


State 182

  187 lpattern: "(" • lpatternField_cl ")"
  188         | "(" • ")"

    "<val_id>"  shift, and go to state 37
    ")"         shift, and go to state 264

    vid               go to state 183
    lpatternField     go to state 265
    lpatternField_cl  go to state 266


State 183

  183 lpatternField: vid • typespec
  184              | vid •

    "<val_id>"  shift, and go to state 37
    "<TypeId>"  shift, and go to state 41
    "Fn"        shift, and go to state 50
    "("         shift, and go to state 140
    "&"         shift, and go to state 63

    $default  reduce using rule 184 (lpatternField)

    tid              go to state 64
    vid              go to state 141
    typespec         go to state 267
    primaryTypespec  go to state 92
    parenTypespec    go to state 93
    tupleTypespec    go to state 94
    mod_prefix_tid   go to state 95
    mod_prefix       go to state 96
    fn_typespec      go to state 97
    postfixTypespec  go to state 98
    ttcall           go to state 99
    tdot             go to state 100
    unaryTypespec    go to state 101


State 184

  189 lpattern_naked: lpatternField •

    $default  reduce using rule 189 (lpattern_naked)


State 185

  190 lpattern_naked: lpattern •

    $default  reduce using rule 190 (lpattern_naked)


State 186

   13 constStmt: "const" lpattern_naked • "=" expr

    "="  shift, and go to state 268


State 187

   14 letStmt: "let" lpattern_naked • "=" expr

    "="  shift, and go to state 269


State 188

   15 varStmt: "var" lpattern_naked • "=" expr

    "="  shift, and go to state 270


State 189

   16 setStmt: "set" expr • "=" expr

    "="  shift, and go to state 271


State 190

   86 chainPrefix: chainPrefixStmt ";" •

    $default  reduce using rule 86 (chainPrefix)


State 191

  181 vstructExprField: vid "=" • expr

    "<val_id>"               shift, and go to state 37
    "<TypeId>"               shift, and go to state 41
    "if"                     shift, and go to state 48
    "fn"                     shift, and go to state 49
    "Fn"                     shift, and go to state 50
    "not"                    shift, and go to state 51
    "42"                     shift, and go to state 52
    "0x2a"                   shift, and go to state 53
    "4.2"                    shift, and go to state 54
    "\"dq-string-literal\""  shift, and go to state 55
    "'sq-string-literal'"    shift, and go to state 56
    "("                      shift, and go to state 57
    "{"                      shift, and go to state 30
    "*"                      shift, and go to state 59
    "+"                      shift, and go to state 60
    "-"                      shift, and go to state 61
    "^"                      shift, and go to state 62
    "&"                      shift, and go to state 63

    tid              go to state 64
    vid              go to state 65
    floatl           go to state 66
    expr             go to state 272
    parenExpr        go to state 69
    unitExpr         go to state 32
    vparenExpr       go to state 33
    vtupleExpr       go to state 34
    vstructExpr      go to state 35
    primaryExpr      go to state 70
    int_expr         go to state 71
    stringls         go to state 72
    ifThenElseExpr   go to state 73
    chainExpr        go to state 36
    vlambdaExpr      go to state 74
    postfixExpr      go to state 75
    tcall_exp        go to state 76
    vcall_exp        go to state 77
    dot_name_exp     go to state 78
    dotIxExpr        go to state 79
    unaryExpr        go to state 80
    unaryOp          go to state 81
    binaryExpr       go to state 82
    mulBinaryExpr    go to state 83
    addBinaryExpr    go to state 84
    cmpBinaryExpr    go to state 85
    eqBinaryExpr     go to state 86
    andBinaryExpr    go to state 87
    xorBinaryExpr    go to state 88
    orBinaryExpr     go to state 89
    type_query_exp   go to state 90
    typespec         go to state 91
    primaryTypespec  go to state 92
    parenTypespec    go to state 93
    tupleTypespec    go to state 94
    mod_prefix_tid   go to state 95
    mod_prefix       go to state 96
    fn_typespec      go to state 97
    postfixTypespec  go to state 98
    ttcall           go to state 99
    tdot             go to state 100
    unaryTypespec    go to state 101


State 192

   83 chainExpr: "{" expr "}" •

    $default  reduce using rule 83 (chainExpr)


State 193

   84 chainExpr: "{" chainPrefix "}" •

    $default  reduce using rule 84 (chainExpr)


State 194

   87 chainPrefix: chainPrefix chainPrefixStmt • ";"

    ";"  shift, and go to state 273


State 195

   17 discardStmt: expr •
   85 chainExpr: "{" chainPrefix expr • "}"

    "}"  shift, and go to state 274

    $default  reduce using rule 17 (discardStmt)


State 196

  202 vstructExprField_cl: vstructExprField_cl "," • vstructExprField

    "<val_id>"  shift, and go to state 37

    vid               go to state 275
    vstructExprField  go to state 276


State 197

   67 vstructExpr: "{" vstructExprField_cl "}" •

    $default  reduce using rule 67 (vstructExpr)


State 198

   49 stringl: "\"dq-string-literal\"" •

    $default  reduce using rule 49 (stringl)


State 199

   48 stringl: "'sq-string-literal'" •

    $default  reduce using rule 48 (stringl)


State 200

   43 importStmt: "import" vid "from" stringl • "type" stringl

    "type"  shift, and go to state 277


State 201

   44 extern_stmt: "extern" vid "from" expr •

    $default  reduce using rule 44 (extern_stmt)


State 202

  192 vpattern: "(" ")" •

    $default  reduce using rule 192 (vpattern)


State 203

  182 vpatternField: vid • typespec

    "<val_id>"  shift, and go to state 37
    "<TypeId>"  shift, and go to state 41
    "Fn"        shift, and go to state 50
    "("         shift, and go to state 140
    "&"         shift, and go to state 63

    tid              go to state 64
    vid              go to state 141
    typespec         go to state 278
    primaryTypespec  go to state 92
    parenTypespec    go to state 93
    tupleTypespec    go to state 94
    mod_prefix_tid   go to state 95
    mod_prefix       go to state 96
    fn_typespec      go to state 97
    postfixTypespec  go to state 98
    ttcall           go to state 99
    tdot             go to state 100
    unaryTypespec    go to state 101


State 204

  195 vpatternField_cl: vpatternField •

    $default  reduce using rule 195 (vpatternField_cl)


State 205

  191 vpattern: "(" vpatternField_cl • ")"
  196 vpatternField_cl: vpatternField_cl • "," vpatternField

    ","  shift, and go to state 279
    ")"  shift, and go to state 280


State 206

  186 tpatternField: tid • typespec

    "<val_id>"  shift, and go to state 37
    "<TypeId>"  shift, and go to state 41
    "Fn"        shift, and go to state 50
    "("         shift, and go to state 140
    "&"         shift, and go to state 63

    tid              go to state 64
    vid              go to state 141
    typespec         go to state 281
    primaryTypespec  go to state 92
    parenTypespec    go to state 93
    tupleTypespec    go to state 94
    mod_prefix_tid   go to state 95
    mod_prefix       go to state 96
    fn_typespec      go to state 97
    postfixTypespec  go to state 98
    ttcall           go to state 99
    tdot             go to state 100
    unaryTypespec    go to state 101


State 207

  185 tpatternField: vid • typespec

    "<val_id>"  shift, and go to state 37
    "<TypeId>"  shift, and go to state 41
    "Fn"        shift, and go to state 50
    "("         shift, and go to state 140
    "&"         shift, and go to state 63

    tid              go to state 64
    vid              go to state 141
    typespec         go to state 282
    primaryTypespec  go to state 92
    parenTypespec    go to state 93
    tupleTypespec    go to state 94
    mod_prefix_tid   go to state 95
    mod_prefix       go to state 96
    fn_typespec      go to state 97
    postfixTypespec  go to state 98
    ttcall           go to state 99
    tdot             go to state 100
    unaryTypespec    go to state 101


State 208

  199 tpatternField_cl: tpatternField •

    $default  reduce using rule 199 (tpatternField_cl)


State 209

  193 tpattern: "[" tpatternField_cl • "]"
  200 tpatternField_cl: tpatternField_cl • "," tpatternField

    ","  shift, and go to state 283
    "]"  shift, and go to state 284


State 210

  194 tpattern: "!" "[" • tpatternField_cl "]"

    "<val_id>"  shift, and go to state 37
    "<TypeId>"  shift, and go to state 41

    tid               go to state 206
    vid               go to state 207
    tpatternField     go to state 208
    tpatternField_cl  go to state 285


State 211

   26 fn_stmt: "fn" vid vpattern "->" • typespec "=" parenExpr

    "<val_id>"  shift, and go to state 37
    "<TypeId>"  shift, and go to state 41
    "Fn"        shift, and go to state 50
    "("         shift, and go to state 140
    "&"         shift, and go to state 63

    tid              go to state 64
    vid              go to state 141
    typespec         go to state 286
    primaryTypespec  go to state 92
    parenTypespec    go to state 93
    tupleTypespec    go to state 94
    mod_prefix_tid   go to state 95
    mod_prefix       go to state 96
    fn_typespec      go to state 97
    postfixTypespec  go to state 98
    ttcall           go to state 99
    tdot             go to state 100
    unaryTypespec    go to state 101


State 212

   28 fn_stmt: "fn" vid vpattern "=" • parenExpr

    "("  shift, and go to state 29
    "{"  shift, and go to state 30

    parenExpr    go to state 287
    unitExpr     go to state 32
    vparenExpr   go to state 33
    vtupleExpr   go to state 34
    vstructExpr  go to state 35
    chainExpr    go to state 36


State 213

   27 fn_stmt: "fn" vid tpattern_seq vpattern • "->" typespec "=" parenExpr
   29        | "fn" vid tpattern_seq vpattern • "=" parenExpr

    "->"  shift, and go to state 288
    "="   shift, and go to state 289


State 214

  204 tpattern_seq: tpattern_seq tpattern •

    $default  reduce using rule 204 (tpattern_seq)


State 215

  172 structTypespec: "{" • structTypespecField_cl "}"

    "<val_id>"  shift, and go to state 37

    vid                     go to state 290
    structTypespecField     go to state 291
    structTypespecField_cl  go to state 292


State 216

  170 long_typespec: unaryTypespec •

    $default  reduce using rule 170 (long_typespec)


State 217

   30 type_stmt: "type" tid "=" long_typespec •

    $default  reduce using rule 30 (type_stmt)


State 218

  171 long_typespec: structTypespec •

    $default  reduce using rule 171 (long_typespec)


State 219

   31 type_stmt: "type" tid tpattern_seq "=" • long_typespec

    "<val_id>"  shift, and go to state 37
    "<TypeId>"  shift, and go to state 41
    "Fn"        shift, and go to state 50
    "("         shift, and go to state 140
    "{"         shift, and go to state 215
    "&"         shift, and go to state 63

    tid              go to state 64
    vid              go to state 141
    primaryTypespec  go to state 92
    parenTypespec    go to state 93
    tupleTypespec    go to state 94
    mod_prefix_tid   go to state 95
    mod_prefix       go to state 96
    fn_typespec      go to state 97
    postfixTypespec  go to state 98
    ttcall           go to state 99
    tdot             go to state 100
    unaryTypespec    go to state 216
    long_typespec    go to state 293
    structTypespec   go to state 218


State 220

   33 enum_field_pl: "|" unprefixed_enum_field_pl •
   36 unprefixed_enum_field_pl: unprefixed_enum_field_pl • "|" enum_field

    "|"  shift, and go to state 221

    $default  reduce using rule 33 (enum_field_pl)


State 221

   36 unprefixed_enum_field_pl: unprefixed_enum_field_pl "|" • enum_field

    "<TypeId>"  shift, and go to state 41

    enum_field  go to state 294
    tid         go to state 132


State 222

   38 enum_field: tid "(" • ")"
   39           | tid "(" • typespec_cl1 ")"

    "<val_id>"  shift, and go to state 37
    "<TypeId>"  shift, and go to state 41
    "Fn"        shift, and go to state 50
    "("         shift, and go to state 140
    ")"         shift, and go to state 295
    "&"         shift, and go to state 63

    tid              go to state 64
    vid              go to state 141
    typespec         go to state 296
    typespec_cl1     go to state 297
    primaryTypespec  go to state 92
    parenTypespec    go to state 93
    tupleTypespec    go to state 94
    mod_prefix_tid   go to state 95
    mod_prefix       go to state 96
    fn_typespec      go to state 97
    postfixTypespec  go to state 98
    ttcall           go to state 99
    tdot             go to state 100
    unaryTypespec    go to state 101


State 223

   40 typeclass_stmt: "typeclass" tid "<" tid • typespec ">" "=" "{" expr_sl "}"
   41               | "typeclass" tid "<" tid • typespec ">" tpattern_seq "=" "{" expr_sl "}"

    "<val_id>"  shift, and go to state 37
    "<TypeId>"  shift, and go to state 41
    "Fn"        shift, and go to state 50
    "("         shift, and go to state 140
    "&"         shift, and go to state 63

    tid              go to state 64
    vid              go to state 141
    typespec         go to state 298
    primaryTypespec  go to state 92
    parenTypespec    go to state 93
    tupleTypespec    go to state 94
    mod_prefix_tid   go to state 95
    mod_prefix       go to state 96
    fn_typespec      go to state 97
    postfixTypespec  go to state 98
    ttcall           go to state 99
    tdot             go to state 100
    unaryTypespec    go to state 101


State 224

   81 ifThenElseExpr: "if" parenExpr "then" • parenExpr
   82               | "if" parenExpr "then" • parenExpr "else" primaryExpr

    "("  shift, and go to state 29
    "{"  shift, and go to state 30

    parenExpr    go to state 299
    unitExpr     go to state 32
    vparenExpr   go to state 33
    vtupleExpr   go to state 34
    vstructExpr  go to state 35
    chainExpr    go to state 36


State 225

   88 vlambdaExpr: "fn" vpattern "=" • parenExpr

    "("  shift, and go to state 29
    "{"  shift, and go to state 30

    parenExpr    go to state 300
    unitExpr     go to state 32
    vparenExpr   go to state 33
    vtupleExpr   go to state 34
    vstructExpr  go to state 35
    chainExpr    go to state 36


State 226

  162 fn_typespec: "Fn" vpattern primaryTypespec •

    $default  reduce using rule 162 (fn_typespec)


State 227

  146 typespec_cl2: typespec "," • typespec
  157 tupleTypespec: "(" typespec "," • ")"

    "<val_id>"  shift, and go to state 37
    "<TypeId>"  shift, and go to state 41
    "Fn"        shift, and go to state 50
    "("         shift, and go to state 140
    ")"         shift, and go to state 301
    "&"         shift, and go to state 63

    tid              go to state 64
    vid              go to state 141
    typespec         go to state 302
    primaryTypespec  go to state 92
    parenTypespec    go to state 93
    tupleTypespec    go to state 94
    mod_prefix_tid   go to state 95
    mod_prefix       go to state 96
    fn_typespec      go to state 97
    postfixTypespec  go to state 98
    ttcall           go to state 99
    tdot             go to state 100
    unaryTypespec    go to state 101


State 228

  156 parenTypespec: "(" typespec ")" •

    $default  reduce using rule 156 (parenTypespec)


State 229

  147 typespec_cl2: typespec_cl2 "," • typespec

    "<val_id>"  shift, and go to state 37
    "<TypeId>"  shift, and go to state 41
    "Fn"        shift, and go to state 50
    "("         shift, and go to state 140
    "&"         shift, and go to state 63

    tid              go to state 64
    vid              go to state 141
    typespec         go to state 303
    primaryTypespec  go to state 92
    parenTypespec    go to state 93
    tupleTypespec    go to state 94
    mod_prefix_tid   go to state 95
    mod_prefix       go to state 96
    fn_typespec      go to state 97
    postfixTypespec  go to state 98
    ttcall           go to state 99
    tdot             go to state 100
    unaryTypespec    go to state 101


State 230

  158 tupleTypespec: "(" typespec_cl2 ")" •

    $default  reduce using rule 158 (tupleTypespec)


State 231

  146 typespec_cl2: typespec • "," typespec
  156 parenTypespec: "(" typespec • ")"
  157 tupleTypespec: "(" typespec • "," ")"

    ","  shift, and go to state 227
    ")"  shift, and go to state 228


State 232

   65 vtupleExpr: "(" expr "," ")" •

    $default  reduce using rule 65 (vtupleExpr)


State 233

   53 expr_cl2: expr "," expr •

    $default  reduce using rule 53 (expr_cl2)


State 234

   54 expr_cl2: expr_cl2 "," expr •

    $default  reduce using rule 54 (expr_cl2)


State 235

   97 dot_name_exp: postfixExpr "." "<val_id>" •

    $default  reduce using rule 97 (dot_name_exp)


State 236

   98 dot_name_exp: postfixExpr "." "<TypeId>" •

    $default  reduce using rule 98 (dot_name_exp)


State 237

  102 dotIxExpr: postfixExpr "." parenExpr •

    $default  reduce using rule 102 (dotIxExpr)


State 238

  101 dotIxExpr: postfixExpr "." int_expr •

    $default  reduce using rule 101 (dotIxExpr)


State 239

   95 vcall_exp: postfixExpr "(" ")" •

    $default  reduce using rule 95 (vcall_exp)


State 240

   51 expr_cl1: expr •

    $default  reduce using rule 51 (expr_cl1)


State 241

   52 expr_cl1: expr_cl1 • "," expr
   96 vcall_exp: postfixExpr "(" expr_cl1 • ")"

    ","  shift, and go to state 304
    ")"  shift, and go to state 305


State 242

  178 vtarg: expr •

    $default  reduce using rule 178 (vtarg)


State 243

  139 type_query_exp: typespec • type_query_op typespec
  177 vtarg: typespec •

    "::"  shift, and go to state 174
    ":<"  shift, and go to state 175
    ">:"  shift, and go to state 176

    $default  reduce using rule 177 (vtarg)

    type_query_op  go to state 177


State 244

  179 vtarg_cl: vtarg •

    $default  reduce using rule 179 (vtarg_cl)


State 245

   94 tcall_exp: postfixExpr "[" vtarg_cl • "]"
  180 vtarg_cl: vtarg_cl • "," vtarg

    ","  shift, and go to state 306
    "]"  shift, and go to state 307


State 246

   99 dot_name_exp: postfixExpr "->" "<val_id>" •

    $default  reduce using rule 99 (dot_name_exp)


State 247

  100 dot_name_exp: postfixExpr "->" "<TypeId>" •

    $default  reduce using rule 100 (dot_name_exp)


State 248

  104 dotIxExpr: postfixExpr "->" parenExpr •

    $default  reduce using rule 104 (dotIxExpr)


State 249

  103 dotIxExpr: postfixExpr "->" int_expr •

    $default  reduce using rule 103 (dotIxExpr)


State 250

  117 mulBinaryExpr: mulBinaryExpr mulBinaryOp unaryExpr •

    $default  reduce using rule 117 (mulBinaryExpr)


State 251

  117 mulBinaryExpr: mulBinaryExpr • mulBinaryOp unaryExpr
  121 addBinaryExpr: addBinaryExpr addBinaryOp mulBinaryExpr •

    "*"  shift, and go to state 156
    "/"  shift, and go to state 157
    "%"  shift, and go to state 158

    $default  reduce using rule 121 (addBinaryExpr)

    mulBinaryOp  go to state 159


State 252

  121 addBinaryExpr: addBinaryExpr • addBinaryOp mulBinaryExpr
  127 cmpBinaryExpr: cmpBinaryExpr cmpBinaryOp addBinaryExpr •

    "+"  shift, and go to state 160
    "-"  shift, and go to state 161

    $default  reduce using rule 127 (cmpBinaryExpr)

    addBinaryOp  go to state 162


State 253

  127 cmpBinaryExpr: cmpBinaryExpr • cmpBinaryOp addBinaryExpr
  131 eqBinaryExpr: eqBinaryExpr eqBinaryOp cmpBinaryExpr •

    "<"   shift, and go to state 163
    "<="  shift, and go to state 164
    ">"   shift, and go to state 165
    ">="  shift, and go to state 166

    $default  reduce using rule 131 (eqBinaryExpr)

    cmpBinaryOp  go to state 167


State 254

  131 eqBinaryExpr: eqBinaryExpr • eqBinaryOp cmpBinaryExpr
  133 andBinaryExpr: andBinaryExpr "and" eqBinaryExpr •

    "=="  shift, and go to state 168
    "!="  shift, and go to state 169

    $default  reduce using rule 133 (andBinaryExpr)

    eqBinaryOp  go to state 170


State 255

  133 andBinaryExpr: andBinaryExpr • "and" eqBinaryExpr
  135 xorBinaryExpr: xorBinaryExpr "xor" andBinaryExpr •

    "and"  shift, and go to state 171

    $default  reduce using rule 135 (xorBinaryExpr)


State 256

  135 xorBinaryExpr: xorBinaryExpr • "xor" andBinaryExpr
  137 orBinaryExpr: orBinaryExpr "or" xorBinaryExpr •

    "xor"  shift, and go to state 172

    $default  reduce using rule 137 (orBinaryExpr)


State 257

  139 type_query_exp: typespec type_query_op typespec •

    $default  reduce using rule 139 (type_query_exp)


State 258

  161 mod_prefix: mod_prefix vid "." •

    $default  reduce using rule 161 (mod_prefix)


State 259

  167 tdot: postfixTypespec "." "<val_id>" •

    $default  reduce using rule 167 (tdot)


State 260

  174 ttarg: expr •

    $default  reduce using rule 174 (ttarg)


State 261

  139 type_query_exp: typespec • type_query_op typespec
  173 ttarg: typespec •

    "::"  shift, and go to state 174
    ":<"  shift, and go to state 175
    ">:"  shift, and go to state 176

    $default  reduce using rule 173 (ttarg)

    type_query_op  go to state 177


State 262

  175 ttarg_cl: ttarg •

    $default  reduce using rule 175 (ttarg_cl)


State 263

  166 ttcall: postfixTypespec "[" ttarg_cl • "]"
  176 ttarg_cl: ttarg_cl • "," ttarg

    ","  shift, and go to state 308
    "]"  shift, and go to state 309


State 264

  188 lpattern: "(" ")" •

    $default  reduce using rule 188 (lpattern)


State 265

  197 lpatternField_cl: lpatternField •

    $default  reduce using rule 197 (lpatternField_cl)


State 266

  187 lpattern: "(" lpatternField_cl • ")"
  198 lpatternField_cl: lpatternField_cl • "," lpatternField

    ","  shift, and go to state 310
    ")"  shift, and go to state 311


State 267

  183 lpatternField: vid typespec •

    $default  reduce using rule 183 (lpatternField)


State 268

   13 constStmt: "const" lpattern_naked "=" • expr

    "<val_id>"               shift, and go to state 37
    "<TypeId>"               shift, and go to state 41
    "if"                     shift, and go to state 48
    "fn"                     shift, and go to state 49
    "Fn"                     shift, and go to state 50
    "not"                    shift, and go to state 51
    "42"                     shift, and go to state 52
    "0x2a"                   shift, and go to state 53
    "4.2"                    shift, and go to state 54
    "\"dq-string-literal\""  shift, and go to state 55
    "'sq-string-literal'"    shift, and go to state 56
    "("                      shift, and go to state 57
    "{"                      shift, and go to state 30
    "*"                      shift, and go to state 59
    "+"                      shift, and go to state 60
    "-"                      shift, and go to state 61
    "^"                      shift, and go to state 62
    "&"                      shift, and go to state 63

    tid              go to state 64
    vid              go to state 65
    floatl           go to state 66
    expr             go to state 312
    parenExpr        go to state 69
    unitExpr         go to state 32
    vparenExpr       go to state 33
    vtupleExpr       go to state 34
    vstructExpr      go to state 35
    primaryExpr      go to state 70
    int_expr         go to state 71
    stringls         go to state 72
    ifThenElseExpr   go to state 73
    chainExpr        go to state 36
    vlambdaExpr      go to state 74
    postfixExpr      go to state 75
    tcall_exp        go to state 76
    vcall_exp        go to state 77
    dot_name_exp     go to state 78
    dotIxExpr        go to state 79
    unaryExpr        go to state 80
    unaryOp          go to state 81
    binaryExpr       go to state 82
    mulBinaryExpr    go to state 83
    addBinaryExpr    go to state 84
    cmpBinaryExpr    go to state 85
    eqBinaryExpr     go to state 86
    andBinaryExpr    go to state 87
    xorBinaryExpr    go to state 88
    orBinaryExpr     go to state 89
    type_query_exp   go to state 90
    typespec         go to state 91
    primaryTypespec  go to state 92
    parenTypespec    go to state 93
    tupleTypespec    go to state 94
    mod_prefix_tid   go to state 95
    mod_prefix       go to state 96
    fn_typespec      go to state 97
    postfixTypespec  go to state 98
    ttcall           go to state 99
    tdot             go to state 100
    unaryTypespec    go to state 101


State 269

   14 letStmt: "let" lpattern_naked "=" • expr

    "<val_id>"               shift, and go to state 37
    "<TypeId>"               shift, and go to state 41
    "if"                     shift, and go to state 48
    "fn"                     shift, and go to state 49
    "Fn"                     shift, and go to state 50
    "not"                    shift, and go to state 51
    "42"                     shift, and go to state 52
    "0x2a"                   shift, and go to state 53
    "4.2"                    shift, and go to state 54
    "\"dq-string-literal\""  shift, and go to state 55
    "'sq-string-literal'"    shift, and go to state 56
    "("                      shift, and go to state 57
    "{"                      shift, and go to state 30
    "*"                      shift, and go to state 59
    "+"                      shift, and go to state 60
    "-"                      shift, and go to state 61
    "^"                      shift, and go to state 62
    "&"                      shift, and go to state 63

    tid              go to state 64
    vid              go to state 65
    floatl           go to state 66
    expr             go to state 313
    parenExpr        go to state 69
    unitExpr         go to state 32
    vparenExpr       go to state 33
    vtupleExpr       go to state 34
    vstructExpr      go to state 35
    primaryExpr      go to state 70
    int_expr         go to state 71
    stringls         go to state 72
    ifThenElseExpr   go to state 73
    chainExpr        go to state 36
    vlambdaExpr      go to state 74
    postfixExpr      go to state 75
    tcall_exp        go to state 76
    vcall_exp        go to state 77
    dot_name_exp     go to state 78
    dotIxExpr        go to state 79
    unaryExpr        go to state 80
    unaryOp          go to state 81
    binaryExpr       go to state 82
    mulBinaryExpr    go to state 83
    addBinaryExpr    go to state 84
    cmpBinaryExpr    go to state 85
    eqBinaryExpr     go to state 86
    andBinaryExpr    go to state 87
    xorBinaryExpr    go to state 88
    orBinaryExpr     go to state 89
    type_query_exp   go to state 90
    typespec         go to state 91
    primaryTypespec  go to state 92
    parenTypespec    go to state 93
    tupleTypespec    go to state 94
    mod_prefix_tid   go to state 95
    mod_prefix       go to state 96
    fn_typespec      go to state 97
    postfixTypespec  go to state 98
    ttcall           go to state 99
    tdot             go to state 100
    unaryTypespec    go to state 101


State 270

   15 varStmt: "var" lpattern_naked "=" • expr

    "<val_id>"               shift, and go to state 37
    "<TypeId>"               shift, and go to state 41
    "if"                     shift, and go to state 48
    "fn"                     shift, and go to state 49
    "Fn"                     shift, and go to state 50
    "not"                    shift, and go to state 51
    "42"                     shift, and go to state 52
    "0x2a"                   shift, and go to state 53
    "4.2"                    shift, and go to state 54
    "\"dq-string-literal\""  shift, and go to state 55
    "'sq-string-literal'"    shift, and go to state 56
    "("                      shift, and go to state 57
    "{"                      shift, and go to state 30
    "*"                      shift, and go to state 59
    "+"                      shift, and go to state 60
    "-"                      shift, and go to state 61
    "^"                      shift, and go to state 62
    "&"                      shift, and go to state 63

    tid              go to state 64
    vid              go to state 65
    floatl           go to state 66
    expr             go to state 314
    parenExpr        go to state 69
    unitExpr         go to state 32
    vparenExpr       go to state 33
    vtupleExpr       go to state 34
    vstructExpr      go to state 35
    primaryExpr      go to state 70
    int_expr         go to state 71
    stringls         go to state 72
    ifThenElseExpr   go to state 73
    chainExpr        go to state 36
    vlambdaExpr      go to state 74
    postfixExpr      go to state 75
    tcall_exp        go to state 76
    vcall_exp        go to state 77
    dot_name_exp     go to state 78
    dotIxExpr        go to state 79
    unaryExpr        go to state 80
    unaryOp          go to state 81
    binaryExpr       go to state 82
    mulBinaryExpr    go to state 83
    addBinaryExpr    go to state 84
    cmpBinaryExpr    go to state 85
    eqBinaryExpr     go to state 86
    andBinaryExpr    go to state 87
    xorBinaryExpr    go to state 88
    orBinaryExpr     go to state 89
    type_query_exp   go to state 90
    typespec         go to state 91
    primaryTypespec  go to state 92
    parenTypespec    go to state 93
    tupleTypespec    go to state 94
    mod_prefix_tid   go to state 95
    mod_prefix       go to state 96
    fn_typespec      go to state 97
    postfixTypespec  go to state 98
    ttcall           go to state 99
    tdot             go to state 100
    unaryTypespec    go to state 101


State 271

   16 setStmt: "set" expr "=" • expr

    "<val_id>"               shift, and go to state 37
    "<TypeId>"               shift, and go to state 41
    "if"                     shift, and go to state 48
    "fn"                     shift, and go to state 49
    "Fn"                     shift, and go to state 50
    "not"                    shift, and go to state 51
    "42"                     shift, and go to state 52
    "0x2a"                   shift, and go to state 53
    "4.2"                    shift, and go to state 54
    "\"dq-string-literal\""  shift, and go to state 55
    "'sq-string-literal'"    shift, and go to state 56
    "("                      shift, and go to state 57
    "{"                      shift, and go to state 30
    "*"                      shift, and go to state 59
    "+"                      shift, and go to state 60
    "-"                      shift, and go to state 61
    "^"                      shift, and go to state 62
    "&"                      shift, and go to state 63

    tid              go to state 64
    vid              go to state 65
    floatl           go to state 66
    expr             go to state 315
    parenExpr        go to state 69
    unitExpr         go to state 32
    vparenExpr       go to state 33
    vtupleExpr       go to state 34
    vstructExpr      go to state 35
    primaryExpr      go to state 70
    int_expr         go to state 71
    stringls         go to state 72
    ifThenElseExpr   go to state 73
    chainExpr        go to state 36
    vlambdaExpr      go to state 74
    postfixExpr      go to state 75
    tcall_exp        go to state 76
    vcall_exp        go to state 77
    dot_name_exp     go to state 78
    dotIxExpr        go to state 79
    unaryExpr        go to state 80
    unaryOp          go to state 81
    binaryExpr       go to state 82
    mulBinaryExpr    go to state 83
    addBinaryExpr    go to state 84
    cmpBinaryExpr    go to state 85
    eqBinaryExpr     go to state 86
    andBinaryExpr    go to state 87
    xorBinaryExpr    go to state 88
    orBinaryExpr     go to state 89
    type_query_exp   go to state 90
    typespec         go to state 91
    primaryTypespec  go to state 92
    parenTypespec    go to state 93
    tupleTypespec    go to state 94
    mod_prefix_tid   go to state 95
    mod_prefix       go to state 96
    fn_typespec      go to state 97
    postfixTypespec  go to state 98
    ttcall           go to state 99
    tdot             go to state 100
    unaryTypespec    go to state 101


State 272

  181 vstructExprField: vid "=" expr •

    $default  reduce using rule 181 (vstructExprField)


State 273

   87 chainPrefix: chainPrefix chainPrefixStmt ";" •

    $default  reduce using rule 87 (chainPrefix)


State 274

   85 chainExpr: "{" chainPrefix expr "}" •

    $default  reduce using rule 85 (chainExpr)


State 275

  181 vstructExprField: vid • "=" expr

    "="  shift, and go to state 191


State 276

  202 vstructExprField_cl: vstructExprField_cl "," vstructExprField •

    $default  reduce using rule 202 (vstructExprField_cl)


State 277

   43 importStmt: "import" vid "from" stringl "type" • stringl

    "\"dq-string-literal\""  shift, and go to state 198
    "'sq-string-literal'"    shift, and go to state 199

    stringl  go to state 316


State 278

  182 vpatternField: vid typespec •

    $default  reduce using rule 182 (vpatternField)


State 279

  196 vpatternField_cl: vpatternField_cl "," • vpatternField

    "<val_id>"  shift, and go to state 37

    vid            go to state 203
    vpatternField  go to state 317


State 280

  191 vpattern: "(" vpatternField_cl ")" •

    $default  reduce using rule 191 (vpattern)


State 281

  186 tpatternField: tid typespec •

    $default  reduce using rule 186 (tpatternField)


State 282

  185 tpatternField: vid typespec •

    $default  reduce using rule 185 (tpatternField)


State 283

  200 tpatternField_cl: tpatternField_cl "," • tpatternField

    "<val_id>"  shift, and go to state 37
    "<TypeId>"  shift, and go to state 41

    tid            go to state 206
    vid            go to state 207
    tpatternField  go to state 318


State 284

  193 tpattern: "[" tpatternField_cl "]" •

    $default  reduce using rule 193 (tpattern)


State 285

  194 tpattern: "!" "[" tpatternField_cl • "]"
  200 tpatternField_cl: tpatternField_cl • "," tpatternField

    ","  shift, and go to state 283
    "]"  shift, and go to state 319


State 286

   26 fn_stmt: "fn" vid vpattern "->" typespec • "=" parenExpr

    "="  shift, and go to state 320


State 287

   28 fn_stmt: "fn" vid vpattern "=" parenExpr •

    $default  reduce using rule 28 (fn_stmt)


State 288

   27 fn_stmt: "fn" vid tpattern_seq vpattern "->" • typespec "=" parenExpr

    "<val_id>"  shift, and go to state 37
    "<TypeId>"  shift, and go to state 41
    "Fn"        shift, and go to state 50
    "("         shift, and go to state 140
    "&"         shift, and go to state 63

    tid              go to state 64
    vid              go to state 141
    typespec         go to state 321
    primaryTypespec  go to state 92
    parenTypespec    go to state 93
    tupleTypespec    go to state 94
    mod_prefix_tid   go to state 95
    mod_prefix       go to state 96
    fn_typespec      go to state 97
    postfixTypespec  go to state 98
    ttcall           go to state 99
    tdot             go to state 100
    unaryTypespec    go to state 101


State 289

   29 fn_stmt: "fn" vid tpattern_seq vpattern "=" • parenExpr

    "("  shift, and go to state 29
    "{"  shift, and go to state 30

    parenExpr    go to state 322
    unitExpr     go to state 32
    vparenExpr   go to state 33
    vtupleExpr   go to state 34
    vstructExpr  go to state 35
    chainExpr    go to state 36


State 290

  148 structTypespecField: vid • typespec

    "<val_id>"  shift, and go to state 37
    "<TypeId>"  shift, and go to state 41
    "Fn"        shift, and go to state 50
    "("         shift, and go to state 140
    "&"         shift, and go to state 63

    tid              go to state 64
    vid              go to state 141
    typespec         go to state 323
    primaryTypespec  go to state 92
    parenTypespec    go to state 93
    tupleTypespec    go to state 94
    mod_prefix_tid   go to state 95
    mod_prefix       go to state 96
    fn_typespec      go to state 97
    postfixTypespec  go to state 98
    ttcall           go to state 99
    tdot             go to state 100
    unaryTypespec    go to state 101


State 291

  149 structTypespecField_cl: structTypespecField •

    $default  reduce using rule 149 (structTypespecField_cl)


State 292

  150 structTypespecField_cl: structTypespecField_cl • "," structTypespecField
  172 structTypespec: "{" structTypespecField_cl • "}"

    ","  shift, and go to state 324
    "}"  shift, and go to state 325


State 293

   31 type_stmt: "type" tid tpattern_seq "=" long_typespec •

    $default  reduce using rule 31 (type_stmt)


State 294

   36 unprefixed_enum_field_pl: unprefixed_enum_field_pl "|" enum_field •

    $default  reduce using rule 36 (unprefixed_enum_field_pl)


State 295

   38 enum_field: tid "(" ")" •

    $default  reduce using rule 38 (enum_field)


State 296

  144 typespec_cl1: typespec •

    $default  reduce using rule 144 (typespec_cl1)


State 297

   39 enum_field: tid "(" typespec_cl1 • ")"
  145 typespec_cl1: typespec_cl1 • "," typespec

    ","  shift, and go to state 326
    ")"  shift, and go to state 327


State 298

   40 typeclass_stmt: "typeclass" tid "<" tid typespec • ">" "=" "{" expr_sl "}"
   41               | "typeclass" tid "<" tid typespec • ">" tpattern_seq "=" "{" expr_sl "}"

    ">"  shift, and go to state 328


State 299

   81 ifThenElseExpr: "if" parenExpr "then" parenExpr •
   82               | "if" parenExpr "then" parenExpr • "else" primaryExpr

    "else"  shift, and go to state 329

    $default  reduce using rule 81 (ifThenElseExpr)


State 300

   88 vlambdaExpr: "fn" vpattern "=" parenExpr •

    $default  reduce using rule 88 (vlambdaExpr)


State 301

  157 tupleTypespec: "(" typespec "," ")" •

    $default  reduce using rule 157 (tupleTypespec)


State 302

  146 typespec_cl2: typespec "," typespec •

    $default  reduce using rule 146 (typespec_cl2)


State 303

  147 typespec_cl2: typespec_cl2 "," typespec •

    $default  reduce using rule 147 (typespec_cl2)


State 304

   52 expr_cl1: expr_cl1 "," • expr

    "<val_id>"               shift, and go to state 37
    "<TypeId>"               shift, and go to state 41
    "if"                     shift, and go to state 48
    "fn"                     shift, and go to state 49
    "Fn"                     shift, and go to state 50
    "not"                    shift, and go to state 51
    "42"                     shift, and go to state 52
    "0x2a"                   shift, and go to state 53
    "4.2"                    shift, and go to state 54
    "\"dq-string-literal\""  shift, and go to state 55
    "'sq-string-literal'"    shift, and go to state 56
    "("                      shift, and go to state 57
    "{"                      shift, and go to state 30
    "*"                      shift, and go to state 59
    "+"                      shift, and go to state 60
    "-"                      shift, and go to state 61
    "^"                      shift, and go to state 62
    "&"                      shift, and go to state 63

    tid              go to state 64
    vid              go to state 65
    floatl           go to state 66
    expr             go to state 330
    parenExpr        go to state 69
    unitExpr         go to state 32
    vparenExpr       go to state 33
    vtupleExpr       go to state 34
    vstructExpr      go to state 35
    primaryExpr      go to state 70
    int_expr         go to state 71
    stringls         go to state 72
    ifThenElseExpr   go to state 73
    chainExpr        go to state 36
    vlambdaExpr      go to state 74
    postfixExpr      go to state 75
    tcall_exp        go to state 76
    vcall_exp        go to state 77
    dot_name_exp     go to state 78
    dotIxExpr        go to state 79
    unaryExpr        go to state 80
    unaryOp          go to state 81
    binaryExpr       go to state 82
    mulBinaryExpr    go to state 83
    addBinaryExpr    go to state 84
    cmpBinaryExpr    go to state 85
    eqBinaryExpr     go to state 86
    andBinaryExpr    go to state 87
    xorBinaryExpr    go to state 88
    orBinaryExpr     go to state 89
    type_query_exp   go to state 90
    typespec         go to state 91
    primaryTypespec  go to state 92
    parenTypespec    go to state 93
    tupleTypespec    go to state 94
    mod_prefix_tid   go to state 95
    mod_prefix       go to state 96
    fn_typespec      go to state 97
    postfixTypespec  go to state 98
    ttcall           go to state 99
    tdot             go to state 100
    unaryTypespec    go to state 101


State 305

   96 vcall_exp: postfixExpr "(" expr_cl1 ")" •

    $default  reduce using rule 96 (vcall_exp)


State 306

  180 vtarg_cl: vtarg_cl "," • vtarg

    "<val_id>"               shift, and go to state 37
    "<TypeId>"               shift, and go to state 41
    "if"                     shift, and go to state 48
    "fn"                     shift, and go to state 49
    "Fn"                     shift, and go to state 50
    "not"                    shift, and go to state 51
    "42"                     shift, and go to state 52
    "0x2a"                   shift, and go to state 53
    "4.2"                    shift, and go to state 54
    "\"dq-string-literal\""  shift, and go to state 55
    "'sq-string-literal'"    shift, and go to state 56
    "("                      shift, and go to state 57
    "{"                      shift, and go to state 30
    "*"                      shift, and go to state 59
    "+"                      shift, and go to state 60
    "-"                      shift, and go to state 61
    "^"                      shift, and go to state 62
    "&"                      shift, and go to state 63

    tid              go to state 64
    vid              go to state 65
    floatl           go to state 66
    expr             go to state 242
    parenExpr        go to state 69
    unitExpr         go to state 32
    vparenExpr       go to state 33
    vtupleExpr       go to state 34
    vstructExpr      go to state 35
    primaryExpr      go to state 70
    int_expr         go to state 71
    stringls         go to state 72
    ifThenElseExpr   go to state 73
    chainExpr        go to state 36
    vlambdaExpr      go to state 74
    postfixExpr      go to state 75
    tcall_exp        go to state 76
    vcall_exp        go to state 77
    dot_name_exp     go to state 78
    dotIxExpr        go to state 79
    unaryExpr        go to state 80
    unaryOp          go to state 81
    binaryExpr       go to state 82
    mulBinaryExpr    go to state 83
    addBinaryExpr    go to state 84
    cmpBinaryExpr    go to state 85
    eqBinaryExpr     go to state 86
    andBinaryExpr    go to state 87
    xorBinaryExpr    go to state 88
    orBinaryExpr     go to state 89
    type_query_exp   go to state 90
    typespec         go to state 243
    primaryTypespec  go to state 92
    parenTypespec    go to state 93
    tupleTypespec    go to state 94
    mod_prefix_tid   go to state 95
    mod_prefix       go to state 96
    fn_typespec      go to state 97
    postfixTypespec  go to state 98
    ttcall           go to state 99
    tdot             go to state 100
    unaryTypespec    go to state 101
    vtarg            go to state 331


State 307

   94 tcall_exp: postfixExpr "[" vtarg_cl "]" •

    $default  reduce using rule 94 (tcall_exp)


State 308

  176 ttarg_cl: ttarg_cl "," • ttarg

    "<val_id>"               shift, and go to state 37
    "<TypeId>"               shift, and go to state 41
    "if"                     shift, and go to state 48
    "fn"                     shift, and go to state 49
    "Fn"                     shift, and go to state 50
    "not"                    shift, and go to state 51
    "42"                     shift, and go to state 52
    "0x2a"                   shift, and go to state 53
    "4.2"                    shift, and go to state 54
    "\"dq-string-literal\""  shift, and go to state 55
    "'sq-string-literal'"    shift, and go to state 56
    "("                      shift, and go to state 57
    "{"                      shift, and go to state 30
    "*"                      shift, and go to state 59
    "+"                      shift, and go to state 60
    "-"                      shift, and go to state 61
    "^"                      shift, and go to state 62
    "&"                      shift, and go to state 63

    tid              go to state 64
    vid              go to state 65
    floatl           go to state 66
    expr             go to state 260
    parenExpr        go to state 69
    unitExpr         go to state 32
    vparenExpr       go to state 33
    vtupleExpr       go to state 34
    vstructExpr      go to state 35
    primaryExpr      go to state 70
    int_expr         go to state 71
    stringls         go to state 72
    ifThenElseExpr   go to state 73
    chainExpr        go to state 36
    vlambdaExpr      go to state 74
    postfixExpr      go to state 75
    tcall_exp        go to state 76
    vcall_exp        go to state 77
    dot_name_exp     go to state 78
    dotIxExpr        go to state 79
    unaryExpr        go to state 80
    unaryOp          go to state 81
    binaryExpr       go to state 82
    mulBinaryExpr    go to state 83
    addBinaryExpr    go to state 84
    cmpBinaryExpr    go to state 85
    eqBinaryExpr     go to state 86
    andBinaryExpr    go to state 87
    xorBinaryExpr    go to state 88
    orBinaryExpr     go to state 89
    type_query_exp   go to state 90
    typespec         go to state 261
    primaryTypespec  go to state 92
    parenTypespec    go to state 93
    tupleTypespec    go to state 94
    mod_prefix_tid   go to state 95
    mod_prefix       go to state 96
    fn_typespec      go to state 97
    postfixTypespec  go to state 98
    ttcall           go to state 99
    tdot             go to state 100
    unaryTypespec    go to state 101
    ttarg            go to state 332


State 309

  166 ttcall: postfixTypespec "[" ttarg_cl "]" •

    $default  reduce using rule 166 (ttcall)


State 310

  198 lpatternField_cl: lpatternField_cl "," • lpatternField

    "<val_id>"  shift, and go to state 37

    vid            go to state 183
    lpatternField  go to state 333


State 311

  187 lpattern: "(" lpatternField_cl ")" •

    $default  reduce using rule 187 (lpattern)


State 312

   13 constStmt: "const" lpattern_naked "=" expr •

    $default  reduce using rule 13 (constStmt)


State 313

   14 letStmt: "let" lpattern_naked "=" expr •

    $default  reduce using rule 14 (letStmt)


State 314

   15 varStmt: "var" lpattern_naked "=" expr •

    $default  reduce using rule 15 (varStmt)


State 315

   16 setStmt: "set" expr "=" expr •

    $default  reduce using rule 16 (setStmt)


State 316

   43 importStmt: "import" vid "from" stringl "type" stringl •

    $default  reduce using rule 43 (importStmt)


State 317

  196 vpatternField_cl: vpatternField_cl "," vpatternField •

    $default  reduce using rule 196 (vpatternField_cl)


State 318

  200 tpatternField_cl: tpatternField_cl "," tpatternField •

    $default  reduce using rule 200 (tpatternField_cl)


State 319

  194 tpattern: "!" "[" tpatternField_cl "]" •

    $default  reduce using rule 194 (tpattern)


State 320

   26 fn_stmt: "fn" vid vpattern "->" typespec "=" • parenExpr

    "("  shift, and go to state 29
    "{"  shift, and go to state 30

    parenExpr    go to state 334
    unitExpr     go to state 32
    vparenExpr   go to state 33
    vtupleExpr   go to state 34
    vstructExpr  go to state 35
    chainExpr    go to state 36


State 321

   27 fn_stmt: "fn" vid tpattern_seq vpattern "->" typespec • "=" parenExpr

    "="  shift, and go to state 335


State 322

   29 fn_stmt: "fn" vid tpattern_seq vpattern "=" parenExpr •

    $default  reduce using rule 29 (fn_stmt)


State 323

  148 structTypespecField: vid typespec •

    $default  reduce using rule 148 (structTypespecField)


State 324

  150 structTypespecField_cl: structTypespecField_cl "," • structTypespecField

    "<val_id>"  shift, and go to state 37

    vid                  go to state 290
    structTypespecField  go to state 336


State 325

  172 structTypespec: "{" structTypespecField_cl "}" •

    $default  reduce using rule 172 (structTypespec)


State 326

  145 typespec_cl1: typespec_cl1 "," • typespec

    "<val_id>"  shift, and go to state 37
    "<TypeId>"  shift, and go to state 41
    "Fn"        shift, and go to state 50
    "("         shift, and go to state 140
    "&"         shift, and go to state 63

    tid              go to state 64
    vid              go to state 141
    typespec         go to state 337
    primaryTypespec  go to state 92
    parenTypespec    go to state 93
    tupleTypespec    go to state 94
    mod_prefix_tid   go to state 95
    mod_prefix       go to state 96
    fn_typespec      go to state 97
    postfixTypespec  go to state 98
    ttcall           go to state 99
    tdot             go to state 100
    unaryTypespec    go to state 101


State 327

   39 enum_field: tid "(" typespec_cl1 ")" •

    $default  reduce using rule 39 (enum_field)


State 328

   40 typeclass_stmt: "typeclass" tid "<" tid typespec ">" • "=" "{" expr_sl "}"
   41               | "typeclass" tid "<" tid typespec ">" • tpattern_seq "=" "{" expr_sl "}"

    "["  shift, and go to state 121
    "="  shift, and go to state 338
    "!"  shift, and go to state 122

    tpattern      go to state 124
    tpattern_seq  go to state 339


State 329

   82 ifThenElseExpr: "if" parenExpr "then" parenExpr "else" • primaryExpr

    "<val_id>"               shift, and go to state 37
    "if"                     shift, and go to state 48
    "fn"                     shift, and go to state 49
    "42"                     shift, and go to state 52
    "0x2a"                   shift, and go to state 53
    "4.2"                    shift, and go to state 54
    "\"dq-string-literal\""  shift, and go to state 55
    "'sq-string-literal'"    shift, and go to state 56
    "("                      shift, and go to state 29
    "{"                      shift, and go to state 30

    vid             go to state 154
    floatl          go to state 66
    parenExpr       go to state 69
    unitExpr        go to state 32
    vparenExpr      go to state 33
    vtupleExpr      go to state 34
    vstructExpr     go to state 35
    primaryExpr     go to state 340
    int_expr        go to state 71
    stringls        go to state 72
    ifThenElseExpr  go to state 73
    chainExpr       go to state 36
    vlambdaExpr     go to state 74


State 330

   52 expr_cl1: expr_cl1 "," expr •

    $default  reduce using rule 52 (expr_cl1)


State 331

  180 vtarg_cl: vtarg_cl "," vtarg •

    $default  reduce using rule 180 (vtarg_cl)


State 332

  176 ttarg_cl: ttarg_cl "," ttarg •

    $default  reduce using rule 176 (ttarg_cl)


State 333

  198 lpatternField_cl: lpatternField_cl "," lpatternField •

    $default  reduce using rule 198 (lpatternField_cl)


State 334

   26 fn_stmt: "fn" vid vpattern "->" typespec "=" parenExpr •

    $default  reduce using rule 26 (fn_stmt)


State 335

   27 fn_stmt: "fn" vid tpattern_seq vpattern "->" typespec "=" • parenExpr

    "("  shift, and go to state 29
    "{"  shift, and go to state 30

    parenExpr    go to state 341
    unitExpr     go to state 32
    vparenExpr   go to state 33
    vtupleExpr   go to state 34
    vstructExpr  go to state 35
    chainExpr    go to state 36


State 336

  150 structTypespecField_cl: structTypespecField_cl "," structTypespecField •

    $default  reduce using rule 150 (structTypespecField_cl)


State 337

  145 typespec_cl1: typespec_cl1 "," typespec •

    $default  reduce using rule 145 (typespec_cl1)


State 338

   40 typeclass_stmt: "typeclass" tid "<" tid typespec ">" "=" • "{" expr_sl "}"

    "{"  shift, and go to state 342


State 339

   41 typeclass_stmt: "typeclass" tid "<" tid typespec ">" tpattern_seq • "=" "{" expr_sl "}"
  204 tpattern_seq: tpattern_seq • tpattern

    "["  shift, and go to state 121
    "="  shift, and go to state 343
    "!"  shift, and go to state 122

    tpattern  go to state 214


State 340

   82 ifThenElseExpr: "if" parenExpr "then" parenExpr "else" primaryExpr •

    $default  reduce using rule 82 (ifThenElseExpr)


State 341

   27 fn_stmt: "fn" vid tpattern_seq vpattern "->" typespec "=" parenExpr •

    $default  reduce using rule 27 (fn_stmt)


State 342

   40 typeclass_stmt: "typeclass" tid "<" tid typespec ">" "=" "{" • expr_sl "}"

    "<val_id>"               shift, and go to state 37
    "<TypeId>"               shift, and go to state 41
    "if"                     shift, and go to state 48
    "fn"                     shift, and go to state 49
    "Fn"                     shift, and go to state 50
    "not"                    shift, and go to state 51
    "42"                     shift, and go to state 52
    "0x2a"                   shift, and go to state 53
    "4.2"                    shift, and go to state 54
    "\"dq-string-literal\""  shift, and go to state 55
    "'sq-string-literal'"    shift, and go to state 56
    "("                      shift, and go to state 57
    "{"                      shift, and go to state 30
    "*"                      shift, and go to state 59
    "+"                      shift, and go to state 60
    "-"                      shift, and go to state 61
    "^"                      shift, and go to state 62
    "&"                      shift, and go to state 63

    tid              go to state 64
    vid              go to state 65
    floatl           go to state 66
    expr             go to state 344
    expr_sl          go to state 345
    parenExpr        go to state 69
    unitExpr         go to state 32
    vparenExpr       go to state 33
    vtupleExpr       go to state 34
    vstructExpr      go to state 35
    primaryExpr      go to state 70
    int_expr         go to state 71
    stringls         go to state 72
    ifThenElseExpr   go to state 73
    chainExpr        go to state 36
    vlambdaExpr      go to state 74
    postfixExpr      go to state 75
    tcall_exp        go to state 76
    vcall_exp        go to state 77
    dot_name_exp     go to state 78
    dotIxExpr        go to state 79
    unaryExpr        go to state 80
    unaryOp          go to state 81
    binaryExpr       go to state 82
    mulBinaryExpr    go to state 83
    addBinaryExpr    go to state 84
    cmpBinaryExpr    go to state 85
    eqBinaryExpr     go to state 86
    andBinaryExpr    go to state 87
    xorBinaryExpr    go to state 88
    orBinaryExpr     go to state 89
    type_query_exp   go to state 90
    typespec         go to state 91
    primaryTypespec  go to state 92
    parenTypespec    go to state 93
    tupleTypespec    go to state 94
    mod_prefix_tid   go to state 95
    mod_prefix       go to state 96
    fn_typespec      go to state 97
    postfixTypespec  go to state 98
    ttcall           go to state 99
    tdot             go to state 100
    unaryTypespec    go to state 101


State 343

   41 typeclass_stmt: "typeclass" tid "<" tid typespec ">" tpattern_seq "=" • "{" expr_sl "}"

    "{"  shift, and go to state 346


State 344

   55 expr_sl: expr • ";"

    ";"  shift, and go to state 347


State 345

   40 typeclass_stmt: "typeclass" tid "<" tid typespec ">" "=" "{" expr_sl • "}"
   56 expr_sl: expr_sl • expr ";"

    "<val_id>"               shift, and go to state 37
    "<TypeId>"               shift, and go to state 41
    "if"                     shift, and go to state 48
    "fn"                     shift, and go to state 49
    "Fn"                     shift, and go to state 50
    "not"                    shift, and go to state 51
    "42"                     shift, and go to state 52
    "0x2a"                   shift, and go to state 53
    "4.2"                    shift, and go to state 54
    "\"dq-string-literal\""  shift, and go to state 55
    "'sq-string-literal'"    shift, and go to state 56
    "("                      shift, and go to state 57
    "{"                      shift, and go to state 30
    "}"                      shift, and go to state 348
    "*"                      shift, and go to state 59
    "+"                      shift, and go to state 60
    "-"                      shift, and go to state 61
    "^"                      shift, and go to state 62
    "&"                      shift, and go to state 63

    tid              go to state 64
    vid              go to state 65
    floatl           go to state 66
    expr             go to state 349
    parenExpr        go to state 69
    unitExpr         go to state 32
    vparenExpr       go to state 33
    vtupleExpr       go to state 34
    vstructExpr      go to state 35
    primaryExpr      go to state 70
    int_expr         go to state 71
    stringls         go to state 72
    ifThenElseExpr   go to state 73
    chainExpr        go to state 36
    vlambdaExpr      go to state 74
    postfixExpr      go to state 75
    tcall_exp        go to state 76
    vcall_exp        go to state 77
    dot_name_exp     go to state 78
    dotIxExpr        go to state 79
    unaryExpr        go to state 80
    unaryOp          go to state 81
    binaryExpr       go to state 82
    mulBinaryExpr    go to state 83
    addBinaryExpr    go to state 84
    cmpBinaryExpr    go to state 85
    eqBinaryExpr     go to state 86
    andBinaryExpr    go to state 87
    xorBinaryExpr    go to state 88
    orBinaryExpr     go to state 89
    type_query_exp   go to state 90
    typespec         go to state 91
    primaryTypespec  go to state 92
    parenTypespec    go to state 93
    tupleTypespec    go to state 94
    mod_prefix_tid   go to state 95
    mod_prefix       go to state 96
    fn_typespec      go to state 97
    postfixTypespec  go to state 98
    ttcall           go to state 99
    tdot             go to state 100
    unaryTypespec    go to state 101


State 346

   41 typeclass_stmt: "typeclass" tid "<" tid typespec ">" tpattern_seq "=" "{" • expr_sl "}"

    "<val_id>"               shift, and go to state 37
    "<TypeId>"               shift, and go to state 41
    "if"                     shift, and go to state 48
    "fn"                     shift, and go to state 49
    "Fn"                     shift, and go to state 50
    "not"                    shift, and go to state 51
    "42"                     shift, and go to state 52
    "0x2a"                   shift, and go to state 53
    "4.2"                    shift, and go to state 54
    "\"dq-string-literal\""  shift, and go to state 55
    "'sq-string-literal'"    shift, and go to state 56
    "("                      shift, and go to state 57
    "{"                      shift, and go to state 30
    "*"                      shift, and go to state 59
    "+"                      shift, and go to state 60
    "-"                      shift, and go to state 61
    "^"                      shift, and go to state 62
    "&"                      shift, and go to state 63

    tid              go to state 64
    vid              go to state 65
    floatl           go to state 66
    expr             go to state 344
    expr_sl          go to state 350
    parenExpr        go to state 69
    unitExpr         go to state 32
    vparenExpr       go to state 33
    vtupleExpr       go to state 34
    vstructExpr      go to state 35
    primaryExpr      go to state 70
    int_expr         go to state 71
    stringls         go to state 72
    ifThenElseExpr   go to state 73
    chainExpr        go to state 36
    vlambdaExpr      go to state 74
    postfixExpr      go to state 75
    tcall_exp        go to state 76
    vcall_exp        go to state 77
    dot_name_exp     go to state 78
    dotIxExpr        go to state 79
    unaryExpr        go to state 80
    unaryOp          go to state 81
    binaryExpr       go to state 82
    mulBinaryExpr    go to state 83
    addBinaryExpr    go to state 84
    cmpBinaryExpr    go to state 85
    eqBinaryExpr     go to state 86
    andBinaryExpr    go to state 87
    xorBinaryExpr    go to state 88
    orBinaryExpr     go to state 89
    type_query_exp   go to state 90
    typespec         go to state 91
    primaryTypespec  go to state 92
    parenTypespec    go to state 93
    tupleTypespec    go to state 94
    mod_prefix_tid   go to state 95
    mod_prefix       go to state 96
    fn_typespec      go to state 97
    postfixTypespec  go to state 98
    ttcall           go to state 99
    tdot             go to state 100
    unaryTypespec    go to state 101


State 347

   55 expr_sl: expr ";" •

    $default  reduce using rule 55 (expr_sl)


State 348

   40 typeclass_stmt: "typeclass" tid "<" tid typespec ">" "=" "{" expr_sl "}" •

    $default  reduce using rule 40 (typeclass_stmt)


State 349

   56 expr_sl: expr_sl expr • ";"

    ";"  shift, and go to state 351


State 350

   41 typeclass_stmt: "typeclass" tid "<" tid typespec ">" tpattern_seq "=" "{" expr_sl • "}"
   56 expr_sl: expr_sl • expr ";"

    "<val_id>"               shift, and go to state 37
    "<TypeId>"               shift, and go to state 41
    "if"                     shift, and go to state 48
    "fn"                     shift, and go to state 49
    "Fn"                     shift, and go to state 50
    "not"                    shift, and go to state 51
    "42"                     shift, and go to state 52
    "0x2a"                   shift, and go to state 53
    "4.2"                    shift, and go to state 54
    "\"dq-string-literal\""  shift, and go to state 55
    "'sq-string-literal'"    shift, and go to state 56
    "("                      shift, and go to state 57
    "{"                      shift, and go to state 30
    "}"                      shift, and go to state 352
    "*"                      shift, and go to state 59
    "+"                      shift, and go to state 60
    "-"                      shift, and go to state 61
    "^"                      shift, and go to state 62
    "&"                      shift, and go to state 63

    tid              go to state 64
    vid              go to state 65
    floatl           go to state 66
    expr             go to state 349
    parenExpr        go to state 69
    unitExpr         go to state 32
    vparenExpr       go to state 33
    vtupleExpr       go to state 34
    vstructExpr      go to state 35
    primaryExpr      go to state 70
    int_expr         go to state 71
    stringls         go to state 72
    ifThenElseExpr   go to state 73
    chainExpr        go to state 36
    vlambdaExpr      go to state 74
    postfixExpr      go to state 75
    tcall_exp        go to state 76
    vcall_exp        go to state 77
    dot_name_exp     go to state 78
    dotIxExpr        go to state 79
    unaryExpr        go to state 80
    unaryOp          go to state 81
    binaryExpr       go to state 82
    mulBinaryExpr    go to state 83
    addBinaryExpr    go to state 84
    cmpBinaryExpr    go to state 85
    eqBinaryExpr     go to state 86
    andBinaryExpr    go to state 87
    xorBinaryExpr    go to state 88
    orBinaryExpr     go to state 89
    type_query_exp   go to state 90
    typespec         go to state 91
    primaryTypespec  go to state 92
    parenTypespec    go to state 93
    tupleTypespec    go to state 94
    mod_prefix_tid   go to state 95
    mod_prefix       go to state 96
    fn_typespec      go to state 97
    postfixTypespec  go to state 98
    ttcall           go to state 99
    tdot             go to state 100
    unaryTypespec    go to state 101


State 351

   56 expr_sl: expr_sl expr ";" •

    $default  reduce using rule 56 (expr_sl)


State 352

   41 typeclass_stmt: "typeclass" tid "<" tid typespec ">" tpattern_seq "=" "{" expr_sl "}" •

    $default  reduce using rule 41 (typeclass_stmt)
