Terminals unused in grammar

    "__42__"
    "struct"
    "then"
    "match"
    "with"
    "extern"
    "as"
    "for"
    "CORE_PROFILE"
    "BROWSER_PROFILE"
    "NATIVE_PROFILE"
    "->"
    "&"
    "!"
    "|"
    "EOS"
    "<null>"


Grammar

    0 $accept: script $end

    1 script: script_header script_field_sl

    2 script_header: %empty
    3              | script_header script_header_stmt ";"

    4 script_header_stmt: import_stmt

    5 script_field: "mod" vid native_mod_exp

    6 script_field_sl: script_field ";"
    7                | script_field_sl script_field ";"

    8 native_mod_exp: "{" mod_field_sl "}"
    9               | tpattern "{" mod_field_sl "}"
   10               | "{" "}"
   11               | tpattern "{" "}"

   12 mod_field_sl: mod_field ";"
   13             | mod_field_sl mod_field ";"

   14 mod_field: "let" vid "=" long_exp
   15          | "let" tid "=" type_spec
   16          | "let" cid "=" class_spec
   17          | "mod" vid native_mod_exp
   18          | "let" vid vpattern type_spec "=" bracketed_exp
   19          | "let" cid "(" tid class_spec ")" "=" "{" type_query_exp_sl0 "}"

   20 import_stmt: "imports" "{" import_field_group_sl0 "}"

   21 import_field_group_sl0: %empty
   22                       | import_field_group_sl0 import_field_group ";"

   23 import_field_group: import_field_cl1 "from" stringl

   24 import_field_cl1: vid
   25                 | import_field_cl1 "," vid

   26 chain_prefix_stmt: const_stmt
   27                  | val_stmt
   28                  | var_stmt
   29                  | set_stmt
   30                  | discard_stmt

   31 const_stmt: "const" lpattern "=" expr

   32 val_stmt: "val" lpattern "=" expr

   33 var_stmt: "var" lpattern "=" expr

   34 set_stmt: "set" mut_expr "=" expr

   35 discard_stmt: "run" expr

   36 tid: "TypeId"

   37 vid: "val_id"

   38 cid: "CLS_ID"

   39 floatl: "4.2"

   40 stringl: "'sq-string-literal'"
   41        | "\"dq-string-literal\""

   42 mod_prefix: vid ":"
   43           | vid "[" targ_cl "]" ":"
   44           | mod_prefix vid ":"
   45           | mod_prefix vid "[" targ_cl "]" ":"

   46 mut_expr: vid
   47         | "(" mut_expr_cl1 ")"

   48 mut_expr_cl1: mut_expr
   49             | mut_expr_cl1 "," mut_expr

   50 expr: binary_exp

   51 long_exp: expr
   52         | lambda_exp

   53 expr_cl2: expr "," expr
   54         | expr_cl2 "," expr

   55 type_query_exp_sl0: %empty
   56                   | type_query_exp_sl0 type_query_exp ";"

   57 bracketed_exp: paren_exp
   58              | vtupleExpr
   59              | vstructExpr
   60              | chain_exp

   61 paren_exp: "(" long_exp ")"

   62 vtupleExpr: "(" ")"
   63           | "(" expr "," ")"
   64           | "(" expr_cl2 ")"

   65 vstructExpr: "{" struct_exp_field_cl "}"

   66 primary_exp: bracketed_exp
   67            | vid
   68            | int_expr
   69            | floatl
   70            | stringls
   71            | if_exp
   72            | mod_prefix vid

   73 int_expr: "42"
   74         | "0x2a"
   75         | "42u"
   76         | "0x2Au"

   77 stringls: "'sq-string-literal'"
   78         | "\"dq-string-literal\""
   79         | stringls "'sq-string-literal'"
   80         | stringls "\"dq-string-literal\""

   81 if_exp: "if" bracketed_exp bracketed_exp
   82       | "if" bracketed_exp bracketed_exp "else" primary_exp

   83 chain_exp: "{" "}"
   84          | "{" long_exp "}"
   85          | "{" chain_prefix "}"
   86          | "{" chain_prefix long_exp "}"

   87 chain_prefix: chain_prefix_stmt ";"
   88             | chain_prefix chain_prefix_stmt ";"

   89 lambda_exp: fn_type_spec bracketed_exp

   90 postfix_exp: primary_exp
   91            | vcall_exp
   92            | dot_name_exp
   93            | dot_index_exp

   94 vcall_exp: postfix_exp "(" ")"
   95          | postfix_exp "(" varg_cl ")"

   96 dot_name_exp: postfix_exp "." "val_id"
   97             | type_spec "::" "TypeId"
   98             | type_spec "::" "TypeId" "using" paren_exp

   99 dot_index_exp: postfix_exp "." int_expr
  100              | postfix_exp "." bracketed_exp

  101 unary_exp: postfix_exp
  102          | unary_op unary_exp

  103 unary_op: "+"
  104         | "-"
  105         | "not"

  106 binary_exp: or_binary_exp

  107 mul_binary_op: "*"
  108              | "/"
  109              | "%"

  110 mul_binary_exp: unary_exp
  111               | mul_binary_exp mul_binary_op unary_exp

  112 add_binary_op: "+"
  113              | "-"

  114 add_binary_exp: mul_binary_exp
  115               | add_binary_exp add_binary_op mul_binary_exp

  116 cmp_binary_op: "<"
  117              | "<="
  118              | ">"
  119              | ">="

  120 cmp_binary_exp: add_binary_exp
  121               | cmp_binary_exp cmp_binary_op add_binary_exp

  122 eq_binary_op: "=="
  123             | "!="

  124 eq_binary_exp: cmp_binary_exp
  125              | eq_binary_exp eq_binary_op cmp_binary_exp

  126 and_binary_exp: eq_binary_exp
  127               | and_binary_exp "and" eq_binary_exp

  128 xor_binary_exp: and_binary_exp
  129               | xor_binary_exp "xor" and_binary_exp

  130 or_binary_exp: xor_binary_exp
  131              | or_binary_exp "or" xor_binary_exp

  132 type_query_exp: type_spec type_query_op type_spec

  133 type_query_op: ":<"
  134              | ">:"
  135              | "=="

  136 type_spec_cl2: type_spec "," type_spec
  137              | type_spec_cl2 "," type_spec

  138 type_spec: tid
  139          | mod_prefix_tid
  140          | tuple_type_spec
  141          | array_type_spec
  142          | struct_type_spec
  143          | enum_type_spec
  144          | fn_type_spec

  145 mod_prefix_tid: mod_prefix tid

  146 tuple_type_spec: "{" type_spec "}"
  147                | "{" type_spec_cl2 "}"

  148 array_type_spec: "[" type_spec "^" expr "]"

  149 struct_type_spec: "{" struct_type_spec_field_cl "}"

  150 struct_type_spec_field_cl: struct_type_spec_field
  151                          | struct_type_spec_field_cl "," struct_type_spec_field

  152 struct_type_spec_field: vid type_spec

  153 enum_type_spec_field: tid
  154                     | tid type_spec

  155 enum_type_spec_field_cl: enum_type_spec_field
  156                        | enum_type_spec_field_cl "," enum_type_spec_field

  157 enum_type_spec: "enum" "{" enum_type_spec_field_cl "}"

  158 fn_type_spec: "anonymous_fn" vpattern type_spec

  159 targ: type_spec
  160     | expr

  161 targ_cl: targ
  162        | targ_cl "," targ

  163 varg: expr
  164     | "out" mut_expr
  165     | "inout" mut_expr

  166 varg_cl: varg
  167        | varg_cl "," varg

  168 class_spec: primary_class_spec

  169 primary_class_spec: cid
  170                   | mod_prefix_cid_class_spec
  171                   | class_exp_class_spec

  172 mod_prefix_cid_class_spec: mod_prefix cid

  173 class_exp_class_spec: "typeclass" "(" tid class_spec ")" "{" type_query_exp_sl0 "}"

  174 struct_exp_field: vid "=" expr

  175 vpattern_field: vid type_spec
  176               | "out" vid type_spec
  177               | "inout" vid type_spec

  178 lpattern_field: vid type_spec
  179               | vid

  180 tpattern_field: vid type_spec
  181               | tid class_spec

  182 destructured_lpattern: "{" lpattern_field_cl "}"

  183 lpattern: lpattern_field
  184         | destructured_lpattern

  185 vpattern: "(" vpattern_field_cl ")"
  186         | "(" ")"

  187 tpattern: "[" tpattern_field_cl1 "]"

  188 vpattern_field_cl: vpattern_field
  189                  | vpattern_field_cl "," vpattern_field

  190 lpattern_field_cl: lpattern_field
  191                  | lpattern_field_cl "," lpattern_field

  192 tpattern_field_cl1: tpattern_field
  193                   | tpattern_field_cl1 "," tpattern_field

  194 struct_exp_field_cl: struct_exp_field
  195                    | struct_exp_field_cl "," struct_exp_field


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    "val_id" <TokenInfo> (258) 37 96
    "TypeId" <TokenInfo> (259) 36 97 98
    "CLS_ID" <TokenInfo> (260) 38
    "__42__" <TokenInfo> (261)
    "using" (262) 98
    "mod" (263) 5 17
    "struct" (264)
    "enum" (265) 157
    "typeclass" (266) 173
    "if" (267) 81 82
    "then" (268)
    "else" (269) 82
    "match" (270)
    "with" (271)
    "imports" (272) 20
    "extern" (273)
    "from" (274) 23
    "const" (275) 31
    "val" (276) 32
    "var" (277) 33
    "let" (278) 14 15 16 18 19
    "set" (279) 34
    "anonymous_fn" (280) 158
    "and" (281) 127
    "xor" (282) 129
    "or" (283) 131
    "not" (284) 105
    "out" (285) 164 176
    "inout" (286) 165 177
    "run" (287) 35
    "as" (288)
    "for" (289)
    "CORE_PROFILE" (290)
    "BROWSER_PROFILE" (291)
    "NATIVE_PROFILE" (292)
    "42" <TokenInfo> (293) 73
    "0x2a" <TokenInfo> (294) 74
    "42u" <TokenInfo> (295) 75
    "0x2Au" <TokenInfo> (296) 76
    "4.2" <TokenInfo> (297) 39
    "\"dq-string-literal\"" <TokenInfo> (298) 41 78 80
    "'sq-string-literal'" <TokenInfo> (299) 40 77 79
    "." (300) 96 99 100
    ":" (301) 42 43 44 45
    "," (302) 25 49 53 54 63 136 137 151 156 162 167 189 191 193 195
    ";" (303) 3 6 7 12 13 22 56 87 88
    "::" (304) 97 98
    "(" (305) 19 47 61 62 63 64 94 95 173 185 186
    ")" (306) 19 47 61 62 63 64 94 95 173 185 186
    "[" (307) 43 45 148 187
    "]" (308) 43 45 148 187
    "{" (309) 8 9 10 11 19 20 65 83 84 85 86 146 147 149 157 173 182
    "}" (310) 8 9 10 11 19 20 65 83 84 85 86 146 147 149 157 173 182
    "->" (311)
    "*" (312) 107
    "/" (313) 108
    "%" (314) 109
    "+" (315) 103 112
    "-" (316) 104 113
    "<" (317) 116
    "<=" (318) 117
    ">" (319) 118
    ">=" (320) 119
    "=" (321) 14 15 16 18 19 31 32 33 34 174
    "==" (322) 122 135
    "!=" (323) 123
    "^" (324) 148
    "&" (325)
    "!" (326)
    "|" (327)
    "EOS" (328)
    ":<" (329) 133
    ">:" (330) 134
    "<null>" (331)


Nonterminals, with rules where they appear

    $accept (77)
        on left: 0
    script <pdm::ast::Script*> (78)
        on left: 1
        on right: 0
    script_header <std::vector<pdm::ast::HeaderStmt*>> (79)
        on left: 2 3
        on right: 1 3
    script_header_stmt <pdm::ast::HeaderStmt*> (80)
        on left: 4
        on right: 3
    script_field <pdm::ast::Script::Field*> (81)
        on left: 5
        on right: 6 7
    script_field_sl <std::vector<pdm::ast::Script::Field*>> (82)
        on left: 6 7
        on right: 1 7
    native_mod_exp <pdm::ast::BaseModExp*> (83)
        on left: 8 9 10 11
        on right: 5 17
    mod_field_sl <std::vector<pdm::ast::BaseModExp::Field*>> (84)
        on left: 12 13
        on right: 8 9 13
    mod_field <pdm::ast::BaseModExp::Field*> (85)
        on left: 14 15 16 17 18 19
        on right: 12 13
    import_stmt <pdm::ast::HeaderStmt*> (86)
        on left: 20
        on right: 4
    import_field_group_sl0 <std::vector<ast::ImportStmt::FieldGroup*>> (87)
        on left: 21 22
        on right: 20 22
    import_field_group <ast::ImportStmt::FieldGroup*> (88)
        on left: 23
        on right: 22
    import_field_cl1 <std::vector<ast::ImportStmt::Field*>> (89)
        on left: 24 25
        on right: 23 25
    chain_prefix_stmt <pdm::ast::Stmt*> (90)
        on left: 26 27 28 29 30
        on right: 87 88
    const_stmt <pdm::ast::Stmt*> (91)
        on left: 31
        on right: 26
    val_stmt <pdm::ast::Stmt*> (92)
        on left: 32
        on right: 27
    var_stmt <pdm::ast::Stmt*> (93)
        on left: 33
        on right: 28
    set_stmt <pdm::ast::Stmt*> (94)
        on left: 34
        on right: 29
    discard_stmt <pdm::ast::Stmt*> (95)
        on left: 35
        on right: 30
    tid <TokenInfo> (96)
        on left: 36
        on right: 15 19 138 145 153 154 173 181
    vid <TokenInfo> (97)
        on left: 37
        on right: 5 14 17 18 24 25 42 43 44 45 46 67 72 152 174 175 176 177 178 179 180
    cid <TokenInfo> (98)
        on left: 38
        on right: 16 19 169 172
    floatl <TokenInfo> (99)
        on left: 39
        on right: 69
    stringl <TokenInfo> (100)
        on left: 40 41
        on right: 23
    mod_prefix <pdm::ast::ModAddress*> (101)
        on left: 42 43 44 45
        on right: 44 45 72 145 172
    mut_expr <pdm::ast::Exp*> (102)
        on left: 46 47
        on right: 34 48 49 164 165
    mut_expr_cl1 <std::vector<pdm::ast::Exp*>> (103)
        on left: 48 49
        on right: 47 49
    expr <pdm::ast::Exp*> (104)
        on left: 50
        on right: 31 32 33 34 35 51 53 54 63 148 160 163 174
    long_exp <pdm::ast::Exp*> (105)
        on left: 51 52
        on right: 14 61 84 86
    expr_cl2 <std::vector<pdm::ast::Exp*>> (106)
        on left: 53 54
        on right: 54 64
    type_query_exp_sl0 <std::vector<pdm::ast::TypeQueryExp*>> (107)
        on left: 55 56
        on right: 19 56 173
    bracketed_exp <pdm::ast::Exp*> (108)
        on left: 57 58 59 60
        on right: 18 66 81 82 89 100
    paren_exp <pdm::ast::Exp*> (109)
        on left: 61
        on right: 57 98
    vtupleExpr <pdm::ast::Exp*> (110)
        on left: 62 63 64
        on right: 58
    vstructExpr <pdm::ast::Exp*> (111)
        on left: 65
        on right: 59
    primary_exp <pdm::ast::Exp*> (112)
        on left: 66 67 68 69 70 71 72
        on right: 82 90
    int_expr <pdm::ast::Exp*> (113)
        on left: 73 74 75 76
        on right: 68 99
    stringls <std::vector<pdm::ast::StringExp::Piece>> (114)
        on left: 77 78 79 80
        on right: 70 79 80
    if_exp <pdm::ast::Exp*> (115)
        on left: 81 82
        on right: 71
    chain_exp <pdm::ast::Exp*> (116)
        on left: 83 84 85 86
        on right: 60
    chain_prefix <std::vector<pdm::ast::Stmt*>> (117)
        on left: 87 88
        on right: 85 86 88
    lambda_exp <pdm::ast::Exp*> (118)
        on left: 89
        on right: 52
    postfix_exp <pdm::ast::Exp*> (119)
        on left: 90 91 92 93
        on right: 94 95 96 99 100 101
    vcall_exp <pdm::ast::Exp*> (120)
        on left: 94 95
        on right: 91
    dot_name_exp <pdm::ast::Exp*> (121)
        on left: 96 97 98
        on right: 92
    dot_index_exp <pdm::ast::Exp*> (122)
        on left: 99 100
        on right: 93
    unary_exp <pdm::ast::Exp*> (123)
        on left: 101 102
        on right: 102 110 111
    unary_op <pdm::ast::UnaryOperator> (124)
        on left: 103 104 105
        on right: 102
    binary_exp <pdm::ast::Exp*> (125)
        on left: 106
        on right: 50
    mul_binary_op <pdm::ast::BinaryOperator> (126)
        on left: 107 108 109
        on right: 111
    mul_binary_exp <pdm::ast::Exp*> (127)
        on left: 110 111
        on right: 111 114 115
    add_binary_op <pdm::ast::BinaryOperator> (128)
        on left: 112 113
        on right: 115
    add_binary_exp <pdm::ast::Exp*> (129)
        on left: 114 115
        on right: 115 120 121
    cmp_binary_op <pdm::ast::BinaryOperator> (130)
        on left: 116 117 118 119
        on right: 121
    cmp_binary_exp <pdm::ast::Exp*> (131)
        on left: 120 121
        on right: 121 124 125
    eq_binary_op <pdm::ast::BinaryOperator> (132)
        on left: 122 123
        on right: 125
    eq_binary_exp <pdm::ast::Exp*> (133)
        on left: 124 125
        on right: 125 126 127
    and_binary_exp <pdm::ast::Exp*> (134)
        on left: 126 127
        on right: 127 128 129
    xor_binary_exp <pdm::ast::Exp*> (135)
        on left: 128 129
        on right: 129 130 131
    or_binary_exp <pdm::ast::Exp*> (136)
        on left: 130 131
        on right: 106 131
    type_query_exp <pdm::ast::TypeQueryExp*> (137)
        on left: 132
        on right: 56
    type_query_op <pdm::ast::TypeQueryKind> (138)
        on left: 133 134 135
        on right: 132
    type_spec_cl2 <std::vector<pdm::ast::TypeSpec*>> (139)
        on left: 136 137
        on right: 137 147
    type_spec <pdm::ast::TypeSpec*> (140)
        on left: 138 139 140 141 142 143 144
        on right: 15 18 97 98 132 136 137 146 148 152 154 158 159 175 176 177 178 180
    mod_prefix_tid <pdm::ast::TypeSpec*> (141)
        on left: 145
        on right: 139
    tuple_type_spec <pdm::ast::TypeSpec*> (142)
        on left: 146 147
        on right: 140
    array_type_spec <pdm::ast::TypeSpec*> (143)
        on left: 148
        on right: 141
    struct_type_spec <pdm::ast::TypeSpec*> (144)
        on left: 149
        on right: 142
    struct_type_spec_field_cl <std::vector<pdm::ast::StructTypeSpec::Field*>> (145)
        on left: 150 151
        on right: 149 151
    struct_type_spec_field <pdm::ast::StructTypeSpec::Field*> (146)
        on left: 152
        on right: 150 151
    enum_type_spec_field <pdm::ast::EnumTypeSpec::Field*> (147)
        on left: 153 154
        on right: 155 156
    enum_type_spec_field_cl <std::vector<pdm::ast::EnumTypeSpec::Field*>> (148)
        on left: 155 156
        on right: 156 157
    enum_type_spec <pdm::ast::TypeSpec*> (149)
        on left: 157
        on right: 143
    fn_type_spec <pdm::ast::FnTypeSpec*> (150)
        on left: 158
        on right: 89 144
    targ <pdm::ast::TArg*> (151)
        on left: 159 160
        on right: 161 162
    targ_cl <std::vector<pdm::ast::TArg*>> (152)
        on left: 161 162
        on right: 43 45 162
    varg <pdm::ast::VArg*> (153)
        on left: 163 164 165
        on right: 166 167
    varg_cl <std::vector<pdm::ast::VArg*>> (154)
        on left: 166 167
        on right: 95 167
    class_spec <pdm::ast::ClassSpec*> (155)
        on left: 168
        on right: 16 19 173 181
    primary_class_spec <pdm::ast::ClassSpec*> (156)
        on left: 169 170 171
        on right: 168
    mod_prefix_cid_class_spec <pdm::ast::ClassSpec*> (157)
        on left: 172
        on right: 170
    class_exp_class_spec <pdm::ast::ClassSpec*> (158)
        on left: 173
        on right: 171
    struct_exp_field <pdm::ast::StructExp::Field*> (159)
        on left: 174
        on right: 194 195
    vpattern_field <pdm::ast::VPattern::Field*> (160)
        on left: 175 176 177
        on right: 188 189
    lpattern_field <pdm::ast::LPattern::Field*> (161)
        on left: 178 179
        on right: 183 190 191
    tpattern_field <pdm::ast::TPattern::Field*> (162)
        on left: 180 181
        on right: 192 193
    destructured_lpattern <pdm::ast::LPattern*> (163)
        on left: 182
        on right: 184
    lpattern <pdm::ast::LPattern*> (164)
        on left: 183 184
        on right: 31 32 33
    vpattern <pdm::ast::VPattern*> (165)
        on left: 185 186
        on right: 18 158
    tpattern <pdm::ast::TPattern*> (166)
        on left: 187
        on right: 9 11
    vpattern_field_cl <std::vector<pdm::ast::VPattern::Field*>> (167)
        on left: 188 189
        on right: 185 189
    lpattern_field_cl <std::vector<pdm::ast::LPattern::Field*>> (168)
        on left: 190 191
        on right: 182 191
    tpattern_field_cl1 <std::vector<pdm::ast::TPattern::Field*>> (169)
        on left: 192 193
        on right: 187 193
    struct_exp_field_cl <std::vector<pdm::ast::StructExp::Field*>> (170)
        on left: 194 195
        on right: 65 195


State 0

    0 $accept: • script $end

    $default  reduce using rule 2 (script_header)

    script         go to state 1
    script_header  go to state 2


State 1

    0 $accept: script • $end

    $end  shift, and go to state 3


State 2

    1 script: script_header • script_field_sl
    3 script_header: script_header • script_header_stmt ";"

    "mod"      shift, and go to state 4
    "imports"  shift, and go to state 5

    script_header_stmt  go to state 6
    script_field        go to state 7
    script_field_sl     go to state 8
    import_stmt         go to state 9


State 3

    0 $accept: script $end •

    $default  accept


State 4

    5 script_field: "mod" • vid native_mod_exp

    "val_id"  shift, and go to state 10

    vid  go to state 11


State 5

   20 import_stmt: "imports" • "{" import_field_group_sl0 "}"

    "{"  shift, and go to state 12


State 6

    3 script_header: script_header script_header_stmt • ";"

    ";"  shift, and go to state 13


State 7

    6 script_field_sl: script_field • ";"

    ";"  shift, and go to state 14


State 8

    1 script: script_header script_field_sl •
    7 script_field_sl: script_field_sl • script_field ";"

    "mod"  shift, and go to state 4

    $default  reduce using rule 1 (script)

    script_field  go to state 15


State 9

    4 script_header_stmt: import_stmt •

    $default  reduce using rule 4 (script_header_stmt)


State 10

   37 vid: "val_id" •

    $default  reduce using rule 37 (vid)


State 11

    5 script_field: "mod" vid • native_mod_exp

    "["  shift, and go to state 16
    "{"  shift, and go to state 17

    native_mod_exp  go to state 18
    tpattern        go to state 19


State 12

   20 import_stmt: "imports" "{" • import_field_group_sl0 "}"

    $default  reduce using rule 21 (import_field_group_sl0)

    import_field_group_sl0  go to state 20


State 13

    3 script_header: script_header script_header_stmt ";" •

    $default  reduce using rule 3 (script_header)


State 14

    6 script_field_sl: script_field ";" •

    $default  reduce using rule 6 (script_field_sl)


State 15

    7 script_field_sl: script_field_sl script_field • ";"

    ";"  shift, and go to state 21


State 16

  187 tpattern: "[" • tpattern_field_cl1 "]"

    "val_id"  shift, and go to state 10
    "TypeId"  shift, and go to state 22

    tid                 go to state 23
    vid                 go to state 24
    tpattern_field      go to state 25
    tpattern_field_cl1  go to state 26


State 17

    8 native_mod_exp: "{" • mod_field_sl "}"
   10               | "{" • "}"

    "mod"  shift, and go to state 27
    "let"  shift, and go to state 28
    "}"    shift, and go to state 29

    mod_field_sl  go to state 30
    mod_field     go to state 31


State 18

    5 script_field: "mod" vid native_mod_exp •

    $default  reduce using rule 5 (script_field)


State 19

    9 native_mod_exp: tpattern • "{" mod_field_sl "}"
   11               | tpattern • "{" "}"

    "{"  shift, and go to state 32


State 20

   20 import_stmt: "imports" "{" import_field_group_sl0 • "}"
   22 import_field_group_sl0: import_field_group_sl0 • import_field_group ";"

    "val_id"  shift, and go to state 10
    "}"       shift, and go to state 33

    import_field_group  go to state 34
    import_field_cl1    go to state 35
    vid                 go to state 36


State 21

    7 script_field_sl: script_field_sl script_field ";" •

    $default  reduce using rule 7 (script_field_sl)


State 22

   36 tid: "TypeId" •

    $default  reduce using rule 36 (tid)


State 23

  181 tpattern_field: tid • class_spec

    "val_id"     shift, and go to state 10
    "CLS_ID"     shift, and go to state 37
    "typeclass"  shift, and go to state 38

    vid                        go to state 39
    cid                        go to state 40
    mod_prefix                 go to state 41
    class_spec                 go to state 42
    primary_class_spec         go to state 43
    mod_prefix_cid_class_spec  go to state 44
    class_exp_class_spec       go to state 45


State 24

  180 tpattern_field: vid • type_spec

    "val_id"        shift, and go to state 10
    "TypeId"        shift, and go to state 22
    "enum"          shift, and go to state 46
    "anonymous_fn"  shift, and go to state 47
    "["             shift, and go to state 48
    "{"             shift, and go to state 49

    tid               go to state 50
    vid               go to state 39
    mod_prefix        go to state 51
    type_spec         go to state 52
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 25

  192 tpattern_field_cl1: tpattern_field •

    $default  reduce using rule 192 (tpattern_field_cl1)


State 26

  187 tpattern: "[" tpattern_field_cl1 • "]"
  193 tpattern_field_cl1: tpattern_field_cl1 • "," tpattern_field

    ","  shift, and go to state 59
    "]"  shift, and go to state 60


State 27

   17 mod_field: "mod" • vid native_mod_exp

    "val_id"  shift, and go to state 10

    vid  go to state 61


State 28

   14 mod_field: "let" • vid "=" long_exp
   15          | "let" • tid "=" type_spec
   16          | "let" • cid "=" class_spec
   18          | "let" • vid vpattern type_spec "=" bracketed_exp
   19          | "let" • cid "(" tid class_spec ")" "=" "{" type_query_exp_sl0 "}"

    "val_id"  shift, and go to state 10
    "TypeId"  shift, and go to state 22
    "CLS_ID"  shift, and go to state 37

    tid  go to state 62
    vid  go to state 63
    cid  go to state 64


State 29

   10 native_mod_exp: "{" "}" •

    $default  reduce using rule 10 (native_mod_exp)


State 30

    8 native_mod_exp: "{" mod_field_sl • "}"
   13 mod_field_sl: mod_field_sl • mod_field ";"

    "mod"  shift, and go to state 27
    "let"  shift, and go to state 28
    "}"    shift, and go to state 65

    mod_field  go to state 66


State 31

   12 mod_field_sl: mod_field • ";"

    ";"  shift, and go to state 67


State 32

    9 native_mod_exp: tpattern "{" • mod_field_sl "}"
   11               | tpattern "{" • "}"

    "mod"  shift, and go to state 27
    "let"  shift, and go to state 28
    "}"    shift, and go to state 68

    mod_field_sl  go to state 69
    mod_field     go to state 31


State 33

   20 import_stmt: "imports" "{" import_field_group_sl0 "}" •

    $default  reduce using rule 20 (import_stmt)


State 34

   22 import_field_group_sl0: import_field_group_sl0 import_field_group • ";"

    ";"  shift, and go to state 70


State 35

   23 import_field_group: import_field_cl1 • "from" stringl
   25 import_field_cl1: import_field_cl1 • "," vid

    "from"  shift, and go to state 71
    ","     shift, and go to state 72


State 36

   24 import_field_cl1: vid •

    $default  reduce using rule 24 (import_field_cl1)


State 37

   38 cid: "CLS_ID" •

    $default  reduce using rule 38 (cid)


State 38

  173 class_exp_class_spec: "typeclass" • "(" tid class_spec ")" "{" type_query_exp_sl0 "}"

    "("  shift, and go to state 73


State 39

   42 mod_prefix: vid • ":"
   43           | vid • "[" targ_cl "]" ":"

    ":"  shift, and go to state 74
    "["  shift, and go to state 75


State 40

  169 primary_class_spec: cid •

    $default  reduce using rule 169 (primary_class_spec)


State 41

   44 mod_prefix: mod_prefix • vid ":"
   45           | mod_prefix • vid "[" targ_cl "]" ":"
  172 mod_prefix_cid_class_spec: mod_prefix • cid

    "val_id"  shift, and go to state 10
    "CLS_ID"  shift, and go to state 37

    vid  go to state 76
    cid  go to state 77


State 42

  181 tpattern_field: tid class_spec •

    $default  reduce using rule 181 (tpattern_field)


State 43

  168 class_spec: primary_class_spec •

    $default  reduce using rule 168 (class_spec)


State 44

  170 primary_class_spec: mod_prefix_cid_class_spec •

    $default  reduce using rule 170 (primary_class_spec)


State 45

  171 primary_class_spec: class_exp_class_spec •

    $default  reduce using rule 171 (primary_class_spec)


State 46

  157 enum_type_spec: "enum" • "{" enum_type_spec_field_cl "}"

    "{"  shift, and go to state 78


State 47

  158 fn_type_spec: "anonymous_fn" • vpattern type_spec

    "("  shift, and go to state 79

    vpattern  go to state 80


State 48

  148 array_type_spec: "[" • type_spec "^" expr "]"

    "val_id"        shift, and go to state 10
    "TypeId"        shift, and go to state 22
    "enum"          shift, and go to state 46
    "anonymous_fn"  shift, and go to state 47
    "["             shift, and go to state 48
    "{"             shift, and go to state 49

    tid               go to state 50
    vid               go to state 39
    mod_prefix        go to state 51
    type_spec         go to state 81
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 49

  146 tuple_type_spec: "{" • type_spec "}"
  147                | "{" • type_spec_cl2 "}"
  149 struct_type_spec: "{" • struct_type_spec_field_cl "}"

    "val_id"        shift, and go to state 10
    "TypeId"        shift, and go to state 22
    "enum"          shift, and go to state 46
    "anonymous_fn"  shift, and go to state 47
    "["             shift, and go to state 48
    "{"             shift, and go to state 49

    tid                        go to state 50
    vid                        go to state 82
    mod_prefix                 go to state 51
    type_spec_cl2              go to state 83
    type_spec                  go to state 84
    mod_prefix_tid             go to state 53
    tuple_type_spec            go to state 54
    array_type_spec            go to state 55
    struct_type_spec           go to state 56
    struct_type_spec_field_cl  go to state 85
    struct_type_spec_field     go to state 86
    enum_type_spec             go to state 57
    fn_type_spec               go to state 58


State 50

  138 type_spec: tid •

    $default  reduce using rule 138 (type_spec)


State 51

   44 mod_prefix: mod_prefix • vid ":"
   45           | mod_prefix • vid "[" targ_cl "]" ":"
  145 mod_prefix_tid: mod_prefix • tid

    "val_id"  shift, and go to state 10
    "TypeId"  shift, and go to state 22

    tid  go to state 87
    vid  go to state 76


State 52

  180 tpattern_field: vid type_spec •

    $default  reduce using rule 180 (tpattern_field)


State 53

  139 type_spec: mod_prefix_tid •

    $default  reduce using rule 139 (type_spec)


State 54

  140 type_spec: tuple_type_spec •

    $default  reduce using rule 140 (type_spec)


State 55

  141 type_spec: array_type_spec •

    $default  reduce using rule 141 (type_spec)


State 56

  142 type_spec: struct_type_spec •

    $default  reduce using rule 142 (type_spec)


State 57

  143 type_spec: enum_type_spec •

    $default  reduce using rule 143 (type_spec)


State 58

  144 type_spec: fn_type_spec •

    $default  reduce using rule 144 (type_spec)


State 59

  193 tpattern_field_cl1: tpattern_field_cl1 "," • tpattern_field

    "val_id"  shift, and go to state 10
    "TypeId"  shift, and go to state 22

    tid             go to state 23
    vid             go to state 24
    tpattern_field  go to state 88


State 60

  187 tpattern: "[" tpattern_field_cl1 "]" •

    $default  reduce using rule 187 (tpattern)


State 61

   17 mod_field: "mod" vid • native_mod_exp

    "["  shift, and go to state 16
    "{"  shift, and go to state 17

    native_mod_exp  go to state 89
    tpattern        go to state 19


State 62

   15 mod_field: "let" tid • "=" type_spec

    "="  shift, and go to state 90


State 63

   14 mod_field: "let" vid • "=" long_exp
   18          | "let" vid • vpattern type_spec "=" bracketed_exp

    "("  shift, and go to state 79
    "="  shift, and go to state 91

    vpattern  go to state 92


State 64

   16 mod_field: "let" cid • "=" class_spec
   19          | "let" cid • "(" tid class_spec ")" "=" "{" type_query_exp_sl0 "}"

    "("  shift, and go to state 93
    "="  shift, and go to state 94


State 65

    8 native_mod_exp: "{" mod_field_sl "}" •

    $default  reduce using rule 8 (native_mod_exp)


State 66

   13 mod_field_sl: mod_field_sl mod_field • ";"

    ";"  shift, and go to state 95


State 67

   12 mod_field_sl: mod_field ";" •

    $default  reduce using rule 12 (mod_field_sl)


State 68

   11 native_mod_exp: tpattern "{" "}" •

    $default  reduce using rule 11 (native_mod_exp)


State 69

    9 native_mod_exp: tpattern "{" mod_field_sl • "}"
   13 mod_field_sl: mod_field_sl • mod_field ";"

    "mod"  shift, and go to state 27
    "let"  shift, and go to state 28
    "}"    shift, and go to state 96

    mod_field  go to state 66


State 70

   22 import_field_group_sl0: import_field_group_sl0 import_field_group ";" •

    $default  reduce using rule 22 (import_field_group_sl0)


State 71

   23 import_field_group: import_field_cl1 "from" • stringl

    "\"dq-string-literal\""  shift, and go to state 97
    "'sq-string-literal'"    shift, and go to state 98

    stringl  go to state 99


State 72

   25 import_field_cl1: import_field_cl1 "," • vid

    "val_id"  shift, and go to state 10

    vid  go to state 100


State 73

  173 class_exp_class_spec: "typeclass" "(" • tid class_spec ")" "{" type_query_exp_sl0 "}"

    "TypeId"  shift, and go to state 22

    tid  go to state 101


State 74

   42 mod_prefix: vid ":" •

    $default  reduce using rule 42 (mod_prefix)


State 75

   43 mod_prefix: vid "[" • targ_cl "]" ":"

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 46
    "if"                     shift, and go to state 102
    "anonymous_fn"           shift, and go to state 47
    "not"                    shift, and go to state 103
    "42"                     shift, and go to state 104
    "0x2a"                   shift, and go to state 105
    "42u"                    shift, and go to state 106
    "0x2Au"                  shift, and go to state 107
    "4.2"                    shift, and go to state 108
    "\"dq-string-literal\""  shift, and go to state 109
    "'sq-string-literal'"    shift, and go to state 110
    "("                      shift, and go to state 111
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 112
    "+"                      shift, and go to state 113
    "-"                      shift, and go to state 114

    tid               go to state 50
    vid               go to state 115
    floatl            go to state 116
    mod_prefix        go to state 117
    expr              go to state 118
    bracketed_exp     go to state 119
    paren_exp         go to state 120
    vtupleExpr        go to state 121
    vstructExpr       go to state 122
    primary_exp       go to state 123
    int_expr          go to state 124
    stringls          go to state 125
    if_exp            go to state 126
    chain_exp         go to state 127
    postfix_exp       go to state 128
    vcall_exp         go to state 129
    dot_name_exp      go to state 130
    dot_index_exp     go to state 131
    unary_exp         go to state 132
    unary_op          go to state 133
    binary_exp        go to state 134
    mul_binary_exp    go to state 135
    add_binary_exp    go to state 136
    cmp_binary_exp    go to state 137
    eq_binary_exp     go to state 138
    and_binary_exp    go to state 139
    xor_binary_exp    go to state 140
    or_binary_exp     go to state 141
    type_spec         go to state 142
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58
    targ              go to state 143
    targ_cl           go to state 144


State 76

   44 mod_prefix: mod_prefix vid • ":"
   45           | mod_prefix vid • "[" targ_cl "]" ":"

    ":"  shift, and go to state 145
    "["  shift, and go to state 146


State 77

  172 mod_prefix_cid_class_spec: mod_prefix cid •

    $default  reduce using rule 172 (mod_prefix_cid_class_spec)


State 78

  157 enum_type_spec: "enum" "{" • enum_type_spec_field_cl "}"

    "TypeId"  shift, and go to state 22

    tid                      go to state 147
    enum_type_spec_field     go to state 148
    enum_type_spec_field_cl  go to state 149


State 79

  185 vpattern: "(" • vpattern_field_cl ")"
  186         | "(" • ")"

    "val_id"  shift, and go to state 10
    "out"     shift, and go to state 150
    "inout"   shift, and go to state 151
    ")"       shift, and go to state 152

    vid                go to state 153
    vpattern_field     go to state 154
    vpattern_field_cl  go to state 155


State 80

  158 fn_type_spec: "anonymous_fn" vpattern • type_spec

    "val_id"        shift, and go to state 10
    "TypeId"        shift, and go to state 22
    "enum"          shift, and go to state 46
    "anonymous_fn"  shift, and go to state 47
    "["             shift, and go to state 48
    "{"             shift, and go to state 49

    tid               go to state 50
    vid               go to state 39
    mod_prefix        go to state 51
    type_spec         go to state 156
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 81

  148 array_type_spec: "[" type_spec • "^" expr "]"

    "^"  shift, and go to state 157


State 82

   42 mod_prefix: vid • ":"
   43           | vid • "[" targ_cl "]" ":"
  152 struct_type_spec_field: vid • type_spec

    "val_id"        shift, and go to state 10
    "TypeId"        shift, and go to state 22
    "enum"          shift, and go to state 46
    "anonymous_fn"  shift, and go to state 47
    ":"             shift, and go to state 74
    "["             shift, and go to state 158
    "{"             shift, and go to state 49

    tid               go to state 50
    vid               go to state 39
    mod_prefix        go to state 51
    type_spec         go to state 159
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 83

  137 type_spec_cl2: type_spec_cl2 • "," type_spec
  147 tuple_type_spec: "{" type_spec_cl2 • "}"

    ","  shift, and go to state 160
    "}"  shift, and go to state 161


State 84

  136 type_spec_cl2: type_spec • "," type_spec
  146 tuple_type_spec: "{" type_spec • "}"

    ","  shift, and go to state 162
    "}"  shift, and go to state 163


State 85

  149 struct_type_spec: "{" struct_type_spec_field_cl • "}"
  151 struct_type_spec_field_cl: struct_type_spec_field_cl • "," struct_type_spec_field

    ","  shift, and go to state 164
    "}"  shift, and go to state 165


State 86

  150 struct_type_spec_field_cl: struct_type_spec_field •

    $default  reduce using rule 150 (struct_type_spec_field_cl)


State 87

  145 mod_prefix_tid: mod_prefix tid •

    $default  reduce using rule 145 (mod_prefix_tid)


State 88

  193 tpattern_field_cl1: tpattern_field_cl1 "," tpattern_field •

    $default  reduce using rule 193 (tpattern_field_cl1)


State 89

   17 mod_field: "mod" vid native_mod_exp •

    $default  reduce using rule 17 (mod_field)


State 90

   15 mod_field: "let" tid "=" • type_spec

    "val_id"        shift, and go to state 10
    "TypeId"        shift, and go to state 22
    "enum"          shift, and go to state 46
    "anonymous_fn"  shift, and go to state 47
    "["             shift, and go to state 48
    "{"             shift, and go to state 49

    tid               go to state 50
    vid               go to state 39
    mod_prefix        go to state 51
    type_spec         go to state 166
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 91

   14 mod_field: "let" vid "=" • long_exp

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 46
    "if"                     shift, and go to state 102
    "anonymous_fn"           shift, and go to state 47
    "not"                    shift, and go to state 103
    "42"                     shift, and go to state 104
    "0x2a"                   shift, and go to state 105
    "42u"                    shift, and go to state 106
    "0x2Au"                  shift, and go to state 107
    "4.2"                    shift, and go to state 108
    "\"dq-string-literal\""  shift, and go to state 109
    "'sq-string-literal'"    shift, and go to state 110
    "("                      shift, and go to state 111
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 112
    "+"                      shift, and go to state 113
    "-"                      shift, and go to state 114

    tid               go to state 50
    vid               go to state 115
    floatl            go to state 116
    mod_prefix        go to state 117
    expr              go to state 167
    long_exp          go to state 168
    bracketed_exp     go to state 119
    paren_exp         go to state 120
    vtupleExpr        go to state 121
    vstructExpr       go to state 122
    primary_exp       go to state 123
    int_expr          go to state 124
    stringls          go to state 125
    if_exp            go to state 126
    chain_exp         go to state 127
    lambda_exp        go to state 169
    postfix_exp       go to state 128
    vcall_exp         go to state 129
    dot_name_exp      go to state 130
    dot_index_exp     go to state 131
    unary_exp         go to state 132
    unary_op          go to state 133
    binary_exp        go to state 134
    mul_binary_exp    go to state 135
    add_binary_exp    go to state 136
    cmp_binary_exp    go to state 137
    eq_binary_exp     go to state 138
    and_binary_exp    go to state 139
    xor_binary_exp    go to state 140
    or_binary_exp     go to state 141
    type_spec         go to state 170
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 171


State 92

   18 mod_field: "let" vid vpattern • type_spec "=" bracketed_exp

    "val_id"        shift, and go to state 10
    "TypeId"        shift, and go to state 22
    "enum"          shift, and go to state 46
    "anonymous_fn"  shift, and go to state 47
    "["             shift, and go to state 48
    "{"             shift, and go to state 49

    tid               go to state 50
    vid               go to state 39
    mod_prefix        go to state 51
    type_spec         go to state 172
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 93

   19 mod_field: "let" cid "(" • tid class_spec ")" "=" "{" type_query_exp_sl0 "}"

    "TypeId"  shift, and go to state 22

    tid  go to state 173


State 94

   16 mod_field: "let" cid "=" • class_spec

    "val_id"     shift, and go to state 10
    "CLS_ID"     shift, and go to state 37
    "typeclass"  shift, and go to state 38

    vid                        go to state 39
    cid                        go to state 40
    mod_prefix                 go to state 41
    class_spec                 go to state 174
    primary_class_spec         go to state 43
    mod_prefix_cid_class_spec  go to state 44
    class_exp_class_spec       go to state 45


State 95

   13 mod_field_sl: mod_field_sl mod_field ";" •

    $default  reduce using rule 13 (mod_field_sl)


State 96

    9 native_mod_exp: tpattern "{" mod_field_sl "}" •

    $default  reduce using rule 9 (native_mod_exp)


State 97

   41 stringl: "\"dq-string-literal\"" •

    $default  reduce using rule 41 (stringl)


State 98

   40 stringl: "'sq-string-literal'" •

    $default  reduce using rule 40 (stringl)


State 99

   23 import_field_group: import_field_cl1 "from" stringl •

    $default  reduce using rule 23 (import_field_group)


State 100

   25 import_field_cl1: import_field_cl1 "," vid •

    $default  reduce using rule 25 (import_field_cl1)


State 101

  173 class_exp_class_spec: "typeclass" "(" tid • class_spec ")" "{" type_query_exp_sl0 "}"

    "val_id"     shift, and go to state 10
    "CLS_ID"     shift, and go to state 37
    "typeclass"  shift, and go to state 38

    vid                        go to state 39
    cid                        go to state 40
    mod_prefix                 go to state 41
    class_spec                 go to state 175
    primary_class_spec         go to state 43
    mod_prefix_cid_class_spec  go to state 44
    class_exp_class_spec       go to state 45


State 102

   81 if_exp: "if" • bracketed_exp bracketed_exp
   82       | "if" • bracketed_exp bracketed_exp "else" primary_exp

    "("  shift, and go to state 111
    "{"  shift, and go to state 176

    bracketed_exp  go to state 177
    paren_exp      go to state 120
    vtupleExpr     go to state 121
    vstructExpr    go to state 122
    chain_exp      go to state 127


State 103

  105 unary_op: "not" •

    $default  reduce using rule 105 (unary_op)


State 104

   73 int_expr: "42" •

    $default  reduce using rule 73 (int_expr)


State 105

   74 int_expr: "0x2a" •

    $default  reduce using rule 74 (int_expr)


State 106

   75 int_expr: "42u" •

    $default  reduce using rule 75 (int_expr)


State 107

   76 int_expr: "0x2Au" •

    $default  reduce using rule 76 (int_expr)


State 108

   39 floatl: "4.2" •

    $default  reduce using rule 39 (floatl)


State 109

   78 stringls: "\"dq-string-literal\"" •

    $default  reduce using rule 78 (stringls)


State 110

   77 stringls: "'sq-string-literal'" •

    $default  reduce using rule 77 (stringls)


State 111

   61 paren_exp: "(" • long_exp ")"
   62 vtupleExpr: "(" • ")"
   63           | "(" • expr "," ")"
   64           | "(" • expr_cl2 ")"

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 46
    "if"                     shift, and go to state 102
    "anonymous_fn"           shift, and go to state 47
    "not"                    shift, and go to state 103
    "42"                     shift, and go to state 104
    "0x2a"                   shift, and go to state 105
    "42u"                    shift, and go to state 106
    "0x2Au"                  shift, and go to state 107
    "4.2"                    shift, and go to state 108
    "\"dq-string-literal\""  shift, and go to state 109
    "'sq-string-literal'"    shift, and go to state 110
    "("                      shift, and go to state 111
    ")"                      shift, and go to state 178
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 112
    "+"                      shift, and go to state 113
    "-"                      shift, and go to state 114

    tid               go to state 50
    vid               go to state 115
    floatl            go to state 116
    mod_prefix        go to state 117
    expr              go to state 179
    long_exp          go to state 180
    expr_cl2          go to state 181
    bracketed_exp     go to state 119
    paren_exp         go to state 120
    vtupleExpr        go to state 121
    vstructExpr       go to state 122
    primary_exp       go to state 123
    int_expr          go to state 124
    stringls          go to state 125
    if_exp            go to state 126
    chain_exp         go to state 127
    lambda_exp        go to state 169
    postfix_exp       go to state 128
    vcall_exp         go to state 129
    dot_name_exp      go to state 130
    dot_index_exp     go to state 131
    unary_exp         go to state 132
    unary_op          go to state 133
    binary_exp        go to state 134
    mul_binary_exp    go to state 135
    add_binary_exp    go to state 136
    cmp_binary_exp    go to state 137
    eq_binary_exp     go to state 138
    and_binary_exp    go to state 139
    xor_binary_exp    go to state 140
    or_binary_exp     go to state 141
    type_spec         go to state 170
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 171


State 112

   65 vstructExpr: "{" • struct_exp_field_cl "}"
   83 chain_exp: "{" • "}"
   84          | "{" • long_exp "}"
   85          | "{" • chain_prefix "}"
   86          | "{" • chain_prefix long_exp "}"
  146 tuple_type_spec: "{" • type_spec "}"
  147                | "{" • type_spec_cl2 "}"
  149 struct_type_spec: "{" • struct_type_spec_field_cl "}"

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 46
    "if"                     shift, and go to state 102
    "const"                  shift, and go to state 182
    "val"                    shift, and go to state 183
    "var"                    shift, and go to state 184
    "set"                    shift, and go to state 185
    "anonymous_fn"           shift, and go to state 47
    "not"                    shift, and go to state 103
    "run"                    shift, and go to state 186
    "42"                     shift, and go to state 104
    "0x2a"                   shift, and go to state 105
    "42u"                    shift, and go to state 106
    "0x2Au"                  shift, and go to state 107
    "4.2"                    shift, and go to state 108
    "\"dq-string-literal\""  shift, and go to state 109
    "'sq-string-literal'"    shift, and go to state 110
    "("                      shift, and go to state 111
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 112
    "}"                      shift, and go to state 187
    "+"                      shift, and go to state 113
    "-"                      shift, and go to state 114

    chain_prefix_stmt          go to state 188
    const_stmt                 go to state 189
    val_stmt                   go to state 190
    var_stmt                   go to state 191
    set_stmt                   go to state 192
    discard_stmt               go to state 193
    tid                        go to state 50
    vid                        go to state 194
    floatl                     go to state 116
    mod_prefix                 go to state 117
    expr                       go to state 167
    long_exp                   go to state 195
    bracketed_exp              go to state 119
    paren_exp                  go to state 120
    vtupleExpr                 go to state 121
    vstructExpr                go to state 122
    primary_exp                go to state 123
    int_expr                   go to state 124
    stringls                   go to state 125
    if_exp                     go to state 126
    chain_exp                  go to state 127
    chain_prefix               go to state 196
    lambda_exp                 go to state 169
    postfix_exp                go to state 128
    vcall_exp                  go to state 129
    dot_name_exp               go to state 130
    dot_index_exp              go to state 131
    unary_exp                  go to state 132
    unary_op                   go to state 133
    binary_exp                 go to state 134
    mul_binary_exp             go to state 135
    add_binary_exp             go to state 136
    cmp_binary_exp             go to state 137
    eq_binary_exp              go to state 138
    and_binary_exp             go to state 139
    xor_binary_exp             go to state 140
    or_binary_exp              go to state 141
    type_spec_cl2              go to state 83
    type_spec                  go to state 197
    mod_prefix_tid             go to state 53
    tuple_type_spec            go to state 54
    array_type_spec            go to state 55
    struct_type_spec           go to state 56
    struct_type_spec_field_cl  go to state 85
    struct_type_spec_field     go to state 86
    enum_type_spec             go to state 57
    fn_type_spec               go to state 171
    struct_exp_field           go to state 198
    struct_exp_field_cl        go to state 199


State 113

  103 unary_op: "+" •

    $default  reduce using rule 103 (unary_op)


State 114

  104 unary_op: "-" •

    $default  reduce using rule 104 (unary_op)


State 115

   42 mod_prefix: vid • ":"
   43           | vid • "[" targ_cl "]" ":"
   67 primary_exp: vid •

    ":"  shift, and go to state 74
    "["  shift, and go to state 75

    $default  reduce using rule 67 (primary_exp)


State 116

   69 primary_exp: floatl •

    $default  reduce using rule 69 (primary_exp)


State 117

   44 mod_prefix: mod_prefix • vid ":"
   45           | mod_prefix • vid "[" targ_cl "]" ":"
   72 primary_exp: mod_prefix • vid
  145 mod_prefix_tid: mod_prefix • tid

    "val_id"  shift, and go to state 10
    "TypeId"  shift, and go to state 22

    tid  go to state 87
    vid  go to state 200


State 118

  160 targ: expr •

    $default  reduce using rule 160 (targ)


State 119

   66 primary_exp: bracketed_exp •

    $default  reduce using rule 66 (primary_exp)


State 120

   57 bracketed_exp: paren_exp •

    $default  reduce using rule 57 (bracketed_exp)


State 121

   58 bracketed_exp: vtupleExpr •

    $default  reduce using rule 58 (bracketed_exp)


State 122

   59 bracketed_exp: vstructExpr •

    $default  reduce using rule 59 (bracketed_exp)


State 123

   90 postfix_exp: primary_exp •

    $default  reduce using rule 90 (postfix_exp)


State 124

   68 primary_exp: int_expr •

    $default  reduce using rule 68 (primary_exp)


State 125

   70 primary_exp: stringls •
   79 stringls: stringls • "'sq-string-literal'"
   80         | stringls • "\"dq-string-literal\""

    "\"dq-string-literal\""  shift, and go to state 201
    "'sq-string-literal'"    shift, and go to state 202

    $default  reduce using rule 70 (primary_exp)


State 126

   71 primary_exp: if_exp •

    $default  reduce using rule 71 (primary_exp)


State 127

   60 bracketed_exp: chain_exp •

    $default  reduce using rule 60 (bracketed_exp)


State 128

   94 vcall_exp: postfix_exp • "(" ")"
   95          | postfix_exp • "(" varg_cl ")"
   96 dot_name_exp: postfix_exp • "." "val_id"
   99 dot_index_exp: postfix_exp • "." int_expr
  100              | postfix_exp • "." bracketed_exp
  101 unary_exp: postfix_exp •

    "."  shift, and go to state 203
    "("  shift, and go to state 204

    $default  reduce using rule 101 (unary_exp)


State 129

   91 postfix_exp: vcall_exp •

    $default  reduce using rule 91 (postfix_exp)


State 130

   92 postfix_exp: dot_name_exp •

    $default  reduce using rule 92 (postfix_exp)


State 131

   93 postfix_exp: dot_index_exp •

    $default  reduce using rule 93 (postfix_exp)


State 132

  110 mul_binary_exp: unary_exp •

    $default  reduce using rule 110 (mul_binary_exp)


State 133

  102 unary_exp: unary_op • unary_exp

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 46
    "if"                     shift, and go to state 102
    "anonymous_fn"           shift, and go to state 47
    "not"                    shift, and go to state 103
    "42"                     shift, and go to state 104
    "0x2a"                   shift, and go to state 105
    "42u"                    shift, and go to state 106
    "0x2Au"                  shift, and go to state 107
    "4.2"                    shift, and go to state 108
    "\"dq-string-literal\""  shift, and go to state 109
    "'sq-string-literal'"    shift, and go to state 110
    "("                      shift, and go to state 111
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 112
    "+"                      shift, and go to state 113
    "-"                      shift, and go to state 114

    tid               go to state 50
    vid               go to state 115
    floatl            go to state 116
    mod_prefix        go to state 117
    bracketed_exp     go to state 119
    paren_exp         go to state 120
    vtupleExpr        go to state 121
    vstructExpr       go to state 122
    primary_exp       go to state 123
    int_expr          go to state 124
    stringls          go to state 125
    if_exp            go to state 126
    chain_exp         go to state 127
    postfix_exp       go to state 128
    vcall_exp         go to state 129
    dot_name_exp      go to state 130
    dot_index_exp     go to state 131
    unary_exp         go to state 205
    unary_op          go to state 133
    type_spec         go to state 170
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 134

   50 expr: binary_exp •

    $default  reduce using rule 50 (expr)


State 135

  111 mul_binary_exp: mul_binary_exp • mul_binary_op unary_exp
  114 add_binary_exp: mul_binary_exp •

    "*"  shift, and go to state 206
    "/"  shift, and go to state 207
    "%"  shift, and go to state 208

    $default  reduce using rule 114 (add_binary_exp)

    mul_binary_op  go to state 209


State 136

  115 add_binary_exp: add_binary_exp • add_binary_op mul_binary_exp
  120 cmp_binary_exp: add_binary_exp •

    "+"  shift, and go to state 210
    "-"  shift, and go to state 211

    $default  reduce using rule 120 (cmp_binary_exp)

    add_binary_op  go to state 212


State 137

  121 cmp_binary_exp: cmp_binary_exp • cmp_binary_op add_binary_exp
  124 eq_binary_exp: cmp_binary_exp •

    "<"   shift, and go to state 213
    "<="  shift, and go to state 214
    ">"   shift, and go to state 215
    ">="  shift, and go to state 216

    $default  reduce using rule 124 (eq_binary_exp)

    cmp_binary_op  go to state 217


State 138

  125 eq_binary_exp: eq_binary_exp • eq_binary_op cmp_binary_exp
  126 and_binary_exp: eq_binary_exp •

    "=="  shift, and go to state 218
    "!="  shift, and go to state 219

    $default  reduce using rule 126 (and_binary_exp)

    eq_binary_op  go to state 220


State 139

  127 and_binary_exp: and_binary_exp • "and" eq_binary_exp
  128 xor_binary_exp: and_binary_exp •

    "and"  shift, and go to state 221

    $default  reduce using rule 128 (xor_binary_exp)


State 140

  129 xor_binary_exp: xor_binary_exp • "xor" and_binary_exp
  130 or_binary_exp: xor_binary_exp •

    "xor"  shift, and go to state 222

    $default  reduce using rule 130 (or_binary_exp)


State 141

  106 binary_exp: or_binary_exp •
  131 or_binary_exp: or_binary_exp • "or" xor_binary_exp

    "or"  shift, and go to state 223

    $default  reduce using rule 106 (binary_exp)


State 142

   97 dot_name_exp: type_spec • "::" "TypeId"
   98             | type_spec • "::" "TypeId" "using" paren_exp
  159 targ: type_spec •

    "::"  shift, and go to state 224

    $default  reduce using rule 159 (targ)


State 143

  161 targ_cl: targ •

    $default  reduce using rule 161 (targ_cl)


State 144

   43 mod_prefix: vid "[" targ_cl • "]" ":"
  162 targ_cl: targ_cl • "," targ

    ","  shift, and go to state 225
    "]"  shift, and go to state 226


State 145

   44 mod_prefix: mod_prefix vid ":" •

    $default  reduce using rule 44 (mod_prefix)


State 146

   45 mod_prefix: mod_prefix vid "[" • targ_cl "]" ":"

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 46
    "if"                     shift, and go to state 102
    "anonymous_fn"           shift, and go to state 47
    "not"                    shift, and go to state 103
    "42"                     shift, and go to state 104
    "0x2a"                   shift, and go to state 105
    "42u"                    shift, and go to state 106
    "0x2Au"                  shift, and go to state 107
    "4.2"                    shift, and go to state 108
    "\"dq-string-literal\""  shift, and go to state 109
    "'sq-string-literal'"    shift, and go to state 110
    "("                      shift, and go to state 111
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 112
    "+"                      shift, and go to state 113
    "-"                      shift, and go to state 114

    tid               go to state 50
    vid               go to state 115
    floatl            go to state 116
    mod_prefix        go to state 117
    expr              go to state 118
    bracketed_exp     go to state 119
    paren_exp         go to state 120
    vtupleExpr        go to state 121
    vstructExpr       go to state 122
    primary_exp       go to state 123
    int_expr          go to state 124
    stringls          go to state 125
    if_exp            go to state 126
    chain_exp         go to state 127
    postfix_exp       go to state 128
    vcall_exp         go to state 129
    dot_name_exp      go to state 130
    dot_index_exp     go to state 131
    unary_exp         go to state 132
    unary_op          go to state 133
    binary_exp        go to state 134
    mul_binary_exp    go to state 135
    add_binary_exp    go to state 136
    cmp_binary_exp    go to state 137
    eq_binary_exp     go to state 138
    and_binary_exp    go to state 139
    xor_binary_exp    go to state 140
    or_binary_exp     go to state 141
    type_spec         go to state 142
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58
    targ              go to state 143
    targ_cl           go to state 227


State 147

  153 enum_type_spec_field: tid •
  154                     | tid • type_spec

    "val_id"        shift, and go to state 10
    "TypeId"        shift, and go to state 22
    "enum"          shift, and go to state 46
    "anonymous_fn"  shift, and go to state 47
    "["             shift, and go to state 48
    "{"             shift, and go to state 49

    $default  reduce using rule 153 (enum_type_spec_field)

    tid               go to state 50
    vid               go to state 39
    mod_prefix        go to state 51
    type_spec         go to state 228
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 148

  155 enum_type_spec_field_cl: enum_type_spec_field •

    $default  reduce using rule 155 (enum_type_spec_field_cl)


State 149

  156 enum_type_spec_field_cl: enum_type_spec_field_cl • "," enum_type_spec_field
  157 enum_type_spec: "enum" "{" enum_type_spec_field_cl • "}"

    ","  shift, and go to state 229
    "}"  shift, and go to state 230


State 150

  176 vpattern_field: "out" • vid type_spec

    "val_id"  shift, and go to state 10

    vid  go to state 231


State 151

  177 vpattern_field: "inout" • vid type_spec

    "val_id"  shift, and go to state 10

    vid  go to state 232


State 152

  186 vpattern: "(" ")" •

    $default  reduce using rule 186 (vpattern)


State 153

  175 vpattern_field: vid • type_spec

    "val_id"        shift, and go to state 10
    "TypeId"        shift, and go to state 22
    "enum"          shift, and go to state 46
    "anonymous_fn"  shift, and go to state 47
    "["             shift, and go to state 48
    "{"             shift, and go to state 49

    tid               go to state 50
    vid               go to state 39
    mod_prefix        go to state 51
    type_spec         go to state 233
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 154

  188 vpattern_field_cl: vpattern_field •

    $default  reduce using rule 188 (vpattern_field_cl)


State 155

  185 vpattern: "(" vpattern_field_cl • ")"
  189 vpattern_field_cl: vpattern_field_cl • "," vpattern_field

    ","  shift, and go to state 234
    ")"  shift, and go to state 235


State 156

  158 fn_type_spec: "anonymous_fn" vpattern type_spec •

    $default  reduce using rule 158 (fn_type_spec)


State 157

  148 array_type_spec: "[" type_spec "^" • expr "]"

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 46
    "if"                     shift, and go to state 102
    "anonymous_fn"           shift, and go to state 47
    "not"                    shift, and go to state 103
    "42"                     shift, and go to state 104
    "0x2a"                   shift, and go to state 105
    "42u"                    shift, and go to state 106
    "0x2Au"                  shift, and go to state 107
    "4.2"                    shift, and go to state 108
    "\"dq-string-literal\""  shift, and go to state 109
    "'sq-string-literal'"    shift, and go to state 110
    "("                      shift, and go to state 111
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 112
    "+"                      shift, and go to state 113
    "-"                      shift, and go to state 114

    tid               go to state 50
    vid               go to state 115
    floatl            go to state 116
    mod_prefix        go to state 117
    expr              go to state 236
    bracketed_exp     go to state 119
    paren_exp         go to state 120
    vtupleExpr        go to state 121
    vstructExpr       go to state 122
    primary_exp       go to state 123
    int_expr          go to state 124
    stringls          go to state 125
    if_exp            go to state 126
    chain_exp         go to state 127
    postfix_exp       go to state 128
    vcall_exp         go to state 129
    dot_name_exp      go to state 130
    dot_index_exp     go to state 131
    unary_exp         go to state 132
    unary_op          go to state 133
    binary_exp        go to state 134
    mul_binary_exp    go to state 135
    add_binary_exp    go to state 136
    cmp_binary_exp    go to state 137
    eq_binary_exp     go to state 138
    and_binary_exp    go to state 139
    xor_binary_exp    go to state 140
    or_binary_exp     go to state 141
    type_spec         go to state 170
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 158

   43 mod_prefix: vid "[" • targ_cl "]" ":"
  148 array_type_spec: "[" • type_spec "^" expr "]"

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 46
    "if"                     shift, and go to state 102
    "anonymous_fn"           shift, and go to state 47
    "not"                    shift, and go to state 103
    "42"                     shift, and go to state 104
    "0x2a"                   shift, and go to state 105
    "42u"                    shift, and go to state 106
    "0x2Au"                  shift, and go to state 107
    "4.2"                    shift, and go to state 108
    "\"dq-string-literal\""  shift, and go to state 109
    "'sq-string-literal'"    shift, and go to state 110
    "("                      shift, and go to state 111
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 112
    "+"                      shift, and go to state 113
    "-"                      shift, and go to state 114

    tid               go to state 50
    vid               go to state 115
    floatl            go to state 116
    mod_prefix        go to state 117
    expr              go to state 118
    bracketed_exp     go to state 119
    paren_exp         go to state 120
    vtupleExpr        go to state 121
    vstructExpr       go to state 122
    primary_exp       go to state 123
    int_expr          go to state 124
    stringls          go to state 125
    if_exp            go to state 126
    chain_exp         go to state 127
    postfix_exp       go to state 128
    vcall_exp         go to state 129
    dot_name_exp      go to state 130
    dot_index_exp     go to state 131
    unary_exp         go to state 132
    unary_op          go to state 133
    binary_exp        go to state 134
    mul_binary_exp    go to state 135
    add_binary_exp    go to state 136
    cmp_binary_exp    go to state 137
    eq_binary_exp     go to state 138
    and_binary_exp    go to state 139
    xor_binary_exp    go to state 140
    or_binary_exp     go to state 141
    type_spec         go to state 237
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58
    targ              go to state 143
    targ_cl           go to state 144


State 159

  152 struct_type_spec_field: vid type_spec •

    $default  reduce using rule 152 (struct_type_spec_field)


State 160

  137 type_spec_cl2: type_spec_cl2 "," • type_spec

    "val_id"        shift, and go to state 10
    "TypeId"        shift, and go to state 22
    "enum"          shift, and go to state 46
    "anonymous_fn"  shift, and go to state 47
    "["             shift, and go to state 48
    "{"             shift, and go to state 49

    tid               go to state 50
    vid               go to state 39
    mod_prefix        go to state 51
    type_spec         go to state 238
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 161

  147 tuple_type_spec: "{" type_spec_cl2 "}" •

    $default  reduce using rule 147 (tuple_type_spec)


State 162

  136 type_spec_cl2: type_spec "," • type_spec

    "val_id"        shift, and go to state 10
    "TypeId"        shift, and go to state 22
    "enum"          shift, and go to state 46
    "anonymous_fn"  shift, and go to state 47
    "["             shift, and go to state 48
    "{"             shift, and go to state 49

    tid               go to state 50
    vid               go to state 39
    mod_prefix        go to state 51
    type_spec         go to state 239
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 163

  146 tuple_type_spec: "{" type_spec "}" •

    $default  reduce using rule 146 (tuple_type_spec)


State 164

  151 struct_type_spec_field_cl: struct_type_spec_field_cl "," • struct_type_spec_field

    "val_id"  shift, and go to state 10

    vid                     go to state 240
    struct_type_spec_field  go to state 241


State 165

  149 struct_type_spec: "{" struct_type_spec_field_cl "}" •

    $default  reduce using rule 149 (struct_type_spec)


State 166

   15 mod_field: "let" tid "=" type_spec •

    $default  reduce using rule 15 (mod_field)


State 167

   51 long_exp: expr •

    $default  reduce using rule 51 (long_exp)


State 168

   14 mod_field: "let" vid "=" long_exp •

    $default  reduce using rule 14 (mod_field)


State 169

   52 long_exp: lambda_exp •

    $default  reduce using rule 52 (long_exp)


State 170

   97 dot_name_exp: type_spec • "::" "TypeId"
   98             | type_spec • "::" "TypeId" "using" paren_exp

    "::"  shift, and go to state 224


State 171

   89 lambda_exp: fn_type_spec • bracketed_exp
  144 type_spec: fn_type_spec •

    "("  shift, and go to state 111
    "{"  shift, and go to state 176

    $default  reduce using rule 144 (type_spec)

    bracketed_exp  go to state 242
    paren_exp      go to state 120
    vtupleExpr     go to state 121
    vstructExpr    go to state 122
    chain_exp      go to state 127


State 172

   18 mod_field: "let" vid vpattern type_spec • "=" bracketed_exp

    "="  shift, and go to state 243


State 173

   19 mod_field: "let" cid "(" tid • class_spec ")" "=" "{" type_query_exp_sl0 "}"

    "val_id"     shift, and go to state 10
    "CLS_ID"     shift, and go to state 37
    "typeclass"  shift, and go to state 38

    vid                        go to state 39
    cid                        go to state 40
    mod_prefix                 go to state 41
    class_spec                 go to state 244
    primary_class_spec         go to state 43
    mod_prefix_cid_class_spec  go to state 44
    class_exp_class_spec       go to state 45


State 174

   16 mod_field: "let" cid "=" class_spec •

    $default  reduce using rule 16 (mod_field)


State 175

  173 class_exp_class_spec: "typeclass" "(" tid class_spec • ")" "{" type_query_exp_sl0 "}"

    ")"  shift, and go to state 245


State 176

   65 vstructExpr: "{" • struct_exp_field_cl "}"
   83 chain_exp: "{" • "}"
   84          | "{" • long_exp "}"
   85          | "{" • chain_prefix "}"
   86          | "{" • chain_prefix long_exp "}"

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 46
    "if"                     shift, and go to state 102
    "const"                  shift, and go to state 182
    "val"                    shift, and go to state 183
    "var"                    shift, and go to state 184
    "set"                    shift, and go to state 185
    "anonymous_fn"           shift, and go to state 47
    "not"                    shift, and go to state 103
    "run"                    shift, and go to state 186
    "42"                     shift, and go to state 104
    "0x2a"                   shift, and go to state 105
    "42u"                    shift, and go to state 106
    "0x2Au"                  shift, and go to state 107
    "4.2"                    shift, and go to state 108
    "\"dq-string-literal\""  shift, and go to state 109
    "'sq-string-literal'"    shift, and go to state 110
    "("                      shift, and go to state 111
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 112
    "}"                      shift, and go to state 187
    "+"                      shift, and go to state 113
    "-"                      shift, and go to state 114

    chain_prefix_stmt    go to state 188
    const_stmt           go to state 189
    val_stmt             go to state 190
    var_stmt             go to state 191
    set_stmt             go to state 192
    discard_stmt         go to state 193
    tid                  go to state 50
    vid                  go to state 246
    floatl               go to state 116
    mod_prefix           go to state 117
    expr                 go to state 167
    long_exp             go to state 195
    bracketed_exp        go to state 119
    paren_exp            go to state 120
    vtupleExpr           go to state 121
    vstructExpr          go to state 122
    primary_exp          go to state 123
    int_expr             go to state 124
    stringls             go to state 125
    if_exp               go to state 126
    chain_exp            go to state 127
    chain_prefix         go to state 196
    lambda_exp           go to state 169
    postfix_exp          go to state 128
    vcall_exp            go to state 129
    dot_name_exp         go to state 130
    dot_index_exp        go to state 131
    unary_exp            go to state 132
    unary_op             go to state 133
    binary_exp           go to state 134
    mul_binary_exp       go to state 135
    add_binary_exp       go to state 136
    cmp_binary_exp       go to state 137
    eq_binary_exp        go to state 138
    and_binary_exp       go to state 139
    xor_binary_exp       go to state 140
    or_binary_exp        go to state 141
    type_spec            go to state 170
    mod_prefix_tid       go to state 53
    tuple_type_spec      go to state 54
    array_type_spec      go to state 55
    struct_type_spec     go to state 56
    enum_type_spec       go to state 57
    fn_type_spec         go to state 171
    struct_exp_field     go to state 198
    struct_exp_field_cl  go to state 199


State 177

   81 if_exp: "if" bracketed_exp • bracketed_exp
   82       | "if" bracketed_exp • bracketed_exp "else" primary_exp

    "("  shift, and go to state 111
    "{"  shift, and go to state 176

    bracketed_exp  go to state 247
    paren_exp      go to state 120
    vtupleExpr     go to state 121
    vstructExpr    go to state 122
    chain_exp      go to state 127


State 178

   62 vtupleExpr: "(" ")" •

    $default  reduce using rule 62 (vtupleExpr)


State 179

   51 long_exp: expr •
   53 expr_cl2: expr • "," expr
   63 vtupleExpr: "(" expr • "," ")"

    ","  shift, and go to state 248

    $default  reduce using rule 51 (long_exp)


State 180

   61 paren_exp: "(" long_exp • ")"

    ")"  shift, and go to state 249


State 181

   54 expr_cl2: expr_cl2 • "," expr
   64 vtupleExpr: "(" expr_cl2 • ")"

    ","  shift, and go to state 250
    ")"  shift, and go to state 251


State 182

   31 const_stmt: "const" • lpattern "=" expr

    "val_id"  shift, and go to state 10
    "{"       shift, and go to state 252

    vid                    go to state 253
    lpattern_field         go to state 254
    destructured_lpattern  go to state 255
    lpattern               go to state 256


State 183

   32 val_stmt: "val" • lpattern "=" expr

    "val_id"  shift, and go to state 10
    "{"       shift, and go to state 252

    vid                    go to state 253
    lpattern_field         go to state 254
    destructured_lpattern  go to state 255
    lpattern               go to state 257


State 184

   33 var_stmt: "var" • lpattern "=" expr

    "val_id"  shift, and go to state 10
    "{"       shift, and go to state 252

    vid                    go to state 253
    lpattern_field         go to state 254
    destructured_lpattern  go to state 255
    lpattern               go to state 258


State 185

   34 set_stmt: "set" • mut_expr "=" expr

    "val_id"  shift, and go to state 10
    "("       shift, and go to state 259

    vid       go to state 260
    mut_expr  go to state 261


State 186

   35 discard_stmt: "run" • expr

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 46
    "if"                     shift, and go to state 102
    "anonymous_fn"           shift, and go to state 47
    "not"                    shift, and go to state 103
    "42"                     shift, and go to state 104
    "0x2a"                   shift, and go to state 105
    "42u"                    shift, and go to state 106
    "0x2Au"                  shift, and go to state 107
    "4.2"                    shift, and go to state 108
    "\"dq-string-literal\""  shift, and go to state 109
    "'sq-string-literal'"    shift, and go to state 110
    "("                      shift, and go to state 111
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 112
    "+"                      shift, and go to state 113
    "-"                      shift, and go to state 114

    tid               go to state 50
    vid               go to state 115
    floatl            go to state 116
    mod_prefix        go to state 117
    expr              go to state 262
    bracketed_exp     go to state 119
    paren_exp         go to state 120
    vtupleExpr        go to state 121
    vstructExpr       go to state 122
    primary_exp       go to state 123
    int_expr          go to state 124
    stringls          go to state 125
    if_exp            go to state 126
    chain_exp         go to state 127
    postfix_exp       go to state 128
    vcall_exp         go to state 129
    dot_name_exp      go to state 130
    dot_index_exp     go to state 131
    unary_exp         go to state 132
    unary_op          go to state 133
    binary_exp        go to state 134
    mul_binary_exp    go to state 135
    add_binary_exp    go to state 136
    cmp_binary_exp    go to state 137
    eq_binary_exp     go to state 138
    and_binary_exp    go to state 139
    xor_binary_exp    go to state 140
    or_binary_exp     go to state 141
    type_spec         go to state 170
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 187

   83 chain_exp: "{" "}" •

    $default  reduce using rule 83 (chain_exp)


State 188

   87 chain_prefix: chain_prefix_stmt • ";"

    ";"  shift, and go to state 263


State 189

   26 chain_prefix_stmt: const_stmt •

    $default  reduce using rule 26 (chain_prefix_stmt)


State 190

   27 chain_prefix_stmt: val_stmt •

    $default  reduce using rule 27 (chain_prefix_stmt)


State 191

   28 chain_prefix_stmt: var_stmt •

    $default  reduce using rule 28 (chain_prefix_stmt)


State 192

   29 chain_prefix_stmt: set_stmt •

    $default  reduce using rule 29 (chain_prefix_stmt)


State 193

   30 chain_prefix_stmt: discard_stmt •

    $default  reduce using rule 30 (chain_prefix_stmt)


State 194

   42 mod_prefix: vid • ":"
   43           | vid • "[" targ_cl "]" ":"
   67 primary_exp: vid •
  152 struct_type_spec_field: vid • type_spec
  174 struct_exp_field: vid • "=" expr

    "val_id"        shift, and go to state 10
    "TypeId"        shift, and go to state 22
    "enum"          shift, and go to state 46
    "anonymous_fn"  shift, and go to state 47
    ":"             shift, and go to state 74
    "["             shift, and go to state 158
    "{"             shift, and go to state 49
    "="             shift, and go to state 264

    $default  reduce using rule 67 (primary_exp)

    tid               go to state 50
    vid               go to state 39
    mod_prefix        go to state 51
    type_spec         go to state 159
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 195

   84 chain_exp: "{" long_exp • "}"

    "}"  shift, and go to state 265


State 196

   85 chain_exp: "{" chain_prefix • "}"
   86          | "{" chain_prefix • long_exp "}"
   88 chain_prefix: chain_prefix • chain_prefix_stmt ";"

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 46
    "if"                     shift, and go to state 102
    "const"                  shift, and go to state 182
    "val"                    shift, and go to state 183
    "var"                    shift, and go to state 184
    "set"                    shift, and go to state 185
    "anonymous_fn"           shift, and go to state 47
    "not"                    shift, and go to state 103
    "run"                    shift, and go to state 186
    "42"                     shift, and go to state 104
    "0x2a"                   shift, and go to state 105
    "42u"                    shift, and go to state 106
    "0x2Au"                  shift, and go to state 107
    "4.2"                    shift, and go to state 108
    "\"dq-string-literal\""  shift, and go to state 109
    "'sq-string-literal'"    shift, and go to state 110
    "("                      shift, and go to state 111
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 112
    "}"                      shift, and go to state 266
    "+"                      shift, and go to state 113
    "-"                      shift, and go to state 114

    chain_prefix_stmt  go to state 267
    const_stmt         go to state 189
    val_stmt           go to state 190
    var_stmt           go to state 191
    set_stmt           go to state 192
    discard_stmt       go to state 193
    tid                go to state 50
    vid                go to state 115
    floatl             go to state 116
    mod_prefix         go to state 117
    expr               go to state 167
    long_exp           go to state 268
    bracketed_exp      go to state 119
    paren_exp          go to state 120
    vtupleExpr         go to state 121
    vstructExpr        go to state 122
    primary_exp        go to state 123
    int_expr           go to state 124
    stringls           go to state 125
    if_exp             go to state 126
    chain_exp          go to state 127
    lambda_exp         go to state 169
    postfix_exp        go to state 128
    vcall_exp          go to state 129
    dot_name_exp       go to state 130
    dot_index_exp      go to state 131
    unary_exp          go to state 132
    unary_op           go to state 133
    binary_exp         go to state 134
    mul_binary_exp     go to state 135
    add_binary_exp     go to state 136
    cmp_binary_exp     go to state 137
    eq_binary_exp      go to state 138
    and_binary_exp     go to state 139
    xor_binary_exp     go to state 140
    or_binary_exp      go to state 141
    type_spec          go to state 170
    mod_prefix_tid     go to state 53
    tuple_type_spec    go to state 54
    array_type_spec    go to state 55
    struct_type_spec   go to state 56
    enum_type_spec     go to state 57
    fn_type_spec       go to state 171


State 197

   97 dot_name_exp: type_spec • "::" "TypeId"
   98             | type_spec • "::" "TypeId" "using" paren_exp
  136 type_spec_cl2: type_spec • "," type_spec
  146 tuple_type_spec: "{" type_spec • "}"

    ","   shift, and go to state 162
    "::"  shift, and go to state 224
    "}"   shift, and go to state 163


State 198

  194 struct_exp_field_cl: struct_exp_field •

    $default  reduce using rule 194 (struct_exp_field_cl)


State 199

   65 vstructExpr: "{" struct_exp_field_cl • "}"
  195 struct_exp_field_cl: struct_exp_field_cl • "," struct_exp_field

    ","  shift, and go to state 269
    "}"  shift, and go to state 270


State 200

   44 mod_prefix: mod_prefix vid • ":"
   45           | mod_prefix vid • "[" targ_cl "]" ":"
   72 primary_exp: mod_prefix vid •

    ":"  shift, and go to state 145
    "["  shift, and go to state 146

    $default  reduce using rule 72 (primary_exp)


State 201

   80 stringls: stringls "\"dq-string-literal\"" •

    $default  reduce using rule 80 (stringls)


State 202

   79 stringls: stringls "'sq-string-literal'" •

    $default  reduce using rule 79 (stringls)


State 203

   96 dot_name_exp: postfix_exp "." • "val_id"
   99 dot_index_exp: postfix_exp "." • int_expr
  100              | postfix_exp "." • bracketed_exp

    "val_id"  shift, and go to state 271
    "42"      shift, and go to state 104
    "0x2a"    shift, and go to state 105
    "42u"     shift, and go to state 106
    "0x2Au"   shift, and go to state 107
    "("       shift, and go to state 111
    "{"       shift, and go to state 176

    bracketed_exp  go to state 272
    paren_exp      go to state 120
    vtupleExpr     go to state 121
    vstructExpr    go to state 122
    int_expr       go to state 273
    chain_exp      go to state 127


State 204

   94 vcall_exp: postfix_exp "(" • ")"
   95          | postfix_exp "(" • varg_cl ")"

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 46
    "if"                     shift, and go to state 102
    "anonymous_fn"           shift, and go to state 47
    "not"                    shift, and go to state 103
    "out"                    shift, and go to state 274
    "inout"                  shift, and go to state 275
    "42"                     shift, and go to state 104
    "0x2a"                   shift, and go to state 105
    "42u"                    shift, and go to state 106
    "0x2Au"                  shift, and go to state 107
    "4.2"                    shift, and go to state 108
    "\"dq-string-literal\""  shift, and go to state 109
    "'sq-string-literal'"    shift, and go to state 110
    "("                      shift, and go to state 111
    ")"                      shift, and go to state 276
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 112
    "+"                      shift, and go to state 113
    "-"                      shift, and go to state 114

    tid               go to state 50
    vid               go to state 115
    floatl            go to state 116
    mod_prefix        go to state 117
    expr              go to state 277
    bracketed_exp     go to state 119
    paren_exp         go to state 120
    vtupleExpr        go to state 121
    vstructExpr       go to state 122
    primary_exp       go to state 123
    int_expr          go to state 124
    stringls          go to state 125
    if_exp            go to state 126
    chain_exp         go to state 127
    postfix_exp       go to state 128
    vcall_exp         go to state 129
    dot_name_exp      go to state 130
    dot_index_exp     go to state 131
    unary_exp         go to state 132
    unary_op          go to state 133
    binary_exp        go to state 134
    mul_binary_exp    go to state 135
    add_binary_exp    go to state 136
    cmp_binary_exp    go to state 137
    eq_binary_exp     go to state 138
    and_binary_exp    go to state 139
    xor_binary_exp    go to state 140
    or_binary_exp     go to state 141
    type_spec         go to state 170
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58
    varg              go to state 278
    varg_cl           go to state 279


State 205

  102 unary_exp: unary_op unary_exp •

    $default  reduce using rule 102 (unary_exp)


State 206

  107 mul_binary_op: "*" •

    $default  reduce using rule 107 (mul_binary_op)


State 207

  108 mul_binary_op: "/" •

    $default  reduce using rule 108 (mul_binary_op)


State 208

  109 mul_binary_op: "%" •

    $default  reduce using rule 109 (mul_binary_op)


State 209

  111 mul_binary_exp: mul_binary_exp mul_binary_op • unary_exp

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 46
    "if"                     shift, and go to state 102
    "anonymous_fn"           shift, and go to state 47
    "not"                    shift, and go to state 103
    "42"                     shift, and go to state 104
    "0x2a"                   shift, and go to state 105
    "42u"                    shift, and go to state 106
    "0x2Au"                  shift, and go to state 107
    "4.2"                    shift, and go to state 108
    "\"dq-string-literal\""  shift, and go to state 109
    "'sq-string-literal'"    shift, and go to state 110
    "("                      shift, and go to state 111
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 112
    "+"                      shift, and go to state 113
    "-"                      shift, and go to state 114

    tid               go to state 50
    vid               go to state 115
    floatl            go to state 116
    mod_prefix        go to state 117
    bracketed_exp     go to state 119
    paren_exp         go to state 120
    vtupleExpr        go to state 121
    vstructExpr       go to state 122
    primary_exp       go to state 123
    int_expr          go to state 124
    stringls          go to state 125
    if_exp            go to state 126
    chain_exp         go to state 127
    postfix_exp       go to state 128
    vcall_exp         go to state 129
    dot_name_exp      go to state 130
    dot_index_exp     go to state 131
    unary_exp         go to state 280
    unary_op          go to state 133
    type_spec         go to state 170
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 210

  112 add_binary_op: "+" •

    $default  reduce using rule 112 (add_binary_op)


State 211

  113 add_binary_op: "-" •

    $default  reduce using rule 113 (add_binary_op)


State 212

  115 add_binary_exp: add_binary_exp add_binary_op • mul_binary_exp

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 46
    "if"                     shift, and go to state 102
    "anonymous_fn"           shift, and go to state 47
    "not"                    shift, and go to state 103
    "42"                     shift, and go to state 104
    "0x2a"                   shift, and go to state 105
    "42u"                    shift, and go to state 106
    "0x2Au"                  shift, and go to state 107
    "4.2"                    shift, and go to state 108
    "\"dq-string-literal\""  shift, and go to state 109
    "'sq-string-literal'"    shift, and go to state 110
    "("                      shift, and go to state 111
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 112
    "+"                      shift, and go to state 113
    "-"                      shift, and go to state 114

    tid               go to state 50
    vid               go to state 115
    floatl            go to state 116
    mod_prefix        go to state 117
    bracketed_exp     go to state 119
    paren_exp         go to state 120
    vtupleExpr        go to state 121
    vstructExpr       go to state 122
    primary_exp       go to state 123
    int_expr          go to state 124
    stringls          go to state 125
    if_exp            go to state 126
    chain_exp         go to state 127
    postfix_exp       go to state 128
    vcall_exp         go to state 129
    dot_name_exp      go to state 130
    dot_index_exp     go to state 131
    unary_exp         go to state 132
    unary_op          go to state 133
    mul_binary_exp    go to state 281
    type_spec         go to state 170
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 213

  116 cmp_binary_op: "<" •

    $default  reduce using rule 116 (cmp_binary_op)


State 214

  117 cmp_binary_op: "<=" •

    $default  reduce using rule 117 (cmp_binary_op)


State 215

  118 cmp_binary_op: ">" •

    $default  reduce using rule 118 (cmp_binary_op)


State 216

  119 cmp_binary_op: ">=" •

    $default  reduce using rule 119 (cmp_binary_op)


State 217

  121 cmp_binary_exp: cmp_binary_exp cmp_binary_op • add_binary_exp

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 46
    "if"                     shift, and go to state 102
    "anonymous_fn"           shift, and go to state 47
    "not"                    shift, and go to state 103
    "42"                     shift, and go to state 104
    "0x2a"                   shift, and go to state 105
    "42u"                    shift, and go to state 106
    "0x2Au"                  shift, and go to state 107
    "4.2"                    shift, and go to state 108
    "\"dq-string-literal\""  shift, and go to state 109
    "'sq-string-literal'"    shift, and go to state 110
    "("                      shift, and go to state 111
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 112
    "+"                      shift, and go to state 113
    "-"                      shift, and go to state 114

    tid               go to state 50
    vid               go to state 115
    floatl            go to state 116
    mod_prefix        go to state 117
    bracketed_exp     go to state 119
    paren_exp         go to state 120
    vtupleExpr        go to state 121
    vstructExpr       go to state 122
    primary_exp       go to state 123
    int_expr          go to state 124
    stringls          go to state 125
    if_exp            go to state 126
    chain_exp         go to state 127
    postfix_exp       go to state 128
    vcall_exp         go to state 129
    dot_name_exp      go to state 130
    dot_index_exp     go to state 131
    unary_exp         go to state 132
    unary_op          go to state 133
    mul_binary_exp    go to state 135
    add_binary_exp    go to state 282
    type_spec         go to state 170
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 218

  122 eq_binary_op: "==" •

    $default  reduce using rule 122 (eq_binary_op)


State 219

  123 eq_binary_op: "!=" •

    $default  reduce using rule 123 (eq_binary_op)


State 220

  125 eq_binary_exp: eq_binary_exp eq_binary_op • cmp_binary_exp

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 46
    "if"                     shift, and go to state 102
    "anonymous_fn"           shift, and go to state 47
    "not"                    shift, and go to state 103
    "42"                     shift, and go to state 104
    "0x2a"                   shift, and go to state 105
    "42u"                    shift, and go to state 106
    "0x2Au"                  shift, and go to state 107
    "4.2"                    shift, and go to state 108
    "\"dq-string-literal\""  shift, and go to state 109
    "'sq-string-literal'"    shift, and go to state 110
    "("                      shift, and go to state 111
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 112
    "+"                      shift, and go to state 113
    "-"                      shift, and go to state 114

    tid               go to state 50
    vid               go to state 115
    floatl            go to state 116
    mod_prefix        go to state 117
    bracketed_exp     go to state 119
    paren_exp         go to state 120
    vtupleExpr        go to state 121
    vstructExpr       go to state 122
    primary_exp       go to state 123
    int_expr          go to state 124
    stringls          go to state 125
    if_exp            go to state 126
    chain_exp         go to state 127
    postfix_exp       go to state 128
    vcall_exp         go to state 129
    dot_name_exp      go to state 130
    dot_index_exp     go to state 131
    unary_exp         go to state 132
    unary_op          go to state 133
    mul_binary_exp    go to state 135
    add_binary_exp    go to state 136
    cmp_binary_exp    go to state 283
    type_spec         go to state 170
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 221

  127 and_binary_exp: and_binary_exp "and" • eq_binary_exp

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 46
    "if"                     shift, and go to state 102
    "anonymous_fn"           shift, and go to state 47
    "not"                    shift, and go to state 103
    "42"                     shift, and go to state 104
    "0x2a"                   shift, and go to state 105
    "42u"                    shift, and go to state 106
    "0x2Au"                  shift, and go to state 107
    "4.2"                    shift, and go to state 108
    "\"dq-string-literal\""  shift, and go to state 109
    "'sq-string-literal'"    shift, and go to state 110
    "("                      shift, and go to state 111
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 112
    "+"                      shift, and go to state 113
    "-"                      shift, and go to state 114

    tid               go to state 50
    vid               go to state 115
    floatl            go to state 116
    mod_prefix        go to state 117
    bracketed_exp     go to state 119
    paren_exp         go to state 120
    vtupleExpr        go to state 121
    vstructExpr       go to state 122
    primary_exp       go to state 123
    int_expr          go to state 124
    stringls          go to state 125
    if_exp            go to state 126
    chain_exp         go to state 127
    postfix_exp       go to state 128
    vcall_exp         go to state 129
    dot_name_exp      go to state 130
    dot_index_exp     go to state 131
    unary_exp         go to state 132
    unary_op          go to state 133
    mul_binary_exp    go to state 135
    add_binary_exp    go to state 136
    cmp_binary_exp    go to state 137
    eq_binary_exp     go to state 284
    type_spec         go to state 170
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 222

  129 xor_binary_exp: xor_binary_exp "xor" • and_binary_exp

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 46
    "if"                     shift, and go to state 102
    "anonymous_fn"           shift, and go to state 47
    "not"                    shift, and go to state 103
    "42"                     shift, and go to state 104
    "0x2a"                   shift, and go to state 105
    "42u"                    shift, and go to state 106
    "0x2Au"                  shift, and go to state 107
    "4.2"                    shift, and go to state 108
    "\"dq-string-literal\""  shift, and go to state 109
    "'sq-string-literal'"    shift, and go to state 110
    "("                      shift, and go to state 111
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 112
    "+"                      shift, and go to state 113
    "-"                      shift, and go to state 114

    tid               go to state 50
    vid               go to state 115
    floatl            go to state 116
    mod_prefix        go to state 117
    bracketed_exp     go to state 119
    paren_exp         go to state 120
    vtupleExpr        go to state 121
    vstructExpr       go to state 122
    primary_exp       go to state 123
    int_expr          go to state 124
    stringls          go to state 125
    if_exp            go to state 126
    chain_exp         go to state 127
    postfix_exp       go to state 128
    vcall_exp         go to state 129
    dot_name_exp      go to state 130
    dot_index_exp     go to state 131
    unary_exp         go to state 132
    unary_op          go to state 133
    mul_binary_exp    go to state 135
    add_binary_exp    go to state 136
    cmp_binary_exp    go to state 137
    eq_binary_exp     go to state 138
    and_binary_exp    go to state 285
    type_spec         go to state 170
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 223

  131 or_binary_exp: or_binary_exp "or" • xor_binary_exp

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 46
    "if"                     shift, and go to state 102
    "anonymous_fn"           shift, and go to state 47
    "not"                    shift, and go to state 103
    "42"                     shift, and go to state 104
    "0x2a"                   shift, and go to state 105
    "42u"                    shift, and go to state 106
    "0x2Au"                  shift, and go to state 107
    "4.2"                    shift, and go to state 108
    "\"dq-string-literal\""  shift, and go to state 109
    "'sq-string-literal'"    shift, and go to state 110
    "("                      shift, and go to state 111
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 112
    "+"                      shift, and go to state 113
    "-"                      shift, and go to state 114

    tid               go to state 50
    vid               go to state 115
    floatl            go to state 116
    mod_prefix        go to state 117
    bracketed_exp     go to state 119
    paren_exp         go to state 120
    vtupleExpr        go to state 121
    vstructExpr       go to state 122
    primary_exp       go to state 123
    int_expr          go to state 124
    stringls          go to state 125
    if_exp            go to state 126
    chain_exp         go to state 127
    postfix_exp       go to state 128
    vcall_exp         go to state 129
    dot_name_exp      go to state 130
    dot_index_exp     go to state 131
    unary_exp         go to state 132
    unary_op          go to state 133
    mul_binary_exp    go to state 135
    add_binary_exp    go to state 136
    cmp_binary_exp    go to state 137
    eq_binary_exp     go to state 138
    and_binary_exp    go to state 139
    xor_binary_exp    go to state 286
    type_spec         go to state 170
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 224

   97 dot_name_exp: type_spec "::" • "TypeId"
   98             | type_spec "::" • "TypeId" "using" paren_exp

    "TypeId"  shift, and go to state 287


State 225

  162 targ_cl: targ_cl "," • targ

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 46
    "if"                     shift, and go to state 102
    "anonymous_fn"           shift, and go to state 47
    "not"                    shift, and go to state 103
    "42"                     shift, and go to state 104
    "0x2a"                   shift, and go to state 105
    "42u"                    shift, and go to state 106
    "0x2Au"                  shift, and go to state 107
    "4.2"                    shift, and go to state 108
    "\"dq-string-literal\""  shift, and go to state 109
    "'sq-string-literal'"    shift, and go to state 110
    "("                      shift, and go to state 111
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 112
    "+"                      shift, and go to state 113
    "-"                      shift, and go to state 114

    tid               go to state 50
    vid               go to state 115
    floatl            go to state 116
    mod_prefix        go to state 117
    expr              go to state 118
    bracketed_exp     go to state 119
    paren_exp         go to state 120
    vtupleExpr        go to state 121
    vstructExpr       go to state 122
    primary_exp       go to state 123
    int_expr          go to state 124
    stringls          go to state 125
    if_exp            go to state 126
    chain_exp         go to state 127
    postfix_exp       go to state 128
    vcall_exp         go to state 129
    dot_name_exp      go to state 130
    dot_index_exp     go to state 131
    unary_exp         go to state 132
    unary_op          go to state 133
    binary_exp        go to state 134
    mul_binary_exp    go to state 135
    add_binary_exp    go to state 136
    cmp_binary_exp    go to state 137
    eq_binary_exp     go to state 138
    and_binary_exp    go to state 139
    xor_binary_exp    go to state 140
    or_binary_exp     go to state 141
    type_spec         go to state 142
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58
    targ              go to state 288


State 226

   43 mod_prefix: vid "[" targ_cl "]" • ":"

    ":"  shift, and go to state 289


State 227

   45 mod_prefix: mod_prefix vid "[" targ_cl • "]" ":"
  162 targ_cl: targ_cl • "," targ

    ","  shift, and go to state 225
    "]"  shift, and go to state 290


State 228

  154 enum_type_spec_field: tid type_spec •

    $default  reduce using rule 154 (enum_type_spec_field)


State 229

  156 enum_type_spec_field_cl: enum_type_spec_field_cl "," • enum_type_spec_field

    "TypeId"  shift, and go to state 22

    tid                   go to state 147
    enum_type_spec_field  go to state 291


State 230

  157 enum_type_spec: "enum" "{" enum_type_spec_field_cl "}" •

    $default  reduce using rule 157 (enum_type_spec)


State 231

  176 vpattern_field: "out" vid • type_spec

    "val_id"        shift, and go to state 10
    "TypeId"        shift, and go to state 22
    "enum"          shift, and go to state 46
    "anonymous_fn"  shift, and go to state 47
    "["             shift, and go to state 48
    "{"             shift, and go to state 49

    tid               go to state 50
    vid               go to state 39
    mod_prefix        go to state 51
    type_spec         go to state 292
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 232

  177 vpattern_field: "inout" vid • type_spec

    "val_id"        shift, and go to state 10
    "TypeId"        shift, and go to state 22
    "enum"          shift, and go to state 46
    "anonymous_fn"  shift, and go to state 47
    "["             shift, and go to state 48
    "{"             shift, and go to state 49

    tid               go to state 50
    vid               go to state 39
    mod_prefix        go to state 51
    type_spec         go to state 293
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 233

  175 vpattern_field: vid type_spec •

    $default  reduce using rule 175 (vpattern_field)


State 234

  189 vpattern_field_cl: vpattern_field_cl "," • vpattern_field

    "val_id"  shift, and go to state 10
    "out"     shift, and go to state 150
    "inout"   shift, and go to state 151

    vid             go to state 153
    vpattern_field  go to state 294


State 235

  185 vpattern: "(" vpattern_field_cl ")" •

    $default  reduce using rule 185 (vpattern)


State 236

  148 array_type_spec: "[" type_spec "^" expr • "]"

    "]"  shift, and go to state 295


State 237

   97 dot_name_exp: type_spec • "::" "TypeId"
   98             | type_spec • "::" "TypeId" "using" paren_exp
  148 array_type_spec: "[" type_spec • "^" expr "]"
  159 targ: type_spec •

    "::"  shift, and go to state 224
    "^"   shift, and go to state 157

    $default  reduce using rule 159 (targ)


State 238

  137 type_spec_cl2: type_spec_cl2 "," type_spec •

    $default  reduce using rule 137 (type_spec_cl2)


State 239

  136 type_spec_cl2: type_spec "," type_spec •

    $default  reduce using rule 136 (type_spec_cl2)


State 240

  152 struct_type_spec_field: vid • type_spec

    "val_id"        shift, and go to state 10
    "TypeId"        shift, and go to state 22
    "enum"          shift, and go to state 46
    "anonymous_fn"  shift, and go to state 47
    "["             shift, and go to state 48
    "{"             shift, and go to state 49

    tid               go to state 50
    vid               go to state 39
    mod_prefix        go to state 51
    type_spec         go to state 159
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 241

  151 struct_type_spec_field_cl: struct_type_spec_field_cl "," struct_type_spec_field •

    $default  reduce using rule 151 (struct_type_spec_field_cl)


State 242

   89 lambda_exp: fn_type_spec bracketed_exp •

    $default  reduce using rule 89 (lambda_exp)


State 243

   18 mod_field: "let" vid vpattern type_spec "=" • bracketed_exp

    "("  shift, and go to state 111
    "{"  shift, and go to state 176

    bracketed_exp  go to state 296
    paren_exp      go to state 120
    vtupleExpr     go to state 121
    vstructExpr    go to state 122
    chain_exp      go to state 127


State 244

   19 mod_field: "let" cid "(" tid class_spec • ")" "=" "{" type_query_exp_sl0 "}"

    ")"  shift, and go to state 297


State 245

  173 class_exp_class_spec: "typeclass" "(" tid class_spec ")" • "{" type_query_exp_sl0 "}"

    "{"  shift, and go to state 298


State 246

   42 mod_prefix: vid • ":"
   43           | vid • "[" targ_cl "]" ":"
   67 primary_exp: vid •
  174 struct_exp_field: vid • "=" expr

    ":"  shift, and go to state 74
    "["  shift, and go to state 75
    "="  shift, and go to state 264

    $default  reduce using rule 67 (primary_exp)


State 247

   81 if_exp: "if" bracketed_exp bracketed_exp •
   82       | "if" bracketed_exp bracketed_exp • "else" primary_exp

    "else"  shift, and go to state 299

    $default  reduce using rule 81 (if_exp)


State 248

   53 expr_cl2: expr "," • expr
   63 vtupleExpr: "(" expr "," • ")"

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 46
    "if"                     shift, and go to state 102
    "anonymous_fn"           shift, and go to state 47
    "not"                    shift, and go to state 103
    "42"                     shift, and go to state 104
    "0x2a"                   shift, and go to state 105
    "42u"                    shift, and go to state 106
    "0x2Au"                  shift, and go to state 107
    "4.2"                    shift, and go to state 108
    "\"dq-string-literal\""  shift, and go to state 109
    "'sq-string-literal'"    shift, and go to state 110
    "("                      shift, and go to state 111
    ")"                      shift, and go to state 300
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 112
    "+"                      shift, and go to state 113
    "-"                      shift, and go to state 114

    tid               go to state 50
    vid               go to state 115
    floatl            go to state 116
    mod_prefix        go to state 117
    expr              go to state 301
    bracketed_exp     go to state 119
    paren_exp         go to state 120
    vtupleExpr        go to state 121
    vstructExpr       go to state 122
    primary_exp       go to state 123
    int_expr          go to state 124
    stringls          go to state 125
    if_exp            go to state 126
    chain_exp         go to state 127
    postfix_exp       go to state 128
    vcall_exp         go to state 129
    dot_name_exp      go to state 130
    dot_index_exp     go to state 131
    unary_exp         go to state 132
    unary_op          go to state 133
    binary_exp        go to state 134
    mul_binary_exp    go to state 135
    add_binary_exp    go to state 136
    cmp_binary_exp    go to state 137
    eq_binary_exp     go to state 138
    and_binary_exp    go to state 139
    xor_binary_exp    go to state 140
    or_binary_exp     go to state 141
    type_spec         go to state 170
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 249

   61 paren_exp: "(" long_exp ")" •

    $default  reduce using rule 61 (paren_exp)


State 250

   54 expr_cl2: expr_cl2 "," • expr

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 46
    "if"                     shift, and go to state 102
    "anonymous_fn"           shift, and go to state 47
    "not"                    shift, and go to state 103
    "42"                     shift, and go to state 104
    "0x2a"                   shift, and go to state 105
    "42u"                    shift, and go to state 106
    "0x2Au"                  shift, and go to state 107
    "4.2"                    shift, and go to state 108
    "\"dq-string-literal\""  shift, and go to state 109
    "'sq-string-literal'"    shift, and go to state 110
    "("                      shift, and go to state 111
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 112
    "+"                      shift, and go to state 113
    "-"                      shift, and go to state 114

    tid               go to state 50
    vid               go to state 115
    floatl            go to state 116
    mod_prefix        go to state 117
    expr              go to state 302
    bracketed_exp     go to state 119
    paren_exp         go to state 120
    vtupleExpr        go to state 121
    vstructExpr       go to state 122
    primary_exp       go to state 123
    int_expr          go to state 124
    stringls          go to state 125
    if_exp            go to state 126
    chain_exp         go to state 127
    postfix_exp       go to state 128
    vcall_exp         go to state 129
    dot_name_exp      go to state 130
    dot_index_exp     go to state 131
    unary_exp         go to state 132
    unary_op          go to state 133
    binary_exp        go to state 134
    mul_binary_exp    go to state 135
    add_binary_exp    go to state 136
    cmp_binary_exp    go to state 137
    eq_binary_exp     go to state 138
    and_binary_exp    go to state 139
    xor_binary_exp    go to state 140
    or_binary_exp     go to state 141
    type_spec         go to state 170
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 251

   64 vtupleExpr: "(" expr_cl2 ")" •

    $default  reduce using rule 64 (vtupleExpr)


State 252

  182 destructured_lpattern: "{" • lpattern_field_cl "}"

    "val_id"  shift, and go to state 10

    vid                go to state 253
    lpattern_field     go to state 303
    lpattern_field_cl  go to state 304


State 253

  178 lpattern_field: vid • type_spec
  179               | vid •

    "val_id"        shift, and go to state 10
    "TypeId"        shift, and go to state 22
    "enum"          shift, and go to state 46
    "anonymous_fn"  shift, and go to state 47
    "["             shift, and go to state 48
    "{"             shift, and go to state 49

    $default  reduce using rule 179 (lpattern_field)

    tid               go to state 50
    vid               go to state 39
    mod_prefix        go to state 51
    type_spec         go to state 305
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 254

  183 lpattern: lpattern_field •

    $default  reduce using rule 183 (lpattern)


State 255

  184 lpattern: destructured_lpattern •

    $default  reduce using rule 184 (lpattern)


State 256

   31 const_stmt: "const" lpattern • "=" expr

    "="  shift, and go to state 306


State 257

   32 val_stmt: "val" lpattern • "=" expr

    "="  shift, and go to state 307


State 258

   33 var_stmt: "var" lpattern • "=" expr

    "="  shift, and go to state 308


State 259

   47 mut_expr: "(" • mut_expr_cl1 ")"

    "val_id"  shift, and go to state 10
    "("       shift, and go to state 259

    vid           go to state 260
    mut_expr      go to state 309
    mut_expr_cl1  go to state 310


State 260

   46 mut_expr: vid •

    $default  reduce using rule 46 (mut_expr)


State 261

   34 set_stmt: "set" mut_expr • "=" expr

    "="  shift, and go to state 311


State 262

   35 discard_stmt: "run" expr •

    $default  reduce using rule 35 (discard_stmt)


State 263

   87 chain_prefix: chain_prefix_stmt ";" •

    $default  reduce using rule 87 (chain_prefix)


State 264

  174 struct_exp_field: vid "=" • expr

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 46
    "if"                     shift, and go to state 102
    "anonymous_fn"           shift, and go to state 47
    "not"                    shift, and go to state 103
    "42"                     shift, and go to state 104
    "0x2a"                   shift, and go to state 105
    "42u"                    shift, and go to state 106
    "0x2Au"                  shift, and go to state 107
    "4.2"                    shift, and go to state 108
    "\"dq-string-literal\""  shift, and go to state 109
    "'sq-string-literal'"    shift, and go to state 110
    "("                      shift, and go to state 111
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 112
    "+"                      shift, and go to state 113
    "-"                      shift, and go to state 114

    tid               go to state 50
    vid               go to state 115
    floatl            go to state 116
    mod_prefix        go to state 117
    expr              go to state 312
    bracketed_exp     go to state 119
    paren_exp         go to state 120
    vtupleExpr        go to state 121
    vstructExpr       go to state 122
    primary_exp       go to state 123
    int_expr          go to state 124
    stringls          go to state 125
    if_exp            go to state 126
    chain_exp         go to state 127
    postfix_exp       go to state 128
    vcall_exp         go to state 129
    dot_name_exp      go to state 130
    dot_index_exp     go to state 131
    unary_exp         go to state 132
    unary_op          go to state 133
    binary_exp        go to state 134
    mul_binary_exp    go to state 135
    add_binary_exp    go to state 136
    cmp_binary_exp    go to state 137
    eq_binary_exp     go to state 138
    and_binary_exp    go to state 139
    xor_binary_exp    go to state 140
    or_binary_exp     go to state 141
    type_spec         go to state 170
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 265

   84 chain_exp: "{" long_exp "}" •

    $default  reduce using rule 84 (chain_exp)


State 266

   85 chain_exp: "{" chain_prefix "}" •

    $default  reduce using rule 85 (chain_exp)


State 267

   88 chain_prefix: chain_prefix chain_prefix_stmt • ";"

    ";"  shift, and go to state 313


State 268

   86 chain_exp: "{" chain_prefix long_exp • "}"

    "}"  shift, and go to state 314


State 269

  195 struct_exp_field_cl: struct_exp_field_cl "," • struct_exp_field

    "val_id"  shift, and go to state 10

    vid               go to state 315
    struct_exp_field  go to state 316


State 270

   65 vstructExpr: "{" struct_exp_field_cl "}" •

    $default  reduce using rule 65 (vstructExpr)


State 271

   96 dot_name_exp: postfix_exp "." "val_id" •

    $default  reduce using rule 96 (dot_name_exp)


State 272

  100 dot_index_exp: postfix_exp "." bracketed_exp •

    $default  reduce using rule 100 (dot_index_exp)


State 273

   99 dot_index_exp: postfix_exp "." int_expr •

    $default  reduce using rule 99 (dot_index_exp)


State 274

  164 varg: "out" • mut_expr

    "val_id"  shift, and go to state 10
    "("       shift, and go to state 259

    vid       go to state 260
    mut_expr  go to state 317


State 275

  165 varg: "inout" • mut_expr

    "val_id"  shift, and go to state 10
    "("       shift, and go to state 259

    vid       go to state 260
    mut_expr  go to state 318


State 276

   94 vcall_exp: postfix_exp "(" ")" •

    $default  reduce using rule 94 (vcall_exp)


State 277

  163 varg: expr •

    $default  reduce using rule 163 (varg)


State 278

  166 varg_cl: varg •

    $default  reduce using rule 166 (varg_cl)


State 279

   95 vcall_exp: postfix_exp "(" varg_cl • ")"
  167 varg_cl: varg_cl • "," varg

    ","  shift, and go to state 319
    ")"  shift, and go to state 320


State 280

  111 mul_binary_exp: mul_binary_exp mul_binary_op unary_exp •

    $default  reduce using rule 111 (mul_binary_exp)


State 281

  111 mul_binary_exp: mul_binary_exp • mul_binary_op unary_exp
  115 add_binary_exp: add_binary_exp add_binary_op mul_binary_exp •

    "*"  shift, and go to state 206
    "/"  shift, and go to state 207
    "%"  shift, and go to state 208

    $default  reduce using rule 115 (add_binary_exp)

    mul_binary_op  go to state 209


State 282

  115 add_binary_exp: add_binary_exp • add_binary_op mul_binary_exp
  121 cmp_binary_exp: cmp_binary_exp cmp_binary_op add_binary_exp •

    "+"  shift, and go to state 210
    "-"  shift, and go to state 211

    $default  reduce using rule 121 (cmp_binary_exp)

    add_binary_op  go to state 212


State 283

  121 cmp_binary_exp: cmp_binary_exp • cmp_binary_op add_binary_exp
  125 eq_binary_exp: eq_binary_exp eq_binary_op cmp_binary_exp •

    "<"   shift, and go to state 213
    "<="  shift, and go to state 214
    ">"   shift, and go to state 215
    ">="  shift, and go to state 216

    $default  reduce using rule 125 (eq_binary_exp)

    cmp_binary_op  go to state 217


State 284

  125 eq_binary_exp: eq_binary_exp • eq_binary_op cmp_binary_exp
  127 and_binary_exp: and_binary_exp "and" eq_binary_exp •

    "=="  shift, and go to state 218
    "!="  shift, and go to state 219

    $default  reduce using rule 127 (and_binary_exp)

    eq_binary_op  go to state 220


State 285

  127 and_binary_exp: and_binary_exp • "and" eq_binary_exp
  129 xor_binary_exp: xor_binary_exp "xor" and_binary_exp •

    "and"  shift, and go to state 221

    $default  reduce using rule 129 (xor_binary_exp)


State 286

  129 xor_binary_exp: xor_binary_exp • "xor" and_binary_exp
  131 or_binary_exp: or_binary_exp "or" xor_binary_exp •

    "xor"  shift, and go to state 222

    $default  reduce using rule 131 (or_binary_exp)


State 287

   97 dot_name_exp: type_spec "::" "TypeId" •
   98             | type_spec "::" "TypeId" • "using" paren_exp

    "using"  shift, and go to state 321

    $default  reduce using rule 97 (dot_name_exp)


State 288

  162 targ_cl: targ_cl "," targ •

    $default  reduce using rule 162 (targ_cl)


State 289

   43 mod_prefix: vid "[" targ_cl "]" ":" •

    $default  reduce using rule 43 (mod_prefix)


State 290

   45 mod_prefix: mod_prefix vid "[" targ_cl "]" • ":"

    ":"  shift, and go to state 322


State 291

  156 enum_type_spec_field_cl: enum_type_spec_field_cl "," enum_type_spec_field •

    $default  reduce using rule 156 (enum_type_spec_field_cl)


State 292

  176 vpattern_field: "out" vid type_spec •

    $default  reduce using rule 176 (vpattern_field)


State 293

  177 vpattern_field: "inout" vid type_spec •

    $default  reduce using rule 177 (vpattern_field)


State 294

  189 vpattern_field_cl: vpattern_field_cl "," vpattern_field •

    $default  reduce using rule 189 (vpattern_field_cl)


State 295

  148 array_type_spec: "[" type_spec "^" expr "]" •

    $default  reduce using rule 148 (array_type_spec)


State 296

   18 mod_field: "let" vid vpattern type_spec "=" bracketed_exp •

    $default  reduce using rule 18 (mod_field)


State 297

   19 mod_field: "let" cid "(" tid class_spec ")" • "=" "{" type_query_exp_sl0 "}"

    "="  shift, and go to state 323


State 298

  173 class_exp_class_spec: "typeclass" "(" tid class_spec ")" "{" • type_query_exp_sl0 "}"

    $default  reduce using rule 55 (type_query_exp_sl0)

    type_query_exp_sl0  go to state 324


State 299

   82 if_exp: "if" bracketed_exp bracketed_exp "else" • primary_exp

    "val_id"                 shift, and go to state 10
    "if"                     shift, and go to state 102
    "42"                     shift, and go to state 104
    "0x2a"                   shift, and go to state 105
    "42u"                    shift, and go to state 106
    "0x2Au"                  shift, and go to state 107
    "4.2"                    shift, and go to state 108
    "\"dq-string-literal\""  shift, and go to state 109
    "'sq-string-literal'"    shift, and go to state 110
    "("                      shift, and go to state 111
    "{"                      shift, and go to state 176

    vid            go to state 115
    floatl         go to state 116
    mod_prefix     go to state 325
    bracketed_exp  go to state 119
    paren_exp      go to state 120
    vtupleExpr     go to state 121
    vstructExpr    go to state 122
    primary_exp    go to state 326
    int_expr       go to state 124
    stringls       go to state 125
    if_exp         go to state 126
    chain_exp      go to state 127


State 300

   63 vtupleExpr: "(" expr "," ")" •

    $default  reduce using rule 63 (vtupleExpr)


State 301

   53 expr_cl2: expr "," expr •

    $default  reduce using rule 53 (expr_cl2)


State 302

   54 expr_cl2: expr_cl2 "," expr •

    $default  reduce using rule 54 (expr_cl2)


State 303

  190 lpattern_field_cl: lpattern_field •

    $default  reduce using rule 190 (lpattern_field_cl)


State 304

  182 destructured_lpattern: "{" lpattern_field_cl • "}"
  191 lpattern_field_cl: lpattern_field_cl • "," lpattern_field

    ","  shift, and go to state 327
    "}"  shift, and go to state 328


State 305

  178 lpattern_field: vid type_spec •

    $default  reduce using rule 178 (lpattern_field)


State 306

   31 const_stmt: "const" lpattern "=" • expr

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 46
    "if"                     shift, and go to state 102
    "anonymous_fn"           shift, and go to state 47
    "not"                    shift, and go to state 103
    "42"                     shift, and go to state 104
    "0x2a"                   shift, and go to state 105
    "42u"                    shift, and go to state 106
    "0x2Au"                  shift, and go to state 107
    "4.2"                    shift, and go to state 108
    "\"dq-string-literal\""  shift, and go to state 109
    "'sq-string-literal'"    shift, and go to state 110
    "("                      shift, and go to state 111
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 112
    "+"                      shift, and go to state 113
    "-"                      shift, and go to state 114

    tid               go to state 50
    vid               go to state 115
    floatl            go to state 116
    mod_prefix        go to state 117
    expr              go to state 329
    bracketed_exp     go to state 119
    paren_exp         go to state 120
    vtupleExpr        go to state 121
    vstructExpr       go to state 122
    primary_exp       go to state 123
    int_expr          go to state 124
    stringls          go to state 125
    if_exp            go to state 126
    chain_exp         go to state 127
    postfix_exp       go to state 128
    vcall_exp         go to state 129
    dot_name_exp      go to state 130
    dot_index_exp     go to state 131
    unary_exp         go to state 132
    unary_op          go to state 133
    binary_exp        go to state 134
    mul_binary_exp    go to state 135
    add_binary_exp    go to state 136
    cmp_binary_exp    go to state 137
    eq_binary_exp     go to state 138
    and_binary_exp    go to state 139
    xor_binary_exp    go to state 140
    or_binary_exp     go to state 141
    type_spec         go to state 170
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 307

   32 val_stmt: "val" lpattern "=" • expr

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 46
    "if"                     shift, and go to state 102
    "anonymous_fn"           shift, and go to state 47
    "not"                    shift, and go to state 103
    "42"                     shift, and go to state 104
    "0x2a"                   shift, and go to state 105
    "42u"                    shift, and go to state 106
    "0x2Au"                  shift, and go to state 107
    "4.2"                    shift, and go to state 108
    "\"dq-string-literal\""  shift, and go to state 109
    "'sq-string-literal'"    shift, and go to state 110
    "("                      shift, and go to state 111
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 112
    "+"                      shift, and go to state 113
    "-"                      shift, and go to state 114

    tid               go to state 50
    vid               go to state 115
    floatl            go to state 116
    mod_prefix        go to state 117
    expr              go to state 330
    bracketed_exp     go to state 119
    paren_exp         go to state 120
    vtupleExpr        go to state 121
    vstructExpr       go to state 122
    primary_exp       go to state 123
    int_expr          go to state 124
    stringls          go to state 125
    if_exp            go to state 126
    chain_exp         go to state 127
    postfix_exp       go to state 128
    vcall_exp         go to state 129
    dot_name_exp      go to state 130
    dot_index_exp     go to state 131
    unary_exp         go to state 132
    unary_op          go to state 133
    binary_exp        go to state 134
    mul_binary_exp    go to state 135
    add_binary_exp    go to state 136
    cmp_binary_exp    go to state 137
    eq_binary_exp     go to state 138
    and_binary_exp    go to state 139
    xor_binary_exp    go to state 140
    or_binary_exp     go to state 141
    type_spec         go to state 170
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 308

   33 var_stmt: "var" lpattern "=" • expr

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 46
    "if"                     shift, and go to state 102
    "anonymous_fn"           shift, and go to state 47
    "not"                    shift, and go to state 103
    "42"                     shift, and go to state 104
    "0x2a"                   shift, and go to state 105
    "42u"                    shift, and go to state 106
    "0x2Au"                  shift, and go to state 107
    "4.2"                    shift, and go to state 108
    "\"dq-string-literal\""  shift, and go to state 109
    "'sq-string-literal'"    shift, and go to state 110
    "("                      shift, and go to state 111
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 112
    "+"                      shift, and go to state 113
    "-"                      shift, and go to state 114

    tid               go to state 50
    vid               go to state 115
    floatl            go to state 116
    mod_prefix        go to state 117
    expr              go to state 331
    bracketed_exp     go to state 119
    paren_exp         go to state 120
    vtupleExpr        go to state 121
    vstructExpr       go to state 122
    primary_exp       go to state 123
    int_expr          go to state 124
    stringls          go to state 125
    if_exp            go to state 126
    chain_exp         go to state 127
    postfix_exp       go to state 128
    vcall_exp         go to state 129
    dot_name_exp      go to state 130
    dot_index_exp     go to state 131
    unary_exp         go to state 132
    unary_op          go to state 133
    binary_exp        go to state 134
    mul_binary_exp    go to state 135
    add_binary_exp    go to state 136
    cmp_binary_exp    go to state 137
    eq_binary_exp     go to state 138
    and_binary_exp    go to state 139
    xor_binary_exp    go to state 140
    or_binary_exp     go to state 141
    type_spec         go to state 170
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 309

   48 mut_expr_cl1: mut_expr •

    $default  reduce using rule 48 (mut_expr_cl1)


State 310

   47 mut_expr: "(" mut_expr_cl1 • ")"
   49 mut_expr_cl1: mut_expr_cl1 • "," mut_expr

    ","  shift, and go to state 332
    ")"  shift, and go to state 333


State 311

   34 set_stmt: "set" mut_expr "=" • expr

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 46
    "if"                     shift, and go to state 102
    "anonymous_fn"           shift, and go to state 47
    "not"                    shift, and go to state 103
    "42"                     shift, and go to state 104
    "0x2a"                   shift, and go to state 105
    "42u"                    shift, and go to state 106
    "0x2Au"                  shift, and go to state 107
    "4.2"                    shift, and go to state 108
    "\"dq-string-literal\""  shift, and go to state 109
    "'sq-string-literal'"    shift, and go to state 110
    "("                      shift, and go to state 111
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 112
    "+"                      shift, and go to state 113
    "-"                      shift, and go to state 114

    tid               go to state 50
    vid               go to state 115
    floatl            go to state 116
    mod_prefix        go to state 117
    expr              go to state 334
    bracketed_exp     go to state 119
    paren_exp         go to state 120
    vtupleExpr        go to state 121
    vstructExpr       go to state 122
    primary_exp       go to state 123
    int_expr          go to state 124
    stringls          go to state 125
    if_exp            go to state 126
    chain_exp         go to state 127
    postfix_exp       go to state 128
    vcall_exp         go to state 129
    dot_name_exp      go to state 130
    dot_index_exp     go to state 131
    unary_exp         go to state 132
    unary_op          go to state 133
    binary_exp        go to state 134
    mul_binary_exp    go to state 135
    add_binary_exp    go to state 136
    cmp_binary_exp    go to state 137
    eq_binary_exp     go to state 138
    and_binary_exp    go to state 139
    xor_binary_exp    go to state 140
    or_binary_exp     go to state 141
    type_spec         go to state 170
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 312

  174 struct_exp_field: vid "=" expr •

    $default  reduce using rule 174 (struct_exp_field)


State 313

   88 chain_prefix: chain_prefix chain_prefix_stmt ";" •

    $default  reduce using rule 88 (chain_prefix)


State 314

   86 chain_exp: "{" chain_prefix long_exp "}" •

    $default  reduce using rule 86 (chain_exp)


State 315

  174 struct_exp_field: vid • "=" expr

    "="  shift, and go to state 264


State 316

  195 struct_exp_field_cl: struct_exp_field_cl "," struct_exp_field •

    $default  reduce using rule 195 (struct_exp_field_cl)


State 317

  164 varg: "out" mut_expr •

    $default  reduce using rule 164 (varg)


State 318

  165 varg: "inout" mut_expr •

    $default  reduce using rule 165 (varg)


State 319

  167 varg_cl: varg_cl "," • varg

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 46
    "if"                     shift, and go to state 102
    "anonymous_fn"           shift, and go to state 47
    "not"                    shift, and go to state 103
    "out"                    shift, and go to state 274
    "inout"                  shift, and go to state 275
    "42"                     shift, and go to state 104
    "0x2a"                   shift, and go to state 105
    "42u"                    shift, and go to state 106
    "0x2Au"                  shift, and go to state 107
    "4.2"                    shift, and go to state 108
    "\"dq-string-literal\""  shift, and go to state 109
    "'sq-string-literal'"    shift, and go to state 110
    "("                      shift, and go to state 111
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 112
    "+"                      shift, and go to state 113
    "-"                      shift, and go to state 114

    tid               go to state 50
    vid               go to state 115
    floatl            go to state 116
    mod_prefix        go to state 117
    expr              go to state 277
    bracketed_exp     go to state 119
    paren_exp         go to state 120
    vtupleExpr        go to state 121
    vstructExpr       go to state 122
    primary_exp       go to state 123
    int_expr          go to state 124
    stringls          go to state 125
    if_exp            go to state 126
    chain_exp         go to state 127
    postfix_exp       go to state 128
    vcall_exp         go to state 129
    dot_name_exp      go to state 130
    dot_index_exp     go to state 131
    unary_exp         go to state 132
    unary_op          go to state 133
    binary_exp        go to state 134
    mul_binary_exp    go to state 135
    add_binary_exp    go to state 136
    cmp_binary_exp    go to state 137
    eq_binary_exp     go to state 138
    and_binary_exp    go to state 139
    xor_binary_exp    go to state 140
    or_binary_exp     go to state 141
    type_spec         go to state 170
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58
    varg              go to state 335


State 320

   95 vcall_exp: postfix_exp "(" varg_cl ")" •

    $default  reduce using rule 95 (vcall_exp)


State 321

   98 dot_name_exp: type_spec "::" "TypeId" "using" • paren_exp

    "("  shift, and go to state 336

    paren_exp  go to state 337


State 322

   45 mod_prefix: mod_prefix vid "[" targ_cl "]" ":" •

    $default  reduce using rule 45 (mod_prefix)


State 323

   19 mod_field: "let" cid "(" tid class_spec ")" "=" • "{" type_query_exp_sl0 "}"

    "{"  shift, and go to state 338


State 324

   56 type_query_exp_sl0: type_query_exp_sl0 • type_query_exp ";"
  173 class_exp_class_spec: "typeclass" "(" tid class_spec ")" "{" type_query_exp_sl0 • "}"

    "val_id"        shift, and go to state 10
    "TypeId"        shift, and go to state 22
    "enum"          shift, and go to state 46
    "anonymous_fn"  shift, and go to state 47
    "["             shift, and go to state 48
    "{"             shift, and go to state 49
    "}"             shift, and go to state 339

    tid               go to state 50
    vid               go to state 39
    mod_prefix        go to state 51
    type_query_exp    go to state 340
    type_spec         go to state 341
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 325

   44 mod_prefix: mod_prefix • vid ":"
   45           | mod_prefix • vid "[" targ_cl "]" ":"
   72 primary_exp: mod_prefix • vid

    "val_id"  shift, and go to state 10

    vid  go to state 200


State 326

   82 if_exp: "if" bracketed_exp bracketed_exp "else" primary_exp •

    $default  reduce using rule 82 (if_exp)


State 327

  191 lpattern_field_cl: lpattern_field_cl "," • lpattern_field

    "val_id"  shift, and go to state 10

    vid             go to state 253
    lpattern_field  go to state 342


State 328

  182 destructured_lpattern: "{" lpattern_field_cl "}" •

    $default  reduce using rule 182 (destructured_lpattern)


State 329

   31 const_stmt: "const" lpattern "=" expr •

    $default  reduce using rule 31 (const_stmt)


State 330

   32 val_stmt: "val" lpattern "=" expr •

    $default  reduce using rule 32 (val_stmt)


State 331

   33 var_stmt: "var" lpattern "=" expr •

    $default  reduce using rule 33 (var_stmt)


State 332

   49 mut_expr_cl1: mut_expr_cl1 "," • mut_expr

    "val_id"  shift, and go to state 10
    "("       shift, and go to state 259

    vid       go to state 260
    mut_expr  go to state 343


State 333

   47 mut_expr: "(" mut_expr_cl1 ")" •

    $default  reduce using rule 47 (mut_expr)


State 334

   34 set_stmt: "set" mut_expr "=" expr •

    $default  reduce using rule 34 (set_stmt)


State 335

  167 varg_cl: varg_cl "," varg •

    $default  reduce using rule 167 (varg_cl)


State 336

   61 paren_exp: "(" • long_exp ")"

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 46
    "if"                     shift, and go to state 102
    "anonymous_fn"           shift, and go to state 47
    "not"                    shift, and go to state 103
    "42"                     shift, and go to state 104
    "0x2a"                   shift, and go to state 105
    "42u"                    shift, and go to state 106
    "0x2Au"                  shift, and go to state 107
    "4.2"                    shift, and go to state 108
    "\"dq-string-literal\""  shift, and go to state 109
    "'sq-string-literal'"    shift, and go to state 110
    "("                      shift, and go to state 111
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 112
    "+"                      shift, and go to state 113
    "-"                      shift, and go to state 114

    tid               go to state 50
    vid               go to state 115
    floatl            go to state 116
    mod_prefix        go to state 117
    expr              go to state 167
    long_exp          go to state 180
    bracketed_exp     go to state 119
    paren_exp         go to state 120
    vtupleExpr        go to state 121
    vstructExpr       go to state 122
    primary_exp       go to state 123
    int_expr          go to state 124
    stringls          go to state 125
    if_exp            go to state 126
    chain_exp         go to state 127
    lambda_exp        go to state 169
    postfix_exp       go to state 128
    vcall_exp         go to state 129
    dot_name_exp      go to state 130
    dot_index_exp     go to state 131
    unary_exp         go to state 132
    unary_op          go to state 133
    binary_exp        go to state 134
    mul_binary_exp    go to state 135
    add_binary_exp    go to state 136
    cmp_binary_exp    go to state 137
    eq_binary_exp     go to state 138
    and_binary_exp    go to state 139
    xor_binary_exp    go to state 140
    or_binary_exp     go to state 141
    type_spec         go to state 170
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 171


State 337

   98 dot_name_exp: type_spec "::" "TypeId" "using" paren_exp •

    $default  reduce using rule 98 (dot_name_exp)


State 338

   19 mod_field: "let" cid "(" tid class_spec ")" "=" "{" • type_query_exp_sl0 "}"

    $default  reduce using rule 55 (type_query_exp_sl0)

    type_query_exp_sl0  go to state 344


State 339

  173 class_exp_class_spec: "typeclass" "(" tid class_spec ")" "{" type_query_exp_sl0 "}" •

    $default  reduce using rule 173 (class_exp_class_spec)


State 340

   56 type_query_exp_sl0: type_query_exp_sl0 type_query_exp • ";"

    ";"  shift, and go to state 345


State 341

  132 type_query_exp: type_spec • type_query_op type_spec

    "=="  shift, and go to state 346
    ":<"  shift, and go to state 347
    ">:"  shift, and go to state 348

    type_query_op  go to state 349


State 342

  191 lpattern_field_cl: lpattern_field_cl "," lpattern_field •

    $default  reduce using rule 191 (lpattern_field_cl)


State 343

   49 mut_expr_cl1: mut_expr_cl1 "," mut_expr •

    $default  reduce using rule 49 (mut_expr_cl1)


State 344

   19 mod_field: "let" cid "(" tid class_spec ")" "=" "{" type_query_exp_sl0 • "}"
   56 type_query_exp_sl0: type_query_exp_sl0 • type_query_exp ";"

    "val_id"        shift, and go to state 10
    "TypeId"        shift, and go to state 22
    "enum"          shift, and go to state 46
    "anonymous_fn"  shift, and go to state 47
    "["             shift, and go to state 48
    "{"             shift, and go to state 49
    "}"             shift, and go to state 350

    tid               go to state 50
    vid               go to state 39
    mod_prefix        go to state 51
    type_query_exp    go to state 340
    type_spec         go to state 341
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 345

   56 type_query_exp_sl0: type_query_exp_sl0 type_query_exp ";" •

    $default  reduce using rule 56 (type_query_exp_sl0)


State 346

  135 type_query_op: "==" •

    $default  reduce using rule 135 (type_query_op)


State 347

  133 type_query_op: ":<" •

    $default  reduce using rule 133 (type_query_op)


State 348

  134 type_query_op: ">:" •

    $default  reduce using rule 134 (type_query_op)


State 349

  132 type_query_exp: type_spec type_query_op • type_spec

    "val_id"        shift, and go to state 10
    "TypeId"        shift, and go to state 22
    "enum"          shift, and go to state 46
    "anonymous_fn"  shift, and go to state 47
    "["             shift, and go to state 48
    "{"             shift, and go to state 49

    tid               go to state 50
    vid               go to state 39
    mod_prefix        go to state 51
    type_spec         go to state 351
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 350

   19 mod_field: "let" cid "(" tid class_spec ")" "=" "{" type_query_exp_sl0 "}" •

    $default  reduce using rule 19 (mod_field)


State 351

  132 type_query_exp: type_spec type_query_op type_spec •

    $default  reduce using rule 132 (type_query_exp)
