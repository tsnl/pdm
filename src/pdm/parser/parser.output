Terminals unused in grammar

    "__42__"
    "struct"
    "then"
    "match"
    "with"
    "extern"
    "as"
    "for"
    "CORE_PROFILE"
    "BROWSER_PROFILE"
    "NATIVE_PROFILE"
    ":"
    "->"
    "^"
    "&"
    "!"
    "|"
    "EOS"
    "<null>"


Grammar

    0 $accept: script $end

    1 script: script_header script_field_sl

    2 script_header: %empty
    3              | script_header script_header_stmt ";"

    4 script_header_stmt: import_stmt

    5 script_field: "mod" vid native_mod_exp

    6 script_field_sl: script_field ";"
    7                | script_field_sl script_field ";"

    8 native_mod_exp: "{" mod_field_sl "}"
    9               | tpattern "{" mod_field_sl "}"
   10               | "{" "}"
   11               | tpattern "{" "}"

   12 mod_field_sl: mod_field ";"
   13             | mod_field_sl mod_field ";"

   14 mod_field: "let" vid "=" long_exp
   15          | "let" tid "=" type_spec
   16          | "let" cid "=" class_spec
   17          | "mod" vid native_mod_exp
   18          | "let" vid vpattern type_spec "=" bracketed_exp
   19          | "let" cid "(" tid class_spec ")" "=" "{" type_query_exp_sl0 "}"

   20 import_stmt: "imports" "{" import_field_group_sl0 "}"

   21 import_field_group_sl0: %empty
   22                       | import_field_group_sl0 import_field_group ";"

   23 import_field_group: import_field_cl1 "from" stringl

   24 import_field_cl1: vid
   25                 | import_field_cl1 "," vid

   26 chain_prefix_stmt: const_stmt
   27                  | val_stmt
   28                  | var_stmt
   29                  | set_stmt
   30                  | discard_stmt

   31 const_stmt: "const" lpattern "=" expr

   32 val_stmt: "val" lpattern "=" expr

   33 var_stmt: "var" lpattern "=" expr

   34 set_stmt: "set" expr "=" expr

   35 discard_stmt: "discard" expr

   36 tid: "TypeId"

   37 vid: "val_id"

   38 cid: "CLS_ID"

   39 floatl: "4.2"

   40 stringl: "'sq-string-literal'"
   41        | "\"dq-string-literal\""

   42 mod_prefix: vid "::"
   43           | vid "[" targ_cl "]" "::"
   44           | mod_prefix vid "::"
   45           | mod_prefix vid "[" targ_cl "]" "::"

   46 expr: binary_exp

   47 long_exp: expr
   48         | lambda_exp

   49 expr_cl2: expr "," expr
   50         | expr_cl2 "," expr

   51 type_query_exp_sl0: %empty
   52                   | type_query_exp_sl0 type_query_exp ";"

   53 bracketed_exp: paren_exp
   54              | vtupleExpr
   55              | vstructExpr
   56              | chain_exp

   57 paren_exp: "(" long_exp ")"

   58 vtupleExpr: "(" ")"
   59           | "(" expr "," ")"
   60           | "(" expr_cl2 ")"

   61 vstructExpr: "{" struct_exp_field_cl "}"

   62 primary_exp: bracketed_exp
   63            | vid
   64            | int_expr
   65            | floatl
   66            | stringls
   67            | if_exp
   68            | mod_prefix vid

   69 int_expr: "42"
   70         | "0x2a"
   71         | "42u"
   72         | "0x2Au"

   73 stringls: "'sq-string-literal'"
   74         | "\"dq-string-literal\""
   75         | stringls "'sq-string-literal'"
   76         | stringls "\"dq-string-literal\""

   77 if_exp: "if" bracketed_exp bracketed_exp
   78       | "if" bracketed_exp bracketed_exp "else" primary_exp

   79 chain_exp: "{" "}"
   80          | "{" long_exp "}"
   81          | "{" chain_prefix "}"
   82          | "{" chain_prefix long_exp "}"

   83 chain_prefix: chain_prefix_stmt ";"
   84             | chain_prefix chain_prefix_stmt ";"

   85 lambda_exp: fn_type_spec bracketed_exp

   86 postfix_exp: primary_exp
   87            | vcall_exp
   88            | dot_name_exp
   89            | dot_index_exp

   90 vcall_exp: postfix_exp "(" ")"
   91          | postfix_exp "(" varg_cl ")"

   92 dot_name_exp: postfix_exp "." "val_id"
   93             | type_spec "::" "TypeId"
   94             | type_spec "::" "TypeId" "using" paren_exp

   95 dot_index_exp: postfix_exp "." int_expr
   96              | postfix_exp "." bracketed_exp

   97 unary_exp: postfix_exp
   98          | unary_op unary_exp

   99 unary_op: "+"
  100         | "-"
  101         | "not"

  102 binary_exp: or_binary_exp

  103 mul_binary_op: "*"
  104              | "/"
  105              | "%"

  106 mul_binary_exp: unary_exp
  107               | mul_binary_exp mul_binary_op unary_exp

  108 add_binary_op: "+"
  109              | "-"

  110 add_binary_exp: mul_binary_exp
  111               | add_binary_exp add_binary_op mul_binary_exp

  112 cmp_binary_op: "<"
  113              | "<="
  114              | ">"
  115              | ">="

  116 cmp_binary_exp: add_binary_exp
  117               | cmp_binary_exp cmp_binary_op add_binary_exp

  118 eq_binary_op: "=="
  119             | "!="

  120 eq_binary_exp: cmp_binary_exp
  121              | eq_binary_exp eq_binary_op cmp_binary_exp

  122 and_binary_exp: eq_binary_exp
  123               | and_binary_exp "and" eq_binary_exp

  124 xor_binary_exp: and_binary_exp
  125               | xor_binary_exp "xor" and_binary_exp

  126 or_binary_exp: xor_binary_exp
  127              | or_binary_exp "or" xor_binary_exp

  128 type_query_exp: type_spec type_query_op type_spec

  129 type_query_op: ":<"
  130              | ">:"
  131              | "=="

  132 type_spec_cl2: type_spec "," type_spec
  133              | type_spec_cl2 "," type_spec

  134 type_spec: tid
  135          | mod_prefix_tid
  136          | tuple_type_spec
  137          | array_type_spec
  138          | struct_type_spec
  139          | enum_type_spec
  140          | fn_type_spec

  141 mod_prefix_tid: mod_prefix tid

  142 tuple_type_spec: "{" type_spec "}"
  143                | "{" type_spec_cl2 "}"

  144 array_type_spec: "[" type_spec "*" expr "]"

  145 struct_type_spec: "{" struct_type_spec_field_cl "}"

  146 struct_type_spec_field_cl: struct_type_spec_field
  147                          | struct_type_spec_field_cl "," struct_type_spec_field

  148 struct_type_spec_field: vid type_spec

  149 enum_type_spec_field: tid
  150                     | tid type_spec

  151 enum_type_spec_field_cl: enum_type_spec_field
  152                        | enum_type_spec_field_cl "," enum_type_spec_field

  153 enum_type_spec: "enum" "{" enum_type_spec_field_cl "}"

  154 fn_type_spec: "anonymous_fn" vpattern type_spec

  155 targ: type_spec
  156     | expr

  157 targ_cl: targ
  158        | targ_cl "," targ

  159 varg: expr
  160     | "out" expr
  161     | "inout" expr

  162 varg_cl: varg
  163        | varg_cl "," varg

  164 class_spec: primary_class_spec

  165 primary_class_spec: cid
  166                   | mod_prefix_cid_class_spec
  167                   | class_exp_class_spec

  168 mod_prefix_cid_class_spec: mod_prefix cid

  169 class_exp_class_spec: "typeclass" "(" tid class_spec ")" "{" type_query_exp_sl0 "}"

  170 struct_exp_field: vid "=" expr

  171 vpattern_field: vid type_spec
  172               | "out" vid type_spec
  173               | "inout" vid type_spec

  174 lpattern_field: vid type_spec
  175               | vid

  176 tpattern_field: vid type_spec
  177               | tid class_spec

  178 destructured_lpattern: "{" lpattern_field_cl "}"

  179 lpattern: lpattern_field
  180         | destructured_lpattern

  181 vpattern: "(" vpattern_field_cl ")"
  182         | "(" ")"

  183 tpattern: "[" tpattern_field_cl1 "]"

  184 vpattern_field_cl: vpattern_field
  185                  | vpattern_field_cl "," vpattern_field

  186 lpattern_field_cl: lpattern_field
  187                  | lpattern_field_cl "," lpattern_field

  188 tpattern_field_cl1: tpattern_field
  189                   | tpattern_field_cl1 "," tpattern_field

  190 struct_exp_field_cl: struct_exp_field
  191                    | struct_exp_field_cl "," struct_exp_field


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    "val_id" <TokenInfo> (258) 37 92
    "TypeId" <TokenInfo> (259) 36 93 94
    "CLS_ID" <TokenInfo> (260) 38
    "__42__" <TokenInfo> (261)
    "using" (262) 94
    "mod" (263) 5 17
    "struct" (264)
    "enum" (265) 153
    "typeclass" (266) 169
    "if" (267) 77 78
    "then" (268)
    "else" (269) 78
    "match" (270)
    "with" (271)
    "imports" (272) 20
    "extern" (273)
    "from" (274) 23
    "const" (275) 31
    "val" (276) 32
    "var" (277) 33
    "let" (278) 14 15 16 18 19
    "set" (279) 34
    "anonymous_fn" (280) 154
    "and" (281) 123
    "xor" (282) 125
    "or" (283) 127
    "not" (284) 101
    "out" (285) 160 172
    "inout" (286) 161 173
    "discard" (287) 35
    "as" (288)
    "for" (289)
    "CORE_PROFILE" (290)
    "BROWSER_PROFILE" (291)
    "NATIVE_PROFILE" (292)
    "42" <TokenInfo> (293) 69
    "0x2a" <TokenInfo> (294) 70
    "42u" <TokenInfo> (295) 71
    "0x2Au" <TokenInfo> (296) 72
    "4.2" <TokenInfo> (297) 39
    "\"dq-string-literal\"" <TokenInfo> (298) 41 74 76
    "'sq-string-literal'" <TokenInfo> (299) 40 73 75
    "." (300) 92 95 96
    ":" (301)
    "," (302) 25 49 50 59 132 133 147 152 158 163 185 187 189 191
    ";" (303) 3 6 7 12 13 22 52 83 84
    "::" (304) 42 43 44 45 93 94
    "(" (305) 19 57 58 59 60 90 91 169 181 182
    ")" (306) 19 57 58 59 60 90 91 169 181 182
    "[" (307) 43 45 144 183
    "]" (308) 43 45 144 183
    "{" (309) 8 9 10 11 19 20 61 79 80 81 82 142 143 145 153 169 178
    "}" (310) 8 9 10 11 19 20 61 79 80 81 82 142 143 145 153 169 178
    "->" (311)
    "*" (312) 103 144
    "/" (313) 104
    "%" (314) 105
    "+" (315) 99 108
    "-" (316) 100 109
    "<" (317) 112
    "<=" (318) 113
    ">" (319) 114
    ">=" (320) 115
    "=" (321) 14 15 16 18 19 31 32 33 34 170
    "==" (322) 118 131
    "!=" (323) 119
    "^" (324)
    "&" (325)
    "!" (326)
    "|" (327)
    "EOS" (328)
    ":<" (329) 129
    ">:" (330) 130
    "<null>" (331)


Nonterminals, with rules where they appear

    $accept (77)
        on left: 0
    script <pdm::ast::Script*> (78)
        on left: 1
        on right: 0
    script_header <std::vector<pdm::ast::HeaderStmt*>> (79)
        on left: 2 3
        on right: 1 3
    script_header_stmt <pdm::ast::HeaderStmt*> (80)
        on left: 4
        on right: 3
    script_field <pdm::ast::Script::Field*> (81)
        on left: 5
        on right: 6 7
    script_field_sl <std::vector<pdm::ast::Script::Field*>> (82)
        on left: 6 7
        on right: 1 7
    native_mod_exp <pdm::ast::BaseModExp*> (83)
        on left: 8 9 10 11
        on right: 5 17
    mod_field_sl <std::vector<pdm::ast::BaseModExp::Field*>> (84)
        on left: 12 13
        on right: 8 9 13
    mod_field <pdm::ast::BaseModExp::Field*> (85)
        on left: 14 15 16 17 18 19
        on right: 12 13
    import_stmt <pdm::ast::HeaderStmt*> (86)
        on left: 20
        on right: 4
    import_field_group_sl0 <std::vector<ast::ImportStmt::FieldGroup*>> (87)
        on left: 21 22
        on right: 20 22
    import_field_group <ast::ImportStmt::FieldGroup*> (88)
        on left: 23
        on right: 22
    import_field_cl1 <std::vector<ast::ImportStmt::Field*>> (89)
        on left: 24 25
        on right: 23 25
    chain_prefix_stmt <pdm::ast::Stmt*> (90)
        on left: 26 27 28 29 30
        on right: 83 84
    const_stmt <pdm::ast::Stmt*> (91)
        on left: 31
        on right: 26
    val_stmt <pdm::ast::Stmt*> (92)
        on left: 32
        on right: 27
    var_stmt <pdm::ast::Stmt*> (93)
        on left: 33
        on right: 28
    set_stmt <pdm::ast::Stmt*> (94)
        on left: 34
        on right: 29
    discard_stmt <pdm::ast::Stmt*> (95)
        on left: 35
        on right: 30
    tid <TokenInfo> (96)
        on left: 36
        on right: 15 19 134 141 149 150 169 177
    vid <TokenInfo> (97)
        on left: 37
        on right: 5 14 17 18 24 25 42 43 44 45 63 68 148 170 171 172 173 174 175 176
    cid <TokenInfo> (98)
        on left: 38
        on right: 16 19 165 168
    floatl <TokenInfo> (99)
        on left: 39
        on right: 65
    stringl <TokenInfo> (100)
        on left: 40 41
        on right: 23
    mod_prefix <pdm::ast::ModAddress*> (101)
        on left: 42 43 44 45
        on right: 44 45 68 141 168
    expr <pdm::ast::Exp*> (102)
        on left: 46
        on right: 31 32 33 34 35 47 49 50 59 144 156 159 160 161 170
    long_exp <pdm::ast::Exp*> (103)
        on left: 47 48
        on right: 14 57 80 82
    expr_cl2 <std::vector<pdm::ast::Exp*>> (104)
        on left: 49 50
        on right: 50 60
    type_query_exp_sl0 <std::vector<pdm::ast::TypeQueryExp*>> (105)
        on left: 51 52
        on right: 19 52 169
    bracketed_exp <pdm::ast::Exp*> (106)
        on left: 53 54 55 56
        on right: 18 62 77 78 85 96
    paren_exp <pdm::ast::Exp*> (107)
        on left: 57
        on right: 53 94
    vtupleExpr <pdm::ast::Exp*> (108)
        on left: 58 59 60
        on right: 54
    vstructExpr <pdm::ast::Exp*> (109)
        on left: 61
        on right: 55
    primary_exp <pdm::ast::Exp*> (110)
        on left: 62 63 64 65 66 67 68
        on right: 78 86
    int_expr <pdm::ast::Exp*> (111)
        on left: 69 70 71 72
        on right: 64 95
    stringls <std::vector<pdm::ast::StringExp::Piece>> (112)
        on left: 73 74 75 76
        on right: 66 75 76
    if_exp <pdm::ast::Exp*> (113)
        on left: 77 78
        on right: 67
    chain_exp <pdm::ast::Exp*> (114)
        on left: 79 80 81 82
        on right: 56
    chain_prefix <std::vector<pdm::ast::Stmt*>> (115)
        on left: 83 84
        on right: 81 82 84
    lambda_exp <pdm::ast::Exp*> (116)
        on left: 85
        on right: 48
    postfix_exp <pdm::ast::Exp*> (117)
        on left: 86 87 88 89
        on right: 90 91 92 95 96 97
    vcall_exp <pdm::ast::Exp*> (118)
        on left: 90 91
        on right: 87
    dot_name_exp <pdm::ast::Exp*> (119)
        on left: 92 93 94
        on right: 88
    dot_index_exp <pdm::ast::Exp*> (120)
        on left: 95 96
        on right: 89
    unary_exp <pdm::ast::Exp*> (121)
        on left: 97 98
        on right: 98 106 107
    unary_op <pdm::ast::UnaryOperator> (122)
        on left: 99 100 101
        on right: 98
    binary_exp <pdm::ast::Exp*> (123)
        on left: 102
        on right: 46
    mul_binary_op <pdm::ast::BinaryOperator> (124)
        on left: 103 104 105
        on right: 107
    mul_binary_exp <pdm::ast::Exp*> (125)
        on left: 106 107
        on right: 107 110 111
    add_binary_op <pdm::ast::BinaryOperator> (126)
        on left: 108 109
        on right: 111
    add_binary_exp <pdm::ast::Exp*> (127)
        on left: 110 111
        on right: 111 116 117
    cmp_binary_op <pdm::ast::BinaryOperator> (128)
        on left: 112 113 114 115
        on right: 117
    cmp_binary_exp <pdm::ast::Exp*> (129)
        on left: 116 117
        on right: 117 120 121
    eq_binary_op <pdm::ast::BinaryOperator> (130)
        on left: 118 119
        on right: 121
    eq_binary_exp <pdm::ast::Exp*> (131)
        on left: 120 121
        on right: 121 122 123
    and_binary_exp <pdm::ast::Exp*> (132)
        on left: 122 123
        on right: 123 124 125
    xor_binary_exp <pdm::ast::Exp*> (133)
        on left: 124 125
        on right: 125 126 127
    or_binary_exp <pdm::ast::Exp*> (134)
        on left: 126 127
        on right: 102 127
    type_query_exp <pdm::ast::TypeQueryExp*> (135)
        on left: 128
        on right: 52
    type_query_op <pdm::ast::TypeQueryKind> (136)
        on left: 129 130 131
        on right: 128
    type_spec_cl2 <std::vector<pdm::ast::TypeSpec*>> (137)
        on left: 132 133
        on right: 133 143
    type_spec <pdm::ast::TypeSpec*> (138)
        on left: 134 135 136 137 138 139 140
        on right: 15 18 93 94 128 132 133 142 144 148 150 154 155 171 172 173 174 176
    mod_prefix_tid <pdm::ast::TypeSpec*> (139)
        on left: 141
        on right: 135
    tuple_type_spec <pdm::ast::TypeSpec*> (140)
        on left: 142 143
        on right: 136
    array_type_spec <pdm::ast::TypeSpec*> (141)
        on left: 144
        on right: 137
    struct_type_spec <pdm::ast::TypeSpec*> (142)
        on left: 145
        on right: 138
    struct_type_spec_field_cl <std::vector<pdm::ast::StructTypeSpec::Field*>> (143)
        on left: 146 147
        on right: 145 147
    struct_type_spec_field <pdm::ast::StructTypeSpec::Field*> (144)
        on left: 148
        on right: 146 147
    enum_type_spec_field <pdm::ast::EnumTypeSpec::Field*> (145)
        on left: 149 150
        on right: 151 152
    enum_type_spec_field_cl <std::vector<pdm::ast::EnumTypeSpec::Field*>> (146)
        on left: 151 152
        on right: 152 153
    enum_type_spec <pdm::ast::TypeSpec*> (147)
        on left: 153
        on right: 139
    fn_type_spec <pdm::ast::FnTypeSpec*> (148)
        on left: 154
        on right: 85 140
    targ <pdm::ast::TArg*> (149)
        on left: 155 156
        on right: 157 158
    targ_cl <std::vector<pdm::ast::TArg*>> (150)
        on left: 157 158
        on right: 43 45 158
    varg <pdm::ast::VArg*> (151)
        on left: 159 160 161
        on right: 162 163
    varg_cl <std::vector<pdm::ast::VArg*>> (152)
        on left: 162 163
        on right: 91 163
    class_spec <pdm::ast::ClassSpec*> (153)
        on left: 164
        on right: 16 19 169 177
    primary_class_spec <pdm::ast::ClassSpec*> (154)
        on left: 165 166 167
        on right: 164
    mod_prefix_cid_class_spec <pdm::ast::ClassSpec*> (155)
        on left: 168
        on right: 166
    class_exp_class_spec <pdm::ast::ClassSpec*> (156)
        on left: 169
        on right: 167
    struct_exp_field <pdm::ast::StructExp::Field*> (157)
        on left: 170
        on right: 190 191
    vpattern_field <pdm::ast::VPattern::Field*> (158)
        on left: 171 172 173
        on right: 184 185
    lpattern_field <pdm::ast::LPattern::Field*> (159)
        on left: 174 175
        on right: 179 186 187
    tpattern_field <pdm::ast::TPattern::Field*> (160)
        on left: 176 177
        on right: 188 189
    destructured_lpattern <pdm::ast::LPattern*> (161)
        on left: 178
        on right: 180
    lpattern <pdm::ast::LPattern*> (162)
        on left: 179 180
        on right: 31 32 33
    vpattern <pdm::ast::VPattern*> (163)
        on left: 181 182
        on right: 18 154
    tpattern <pdm::ast::TPattern*> (164)
        on left: 183
        on right: 9 11
    vpattern_field_cl <std::vector<pdm::ast::VPattern::Field*>> (165)
        on left: 184 185
        on right: 181 185
    lpattern_field_cl <std::vector<pdm::ast::LPattern::Field*>> (166)
        on left: 186 187
        on right: 178 187
    tpattern_field_cl1 <std::vector<pdm::ast::TPattern::Field*>> (167)
        on left: 188 189
        on right: 183 189
    struct_exp_field_cl <std::vector<pdm::ast::StructExp::Field*>> (168)
        on left: 190 191
        on right: 61 191


State 0

    0 $accept: • script $end

    $default  reduce using rule 2 (script_header)

    script         go to state 1
    script_header  go to state 2


State 1

    0 $accept: script • $end

    $end  shift, and go to state 3


State 2

    1 script: script_header • script_field_sl
    3 script_header: script_header • script_header_stmt ";"

    "mod"      shift, and go to state 4
    "imports"  shift, and go to state 5

    script_header_stmt  go to state 6
    script_field        go to state 7
    script_field_sl     go to state 8
    import_stmt         go to state 9


State 3

    0 $accept: script $end •

    $default  accept


State 4

    5 script_field: "mod" • vid native_mod_exp

    "val_id"  shift, and go to state 10

    vid  go to state 11


State 5

   20 import_stmt: "imports" • "{" import_field_group_sl0 "}"

    "{"  shift, and go to state 12


State 6

    3 script_header: script_header script_header_stmt • ";"

    ";"  shift, and go to state 13


State 7

    6 script_field_sl: script_field • ";"

    ";"  shift, and go to state 14


State 8

    1 script: script_header script_field_sl •
    7 script_field_sl: script_field_sl • script_field ";"

    "mod"  shift, and go to state 4

    $default  reduce using rule 1 (script)

    script_field  go to state 15


State 9

    4 script_header_stmt: import_stmt •

    $default  reduce using rule 4 (script_header_stmt)


State 10

   37 vid: "val_id" •

    $default  reduce using rule 37 (vid)


State 11

    5 script_field: "mod" vid • native_mod_exp

    "["  shift, and go to state 16
    "{"  shift, and go to state 17

    native_mod_exp  go to state 18
    tpattern        go to state 19


State 12

   20 import_stmt: "imports" "{" • import_field_group_sl0 "}"

    $default  reduce using rule 21 (import_field_group_sl0)

    import_field_group_sl0  go to state 20


State 13

    3 script_header: script_header script_header_stmt ";" •

    $default  reduce using rule 3 (script_header)


State 14

    6 script_field_sl: script_field ";" •

    $default  reduce using rule 6 (script_field_sl)


State 15

    7 script_field_sl: script_field_sl script_field • ";"

    ";"  shift, and go to state 21


State 16

  183 tpattern: "[" • tpattern_field_cl1 "]"

    "val_id"  shift, and go to state 10
    "TypeId"  shift, and go to state 22

    tid                 go to state 23
    vid                 go to state 24
    tpattern_field      go to state 25
    tpattern_field_cl1  go to state 26


State 17

    8 native_mod_exp: "{" • mod_field_sl "}"
   10               | "{" • "}"

    "mod"  shift, and go to state 27
    "let"  shift, and go to state 28
    "}"    shift, and go to state 29

    mod_field_sl  go to state 30
    mod_field     go to state 31


State 18

    5 script_field: "mod" vid native_mod_exp •

    $default  reduce using rule 5 (script_field)


State 19

    9 native_mod_exp: tpattern • "{" mod_field_sl "}"
   11               | tpattern • "{" "}"

    "{"  shift, and go to state 32


State 20

   20 import_stmt: "imports" "{" import_field_group_sl0 • "}"
   22 import_field_group_sl0: import_field_group_sl0 • import_field_group ";"

    "val_id"  shift, and go to state 10
    "}"       shift, and go to state 33

    import_field_group  go to state 34
    import_field_cl1    go to state 35
    vid                 go to state 36


State 21

    7 script_field_sl: script_field_sl script_field ";" •

    $default  reduce using rule 7 (script_field_sl)


State 22

   36 tid: "TypeId" •

    $default  reduce using rule 36 (tid)


State 23

  177 tpattern_field: tid • class_spec

    "val_id"     shift, and go to state 10
    "CLS_ID"     shift, and go to state 37
    "typeclass"  shift, and go to state 38

    vid                        go to state 39
    cid                        go to state 40
    mod_prefix                 go to state 41
    class_spec                 go to state 42
    primary_class_spec         go to state 43
    mod_prefix_cid_class_spec  go to state 44
    class_exp_class_spec       go to state 45


State 24

  176 tpattern_field: vid • type_spec

    "val_id"        shift, and go to state 10
    "TypeId"        shift, and go to state 22
    "enum"          shift, and go to state 46
    "anonymous_fn"  shift, and go to state 47
    "["             shift, and go to state 48
    "{"             shift, and go to state 49

    tid               go to state 50
    vid               go to state 39
    mod_prefix        go to state 51
    type_spec         go to state 52
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 25

  188 tpattern_field_cl1: tpattern_field •

    $default  reduce using rule 188 (tpattern_field_cl1)


State 26

  183 tpattern: "[" tpattern_field_cl1 • "]"
  189 tpattern_field_cl1: tpattern_field_cl1 • "," tpattern_field

    ","  shift, and go to state 59
    "]"  shift, and go to state 60


State 27

   17 mod_field: "mod" • vid native_mod_exp

    "val_id"  shift, and go to state 10

    vid  go to state 61


State 28

   14 mod_field: "let" • vid "=" long_exp
   15          | "let" • tid "=" type_spec
   16          | "let" • cid "=" class_spec
   18          | "let" • vid vpattern type_spec "=" bracketed_exp
   19          | "let" • cid "(" tid class_spec ")" "=" "{" type_query_exp_sl0 "}"

    "val_id"  shift, and go to state 10
    "TypeId"  shift, and go to state 22
    "CLS_ID"  shift, and go to state 37

    tid  go to state 62
    vid  go to state 63
    cid  go to state 64


State 29

   10 native_mod_exp: "{" "}" •

    $default  reduce using rule 10 (native_mod_exp)


State 30

    8 native_mod_exp: "{" mod_field_sl • "}"
   13 mod_field_sl: mod_field_sl • mod_field ";"

    "mod"  shift, and go to state 27
    "let"  shift, and go to state 28
    "}"    shift, and go to state 65

    mod_field  go to state 66


State 31

   12 mod_field_sl: mod_field • ";"

    ";"  shift, and go to state 67


State 32

    9 native_mod_exp: tpattern "{" • mod_field_sl "}"
   11               | tpattern "{" • "}"

    "mod"  shift, and go to state 27
    "let"  shift, and go to state 28
    "}"    shift, and go to state 68

    mod_field_sl  go to state 69
    mod_field     go to state 31


State 33

   20 import_stmt: "imports" "{" import_field_group_sl0 "}" •

    $default  reduce using rule 20 (import_stmt)


State 34

   22 import_field_group_sl0: import_field_group_sl0 import_field_group • ";"

    ";"  shift, and go to state 70


State 35

   23 import_field_group: import_field_cl1 • "from" stringl
   25 import_field_cl1: import_field_cl1 • "," vid

    "from"  shift, and go to state 71
    ","     shift, and go to state 72


State 36

   24 import_field_cl1: vid •

    $default  reduce using rule 24 (import_field_cl1)


State 37

   38 cid: "CLS_ID" •

    $default  reduce using rule 38 (cid)


State 38

  169 class_exp_class_spec: "typeclass" • "(" tid class_spec ")" "{" type_query_exp_sl0 "}"

    "("  shift, and go to state 73


State 39

   42 mod_prefix: vid • "::"
   43           | vid • "[" targ_cl "]" "::"

    "::"  shift, and go to state 74
    "["   shift, and go to state 75


State 40

  165 primary_class_spec: cid •

    $default  reduce using rule 165 (primary_class_spec)


State 41

   44 mod_prefix: mod_prefix • vid "::"
   45           | mod_prefix • vid "[" targ_cl "]" "::"
  168 mod_prefix_cid_class_spec: mod_prefix • cid

    "val_id"  shift, and go to state 10
    "CLS_ID"  shift, and go to state 37

    vid  go to state 76
    cid  go to state 77


State 42

  177 tpattern_field: tid class_spec •

    $default  reduce using rule 177 (tpattern_field)


State 43

  164 class_spec: primary_class_spec •

    $default  reduce using rule 164 (class_spec)


State 44

  166 primary_class_spec: mod_prefix_cid_class_spec •

    $default  reduce using rule 166 (primary_class_spec)


State 45

  167 primary_class_spec: class_exp_class_spec •

    $default  reduce using rule 167 (primary_class_spec)


State 46

  153 enum_type_spec: "enum" • "{" enum_type_spec_field_cl "}"

    "{"  shift, and go to state 78


State 47

  154 fn_type_spec: "anonymous_fn" • vpattern type_spec

    "("  shift, and go to state 79

    vpattern  go to state 80


State 48

  144 array_type_spec: "[" • type_spec "*" expr "]"

    "val_id"        shift, and go to state 10
    "TypeId"        shift, and go to state 22
    "enum"          shift, and go to state 46
    "anonymous_fn"  shift, and go to state 47
    "["             shift, and go to state 48
    "{"             shift, and go to state 49

    tid               go to state 50
    vid               go to state 39
    mod_prefix        go to state 51
    type_spec         go to state 81
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 49

  142 tuple_type_spec: "{" • type_spec "}"
  143                | "{" • type_spec_cl2 "}"
  145 struct_type_spec: "{" • struct_type_spec_field_cl "}"

    "val_id"        shift, and go to state 10
    "TypeId"        shift, and go to state 22
    "enum"          shift, and go to state 46
    "anonymous_fn"  shift, and go to state 47
    "["             shift, and go to state 48
    "{"             shift, and go to state 49

    tid                        go to state 50
    vid                        go to state 82
    mod_prefix                 go to state 51
    type_spec_cl2              go to state 83
    type_spec                  go to state 84
    mod_prefix_tid             go to state 53
    tuple_type_spec            go to state 54
    array_type_spec            go to state 55
    struct_type_spec           go to state 56
    struct_type_spec_field_cl  go to state 85
    struct_type_spec_field     go to state 86
    enum_type_spec             go to state 57
    fn_type_spec               go to state 58


State 50

  134 type_spec: tid •

    $default  reduce using rule 134 (type_spec)


State 51

   44 mod_prefix: mod_prefix • vid "::"
   45           | mod_prefix • vid "[" targ_cl "]" "::"
  141 mod_prefix_tid: mod_prefix • tid

    "val_id"  shift, and go to state 10
    "TypeId"  shift, and go to state 22

    tid  go to state 87
    vid  go to state 76


State 52

  176 tpattern_field: vid type_spec •

    $default  reduce using rule 176 (tpattern_field)


State 53

  135 type_spec: mod_prefix_tid •

    $default  reduce using rule 135 (type_spec)


State 54

  136 type_spec: tuple_type_spec •

    $default  reduce using rule 136 (type_spec)


State 55

  137 type_spec: array_type_spec •

    $default  reduce using rule 137 (type_spec)


State 56

  138 type_spec: struct_type_spec •

    $default  reduce using rule 138 (type_spec)


State 57

  139 type_spec: enum_type_spec •

    $default  reduce using rule 139 (type_spec)


State 58

  140 type_spec: fn_type_spec •

    $default  reduce using rule 140 (type_spec)


State 59

  189 tpattern_field_cl1: tpattern_field_cl1 "," • tpattern_field

    "val_id"  shift, and go to state 10
    "TypeId"  shift, and go to state 22

    tid             go to state 23
    vid             go to state 24
    tpattern_field  go to state 88


State 60

  183 tpattern: "[" tpattern_field_cl1 "]" •

    $default  reduce using rule 183 (tpattern)


State 61

   17 mod_field: "mod" vid • native_mod_exp

    "["  shift, and go to state 16
    "{"  shift, and go to state 17

    native_mod_exp  go to state 89
    tpattern        go to state 19


State 62

   15 mod_field: "let" tid • "=" type_spec

    "="  shift, and go to state 90


State 63

   14 mod_field: "let" vid • "=" long_exp
   18          | "let" vid • vpattern type_spec "=" bracketed_exp

    "("  shift, and go to state 79
    "="  shift, and go to state 91

    vpattern  go to state 92


State 64

   16 mod_field: "let" cid • "=" class_spec
   19          | "let" cid • "(" tid class_spec ")" "=" "{" type_query_exp_sl0 "}"

    "("  shift, and go to state 93
    "="  shift, and go to state 94


State 65

    8 native_mod_exp: "{" mod_field_sl "}" •

    $default  reduce using rule 8 (native_mod_exp)


State 66

   13 mod_field_sl: mod_field_sl mod_field • ";"

    ";"  shift, and go to state 95


State 67

   12 mod_field_sl: mod_field ";" •

    $default  reduce using rule 12 (mod_field_sl)


State 68

   11 native_mod_exp: tpattern "{" "}" •

    $default  reduce using rule 11 (native_mod_exp)


State 69

    9 native_mod_exp: tpattern "{" mod_field_sl • "}"
   13 mod_field_sl: mod_field_sl • mod_field ";"

    "mod"  shift, and go to state 27
    "let"  shift, and go to state 28
    "}"    shift, and go to state 96

    mod_field  go to state 66


State 70

   22 import_field_group_sl0: import_field_group_sl0 import_field_group ";" •

    $default  reduce using rule 22 (import_field_group_sl0)


State 71

   23 import_field_group: import_field_cl1 "from" • stringl

    "\"dq-string-literal\""  shift, and go to state 97
    "'sq-string-literal'"    shift, and go to state 98

    stringl  go to state 99


State 72

   25 import_field_cl1: import_field_cl1 "," • vid

    "val_id"  shift, and go to state 10

    vid  go to state 100


State 73

  169 class_exp_class_spec: "typeclass" "(" • tid class_spec ")" "{" type_query_exp_sl0 "}"

    "TypeId"  shift, and go to state 22

    tid  go to state 101


State 74

   42 mod_prefix: vid "::" •

    $default  reduce using rule 42 (mod_prefix)


State 75

   43 mod_prefix: vid "[" • targ_cl "]" "::"

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 46
    "if"                     shift, and go to state 102
    "anonymous_fn"           shift, and go to state 47
    "not"                    shift, and go to state 103
    "42"                     shift, and go to state 104
    "0x2a"                   shift, and go to state 105
    "42u"                    shift, and go to state 106
    "0x2Au"                  shift, and go to state 107
    "4.2"                    shift, and go to state 108
    "\"dq-string-literal\""  shift, and go to state 109
    "'sq-string-literal'"    shift, and go to state 110
    "("                      shift, and go to state 111
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 112
    "+"                      shift, and go to state 113
    "-"                      shift, and go to state 114

    tid               go to state 50
    vid               go to state 115
    floatl            go to state 116
    mod_prefix        go to state 117
    expr              go to state 118
    bracketed_exp     go to state 119
    paren_exp         go to state 120
    vtupleExpr        go to state 121
    vstructExpr       go to state 122
    primary_exp       go to state 123
    int_expr          go to state 124
    stringls          go to state 125
    if_exp            go to state 126
    chain_exp         go to state 127
    postfix_exp       go to state 128
    vcall_exp         go to state 129
    dot_name_exp      go to state 130
    dot_index_exp     go to state 131
    unary_exp         go to state 132
    unary_op          go to state 133
    binary_exp        go to state 134
    mul_binary_exp    go to state 135
    add_binary_exp    go to state 136
    cmp_binary_exp    go to state 137
    eq_binary_exp     go to state 138
    and_binary_exp    go to state 139
    xor_binary_exp    go to state 140
    or_binary_exp     go to state 141
    type_spec         go to state 142
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58
    targ              go to state 143
    targ_cl           go to state 144


State 76

   44 mod_prefix: mod_prefix vid • "::"
   45           | mod_prefix vid • "[" targ_cl "]" "::"

    "::"  shift, and go to state 145
    "["   shift, and go to state 146


State 77

  168 mod_prefix_cid_class_spec: mod_prefix cid •

    $default  reduce using rule 168 (mod_prefix_cid_class_spec)


State 78

  153 enum_type_spec: "enum" "{" • enum_type_spec_field_cl "}"

    "TypeId"  shift, and go to state 22

    tid                      go to state 147
    enum_type_spec_field     go to state 148
    enum_type_spec_field_cl  go to state 149


State 79

  181 vpattern: "(" • vpattern_field_cl ")"
  182         | "(" • ")"

    "val_id"  shift, and go to state 10
    "out"     shift, and go to state 150
    "inout"   shift, and go to state 151
    ")"       shift, and go to state 152

    vid                go to state 153
    vpattern_field     go to state 154
    vpattern_field_cl  go to state 155


State 80

  154 fn_type_spec: "anonymous_fn" vpattern • type_spec

    "val_id"        shift, and go to state 10
    "TypeId"        shift, and go to state 22
    "enum"          shift, and go to state 46
    "anonymous_fn"  shift, and go to state 47
    "["             shift, and go to state 48
    "{"             shift, and go to state 49

    tid               go to state 50
    vid               go to state 39
    mod_prefix        go to state 51
    type_spec         go to state 156
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 81

  144 array_type_spec: "[" type_spec • "*" expr "]"

    "*"  shift, and go to state 157


State 82

   42 mod_prefix: vid • "::"
   43           | vid • "[" targ_cl "]" "::"
  148 struct_type_spec_field: vid • type_spec

    "val_id"        shift, and go to state 10
    "TypeId"        shift, and go to state 22
    "enum"          shift, and go to state 46
    "anonymous_fn"  shift, and go to state 47
    "::"            shift, and go to state 74
    "["             shift, and go to state 158
    "{"             shift, and go to state 49

    tid               go to state 50
    vid               go to state 39
    mod_prefix        go to state 51
    type_spec         go to state 159
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 83

  133 type_spec_cl2: type_spec_cl2 • "," type_spec
  143 tuple_type_spec: "{" type_spec_cl2 • "}"

    ","  shift, and go to state 160
    "}"  shift, and go to state 161


State 84

  132 type_spec_cl2: type_spec • "," type_spec
  142 tuple_type_spec: "{" type_spec • "}"

    ","  shift, and go to state 162
    "}"  shift, and go to state 163


State 85

  145 struct_type_spec: "{" struct_type_spec_field_cl • "}"
  147 struct_type_spec_field_cl: struct_type_spec_field_cl • "," struct_type_spec_field

    ","  shift, and go to state 164
    "}"  shift, and go to state 165


State 86

  146 struct_type_spec_field_cl: struct_type_spec_field •

    $default  reduce using rule 146 (struct_type_spec_field_cl)


State 87

  141 mod_prefix_tid: mod_prefix tid •

    $default  reduce using rule 141 (mod_prefix_tid)


State 88

  189 tpattern_field_cl1: tpattern_field_cl1 "," tpattern_field •

    $default  reduce using rule 189 (tpattern_field_cl1)


State 89

   17 mod_field: "mod" vid native_mod_exp •

    $default  reduce using rule 17 (mod_field)


State 90

   15 mod_field: "let" tid "=" • type_spec

    "val_id"        shift, and go to state 10
    "TypeId"        shift, and go to state 22
    "enum"          shift, and go to state 46
    "anonymous_fn"  shift, and go to state 47
    "["             shift, and go to state 48
    "{"             shift, and go to state 49

    tid               go to state 50
    vid               go to state 39
    mod_prefix        go to state 51
    type_spec         go to state 166
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 91

   14 mod_field: "let" vid "=" • long_exp

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 46
    "if"                     shift, and go to state 102
    "anonymous_fn"           shift, and go to state 47
    "not"                    shift, and go to state 103
    "42"                     shift, and go to state 104
    "0x2a"                   shift, and go to state 105
    "42u"                    shift, and go to state 106
    "0x2Au"                  shift, and go to state 107
    "4.2"                    shift, and go to state 108
    "\"dq-string-literal\""  shift, and go to state 109
    "'sq-string-literal'"    shift, and go to state 110
    "("                      shift, and go to state 111
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 112
    "+"                      shift, and go to state 113
    "-"                      shift, and go to state 114

    tid               go to state 50
    vid               go to state 115
    floatl            go to state 116
    mod_prefix        go to state 117
    expr              go to state 167
    long_exp          go to state 168
    bracketed_exp     go to state 119
    paren_exp         go to state 120
    vtupleExpr        go to state 121
    vstructExpr       go to state 122
    primary_exp       go to state 123
    int_expr          go to state 124
    stringls          go to state 125
    if_exp            go to state 126
    chain_exp         go to state 127
    lambda_exp        go to state 169
    postfix_exp       go to state 128
    vcall_exp         go to state 129
    dot_name_exp      go to state 130
    dot_index_exp     go to state 131
    unary_exp         go to state 132
    unary_op          go to state 133
    binary_exp        go to state 134
    mul_binary_exp    go to state 135
    add_binary_exp    go to state 136
    cmp_binary_exp    go to state 137
    eq_binary_exp     go to state 138
    and_binary_exp    go to state 139
    xor_binary_exp    go to state 140
    or_binary_exp     go to state 141
    type_spec         go to state 170
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 171


State 92

   18 mod_field: "let" vid vpattern • type_spec "=" bracketed_exp

    "val_id"        shift, and go to state 10
    "TypeId"        shift, and go to state 22
    "enum"          shift, and go to state 46
    "anonymous_fn"  shift, and go to state 47
    "["             shift, and go to state 48
    "{"             shift, and go to state 49

    tid               go to state 50
    vid               go to state 39
    mod_prefix        go to state 51
    type_spec         go to state 172
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 93

   19 mod_field: "let" cid "(" • tid class_spec ")" "=" "{" type_query_exp_sl0 "}"

    "TypeId"  shift, and go to state 22

    tid  go to state 173


State 94

   16 mod_field: "let" cid "=" • class_spec

    "val_id"     shift, and go to state 10
    "CLS_ID"     shift, and go to state 37
    "typeclass"  shift, and go to state 38

    vid                        go to state 39
    cid                        go to state 40
    mod_prefix                 go to state 41
    class_spec                 go to state 174
    primary_class_spec         go to state 43
    mod_prefix_cid_class_spec  go to state 44
    class_exp_class_spec       go to state 45


State 95

   13 mod_field_sl: mod_field_sl mod_field ";" •

    $default  reduce using rule 13 (mod_field_sl)


State 96

    9 native_mod_exp: tpattern "{" mod_field_sl "}" •

    $default  reduce using rule 9 (native_mod_exp)


State 97

   41 stringl: "\"dq-string-literal\"" •

    $default  reduce using rule 41 (stringl)


State 98

   40 stringl: "'sq-string-literal'" •

    $default  reduce using rule 40 (stringl)


State 99

   23 import_field_group: import_field_cl1 "from" stringl •

    $default  reduce using rule 23 (import_field_group)


State 100

   25 import_field_cl1: import_field_cl1 "," vid •

    $default  reduce using rule 25 (import_field_cl1)


State 101

  169 class_exp_class_spec: "typeclass" "(" tid • class_spec ")" "{" type_query_exp_sl0 "}"

    "val_id"     shift, and go to state 10
    "CLS_ID"     shift, and go to state 37
    "typeclass"  shift, and go to state 38

    vid                        go to state 39
    cid                        go to state 40
    mod_prefix                 go to state 41
    class_spec                 go to state 175
    primary_class_spec         go to state 43
    mod_prefix_cid_class_spec  go to state 44
    class_exp_class_spec       go to state 45


State 102

   77 if_exp: "if" • bracketed_exp bracketed_exp
   78       | "if" • bracketed_exp bracketed_exp "else" primary_exp

    "("  shift, and go to state 111
    "{"  shift, and go to state 176

    bracketed_exp  go to state 177
    paren_exp      go to state 120
    vtupleExpr     go to state 121
    vstructExpr    go to state 122
    chain_exp      go to state 127


State 103

  101 unary_op: "not" •

    $default  reduce using rule 101 (unary_op)


State 104

   69 int_expr: "42" •

    $default  reduce using rule 69 (int_expr)


State 105

   70 int_expr: "0x2a" •

    $default  reduce using rule 70 (int_expr)


State 106

   71 int_expr: "42u" •

    $default  reduce using rule 71 (int_expr)


State 107

   72 int_expr: "0x2Au" •

    $default  reduce using rule 72 (int_expr)


State 108

   39 floatl: "4.2" •

    $default  reduce using rule 39 (floatl)


State 109

   74 stringls: "\"dq-string-literal\"" •

    $default  reduce using rule 74 (stringls)


State 110

   73 stringls: "'sq-string-literal'" •

    $default  reduce using rule 73 (stringls)


State 111

   57 paren_exp: "(" • long_exp ")"
   58 vtupleExpr: "(" • ")"
   59           | "(" • expr "," ")"
   60           | "(" • expr_cl2 ")"

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 46
    "if"                     shift, and go to state 102
    "anonymous_fn"           shift, and go to state 47
    "not"                    shift, and go to state 103
    "42"                     shift, and go to state 104
    "0x2a"                   shift, and go to state 105
    "42u"                    shift, and go to state 106
    "0x2Au"                  shift, and go to state 107
    "4.2"                    shift, and go to state 108
    "\"dq-string-literal\""  shift, and go to state 109
    "'sq-string-literal'"    shift, and go to state 110
    "("                      shift, and go to state 111
    ")"                      shift, and go to state 178
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 112
    "+"                      shift, and go to state 113
    "-"                      shift, and go to state 114

    tid               go to state 50
    vid               go to state 115
    floatl            go to state 116
    mod_prefix        go to state 117
    expr              go to state 179
    long_exp          go to state 180
    expr_cl2          go to state 181
    bracketed_exp     go to state 119
    paren_exp         go to state 120
    vtupleExpr        go to state 121
    vstructExpr       go to state 122
    primary_exp       go to state 123
    int_expr          go to state 124
    stringls          go to state 125
    if_exp            go to state 126
    chain_exp         go to state 127
    lambda_exp        go to state 169
    postfix_exp       go to state 128
    vcall_exp         go to state 129
    dot_name_exp      go to state 130
    dot_index_exp     go to state 131
    unary_exp         go to state 132
    unary_op          go to state 133
    binary_exp        go to state 134
    mul_binary_exp    go to state 135
    add_binary_exp    go to state 136
    cmp_binary_exp    go to state 137
    eq_binary_exp     go to state 138
    and_binary_exp    go to state 139
    xor_binary_exp    go to state 140
    or_binary_exp     go to state 141
    type_spec         go to state 170
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 171


State 112

   61 vstructExpr: "{" • struct_exp_field_cl "}"
   79 chain_exp: "{" • "}"
   80          | "{" • long_exp "}"
   81          | "{" • chain_prefix "}"
   82          | "{" • chain_prefix long_exp "}"
  142 tuple_type_spec: "{" • type_spec "}"
  143                | "{" • type_spec_cl2 "}"
  145 struct_type_spec: "{" • struct_type_spec_field_cl "}"

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 46
    "if"                     shift, and go to state 102
    "const"                  shift, and go to state 182
    "val"                    shift, and go to state 183
    "var"                    shift, and go to state 184
    "set"                    shift, and go to state 185
    "anonymous_fn"           shift, and go to state 47
    "not"                    shift, and go to state 103
    "discard"                shift, and go to state 186
    "42"                     shift, and go to state 104
    "0x2a"                   shift, and go to state 105
    "42u"                    shift, and go to state 106
    "0x2Au"                  shift, and go to state 107
    "4.2"                    shift, and go to state 108
    "\"dq-string-literal\""  shift, and go to state 109
    "'sq-string-literal'"    shift, and go to state 110
    "("                      shift, and go to state 111
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 112
    "}"                      shift, and go to state 187
    "+"                      shift, and go to state 113
    "-"                      shift, and go to state 114

    chain_prefix_stmt          go to state 188
    const_stmt                 go to state 189
    val_stmt                   go to state 190
    var_stmt                   go to state 191
    set_stmt                   go to state 192
    discard_stmt               go to state 193
    tid                        go to state 50
    vid                        go to state 194
    floatl                     go to state 116
    mod_prefix                 go to state 117
    expr                       go to state 167
    long_exp                   go to state 195
    bracketed_exp              go to state 119
    paren_exp                  go to state 120
    vtupleExpr                 go to state 121
    vstructExpr                go to state 122
    primary_exp                go to state 123
    int_expr                   go to state 124
    stringls                   go to state 125
    if_exp                     go to state 126
    chain_exp                  go to state 127
    chain_prefix               go to state 196
    lambda_exp                 go to state 169
    postfix_exp                go to state 128
    vcall_exp                  go to state 129
    dot_name_exp               go to state 130
    dot_index_exp              go to state 131
    unary_exp                  go to state 132
    unary_op                   go to state 133
    binary_exp                 go to state 134
    mul_binary_exp             go to state 135
    add_binary_exp             go to state 136
    cmp_binary_exp             go to state 137
    eq_binary_exp              go to state 138
    and_binary_exp             go to state 139
    xor_binary_exp             go to state 140
    or_binary_exp              go to state 141
    type_spec_cl2              go to state 83
    type_spec                  go to state 197
    mod_prefix_tid             go to state 53
    tuple_type_spec            go to state 54
    array_type_spec            go to state 55
    struct_type_spec           go to state 56
    struct_type_spec_field_cl  go to state 85
    struct_type_spec_field     go to state 86
    enum_type_spec             go to state 57
    fn_type_spec               go to state 171
    struct_exp_field           go to state 198
    struct_exp_field_cl        go to state 199


State 113

   99 unary_op: "+" •

    $default  reduce using rule 99 (unary_op)


State 114

  100 unary_op: "-" •

    $default  reduce using rule 100 (unary_op)


State 115

   42 mod_prefix: vid • "::"
   43           | vid • "[" targ_cl "]" "::"
   63 primary_exp: vid •

    "::"  shift, and go to state 74
    "["   shift, and go to state 75

    $default  reduce using rule 63 (primary_exp)


State 116

   65 primary_exp: floatl •

    $default  reduce using rule 65 (primary_exp)


State 117

   44 mod_prefix: mod_prefix • vid "::"
   45           | mod_prefix • vid "[" targ_cl "]" "::"
   68 primary_exp: mod_prefix • vid
  141 mod_prefix_tid: mod_prefix • tid

    "val_id"  shift, and go to state 10
    "TypeId"  shift, and go to state 22

    tid  go to state 87
    vid  go to state 200


State 118

  156 targ: expr •

    $default  reduce using rule 156 (targ)


State 119

   62 primary_exp: bracketed_exp •

    $default  reduce using rule 62 (primary_exp)


State 120

   53 bracketed_exp: paren_exp •

    $default  reduce using rule 53 (bracketed_exp)


State 121

   54 bracketed_exp: vtupleExpr •

    $default  reduce using rule 54 (bracketed_exp)


State 122

   55 bracketed_exp: vstructExpr •

    $default  reduce using rule 55 (bracketed_exp)


State 123

   86 postfix_exp: primary_exp •

    $default  reduce using rule 86 (postfix_exp)


State 124

   64 primary_exp: int_expr •

    $default  reduce using rule 64 (primary_exp)


State 125

   66 primary_exp: stringls •
   75 stringls: stringls • "'sq-string-literal'"
   76         | stringls • "\"dq-string-literal\""

    "\"dq-string-literal\""  shift, and go to state 201
    "'sq-string-literal'"    shift, and go to state 202

    $default  reduce using rule 66 (primary_exp)


State 126

   67 primary_exp: if_exp •

    $default  reduce using rule 67 (primary_exp)


State 127

   56 bracketed_exp: chain_exp •

    $default  reduce using rule 56 (bracketed_exp)


State 128

   90 vcall_exp: postfix_exp • "(" ")"
   91          | postfix_exp • "(" varg_cl ")"
   92 dot_name_exp: postfix_exp • "." "val_id"
   95 dot_index_exp: postfix_exp • "." int_expr
   96              | postfix_exp • "." bracketed_exp
   97 unary_exp: postfix_exp •

    "."  shift, and go to state 203
    "("  shift, and go to state 204

    $default  reduce using rule 97 (unary_exp)


State 129

   87 postfix_exp: vcall_exp •

    $default  reduce using rule 87 (postfix_exp)


State 130

   88 postfix_exp: dot_name_exp •

    $default  reduce using rule 88 (postfix_exp)


State 131

   89 postfix_exp: dot_index_exp •

    $default  reduce using rule 89 (postfix_exp)


State 132

  106 mul_binary_exp: unary_exp •

    $default  reduce using rule 106 (mul_binary_exp)


State 133

   98 unary_exp: unary_op • unary_exp

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 46
    "if"                     shift, and go to state 102
    "anonymous_fn"           shift, and go to state 47
    "not"                    shift, and go to state 103
    "42"                     shift, and go to state 104
    "0x2a"                   shift, and go to state 105
    "42u"                    shift, and go to state 106
    "0x2Au"                  shift, and go to state 107
    "4.2"                    shift, and go to state 108
    "\"dq-string-literal\""  shift, and go to state 109
    "'sq-string-literal'"    shift, and go to state 110
    "("                      shift, and go to state 111
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 112
    "+"                      shift, and go to state 113
    "-"                      shift, and go to state 114

    tid               go to state 50
    vid               go to state 115
    floatl            go to state 116
    mod_prefix        go to state 117
    bracketed_exp     go to state 119
    paren_exp         go to state 120
    vtupleExpr        go to state 121
    vstructExpr       go to state 122
    primary_exp       go to state 123
    int_expr          go to state 124
    stringls          go to state 125
    if_exp            go to state 126
    chain_exp         go to state 127
    postfix_exp       go to state 128
    vcall_exp         go to state 129
    dot_name_exp      go to state 130
    dot_index_exp     go to state 131
    unary_exp         go to state 205
    unary_op          go to state 133
    type_spec         go to state 170
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 134

   46 expr: binary_exp •

    $default  reduce using rule 46 (expr)


State 135

  107 mul_binary_exp: mul_binary_exp • mul_binary_op unary_exp
  110 add_binary_exp: mul_binary_exp •

    "*"  shift, and go to state 206
    "/"  shift, and go to state 207
    "%"  shift, and go to state 208

    $default  reduce using rule 110 (add_binary_exp)

    mul_binary_op  go to state 209


State 136

  111 add_binary_exp: add_binary_exp • add_binary_op mul_binary_exp
  116 cmp_binary_exp: add_binary_exp •

    "+"  shift, and go to state 210
    "-"  shift, and go to state 211

    $default  reduce using rule 116 (cmp_binary_exp)

    add_binary_op  go to state 212


State 137

  117 cmp_binary_exp: cmp_binary_exp • cmp_binary_op add_binary_exp
  120 eq_binary_exp: cmp_binary_exp •

    "<"   shift, and go to state 213
    "<="  shift, and go to state 214
    ">"   shift, and go to state 215
    ">="  shift, and go to state 216

    $default  reduce using rule 120 (eq_binary_exp)

    cmp_binary_op  go to state 217


State 138

  121 eq_binary_exp: eq_binary_exp • eq_binary_op cmp_binary_exp
  122 and_binary_exp: eq_binary_exp •

    "=="  shift, and go to state 218
    "!="  shift, and go to state 219

    $default  reduce using rule 122 (and_binary_exp)

    eq_binary_op  go to state 220


State 139

  123 and_binary_exp: and_binary_exp • "and" eq_binary_exp
  124 xor_binary_exp: and_binary_exp •

    "and"  shift, and go to state 221

    $default  reduce using rule 124 (xor_binary_exp)


State 140

  125 xor_binary_exp: xor_binary_exp • "xor" and_binary_exp
  126 or_binary_exp: xor_binary_exp •

    "xor"  shift, and go to state 222

    $default  reduce using rule 126 (or_binary_exp)


State 141

  102 binary_exp: or_binary_exp •
  127 or_binary_exp: or_binary_exp • "or" xor_binary_exp

    "or"  shift, and go to state 223

    $default  reduce using rule 102 (binary_exp)


State 142

   93 dot_name_exp: type_spec • "::" "TypeId"
   94             | type_spec • "::" "TypeId" "using" paren_exp
  155 targ: type_spec •

    "::"  shift, and go to state 224

    $default  reduce using rule 155 (targ)


State 143

  157 targ_cl: targ •

    $default  reduce using rule 157 (targ_cl)


State 144

   43 mod_prefix: vid "[" targ_cl • "]" "::"
  158 targ_cl: targ_cl • "," targ

    ","  shift, and go to state 225
    "]"  shift, and go to state 226


State 145

   44 mod_prefix: mod_prefix vid "::" •

    $default  reduce using rule 44 (mod_prefix)


State 146

   45 mod_prefix: mod_prefix vid "[" • targ_cl "]" "::"

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 46
    "if"                     shift, and go to state 102
    "anonymous_fn"           shift, and go to state 47
    "not"                    shift, and go to state 103
    "42"                     shift, and go to state 104
    "0x2a"                   shift, and go to state 105
    "42u"                    shift, and go to state 106
    "0x2Au"                  shift, and go to state 107
    "4.2"                    shift, and go to state 108
    "\"dq-string-literal\""  shift, and go to state 109
    "'sq-string-literal'"    shift, and go to state 110
    "("                      shift, and go to state 111
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 112
    "+"                      shift, and go to state 113
    "-"                      shift, and go to state 114

    tid               go to state 50
    vid               go to state 115
    floatl            go to state 116
    mod_prefix        go to state 117
    expr              go to state 118
    bracketed_exp     go to state 119
    paren_exp         go to state 120
    vtupleExpr        go to state 121
    vstructExpr       go to state 122
    primary_exp       go to state 123
    int_expr          go to state 124
    stringls          go to state 125
    if_exp            go to state 126
    chain_exp         go to state 127
    postfix_exp       go to state 128
    vcall_exp         go to state 129
    dot_name_exp      go to state 130
    dot_index_exp     go to state 131
    unary_exp         go to state 132
    unary_op          go to state 133
    binary_exp        go to state 134
    mul_binary_exp    go to state 135
    add_binary_exp    go to state 136
    cmp_binary_exp    go to state 137
    eq_binary_exp     go to state 138
    and_binary_exp    go to state 139
    xor_binary_exp    go to state 140
    or_binary_exp     go to state 141
    type_spec         go to state 142
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58
    targ              go to state 143
    targ_cl           go to state 227


State 147

  149 enum_type_spec_field: tid •
  150                     | tid • type_spec

    "val_id"        shift, and go to state 10
    "TypeId"        shift, and go to state 22
    "enum"          shift, and go to state 46
    "anonymous_fn"  shift, and go to state 47
    "["             shift, and go to state 48
    "{"             shift, and go to state 49

    $default  reduce using rule 149 (enum_type_spec_field)

    tid               go to state 50
    vid               go to state 39
    mod_prefix        go to state 51
    type_spec         go to state 228
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 148

  151 enum_type_spec_field_cl: enum_type_spec_field •

    $default  reduce using rule 151 (enum_type_spec_field_cl)


State 149

  152 enum_type_spec_field_cl: enum_type_spec_field_cl • "," enum_type_spec_field
  153 enum_type_spec: "enum" "{" enum_type_spec_field_cl • "}"

    ","  shift, and go to state 229
    "}"  shift, and go to state 230


State 150

  172 vpattern_field: "out" • vid type_spec

    "val_id"  shift, and go to state 10

    vid  go to state 231


State 151

  173 vpattern_field: "inout" • vid type_spec

    "val_id"  shift, and go to state 10

    vid  go to state 232


State 152

  182 vpattern: "(" ")" •

    $default  reduce using rule 182 (vpattern)


State 153

  171 vpattern_field: vid • type_spec

    "val_id"        shift, and go to state 10
    "TypeId"        shift, and go to state 22
    "enum"          shift, and go to state 46
    "anonymous_fn"  shift, and go to state 47
    "["             shift, and go to state 48
    "{"             shift, and go to state 49

    tid               go to state 50
    vid               go to state 39
    mod_prefix        go to state 51
    type_spec         go to state 233
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 154

  184 vpattern_field_cl: vpattern_field •

    $default  reduce using rule 184 (vpattern_field_cl)


State 155

  181 vpattern: "(" vpattern_field_cl • ")"
  185 vpattern_field_cl: vpattern_field_cl • "," vpattern_field

    ","  shift, and go to state 234
    ")"  shift, and go to state 235


State 156

  154 fn_type_spec: "anonymous_fn" vpattern type_spec •

    $default  reduce using rule 154 (fn_type_spec)


State 157

  144 array_type_spec: "[" type_spec "*" • expr "]"

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 46
    "if"                     shift, and go to state 102
    "anonymous_fn"           shift, and go to state 47
    "not"                    shift, and go to state 103
    "42"                     shift, and go to state 104
    "0x2a"                   shift, and go to state 105
    "42u"                    shift, and go to state 106
    "0x2Au"                  shift, and go to state 107
    "4.2"                    shift, and go to state 108
    "\"dq-string-literal\""  shift, and go to state 109
    "'sq-string-literal'"    shift, and go to state 110
    "("                      shift, and go to state 111
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 112
    "+"                      shift, and go to state 113
    "-"                      shift, and go to state 114

    tid               go to state 50
    vid               go to state 115
    floatl            go to state 116
    mod_prefix        go to state 117
    expr              go to state 236
    bracketed_exp     go to state 119
    paren_exp         go to state 120
    vtupleExpr        go to state 121
    vstructExpr       go to state 122
    primary_exp       go to state 123
    int_expr          go to state 124
    stringls          go to state 125
    if_exp            go to state 126
    chain_exp         go to state 127
    postfix_exp       go to state 128
    vcall_exp         go to state 129
    dot_name_exp      go to state 130
    dot_index_exp     go to state 131
    unary_exp         go to state 132
    unary_op          go to state 133
    binary_exp        go to state 134
    mul_binary_exp    go to state 135
    add_binary_exp    go to state 136
    cmp_binary_exp    go to state 137
    eq_binary_exp     go to state 138
    and_binary_exp    go to state 139
    xor_binary_exp    go to state 140
    or_binary_exp     go to state 141
    type_spec         go to state 170
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 158

   43 mod_prefix: vid "[" • targ_cl "]" "::"
  144 array_type_spec: "[" • type_spec "*" expr "]"

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 46
    "if"                     shift, and go to state 102
    "anonymous_fn"           shift, and go to state 47
    "not"                    shift, and go to state 103
    "42"                     shift, and go to state 104
    "0x2a"                   shift, and go to state 105
    "42u"                    shift, and go to state 106
    "0x2Au"                  shift, and go to state 107
    "4.2"                    shift, and go to state 108
    "\"dq-string-literal\""  shift, and go to state 109
    "'sq-string-literal'"    shift, and go to state 110
    "("                      shift, and go to state 111
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 112
    "+"                      shift, and go to state 113
    "-"                      shift, and go to state 114

    tid               go to state 50
    vid               go to state 115
    floatl            go to state 116
    mod_prefix        go to state 117
    expr              go to state 118
    bracketed_exp     go to state 119
    paren_exp         go to state 120
    vtupleExpr        go to state 121
    vstructExpr       go to state 122
    primary_exp       go to state 123
    int_expr          go to state 124
    stringls          go to state 125
    if_exp            go to state 126
    chain_exp         go to state 127
    postfix_exp       go to state 128
    vcall_exp         go to state 129
    dot_name_exp      go to state 130
    dot_index_exp     go to state 131
    unary_exp         go to state 132
    unary_op          go to state 133
    binary_exp        go to state 134
    mul_binary_exp    go to state 135
    add_binary_exp    go to state 136
    cmp_binary_exp    go to state 137
    eq_binary_exp     go to state 138
    and_binary_exp    go to state 139
    xor_binary_exp    go to state 140
    or_binary_exp     go to state 141
    type_spec         go to state 237
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58
    targ              go to state 143
    targ_cl           go to state 144


State 159

  148 struct_type_spec_field: vid type_spec •

    $default  reduce using rule 148 (struct_type_spec_field)


State 160

  133 type_spec_cl2: type_spec_cl2 "," • type_spec

    "val_id"        shift, and go to state 10
    "TypeId"        shift, and go to state 22
    "enum"          shift, and go to state 46
    "anonymous_fn"  shift, and go to state 47
    "["             shift, and go to state 48
    "{"             shift, and go to state 49

    tid               go to state 50
    vid               go to state 39
    mod_prefix        go to state 51
    type_spec         go to state 238
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 161

  143 tuple_type_spec: "{" type_spec_cl2 "}" •

    $default  reduce using rule 143 (tuple_type_spec)


State 162

  132 type_spec_cl2: type_spec "," • type_spec

    "val_id"        shift, and go to state 10
    "TypeId"        shift, and go to state 22
    "enum"          shift, and go to state 46
    "anonymous_fn"  shift, and go to state 47
    "["             shift, and go to state 48
    "{"             shift, and go to state 49

    tid               go to state 50
    vid               go to state 39
    mod_prefix        go to state 51
    type_spec         go to state 239
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 163

  142 tuple_type_spec: "{" type_spec "}" •

    $default  reduce using rule 142 (tuple_type_spec)


State 164

  147 struct_type_spec_field_cl: struct_type_spec_field_cl "," • struct_type_spec_field

    "val_id"  shift, and go to state 10

    vid                     go to state 240
    struct_type_spec_field  go to state 241


State 165

  145 struct_type_spec: "{" struct_type_spec_field_cl "}" •

    $default  reduce using rule 145 (struct_type_spec)


State 166

   15 mod_field: "let" tid "=" type_spec •

    $default  reduce using rule 15 (mod_field)


State 167

   47 long_exp: expr •

    $default  reduce using rule 47 (long_exp)


State 168

   14 mod_field: "let" vid "=" long_exp •

    $default  reduce using rule 14 (mod_field)


State 169

   48 long_exp: lambda_exp •

    $default  reduce using rule 48 (long_exp)


State 170

   93 dot_name_exp: type_spec • "::" "TypeId"
   94             | type_spec • "::" "TypeId" "using" paren_exp

    "::"  shift, and go to state 224


State 171

   85 lambda_exp: fn_type_spec • bracketed_exp
  140 type_spec: fn_type_spec •

    "("  shift, and go to state 111
    "{"  shift, and go to state 176

    $default  reduce using rule 140 (type_spec)

    bracketed_exp  go to state 242
    paren_exp      go to state 120
    vtupleExpr     go to state 121
    vstructExpr    go to state 122
    chain_exp      go to state 127


State 172

   18 mod_field: "let" vid vpattern type_spec • "=" bracketed_exp

    "="  shift, and go to state 243


State 173

   19 mod_field: "let" cid "(" tid • class_spec ")" "=" "{" type_query_exp_sl0 "}"

    "val_id"     shift, and go to state 10
    "CLS_ID"     shift, and go to state 37
    "typeclass"  shift, and go to state 38

    vid                        go to state 39
    cid                        go to state 40
    mod_prefix                 go to state 41
    class_spec                 go to state 244
    primary_class_spec         go to state 43
    mod_prefix_cid_class_spec  go to state 44
    class_exp_class_spec       go to state 45


State 174

   16 mod_field: "let" cid "=" class_spec •

    $default  reduce using rule 16 (mod_field)


State 175

  169 class_exp_class_spec: "typeclass" "(" tid class_spec • ")" "{" type_query_exp_sl0 "}"

    ")"  shift, and go to state 245


State 176

   61 vstructExpr: "{" • struct_exp_field_cl "}"
   79 chain_exp: "{" • "}"
   80          | "{" • long_exp "}"
   81          | "{" • chain_prefix "}"
   82          | "{" • chain_prefix long_exp "}"

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 46
    "if"                     shift, and go to state 102
    "const"                  shift, and go to state 182
    "val"                    shift, and go to state 183
    "var"                    shift, and go to state 184
    "set"                    shift, and go to state 185
    "anonymous_fn"           shift, and go to state 47
    "not"                    shift, and go to state 103
    "discard"                shift, and go to state 186
    "42"                     shift, and go to state 104
    "0x2a"                   shift, and go to state 105
    "42u"                    shift, and go to state 106
    "0x2Au"                  shift, and go to state 107
    "4.2"                    shift, and go to state 108
    "\"dq-string-literal\""  shift, and go to state 109
    "'sq-string-literal'"    shift, and go to state 110
    "("                      shift, and go to state 111
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 112
    "}"                      shift, and go to state 187
    "+"                      shift, and go to state 113
    "-"                      shift, and go to state 114

    chain_prefix_stmt    go to state 188
    const_stmt           go to state 189
    val_stmt             go to state 190
    var_stmt             go to state 191
    set_stmt             go to state 192
    discard_stmt         go to state 193
    tid                  go to state 50
    vid                  go to state 246
    floatl               go to state 116
    mod_prefix           go to state 117
    expr                 go to state 167
    long_exp             go to state 195
    bracketed_exp        go to state 119
    paren_exp            go to state 120
    vtupleExpr           go to state 121
    vstructExpr          go to state 122
    primary_exp          go to state 123
    int_expr             go to state 124
    stringls             go to state 125
    if_exp               go to state 126
    chain_exp            go to state 127
    chain_prefix         go to state 196
    lambda_exp           go to state 169
    postfix_exp          go to state 128
    vcall_exp            go to state 129
    dot_name_exp         go to state 130
    dot_index_exp        go to state 131
    unary_exp            go to state 132
    unary_op             go to state 133
    binary_exp           go to state 134
    mul_binary_exp       go to state 135
    add_binary_exp       go to state 136
    cmp_binary_exp       go to state 137
    eq_binary_exp        go to state 138
    and_binary_exp       go to state 139
    xor_binary_exp       go to state 140
    or_binary_exp        go to state 141
    type_spec            go to state 170
    mod_prefix_tid       go to state 53
    tuple_type_spec      go to state 54
    array_type_spec      go to state 55
    struct_type_spec     go to state 56
    enum_type_spec       go to state 57
    fn_type_spec         go to state 171
    struct_exp_field     go to state 198
    struct_exp_field_cl  go to state 199


State 177

   77 if_exp: "if" bracketed_exp • bracketed_exp
   78       | "if" bracketed_exp • bracketed_exp "else" primary_exp

    "("  shift, and go to state 111
    "{"  shift, and go to state 176

    bracketed_exp  go to state 247
    paren_exp      go to state 120
    vtupleExpr     go to state 121
    vstructExpr    go to state 122
    chain_exp      go to state 127


State 178

   58 vtupleExpr: "(" ")" •

    $default  reduce using rule 58 (vtupleExpr)


State 179

   47 long_exp: expr •
   49 expr_cl2: expr • "," expr
   59 vtupleExpr: "(" expr • "," ")"

    ","  shift, and go to state 248

    $default  reduce using rule 47 (long_exp)


State 180

   57 paren_exp: "(" long_exp • ")"

    ")"  shift, and go to state 249


State 181

   50 expr_cl2: expr_cl2 • "," expr
   60 vtupleExpr: "(" expr_cl2 • ")"

    ","  shift, and go to state 250
    ")"  shift, and go to state 251


State 182

   31 const_stmt: "const" • lpattern "=" expr

    "val_id"  shift, and go to state 10
    "{"       shift, and go to state 252

    vid                    go to state 253
    lpattern_field         go to state 254
    destructured_lpattern  go to state 255
    lpattern               go to state 256


State 183

   32 val_stmt: "val" • lpattern "=" expr

    "val_id"  shift, and go to state 10
    "{"       shift, and go to state 252

    vid                    go to state 253
    lpattern_field         go to state 254
    destructured_lpattern  go to state 255
    lpattern               go to state 257


State 184

   33 var_stmt: "var" • lpattern "=" expr

    "val_id"  shift, and go to state 10
    "{"       shift, and go to state 252

    vid                    go to state 253
    lpattern_field         go to state 254
    destructured_lpattern  go to state 255
    lpattern               go to state 258


State 185

   34 set_stmt: "set" • expr "=" expr

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 46
    "if"                     shift, and go to state 102
    "anonymous_fn"           shift, and go to state 47
    "not"                    shift, and go to state 103
    "42"                     shift, and go to state 104
    "0x2a"                   shift, and go to state 105
    "42u"                    shift, and go to state 106
    "0x2Au"                  shift, and go to state 107
    "4.2"                    shift, and go to state 108
    "\"dq-string-literal\""  shift, and go to state 109
    "'sq-string-literal'"    shift, and go to state 110
    "("                      shift, and go to state 111
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 112
    "+"                      shift, and go to state 113
    "-"                      shift, and go to state 114

    tid               go to state 50
    vid               go to state 115
    floatl            go to state 116
    mod_prefix        go to state 117
    expr              go to state 259
    bracketed_exp     go to state 119
    paren_exp         go to state 120
    vtupleExpr        go to state 121
    vstructExpr       go to state 122
    primary_exp       go to state 123
    int_expr          go to state 124
    stringls          go to state 125
    if_exp            go to state 126
    chain_exp         go to state 127
    postfix_exp       go to state 128
    vcall_exp         go to state 129
    dot_name_exp      go to state 130
    dot_index_exp     go to state 131
    unary_exp         go to state 132
    unary_op          go to state 133
    binary_exp        go to state 134
    mul_binary_exp    go to state 135
    add_binary_exp    go to state 136
    cmp_binary_exp    go to state 137
    eq_binary_exp     go to state 138
    and_binary_exp    go to state 139
    xor_binary_exp    go to state 140
    or_binary_exp     go to state 141
    type_spec         go to state 170
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 186

   35 discard_stmt: "discard" • expr

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 46
    "if"                     shift, and go to state 102
    "anonymous_fn"           shift, and go to state 47
    "not"                    shift, and go to state 103
    "42"                     shift, and go to state 104
    "0x2a"                   shift, and go to state 105
    "42u"                    shift, and go to state 106
    "0x2Au"                  shift, and go to state 107
    "4.2"                    shift, and go to state 108
    "\"dq-string-literal\""  shift, and go to state 109
    "'sq-string-literal'"    shift, and go to state 110
    "("                      shift, and go to state 111
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 112
    "+"                      shift, and go to state 113
    "-"                      shift, and go to state 114

    tid               go to state 50
    vid               go to state 115
    floatl            go to state 116
    mod_prefix        go to state 117
    expr              go to state 260
    bracketed_exp     go to state 119
    paren_exp         go to state 120
    vtupleExpr        go to state 121
    vstructExpr       go to state 122
    primary_exp       go to state 123
    int_expr          go to state 124
    stringls          go to state 125
    if_exp            go to state 126
    chain_exp         go to state 127
    postfix_exp       go to state 128
    vcall_exp         go to state 129
    dot_name_exp      go to state 130
    dot_index_exp     go to state 131
    unary_exp         go to state 132
    unary_op          go to state 133
    binary_exp        go to state 134
    mul_binary_exp    go to state 135
    add_binary_exp    go to state 136
    cmp_binary_exp    go to state 137
    eq_binary_exp     go to state 138
    and_binary_exp    go to state 139
    xor_binary_exp    go to state 140
    or_binary_exp     go to state 141
    type_spec         go to state 170
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 187

   79 chain_exp: "{" "}" •

    $default  reduce using rule 79 (chain_exp)


State 188

   83 chain_prefix: chain_prefix_stmt • ";"

    ";"  shift, and go to state 261


State 189

   26 chain_prefix_stmt: const_stmt •

    $default  reduce using rule 26 (chain_prefix_stmt)


State 190

   27 chain_prefix_stmt: val_stmt •

    $default  reduce using rule 27 (chain_prefix_stmt)


State 191

   28 chain_prefix_stmt: var_stmt •

    $default  reduce using rule 28 (chain_prefix_stmt)


State 192

   29 chain_prefix_stmt: set_stmt •

    $default  reduce using rule 29 (chain_prefix_stmt)


State 193

   30 chain_prefix_stmt: discard_stmt •

    $default  reduce using rule 30 (chain_prefix_stmt)


State 194

   42 mod_prefix: vid • "::"
   43           | vid • "[" targ_cl "]" "::"
   63 primary_exp: vid •
  148 struct_type_spec_field: vid • type_spec
  170 struct_exp_field: vid • "=" expr

    "val_id"        shift, and go to state 10
    "TypeId"        shift, and go to state 22
    "enum"          shift, and go to state 46
    "anonymous_fn"  shift, and go to state 47
    "::"            shift, and go to state 74
    "["             shift, and go to state 158
    "{"             shift, and go to state 49
    "="             shift, and go to state 262

    $default  reduce using rule 63 (primary_exp)

    tid               go to state 50
    vid               go to state 39
    mod_prefix        go to state 51
    type_spec         go to state 159
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 195

   80 chain_exp: "{" long_exp • "}"

    "}"  shift, and go to state 263


State 196

   81 chain_exp: "{" chain_prefix • "}"
   82          | "{" chain_prefix • long_exp "}"
   84 chain_prefix: chain_prefix • chain_prefix_stmt ";"

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 46
    "if"                     shift, and go to state 102
    "const"                  shift, and go to state 182
    "val"                    shift, and go to state 183
    "var"                    shift, and go to state 184
    "set"                    shift, and go to state 185
    "anonymous_fn"           shift, and go to state 47
    "not"                    shift, and go to state 103
    "discard"                shift, and go to state 186
    "42"                     shift, and go to state 104
    "0x2a"                   shift, and go to state 105
    "42u"                    shift, and go to state 106
    "0x2Au"                  shift, and go to state 107
    "4.2"                    shift, and go to state 108
    "\"dq-string-literal\""  shift, and go to state 109
    "'sq-string-literal'"    shift, and go to state 110
    "("                      shift, and go to state 111
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 112
    "}"                      shift, and go to state 264
    "+"                      shift, and go to state 113
    "-"                      shift, and go to state 114

    chain_prefix_stmt  go to state 265
    const_stmt         go to state 189
    val_stmt           go to state 190
    var_stmt           go to state 191
    set_stmt           go to state 192
    discard_stmt       go to state 193
    tid                go to state 50
    vid                go to state 115
    floatl             go to state 116
    mod_prefix         go to state 117
    expr               go to state 167
    long_exp           go to state 266
    bracketed_exp      go to state 119
    paren_exp          go to state 120
    vtupleExpr         go to state 121
    vstructExpr        go to state 122
    primary_exp        go to state 123
    int_expr           go to state 124
    stringls           go to state 125
    if_exp             go to state 126
    chain_exp          go to state 127
    lambda_exp         go to state 169
    postfix_exp        go to state 128
    vcall_exp          go to state 129
    dot_name_exp       go to state 130
    dot_index_exp      go to state 131
    unary_exp          go to state 132
    unary_op           go to state 133
    binary_exp         go to state 134
    mul_binary_exp     go to state 135
    add_binary_exp     go to state 136
    cmp_binary_exp     go to state 137
    eq_binary_exp      go to state 138
    and_binary_exp     go to state 139
    xor_binary_exp     go to state 140
    or_binary_exp      go to state 141
    type_spec          go to state 170
    mod_prefix_tid     go to state 53
    tuple_type_spec    go to state 54
    array_type_spec    go to state 55
    struct_type_spec   go to state 56
    enum_type_spec     go to state 57
    fn_type_spec       go to state 171


State 197

   93 dot_name_exp: type_spec • "::" "TypeId"
   94             | type_spec • "::" "TypeId" "using" paren_exp
  132 type_spec_cl2: type_spec • "," type_spec
  142 tuple_type_spec: "{" type_spec • "}"

    ","   shift, and go to state 162
    "::"  shift, and go to state 224
    "}"   shift, and go to state 163


State 198

  190 struct_exp_field_cl: struct_exp_field •

    $default  reduce using rule 190 (struct_exp_field_cl)


State 199

   61 vstructExpr: "{" struct_exp_field_cl • "}"
  191 struct_exp_field_cl: struct_exp_field_cl • "," struct_exp_field

    ","  shift, and go to state 267
    "}"  shift, and go to state 268


State 200

   44 mod_prefix: mod_prefix vid • "::"
   45           | mod_prefix vid • "[" targ_cl "]" "::"
   68 primary_exp: mod_prefix vid •

    "::"  shift, and go to state 145
    "["   shift, and go to state 146

    $default  reduce using rule 68 (primary_exp)


State 201

   76 stringls: stringls "\"dq-string-literal\"" •

    $default  reduce using rule 76 (stringls)


State 202

   75 stringls: stringls "'sq-string-literal'" •

    $default  reduce using rule 75 (stringls)


State 203

   92 dot_name_exp: postfix_exp "." • "val_id"
   95 dot_index_exp: postfix_exp "." • int_expr
   96              | postfix_exp "." • bracketed_exp

    "val_id"  shift, and go to state 269
    "42"      shift, and go to state 104
    "0x2a"    shift, and go to state 105
    "42u"     shift, and go to state 106
    "0x2Au"   shift, and go to state 107
    "("       shift, and go to state 111
    "{"       shift, and go to state 176

    bracketed_exp  go to state 270
    paren_exp      go to state 120
    vtupleExpr     go to state 121
    vstructExpr    go to state 122
    int_expr       go to state 271
    chain_exp      go to state 127


State 204

   90 vcall_exp: postfix_exp "(" • ")"
   91          | postfix_exp "(" • varg_cl ")"

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 46
    "if"                     shift, and go to state 102
    "anonymous_fn"           shift, and go to state 47
    "not"                    shift, and go to state 103
    "out"                    shift, and go to state 272
    "inout"                  shift, and go to state 273
    "42"                     shift, and go to state 104
    "0x2a"                   shift, and go to state 105
    "42u"                    shift, and go to state 106
    "0x2Au"                  shift, and go to state 107
    "4.2"                    shift, and go to state 108
    "\"dq-string-literal\""  shift, and go to state 109
    "'sq-string-literal'"    shift, and go to state 110
    "("                      shift, and go to state 111
    ")"                      shift, and go to state 274
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 112
    "+"                      shift, and go to state 113
    "-"                      shift, and go to state 114

    tid               go to state 50
    vid               go to state 115
    floatl            go to state 116
    mod_prefix        go to state 117
    expr              go to state 275
    bracketed_exp     go to state 119
    paren_exp         go to state 120
    vtupleExpr        go to state 121
    vstructExpr       go to state 122
    primary_exp       go to state 123
    int_expr          go to state 124
    stringls          go to state 125
    if_exp            go to state 126
    chain_exp         go to state 127
    postfix_exp       go to state 128
    vcall_exp         go to state 129
    dot_name_exp      go to state 130
    dot_index_exp     go to state 131
    unary_exp         go to state 132
    unary_op          go to state 133
    binary_exp        go to state 134
    mul_binary_exp    go to state 135
    add_binary_exp    go to state 136
    cmp_binary_exp    go to state 137
    eq_binary_exp     go to state 138
    and_binary_exp    go to state 139
    xor_binary_exp    go to state 140
    or_binary_exp     go to state 141
    type_spec         go to state 170
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58
    varg              go to state 276
    varg_cl           go to state 277


State 205

   98 unary_exp: unary_op unary_exp •

    $default  reduce using rule 98 (unary_exp)


State 206

  103 mul_binary_op: "*" •

    $default  reduce using rule 103 (mul_binary_op)


State 207

  104 mul_binary_op: "/" •

    $default  reduce using rule 104 (mul_binary_op)


State 208

  105 mul_binary_op: "%" •

    $default  reduce using rule 105 (mul_binary_op)


State 209

  107 mul_binary_exp: mul_binary_exp mul_binary_op • unary_exp

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 46
    "if"                     shift, and go to state 102
    "anonymous_fn"           shift, and go to state 47
    "not"                    shift, and go to state 103
    "42"                     shift, and go to state 104
    "0x2a"                   shift, and go to state 105
    "42u"                    shift, and go to state 106
    "0x2Au"                  shift, and go to state 107
    "4.2"                    shift, and go to state 108
    "\"dq-string-literal\""  shift, and go to state 109
    "'sq-string-literal'"    shift, and go to state 110
    "("                      shift, and go to state 111
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 112
    "+"                      shift, and go to state 113
    "-"                      shift, and go to state 114

    tid               go to state 50
    vid               go to state 115
    floatl            go to state 116
    mod_prefix        go to state 117
    bracketed_exp     go to state 119
    paren_exp         go to state 120
    vtupleExpr        go to state 121
    vstructExpr       go to state 122
    primary_exp       go to state 123
    int_expr          go to state 124
    stringls          go to state 125
    if_exp            go to state 126
    chain_exp         go to state 127
    postfix_exp       go to state 128
    vcall_exp         go to state 129
    dot_name_exp      go to state 130
    dot_index_exp     go to state 131
    unary_exp         go to state 278
    unary_op          go to state 133
    type_spec         go to state 170
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 210

  108 add_binary_op: "+" •

    $default  reduce using rule 108 (add_binary_op)


State 211

  109 add_binary_op: "-" •

    $default  reduce using rule 109 (add_binary_op)


State 212

  111 add_binary_exp: add_binary_exp add_binary_op • mul_binary_exp

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 46
    "if"                     shift, and go to state 102
    "anonymous_fn"           shift, and go to state 47
    "not"                    shift, and go to state 103
    "42"                     shift, and go to state 104
    "0x2a"                   shift, and go to state 105
    "42u"                    shift, and go to state 106
    "0x2Au"                  shift, and go to state 107
    "4.2"                    shift, and go to state 108
    "\"dq-string-literal\""  shift, and go to state 109
    "'sq-string-literal'"    shift, and go to state 110
    "("                      shift, and go to state 111
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 112
    "+"                      shift, and go to state 113
    "-"                      shift, and go to state 114

    tid               go to state 50
    vid               go to state 115
    floatl            go to state 116
    mod_prefix        go to state 117
    bracketed_exp     go to state 119
    paren_exp         go to state 120
    vtupleExpr        go to state 121
    vstructExpr       go to state 122
    primary_exp       go to state 123
    int_expr          go to state 124
    stringls          go to state 125
    if_exp            go to state 126
    chain_exp         go to state 127
    postfix_exp       go to state 128
    vcall_exp         go to state 129
    dot_name_exp      go to state 130
    dot_index_exp     go to state 131
    unary_exp         go to state 132
    unary_op          go to state 133
    mul_binary_exp    go to state 279
    type_spec         go to state 170
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 213

  112 cmp_binary_op: "<" •

    $default  reduce using rule 112 (cmp_binary_op)


State 214

  113 cmp_binary_op: "<=" •

    $default  reduce using rule 113 (cmp_binary_op)


State 215

  114 cmp_binary_op: ">" •

    $default  reduce using rule 114 (cmp_binary_op)


State 216

  115 cmp_binary_op: ">=" •

    $default  reduce using rule 115 (cmp_binary_op)


State 217

  117 cmp_binary_exp: cmp_binary_exp cmp_binary_op • add_binary_exp

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 46
    "if"                     shift, and go to state 102
    "anonymous_fn"           shift, and go to state 47
    "not"                    shift, and go to state 103
    "42"                     shift, and go to state 104
    "0x2a"                   shift, and go to state 105
    "42u"                    shift, and go to state 106
    "0x2Au"                  shift, and go to state 107
    "4.2"                    shift, and go to state 108
    "\"dq-string-literal\""  shift, and go to state 109
    "'sq-string-literal'"    shift, and go to state 110
    "("                      shift, and go to state 111
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 112
    "+"                      shift, and go to state 113
    "-"                      shift, and go to state 114

    tid               go to state 50
    vid               go to state 115
    floatl            go to state 116
    mod_prefix        go to state 117
    bracketed_exp     go to state 119
    paren_exp         go to state 120
    vtupleExpr        go to state 121
    vstructExpr       go to state 122
    primary_exp       go to state 123
    int_expr          go to state 124
    stringls          go to state 125
    if_exp            go to state 126
    chain_exp         go to state 127
    postfix_exp       go to state 128
    vcall_exp         go to state 129
    dot_name_exp      go to state 130
    dot_index_exp     go to state 131
    unary_exp         go to state 132
    unary_op          go to state 133
    mul_binary_exp    go to state 135
    add_binary_exp    go to state 280
    type_spec         go to state 170
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 218

  118 eq_binary_op: "==" •

    $default  reduce using rule 118 (eq_binary_op)


State 219

  119 eq_binary_op: "!=" •

    $default  reduce using rule 119 (eq_binary_op)


State 220

  121 eq_binary_exp: eq_binary_exp eq_binary_op • cmp_binary_exp

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 46
    "if"                     shift, and go to state 102
    "anonymous_fn"           shift, and go to state 47
    "not"                    shift, and go to state 103
    "42"                     shift, and go to state 104
    "0x2a"                   shift, and go to state 105
    "42u"                    shift, and go to state 106
    "0x2Au"                  shift, and go to state 107
    "4.2"                    shift, and go to state 108
    "\"dq-string-literal\""  shift, and go to state 109
    "'sq-string-literal'"    shift, and go to state 110
    "("                      shift, and go to state 111
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 112
    "+"                      shift, and go to state 113
    "-"                      shift, and go to state 114

    tid               go to state 50
    vid               go to state 115
    floatl            go to state 116
    mod_prefix        go to state 117
    bracketed_exp     go to state 119
    paren_exp         go to state 120
    vtupleExpr        go to state 121
    vstructExpr       go to state 122
    primary_exp       go to state 123
    int_expr          go to state 124
    stringls          go to state 125
    if_exp            go to state 126
    chain_exp         go to state 127
    postfix_exp       go to state 128
    vcall_exp         go to state 129
    dot_name_exp      go to state 130
    dot_index_exp     go to state 131
    unary_exp         go to state 132
    unary_op          go to state 133
    mul_binary_exp    go to state 135
    add_binary_exp    go to state 136
    cmp_binary_exp    go to state 281
    type_spec         go to state 170
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 221

  123 and_binary_exp: and_binary_exp "and" • eq_binary_exp

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 46
    "if"                     shift, and go to state 102
    "anonymous_fn"           shift, and go to state 47
    "not"                    shift, and go to state 103
    "42"                     shift, and go to state 104
    "0x2a"                   shift, and go to state 105
    "42u"                    shift, and go to state 106
    "0x2Au"                  shift, and go to state 107
    "4.2"                    shift, and go to state 108
    "\"dq-string-literal\""  shift, and go to state 109
    "'sq-string-literal'"    shift, and go to state 110
    "("                      shift, and go to state 111
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 112
    "+"                      shift, and go to state 113
    "-"                      shift, and go to state 114

    tid               go to state 50
    vid               go to state 115
    floatl            go to state 116
    mod_prefix        go to state 117
    bracketed_exp     go to state 119
    paren_exp         go to state 120
    vtupleExpr        go to state 121
    vstructExpr       go to state 122
    primary_exp       go to state 123
    int_expr          go to state 124
    stringls          go to state 125
    if_exp            go to state 126
    chain_exp         go to state 127
    postfix_exp       go to state 128
    vcall_exp         go to state 129
    dot_name_exp      go to state 130
    dot_index_exp     go to state 131
    unary_exp         go to state 132
    unary_op          go to state 133
    mul_binary_exp    go to state 135
    add_binary_exp    go to state 136
    cmp_binary_exp    go to state 137
    eq_binary_exp     go to state 282
    type_spec         go to state 170
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 222

  125 xor_binary_exp: xor_binary_exp "xor" • and_binary_exp

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 46
    "if"                     shift, and go to state 102
    "anonymous_fn"           shift, and go to state 47
    "not"                    shift, and go to state 103
    "42"                     shift, and go to state 104
    "0x2a"                   shift, and go to state 105
    "42u"                    shift, and go to state 106
    "0x2Au"                  shift, and go to state 107
    "4.2"                    shift, and go to state 108
    "\"dq-string-literal\""  shift, and go to state 109
    "'sq-string-literal'"    shift, and go to state 110
    "("                      shift, and go to state 111
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 112
    "+"                      shift, and go to state 113
    "-"                      shift, and go to state 114

    tid               go to state 50
    vid               go to state 115
    floatl            go to state 116
    mod_prefix        go to state 117
    bracketed_exp     go to state 119
    paren_exp         go to state 120
    vtupleExpr        go to state 121
    vstructExpr       go to state 122
    primary_exp       go to state 123
    int_expr          go to state 124
    stringls          go to state 125
    if_exp            go to state 126
    chain_exp         go to state 127
    postfix_exp       go to state 128
    vcall_exp         go to state 129
    dot_name_exp      go to state 130
    dot_index_exp     go to state 131
    unary_exp         go to state 132
    unary_op          go to state 133
    mul_binary_exp    go to state 135
    add_binary_exp    go to state 136
    cmp_binary_exp    go to state 137
    eq_binary_exp     go to state 138
    and_binary_exp    go to state 283
    type_spec         go to state 170
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 223

  127 or_binary_exp: or_binary_exp "or" • xor_binary_exp

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 46
    "if"                     shift, and go to state 102
    "anonymous_fn"           shift, and go to state 47
    "not"                    shift, and go to state 103
    "42"                     shift, and go to state 104
    "0x2a"                   shift, and go to state 105
    "42u"                    shift, and go to state 106
    "0x2Au"                  shift, and go to state 107
    "4.2"                    shift, and go to state 108
    "\"dq-string-literal\""  shift, and go to state 109
    "'sq-string-literal'"    shift, and go to state 110
    "("                      shift, and go to state 111
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 112
    "+"                      shift, and go to state 113
    "-"                      shift, and go to state 114

    tid               go to state 50
    vid               go to state 115
    floatl            go to state 116
    mod_prefix        go to state 117
    bracketed_exp     go to state 119
    paren_exp         go to state 120
    vtupleExpr        go to state 121
    vstructExpr       go to state 122
    primary_exp       go to state 123
    int_expr          go to state 124
    stringls          go to state 125
    if_exp            go to state 126
    chain_exp         go to state 127
    postfix_exp       go to state 128
    vcall_exp         go to state 129
    dot_name_exp      go to state 130
    dot_index_exp     go to state 131
    unary_exp         go to state 132
    unary_op          go to state 133
    mul_binary_exp    go to state 135
    add_binary_exp    go to state 136
    cmp_binary_exp    go to state 137
    eq_binary_exp     go to state 138
    and_binary_exp    go to state 139
    xor_binary_exp    go to state 284
    type_spec         go to state 170
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 224

   93 dot_name_exp: type_spec "::" • "TypeId"
   94             | type_spec "::" • "TypeId" "using" paren_exp

    "TypeId"  shift, and go to state 285


State 225

  158 targ_cl: targ_cl "," • targ

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 46
    "if"                     shift, and go to state 102
    "anonymous_fn"           shift, and go to state 47
    "not"                    shift, and go to state 103
    "42"                     shift, and go to state 104
    "0x2a"                   shift, and go to state 105
    "42u"                    shift, and go to state 106
    "0x2Au"                  shift, and go to state 107
    "4.2"                    shift, and go to state 108
    "\"dq-string-literal\""  shift, and go to state 109
    "'sq-string-literal'"    shift, and go to state 110
    "("                      shift, and go to state 111
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 112
    "+"                      shift, and go to state 113
    "-"                      shift, and go to state 114

    tid               go to state 50
    vid               go to state 115
    floatl            go to state 116
    mod_prefix        go to state 117
    expr              go to state 118
    bracketed_exp     go to state 119
    paren_exp         go to state 120
    vtupleExpr        go to state 121
    vstructExpr       go to state 122
    primary_exp       go to state 123
    int_expr          go to state 124
    stringls          go to state 125
    if_exp            go to state 126
    chain_exp         go to state 127
    postfix_exp       go to state 128
    vcall_exp         go to state 129
    dot_name_exp      go to state 130
    dot_index_exp     go to state 131
    unary_exp         go to state 132
    unary_op          go to state 133
    binary_exp        go to state 134
    mul_binary_exp    go to state 135
    add_binary_exp    go to state 136
    cmp_binary_exp    go to state 137
    eq_binary_exp     go to state 138
    and_binary_exp    go to state 139
    xor_binary_exp    go to state 140
    or_binary_exp     go to state 141
    type_spec         go to state 142
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58
    targ              go to state 286


State 226

   43 mod_prefix: vid "[" targ_cl "]" • "::"

    "::"  shift, and go to state 287


State 227

   45 mod_prefix: mod_prefix vid "[" targ_cl • "]" "::"
  158 targ_cl: targ_cl • "," targ

    ","  shift, and go to state 225
    "]"  shift, and go to state 288


State 228

  150 enum_type_spec_field: tid type_spec •

    $default  reduce using rule 150 (enum_type_spec_field)


State 229

  152 enum_type_spec_field_cl: enum_type_spec_field_cl "," • enum_type_spec_field

    "TypeId"  shift, and go to state 22

    tid                   go to state 147
    enum_type_spec_field  go to state 289


State 230

  153 enum_type_spec: "enum" "{" enum_type_spec_field_cl "}" •

    $default  reduce using rule 153 (enum_type_spec)


State 231

  172 vpattern_field: "out" vid • type_spec

    "val_id"        shift, and go to state 10
    "TypeId"        shift, and go to state 22
    "enum"          shift, and go to state 46
    "anonymous_fn"  shift, and go to state 47
    "["             shift, and go to state 48
    "{"             shift, and go to state 49

    tid               go to state 50
    vid               go to state 39
    mod_prefix        go to state 51
    type_spec         go to state 290
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 232

  173 vpattern_field: "inout" vid • type_spec

    "val_id"        shift, and go to state 10
    "TypeId"        shift, and go to state 22
    "enum"          shift, and go to state 46
    "anonymous_fn"  shift, and go to state 47
    "["             shift, and go to state 48
    "{"             shift, and go to state 49

    tid               go to state 50
    vid               go to state 39
    mod_prefix        go to state 51
    type_spec         go to state 291
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 233

  171 vpattern_field: vid type_spec •

    $default  reduce using rule 171 (vpattern_field)


State 234

  185 vpattern_field_cl: vpattern_field_cl "," • vpattern_field

    "val_id"  shift, and go to state 10
    "out"     shift, and go to state 150
    "inout"   shift, and go to state 151

    vid             go to state 153
    vpattern_field  go to state 292


State 235

  181 vpattern: "(" vpattern_field_cl ")" •

    $default  reduce using rule 181 (vpattern)


State 236

  144 array_type_spec: "[" type_spec "*" expr • "]"

    "]"  shift, and go to state 293


State 237

   93 dot_name_exp: type_spec • "::" "TypeId"
   94             | type_spec • "::" "TypeId" "using" paren_exp
  144 array_type_spec: "[" type_spec • "*" expr "]"
  155 targ: type_spec •

    "::"  shift, and go to state 224
    "*"   shift, and go to state 157

    $default  reduce using rule 155 (targ)


State 238

  133 type_spec_cl2: type_spec_cl2 "," type_spec •

    $default  reduce using rule 133 (type_spec_cl2)


State 239

  132 type_spec_cl2: type_spec "," type_spec •

    $default  reduce using rule 132 (type_spec_cl2)


State 240

  148 struct_type_spec_field: vid • type_spec

    "val_id"        shift, and go to state 10
    "TypeId"        shift, and go to state 22
    "enum"          shift, and go to state 46
    "anonymous_fn"  shift, and go to state 47
    "["             shift, and go to state 48
    "{"             shift, and go to state 49

    tid               go to state 50
    vid               go to state 39
    mod_prefix        go to state 51
    type_spec         go to state 159
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 241

  147 struct_type_spec_field_cl: struct_type_spec_field_cl "," struct_type_spec_field •

    $default  reduce using rule 147 (struct_type_spec_field_cl)


State 242

   85 lambda_exp: fn_type_spec bracketed_exp •

    $default  reduce using rule 85 (lambda_exp)


State 243

   18 mod_field: "let" vid vpattern type_spec "=" • bracketed_exp

    "("  shift, and go to state 111
    "{"  shift, and go to state 176

    bracketed_exp  go to state 294
    paren_exp      go to state 120
    vtupleExpr     go to state 121
    vstructExpr    go to state 122
    chain_exp      go to state 127


State 244

   19 mod_field: "let" cid "(" tid class_spec • ")" "=" "{" type_query_exp_sl0 "}"

    ")"  shift, and go to state 295


State 245

  169 class_exp_class_spec: "typeclass" "(" tid class_spec ")" • "{" type_query_exp_sl0 "}"

    "{"  shift, and go to state 296


State 246

   42 mod_prefix: vid • "::"
   43           | vid • "[" targ_cl "]" "::"
   63 primary_exp: vid •
  170 struct_exp_field: vid • "=" expr

    "::"  shift, and go to state 74
    "["   shift, and go to state 75
    "="   shift, and go to state 262

    $default  reduce using rule 63 (primary_exp)


State 247

   77 if_exp: "if" bracketed_exp bracketed_exp •
   78       | "if" bracketed_exp bracketed_exp • "else" primary_exp

    "else"  shift, and go to state 297

    $default  reduce using rule 77 (if_exp)


State 248

   49 expr_cl2: expr "," • expr
   59 vtupleExpr: "(" expr "," • ")"

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 46
    "if"                     shift, and go to state 102
    "anonymous_fn"           shift, and go to state 47
    "not"                    shift, and go to state 103
    "42"                     shift, and go to state 104
    "0x2a"                   shift, and go to state 105
    "42u"                    shift, and go to state 106
    "0x2Au"                  shift, and go to state 107
    "4.2"                    shift, and go to state 108
    "\"dq-string-literal\""  shift, and go to state 109
    "'sq-string-literal'"    shift, and go to state 110
    "("                      shift, and go to state 111
    ")"                      shift, and go to state 298
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 112
    "+"                      shift, and go to state 113
    "-"                      shift, and go to state 114

    tid               go to state 50
    vid               go to state 115
    floatl            go to state 116
    mod_prefix        go to state 117
    expr              go to state 299
    bracketed_exp     go to state 119
    paren_exp         go to state 120
    vtupleExpr        go to state 121
    vstructExpr       go to state 122
    primary_exp       go to state 123
    int_expr          go to state 124
    stringls          go to state 125
    if_exp            go to state 126
    chain_exp         go to state 127
    postfix_exp       go to state 128
    vcall_exp         go to state 129
    dot_name_exp      go to state 130
    dot_index_exp     go to state 131
    unary_exp         go to state 132
    unary_op          go to state 133
    binary_exp        go to state 134
    mul_binary_exp    go to state 135
    add_binary_exp    go to state 136
    cmp_binary_exp    go to state 137
    eq_binary_exp     go to state 138
    and_binary_exp    go to state 139
    xor_binary_exp    go to state 140
    or_binary_exp     go to state 141
    type_spec         go to state 170
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 249

   57 paren_exp: "(" long_exp ")" •

    $default  reduce using rule 57 (paren_exp)


State 250

   50 expr_cl2: expr_cl2 "," • expr

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 46
    "if"                     shift, and go to state 102
    "anonymous_fn"           shift, and go to state 47
    "not"                    shift, and go to state 103
    "42"                     shift, and go to state 104
    "0x2a"                   shift, and go to state 105
    "42u"                    shift, and go to state 106
    "0x2Au"                  shift, and go to state 107
    "4.2"                    shift, and go to state 108
    "\"dq-string-literal\""  shift, and go to state 109
    "'sq-string-literal'"    shift, and go to state 110
    "("                      shift, and go to state 111
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 112
    "+"                      shift, and go to state 113
    "-"                      shift, and go to state 114

    tid               go to state 50
    vid               go to state 115
    floatl            go to state 116
    mod_prefix        go to state 117
    expr              go to state 300
    bracketed_exp     go to state 119
    paren_exp         go to state 120
    vtupleExpr        go to state 121
    vstructExpr       go to state 122
    primary_exp       go to state 123
    int_expr          go to state 124
    stringls          go to state 125
    if_exp            go to state 126
    chain_exp         go to state 127
    postfix_exp       go to state 128
    vcall_exp         go to state 129
    dot_name_exp      go to state 130
    dot_index_exp     go to state 131
    unary_exp         go to state 132
    unary_op          go to state 133
    binary_exp        go to state 134
    mul_binary_exp    go to state 135
    add_binary_exp    go to state 136
    cmp_binary_exp    go to state 137
    eq_binary_exp     go to state 138
    and_binary_exp    go to state 139
    xor_binary_exp    go to state 140
    or_binary_exp     go to state 141
    type_spec         go to state 170
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 251

   60 vtupleExpr: "(" expr_cl2 ")" •

    $default  reduce using rule 60 (vtupleExpr)


State 252

  178 destructured_lpattern: "{" • lpattern_field_cl "}"

    "val_id"  shift, and go to state 10

    vid                go to state 253
    lpattern_field     go to state 301
    lpattern_field_cl  go to state 302


State 253

  174 lpattern_field: vid • type_spec
  175               | vid •

    "val_id"        shift, and go to state 10
    "TypeId"        shift, and go to state 22
    "enum"          shift, and go to state 46
    "anonymous_fn"  shift, and go to state 47
    "["             shift, and go to state 48
    "{"             shift, and go to state 49

    $default  reduce using rule 175 (lpattern_field)

    tid               go to state 50
    vid               go to state 39
    mod_prefix        go to state 51
    type_spec         go to state 303
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 254

  179 lpattern: lpattern_field •

    $default  reduce using rule 179 (lpattern)


State 255

  180 lpattern: destructured_lpattern •

    $default  reduce using rule 180 (lpattern)


State 256

   31 const_stmt: "const" lpattern • "=" expr

    "="  shift, and go to state 304


State 257

   32 val_stmt: "val" lpattern • "=" expr

    "="  shift, and go to state 305


State 258

   33 var_stmt: "var" lpattern • "=" expr

    "="  shift, and go to state 306


State 259

   34 set_stmt: "set" expr • "=" expr

    "="  shift, and go to state 307


State 260

   35 discard_stmt: "discard" expr •

    $default  reduce using rule 35 (discard_stmt)


State 261

   83 chain_prefix: chain_prefix_stmt ";" •

    $default  reduce using rule 83 (chain_prefix)


State 262

  170 struct_exp_field: vid "=" • expr

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 46
    "if"                     shift, and go to state 102
    "anonymous_fn"           shift, and go to state 47
    "not"                    shift, and go to state 103
    "42"                     shift, and go to state 104
    "0x2a"                   shift, and go to state 105
    "42u"                    shift, and go to state 106
    "0x2Au"                  shift, and go to state 107
    "4.2"                    shift, and go to state 108
    "\"dq-string-literal\""  shift, and go to state 109
    "'sq-string-literal'"    shift, and go to state 110
    "("                      shift, and go to state 111
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 112
    "+"                      shift, and go to state 113
    "-"                      shift, and go to state 114

    tid               go to state 50
    vid               go to state 115
    floatl            go to state 116
    mod_prefix        go to state 117
    expr              go to state 308
    bracketed_exp     go to state 119
    paren_exp         go to state 120
    vtupleExpr        go to state 121
    vstructExpr       go to state 122
    primary_exp       go to state 123
    int_expr          go to state 124
    stringls          go to state 125
    if_exp            go to state 126
    chain_exp         go to state 127
    postfix_exp       go to state 128
    vcall_exp         go to state 129
    dot_name_exp      go to state 130
    dot_index_exp     go to state 131
    unary_exp         go to state 132
    unary_op          go to state 133
    binary_exp        go to state 134
    mul_binary_exp    go to state 135
    add_binary_exp    go to state 136
    cmp_binary_exp    go to state 137
    eq_binary_exp     go to state 138
    and_binary_exp    go to state 139
    xor_binary_exp    go to state 140
    or_binary_exp     go to state 141
    type_spec         go to state 170
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 263

   80 chain_exp: "{" long_exp "}" •

    $default  reduce using rule 80 (chain_exp)


State 264

   81 chain_exp: "{" chain_prefix "}" •

    $default  reduce using rule 81 (chain_exp)


State 265

   84 chain_prefix: chain_prefix chain_prefix_stmt • ";"

    ";"  shift, and go to state 309


State 266

   82 chain_exp: "{" chain_prefix long_exp • "}"

    "}"  shift, and go to state 310


State 267

  191 struct_exp_field_cl: struct_exp_field_cl "," • struct_exp_field

    "val_id"  shift, and go to state 10

    vid               go to state 311
    struct_exp_field  go to state 312


State 268

   61 vstructExpr: "{" struct_exp_field_cl "}" •

    $default  reduce using rule 61 (vstructExpr)


State 269

   92 dot_name_exp: postfix_exp "." "val_id" •

    $default  reduce using rule 92 (dot_name_exp)


State 270

   96 dot_index_exp: postfix_exp "." bracketed_exp •

    $default  reduce using rule 96 (dot_index_exp)


State 271

   95 dot_index_exp: postfix_exp "." int_expr •

    $default  reduce using rule 95 (dot_index_exp)


State 272

  160 varg: "out" • expr

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 46
    "if"                     shift, and go to state 102
    "anonymous_fn"           shift, and go to state 47
    "not"                    shift, and go to state 103
    "42"                     shift, and go to state 104
    "0x2a"                   shift, and go to state 105
    "42u"                    shift, and go to state 106
    "0x2Au"                  shift, and go to state 107
    "4.2"                    shift, and go to state 108
    "\"dq-string-literal\""  shift, and go to state 109
    "'sq-string-literal'"    shift, and go to state 110
    "("                      shift, and go to state 111
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 112
    "+"                      shift, and go to state 113
    "-"                      shift, and go to state 114

    tid               go to state 50
    vid               go to state 115
    floatl            go to state 116
    mod_prefix        go to state 117
    expr              go to state 313
    bracketed_exp     go to state 119
    paren_exp         go to state 120
    vtupleExpr        go to state 121
    vstructExpr       go to state 122
    primary_exp       go to state 123
    int_expr          go to state 124
    stringls          go to state 125
    if_exp            go to state 126
    chain_exp         go to state 127
    postfix_exp       go to state 128
    vcall_exp         go to state 129
    dot_name_exp      go to state 130
    dot_index_exp     go to state 131
    unary_exp         go to state 132
    unary_op          go to state 133
    binary_exp        go to state 134
    mul_binary_exp    go to state 135
    add_binary_exp    go to state 136
    cmp_binary_exp    go to state 137
    eq_binary_exp     go to state 138
    and_binary_exp    go to state 139
    xor_binary_exp    go to state 140
    or_binary_exp     go to state 141
    type_spec         go to state 170
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 273

  161 varg: "inout" • expr

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 46
    "if"                     shift, and go to state 102
    "anonymous_fn"           shift, and go to state 47
    "not"                    shift, and go to state 103
    "42"                     shift, and go to state 104
    "0x2a"                   shift, and go to state 105
    "42u"                    shift, and go to state 106
    "0x2Au"                  shift, and go to state 107
    "4.2"                    shift, and go to state 108
    "\"dq-string-literal\""  shift, and go to state 109
    "'sq-string-literal'"    shift, and go to state 110
    "("                      shift, and go to state 111
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 112
    "+"                      shift, and go to state 113
    "-"                      shift, and go to state 114

    tid               go to state 50
    vid               go to state 115
    floatl            go to state 116
    mod_prefix        go to state 117
    expr              go to state 314
    bracketed_exp     go to state 119
    paren_exp         go to state 120
    vtupleExpr        go to state 121
    vstructExpr       go to state 122
    primary_exp       go to state 123
    int_expr          go to state 124
    stringls          go to state 125
    if_exp            go to state 126
    chain_exp         go to state 127
    postfix_exp       go to state 128
    vcall_exp         go to state 129
    dot_name_exp      go to state 130
    dot_index_exp     go to state 131
    unary_exp         go to state 132
    unary_op          go to state 133
    binary_exp        go to state 134
    mul_binary_exp    go to state 135
    add_binary_exp    go to state 136
    cmp_binary_exp    go to state 137
    eq_binary_exp     go to state 138
    and_binary_exp    go to state 139
    xor_binary_exp    go to state 140
    or_binary_exp     go to state 141
    type_spec         go to state 170
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 274

   90 vcall_exp: postfix_exp "(" ")" •

    $default  reduce using rule 90 (vcall_exp)


State 275

  159 varg: expr •

    $default  reduce using rule 159 (varg)


State 276

  162 varg_cl: varg •

    $default  reduce using rule 162 (varg_cl)


State 277

   91 vcall_exp: postfix_exp "(" varg_cl • ")"
  163 varg_cl: varg_cl • "," varg

    ","  shift, and go to state 315
    ")"  shift, and go to state 316


State 278

  107 mul_binary_exp: mul_binary_exp mul_binary_op unary_exp •

    $default  reduce using rule 107 (mul_binary_exp)


State 279

  107 mul_binary_exp: mul_binary_exp • mul_binary_op unary_exp
  111 add_binary_exp: add_binary_exp add_binary_op mul_binary_exp •

    "*"  shift, and go to state 206
    "/"  shift, and go to state 207
    "%"  shift, and go to state 208

    $default  reduce using rule 111 (add_binary_exp)

    mul_binary_op  go to state 209


State 280

  111 add_binary_exp: add_binary_exp • add_binary_op mul_binary_exp
  117 cmp_binary_exp: cmp_binary_exp cmp_binary_op add_binary_exp •

    "+"  shift, and go to state 210
    "-"  shift, and go to state 211

    $default  reduce using rule 117 (cmp_binary_exp)

    add_binary_op  go to state 212


State 281

  117 cmp_binary_exp: cmp_binary_exp • cmp_binary_op add_binary_exp
  121 eq_binary_exp: eq_binary_exp eq_binary_op cmp_binary_exp •

    "<"   shift, and go to state 213
    "<="  shift, and go to state 214
    ">"   shift, and go to state 215
    ">="  shift, and go to state 216

    $default  reduce using rule 121 (eq_binary_exp)

    cmp_binary_op  go to state 217


State 282

  121 eq_binary_exp: eq_binary_exp • eq_binary_op cmp_binary_exp
  123 and_binary_exp: and_binary_exp "and" eq_binary_exp •

    "=="  shift, and go to state 218
    "!="  shift, and go to state 219

    $default  reduce using rule 123 (and_binary_exp)

    eq_binary_op  go to state 220


State 283

  123 and_binary_exp: and_binary_exp • "and" eq_binary_exp
  125 xor_binary_exp: xor_binary_exp "xor" and_binary_exp •

    "and"  shift, and go to state 221

    $default  reduce using rule 125 (xor_binary_exp)


State 284

  125 xor_binary_exp: xor_binary_exp • "xor" and_binary_exp
  127 or_binary_exp: or_binary_exp "or" xor_binary_exp •

    "xor"  shift, and go to state 222

    $default  reduce using rule 127 (or_binary_exp)


State 285

   93 dot_name_exp: type_spec "::" "TypeId" •
   94             | type_spec "::" "TypeId" • "using" paren_exp

    "using"  shift, and go to state 317

    $default  reduce using rule 93 (dot_name_exp)


State 286

  158 targ_cl: targ_cl "," targ •

    $default  reduce using rule 158 (targ_cl)


State 287

   43 mod_prefix: vid "[" targ_cl "]" "::" •

    $default  reduce using rule 43 (mod_prefix)


State 288

   45 mod_prefix: mod_prefix vid "[" targ_cl "]" • "::"

    "::"  shift, and go to state 318


State 289

  152 enum_type_spec_field_cl: enum_type_spec_field_cl "," enum_type_spec_field •

    $default  reduce using rule 152 (enum_type_spec_field_cl)


State 290

  172 vpattern_field: "out" vid type_spec •

    $default  reduce using rule 172 (vpattern_field)


State 291

  173 vpattern_field: "inout" vid type_spec •

    $default  reduce using rule 173 (vpattern_field)


State 292

  185 vpattern_field_cl: vpattern_field_cl "," vpattern_field •

    $default  reduce using rule 185 (vpattern_field_cl)


State 293

  144 array_type_spec: "[" type_spec "*" expr "]" •

    $default  reduce using rule 144 (array_type_spec)


State 294

   18 mod_field: "let" vid vpattern type_spec "=" bracketed_exp •

    $default  reduce using rule 18 (mod_field)


State 295

   19 mod_field: "let" cid "(" tid class_spec ")" • "=" "{" type_query_exp_sl0 "}"

    "="  shift, and go to state 319


State 296

  169 class_exp_class_spec: "typeclass" "(" tid class_spec ")" "{" • type_query_exp_sl0 "}"

    $default  reduce using rule 51 (type_query_exp_sl0)

    type_query_exp_sl0  go to state 320


State 297

   78 if_exp: "if" bracketed_exp bracketed_exp "else" • primary_exp

    "val_id"                 shift, and go to state 10
    "if"                     shift, and go to state 102
    "42"                     shift, and go to state 104
    "0x2a"                   shift, and go to state 105
    "42u"                    shift, and go to state 106
    "0x2Au"                  shift, and go to state 107
    "4.2"                    shift, and go to state 108
    "\"dq-string-literal\""  shift, and go to state 109
    "'sq-string-literal'"    shift, and go to state 110
    "("                      shift, and go to state 111
    "{"                      shift, and go to state 176

    vid            go to state 115
    floatl         go to state 116
    mod_prefix     go to state 321
    bracketed_exp  go to state 119
    paren_exp      go to state 120
    vtupleExpr     go to state 121
    vstructExpr    go to state 122
    primary_exp    go to state 322
    int_expr       go to state 124
    stringls       go to state 125
    if_exp         go to state 126
    chain_exp      go to state 127


State 298

   59 vtupleExpr: "(" expr "," ")" •

    $default  reduce using rule 59 (vtupleExpr)


State 299

   49 expr_cl2: expr "," expr •

    $default  reduce using rule 49 (expr_cl2)


State 300

   50 expr_cl2: expr_cl2 "," expr •

    $default  reduce using rule 50 (expr_cl2)


State 301

  186 lpattern_field_cl: lpattern_field •

    $default  reduce using rule 186 (lpattern_field_cl)


State 302

  178 destructured_lpattern: "{" lpattern_field_cl • "}"
  187 lpattern_field_cl: lpattern_field_cl • "," lpattern_field

    ","  shift, and go to state 323
    "}"  shift, and go to state 324


State 303

  174 lpattern_field: vid type_spec •

    $default  reduce using rule 174 (lpattern_field)


State 304

   31 const_stmt: "const" lpattern "=" • expr

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 46
    "if"                     shift, and go to state 102
    "anonymous_fn"           shift, and go to state 47
    "not"                    shift, and go to state 103
    "42"                     shift, and go to state 104
    "0x2a"                   shift, and go to state 105
    "42u"                    shift, and go to state 106
    "0x2Au"                  shift, and go to state 107
    "4.2"                    shift, and go to state 108
    "\"dq-string-literal\""  shift, and go to state 109
    "'sq-string-literal'"    shift, and go to state 110
    "("                      shift, and go to state 111
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 112
    "+"                      shift, and go to state 113
    "-"                      shift, and go to state 114

    tid               go to state 50
    vid               go to state 115
    floatl            go to state 116
    mod_prefix        go to state 117
    expr              go to state 325
    bracketed_exp     go to state 119
    paren_exp         go to state 120
    vtupleExpr        go to state 121
    vstructExpr       go to state 122
    primary_exp       go to state 123
    int_expr          go to state 124
    stringls          go to state 125
    if_exp            go to state 126
    chain_exp         go to state 127
    postfix_exp       go to state 128
    vcall_exp         go to state 129
    dot_name_exp      go to state 130
    dot_index_exp     go to state 131
    unary_exp         go to state 132
    unary_op          go to state 133
    binary_exp        go to state 134
    mul_binary_exp    go to state 135
    add_binary_exp    go to state 136
    cmp_binary_exp    go to state 137
    eq_binary_exp     go to state 138
    and_binary_exp    go to state 139
    xor_binary_exp    go to state 140
    or_binary_exp     go to state 141
    type_spec         go to state 170
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 305

   32 val_stmt: "val" lpattern "=" • expr

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 46
    "if"                     shift, and go to state 102
    "anonymous_fn"           shift, and go to state 47
    "not"                    shift, and go to state 103
    "42"                     shift, and go to state 104
    "0x2a"                   shift, and go to state 105
    "42u"                    shift, and go to state 106
    "0x2Au"                  shift, and go to state 107
    "4.2"                    shift, and go to state 108
    "\"dq-string-literal\""  shift, and go to state 109
    "'sq-string-literal'"    shift, and go to state 110
    "("                      shift, and go to state 111
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 112
    "+"                      shift, and go to state 113
    "-"                      shift, and go to state 114

    tid               go to state 50
    vid               go to state 115
    floatl            go to state 116
    mod_prefix        go to state 117
    expr              go to state 326
    bracketed_exp     go to state 119
    paren_exp         go to state 120
    vtupleExpr        go to state 121
    vstructExpr       go to state 122
    primary_exp       go to state 123
    int_expr          go to state 124
    stringls          go to state 125
    if_exp            go to state 126
    chain_exp         go to state 127
    postfix_exp       go to state 128
    vcall_exp         go to state 129
    dot_name_exp      go to state 130
    dot_index_exp     go to state 131
    unary_exp         go to state 132
    unary_op          go to state 133
    binary_exp        go to state 134
    mul_binary_exp    go to state 135
    add_binary_exp    go to state 136
    cmp_binary_exp    go to state 137
    eq_binary_exp     go to state 138
    and_binary_exp    go to state 139
    xor_binary_exp    go to state 140
    or_binary_exp     go to state 141
    type_spec         go to state 170
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 306

   33 var_stmt: "var" lpattern "=" • expr

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 46
    "if"                     shift, and go to state 102
    "anonymous_fn"           shift, and go to state 47
    "not"                    shift, and go to state 103
    "42"                     shift, and go to state 104
    "0x2a"                   shift, and go to state 105
    "42u"                    shift, and go to state 106
    "0x2Au"                  shift, and go to state 107
    "4.2"                    shift, and go to state 108
    "\"dq-string-literal\""  shift, and go to state 109
    "'sq-string-literal'"    shift, and go to state 110
    "("                      shift, and go to state 111
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 112
    "+"                      shift, and go to state 113
    "-"                      shift, and go to state 114

    tid               go to state 50
    vid               go to state 115
    floatl            go to state 116
    mod_prefix        go to state 117
    expr              go to state 327
    bracketed_exp     go to state 119
    paren_exp         go to state 120
    vtupleExpr        go to state 121
    vstructExpr       go to state 122
    primary_exp       go to state 123
    int_expr          go to state 124
    stringls          go to state 125
    if_exp            go to state 126
    chain_exp         go to state 127
    postfix_exp       go to state 128
    vcall_exp         go to state 129
    dot_name_exp      go to state 130
    dot_index_exp     go to state 131
    unary_exp         go to state 132
    unary_op          go to state 133
    binary_exp        go to state 134
    mul_binary_exp    go to state 135
    add_binary_exp    go to state 136
    cmp_binary_exp    go to state 137
    eq_binary_exp     go to state 138
    and_binary_exp    go to state 139
    xor_binary_exp    go to state 140
    or_binary_exp     go to state 141
    type_spec         go to state 170
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 307

   34 set_stmt: "set" expr "=" • expr

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 46
    "if"                     shift, and go to state 102
    "anonymous_fn"           shift, and go to state 47
    "not"                    shift, and go to state 103
    "42"                     shift, and go to state 104
    "0x2a"                   shift, and go to state 105
    "42u"                    shift, and go to state 106
    "0x2Au"                  shift, and go to state 107
    "4.2"                    shift, and go to state 108
    "\"dq-string-literal\""  shift, and go to state 109
    "'sq-string-literal'"    shift, and go to state 110
    "("                      shift, and go to state 111
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 112
    "+"                      shift, and go to state 113
    "-"                      shift, and go to state 114

    tid               go to state 50
    vid               go to state 115
    floatl            go to state 116
    mod_prefix        go to state 117
    expr              go to state 328
    bracketed_exp     go to state 119
    paren_exp         go to state 120
    vtupleExpr        go to state 121
    vstructExpr       go to state 122
    primary_exp       go to state 123
    int_expr          go to state 124
    stringls          go to state 125
    if_exp            go to state 126
    chain_exp         go to state 127
    postfix_exp       go to state 128
    vcall_exp         go to state 129
    dot_name_exp      go to state 130
    dot_index_exp     go to state 131
    unary_exp         go to state 132
    unary_op          go to state 133
    binary_exp        go to state 134
    mul_binary_exp    go to state 135
    add_binary_exp    go to state 136
    cmp_binary_exp    go to state 137
    eq_binary_exp     go to state 138
    and_binary_exp    go to state 139
    xor_binary_exp    go to state 140
    or_binary_exp     go to state 141
    type_spec         go to state 170
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 308

  170 struct_exp_field: vid "=" expr •

    $default  reduce using rule 170 (struct_exp_field)


State 309

   84 chain_prefix: chain_prefix chain_prefix_stmt ";" •

    $default  reduce using rule 84 (chain_prefix)


State 310

   82 chain_exp: "{" chain_prefix long_exp "}" •

    $default  reduce using rule 82 (chain_exp)


State 311

  170 struct_exp_field: vid • "=" expr

    "="  shift, and go to state 262


State 312

  191 struct_exp_field_cl: struct_exp_field_cl "," struct_exp_field •

    $default  reduce using rule 191 (struct_exp_field_cl)


State 313

  160 varg: "out" expr •

    $default  reduce using rule 160 (varg)


State 314

  161 varg: "inout" expr •

    $default  reduce using rule 161 (varg)


State 315

  163 varg_cl: varg_cl "," • varg

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 46
    "if"                     shift, and go to state 102
    "anonymous_fn"           shift, and go to state 47
    "not"                    shift, and go to state 103
    "out"                    shift, and go to state 272
    "inout"                  shift, and go to state 273
    "42"                     shift, and go to state 104
    "0x2a"                   shift, and go to state 105
    "42u"                    shift, and go to state 106
    "0x2Au"                  shift, and go to state 107
    "4.2"                    shift, and go to state 108
    "\"dq-string-literal\""  shift, and go to state 109
    "'sq-string-literal'"    shift, and go to state 110
    "("                      shift, and go to state 111
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 112
    "+"                      shift, and go to state 113
    "-"                      shift, and go to state 114

    tid               go to state 50
    vid               go to state 115
    floatl            go to state 116
    mod_prefix        go to state 117
    expr              go to state 275
    bracketed_exp     go to state 119
    paren_exp         go to state 120
    vtupleExpr        go to state 121
    vstructExpr       go to state 122
    primary_exp       go to state 123
    int_expr          go to state 124
    stringls          go to state 125
    if_exp            go to state 126
    chain_exp         go to state 127
    postfix_exp       go to state 128
    vcall_exp         go to state 129
    dot_name_exp      go to state 130
    dot_index_exp     go to state 131
    unary_exp         go to state 132
    unary_op          go to state 133
    binary_exp        go to state 134
    mul_binary_exp    go to state 135
    add_binary_exp    go to state 136
    cmp_binary_exp    go to state 137
    eq_binary_exp     go to state 138
    and_binary_exp    go to state 139
    xor_binary_exp    go to state 140
    or_binary_exp     go to state 141
    type_spec         go to state 170
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58
    varg              go to state 329


State 316

   91 vcall_exp: postfix_exp "(" varg_cl ")" •

    $default  reduce using rule 91 (vcall_exp)


State 317

   94 dot_name_exp: type_spec "::" "TypeId" "using" • paren_exp

    "("  shift, and go to state 330

    paren_exp  go to state 331


State 318

   45 mod_prefix: mod_prefix vid "[" targ_cl "]" "::" •

    $default  reduce using rule 45 (mod_prefix)


State 319

   19 mod_field: "let" cid "(" tid class_spec ")" "=" • "{" type_query_exp_sl0 "}"

    "{"  shift, and go to state 332


State 320

   52 type_query_exp_sl0: type_query_exp_sl0 • type_query_exp ";"
  169 class_exp_class_spec: "typeclass" "(" tid class_spec ")" "{" type_query_exp_sl0 • "}"

    "val_id"        shift, and go to state 10
    "TypeId"        shift, and go to state 22
    "enum"          shift, and go to state 46
    "anonymous_fn"  shift, and go to state 47
    "["             shift, and go to state 48
    "{"             shift, and go to state 49
    "}"             shift, and go to state 333

    tid               go to state 50
    vid               go to state 39
    mod_prefix        go to state 51
    type_query_exp    go to state 334
    type_spec         go to state 335
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 321

   44 mod_prefix: mod_prefix • vid "::"
   45           | mod_prefix • vid "[" targ_cl "]" "::"
   68 primary_exp: mod_prefix • vid

    "val_id"  shift, and go to state 10

    vid  go to state 200


State 322

   78 if_exp: "if" bracketed_exp bracketed_exp "else" primary_exp •

    $default  reduce using rule 78 (if_exp)


State 323

  187 lpattern_field_cl: lpattern_field_cl "," • lpattern_field

    "val_id"  shift, and go to state 10

    vid             go to state 253
    lpattern_field  go to state 336


State 324

  178 destructured_lpattern: "{" lpattern_field_cl "}" •

    $default  reduce using rule 178 (destructured_lpattern)


State 325

   31 const_stmt: "const" lpattern "=" expr •

    $default  reduce using rule 31 (const_stmt)


State 326

   32 val_stmt: "val" lpattern "=" expr •

    $default  reduce using rule 32 (val_stmt)


State 327

   33 var_stmt: "var" lpattern "=" expr •

    $default  reduce using rule 33 (var_stmt)


State 328

   34 set_stmt: "set" expr "=" expr •

    $default  reduce using rule 34 (set_stmt)


State 329

  163 varg_cl: varg_cl "," varg •

    $default  reduce using rule 163 (varg_cl)


State 330

   57 paren_exp: "(" • long_exp ")"

    "val_id"                 shift, and go to state 10
    "TypeId"                 shift, and go to state 22
    "enum"                   shift, and go to state 46
    "if"                     shift, and go to state 102
    "anonymous_fn"           shift, and go to state 47
    "not"                    shift, and go to state 103
    "42"                     shift, and go to state 104
    "0x2a"                   shift, and go to state 105
    "42u"                    shift, and go to state 106
    "0x2Au"                  shift, and go to state 107
    "4.2"                    shift, and go to state 108
    "\"dq-string-literal\""  shift, and go to state 109
    "'sq-string-literal'"    shift, and go to state 110
    "("                      shift, and go to state 111
    "["                      shift, and go to state 48
    "{"                      shift, and go to state 112
    "+"                      shift, and go to state 113
    "-"                      shift, and go to state 114

    tid               go to state 50
    vid               go to state 115
    floatl            go to state 116
    mod_prefix        go to state 117
    expr              go to state 167
    long_exp          go to state 180
    bracketed_exp     go to state 119
    paren_exp         go to state 120
    vtupleExpr        go to state 121
    vstructExpr       go to state 122
    primary_exp       go to state 123
    int_expr          go to state 124
    stringls          go to state 125
    if_exp            go to state 126
    chain_exp         go to state 127
    lambda_exp        go to state 169
    postfix_exp       go to state 128
    vcall_exp         go to state 129
    dot_name_exp      go to state 130
    dot_index_exp     go to state 131
    unary_exp         go to state 132
    unary_op          go to state 133
    binary_exp        go to state 134
    mul_binary_exp    go to state 135
    add_binary_exp    go to state 136
    cmp_binary_exp    go to state 137
    eq_binary_exp     go to state 138
    and_binary_exp    go to state 139
    xor_binary_exp    go to state 140
    or_binary_exp     go to state 141
    type_spec         go to state 170
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 171


State 331

   94 dot_name_exp: type_spec "::" "TypeId" "using" paren_exp •

    $default  reduce using rule 94 (dot_name_exp)


State 332

   19 mod_field: "let" cid "(" tid class_spec ")" "=" "{" • type_query_exp_sl0 "}"

    $default  reduce using rule 51 (type_query_exp_sl0)

    type_query_exp_sl0  go to state 337


State 333

  169 class_exp_class_spec: "typeclass" "(" tid class_spec ")" "{" type_query_exp_sl0 "}" •

    $default  reduce using rule 169 (class_exp_class_spec)


State 334

   52 type_query_exp_sl0: type_query_exp_sl0 type_query_exp • ";"

    ";"  shift, and go to state 338


State 335

  128 type_query_exp: type_spec • type_query_op type_spec

    "=="  shift, and go to state 339
    ":<"  shift, and go to state 340
    ">:"  shift, and go to state 341

    type_query_op  go to state 342


State 336

  187 lpattern_field_cl: lpattern_field_cl "," lpattern_field •

    $default  reduce using rule 187 (lpattern_field_cl)


State 337

   19 mod_field: "let" cid "(" tid class_spec ")" "=" "{" type_query_exp_sl0 • "}"
   52 type_query_exp_sl0: type_query_exp_sl0 • type_query_exp ";"

    "val_id"        shift, and go to state 10
    "TypeId"        shift, and go to state 22
    "enum"          shift, and go to state 46
    "anonymous_fn"  shift, and go to state 47
    "["             shift, and go to state 48
    "{"             shift, and go to state 49
    "}"             shift, and go to state 343

    tid               go to state 50
    vid               go to state 39
    mod_prefix        go to state 51
    type_query_exp    go to state 334
    type_spec         go to state 335
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 338

   52 type_query_exp_sl0: type_query_exp_sl0 type_query_exp ";" •

    $default  reduce using rule 52 (type_query_exp_sl0)


State 339

  131 type_query_op: "==" •

    $default  reduce using rule 131 (type_query_op)


State 340

  129 type_query_op: ":<" •

    $default  reduce using rule 129 (type_query_op)


State 341

  130 type_query_op: ">:" •

    $default  reduce using rule 130 (type_query_op)


State 342

  128 type_query_exp: type_spec type_query_op • type_spec

    "val_id"        shift, and go to state 10
    "TypeId"        shift, and go to state 22
    "enum"          shift, and go to state 46
    "anonymous_fn"  shift, and go to state 47
    "["             shift, and go to state 48
    "{"             shift, and go to state 49

    tid               go to state 50
    vid               go to state 39
    mod_prefix        go to state 51
    type_spec         go to state 344
    mod_prefix_tid    go to state 53
    tuple_type_spec   go to state 54
    array_type_spec   go to state 55
    struct_type_spec  go to state 56
    enum_type_spec    go to state 57
    fn_type_spec      go to state 58


State 343

   19 mod_field: "let" cid "(" tid class_spec ")" "=" "{" type_query_exp_sl0 "}" •

    $default  reduce using rule 19 (mod_field)


State 344

  128 type_query_exp: type_spec type_query_op type_spec •

    $default  reduce using rule 128 (type_query_exp)
