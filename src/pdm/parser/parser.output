Terminals unused in grammar

    "<__42__>"
    "match"
    "with"
    ":"
    "&"
    "EOS"
    "<null>"


State 64 conflicts: 1 shift/reduce


Grammar

    0 $accept: script $end

    1 script: scriptContent

    2 scriptContent: scriptContentStmt ";"
    3              | scriptContent scriptContentStmt ";"

    4 scriptContentStmt: mod_stmt

    5 mod_stmt: "mod" "<val_id>" "{" moduleContent "}"

    6 moduleContent: moduleContentStmt ";"
    7              | moduleContent moduleContentStmt ";"

    8 chain_prefix_stmt: const_stmt
    9                  | val_stmt
   10                  | var_stmt
   11                  | set_stmt
   12                  | discard_stmt

   13 const_stmt: "const" lpattern_naked "=" expr

   14 val_stmt: "val" lpattern_naked "=" expr

   15 var_stmt: "var" lpattern_naked "=" expr

   16 set_stmt: "set" expr "=" expr

   17 discard_stmt: expr

   18 moduleContentStmt: fn_stmt
   19                  | type_stmt
   20                  | enum_stmt
   21                  | typeclass_stmt
   22                  | importStmt
   23                  | mod_stmt
   24                  | using_stmt
   25                  | extern_stmt

   26 fn_stmt: "fn" vid vpattern "->" typespec "=" bracketed_exp
   27        | "fn" vid tpattern_seq vpattern "->" typespec "=" bracketed_exp
   28        | "fn" vid vpattern "=" bracketed_exp
   29        | "fn" vid tpattern_seq vpattern "=" bracketed_exp

   30 type_stmt: "type" tid "=" long_typespec
   31          | "type" tid tpattern_seq "=" long_typespec

   32 enum_stmt: "enum" tid enum_field_pl

   33 enum_field_pl: "|" unprefixed_enum_field_pl
   34              | unprefixed_enum_field_pl

   35 unprefixed_enum_field_pl: enum_field
   36                         | unprefixed_enum_field_pl "|" enum_field

   37 enum_field: tid
   38           | tid "(" ")"
   39           | tid "(" typespec_cl1 ")"

   40 typeclass_stmt: "typeclass" tid "<" tid typespec ">" "=" "{" expr_sl "}"
   41               | "typeclass" tid "<" tid typespec ">" tpattern_seq "=" "{" expr_sl "}"

   42 using_stmt: "using" bracketed_exp

   43 importStmt: "import" vid "from" stringl "type" stringl

   44 extern_stmt: "extern" vid "from" expr

   45 tid: "<TypeId>"

   46 vid: "<val_id>"

   47 floatl: "4.2"

   48 stringl: "'sq-string-literal'"
   49        | "\"dq-string-literal\""

   50 expr: binary_exp

   51 expr_cl2: expr "," expr
   52         | expr_cl2 "," expr

   53 expr_sl: expr ";"
   54        | expr_sl expr ";"

   55 bracketed_exp: unit_exp
   56              | paren_exp
   57              | vtupleExpr
   58              | vstructExpr
   59              | chain_exp

   60 unit_exp: "(" ")"
   61         | "{" "}"

   62 paren_exp: "(" type_query_exp ")"

   63 vtupleExpr: "(" expr "," ")"
   64           | "(" expr_cl2 ")"

   65 vstructExpr: "{" struct_exp_field_cl "}"

   66 primary_exp: bracketed_exp
   67            | vid
   68            | int_expr
   69            | floatl
   70            | stringls
   71            | if_exp
   72            | lambda_exp

   73 int_expr: "42"
   74         | "0x2a"

   75 stringls: "'sq-string-literal'"
   76         | "\"dq-string-literal\""
   77         | stringls "'sq-string-literal'"
   78         | stringls "\"dq-string-literal\""

   79 if_exp: "if" bracketed_exp "then" bracketed_exp
   80       | "if" bracketed_exp "then" bracketed_exp "else" primary_exp

   81 chain_exp: "{" expr "}"
   82          | "{" chain_prefix "}"
   83          | "{" chain_prefix expr "}"

   84 chain_prefix: chain_prefix_stmt ";"
   85             | chain_prefix chain_prefix_stmt ";"

   86 lambda_exp: "fn" vpattern "=" bracketed_exp

   87 postfix_exp: primary_exp
   88            | tcall_exp
   89            | vcall_exp
   90            | dot_name_exp
   91            | dot_index_exp

   92 tcall_exp: postfix_exp "[" targ_cl "]"

   93 vcall_exp: postfix_exp "(" ")"
   94          | postfix_exp "(" varg_cl ")"

   95 dot_name_exp: postfix_exp "." "<val_id>"
   96             | postfix_exp "." "<TypeId>"

   97 dot_index_exp: postfix_exp "." int_expr
   98              | postfix_exp "." bracketed_exp

   99 unary_exp: postfix_exp
  100          | unary_op unary_exp

  101 unary_op: "+"
  102         | "-"
  103         | "*"
  104         | "^"
  105         | "not"

  106 binary_exp: or_binary_exp

  107 mul_binary_op: "*"
  108              | "/"
  109              | "%"

  110 mul_binary_exp: unary_exp
  111               | mul_binary_exp mul_binary_op unary_exp

  112 add_binary_op: "+"
  113              | "-"

  114 add_binary_exp: mul_binary_exp
  115               | add_binary_exp add_binary_op mul_binary_exp

  116 cmp_binary_op: "<"
  117              | "<="
  118              | ">"
  119              | ">="

  120 cmp_binary_exp: add_binary_exp
  121               | cmp_binary_exp cmp_binary_op add_binary_exp

  122 eq_binary_op: "=="
  123             | "!="

  124 eq_binary_exp: cmp_binary_exp
  125              | eq_binary_exp eq_binary_op cmp_binary_exp

  126 and_binary_exp: eq_binary_exp
  127               | and_binary_exp "and" eq_binary_exp

  128 xor_binary_exp: and_binary_exp
  129               | xor_binary_exp "xor" and_binary_exp

  130 or_binary_exp: xor_binary_exp
  131              | or_binary_exp "or" xor_binary_exp

  132 type_query_exp: binary_exp
  133               | typespec type_query_op typespec

  134 type_query_op: ":<"
  135              | ">:"
  136              | "::"

  137 typespec: unary_typespec

  138 typespec_cl1: typespec
  139             | typespec_cl1 "," typespec

  140 typespec_cl2: typespec "," typespec
  141             | typespec_cl2 "," typespec

  142 struct_typespec_field: vid typespec

  143 struct_typespec_field_cl: struct_typespec_field
  144                         | struct_typespec_field_cl "," struct_typespec_field

  145 primary_typespec: tid
  146                 | paren_typespec
  147                 | tuple_typespec
  148                 | mod_prefix_tid
  149                 | fn_typespec

  150 paren_typespec: "(" typespec ")"

  151 tuple_typespec: "(" typespec "," ")"
  152               | "(" typespec_cl2 ")"

  153 mod_prefix_tid: mod_prefix tid

  154 mod_prefix: vid "."
  155           | mod_prefix vid "."

  156 fn_typespec: "Fn" vpattern primary_typespec

  157 postfix_typespec: primary_typespec
  158                 | tcall_typespec
  159                 | dot_typespec

  160 tcall_typespec: postfix_typespec "[" targ_cl "]"

  161 dot_typespec: postfix_typespec "." "<val_id>"

  162 unary_typespec: postfix_typespec

  163 long_typespec: unary_typespec
  164              | struct_typespec

  165 struct_typespec: "{" struct_typespec_field_cl "}"

  166 targ: typespec
  167     | expr

  168 targ_cl: targ
  169        | targ_cl "," targ

  170 varg: expr
  171     | "out" expr
  172     | "inout" expr

  173 varg_cl: varg
  174        | varg_cl "," varg

  175 struct_exp_field: vid "=" expr

  176 vpattern_field: vid typespec
  177               | "out" vid typespec
  178               | "inout" vid typespec

  179 lpattern_field: vid typespec
  180               | vid

  181 tpattern_field: vid typespec
  182               | tid typespec

  183 lpattern: "(" lpattern_field_cl ")"
  184         | "(" ")"

  185 lpattern_naked: lpattern_field
  186               | lpattern

  187 vpattern: "(" vpattern_field_cl ")"
  188         | "(" ")"

  189 tpattern: "[" tpattern_field_cl "]"
  190         | "!" "[" tpattern_field_cl "]"

  191 vpattern_field_cl: vpattern_field
  192                  | vpattern_field_cl "," vpattern_field

  193 lpattern_field_cl: lpattern_field
  194                  | lpattern_field_cl "," lpattern_field

  195 tpattern_field_cl: tpattern_field
  196                  | tpattern_field_cl "," tpattern_field

  197 struct_exp_field_cl: struct_exp_field
  198                    | struct_exp_field_cl "," struct_exp_field

  199 tpattern_seq: tpattern
  200             | tpattern_seq tpattern


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    "<val_id>" <TokenInfo> (258) 5 46 95 161
    "<TypeId>" <TokenInfo> (259) 45 96
    "<__42__>" <TokenInfo> (260)
    "using" (261) 42
    "mod" (262) 5
    "if" (263) 79 80
    "then" (264) 79 80
    "else" (265) 80
    "match" (266)
    "with" (267)
    "import" (268) 43
    "extern" (269) 44
    "from" (270) 43 44
    "const" (271) 13
    "val" (272) 14
    "var" (273) 15
    "set" (274) 16
    "fn" (275) 26 27 28 29 86
    "Fn" (276) 156
    "type" (277) 30 31 43
    "enum" (278) 32
    "and" (279) 127
    "xor" (280) 129
    "or" (281) 131
    "not" (282) 105
    "typeclass" (283) 40 41
    "out" (284) 171 177
    "inout" (285) 172 178
    "42" <TokenInfo> (286) 73
    "0x2a" <TokenInfo> (287) 74
    "4.2" <TokenInfo> (288) 47
    "\"dq-string-literal\"" <TokenInfo> (289) 49 76 78
    "'sq-string-literal'" <TokenInfo> (290) 48 75 77
    "." (291) 95 96 97 98 154 155 161
    ":" (292)
    "," (293) 51 52 63 139 140 141 144 151 169 174 192 194 196 198
    ";" (294) 2 3 6 7 53 54 84 85
    "::" (295) 136
    "(" (296) 38 39 60 62 63 64 93 94 150 151 152 183 184 187 188
    ")" (297) 38 39 60 62 63 64 93 94 150 151 152 183 184 187 188
    "[" (298) 92 160 189 190
    "]" (299) 92 160 189 190
    "{" (300) 5 40 41 61 65 81 82 83 165
    "}" (301) 5 40 41 61 65 81 82 83 165
    "->" (302) 26 27
    "*" (303) 103 107
    "/" (304) 108
    "%" (305) 109
    "+" (306) 101 112
    "-" (307) 102 113
    "<" (308) 40 41 116
    "<=" (309) 117
    ">" (310) 40 41 118
    ">=" (311) 119
    "=" (312) 13 14 15 16 26 27 28 29 30 31 40 41 86 175
    "==" (313) 122
    "!=" (314) 123
    "^" (315) 104
    "&" (316)
    "!" (317) 190
    "|" (318) 33 36
    "EOS" (319)
    ":<" (320) 134
    ">:" (321) 135
    "<null>" (322)


Nonterminals, with rules where they appear

    $accept (68)
        on left: 0
    script <pdm::ast::Script*> (69)
        on left: 1
        on right: 0
    scriptContent <std::vector<pdm::ast::Stmt*>> (70)
        on left: 2 3
        on right: 1 3
    scriptContentStmt <pdm::ast::Stmt*> (71)
        on left: 4
        on right: 2 3
    mod_stmt <pdm::ast::Stmt*> (72)
        on left: 5
        on right: 4 23
    moduleContent <std::vector<pdm::ast::Stmt*>> (73)
        on left: 6 7
        on right: 5 7
    chain_prefix_stmt <pdm::ast::Stmt*> (74)
        on left: 8 9 10 11 12
        on right: 84 85
    const_stmt <pdm::ast::Stmt*> (75)
        on left: 13
        on right: 8
    val_stmt <pdm::ast::Stmt*> (76)
        on left: 14
        on right: 9
    var_stmt <pdm::ast::Stmt*> (77)
        on left: 15
        on right: 10
    set_stmt <pdm::ast::Stmt*> (78)
        on left: 16
        on right: 11
    discard_stmt <pdm::ast::Stmt*> (79)
        on left: 17
        on right: 12
    moduleContentStmt <pdm::ast::Stmt*> (80)
        on left: 18 19 20 21 22 23 24 25
        on right: 6 7
    fn_stmt <pdm::ast::Stmt*> (81)
        on left: 26 27 28 29
        on right: 18
    type_stmt <pdm::ast::Stmt*> (82)
        on left: 30 31
        on right: 19
    enum_stmt <pdm::ast::Stmt*> (83)
        on left: 32
        on right: 20
    enum_field_pl <std::vector<pdm::ast::EnumStmt::Field*>> (84)
        on left: 33 34
        on right: 32
    unprefixed_enum_field_pl <std::vector<pdm::ast::EnumStmt::Field*>> (85)
        on left: 35 36
        on right: 33 34 36
    enum_field <pdm::ast::EnumStmt::Field*> (86)
        on left: 37 38 39
        on right: 35 36
    typeclass_stmt <pdm::ast::Stmt*> (87)
        on left: 40 41
        on right: 21
    using_stmt <pdm::ast::Stmt*> (88)
        on left: 42
        on right: 24
    importStmt <pdm::ast::Stmt*> (89)
        on left: 43
        on right: 22
    extern_stmt <pdm::ast::Stmt*> (90)
        on left: 44
        on right: 25
    tid <TokenInfo> (91)
        on left: 45
        on right: 30 31 32 37 38 39 40 41 145 153 182
    vid <TokenInfo> (92)
        on left: 46
        on right: 26 27 28 29 43 44 67 142 154 155 175 176 177 178 179 180 181
    floatl <TokenInfo> (93)
        on left: 47
        on right: 69
    stringl <TokenInfo> (94)
        on left: 48 49
        on right: 43
    expr <pdm::ast::Exp*> (95)
        on left: 50
        on right: 13 14 15 16 17 44 51 52 53 54 63 81 83 167 170 171 172 175
    expr_cl2 <std::vector<pdm::ast::Exp*>> (96)
        on left: 51 52
        on right: 52 64
    expr_sl <std::vector<pdm::ast::Exp*>> (97)
        on left: 53 54
        on right: 40 41 54
    bracketed_exp <pdm::ast::Exp*> (98)
        on left: 55 56 57 58 59
        on right: 26 27 28 29 42 66 79 80 86 98
    unit_exp <pdm::ast::Exp*> (99)
        on left: 60 61
        on right: 55
    paren_exp <pdm::ast::Exp*> (100)
        on left: 62
        on right: 56
    vtupleExpr <pdm::ast::Exp*> (101)
        on left: 63 64
        on right: 57
    vstructExpr <pdm::ast::Exp*> (102)
        on left: 65
        on right: 58
    primary_exp <pdm::ast::Exp*> (103)
        on left: 66 67 68 69 70 71 72
        on right: 80 87
    int_expr <pdm::ast::Exp*> (104)
        on left: 73 74
        on right: 68 97
    stringls <std::vector<pdm::ast::StringExp::Piece>> (105)
        on left: 75 76 77 78
        on right: 70 77 78
    if_exp <pdm::ast::Exp*> (106)
        on left: 79 80
        on right: 71
    chain_exp <pdm::ast::Exp*> (107)
        on left: 81 82 83
        on right: 59
    chain_prefix <std::vector<pdm::ast::Stmt*>> (108)
        on left: 84 85
        on right: 82 83 85
    lambda_exp <pdm::ast::Exp*> (109)
        on left: 86
        on right: 72
    postfix_exp <pdm::ast::Exp*> (110)
        on left: 87 88 89 90 91
        on right: 92 93 94 95 96 97 98 99
    tcall_exp <pdm::ast::Exp*> (111)
        on left: 92
        on right: 88
    vcall_exp <pdm::ast::Exp*> (112)
        on left: 93 94
        on right: 89
    dot_name_exp <pdm::ast::Exp*> (113)
        on left: 95 96
        on right: 90
    dot_index_exp <pdm::ast::Exp*> (114)
        on left: 97 98
        on right: 91
    unary_exp <pdm::ast::Exp*> (115)
        on left: 99 100
        on right: 100 110 111
    unary_op <pdm::ast::UnaryOperator> (116)
        on left: 101 102 103 104 105
        on right: 100
    binary_exp <pdm::ast::Exp*> (117)
        on left: 106
        on right: 50 132
    mul_binary_op <pdm::ast::BinaryOperator> (118)
        on left: 107 108 109
        on right: 111
    mul_binary_exp <pdm::ast::Exp*> (119)
        on left: 110 111
        on right: 111 114 115
    add_binary_op <pdm::ast::BinaryOperator> (120)
        on left: 112 113
        on right: 115
    add_binary_exp <pdm::ast::Exp*> (121)
        on left: 114 115
        on right: 115 120 121
    cmp_binary_op <pdm::ast::BinaryOperator> (122)
        on left: 116 117 118 119
        on right: 121
    cmp_binary_exp <pdm::ast::Exp*> (123)
        on left: 120 121
        on right: 121 124 125
    eq_binary_op <pdm::ast::BinaryOperator> (124)
        on left: 122 123
        on right: 125
    eq_binary_exp <pdm::ast::Exp*> (125)
        on left: 124 125
        on right: 125 126 127
    and_binary_exp <pdm::ast::Exp*> (126)
        on left: 126 127
        on right: 127 128 129
    xor_binary_exp <pdm::ast::Exp*> (127)
        on left: 128 129
        on right: 129 130 131
    or_binary_exp <pdm::ast::Exp*> (128)
        on left: 130 131
        on right: 106 131
    type_query_exp <pdm::ast::Exp*> (129)
        on left: 132 133
        on right: 62
    type_query_op <pdm::ast::TypeQueryKind> (130)
        on left: 134 135 136
        on right: 133
    typespec <pdm::ast::Typespec*> (131)
        on left: 137
        on right: 26 27 40 41 133 138 139 140 141 142 150 151 166 176 177 178 179 181 182
    typespec_cl1 <std::vector<pdm::ast::Typespec*>> (132)
        on left: 138 139
        on right: 39 139
    typespec_cl2 <std::vector<pdm::ast::Typespec*>> (133)
        on left: 140 141
        on right: 141 152
    struct_typespec_field <pdm::ast::StructTypespec::Field*> (134)
        on left: 142
        on right: 143 144
    struct_typespec_field_cl <std::vector<pdm::ast::StructTypespec::Field*>> (135)
        on left: 143 144
        on right: 144 165
    primary_typespec <pdm::ast::Typespec*> (136)
        on left: 145 146 147 148 149
        on right: 156 157
    paren_typespec <pdm::ast::Typespec*> (137)
        on left: 150
        on right: 146
    tuple_typespec <pdm::ast::Typespec*> (138)
        on left: 151 152
        on right: 147
    mod_prefix_tid <pdm::ast::Typespec*> (139)
        on left: 153
        on right: 148
    mod_prefix <std::vector<pdm::intern::String>> (140)
        on left: 154 155
        on right: 153 155
    fn_typespec <pdm::ast::Typespec*> (141)
        on left: 156
        on right: 149
    postfix_typespec <pdm::ast::Typespec*> (142)
        on left: 157 158 159
        on right: 160 161 162
    tcall_typespec <pdm::ast::Typespec*> (143)
        on left: 160
        on right: 158
    dot_typespec <pdm::ast::Typespec*> (144)
        on left: 161
        on right: 159
    unary_typespec <pdm::ast::Typespec*> (145)
        on left: 162
        on right: 137 163
    long_typespec <pdm::ast::Typespec*> (146)
        on left: 163 164
        on right: 30 31
    struct_typespec <pdm::ast::Typespec*> (147)
        on left: 165
        on right: 164
    targ <pdm::ast::TArg*> (148)
        on left: 166 167
        on right: 168 169
    targ_cl <std::vector<pdm::ast::TArg*>> (149)
        on left: 168 169
        on right: 92 160 169
    varg <pdm::ast::VArg*> (150)
        on left: 170 171 172
        on right: 173 174
    varg_cl <std::vector<pdm::ast::VArg*>> (151)
        on left: 173 174
        on right: 94 174
    struct_exp_field <pdm::ast::StructExp::Field*> (152)
        on left: 175
        on right: 197 198
    vpattern_field <pdm::ast::VPattern::Field*> (153)
        on left: 176 177 178
        on right: 191 192
    lpattern_field <pdm::ast::LPattern::Field*> (154)
        on left: 179 180
        on right: 185 193 194
    tpattern_field <pdm::ast::TPattern::Field*> (155)
        on left: 181 182
        on right: 195 196
    lpattern <pdm::ast::LPattern*> (156)
        on left: 183 184
        on right: 186
    lpattern_naked <pdm::ast::LPattern*> (157)
        on left: 185 186
        on right: 13 14 15
    vpattern <pdm::ast::VPattern*> (158)
        on left: 187 188
        on right: 26 27 28 29 86 156
    tpattern <pdm::ast::TPattern*> (159)
        on left: 189 190
        on right: 199 200
    vpattern_field_cl <std::vector<pdm::ast::VPattern::Field*>> (160)
        on left: 191 192
        on right: 187 192
    lpattern_field_cl <std::vector<pdm::ast::LPattern::Field*>> (161)
        on left: 193 194
        on right: 183 194
    tpattern_field_cl <std::vector<pdm::ast::TPattern::Field*>> (162)
        on left: 195 196
        on right: 189 190 196
    struct_exp_field_cl <std::vector<pdm::ast::StructExp::Field*>> (163)
        on left: 197 198
        on right: 65 198
    tpattern_seq <std::vector<pdm::ast::TPattern*>> (164)
        on left: 199 200
        on right: 27 29 31 41 200


State 0

    0 $accept: • script $end

    "mod"  shift, and go to state 1

    script             go to state 2
    scriptContent      go to state 3
    scriptContentStmt  go to state 4
    mod_stmt           go to state 5


State 1

    5 mod_stmt: "mod" • "<val_id>" "{" moduleContent "}"

    "<val_id>"  shift, and go to state 6


State 2

    0 $accept: script • $end

    $end  shift, and go to state 7


State 3

    1 script: scriptContent •
    3 scriptContent: scriptContent • scriptContentStmt ";"

    "mod"  shift, and go to state 1

    $default  reduce using rule 1 (script)

    scriptContentStmt  go to state 8
    mod_stmt           go to state 5


State 4

    2 scriptContent: scriptContentStmt • ";"

    ";"  shift, and go to state 9


State 5

    4 scriptContentStmt: mod_stmt •

    $default  reduce using rule 4 (scriptContentStmt)


State 6

    5 mod_stmt: "mod" "<val_id>" • "{" moduleContent "}"

    "{"  shift, and go to state 10


State 7

    0 $accept: script $end •

    $default  accept


State 8

    3 scriptContent: scriptContent scriptContentStmt • ";"

    ";"  shift, and go to state 11


State 9

    2 scriptContent: scriptContentStmt ";" •

    $default  reduce using rule 2 (scriptContent)


State 10

    5 mod_stmt: "mod" "<val_id>" "{" • moduleContent "}"

    "using"      shift, and go to state 12
    "mod"        shift, and go to state 1
    "import"     shift, and go to state 13
    "extern"     shift, and go to state 14
    "fn"         shift, and go to state 15
    "type"       shift, and go to state 16
    "enum"       shift, and go to state 17
    "typeclass"  shift, and go to state 18

    mod_stmt           go to state 19
    moduleContent      go to state 20
    moduleContentStmt  go to state 21
    fn_stmt            go to state 22
    type_stmt          go to state 23
    enum_stmt          go to state 24
    typeclass_stmt     go to state 25
    using_stmt         go to state 26
    importStmt         go to state 27
    extern_stmt        go to state 28


State 11

    3 scriptContent: scriptContent scriptContentStmt ";" •

    $default  reduce using rule 3 (scriptContent)


State 12

   42 using_stmt: "using" • bracketed_exp

    "("  shift, and go to state 29
    "{"  shift, and go to state 30

    bracketed_exp  go to state 31
    unit_exp       go to state 32
    paren_exp      go to state 33
    vtupleExpr     go to state 34
    vstructExpr    go to state 35
    chain_exp      go to state 36


State 13

   43 importStmt: "import" • vid "from" stringl "type" stringl

    "<val_id>"  shift, and go to state 37

    vid  go to state 38


State 14

   44 extern_stmt: "extern" • vid "from" expr

    "<val_id>"  shift, and go to state 37

    vid  go to state 39


State 15

   26 fn_stmt: "fn" • vid vpattern "->" typespec "=" bracketed_exp
   27        | "fn" • vid tpattern_seq vpattern "->" typespec "=" bracketed_exp
   28        | "fn" • vid vpattern "=" bracketed_exp
   29        | "fn" • vid tpattern_seq vpattern "=" bracketed_exp

    "<val_id>"  shift, and go to state 37

    vid  go to state 40


State 16

   30 type_stmt: "type" • tid "=" long_typespec
   31          | "type" • tid tpattern_seq "=" long_typespec

    "<TypeId>"  shift, and go to state 41

    tid  go to state 42


State 17

   32 enum_stmt: "enum" • tid enum_field_pl

    "<TypeId>"  shift, and go to state 41

    tid  go to state 43


State 18

   40 typeclass_stmt: "typeclass" • tid "<" tid typespec ">" "=" "{" expr_sl "}"
   41               | "typeclass" • tid "<" tid typespec ">" tpattern_seq "=" "{" expr_sl "}"

    "<TypeId>"  shift, and go to state 41

    tid  go to state 44


State 19

   23 moduleContentStmt: mod_stmt •

    $default  reduce using rule 23 (moduleContentStmt)


State 20

    5 mod_stmt: "mod" "<val_id>" "{" moduleContent • "}"
    7 moduleContent: moduleContent • moduleContentStmt ";"

    "using"      shift, and go to state 12
    "mod"        shift, and go to state 1
    "import"     shift, and go to state 13
    "extern"     shift, and go to state 14
    "fn"         shift, and go to state 15
    "type"       shift, and go to state 16
    "enum"       shift, and go to state 17
    "typeclass"  shift, and go to state 18
    "}"          shift, and go to state 45

    mod_stmt           go to state 19
    moduleContentStmt  go to state 46
    fn_stmt            go to state 22
    type_stmt          go to state 23
    enum_stmt          go to state 24
    typeclass_stmt     go to state 25
    using_stmt         go to state 26
    importStmt         go to state 27
    extern_stmt        go to state 28


State 21

    6 moduleContent: moduleContentStmt • ";"

    ";"  shift, and go to state 47


State 22

   18 moduleContentStmt: fn_stmt •

    $default  reduce using rule 18 (moduleContentStmt)


State 23

   19 moduleContentStmt: type_stmt •

    $default  reduce using rule 19 (moduleContentStmt)


State 24

   20 moduleContentStmt: enum_stmt •

    $default  reduce using rule 20 (moduleContentStmt)


State 25

   21 moduleContentStmt: typeclass_stmt •

    $default  reduce using rule 21 (moduleContentStmt)


State 26

   24 moduleContentStmt: using_stmt •

    $default  reduce using rule 24 (moduleContentStmt)


State 27

   22 moduleContentStmt: importStmt •

    $default  reduce using rule 22 (moduleContentStmt)


State 28

   25 moduleContentStmt: extern_stmt •

    $default  reduce using rule 25 (moduleContentStmt)


State 29

   60 unit_exp: "(" • ")"
   62 paren_exp: "(" • type_query_exp ")"
   63 vtupleExpr: "(" • expr "," ")"
   64           | "(" • expr_cl2 ")"

    "<val_id>"               shift, and go to state 37
    "<TypeId>"               shift, and go to state 41
    "if"                     shift, and go to state 48
    "fn"                     shift, and go to state 49
    "Fn"                     shift, and go to state 50
    "not"                    shift, and go to state 51
    "42"                     shift, and go to state 52
    "0x2a"                   shift, and go to state 53
    "4.2"                    shift, and go to state 54
    "\"dq-string-literal\""  shift, and go to state 55
    "'sq-string-literal'"    shift, and go to state 56
    "("                      shift, and go to state 57
    ")"                      shift, and go to state 58
    "{"                      shift, and go to state 30
    "*"                      shift, and go to state 59
    "+"                      shift, and go to state 60
    "-"                      shift, and go to state 61
    "^"                      shift, and go to state 62

    tid               go to state 63
    vid               go to state 64
    floatl            go to state 65
    expr              go to state 66
    expr_cl2          go to state 67
    bracketed_exp     go to state 68
    unit_exp          go to state 32
    paren_exp         go to state 33
    vtupleExpr        go to state 34
    vstructExpr       go to state 35
    primary_exp       go to state 69
    int_expr          go to state 70
    stringls          go to state 71
    if_exp            go to state 72
    chain_exp         go to state 36
    lambda_exp        go to state 73
    postfix_exp       go to state 74
    tcall_exp         go to state 75
    vcall_exp         go to state 76
    dot_name_exp      go to state 77
    dot_index_exp     go to state 78
    unary_exp         go to state 79
    unary_op          go to state 80
    binary_exp        go to state 81
    mul_binary_exp    go to state 82
    add_binary_exp    go to state 83
    cmp_binary_exp    go to state 84
    eq_binary_exp     go to state 85
    and_binary_exp    go to state 86
    xor_binary_exp    go to state 87
    or_binary_exp     go to state 88
    type_query_exp    go to state 89
    typespec          go to state 90
    primary_typespec  go to state 91
    paren_typespec    go to state 92
    tuple_typespec    go to state 93
    mod_prefix_tid    go to state 94
    mod_prefix        go to state 95
    fn_typespec       go to state 96
    postfix_typespec  go to state 97
    tcall_typespec    go to state 98
    dot_typespec      go to state 99
    unary_typespec    go to state 100


State 30

   61 unit_exp: "{" • "}"
   65 vstructExpr: "{" • struct_exp_field_cl "}"
   81 chain_exp: "{" • expr "}"
   82          | "{" • chain_prefix "}"
   83          | "{" • chain_prefix expr "}"

    "<val_id>"               shift, and go to state 37
    "if"                     shift, and go to state 48
    "const"                  shift, and go to state 101
    "val"                    shift, and go to state 102
    "var"                    shift, and go to state 103
    "set"                    shift, and go to state 104
    "fn"                     shift, and go to state 49
    "not"                    shift, and go to state 51
    "42"                     shift, and go to state 52
    "0x2a"                   shift, and go to state 53
    "4.2"                    shift, and go to state 54
    "\"dq-string-literal\""  shift, and go to state 55
    "'sq-string-literal'"    shift, and go to state 56
    "("                      shift, and go to state 29
    "{"                      shift, and go to state 30
    "}"                      shift, and go to state 105
    "*"                      shift, and go to state 59
    "+"                      shift, and go to state 60
    "-"                      shift, and go to state 61
    "^"                      shift, and go to state 62

    chain_prefix_stmt    go to state 106
    const_stmt           go to state 107
    val_stmt             go to state 108
    var_stmt             go to state 109
    set_stmt             go to state 110
    discard_stmt         go to state 111
    vid                  go to state 112
    floatl               go to state 65
    expr                 go to state 113
    bracketed_exp        go to state 68
    unit_exp             go to state 32
    paren_exp            go to state 33
    vtupleExpr           go to state 34
    vstructExpr          go to state 35
    primary_exp          go to state 69
    int_expr             go to state 70
    stringls             go to state 71
    if_exp               go to state 72
    chain_exp            go to state 36
    chain_prefix         go to state 114
    lambda_exp           go to state 73
    postfix_exp          go to state 74
    tcall_exp            go to state 75
    vcall_exp            go to state 76
    dot_name_exp         go to state 77
    dot_index_exp        go to state 78
    unary_exp            go to state 79
    unary_op             go to state 80
    binary_exp           go to state 115
    mul_binary_exp       go to state 82
    add_binary_exp       go to state 83
    cmp_binary_exp       go to state 84
    eq_binary_exp        go to state 85
    and_binary_exp       go to state 86
    xor_binary_exp       go to state 87
    or_binary_exp        go to state 88
    struct_exp_field     go to state 116
    struct_exp_field_cl  go to state 117


State 31

   42 using_stmt: "using" bracketed_exp •

    $default  reduce using rule 42 (using_stmt)


State 32

   55 bracketed_exp: unit_exp •

    $default  reduce using rule 55 (bracketed_exp)


State 33

   56 bracketed_exp: paren_exp •

    $default  reduce using rule 56 (bracketed_exp)


State 34

   57 bracketed_exp: vtupleExpr •

    $default  reduce using rule 57 (bracketed_exp)


State 35

   58 bracketed_exp: vstructExpr •

    $default  reduce using rule 58 (bracketed_exp)


State 36

   59 bracketed_exp: chain_exp •

    $default  reduce using rule 59 (bracketed_exp)


State 37

   46 vid: "<val_id>" •

    $default  reduce using rule 46 (vid)


State 38

   43 importStmt: "import" vid • "from" stringl "type" stringl

    "from"  shift, and go to state 118


State 39

   44 extern_stmt: "extern" vid • "from" expr

    "from"  shift, and go to state 119


State 40

   26 fn_stmt: "fn" vid • vpattern "->" typespec "=" bracketed_exp
   27        | "fn" vid • tpattern_seq vpattern "->" typespec "=" bracketed_exp
   28        | "fn" vid • vpattern "=" bracketed_exp
   29        | "fn" vid • tpattern_seq vpattern "=" bracketed_exp

    "("  shift, and go to state 120
    "["  shift, and go to state 121
    "!"  shift, and go to state 122

    vpattern      go to state 123
    tpattern      go to state 124
    tpattern_seq  go to state 125


State 41

   45 tid: "<TypeId>" •

    $default  reduce using rule 45 (tid)


State 42

   30 type_stmt: "type" tid • "=" long_typespec
   31          | "type" tid • tpattern_seq "=" long_typespec

    "["  shift, and go to state 121
    "="  shift, and go to state 126
    "!"  shift, and go to state 122

    tpattern      go to state 124
    tpattern_seq  go to state 127


State 43

   32 enum_stmt: "enum" tid • enum_field_pl

    "<TypeId>"  shift, and go to state 41
    "|"         shift, and go to state 128

    enum_field_pl             go to state 129
    unprefixed_enum_field_pl  go to state 130
    enum_field                go to state 131
    tid                       go to state 132


State 44

   40 typeclass_stmt: "typeclass" tid • "<" tid typespec ">" "=" "{" expr_sl "}"
   41               | "typeclass" tid • "<" tid typespec ">" tpattern_seq "=" "{" expr_sl "}"

    "<"  shift, and go to state 133


State 45

    5 mod_stmt: "mod" "<val_id>" "{" moduleContent "}" •

    $default  reduce using rule 5 (mod_stmt)


State 46

    7 moduleContent: moduleContent moduleContentStmt • ";"

    ";"  shift, and go to state 134


State 47

    6 moduleContent: moduleContentStmt ";" •

    $default  reduce using rule 6 (moduleContent)


State 48

   79 if_exp: "if" • bracketed_exp "then" bracketed_exp
   80       | "if" • bracketed_exp "then" bracketed_exp "else" primary_exp

    "("  shift, and go to state 29
    "{"  shift, and go to state 30

    bracketed_exp  go to state 135
    unit_exp       go to state 32
    paren_exp      go to state 33
    vtupleExpr     go to state 34
    vstructExpr    go to state 35
    chain_exp      go to state 36


State 49

   86 lambda_exp: "fn" • vpattern "=" bracketed_exp

    "("  shift, and go to state 120

    vpattern  go to state 136


State 50

  156 fn_typespec: "Fn" • vpattern primary_typespec

    "("  shift, and go to state 120

    vpattern  go to state 137


State 51

  105 unary_op: "not" •

    $default  reduce using rule 105 (unary_op)


State 52

   73 int_expr: "42" •

    $default  reduce using rule 73 (int_expr)


State 53

   74 int_expr: "0x2a" •

    $default  reduce using rule 74 (int_expr)


State 54

   47 floatl: "4.2" •

    $default  reduce using rule 47 (floatl)


State 55

   76 stringls: "\"dq-string-literal\"" •

    $default  reduce using rule 76 (stringls)


State 56

   75 stringls: "'sq-string-literal'" •

    $default  reduce using rule 75 (stringls)


State 57

   60 unit_exp: "(" • ")"
   62 paren_exp: "(" • type_query_exp ")"
   63 vtupleExpr: "(" • expr "," ")"
   64           | "(" • expr_cl2 ")"
  150 paren_typespec: "(" • typespec ")"
  151 tuple_typespec: "(" • typespec "," ")"
  152               | "(" • typespec_cl2 ")"

    "<val_id>"               shift, and go to state 37
    "<TypeId>"               shift, and go to state 41
    "if"                     shift, and go to state 48
    "fn"                     shift, and go to state 49
    "Fn"                     shift, and go to state 50
    "not"                    shift, and go to state 51
    "42"                     shift, and go to state 52
    "0x2a"                   shift, and go to state 53
    "4.2"                    shift, and go to state 54
    "\"dq-string-literal\""  shift, and go to state 55
    "'sq-string-literal'"    shift, and go to state 56
    "("                      shift, and go to state 57
    ")"                      shift, and go to state 58
    "{"                      shift, and go to state 30
    "*"                      shift, and go to state 59
    "+"                      shift, and go to state 60
    "-"                      shift, and go to state 61
    "^"                      shift, and go to state 62

    tid               go to state 63
    vid               go to state 64
    floatl            go to state 65
    expr              go to state 66
    expr_cl2          go to state 67
    bracketed_exp     go to state 68
    unit_exp          go to state 32
    paren_exp         go to state 33
    vtupleExpr        go to state 34
    vstructExpr       go to state 35
    primary_exp       go to state 69
    int_expr          go to state 70
    stringls          go to state 71
    if_exp            go to state 72
    chain_exp         go to state 36
    lambda_exp        go to state 73
    postfix_exp       go to state 74
    tcall_exp         go to state 75
    vcall_exp         go to state 76
    dot_name_exp      go to state 77
    dot_index_exp     go to state 78
    unary_exp         go to state 79
    unary_op          go to state 80
    binary_exp        go to state 81
    mul_binary_exp    go to state 82
    add_binary_exp    go to state 83
    cmp_binary_exp    go to state 84
    eq_binary_exp     go to state 85
    and_binary_exp    go to state 86
    xor_binary_exp    go to state 87
    or_binary_exp     go to state 88
    type_query_exp    go to state 89
    typespec          go to state 138
    typespec_cl2      go to state 139
    primary_typespec  go to state 91
    paren_typespec    go to state 92
    tuple_typespec    go to state 93
    mod_prefix_tid    go to state 94
    mod_prefix        go to state 95
    fn_typespec       go to state 96
    postfix_typespec  go to state 97
    tcall_typespec    go to state 98
    dot_typespec      go to state 99
    unary_typespec    go to state 100


State 58

   60 unit_exp: "(" ")" •

    $default  reduce using rule 60 (unit_exp)


State 59

  103 unary_op: "*" •

    $default  reduce using rule 103 (unary_op)


State 60

  101 unary_op: "+" •

    $default  reduce using rule 101 (unary_op)


State 61

  102 unary_op: "-" •

    $default  reduce using rule 102 (unary_op)


State 62

  104 unary_op: "^" •

    $default  reduce using rule 104 (unary_op)


State 63

  145 primary_typespec: tid •

    $default  reduce using rule 145 (primary_typespec)


State 64

   67 primary_exp: vid •
  154 mod_prefix: vid • "."

    "."  shift, and go to state 140

    "."       [reduce using rule 67 (primary_exp)]
    $default  reduce using rule 67 (primary_exp)


State 65

   69 primary_exp: floatl •

    $default  reduce using rule 69 (primary_exp)


State 66

   51 expr_cl2: expr • "," expr
   63 vtupleExpr: "(" expr • "," ")"

    ","  shift, and go to state 141


State 67

   52 expr_cl2: expr_cl2 • "," expr
   64 vtupleExpr: "(" expr_cl2 • ")"

    ","  shift, and go to state 142
    ")"  shift, and go to state 143


State 68

   66 primary_exp: bracketed_exp •

    $default  reduce using rule 66 (primary_exp)


State 69

   87 postfix_exp: primary_exp •

    $default  reduce using rule 87 (postfix_exp)


State 70

   68 primary_exp: int_expr •

    $default  reduce using rule 68 (primary_exp)


State 71

   70 primary_exp: stringls •
   77 stringls: stringls • "'sq-string-literal'"
   78         | stringls • "\"dq-string-literal\""

    "\"dq-string-literal\""  shift, and go to state 144
    "'sq-string-literal'"    shift, and go to state 145

    $default  reduce using rule 70 (primary_exp)


State 72

   71 primary_exp: if_exp •

    $default  reduce using rule 71 (primary_exp)


State 73

   72 primary_exp: lambda_exp •

    $default  reduce using rule 72 (primary_exp)


State 74

   92 tcall_exp: postfix_exp • "[" targ_cl "]"
   93 vcall_exp: postfix_exp • "(" ")"
   94          | postfix_exp • "(" varg_cl ")"
   95 dot_name_exp: postfix_exp • "." "<val_id>"
   96             | postfix_exp • "." "<TypeId>"
   97 dot_index_exp: postfix_exp • "." int_expr
   98              | postfix_exp • "." bracketed_exp
   99 unary_exp: postfix_exp •

    "."  shift, and go to state 146
    "("  shift, and go to state 147
    "["  shift, and go to state 148

    $default  reduce using rule 99 (unary_exp)


State 75

   88 postfix_exp: tcall_exp •

    $default  reduce using rule 88 (postfix_exp)


State 76

   89 postfix_exp: vcall_exp •

    $default  reduce using rule 89 (postfix_exp)


State 77

   90 postfix_exp: dot_name_exp •

    $default  reduce using rule 90 (postfix_exp)


State 78

   91 postfix_exp: dot_index_exp •

    $default  reduce using rule 91 (postfix_exp)


State 79

  110 mul_binary_exp: unary_exp •

    $default  reduce using rule 110 (mul_binary_exp)


State 80

  100 unary_exp: unary_op • unary_exp

    "<val_id>"               shift, and go to state 37
    "if"                     shift, and go to state 48
    "fn"                     shift, and go to state 49
    "not"                    shift, and go to state 51
    "42"                     shift, and go to state 52
    "0x2a"                   shift, and go to state 53
    "4.2"                    shift, and go to state 54
    "\"dq-string-literal\""  shift, and go to state 55
    "'sq-string-literal'"    shift, and go to state 56
    "("                      shift, and go to state 29
    "{"                      shift, and go to state 30
    "*"                      shift, and go to state 59
    "+"                      shift, and go to state 60
    "-"                      shift, and go to state 61
    "^"                      shift, and go to state 62

    vid            go to state 149
    floatl         go to state 65
    bracketed_exp  go to state 68
    unit_exp       go to state 32
    paren_exp      go to state 33
    vtupleExpr     go to state 34
    vstructExpr    go to state 35
    primary_exp    go to state 69
    int_expr       go to state 70
    stringls       go to state 71
    if_exp         go to state 72
    chain_exp      go to state 36
    lambda_exp     go to state 73
    postfix_exp    go to state 74
    tcall_exp      go to state 75
    vcall_exp      go to state 76
    dot_name_exp   go to state 77
    dot_index_exp  go to state 78
    unary_exp      go to state 150
    unary_op       go to state 80


State 81

   50 expr: binary_exp •
  132 type_query_exp: binary_exp •

    ")"       reduce using rule 132 (type_query_exp)
    $default  reduce using rule 50 (expr)


State 82

  111 mul_binary_exp: mul_binary_exp • mul_binary_op unary_exp
  114 add_binary_exp: mul_binary_exp •

    "*"  shift, and go to state 151
    "/"  shift, and go to state 152
    "%"  shift, and go to state 153

    $default  reduce using rule 114 (add_binary_exp)

    mul_binary_op  go to state 154


State 83

  115 add_binary_exp: add_binary_exp • add_binary_op mul_binary_exp
  120 cmp_binary_exp: add_binary_exp •

    "+"  shift, and go to state 155
    "-"  shift, and go to state 156

    $default  reduce using rule 120 (cmp_binary_exp)

    add_binary_op  go to state 157


State 84

  121 cmp_binary_exp: cmp_binary_exp • cmp_binary_op add_binary_exp
  124 eq_binary_exp: cmp_binary_exp •

    "<"   shift, and go to state 158
    "<="  shift, and go to state 159
    ">"   shift, and go to state 160
    ">="  shift, and go to state 161

    $default  reduce using rule 124 (eq_binary_exp)

    cmp_binary_op  go to state 162


State 85

  125 eq_binary_exp: eq_binary_exp • eq_binary_op cmp_binary_exp
  126 and_binary_exp: eq_binary_exp •

    "=="  shift, and go to state 163
    "!="  shift, and go to state 164

    $default  reduce using rule 126 (and_binary_exp)

    eq_binary_op  go to state 165


State 86

  127 and_binary_exp: and_binary_exp • "and" eq_binary_exp
  128 xor_binary_exp: and_binary_exp •

    "and"  shift, and go to state 166

    $default  reduce using rule 128 (xor_binary_exp)


State 87

  129 xor_binary_exp: xor_binary_exp • "xor" and_binary_exp
  130 or_binary_exp: xor_binary_exp •

    "xor"  shift, and go to state 167

    $default  reduce using rule 130 (or_binary_exp)


State 88

  106 binary_exp: or_binary_exp •
  131 or_binary_exp: or_binary_exp • "or" xor_binary_exp

    "or"  shift, and go to state 168

    $default  reduce using rule 106 (binary_exp)


State 89

   62 paren_exp: "(" type_query_exp • ")"

    ")"  shift, and go to state 169


State 90

  133 type_query_exp: typespec • type_query_op typespec

    "::"  shift, and go to state 170
    ":<"  shift, and go to state 171
    ">:"  shift, and go to state 172

    type_query_op  go to state 173


State 91

  157 postfix_typespec: primary_typespec •

    $default  reduce using rule 157 (postfix_typespec)


State 92

  146 primary_typespec: paren_typespec •

    $default  reduce using rule 146 (primary_typespec)


State 93

  147 primary_typespec: tuple_typespec •

    $default  reduce using rule 147 (primary_typespec)


State 94

  148 primary_typespec: mod_prefix_tid •

    $default  reduce using rule 148 (primary_typespec)


State 95

  153 mod_prefix_tid: mod_prefix • tid
  155 mod_prefix: mod_prefix • vid "."

    "<val_id>"  shift, and go to state 37
    "<TypeId>"  shift, and go to state 41

    tid  go to state 174
    vid  go to state 175


State 96

  149 primary_typespec: fn_typespec •

    $default  reduce using rule 149 (primary_typespec)


State 97

  160 tcall_typespec: postfix_typespec • "[" targ_cl "]"
  161 dot_typespec: postfix_typespec • "." "<val_id>"
  162 unary_typespec: postfix_typespec •

    "."  shift, and go to state 176
    "["  shift, and go to state 177

    $default  reduce using rule 162 (unary_typespec)


State 98

  158 postfix_typespec: tcall_typespec •

    $default  reduce using rule 158 (postfix_typespec)


State 99

  159 postfix_typespec: dot_typespec •

    $default  reduce using rule 159 (postfix_typespec)


State 100

  137 typespec: unary_typespec •

    $default  reduce using rule 137 (typespec)


State 101

   13 const_stmt: "const" • lpattern_naked "=" expr

    "<val_id>"  shift, and go to state 37
    "("         shift, and go to state 178

    vid             go to state 179
    lpattern_field  go to state 180
    lpattern        go to state 181
    lpattern_naked  go to state 182


State 102

   14 val_stmt: "val" • lpattern_naked "=" expr

    "<val_id>"  shift, and go to state 37
    "("         shift, and go to state 178

    vid             go to state 179
    lpattern_field  go to state 180
    lpattern        go to state 181
    lpattern_naked  go to state 183


State 103

   15 var_stmt: "var" • lpattern_naked "=" expr

    "<val_id>"  shift, and go to state 37
    "("         shift, and go to state 178

    vid             go to state 179
    lpattern_field  go to state 180
    lpattern        go to state 181
    lpattern_naked  go to state 184


State 104

   16 set_stmt: "set" • expr "=" expr

    "<val_id>"               shift, and go to state 37
    "if"                     shift, and go to state 48
    "fn"                     shift, and go to state 49
    "not"                    shift, and go to state 51
    "42"                     shift, and go to state 52
    "0x2a"                   shift, and go to state 53
    "4.2"                    shift, and go to state 54
    "\"dq-string-literal\""  shift, and go to state 55
    "'sq-string-literal'"    shift, and go to state 56
    "("                      shift, and go to state 29
    "{"                      shift, and go to state 30
    "*"                      shift, and go to state 59
    "+"                      shift, and go to state 60
    "-"                      shift, and go to state 61
    "^"                      shift, and go to state 62

    vid             go to state 149
    floatl          go to state 65
    expr            go to state 185
    bracketed_exp   go to state 68
    unit_exp        go to state 32
    paren_exp       go to state 33
    vtupleExpr      go to state 34
    vstructExpr     go to state 35
    primary_exp     go to state 69
    int_expr        go to state 70
    stringls        go to state 71
    if_exp          go to state 72
    chain_exp       go to state 36
    lambda_exp      go to state 73
    postfix_exp     go to state 74
    tcall_exp       go to state 75
    vcall_exp       go to state 76
    dot_name_exp    go to state 77
    dot_index_exp   go to state 78
    unary_exp       go to state 79
    unary_op        go to state 80
    binary_exp      go to state 115
    mul_binary_exp  go to state 82
    add_binary_exp  go to state 83
    cmp_binary_exp  go to state 84
    eq_binary_exp   go to state 85
    and_binary_exp  go to state 86
    xor_binary_exp  go to state 87
    or_binary_exp   go to state 88


State 105

   61 unit_exp: "{" "}" •

    $default  reduce using rule 61 (unit_exp)


State 106

   84 chain_prefix: chain_prefix_stmt • ";"

    ";"  shift, and go to state 186


State 107

    8 chain_prefix_stmt: const_stmt •

    $default  reduce using rule 8 (chain_prefix_stmt)


State 108

    9 chain_prefix_stmt: val_stmt •

    $default  reduce using rule 9 (chain_prefix_stmt)


State 109

   10 chain_prefix_stmt: var_stmt •

    $default  reduce using rule 10 (chain_prefix_stmt)


State 110

   11 chain_prefix_stmt: set_stmt •

    $default  reduce using rule 11 (chain_prefix_stmt)


State 111

   12 chain_prefix_stmt: discard_stmt •

    $default  reduce using rule 12 (chain_prefix_stmt)


State 112

   67 primary_exp: vid •
  175 struct_exp_field: vid • "=" expr

    "="  shift, and go to state 187

    $default  reduce using rule 67 (primary_exp)


State 113

   17 discard_stmt: expr •
   81 chain_exp: "{" expr • "}"

    "}"  shift, and go to state 188

    $default  reduce using rule 17 (discard_stmt)


State 114

   82 chain_exp: "{" chain_prefix • "}"
   83          | "{" chain_prefix • expr "}"
   85 chain_prefix: chain_prefix • chain_prefix_stmt ";"

    "<val_id>"               shift, and go to state 37
    "if"                     shift, and go to state 48
    "const"                  shift, and go to state 101
    "val"                    shift, and go to state 102
    "var"                    shift, and go to state 103
    "set"                    shift, and go to state 104
    "fn"                     shift, and go to state 49
    "not"                    shift, and go to state 51
    "42"                     shift, and go to state 52
    "0x2a"                   shift, and go to state 53
    "4.2"                    shift, and go to state 54
    "\"dq-string-literal\""  shift, and go to state 55
    "'sq-string-literal'"    shift, and go to state 56
    "("                      shift, and go to state 29
    "{"                      shift, and go to state 30
    "}"                      shift, and go to state 189
    "*"                      shift, and go to state 59
    "+"                      shift, and go to state 60
    "-"                      shift, and go to state 61
    "^"                      shift, and go to state 62

    chain_prefix_stmt  go to state 190
    const_stmt         go to state 107
    val_stmt           go to state 108
    var_stmt           go to state 109
    set_stmt           go to state 110
    discard_stmt       go to state 111
    vid                go to state 149
    floatl             go to state 65
    expr               go to state 191
    bracketed_exp      go to state 68
    unit_exp           go to state 32
    paren_exp          go to state 33
    vtupleExpr         go to state 34
    vstructExpr        go to state 35
    primary_exp        go to state 69
    int_expr           go to state 70
    stringls           go to state 71
    if_exp             go to state 72
    chain_exp          go to state 36
    lambda_exp         go to state 73
    postfix_exp        go to state 74
    tcall_exp          go to state 75
    vcall_exp          go to state 76
    dot_name_exp       go to state 77
    dot_index_exp      go to state 78
    unary_exp          go to state 79
    unary_op           go to state 80
    binary_exp         go to state 115
    mul_binary_exp     go to state 82
    add_binary_exp     go to state 83
    cmp_binary_exp     go to state 84
    eq_binary_exp      go to state 85
    and_binary_exp     go to state 86
    xor_binary_exp     go to state 87
    or_binary_exp      go to state 88


State 115

   50 expr: binary_exp •

    $default  reduce using rule 50 (expr)


State 116

  197 struct_exp_field_cl: struct_exp_field •

    $default  reduce using rule 197 (struct_exp_field_cl)


State 117

   65 vstructExpr: "{" struct_exp_field_cl • "}"
  198 struct_exp_field_cl: struct_exp_field_cl • "," struct_exp_field

    ","  shift, and go to state 192
    "}"  shift, and go to state 193


State 118

   43 importStmt: "import" vid "from" • stringl "type" stringl

    "\"dq-string-literal\""  shift, and go to state 194
    "'sq-string-literal'"    shift, and go to state 195

    stringl  go to state 196


State 119

   44 extern_stmt: "extern" vid "from" • expr

    "<val_id>"               shift, and go to state 37
    "if"                     shift, and go to state 48
    "fn"                     shift, and go to state 49
    "not"                    shift, and go to state 51
    "42"                     shift, and go to state 52
    "0x2a"                   shift, and go to state 53
    "4.2"                    shift, and go to state 54
    "\"dq-string-literal\""  shift, and go to state 55
    "'sq-string-literal'"    shift, and go to state 56
    "("                      shift, and go to state 29
    "{"                      shift, and go to state 30
    "*"                      shift, and go to state 59
    "+"                      shift, and go to state 60
    "-"                      shift, and go to state 61
    "^"                      shift, and go to state 62

    vid             go to state 149
    floatl          go to state 65
    expr            go to state 197
    bracketed_exp   go to state 68
    unit_exp        go to state 32
    paren_exp       go to state 33
    vtupleExpr      go to state 34
    vstructExpr     go to state 35
    primary_exp     go to state 69
    int_expr        go to state 70
    stringls        go to state 71
    if_exp          go to state 72
    chain_exp       go to state 36
    lambda_exp      go to state 73
    postfix_exp     go to state 74
    tcall_exp       go to state 75
    vcall_exp       go to state 76
    dot_name_exp    go to state 77
    dot_index_exp   go to state 78
    unary_exp       go to state 79
    unary_op        go to state 80
    binary_exp      go to state 115
    mul_binary_exp  go to state 82
    add_binary_exp  go to state 83
    cmp_binary_exp  go to state 84
    eq_binary_exp   go to state 85
    and_binary_exp  go to state 86
    xor_binary_exp  go to state 87
    or_binary_exp   go to state 88


State 120

  187 vpattern: "(" • vpattern_field_cl ")"
  188         | "(" • ")"

    "<val_id>"  shift, and go to state 37
    "out"       shift, and go to state 198
    "inout"     shift, and go to state 199
    ")"         shift, and go to state 200

    vid                go to state 201
    vpattern_field     go to state 202
    vpattern_field_cl  go to state 203


State 121

  189 tpattern: "[" • tpattern_field_cl "]"

    "<val_id>"  shift, and go to state 37
    "<TypeId>"  shift, and go to state 41

    tid                go to state 204
    vid                go to state 205
    tpattern_field     go to state 206
    tpattern_field_cl  go to state 207


State 122

  190 tpattern: "!" • "[" tpattern_field_cl "]"

    "["  shift, and go to state 208


State 123

   26 fn_stmt: "fn" vid vpattern • "->" typespec "=" bracketed_exp
   28        | "fn" vid vpattern • "=" bracketed_exp

    "->"  shift, and go to state 209
    "="   shift, and go to state 210


State 124

  199 tpattern_seq: tpattern •

    $default  reduce using rule 199 (tpattern_seq)


State 125

   27 fn_stmt: "fn" vid tpattern_seq • vpattern "->" typespec "=" bracketed_exp
   29        | "fn" vid tpattern_seq • vpattern "=" bracketed_exp
  200 tpattern_seq: tpattern_seq • tpattern

    "("  shift, and go to state 120
    "["  shift, and go to state 121
    "!"  shift, and go to state 122

    vpattern  go to state 211
    tpattern  go to state 212


State 126

   30 type_stmt: "type" tid "=" • long_typespec

    "<val_id>"  shift, and go to state 37
    "<TypeId>"  shift, and go to state 41
    "Fn"        shift, and go to state 50
    "("         shift, and go to state 213
    "{"         shift, and go to state 214

    tid               go to state 63
    vid               go to state 215
    primary_typespec  go to state 91
    paren_typespec    go to state 92
    tuple_typespec    go to state 93
    mod_prefix_tid    go to state 94
    mod_prefix        go to state 95
    fn_typespec       go to state 96
    postfix_typespec  go to state 97
    tcall_typespec    go to state 98
    dot_typespec      go to state 99
    unary_typespec    go to state 216
    long_typespec     go to state 217
    struct_typespec   go to state 218


State 127

   31 type_stmt: "type" tid tpattern_seq • "=" long_typespec
  200 tpattern_seq: tpattern_seq • tpattern

    "["  shift, and go to state 121
    "="  shift, and go to state 219
    "!"  shift, and go to state 122

    tpattern  go to state 212


State 128

   33 enum_field_pl: "|" • unprefixed_enum_field_pl

    "<TypeId>"  shift, and go to state 41

    unprefixed_enum_field_pl  go to state 220
    enum_field                go to state 131
    tid                       go to state 132


State 129

   32 enum_stmt: "enum" tid enum_field_pl •

    $default  reduce using rule 32 (enum_stmt)


State 130

   34 enum_field_pl: unprefixed_enum_field_pl •
   36 unprefixed_enum_field_pl: unprefixed_enum_field_pl • "|" enum_field

    "|"  shift, and go to state 221

    $default  reduce using rule 34 (enum_field_pl)


State 131

   35 unprefixed_enum_field_pl: enum_field •

    $default  reduce using rule 35 (unprefixed_enum_field_pl)


State 132

   37 enum_field: tid •
   38           | tid • "(" ")"
   39           | tid • "(" typespec_cl1 ")"

    "("  shift, and go to state 222

    $default  reduce using rule 37 (enum_field)


State 133

   40 typeclass_stmt: "typeclass" tid "<" • tid typespec ">" "=" "{" expr_sl "}"
   41               | "typeclass" tid "<" • tid typespec ">" tpattern_seq "=" "{" expr_sl "}"

    "<TypeId>"  shift, and go to state 41

    tid  go to state 223


State 134

    7 moduleContent: moduleContent moduleContentStmt ";" •

    $default  reduce using rule 7 (moduleContent)


State 135

   79 if_exp: "if" bracketed_exp • "then" bracketed_exp
   80       | "if" bracketed_exp • "then" bracketed_exp "else" primary_exp

    "then"  shift, and go to state 224


State 136

   86 lambda_exp: "fn" vpattern • "=" bracketed_exp

    "="  shift, and go to state 225


State 137

  156 fn_typespec: "Fn" vpattern • primary_typespec

    "<val_id>"  shift, and go to state 37
    "<TypeId>"  shift, and go to state 41
    "Fn"        shift, and go to state 50
    "("         shift, and go to state 213

    tid               go to state 63
    vid               go to state 215
    primary_typespec  go to state 226
    paren_typespec    go to state 92
    tuple_typespec    go to state 93
    mod_prefix_tid    go to state 94
    mod_prefix        go to state 95
    fn_typespec       go to state 96


State 138

  133 type_query_exp: typespec • type_query_op typespec
  140 typespec_cl2: typespec • "," typespec
  150 paren_typespec: "(" typespec • ")"
  151 tuple_typespec: "(" typespec • "," ")"

    ","   shift, and go to state 227
    "::"  shift, and go to state 170
    ")"   shift, and go to state 228
    ":<"  shift, and go to state 171
    ">:"  shift, and go to state 172

    type_query_op  go to state 173


State 139

  141 typespec_cl2: typespec_cl2 • "," typespec
  152 tuple_typespec: "(" typespec_cl2 • ")"

    ","  shift, and go to state 229
    ")"  shift, and go to state 230


State 140

  154 mod_prefix: vid "." •

    $default  reduce using rule 154 (mod_prefix)


State 141

   51 expr_cl2: expr "," • expr
   63 vtupleExpr: "(" expr "," • ")"

    "<val_id>"               shift, and go to state 37
    "if"                     shift, and go to state 48
    "fn"                     shift, and go to state 49
    "not"                    shift, and go to state 51
    "42"                     shift, and go to state 52
    "0x2a"                   shift, and go to state 53
    "4.2"                    shift, and go to state 54
    "\"dq-string-literal\""  shift, and go to state 55
    "'sq-string-literal'"    shift, and go to state 56
    "("                      shift, and go to state 29
    ")"                      shift, and go to state 231
    "{"                      shift, and go to state 30
    "*"                      shift, and go to state 59
    "+"                      shift, and go to state 60
    "-"                      shift, and go to state 61
    "^"                      shift, and go to state 62

    vid             go to state 149
    floatl          go to state 65
    expr            go to state 232
    bracketed_exp   go to state 68
    unit_exp        go to state 32
    paren_exp       go to state 33
    vtupleExpr      go to state 34
    vstructExpr     go to state 35
    primary_exp     go to state 69
    int_expr        go to state 70
    stringls        go to state 71
    if_exp          go to state 72
    chain_exp       go to state 36
    lambda_exp      go to state 73
    postfix_exp     go to state 74
    tcall_exp       go to state 75
    vcall_exp       go to state 76
    dot_name_exp    go to state 77
    dot_index_exp   go to state 78
    unary_exp       go to state 79
    unary_op        go to state 80
    binary_exp      go to state 115
    mul_binary_exp  go to state 82
    add_binary_exp  go to state 83
    cmp_binary_exp  go to state 84
    eq_binary_exp   go to state 85
    and_binary_exp  go to state 86
    xor_binary_exp  go to state 87
    or_binary_exp   go to state 88


State 142

   52 expr_cl2: expr_cl2 "," • expr

    "<val_id>"               shift, and go to state 37
    "if"                     shift, and go to state 48
    "fn"                     shift, and go to state 49
    "not"                    shift, and go to state 51
    "42"                     shift, and go to state 52
    "0x2a"                   shift, and go to state 53
    "4.2"                    shift, and go to state 54
    "\"dq-string-literal\""  shift, and go to state 55
    "'sq-string-literal'"    shift, and go to state 56
    "("                      shift, and go to state 29
    "{"                      shift, and go to state 30
    "*"                      shift, and go to state 59
    "+"                      shift, and go to state 60
    "-"                      shift, and go to state 61
    "^"                      shift, and go to state 62

    vid             go to state 149
    floatl          go to state 65
    expr            go to state 233
    bracketed_exp   go to state 68
    unit_exp        go to state 32
    paren_exp       go to state 33
    vtupleExpr      go to state 34
    vstructExpr     go to state 35
    primary_exp     go to state 69
    int_expr        go to state 70
    stringls        go to state 71
    if_exp          go to state 72
    chain_exp       go to state 36
    lambda_exp      go to state 73
    postfix_exp     go to state 74
    tcall_exp       go to state 75
    vcall_exp       go to state 76
    dot_name_exp    go to state 77
    dot_index_exp   go to state 78
    unary_exp       go to state 79
    unary_op        go to state 80
    binary_exp      go to state 115
    mul_binary_exp  go to state 82
    add_binary_exp  go to state 83
    cmp_binary_exp  go to state 84
    eq_binary_exp   go to state 85
    and_binary_exp  go to state 86
    xor_binary_exp  go to state 87
    or_binary_exp   go to state 88


State 143

   64 vtupleExpr: "(" expr_cl2 ")" •

    $default  reduce using rule 64 (vtupleExpr)


State 144

   78 stringls: stringls "\"dq-string-literal\"" •

    $default  reduce using rule 78 (stringls)


State 145

   77 stringls: stringls "'sq-string-literal'" •

    $default  reduce using rule 77 (stringls)


State 146

   95 dot_name_exp: postfix_exp "." • "<val_id>"
   96             | postfix_exp "." • "<TypeId>"
   97 dot_index_exp: postfix_exp "." • int_expr
   98              | postfix_exp "." • bracketed_exp

    "<val_id>"  shift, and go to state 234
    "<TypeId>"  shift, and go to state 235
    "42"        shift, and go to state 52
    "0x2a"      shift, and go to state 53
    "("         shift, and go to state 29
    "{"         shift, and go to state 30

    bracketed_exp  go to state 236
    unit_exp       go to state 32
    paren_exp      go to state 33
    vtupleExpr     go to state 34
    vstructExpr    go to state 35
    int_expr       go to state 237
    chain_exp      go to state 36


State 147

   93 vcall_exp: postfix_exp "(" • ")"
   94          | postfix_exp "(" • varg_cl ")"

    "<val_id>"               shift, and go to state 37
    "if"                     shift, and go to state 48
    "fn"                     shift, and go to state 49
    "not"                    shift, and go to state 51
    "out"                    shift, and go to state 238
    "inout"                  shift, and go to state 239
    "42"                     shift, and go to state 52
    "0x2a"                   shift, and go to state 53
    "4.2"                    shift, and go to state 54
    "\"dq-string-literal\""  shift, and go to state 55
    "'sq-string-literal'"    shift, and go to state 56
    "("                      shift, and go to state 29
    ")"                      shift, and go to state 240
    "{"                      shift, and go to state 30
    "*"                      shift, and go to state 59
    "+"                      shift, and go to state 60
    "-"                      shift, and go to state 61
    "^"                      shift, and go to state 62

    vid             go to state 149
    floatl          go to state 65
    expr            go to state 241
    bracketed_exp   go to state 68
    unit_exp        go to state 32
    paren_exp       go to state 33
    vtupleExpr      go to state 34
    vstructExpr     go to state 35
    primary_exp     go to state 69
    int_expr        go to state 70
    stringls        go to state 71
    if_exp          go to state 72
    chain_exp       go to state 36
    lambda_exp      go to state 73
    postfix_exp     go to state 74
    tcall_exp       go to state 75
    vcall_exp       go to state 76
    dot_name_exp    go to state 77
    dot_index_exp   go to state 78
    unary_exp       go to state 79
    unary_op        go to state 80
    binary_exp      go to state 115
    mul_binary_exp  go to state 82
    add_binary_exp  go to state 83
    cmp_binary_exp  go to state 84
    eq_binary_exp   go to state 85
    and_binary_exp  go to state 86
    xor_binary_exp  go to state 87
    or_binary_exp   go to state 88
    varg            go to state 242
    varg_cl         go to state 243


State 148

   92 tcall_exp: postfix_exp "[" • targ_cl "]"

    "<val_id>"               shift, and go to state 37
    "<TypeId>"               shift, and go to state 41
    "if"                     shift, and go to state 48
    "fn"                     shift, and go to state 49
    "Fn"                     shift, and go to state 50
    "not"                    shift, and go to state 51
    "42"                     shift, and go to state 52
    "0x2a"                   shift, and go to state 53
    "4.2"                    shift, and go to state 54
    "\"dq-string-literal\""  shift, and go to state 55
    "'sq-string-literal'"    shift, and go to state 56
    "("                      shift, and go to state 57
    "{"                      shift, and go to state 30
    "*"                      shift, and go to state 59
    "+"                      shift, and go to state 60
    "-"                      shift, and go to state 61
    "^"                      shift, and go to state 62

    tid               go to state 63
    vid               go to state 64
    floatl            go to state 65
    expr              go to state 244
    bracketed_exp     go to state 68
    unit_exp          go to state 32
    paren_exp         go to state 33
    vtupleExpr        go to state 34
    vstructExpr       go to state 35
    primary_exp       go to state 69
    int_expr          go to state 70
    stringls          go to state 71
    if_exp            go to state 72
    chain_exp         go to state 36
    lambda_exp        go to state 73
    postfix_exp       go to state 74
    tcall_exp         go to state 75
    vcall_exp         go to state 76
    dot_name_exp      go to state 77
    dot_index_exp     go to state 78
    unary_exp         go to state 79
    unary_op          go to state 80
    binary_exp        go to state 115
    mul_binary_exp    go to state 82
    add_binary_exp    go to state 83
    cmp_binary_exp    go to state 84
    eq_binary_exp     go to state 85
    and_binary_exp    go to state 86
    xor_binary_exp    go to state 87
    or_binary_exp     go to state 88
    typespec          go to state 245
    primary_typespec  go to state 91
    paren_typespec    go to state 92
    tuple_typespec    go to state 93
    mod_prefix_tid    go to state 94
    mod_prefix        go to state 95
    fn_typespec       go to state 96
    postfix_typespec  go to state 97
    tcall_typespec    go to state 98
    dot_typespec      go to state 99
    unary_typespec    go to state 100
    targ              go to state 246
    targ_cl           go to state 247


State 149

   67 primary_exp: vid •

    $default  reduce using rule 67 (primary_exp)


State 150

  100 unary_exp: unary_op unary_exp •

    $default  reduce using rule 100 (unary_exp)


State 151

  107 mul_binary_op: "*" •

    $default  reduce using rule 107 (mul_binary_op)


State 152

  108 mul_binary_op: "/" •

    $default  reduce using rule 108 (mul_binary_op)


State 153

  109 mul_binary_op: "%" •

    $default  reduce using rule 109 (mul_binary_op)


State 154

  111 mul_binary_exp: mul_binary_exp mul_binary_op • unary_exp

    "<val_id>"               shift, and go to state 37
    "if"                     shift, and go to state 48
    "fn"                     shift, and go to state 49
    "not"                    shift, and go to state 51
    "42"                     shift, and go to state 52
    "0x2a"                   shift, and go to state 53
    "4.2"                    shift, and go to state 54
    "\"dq-string-literal\""  shift, and go to state 55
    "'sq-string-literal'"    shift, and go to state 56
    "("                      shift, and go to state 29
    "{"                      shift, and go to state 30
    "*"                      shift, and go to state 59
    "+"                      shift, and go to state 60
    "-"                      shift, and go to state 61
    "^"                      shift, and go to state 62

    vid            go to state 149
    floatl         go to state 65
    bracketed_exp  go to state 68
    unit_exp       go to state 32
    paren_exp      go to state 33
    vtupleExpr     go to state 34
    vstructExpr    go to state 35
    primary_exp    go to state 69
    int_expr       go to state 70
    stringls       go to state 71
    if_exp         go to state 72
    chain_exp      go to state 36
    lambda_exp     go to state 73
    postfix_exp    go to state 74
    tcall_exp      go to state 75
    vcall_exp      go to state 76
    dot_name_exp   go to state 77
    dot_index_exp  go to state 78
    unary_exp      go to state 248
    unary_op       go to state 80


State 155

  112 add_binary_op: "+" •

    $default  reduce using rule 112 (add_binary_op)


State 156

  113 add_binary_op: "-" •

    $default  reduce using rule 113 (add_binary_op)


State 157

  115 add_binary_exp: add_binary_exp add_binary_op • mul_binary_exp

    "<val_id>"               shift, and go to state 37
    "if"                     shift, and go to state 48
    "fn"                     shift, and go to state 49
    "not"                    shift, and go to state 51
    "42"                     shift, and go to state 52
    "0x2a"                   shift, and go to state 53
    "4.2"                    shift, and go to state 54
    "\"dq-string-literal\""  shift, and go to state 55
    "'sq-string-literal'"    shift, and go to state 56
    "("                      shift, and go to state 29
    "{"                      shift, and go to state 30
    "*"                      shift, and go to state 59
    "+"                      shift, and go to state 60
    "-"                      shift, and go to state 61
    "^"                      shift, and go to state 62

    vid             go to state 149
    floatl          go to state 65
    bracketed_exp   go to state 68
    unit_exp        go to state 32
    paren_exp       go to state 33
    vtupleExpr      go to state 34
    vstructExpr     go to state 35
    primary_exp     go to state 69
    int_expr        go to state 70
    stringls        go to state 71
    if_exp          go to state 72
    chain_exp       go to state 36
    lambda_exp      go to state 73
    postfix_exp     go to state 74
    tcall_exp       go to state 75
    vcall_exp       go to state 76
    dot_name_exp    go to state 77
    dot_index_exp   go to state 78
    unary_exp       go to state 79
    unary_op        go to state 80
    mul_binary_exp  go to state 249


State 158

  116 cmp_binary_op: "<" •

    $default  reduce using rule 116 (cmp_binary_op)


State 159

  117 cmp_binary_op: "<=" •

    $default  reduce using rule 117 (cmp_binary_op)


State 160

  118 cmp_binary_op: ">" •

    $default  reduce using rule 118 (cmp_binary_op)


State 161

  119 cmp_binary_op: ">=" •

    $default  reduce using rule 119 (cmp_binary_op)


State 162

  121 cmp_binary_exp: cmp_binary_exp cmp_binary_op • add_binary_exp

    "<val_id>"               shift, and go to state 37
    "if"                     shift, and go to state 48
    "fn"                     shift, and go to state 49
    "not"                    shift, and go to state 51
    "42"                     shift, and go to state 52
    "0x2a"                   shift, and go to state 53
    "4.2"                    shift, and go to state 54
    "\"dq-string-literal\""  shift, and go to state 55
    "'sq-string-literal'"    shift, and go to state 56
    "("                      shift, and go to state 29
    "{"                      shift, and go to state 30
    "*"                      shift, and go to state 59
    "+"                      shift, and go to state 60
    "-"                      shift, and go to state 61
    "^"                      shift, and go to state 62

    vid             go to state 149
    floatl          go to state 65
    bracketed_exp   go to state 68
    unit_exp        go to state 32
    paren_exp       go to state 33
    vtupleExpr      go to state 34
    vstructExpr     go to state 35
    primary_exp     go to state 69
    int_expr        go to state 70
    stringls        go to state 71
    if_exp          go to state 72
    chain_exp       go to state 36
    lambda_exp      go to state 73
    postfix_exp     go to state 74
    tcall_exp       go to state 75
    vcall_exp       go to state 76
    dot_name_exp    go to state 77
    dot_index_exp   go to state 78
    unary_exp       go to state 79
    unary_op        go to state 80
    mul_binary_exp  go to state 82
    add_binary_exp  go to state 250


State 163

  122 eq_binary_op: "==" •

    $default  reduce using rule 122 (eq_binary_op)


State 164

  123 eq_binary_op: "!=" •

    $default  reduce using rule 123 (eq_binary_op)


State 165

  125 eq_binary_exp: eq_binary_exp eq_binary_op • cmp_binary_exp

    "<val_id>"               shift, and go to state 37
    "if"                     shift, and go to state 48
    "fn"                     shift, and go to state 49
    "not"                    shift, and go to state 51
    "42"                     shift, and go to state 52
    "0x2a"                   shift, and go to state 53
    "4.2"                    shift, and go to state 54
    "\"dq-string-literal\""  shift, and go to state 55
    "'sq-string-literal'"    shift, and go to state 56
    "("                      shift, and go to state 29
    "{"                      shift, and go to state 30
    "*"                      shift, and go to state 59
    "+"                      shift, and go to state 60
    "-"                      shift, and go to state 61
    "^"                      shift, and go to state 62

    vid             go to state 149
    floatl          go to state 65
    bracketed_exp   go to state 68
    unit_exp        go to state 32
    paren_exp       go to state 33
    vtupleExpr      go to state 34
    vstructExpr     go to state 35
    primary_exp     go to state 69
    int_expr        go to state 70
    stringls        go to state 71
    if_exp          go to state 72
    chain_exp       go to state 36
    lambda_exp      go to state 73
    postfix_exp     go to state 74
    tcall_exp       go to state 75
    vcall_exp       go to state 76
    dot_name_exp    go to state 77
    dot_index_exp   go to state 78
    unary_exp       go to state 79
    unary_op        go to state 80
    mul_binary_exp  go to state 82
    add_binary_exp  go to state 83
    cmp_binary_exp  go to state 251


State 166

  127 and_binary_exp: and_binary_exp "and" • eq_binary_exp

    "<val_id>"               shift, and go to state 37
    "if"                     shift, and go to state 48
    "fn"                     shift, and go to state 49
    "not"                    shift, and go to state 51
    "42"                     shift, and go to state 52
    "0x2a"                   shift, and go to state 53
    "4.2"                    shift, and go to state 54
    "\"dq-string-literal\""  shift, and go to state 55
    "'sq-string-literal'"    shift, and go to state 56
    "("                      shift, and go to state 29
    "{"                      shift, and go to state 30
    "*"                      shift, and go to state 59
    "+"                      shift, and go to state 60
    "-"                      shift, and go to state 61
    "^"                      shift, and go to state 62

    vid             go to state 149
    floatl          go to state 65
    bracketed_exp   go to state 68
    unit_exp        go to state 32
    paren_exp       go to state 33
    vtupleExpr      go to state 34
    vstructExpr     go to state 35
    primary_exp     go to state 69
    int_expr        go to state 70
    stringls        go to state 71
    if_exp          go to state 72
    chain_exp       go to state 36
    lambda_exp      go to state 73
    postfix_exp     go to state 74
    tcall_exp       go to state 75
    vcall_exp       go to state 76
    dot_name_exp    go to state 77
    dot_index_exp   go to state 78
    unary_exp       go to state 79
    unary_op        go to state 80
    mul_binary_exp  go to state 82
    add_binary_exp  go to state 83
    cmp_binary_exp  go to state 84
    eq_binary_exp   go to state 252


State 167

  129 xor_binary_exp: xor_binary_exp "xor" • and_binary_exp

    "<val_id>"               shift, and go to state 37
    "if"                     shift, and go to state 48
    "fn"                     shift, and go to state 49
    "not"                    shift, and go to state 51
    "42"                     shift, and go to state 52
    "0x2a"                   shift, and go to state 53
    "4.2"                    shift, and go to state 54
    "\"dq-string-literal\""  shift, and go to state 55
    "'sq-string-literal'"    shift, and go to state 56
    "("                      shift, and go to state 29
    "{"                      shift, and go to state 30
    "*"                      shift, and go to state 59
    "+"                      shift, and go to state 60
    "-"                      shift, and go to state 61
    "^"                      shift, and go to state 62

    vid             go to state 149
    floatl          go to state 65
    bracketed_exp   go to state 68
    unit_exp        go to state 32
    paren_exp       go to state 33
    vtupleExpr      go to state 34
    vstructExpr     go to state 35
    primary_exp     go to state 69
    int_expr        go to state 70
    stringls        go to state 71
    if_exp          go to state 72
    chain_exp       go to state 36
    lambda_exp      go to state 73
    postfix_exp     go to state 74
    tcall_exp       go to state 75
    vcall_exp       go to state 76
    dot_name_exp    go to state 77
    dot_index_exp   go to state 78
    unary_exp       go to state 79
    unary_op        go to state 80
    mul_binary_exp  go to state 82
    add_binary_exp  go to state 83
    cmp_binary_exp  go to state 84
    eq_binary_exp   go to state 85
    and_binary_exp  go to state 253


State 168

  131 or_binary_exp: or_binary_exp "or" • xor_binary_exp

    "<val_id>"               shift, and go to state 37
    "if"                     shift, and go to state 48
    "fn"                     shift, and go to state 49
    "not"                    shift, and go to state 51
    "42"                     shift, and go to state 52
    "0x2a"                   shift, and go to state 53
    "4.2"                    shift, and go to state 54
    "\"dq-string-literal\""  shift, and go to state 55
    "'sq-string-literal'"    shift, and go to state 56
    "("                      shift, and go to state 29
    "{"                      shift, and go to state 30
    "*"                      shift, and go to state 59
    "+"                      shift, and go to state 60
    "-"                      shift, and go to state 61
    "^"                      shift, and go to state 62

    vid             go to state 149
    floatl          go to state 65
    bracketed_exp   go to state 68
    unit_exp        go to state 32
    paren_exp       go to state 33
    vtupleExpr      go to state 34
    vstructExpr     go to state 35
    primary_exp     go to state 69
    int_expr        go to state 70
    stringls        go to state 71
    if_exp          go to state 72
    chain_exp       go to state 36
    lambda_exp      go to state 73
    postfix_exp     go to state 74
    tcall_exp       go to state 75
    vcall_exp       go to state 76
    dot_name_exp    go to state 77
    dot_index_exp   go to state 78
    unary_exp       go to state 79
    unary_op        go to state 80
    mul_binary_exp  go to state 82
    add_binary_exp  go to state 83
    cmp_binary_exp  go to state 84
    eq_binary_exp   go to state 85
    and_binary_exp  go to state 86
    xor_binary_exp  go to state 254


State 169

   62 paren_exp: "(" type_query_exp ")" •

    $default  reduce using rule 62 (paren_exp)


State 170

  136 type_query_op: "::" •

    $default  reduce using rule 136 (type_query_op)


State 171

  134 type_query_op: ":<" •

    $default  reduce using rule 134 (type_query_op)


State 172

  135 type_query_op: ">:" •

    $default  reduce using rule 135 (type_query_op)


State 173

  133 type_query_exp: typespec type_query_op • typespec

    "<val_id>"  shift, and go to state 37
    "<TypeId>"  shift, and go to state 41
    "Fn"        shift, and go to state 50
    "("         shift, and go to state 213

    tid               go to state 63
    vid               go to state 215
    typespec          go to state 255
    primary_typespec  go to state 91
    paren_typespec    go to state 92
    tuple_typespec    go to state 93
    mod_prefix_tid    go to state 94
    mod_prefix        go to state 95
    fn_typespec       go to state 96
    postfix_typespec  go to state 97
    tcall_typespec    go to state 98
    dot_typespec      go to state 99
    unary_typespec    go to state 100


State 174

  153 mod_prefix_tid: mod_prefix tid •

    $default  reduce using rule 153 (mod_prefix_tid)


State 175

  155 mod_prefix: mod_prefix vid • "."

    "."  shift, and go to state 256


State 176

  161 dot_typespec: postfix_typespec "." • "<val_id>"

    "<val_id>"  shift, and go to state 257


State 177

  160 tcall_typespec: postfix_typespec "[" • targ_cl "]"

    "<val_id>"               shift, and go to state 37
    "<TypeId>"               shift, and go to state 41
    "if"                     shift, and go to state 48
    "fn"                     shift, and go to state 49
    "Fn"                     shift, and go to state 50
    "not"                    shift, and go to state 51
    "42"                     shift, and go to state 52
    "0x2a"                   shift, and go to state 53
    "4.2"                    shift, and go to state 54
    "\"dq-string-literal\""  shift, and go to state 55
    "'sq-string-literal'"    shift, and go to state 56
    "("                      shift, and go to state 57
    "{"                      shift, and go to state 30
    "*"                      shift, and go to state 59
    "+"                      shift, and go to state 60
    "-"                      shift, and go to state 61
    "^"                      shift, and go to state 62

    tid               go to state 63
    vid               go to state 64
    floatl            go to state 65
    expr              go to state 244
    bracketed_exp     go to state 68
    unit_exp          go to state 32
    paren_exp         go to state 33
    vtupleExpr        go to state 34
    vstructExpr       go to state 35
    primary_exp       go to state 69
    int_expr          go to state 70
    stringls          go to state 71
    if_exp            go to state 72
    chain_exp         go to state 36
    lambda_exp        go to state 73
    postfix_exp       go to state 74
    tcall_exp         go to state 75
    vcall_exp         go to state 76
    dot_name_exp      go to state 77
    dot_index_exp     go to state 78
    unary_exp         go to state 79
    unary_op          go to state 80
    binary_exp        go to state 115
    mul_binary_exp    go to state 82
    add_binary_exp    go to state 83
    cmp_binary_exp    go to state 84
    eq_binary_exp     go to state 85
    and_binary_exp    go to state 86
    xor_binary_exp    go to state 87
    or_binary_exp     go to state 88
    typespec          go to state 245
    primary_typespec  go to state 91
    paren_typespec    go to state 92
    tuple_typespec    go to state 93
    mod_prefix_tid    go to state 94
    mod_prefix        go to state 95
    fn_typespec       go to state 96
    postfix_typespec  go to state 97
    tcall_typespec    go to state 98
    dot_typespec      go to state 99
    unary_typespec    go to state 100
    targ              go to state 246
    targ_cl           go to state 258


State 178

  183 lpattern: "(" • lpattern_field_cl ")"
  184         | "(" • ")"

    "<val_id>"  shift, and go to state 37
    ")"         shift, and go to state 259

    vid                go to state 179
    lpattern_field     go to state 260
    lpattern_field_cl  go to state 261


State 179

  179 lpattern_field: vid • typespec
  180               | vid •

    "<val_id>"  shift, and go to state 37
    "<TypeId>"  shift, and go to state 41
    "Fn"        shift, and go to state 50
    "("         shift, and go to state 213

    $default  reduce using rule 180 (lpattern_field)

    tid               go to state 63
    vid               go to state 215
    typespec          go to state 262
    primary_typespec  go to state 91
    paren_typespec    go to state 92
    tuple_typespec    go to state 93
    mod_prefix_tid    go to state 94
    mod_prefix        go to state 95
    fn_typespec       go to state 96
    postfix_typespec  go to state 97
    tcall_typespec    go to state 98
    dot_typespec      go to state 99
    unary_typespec    go to state 100


State 180

  185 lpattern_naked: lpattern_field •

    $default  reduce using rule 185 (lpattern_naked)


State 181

  186 lpattern_naked: lpattern •

    $default  reduce using rule 186 (lpattern_naked)


State 182

   13 const_stmt: "const" lpattern_naked • "=" expr

    "="  shift, and go to state 263


State 183

   14 val_stmt: "val" lpattern_naked • "=" expr

    "="  shift, and go to state 264


State 184

   15 var_stmt: "var" lpattern_naked • "=" expr

    "="  shift, and go to state 265


State 185

   16 set_stmt: "set" expr • "=" expr

    "="  shift, and go to state 266


State 186

   84 chain_prefix: chain_prefix_stmt ";" •

    $default  reduce using rule 84 (chain_prefix)


State 187

  175 struct_exp_field: vid "=" • expr

    "<val_id>"               shift, and go to state 37
    "if"                     shift, and go to state 48
    "fn"                     shift, and go to state 49
    "not"                    shift, and go to state 51
    "42"                     shift, and go to state 52
    "0x2a"                   shift, and go to state 53
    "4.2"                    shift, and go to state 54
    "\"dq-string-literal\""  shift, and go to state 55
    "'sq-string-literal'"    shift, and go to state 56
    "("                      shift, and go to state 29
    "{"                      shift, and go to state 30
    "*"                      shift, and go to state 59
    "+"                      shift, and go to state 60
    "-"                      shift, and go to state 61
    "^"                      shift, and go to state 62

    vid             go to state 149
    floatl          go to state 65
    expr            go to state 267
    bracketed_exp   go to state 68
    unit_exp        go to state 32
    paren_exp       go to state 33
    vtupleExpr      go to state 34
    vstructExpr     go to state 35
    primary_exp     go to state 69
    int_expr        go to state 70
    stringls        go to state 71
    if_exp          go to state 72
    chain_exp       go to state 36
    lambda_exp      go to state 73
    postfix_exp     go to state 74
    tcall_exp       go to state 75
    vcall_exp       go to state 76
    dot_name_exp    go to state 77
    dot_index_exp   go to state 78
    unary_exp       go to state 79
    unary_op        go to state 80
    binary_exp      go to state 115
    mul_binary_exp  go to state 82
    add_binary_exp  go to state 83
    cmp_binary_exp  go to state 84
    eq_binary_exp   go to state 85
    and_binary_exp  go to state 86
    xor_binary_exp  go to state 87
    or_binary_exp   go to state 88


State 188

   81 chain_exp: "{" expr "}" •

    $default  reduce using rule 81 (chain_exp)


State 189

   82 chain_exp: "{" chain_prefix "}" •

    $default  reduce using rule 82 (chain_exp)


State 190

   85 chain_prefix: chain_prefix chain_prefix_stmt • ";"

    ";"  shift, and go to state 268


State 191

   17 discard_stmt: expr •
   83 chain_exp: "{" chain_prefix expr • "}"

    "}"  shift, and go to state 269

    $default  reduce using rule 17 (discard_stmt)


State 192

  198 struct_exp_field_cl: struct_exp_field_cl "," • struct_exp_field

    "<val_id>"  shift, and go to state 37

    vid               go to state 270
    struct_exp_field  go to state 271


State 193

   65 vstructExpr: "{" struct_exp_field_cl "}" •

    $default  reduce using rule 65 (vstructExpr)


State 194

   49 stringl: "\"dq-string-literal\"" •

    $default  reduce using rule 49 (stringl)


State 195

   48 stringl: "'sq-string-literal'" •

    $default  reduce using rule 48 (stringl)


State 196

   43 importStmt: "import" vid "from" stringl • "type" stringl

    "type"  shift, and go to state 272


State 197

   44 extern_stmt: "extern" vid "from" expr •

    $default  reduce using rule 44 (extern_stmt)


State 198

  177 vpattern_field: "out" • vid typespec

    "<val_id>"  shift, and go to state 37

    vid  go to state 273


State 199

  178 vpattern_field: "inout" • vid typespec

    "<val_id>"  shift, and go to state 37

    vid  go to state 274


State 200

  188 vpattern: "(" ")" •

    $default  reduce using rule 188 (vpattern)


State 201

  176 vpattern_field: vid • typespec

    "<val_id>"  shift, and go to state 37
    "<TypeId>"  shift, and go to state 41
    "Fn"        shift, and go to state 50
    "("         shift, and go to state 213

    tid               go to state 63
    vid               go to state 215
    typespec          go to state 275
    primary_typespec  go to state 91
    paren_typespec    go to state 92
    tuple_typespec    go to state 93
    mod_prefix_tid    go to state 94
    mod_prefix        go to state 95
    fn_typespec       go to state 96
    postfix_typespec  go to state 97
    tcall_typespec    go to state 98
    dot_typespec      go to state 99
    unary_typespec    go to state 100


State 202

  191 vpattern_field_cl: vpattern_field •

    $default  reduce using rule 191 (vpattern_field_cl)


State 203

  187 vpattern: "(" vpattern_field_cl • ")"
  192 vpattern_field_cl: vpattern_field_cl • "," vpattern_field

    ","  shift, and go to state 276
    ")"  shift, and go to state 277


State 204

  182 tpattern_field: tid • typespec

    "<val_id>"  shift, and go to state 37
    "<TypeId>"  shift, and go to state 41
    "Fn"        shift, and go to state 50
    "("         shift, and go to state 213

    tid               go to state 63
    vid               go to state 215
    typespec          go to state 278
    primary_typespec  go to state 91
    paren_typespec    go to state 92
    tuple_typespec    go to state 93
    mod_prefix_tid    go to state 94
    mod_prefix        go to state 95
    fn_typespec       go to state 96
    postfix_typespec  go to state 97
    tcall_typespec    go to state 98
    dot_typespec      go to state 99
    unary_typespec    go to state 100


State 205

  181 tpattern_field: vid • typespec

    "<val_id>"  shift, and go to state 37
    "<TypeId>"  shift, and go to state 41
    "Fn"        shift, and go to state 50
    "("         shift, and go to state 213

    tid               go to state 63
    vid               go to state 215
    typespec          go to state 279
    primary_typespec  go to state 91
    paren_typespec    go to state 92
    tuple_typespec    go to state 93
    mod_prefix_tid    go to state 94
    mod_prefix        go to state 95
    fn_typespec       go to state 96
    postfix_typespec  go to state 97
    tcall_typespec    go to state 98
    dot_typespec      go to state 99
    unary_typespec    go to state 100


State 206

  195 tpattern_field_cl: tpattern_field •

    $default  reduce using rule 195 (tpattern_field_cl)


State 207

  189 tpattern: "[" tpattern_field_cl • "]"
  196 tpattern_field_cl: tpattern_field_cl • "," tpattern_field

    ","  shift, and go to state 280
    "]"  shift, and go to state 281


State 208

  190 tpattern: "!" "[" • tpattern_field_cl "]"

    "<val_id>"  shift, and go to state 37
    "<TypeId>"  shift, and go to state 41

    tid                go to state 204
    vid                go to state 205
    tpattern_field     go to state 206
    tpattern_field_cl  go to state 282


State 209

   26 fn_stmt: "fn" vid vpattern "->" • typespec "=" bracketed_exp

    "<val_id>"  shift, and go to state 37
    "<TypeId>"  shift, and go to state 41
    "Fn"        shift, and go to state 50
    "("         shift, and go to state 213

    tid               go to state 63
    vid               go to state 215
    typespec          go to state 283
    primary_typespec  go to state 91
    paren_typespec    go to state 92
    tuple_typespec    go to state 93
    mod_prefix_tid    go to state 94
    mod_prefix        go to state 95
    fn_typespec       go to state 96
    postfix_typespec  go to state 97
    tcall_typespec    go to state 98
    dot_typespec      go to state 99
    unary_typespec    go to state 100


State 210

   28 fn_stmt: "fn" vid vpattern "=" • bracketed_exp

    "("  shift, and go to state 29
    "{"  shift, and go to state 30

    bracketed_exp  go to state 284
    unit_exp       go to state 32
    paren_exp      go to state 33
    vtupleExpr     go to state 34
    vstructExpr    go to state 35
    chain_exp      go to state 36


State 211

   27 fn_stmt: "fn" vid tpattern_seq vpattern • "->" typespec "=" bracketed_exp
   29        | "fn" vid tpattern_seq vpattern • "=" bracketed_exp

    "->"  shift, and go to state 285
    "="   shift, and go to state 286


State 212

  200 tpattern_seq: tpattern_seq tpattern •

    $default  reduce using rule 200 (tpattern_seq)


State 213

  150 paren_typespec: "(" • typespec ")"
  151 tuple_typespec: "(" • typespec "," ")"
  152               | "(" • typespec_cl2 ")"

    "<val_id>"  shift, and go to state 37
    "<TypeId>"  shift, and go to state 41
    "Fn"        shift, and go to state 50
    "("         shift, and go to state 213

    tid               go to state 63
    vid               go to state 215
    typespec          go to state 287
    typespec_cl2      go to state 139
    primary_typespec  go to state 91
    paren_typespec    go to state 92
    tuple_typespec    go to state 93
    mod_prefix_tid    go to state 94
    mod_prefix        go to state 95
    fn_typespec       go to state 96
    postfix_typespec  go to state 97
    tcall_typespec    go to state 98
    dot_typespec      go to state 99
    unary_typespec    go to state 100


State 214

  165 struct_typespec: "{" • struct_typespec_field_cl "}"

    "<val_id>"  shift, and go to state 37

    vid                       go to state 288
    struct_typespec_field     go to state 289
    struct_typespec_field_cl  go to state 290


State 215

  154 mod_prefix: vid • "."

    "."  shift, and go to state 140


State 216

  163 long_typespec: unary_typespec •

    $default  reduce using rule 163 (long_typespec)


State 217

   30 type_stmt: "type" tid "=" long_typespec •

    $default  reduce using rule 30 (type_stmt)


State 218

  164 long_typespec: struct_typespec •

    $default  reduce using rule 164 (long_typespec)


State 219

   31 type_stmt: "type" tid tpattern_seq "=" • long_typespec

    "<val_id>"  shift, and go to state 37
    "<TypeId>"  shift, and go to state 41
    "Fn"        shift, and go to state 50
    "("         shift, and go to state 213
    "{"         shift, and go to state 214

    tid               go to state 63
    vid               go to state 215
    primary_typespec  go to state 91
    paren_typespec    go to state 92
    tuple_typespec    go to state 93
    mod_prefix_tid    go to state 94
    mod_prefix        go to state 95
    fn_typespec       go to state 96
    postfix_typespec  go to state 97
    tcall_typespec    go to state 98
    dot_typespec      go to state 99
    unary_typespec    go to state 216
    long_typespec     go to state 291
    struct_typespec   go to state 218


State 220

   33 enum_field_pl: "|" unprefixed_enum_field_pl •
   36 unprefixed_enum_field_pl: unprefixed_enum_field_pl • "|" enum_field

    "|"  shift, and go to state 221

    $default  reduce using rule 33 (enum_field_pl)


State 221

   36 unprefixed_enum_field_pl: unprefixed_enum_field_pl "|" • enum_field

    "<TypeId>"  shift, and go to state 41

    enum_field  go to state 292
    tid         go to state 132


State 222

   38 enum_field: tid "(" • ")"
   39           | tid "(" • typespec_cl1 ")"

    "<val_id>"  shift, and go to state 37
    "<TypeId>"  shift, and go to state 41
    "Fn"        shift, and go to state 50
    "("         shift, and go to state 213
    ")"         shift, and go to state 293

    tid               go to state 63
    vid               go to state 215
    typespec          go to state 294
    typespec_cl1      go to state 295
    primary_typespec  go to state 91
    paren_typespec    go to state 92
    tuple_typespec    go to state 93
    mod_prefix_tid    go to state 94
    mod_prefix        go to state 95
    fn_typespec       go to state 96
    postfix_typespec  go to state 97
    tcall_typespec    go to state 98
    dot_typespec      go to state 99
    unary_typespec    go to state 100


State 223

   40 typeclass_stmt: "typeclass" tid "<" tid • typespec ">" "=" "{" expr_sl "}"
   41               | "typeclass" tid "<" tid • typespec ">" tpattern_seq "=" "{" expr_sl "}"

    "<val_id>"  shift, and go to state 37
    "<TypeId>"  shift, and go to state 41
    "Fn"        shift, and go to state 50
    "("         shift, and go to state 213

    tid               go to state 63
    vid               go to state 215
    typespec          go to state 296
    primary_typespec  go to state 91
    paren_typespec    go to state 92
    tuple_typespec    go to state 93
    mod_prefix_tid    go to state 94
    mod_prefix        go to state 95
    fn_typespec       go to state 96
    postfix_typespec  go to state 97
    tcall_typespec    go to state 98
    dot_typespec      go to state 99
    unary_typespec    go to state 100


State 224

   79 if_exp: "if" bracketed_exp "then" • bracketed_exp
   80       | "if" bracketed_exp "then" • bracketed_exp "else" primary_exp

    "("  shift, and go to state 29
    "{"  shift, and go to state 30

    bracketed_exp  go to state 297
    unit_exp       go to state 32
    paren_exp      go to state 33
    vtupleExpr     go to state 34
    vstructExpr    go to state 35
    chain_exp      go to state 36


State 225

   86 lambda_exp: "fn" vpattern "=" • bracketed_exp

    "("  shift, and go to state 29
    "{"  shift, and go to state 30

    bracketed_exp  go to state 298
    unit_exp       go to state 32
    paren_exp      go to state 33
    vtupleExpr     go to state 34
    vstructExpr    go to state 35
    chain_exp      go to state 36


State 226

  156 fn_typespec: "Fn" vpattern primary_typespec •

    $default  reduce using rule 156 (fn_typespec)


State 227

  140 typespec_cl2: typespec "," • typespec
  151 tuple_typespec: "(" typespec "," • ")"

    "<val_id>"  shift, and go to state 37
    "<TypeId>"  shift, and go to state 41
    "Fn"        shift, and go to state 50
    "("         shift, and go to state 213
    ")"         shift, and go to state 299

    tid               go to state 63
    vid               go to state 215
    typespec          go to state 300
    primary_typespec  go to state 91
    paren_typespec    go to state 92
    tuple_typespec    go to state 93
    mod_prefix_tid    go to state 94
    mod_prefix        go to state 95
    fn_typespec       go to state 96
    postfix_typespec  go to state 97
    tcall_typespec    go to state 98
    dot_typespec      go to state 99
    unary_typespec    go to state 100


State 228

  150 paren_typespec: "(" typespec ")" •

    $default  reduce using rule 150 (paren_typespec)


State 229

  141 typespec_cl2: typespec_cl2 "," • typespec

    "<val_id>"  shift, and go to state 37
    "<TypeId>"  shift, and go to state 41
    "Fn"        shift, and go to state 50
    "("         shift, and go to state 213

    tid               go to state 63
    vid               go to state 215
    typespec          go to state 301
    primary_typespec  go to state 91
    paren_typespec    go to state 92
    tuple_typespec    go to state 93
    mod_prefix_tid    go to state 94
    mod_prefix        go to state 95
    fn_typespec       go to state 96
    postfix_typespec  go to state 97
    tcall_typespec    go to state 98
    dot_typespec      go to state 99
    unary_typespec    go to state 100


State 230

  152 tuple_typespec: "(" typespec_cl2 ")" •

    $default  reduce using rule 152 (tuple_typespec)


State 231

   63 vtupleExpr: "(" expr "," ")" •

    $default  reduce using rule 63 (vtupleExpr)


State 232

   51 expr_cl2: expr "," expr •

    $default  reduce using rule 51 (expr_cl2)


State 233

   52 expr_cl2: expr_cl2 "," expr •

    $default  reduce using rule 52 (expr_cl2)


State 234

   95 dot_name_exp: postfix_exp "." "<val_id>" •

    $default  reduce using rule 95 (dot_name_exp)


State 235

   96 dot_name_exp: postfix_exp "." "<TypeId>" •

    $default  reduce using rule 96 (dot_name_exp)


State 236

   98 dot_index_exp: postfix_exp "." bracketed_exp •

    $default  reduce using rule 98 (dot_index_exp)


State 237

   97 dot_index_exp: postfix_exp "." int_expr •

    $default  reduce using rule 97 (dot_index_exp)


State 238

  171 varg: "out" • expr

    "<val_id>"               shift, and go to state 37
    "if"                     shift, and go to state 48
    "fn"                     shift, and go to state 49
    "not"                    shift, and go to state 51
    "42"                     shift, and go to state 52
    "0x2a"                   shift, and go to state 53
    "4.2"                    shift, and go to state 54
    "\"dq-string-literal\""  shift, and go to state 55
    "'sq-string-literal'"    shift, and go to state 56
    "("                      shift, and go to state 29
    "{"                      shift, and go to state 30
    "*"                      shift, and go to state 59
    "+"                      shift, and go to state 60
    "-"                      shift, and go to state 61
    "^"                      shift, and go to state 62

    vid             go to state 149
    floatl          go to state 65
    expr            go to state 302
    bracketed_exp   go to state 68
    unit_exp        go to state 32
    paren_exp       go to state 33
    vtupleExpr      go to state 34
    vstructExpr     go to state 35
    primary_exp     go to state 69
    int_expr        go to state 70
    stringls        go to state 71
    if_exp          go to state 72
    chain_exp       go to state 36
    lambda_exp      go to state 73
    postfix_exp     go to state 74
    tcall_exp       go to state 75
    vcall_exp       go to state 76
    dot_name_exp    go to state 77
    dot_index_exp   go to state 78
    unary_exp       go to state 79
    unary_op        go to state 80
    binary_exp      go to state 115
    mul_binary_exp  go to state 82
    add_binary_exp  go to state 83
    cmp_binary_exp  go to state 84
    eq_binary_exp   go to state 85
    and_binary_exp  go to state 86
    xor_binary_exp  go to state 87
    or_binary_exp   go to state 88


State 239

  172 varg: "inout" • expr

    "<val_id>"               shift, and go to state 37
    "if"                     shift, and go to state 48
    "fn"                     shift, and go to state 49
    "not"                    shift, and go to state 51
    "42"                     shift, and go to state 52
    "0x2a"                   shift, and go to state 53
    "4.2"                    shift, and go to state 54
    "\"dq-string-literal\""  shift, and go to state 55
    "'sq-string-literal'"    shift, and go to state 56
    "("                      shift, and go to state 29
    "{"                      shift, and go to state 30
    "*"                      shift, and go to state 59
    "+"                      shift, and go to state 60
    "-"                      shift, and go to state 61
    "^"                      shift, and go to state 62

    vid             go to state 149
    floatl          go to state 65
    expr            go to state 303
    bracketed_exp   go to state 68
    unit_exp        go to state 32
    paren_exp       go to state 33
    vtupleExpr      go to state 34
    vstructExpr     go to state 35
    primary_exp     go to state 69
    int_expr        go to state 70
    stringls        go to state 71
    if_exp          go to state 72
    chain_exp       go to state 36
    lambda_exp      go to state 73
    postfix_exp     go to state 74
    tcall_exp       go to state 75
    vcall_exp       go to state 76
    dot_name_exp    go to state 77
    dot_index_exp   go to state 78
    unary_exp       go to state 79
    unary_op        go to state 80
    binary_exp      go to state 115
    mul_binary_exp  go to state 82
    add_binary_exp  go to state 83
    cmp_binary_exp  go to state 84
    eq_binary_exp   go to state 85
    and_binary_exp  go to state 86
    xor_binary_exp  go to state 87
    or_binary_exp   go to state 88


State 240

   93 vcall_exp: postfix_exp "(" ")" •

    $default  reduce using rule 93 (vcall_exp)


State 241

  170 varg: expr •

    $default  reduce using rule 170 (varg)


State 242

  173 varg_cl: varg •

    $default  reduce using rule 173 (varg_cl)


State 243

   94 vcall_exp: postfix_exp "(" varg_cl • ")"
  174 varg_cl: varg_cl • "," varg

    ","  shift, and go to state 304
    ")"  shift, and go to state 305


State 244

  167 targ: expr •

    $default  reduce using rule 167 (targ)


State 245

  166 targ: typespec •

    $default  reduce using rule 166 (targ)


State 246

  168 targ_cl: targ •

    $default  reduce using rule 168 (targ_cl)


State 247

   92 tcall_exp: postfix_exp "[" targ_cl • "]"
  169 targ_cl: targ_cl • "," targ

    ","  shift, and go to state 306
    "]"  shift, and go to state 307


State 248

  111 mul_binary_exp: mul_binary_exp mul_binary_op unary_exp •

    $default  reduce using rule 111 (mul_binary_exp)


State 249

  111 mul_binary_exp: mul_binary_exp • mul_binary_op unary_exp
  115 add_binary_exp: add_binary_exp add_binary_op mul_binary_exp •

    "*"  shift, and go to state 151
    "/"  shift, and go to state 152
    "%"  shift, and go to state 153

    $default  reduce using rule 115 (add_binary_exp)

    mul_binary_op  go to state 154


State 250

  115 add_binary_exp: add_binary_exp • add_binary_op mul_binary_exp
  121 cmp_binary_exp: cmp_binary_exp cmp_binary_op add_binary_exp •

    "+"  shift, and go to state 155
    "-"  shift, and go to state 156

    $default  reduce using rule 121 (cmp_binary_exp)

    add_binary_op  go to state 157


State 251

  121 cmp_binary_exp: cmp_binary_exp • cmp_binary_op add_binary_exp
  125 eq_binary_exp: eq_binary_exp eq_binary_op cmp_binary_exp •

    "<"   shift, and go to state 158
    "<="  shift, and go to state 159
    ">"   shift, and go to state 160
    ">="  shift, and go to state 161

    $default  reduce using rule 125 (eq_binary_exp)

    cmp_binary_op  go to state 162


State 252

  125 eq_binary_exp: eq_binary_exp • eq_binary_op cmp_binary_exp
  127 and_binary_exp: and_binary_exp "and" eq_binary_exp •

    "=="  shift, and go to state 163
    "!="  shift, and go to state 164

    $default  reduce using rule 127 (and_binary_exp)

    eq_binary_op  go to state 165


State 253

  127 and_binary_exp: and_binary_exp • "and" eq_binary_exp
  129 xor_binary_exp: xor_binary_exp "xor" and_binary_exp •

    "and"  shift, and go to state 166

    $default  reduce using rule 129 (xor_binary_exp)


State 254

  129 xor_binary_exp: xor_binary_exp • "xor" and_binary_exp
  131 or_binary_exp: or_binary_exp "or" xor_binary_exp •

    "xor"  shift, and go to state 167

    $default  reduce using rule 131 (or_binary_exp)


State 255

  133 type_query_exp: typespec type_query_op typespec •

    $default  reduce using rule 133 (type_query_exp)


State 256

  155 mod_prefix: mod_prefix vid "." •

    $default  reduce using rule 155 (mod_prefix)


State 257

  161 dot_typespec: postfix_typespec "." "<val_id>" •

    $default  reduce using rule 161 (dot_typespec)


State 258

  160 tcall_typespec: postfix_typespec "[" targ_cl • "]"
  169 targ_cl: targ_cl • "," targ

    ","  shift, and go to state 306
    "]"  shift, and go to state 308


State 259

  184 lpattern: "(" ")" •

    $default  reduce using rule 184 (lpattern)


State 260

  193 lpattern_field_cl: lpattern_field •

    $default  reduce using rule 193 (lpattern_field_cl)


State 261

  183 lpattern: "(" lpattern_field_cl • ")"
  194 lpattern_field_cl: lpattern_field_cl • "," lpattern_field

    ","  shift, and go to state 309
    ")"  shift, and go to state 310


State 262

  179 lpattern_field: vid typespec •

    $default  reduce using rule 179 (lpattern_field)


State 263

   13 const_stmt: "const" lpattern_naked "=" • expr

    "<val_id>"               shift, and go to state 37
    "if"                     shift, and go to state 48
    "fn"                     shift, and go to state 49
    "not"                    shift, and go to state 51
    "42"                     shift, and go to state 52
    "0x2a"                   shift, and go to state 53
    "4.2"                    shift, and go to state 54
    "\"dq-string-literal\""  shift, and go to state 55
    "'sq-string-literal'"    shift, and go to state 56
    "("                      shift, and go to state 29
    "{"                      shift, and go to state 30
    "*"                      shift, and go to state 59
    "+"                      shift, and go to state 60
    "-"                      shift, and go to state 61
    "^"                      shift, and go to state 62

    vid             go to state 149
    floatl          go to state 65
    expr            go to state 311
    bracketed_exp   go to state 68
    unit_exp        go to state 32
    paren_exp       go to state 33
    vtupleExpr      go to state 34
    vstructExpr     go to state 35
    primary_exp     go to state 69
    int_expr        go to state 70
    stringls        go to state 71
    if_exp          go to state 72
    chain_exp       go to state 36
    lambda_exp      go to state 73
    postfix_exp     go to state 74
    tcall_exp       go to state 75
    vcall_exp       go to state 76
    dot_name_exp    go to state 77
    dot_index_exp   go to state 78
    unary_exp       go to state 79
    unary_op        go to state 80
    binary_exp      go to state 115
    mul_binary_exp  go to state 82
    add_binary_exp  go to state 83
    cmp_binary_exp  go to state 84
    eq_binary_exp   go to state 85
    and_binary_exp  go to state 86
    xor_binary_exp  go to state 87
    or_binary_exp   go to state 88


State 264

   14 val_stmt: "val" lpattern_naked "=" • expr

    "<val_id>"               shift, and go to state 37
    "if"                     shift, and go to state 48
    "fn"                     shift, and go to state 49
    "not"                    shift, and go to state 51
    "42"                     shift, and go to state 52
    "0x2a"                   shift, and go to state 53
    "4.2"                    shift, and go to state 54
    "\"dq-string-literal\""  shift, and go to state 55
    "'sq-string-literal'"    shift, and go to state 56
    "("                      shift, and go to state 29
    "{"                      shift, and go to state 30
    "*"                      shift, and go to state 59
    "+"                      shift, and go to state 60
    "-"                      shift, and go to state 61
    "^"                      shift, and go to state 62

    vid             go to state 149
    floatl          go to state 65
    expr            go to state 312
    bracketed_exp   go to state 68
    unit_exp        go to state 32
    paren_exp       go to state 33
    vtupleExpr      go to state 34
    vstructExpr     go to state 35
    primary_exp     go to state 69
    int_expr        go to state 70
    stringls        go to state 71
    if_exp          go to state 72
    chain_exp       go to state 36
    lambda_exp      go to state 73
    postfix_exp     go to state 74
    tcall_exp       go to state 75
    vcall_exp       go to state 76
    dot_name_exp    go to state 77
    dot_index_exp   go to state 78
    unary_exp       go to state 79
    unary_op        go to state 80
    binary_exp      go to state 115
    mul_binary_exp  go to state 82
    add_binary_exp  go to state 83
    cmp_binary_exp  go to state 84
    eq_binary_exp   go to state 85
    and_binary_exp  go to state 86
    xor_binary_exp  go to state 87
    or_binary_exp   go to state 88


State 265

   15 var_stmt: "var" lpattern_naked "=" • expr

    "<val_id>"               shift, and go to state 37
    "if"                     shift, and go to state 48
    "fn"                     shift, and go to state 49
    "not"                    shift, and go to state 51
    "42"                     shift, and go to state 52
    "0x2a"                   shift, and go to state 53
    "4.2"                    shift, and go to state 54
    "\"dq-string-literal\""  shift, and go to state 55
    "'sq-string-literal'"    shift, and go to state 56
    "("                      shift, and go to state 29
    "{"                      shift, and go to state 30
    "*"                      shift, and go to state 59
    "+"                      shift, and go to state 60
    "-"                      shift, and go to state 61
    "^"                      shift, and go to state 62

    vid             go to state 149
    floatl          go to state 65
    expr            go to state 313
    bracketed_exp   go to state 68
    unit_exp        go to state 32
    paren_exp       go to state 33
    vtupleExpr      go to state 34
    vstructExpr     go to state 35
    primary_exp     go to state 69
    int_expr        go to state 70
    stringls        go to state 71
    if_exp          go to state 72
    chain_exp       go to state 36
    lambda_exp      go to state 73
    postfix_exp     go to state 74
    tcall_exp       go to state 75
    vcall_exp       go to state 76
    dot_name_exp    go to state 77
    dot_index_exp   go to state 78
    unary_exp       go to state 79
    unary_op        go to state 80
    binary_exp      go to state 115
    mul_binary_exp  go to state 82
    add_binary_exp  go to state 83
    cmp_binary_exp  go to state 84
    eq_binary_exp   go to state 85
    and_binary_exp  go to state 86
    xor_binary_exp  go to state 87
    or_binary_exp   go to state 88


State 266

   16 set_stmt: "set" expr "=" • expr

    "<val_id>"               shift, and go to state 37
    "if"                     shift, and go to state 48
    "fn"                     shift, and go to state 49
    "not"                    shift, and go to state 51
    "42"                     shift, and go to state 52
    "0x2a"                   shift, and go to state 53
    "4.2"                    shift, and go to state 54
    "\"dq-string-literal\""  shift, and go to state 55
    "'sq-string-literal'"    shift, and go to state 56
    "("                      shift, and go to state 29
    "{"                      shift, and go to state 30
    "*"                      shift, and go to state 59
    "+"                      shift, and go to state 60
    "-"                      shift, and go to state 61
    "^"                      shift, and go to state 62

    vid             go to state 149
    floatl          go to state 65
    expr            go to state 314
    bracketed_exp   go to state 68
    unit_exp        go to state 32
    paren_exp       go to state 33
    vtupleExpr      go to state 34
    vstructExpr     go to state 35
    primary_exp     go to state 69
    int_expr        go to state 70
    stringls        go to state 71
    if_exp          go to state 72
    chain_exp       go to state 36
    lambda_exp      go to state 73
    postfix_exp     go to state 74
    tcall_exp       go to state 75
    vcall_exp       go to state 76
    dot_name_exp    go to state 77
    dot_index_exp   go to state 78
    unary_exp       go to state 79
    unary_op        go to state 80
    binary_exp      go to state 115
    mul_binary_exp  go to state 82
    add_binary_exp  go to state 83
    cmp_binary_exp  go to state 84
    eq_binary_exp   go to state 85
    and_binary_exp  go to state 86
    xor_binary_exp  go to state 87
    or_binary_exp   go to state 88


State 267

  175 struct_exp_field: vid "=" expr •

    $default  reduce using rule 175 (struct_exp_field)


State 268

   85 chain_prefix: chain_prefix chain_prefix_stmt ";" •

    $default  reduce using rule 85 (chain_prefix)


State 269

   83 chain_exp: "{" chain_prefix expr "}" •

    $default  reduce using rule 83 (chain_exp)


State 270

  175 struct_exp_field: vid • "=" expr

    "="  shift, and go to state 187


State 271

  198 struct_exp_field_cl: struct_exp_field_cl "," struct_exp_field •

    $default  reduce using rule 198 (struct_exp_field_cl)


State 272

   43 importStmt: "import" vid "from" stringl "type" • stringl

    "\"dq-string-literal\""  shift, and go to state 194
    "'sq-string-literal'"    shift, and go to state 195

    stringl  go to state 315


State 273

  177 vpattern_field: "out" vid • typespec

    "<val_id>"  shift, and go to state 37
    "<TypeId>"  shift, and go to state 41
    "Fn"        shift, and go to state 50
    "("         shift, and go to state 213

    tid               go to state 63
    vid               go to state 215
    typespec          go to state 316
    primary_typespec  go to state 91
    paren_typespec    go to state 92
    tuple_typespec    go to state 93
    mod_prefix_tid    go to state 94
    mod_prefix        go to state 95
    fn_typespec       go to state 96
    postfix_typespec  go to state 97
    tcall_typespec    go to state 98
    dot_typespec      go to state 99
    unary_typespec    go to state 100


State 274

  178 vpattern_field: "inout" vid • typespec

    "<val_id>"  shift, and go to state 37
    "<TypeId>"  shift, and go to state 41
    "Fn"        shift, and go to state 50
    "("         shift, and go to state 213

    tid               go to state 63
    vid               go to state 215
    typespec          go to state 317
    primary_typespec  go to state 91
    paren_typespec    go to state 92
    tuple_typespec    go to state 93
    mod_prefix_tid    go to state 94
    mod_prefix        go to state 95
    fn_typespec       go to state 96
    postfix_typespec  go to state 97
    tcall_typespec    go to state 98
    dot_typespec      go to state 99
    unary_typespec    go to state 100


State 275

  176 vpattern_field: vid typespec •

    $default  reduce using rule 176 (vpattern_field)


State 276

  192 vpattern_field_cl: vpattern_field_cl "," • vpattern_field

    "<val_id>"  shift, and go to state 37
    "out"       shift, and go to state 198
    "inout"     shift, and go to state 199

    vid             go to state 201
    vpattern_field  go to state 318


State 277

  187 vpattern: "(" vpattern_field_cl ")" •

    $default  reduce using rule 187 (vpattern)


State 278

  182 tpattern_field: tid typespec •

    $default  reduce using rule 182 (tpattern_field)


State 279

  181 tpattern_field: vid typespec •

    $default  reduce using rule 181 (tpattern_field)


State 280

  196 tpattern_field_cl: tpattern_field_cl "," • tpattern_field

    "<val_id>"  shift, and go to state 37
    "<TypeId>"  shift, and go to state 41

    tid             go to state 204
    vid             go to state 205
    tpattern_field  go to state 319


State 281

  189 tpattern: "[" tpattern_field_cl "]" •

    $default  reduce using rule 189 (tpattern)


State 282

  190 tpattern: "!" "[" tpattern_field_cl • "]"
  196 tpattern_field_cl: tpattern_field_cl • "," tpattern_field

    ","  shift, and go to state 280
    "]"  shift, and go to state 320


State 283

   26 fn_stmt: "fn" vid vpattern "->" typespec • "=" bracketed_exp

    "="  shift, and go to state 321


State 284

   28 fn_stmt: "fn" vid vpattern "=" bracketed_exp •

    $default  reduce using rule 28 (fn_stmt)


State 285

   27 fn_stmt: "fn" vid tpattern_seq vpattern "->" • typespec "=" bracketed_exp

    "<val_id>"  shift, and go to state 37
    "<TypeId>"  shift, and go to state 41
    "Fn"        shift, and go to state 50
    "("         shift, and go to state 213

    tid               go to state 63
    vid               go to state 215
    typespec          go to state 322
    primary_typespec  go to state 91
    paren_typespec    go to state 92
    tuple_typespec    go to state 93
    mod_prefix_tid    go to state 94
    mod_prefix        go to state 95
    fn_typespec       go to state 96
    postfix_typespec  go to state 97
    tcall_typespec    go to state 98
    dot_typespec      go to state 99
    unary_typespec    go to state 100


State 286

   29 fn_stmt: "fn" vid tpattern_seq vpattern "=" • bracketed_exp

    "("  shift, and go to state 29
    "{"  shift, and go to state 30

    bracketed_exp  go to state 323
    unit_exp       go to state 32
    paren_exp      go to state 33
    vtupleExpr     go to state 34
    vstructExpr    go to state 35
    chain_exp      go to state 36


State 287

  140 typespec_cl2: typespec • "," typespec
  150 paren_typespec: "(" typespec • ")"
  151 tuple_typespec: "(" typespec • "," ")"

    ","  shift, and go to state 227
    ")"  shift, and go to state 228


State 288

  142 struct_typespec_field: vid • typespec

    "<val_id>"  shift, and go to state 37
    "<TypeId>"  shift, and go to state 41
    "Fn"        shift, and go to state 50
    "("         shift, and go to state 213

    tid               go to state 63
    vid               go to state 215
    typespec          go to state 324
    primary_typespec  go to state 91
    paren_typespec    go to state 92
    tuple_typespec    go to state 93
    mod_prefix_tid    go to state 94
    mod_prefix        go to state 95
    fn_typespec       go to state 96
    postfix_typespec  go to state 97
    tcall_typespec    go to state 98
    dot_typespec      go to state 99
    unary_typespec    go to state 100


State 289

  143 struct_typespec_field_cl: struct_typespec_field •

    $default  reduce using rule 143 (struct_typespec_field_cl)


State 290

  144 struct_typespec_field_cl: struct_typespec_field_cl • "," struct_typespec_field
  165 struct_typespec: "{" struct_typespec_field_cl • "}"

    ","  shift, and go to state 325
    "}"  shift, and go to state 326


State 291

   31 type_stmt: "type" tid tpattern_seq "=" long_typespec •

    $default  reduce using rule 31 (type_stmt)


State 292

   36 unprefixed_enum_field_pl: unprefixed_enum_field_pl "|" enum_field •

    $default  reduce using rule 36 (unprefixed_enum_field_pl)


State 293

   38 enum_field: tid "(" ")" •

    $default  reduce using rule 38 (enum_field)


State 294

  138 typespec_cl1: typespec •

    $default  reduce using rule 138 (typespec_cl1)


State 295

   39 enum_field: tid "(" typespec_cl1 • ")"
  139 typespec_cl1: typespec_cl1 • "," typespec

    ","  shift, and go to state 327
    ")"  shift, and go to state 328


State 296

   40 typeclass_stmt: "typeclass" tid "<" tid typespec • ">" "=" "{" expr_sl "}"
   41               | "typeclass" tid "<" tid typespec • ">" tpattern_seq "=" "{" expr_sl "}"

    ">"  shift, and go to state 329


State 297

   79 if_exp: "if" bracketed_exp "then" bracketed_exp •
   80       | "if" bracketed_exp "then" bracketed_exp • "else" primary_exp

    "else"  shift, and go to state 330

    $default  reduce using rule 79 (if_exp)


State 298

   86 lambda_exp: "fn" vpattern "=" bracketed_exp •

    $default  reduce using rule 86 (lambda_exp)


State 299

  151 tuple_typespec: "(" typespec "," ")" •

    $default  reduce using rule 151 (tuple_typespec)


State 300

  140 typespec_cl2: typespec "," typespec •

    $default  reduce using rule 140 (typespec_cl2)


State 301

  141 typespec_cl2: typespec_cl2 "," typespec •

    $default  reduce using rule 141 (typespec_cl2)


State 302

  171 varg: "out" expr •

    $default  reduce using rule 171 (varg)


State 303

  172 varg: "inout" expr •

    $default  reduce using rule 172 (varg)


State 304

  174 varg_cl: varg_cl "," • varg

    "<val_id>"               shift, and go to state 37
    "if"                     shift, and go to state 48
    "fn"                     shift, and go to state 49
    "not"                    shift, and go to state 51
    "out"                    shift, and go to state 238
    "inout"                  shift, and go to state 239
    "42"                     shift, and go to state 52
    "0x2a"                   shift, and go to state 53
    "4.2"                    shift, and go to state 54
    "\"dq-string-literal\""  shift, and go to state 55
    "'sq-string-literal'"    shift, and go to state 56
    "("                      shift, and go to state 29
    "{"                      shift, and go to state 30
    "*"                      shift, and go to state 59
    "+"                      shift, and go to state 60
    "-"                      shift, and go to state 61
    "^"                      shift, and go to state 62

    vid             go to state 149
    floatl          go to state 65
    expr            go to state 241
    bracketed_exp   go to state 68
    unit_exp        go to state 32
    paren_exp       go to state 33
    vtupleExpr      go to state 34
    vstructExpr     go to state 35
    primary_exp     go to state 69
    int_expr        go to state 70
    stringls        go to state 71
    if_exp          go to state 72
    chain_exp       go to state 36
    lambda_exp      go to state 73
    postfix_exp     go to state 74
    tcall_exp       go to state 75
    vcall_exp       go to state 76
    dot_name_exp    go to state 77
    dot_index_exp   go to state 78
    unary_exp       go to state 79
    unary_op        go to state 80
    binary_exp      go to state 115
    mul_binary_exp  go to state 82
    add_binary_exp  go to state 83
    cmp_binary_exp  go to state 84
    eq_binary_exp   go to state 85
    and_binary_exp  go to state 86
    xor_binary_exp  go to state 87
    or_binary_exp   go to state 88
    varg            go to state 331


State 305

   94 vcall_exp: postfix_exp "(" varg_cl ")" •

    $default  reduce using rule 94 (vcall_exp)


State 306

  169 targ_cl: targ_cl "," • targ

    "<val_id>"               shift, and go to state 37
    "<TypeId>"               shift, and go to state 41
    "if"                     shift, and go to state 48
    "fn"                     shift, and go to state 49
    "Fn"                     shift, and go to state 50
    "not"                    shift, and go to state 51
    "42"                     shift, and go to state 52
    "0x2a"                   shift, and go to state 53
    "4.2"                    shift, and go to state 54
    "\"dq-string-literal\""  shift, and go to state 55
    "'sq-string-literal'"    shift, and go to state 56
    "("                      shift, and go to state 57
    "{"                      shift, and go to state 30
    "*"                      shift, and go to state 59
    "+"                      shift, and go to state 60
    "-"                      shift, and go to state 61
    "^"                      shift, and go to state 62

    tid               go to state 63
    vid               go to state 64
    floatl            go to state 65
    expr              go to state 244
    bracketed_exp     go to state 68
    unit_exp          go to state 32
    paren_exp         go to state 33
    vtupleExpr        go to state 34
    vstructExpr       go to state 35
    primary_exp       go to state 69
    int_expr          go to state 70
    stringls          go to state 71
    if_exp            go to state 72
    chain_exp         go to state 36
    lambda_exp        go to state 73
    postfix_exp       go to state 74
    tcall_exp         go to state 75
    vcall_exp         go to state 76
    dot_name_exp      go to state 77
    dot_index_exp     go to state 78
    unary_exp         go to state 79
    unary_op          go to state 80
    binary_exp        go to state 115
    mul_binary_exp    go to state 82
    add_binary_exp    go to state 83
    cmp_binary_exp    go to state 84
    eq_binary_exp     go to state 85
    and_binary_exp    go to state 86
    xor_binary_exp    go to state 87
    or_binary_exp     go to state 88
    typespec          go to state 245
    primary_typespec  go to state 91
    paren_typespec    go to state 92
    tuple_typespec    go to state 93
    mod_prefix_tid    go to state 94
    mod_prefix        go to state 95
    fn_typespec       go to state 96
    postfix_typespec  go to state 97
    tcall_typespec    go to state 98
    dot_typespec      go to state 99
    unary_typespec    go to state 100
    targ              go to state 332


State 307

   92 tcall_exp: postfix_exp "[" targ_cl "]" •

    $default  reduce using rule 92 (tcall_exp)


State 308

  160 tcall_typespec: postfix_typespec "[" targ_cl "]" •

    $default  reduce using rule 160 (tcall_typespec)


State 309

  194 lpattern_field_cl: lpattern_field_cl "," • lpattern_field

    "<val_id>"  shift, and go to state 37

    vid             go to state 179
    lpattern_field  go to state 333


State 310

  183 lpattern: "(" lpattern_field_cl ")" •

    $default  reduce using rule 183 (lpattern)


State 311

   13 const_stmt: "const" lpattern_naked "=" expr •

    $default  reduce using rule 13 (const_stmt)


State 312

   14 val_stmt: "val" lpattern_naked "=" expr •

    $default  reduce using rule 14 (val_stmt)


State 313

   15 var_stmt: "var" lpattern_naked "=" expr •

    $default  reduce using rule 15 (var_stmt)


State 314

   16 set_stmt: "set" expr "=" expr •

    $default  reduce using rule 16 (set_stmt)


State 315

   43 importStmt: "import" vid "from" stringl "type" stringl •

    $default  reduce using rule 43 (importStmt)


State 316

  177 vpattern_field: "out" vid typespec •

    $default  reduce using rule 177 (vpattern_field)


State 317

  178 vpattern_field: "inout" vid typespec •

    $default  reduce using rule 178 (vpattern_field)


State 318

  192 vpattern_field_cl: vpattern_field_cl "," vpattern_field •

    $default  reduce using rule 192 (vpattern_field_cl)


State 319

  196 tpattern_field_cl: tpattern_field_cl "," tpattern_field •

    $default  reduce using rule 196 (tpattern_field_cl)


State 320

  190 tpattern: "!" "[" tpattern_field_cl "]" •

    $default  reduce using rule 190 (tpattern)


State 321

   26 fn_stmt: "fn" vid vpattern "->" typespec "=" • bracketed_exp

    "("  shift, and go to state 29
    "{"  shift, and go to state 30

    bracketed_exp  go to state 334
    unit_exp       go to state 32
    paren_exp      go to state 33
    vtupleExpr     go to state 34
    vstructExpr    go to state 35
    chain_exp      go to state 36


State 322

   27 fn_stmt: "fn" vid tpattern_seq vpattern "->" typespec • "=" bracketed_exp

    "="  shift, and go to state 335


State 323

   29 fn_stmt: "fn" vid tpattern_seq vpattern "=" bracketed_exp •

    $default  reduce using rule 29 (fn_stmt)


State 324

  142 struct_typespec_field: vid typespec •

    $default  reduce using rule 142 (struct_typespec_field)


State 325

  144 struct_typespec_field_cl: struct_typespec_field_cl "," • struct_typespec_field

    "<val_id>"  shift, and go to state 37

    vid                    go to state 288
    struct_typespec_field  go to state 336


State 326

  165 struct_typespec: "{" struct_typespec_field_cl "}" •

    $default  reduce using rule 165 (struct_typespec)


State 327

  139 typespec_cl1: typespec_cl1 "," • typespec

    "<val_id>"  shift, and go to state 37
    "<TypeId>"  shift, and go to state 41
    "Fn"        shift, and go to state 50
    "("         shift, and go to state 213

    tid               go to state 63
    vid               go to state 215
    typespec          go to state 337
    primary_typespec  go to state 91
    paren_typespec    go to state 92
    tuple_typespec    go to state 93
    mod_prefix_tid    go to state 94
    mod_prefix        go to state 95
    fn_typespec       go to state 96
    postfix_typespec  go to state 97
    tcall_typespec    go to state 98
    dot_typespec      go to state 99
    unary_typespec    go to state 100


State 328

   39 enum_field: tid "(" typespec_cl1 ")" •

    $default  reduce using rule 39 (enum_field)


State 329

   40 typeclass_stmt: "typeclass" tid "<" tid typespec ">" • "=" "{" expr_sl "}"
   41               | "typeclass" tid "<" tid typespec ">" • tpattern_seq "=" "{" expr_sl "}"

    "["  shift, and go to state 121
    "="  shift, and go to state 338
    "!"  shift, and go to state 122

    tpattern      go to state 124
    tpattern_seq  go to state 339


State 330

   80 if_exp: "if" bracketed_exp "then" bracketed_exp "else" • primary_exp

    "<val_id>"               shift, and go to state 37
    "if"                     shift, and go to state 48
    "fn"                     shift, and go to state 49
    "42"                     shift, and go to state 52
    "0x2a"                   shift, and go to state 53
    "4.2"                    shift, and go to state 54
    "\"dq-string-literal\""  shift, and go to state 55
    "'sq-string-literal'"    shift, and go to state 56
    "("                      shift, and go to state 29
    "{"                      shift, and go to state 30

    vid            go to state 149
    floatl         go to state 65
    bracketed_exp  go to state 68
    unit_exp       go to state 32
    paren_exp      go to state 33
    vtupleExpr     go to state 34
    vstructExpr    go to state 35
    primary_exp    go to state 340
    int_expr       go to state 70
    stringls       go to state 71
    if_exp         go to state 72
    chain_exp      go to state 36
    lambda_exp     go to state 73


State 331

  174 varg_cl: varg_cl "," varg •

    $default  reduce using rule 174 (varg_cl)


State 332

  169 targ_cl: targ_cl "," targ •

    $default  reduce using rule 169 (targ_cl)


State 333

  194 lpattern_field_cl: lpattern_field_cl "," lpattern_field •

    $default  reduce using rule 194 (lpattern_field_cl)


State 334

   26 fn_stmt: "fn" vid vpattern "->" typespec "=" bracketed_exp •

    $default  reduce using rule 26 (fn_stmt)


State 335

   27 fn_stmt: "fn" vid tpattern_seq vpattern "->" typespec "=" • bracketed_exp

    "("  shift, and go to state 29
    "{"  shift, and go to state 30

    bracketed_exp  go to state 341
    unit_exp       go to state 32
    paren_exp      go to state 33
    vtupleExpr     go to state 34
    vstructExpr    go to state 35
    chain_exp      go to state 36


State 336

  144 struct_typespec_field_cl: struct_typespec_field_cl "," struct_typespec_field •

    $default  reduce using rule 144 (struct_typespec_field_cl)


State 337

  139 typespec_cl1: typespec_cl1 "," typespec •

    $default  reduce using rule 139 (typespec_cl1)


State 338

   40 typeclass_stmt: "typeclass" tid "<" tid typespec ">" "=" • "{" expr_sl "}"

    "{"  shift, and go to state 342


State 339

   41 typeclass_stmt: "typeclass" tid "<" tid typespec ">" tpattern_seq • "=" "{" expr_sl "}"
  200 tpattern_seq: tpattern_seq • tpattern

    "["  shift, and go to state 121
    "="  shift, and go to state 343
    "!"  shift, and go to state 122

    tpattern  go to state 212


State 340

   80 if_exp: "if" bracketed_exp "then" bracketed_exp "else" primary_exp •

    $default  reduce using rule 80 (if_exp)


State 341

   27 fn_stmt: "fn" vid tpattern_seq vpattern "->" typespec "=" bracketed_exp •

    $default  reduce using rule 27 (fn_stmt)


State 342

   40 typeclass_stmt: "typeclass" tid "<" tid typespec ">" "=" "{" • expr_sl "}"

    "<val_id>"               shift, and go to state 37
    "if"                     shift, and go to state 48
    "fn"                     shift, and go to state 49
    "not"                    shift, and go to state 51
    "42"                     shift, and go to state 52
    "0x2a"                   shift, and go to state 53
    "4.2"                    shift, and go to state 54
    "\"dq-string-literal\""  shift, and go to state 55
    "'sq-string-literal'"    shift, and go to state 56
    "("                      shift, and go to state 29
    "{"                      shift, and go to state 30
    "*"                      shift, and go to state 59
    "+"                      shift, and go to state 60
    "-"                      shift, and go to state 61
    "^"                      shift, and go to state 62

    vid             go to state 149
    floatl          go to state 65
    expr            go to state 344
    expr_sl         go to state 345
    bracketed_exp   go to state 68
    unit_exp        go to state 32
    paren_exp       go to state 33
    vtupleExpr      go to state 34
    vstructExpr     go to state 35
    primary_exp     go to state 69
    int_expr        go to state 70
    stringls        go to state 71
    if_exp          go to state 72
    chain_exp       go to state 36
    lambda_exp      go to state 73
    postfix_exp     go to state 74
    tcall_exp       go to state 75
    vcall_exp       go to state 76
    dot_name_exp    go to state 77
    dot_index_exp   go to state 78
    unary_exp       go to state 79
    unary_op        go to state 80
    binary_exp      go to state 115
    mul_binary_exp  go to state 82
    add_binary_exp  go to state 83
    cmp_binary_exp  go to state 84
    eq_binary_exp   go to state 85
    and_binary_exp  go to state 86
    xor_binary_exp  go to state 87
    or_binary_exp   go to state 88


State 343

   41 typeclass_stmt: "typeclass" tid "<" tid typespec ">" tpattern_seq "=" • "{" expr_sl "}"

    "{"  shift, and go to state 346


State 344

   53 expr_sl: expr • ";"

    ";"  shift, and go to state 347


State 345

   40 typeclass_stmt: "typeclass" tid "<" tid typespec ">" "=" "{" expr_sl • "}"
   54 expr_sl: expr_sl • expr ";"

    "<val_id>"               shift, and go to state 37
    "if"                     shift, and go to state 48
    "fn"                     shift, and go to state 49
    "not"                    shift, and go to state 51
    "42"                     shift, and go to state 52
    "0x2a"                   shift, and go to state 53
    "4.2"                    shift, and go to state 54
    "\"dq-string-literal\""  shift, and go to state 55
    "'sq-string-literal'"    shift, and go to state 56
    "("                      shift, and go to state 29
    "{"                      shift, and go to state 30
    "}"                      shift, and go to state 348
    "*"                      shift, and go to state 59
    "+"                      shift, and go to state 60
    "-"                      shift, and go to state 61
    "^"                      shift, and go to state 62

    vid             go to state 149
    floatl          go to state 65
    expr            go to state 349
    bracketed_exp   go to state 68
    unit_exp        go to state 32
    paren_exp       go to state 33
    vtupleExpr      go to state 34
    vstructExpr     go to state 35
    primary_exp     go to state 69
    int_expr        go to state 70
    stringls        go to state 71
    if_exp          go to state 72
    chain_exp       go to state 36
    lambda_exp      go to state 73
    postfix_exp     go to state 74
    tcall_exp       go to state 75
    vcall_exp       go to state 76
    dot_name_exp    go to state 77
    dot_index_exp   go to state 78
    unary_exp       go to state 79
    unary_op        go to state 80
    binary_exp      go to state 115
    mul_binary_exp  go to state 82
    add_binary_exp  go to state 83
    cmp_binary_exp  go to state 84
    eq_binary_exp   go to state 85
    and_binary_exp  go to state 86
    xor_binary_exp  go to state 87
    or_binary_exp   go to state 88


State 346

   41 typeclass_stmt: "typeclass" tid "<" tid typespec ">" tpattern_seq "=" "{" • expr_sl "}"

    "<val_id>"               shift, and go to state 37
    "if"                     shift, and go to state 48
    "fn"                     shift, and go to state 49
    "not"                    shift, and go to state 51
    "42"                     shift, and go to state 52
    "0x2a"                   shift, and go to state 53
    "4.2"                    shift, and go to state 54
    "\"dq-string-literal\""  shift, and go to state 55
    "'sq-string-literal'"    shift, and go to state 56
    "("                      shift, and go to state 29
    "{"                      shift, and go to state 30
    "*"                      shift, and go to state 59
    "+"                      shift, and go to state 60
    "-"                      shift, and go to state 61
    "^"                      shift, and go to state 62

    vid             go to state 149
    floatl          go to state 65
    expr            go to state 344
    expr_sl         go to state 350
    bracketed_exp   go to state 68
    unit_exp        go to state 32
    paren_exp       go to state 33
    vtupleExpr      go to state 34
    vstructExpr     go to state 35
    primary_exp     go to state 69
    int_expr        go to state 70
    stringls        go to state 71
    if_exp          go to state 72
    chain_exp       go to state 36
    lambda_exp      go to state 73
    postfix_exp     go to state 74
    tcall_exp       go to state 75
    vcall_exp       go to state 76
    dot_name_exp    go to state 77
    dot_index_exp   go to state 78
    unary_exp       go to state 79
    unary_op        go to state 80
    binary_exp      go to state 115
    mul_binary_exp  go to state 82
    add_binary_exp  go to state 83
    cmp_binary_exp  go to state 84
    eq_binary_exp   go to state 85
    and_binary_exp  go to state 86
    xor_binary_exp  go to state 87
    or_binary_exp   go to state 88


State 347

   53 expr_sl: expr ";" •

    $default  reduce using rule 53 (expr_sl)


State 348

   40 typeclass_stmt: "typeclass" tid "<" tid typespec ">" "=" "{" expr_sl "}" •

    $default  reduce using rule 40 (typeclass_stmt)


State 349

   54 expr_sl: expr_sl expr • ";"

    ";"  shift, and go to state 351


State 350

   41 typeclass_stmt: "typeclass" tid "<" tid typespec ">" tpattern_seq "=" "{" expr_sl • "}"
   54 expr_sl: expr_sl • expr ";"

    "<val_id>"               shift, and go to state 37
    "if"                     shift, and go to state 48
    "fn"                     shift, and go to state 49
    "not"                    shift, and go to state 51
    "42"                     shift, and go to state 52
    "0x2a"                   shift, and go to state 53
    "4.2"                    shift, and go to state 54
    "\"dq-string-literal\""  shift, and go to state 55
    "'sq-string-literal'"    shift, and go to state 56
    "("                      shift, and go to state 29
    "{"                      shift, and go to state 30
    "}"                      shift, and go to state 352
    "*"                      shift, and go to state 59
    "+"                      shift, and go to state 60
    "-"                      shift, and go to state 61
    "^"                      shift, and go to state 62

    vid             go to state 149
    floatl          go to state 65
    expr            go to state 349
    bracketed_exp   go to state 68
    unit_exp        go to state 32
    paren_exp       go to state 33
    vtupleExpr      go to state 34
    vstructExpr     go to state 35
    primary_exp     go to state 69
    int_expr        go to state 70
    stringls        go to state 71
    if_exp          go to state 72
    chain_exp       go to state 36
    lambda_exp      go to state 73
    postfix_exp     go to state 74
    tcall_exp       go to state 75
    vcall_exp       go to state 76
    dot_name_exp    go to state 77
    dot_index_exp   go to state 78
    unary_exp       go to state 79
    unary_op        go to state 80
    binary_exp      go to state 115
    mul_binary_exp  go to state 82
    add_binary_exp  go to state 83
    cmp_binary_exp  go to state 84
    eq_binary_exp   go to state 85
    and_binary_exp  go to state 86
    xor_binary_exp  go to state 87
    or_binary_exp   go to state 88


State 351

   54 expr_sl: expr_sl expr ";" •

    $default  reduce using rule 54 (expr_sl)


State 352

   41 typeclass_stmt: "typeclass" tid "<" tid typespec ">" tpattern_seq "=" "{" expr_sl "}" •

    $default  reduce using rule 41 (typeclass_stmt)
